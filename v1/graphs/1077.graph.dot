digraph G {
"program-repair/RepairThemAll" -> "program-repair/RepairThemAll_experiment"
"program-repair/RepairThemAll" -> "lin-tan/CoCoNut-Artifact"
"program-repair/RepairThemAll" -> "program-repair/defects4j-dissection"
"program-repair/RepairThemAll" -> "program-repair/program-repair.github.io"
"ripsscanner/rips" -> "robocoder/rips-scanner"
"ripsscanner/rips" -> "oliverklee/pixy"
"bdqnghi/graph-ast" -> "bdqnghi/ggnn.tensorflow"
"deepmind/code_contests" -> "openai/human-eval"
"deepmind/code_contests" -> "microsoft/CodeXGLUE"
"deepmind/code_contests" -> "salesforce/CodeT5"
"deepmind/code_contests" -> "salesforce/CodeGen" ["e"=1]
"deepmind/code_contests" -> "microsoft/CodeBERT"
"deepmind/code_contests" -> "VHellendoorn/Code-LMs"
"deepmind/code_contests" -> "hendrycks/apps"
"deepmind/code_contests" -> "facebookresearch/CodeGen"
"deepmind/code_contests" -> "IBM/Project_CodeNet"
"deepmind/code_contests" -> "github/CodeSearchNet"
"deepmind/code_contests" -> "salesforce/CodeRL"
"deepmind/code_contests" -> "google-research/FLAN" ["e"=1]
"deepmind/code_contests" -> "facebookresearch/metaseq" ["e"=1]
"deepmind/code_contests" -> "EleutherAI/the-pile" ["e"=1]
"deepmind/code_contests" -> "CarperAI/trlx" ["e"=1]
"VHellendoorn/Code-LMs" -> "salesforce/CodeT5"
"VHellendoorn/Code-LMs" -> "microsoft/CodeXGLUE"
"VHellendoorn/Code-LMs" -> "salesforce/CodeGen" ["e"=1]
"VHellendoorn/Code-LMs" -> "microsoft/CodeBERT"
"VHellendoorn/Code-LMs" -> "openai/human-eval"
"VHellendoorn/Code-LMs" -> "salesforce/CodeRL"
"VHellendoorn/Code-LMs" -> "dpfried/incoder"
"VHellendoorn/Code-LMs" -> "wasiahmad/PLBART"
"VHellendoorn/Code-LMs" -> "facebookresearch/CodeGen"
"VHellendoorn/Code-LMs" -> "github/CodeSearchNet"
"VHellendoorn/Code-LMs" -> "deepmind/code_contests"
"VHellendoorn/Code-LMs" -> "hendrycks/apps"
"VHellendoorn/Code-LMs" -> "CGCL-codes/naturalcc"
"VHellendoorn/Code-LMs" -> "IBM/Project_CodeNet"
"VHellendoorn/Code-LMs" -> "EleutherAI/the-pile" ["e"=1]
"CGCL-codes/VulDeePecker" -> "SySeVR/SySeVR"
"CGCL-codes/VulDeePecker" -> "johnb110/VDPython"
"CGCL-codes/VulDeePecker" -> "VulDetProject/ReVeal"
"CGCL-codes/VulDeePecker" -> "epicosy/devign"
"CGCL-codes/VulDeePecker" -> "HuantWang/FUNDED_NISL"
"CGCL-codes/VulDeePecker" -> "ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset"
"CGCL-codes/VulDeePecker" -> "DanielLin1986/Function-level-Vulnerability-Detection"
"CGCL-codes/VulDeePecker" -> "vulpecker/Vulpecker"
"CGCL-codes/VulDeePecker" -> "Seahymn2019/Function-level-Vulnerability-Dataset"
"CGCL-codes/VulDeePecker" -> "VulDeeLocator/VulDeeLocator"
"CGCL-codes/VulDeePecker" -> "muVulDeePecker/muVulDeePecker"
"CGCL-codes/VulDeePecker" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"CGCL-codes/VulDeePecker" -> "LauraWartschinski/VulnerabilityDetection"
"CGCL-codes/VulDeePecker" -> "ICL-ml4csec/VulBERTa"
"CGCL-codes/VulDeePecker" -> "daiquocnguyen/GNN-ReGVD"
"DanielLin1986/Function-level-Vulnerability-Detection" -> "Seahymn2019/Function-level-Vulnerability-Dataset"
"DanielLin1986/Function-level-Vulnerability-Detection" -> "DanielLin1986/function_representation_learning"
"DanielLin1986/Function-level-Vulnerability-Detection" -> "DanielLin1986/Data-Driven_Software_Vulnerability_Discovery"
"DanielLin1986/Function-level-Vulnerability-Detection" -> "ICL-ml4csec/VulBERTa"
"DanielLin1986/Function-level-Vulnerability-Detection" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"EdinburghNLP/code-docstring-corpus" -> "xing-hu/TL-CodeSum"
"EdinburghNLP/code-docstring-corpus" -> "sriniiyer/codenn"
"EdinburghNLP/code-docstring-corpus" -> "wasiahmad/NeuralCodeSum"
"EdinburghNLP/code-docstring-corpus" -> "LittleYUYU/StackOverflow-Question-Code-Dataset"
"EdinburghNLP/code-docstring-corpus" -> "microsoft/graph-based-code-modelling"
"EdinburghNLP/code-docstring-corpus" -> "tech-srl/code2seq"
"EdinburghNLP/code-docstring-corpus" -> "uclnlp/pycodesuggest"
"EdinburghNLP/code-docstring-corpus" -> "conala-corpus/conala-baseline"
"EdinburghNLP/code-docstring-corpus" -> "wanyao1992/code_summarization_public"
"EdinburghNLP/code-docstring-corpus" -> "xing-hu/DeepCom"
"EdinburghNLP/code-docstring-corpus" -> "acleclair/ICPC2020_GNN"
"EdinburghNLP/code-docstring-corpus" -> "sriniiyer/concode"
"EdinburghNLP/code-docstring-corpus" -> "CoderPat/structured-neural-summarization"
"SySeVR/SySeVR" -> "CGCL-codes/VulDeePecker"
"SySeVR/SySeVR" -> "johnb110/VDPython"
"SySeVR/SySeVR" -> "epicosy/devign"
"SySeVR/SySeVR" -> "VulDeeLocator/VulDeeLocator"
"SySeVR/SySeVR" -> "VulDetProject/ReVeal"
"SySeVR/SySeVR" -> "DanielLin1986/Function-level-Vulnerability-Detection"
"SySeVR/SySeVR" -> "HuantWang/FUNDED_NISL"
"SySeVR/SySeVR" -> "saikat107/Devign"
"SySeVR/SySeVR" -> "DanielLin1986/function_representation_learning"
"SySeVR/SySeVR" -> "ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset"
"SySeVR/SySeVR" -> "muVulDeePecker/muVulDeePecker"
"SySeVR/SySeVR" -> "Seahymn2019/Function-level-Vulnerability-Dataset"
"SySeVR/SySeVR" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"SySeVR/SySeVR" -> "VulDeePecker/Comparative_Study"
"SySeVR/SySeVR" -> "DanielLin1986/TransferRepresentationLearning"
"VulDetProject/ReVeal" -> "saikat107/Devign"
"VulDetProject/ReVeal" -> "epicosy/devign"
"VulDetProject/ReVeal" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"VulDetProject/ReVeal" -> "VulDeeLocator/VulDeeLocator"
"VulDetProject/ReVeal" -> "ICL-ml4csec/VulBERTa"
"VulDetProject/ReVeal" -> "ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset"
"VulDetProject/ReVeal" -> "johnb110/VDPython"
"VulDetProject/ReVeal" -> "SySeVR/SySeVR"
"VulDetProject/ReVeal" -> "davidhin/linevd"
"VulDetProject/ReVeal" -> "daiquocnguyen/GNN-ReGVD"
"VulDetProject/ReVeal" -> "DanielLin1986/Function-level-Vulnerability-Detection"
"VulDetProject/ReVeal" -> "HuantWang/FUNDED_NISL"
"VulDetProject/ReVeal" -> "awsm-research/LineVul"
"ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset" -> "VulDetProject/ReVeal"
"ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset" -> "epicosy/devign"
"ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset" -> "davidhin/linevd"
"ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset" -> "saikat107/Devign"
"ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset" -> "VulDeeLocator/VulDeeLocator"
"ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset" -> "ICL-ml4csec/VulBERTa"
"ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset" -> "MVDetection/MVD"
"epicosy/devign" -> "saikat107/Devign"
"epicosy/devign" -> "VulDetProject/ReVeal"
"epicosy/devign" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"epicosy/devign" -> "SySeVR/SySeVR"
"epicosy/devign" -> "HuantWang/FUNDED_NISL"
"epicosy/devign" -> "johnb110/VDPython"
"epicosy/devign" -> "VulDeeLocator/VulDeeLocator"
"epicosy/devign" -> "ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset"
"epicosy/devign" -> "awsm-research/LineVul"
"epicosy/devign" -> "daiquocnguyen/GNN-ReGVD"
"epicosy/devign" -> "ICL-ml4csec/VulBERTa"
"epicosy/devign" -> "davidhin/linevd"
"epicosy/devign" -> "DeepWukong/DeepWukong"
"epicosy/devign" -> "CGCL-codes/VulDeePecker"
"epicosy/devign" -> "DanielLin1986/Function-level-Vulnerability-Detection"
"guxd/deep-code-search" -> "sriniiyer/codenn"
"guxd/deep-code-search" -> "LittleYUYU/StackOverflow-Question-Code-Dataset"
"guxd/deep-code-search" -> "tech-srl/code2seq"
"guxd/deep-code-search" -> "facebookresearch/Neural-Code-Search-Evaluation-Dataset"
"guxd/deep-code-search" -> "hamelsmu/code_search"
"guxd/deep-code-search" -> "wasiahmad/NeuralCodeSum"
"guxd/deep-code-search" -> "guxd/deepAPI"
"guxd/deep-code-search" -> "xing-hu/EMSE-DeepCom"
"guxd/deep-code-search" -> "tech-srl/code2vec"
"guxd/deep-code-search" -> "wanyao1992/code_summarization_public"
"guxd/deep-code-search" -> "zhangj111/astnn"
"guxd/deep-code-search" -> "EdinburghNLP/code-docstring-corpus"
"guxd/deep-code-search" -> "github/CodeSearchNet"
"guxd/deep-code-search" -> "xing-hu/TL-CodeSum"
"guxd/deep-code-search" -> "c2nes/javalang"
"ishepard/pydriller" -> "tsantalis/RefactoringMiner"
"ishepard/pydriller" -> "mauricioaniche/repodriller"
"ishepard/pydriller" -> "dspinellis/awesome-msr"
"ishepard/pydriller" -> "aserg-ufmg/RefDiff"
"ishepard/pydriller" -> "acmsigsoft/EmpiricalStandards"
"ishepard/pydriller" -> "GumTreeDiff/gumtree"
"ishepard/pydriller" -> "mauricioaniche/ck"
"ishepard/pydriller" -> "tsantalis/JDeodorant"
"ishepard/pydriller" -> "c2nes/javalang"
"ishepard/pydriller" -> "ckaestne/seaibib"
"ishepard/pydriller" -> "RepoReapers/reaper"
"ishepard/pydriller" -> "SMAT-Lab/Scalpel" ["e"=1]
"ishepard/pydriller" -> "bvasiles/empirical-methods"
"ishepard/pydriller" -> "rjust/defects4j"
"ishepard/pydriller" -> "ml4code/ml4code.github.io"
"octopus-platform/joern" -> "ShiftLeftSecurity/joern"
"octopus-platform/joern" -> "ShiftLeftSecurity/codepropertygraph"
"octopus-platform/joern" -> "DanielLin1986/Function-level-Vulnerability-Detection"
"octopus-platform/joern" -> "aalhuz/navex"
"octopus-platform/joern" -> "ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset"
"octopus-platform/joern" -> "CGCL-codes/VulDeePecker"
"octopus-platform/joern" -> "malteskoruppa/phpjoern"
"octopus-platform/joern" -> "Fraunhofer-AISEC/cpg"
"sriniiyer/codenn" -> "xing-hu/TL-CodeSum"
"sriniiyer/codenn" -> "tech-srl/code2seq"
"sriniiyer/codenn" -> "EdinburghNLP/code-docstring-corpus"
"sriniiyer/codenn" -> "wanyao1992/code_summarization_public"
"sriniiyer/codenn" -> "guxd/deep-code-search"
"sriniiyer/codenn" -> "wasiahmad/NeuralCodeSum"
"sriniiyer/codenn" -> "xing-hu/EMSE-DeepCom"
"sriniiyer/codenn" -> "mast-group/convolutional-attention"
"sriniiyer/codenn" -> "acleclair/ICPC2020_GNN"
"sriniiyer/codenn" -> "liang2024086/code_comment_generation"
"sriniiyer/codenn" -> "xing-hu/DeepCom"
"sriniiyer/codenn" -> "microsoft/graph-based-code-modelling"
"sriniiyer/codenn" -> "facebookresearch/Neural-Code-Search-Evaluation-Dataset"
"sriniiyer/codenn" -> "danielzuegner/code-transformer"
"sriniiyer/codenn" -> "LittleYUYU/StackOverflow-Question-Code-Dataset"
"vulnerabilitydetection/VulnerabilityDetectionResearch" -> "davidhin/linevd"
"vulnerabilitydetection/VulnerabilityDetectionResearch" -> "ICL-ml4csec/VulBERTa"
"vulnerabilitydetection/VulnerabilityDetectionResearch" -> "VulDetProject/ReVeal"
"vulnerabilitydetection/VulnerabilityDetectionResearch" -> "epicosy/devign"
"vulnerabilitydetection/VulnerabilityDetectionResearch" -> "MVDetection/MVD"
"wasiahmad/NeuralCodeSum" -> "acleclair/ICPC2020_GNN"
"wasiahmad/NeuralCodeSum" -> "xing-hu/EMSE-DeepCom"
"wasiahmad/NeuralCodeSum" -> "wanyao1992/code_summarization_public"
"wasiahmad/NeuralCodeSum" -> "code-gen/cscg"
"wasiahmad/NeuralCodeSum" -> "zhangj111/rencos"
"wasiahmad/NeuralCodeSum" -> "tech-srl/code2seq"
"wasiahmad/NeuralCodeSum" -> "xing-hu/TL-CodeSum"
"wasiahmad/NeuralCodeSum" -> "EdinburghNLP/code-docstring-corpus"
"wasiahmad/NeuralCodeSum" -> "sh1doy/summarization_tf"
"wasiahmad/NeuralCodeSum" -> "CoderPat/structured-neural-summarization"
"wasiahmad/NeuralCodeSum" -> "VHellendoorn/ICLR20-Great"
"wasiahmad/NeuralCodeSum" -> "NougatCA/SPT-Code"
"wasiahmad/NeuralCodeSum" -> "mcmillco/funcom"
"wasiahmad/NeuralCodeSum" -> "sriniiyer/codenn"
"wasiahmad/NeuralCodeSum" -> "zetang94/ICSE2022_AST_Trans"
"ShiftLeftSecurity/joern" -> "ShiftLeftSecurity/codepropertygraph"
"ShiftLeftSecurity/joern" -> "octopus-platform/joern"
"ShiftLeftSecurity/joern" -> "SySeVR/SySeVR"
"ShiftLeftSecurity/joern" -> "ShiftLeftSecurity/overflowdb"
"ShiftLeftSecurity/joern" -> "JetBrains-Research/astminer"
"ShiftLeftSecurity/joern" -> "fabsx00/python-joern" ["e"=1]
"ShiftLeftSecurity/joern" -> "Fraunhofer-AISEC/cpg"
"ShiftLeftSecurity/joern" -> "eurecom-s3/symcc" ["e"=1]
"ShiftLeftSecurity/joern" -> "trailofbits/polytracker" ["e"=1]
"ShiftLeftSecurity/joern" -> "johnb110/VDPython"
"ShiftLeftSecurity/joern" -> "epicosy/devign"
"ShiftLeftSecurity/joern" -> "fengjixuchui/FuzzingPaper" ["e"=1]
"ShiftLeftSecurity/joern" -> "PLSysSec/sys" ["e"=1]
"ShiftLeftSecurity/joern" -> "DanielLin1986/Function-level-Vulnerability-Detection"
"ShiftLeftSecurity/joern" -> "VulDeePecker/Comparative_Study"
"INRIA/spoon" -> "javaparser/javaparser" ["e"=1]
"INRIA/spoon" -> "SpoonLabs/gumtree-spoon-ast-diff"
"INRIA/spoon" -> "SpoonLabs/spoon-examples"
"INRIA/spoon" -> "wala/WALA" ["e"=1]
"INRIA/spoon" -> "GumTreeDiff/gumtree"
"INRIA/spoon" -> "rjust/defects4j"
"INRIA/spoon" -> "soot-oss/soot" ["e"=1]
"INRIA/spoon" -> "SpoonLabs/astor"
"INRIA/spoon" -> "Sable/soot" ["e"=1]
"INRIA/spoon" -> "classgraph/classgraph" ["e"=1]
"INRIA/spoon" -> "forge/roaster" ["e"=1]
"INRIA/spoon" -> "tsantalis/RefactoringMiner"
"INRIA/spoon" -> "randoop/randoop"
"INRIA/spoon" -> "raphw/byte-buddy" ["e"=1]
"INRIA/spoon" -> "spotbugs/spotbugs" ["e"=1]
"dpfried/incoder" -> "salesforce/CodeRL"
"SE-ML/awesome-seml" -> "ckaestne/seaibib"
"SE-ML/awesome-seml" -> "dspinellis/awesome-msr"
"SE-ML/awesome-seml" -> "kelvins/awesome-mlops" ["e"=1]
"SE-ML/awesome-seml" -> "visenger/awesome-mlops" ["e"=1]
"SE-ML/awesome-seml" -> "georgezouq/awesome-ai-in-finance" ["e"=1]
"SE-ML/awesome-seml" -> "ishepard/pydriller"
"SE-ML/awesome-seml" -> "dair-ai/nlp_paper_summaries" ["e"=1]
"SE-ML/awesome-seml" -> "krzjoa/awesome-python-data-science" ["e"=1]
"SE-ML/awesome-seml" -> "EthicalML/awesome-artificial-intelligence-guidelines" ["e"=1]
"SE-ML/awesome-seml" -> "alirezadir/Production-Level-Deep-Learning" ["e"=1]
"SE-ML/awesome-seml" -> "zenml-io/zenml" ["e"=1]
"SE-ML/awesome-seml" -> "amitness/toolbox"
"SE-ML/awesome-seml" -> "neomatrix369/awesome-ai-ml-dl" ["e"=1]
"SE-ML/awesome-seml" -> "chris-chris/ml-engineer-roadmap" ["e"=1]
"SE-ML/awesome-seml" -> "davified/clean-code-ml" ["e"=1]
"facebookresearch/TransCoder" -> "facebookresearch/CodeGen"
"facebookresearch/TransCoder" -> "linkedin/detext" ["e"=1]
"facebookresearch/TransCoder" -> "microsoft/CodeXGLUE"
"facebookresearch/TransCoder" -> "microsoft/CodeBERT"
"facebookresearch/TransCoder" -> "github/CodeSearchNet"
"facebookresearch/TransCoder" -> "stayawayinesctec/stayaway-app" ["e"=1]
"facebookresearch/TransCoder" -> "hvmi/hvmi" ["e"=1]
"facebookresearch/TransCoder" -> "lucidrains/reformer-pytorch" ["e"=1]
"facebookresearch/TransCoder" -> "ko-nlp/Korpora" ["e"=1]
"facebookresearch/TransCoder" -> "cyberark/SkyArk" ["e"=1]
"facebookresearch/TransCoder" -> "salesforce/CodeT5"
"facebookresearch/TransCoder" -> "google-research/electra" ["e"=1]
"facebookresearch/TransCoder" -> "1d8/Android-Analysis"
"facebookresearch/TransCoder" -> "facebookresearch/XLM" ["e"=1]
"facebookresearch/TransCoder" -> "facebookresearch/KILT" ["e"=1]
"c2nes/javalang" -> "tech-srl/code2seq"
"c2nes/javalang" -> "tech-srl/code2vec"
"c2nes/javalang" -> "microsoft/CodeBERT"
"c2nes/javalang" -> "microsoft/CodeXGLUE"
"c2nes/javalang" -> "rjust/defects4j"
"c2nes/javalang" -> "zhangj111/astnn"
"c2nes/javalang" -> "guxd/deep-code-search"
"c2nes/javalang" -> "sriniiyer/codenn"
"c2nes/javalang" -> "wasiahmad/NeuralCodeSum"
"c2nes/javalang" -> "musiKk/plyj"
"c2nes/javalang" -> "tree-sitter/py-tree-sitter"
"c2nes/javalang" -> "xing-hu/EMSE-DeepCom"
"c2nes/javalang" -> "EdinburghNLP/code-docstring-corpus"
"c2nes/javalang" -> "wanyao1992/code_summarization_public"
"c2nes/javalang" -> "saltudelft/ml4se"
"aalhuz/navex" -> "UUUUnotfound/Navex_fixed"
"aalhuz/navex" -> "oliverklee/pixy"
"aalhuz/navex" -> "malteskoruppa/phpjoern"
"aalhuz/navex" -> "WSP-LAB/FUGIO"
"aalhuz/navex" -> "ircmaxell/php-cfg"
"aalhuz/navex" -> "viraptor/phply"
"aalhuz/navex" -> "cuhk-seclab/XSym"
"aalhuz/navex" -> "cuhk-seclab/TChecker"
"aalhuz/navex" -> "WSP-LAB/FUSE"
"ircmaxell/php-cfg" -> "oliverklee/pixy"
"ircmaxell/php-cfg" -> "olivo/TaintPHP"
"ircmaxell/php-cfg" -> "designsecurity/progpilot" ["e"=1]
"ircmaxell/php-cfg" -> "UUUUnotfound/Navex_fixed"
"ircmaxell/php-cfg" -> "bartvanarnhem/phpscan"
"ircmaxell/php-cfg" -> "OneSourceCat/phpvulhunter" ["e"=1]
"oliverklee/pixy" -> "ircmaxell/php-cfg"
"oliverklee/pixy" -> "aalhuz/navex"
"oliverklee/pixy" -> "UUUUnotfound/Navex_fixed"
"robocoder/rips-scanner" -> "ripsscanner/rips"
"viraptor/phply" -> "JameelNabbo/PHP-Parsers"
"viraptor/phply" -> "aalhuz/navex"
"microsoft/PythonProgrammingPuzzles" -> "google-research/python-graphs"
"microsoft/PythonProgrammingPuzzles" -> "openai/human-eval"
"microsoft/PythonProgrammingPuzzles" -> "microsoft/CodeT"
"microsoft/PythonProgrammingPuzzles" -> "hendrycks/apps"
"microsoft/PythonProgrammingPuzzles" -> "girlscript/winter-of-contributing" ["e"=1]
"microsoft/PythonProgrammingPuzzles" -> "benthecoder/yt-channels-DS-AI-ML-CS" ["e"=1]
"microsoft/PythonProgrammingPuzzles" -> "GoTurkiye/training" ["e"=1]
"microsoft/PythonProgrammingPuzzles" -> "salesforce/CodeRL"
"microsoft/PythonProgrammingPuzzles" -> "input-output-hk/essential-cardano" ["e"=1]
"microsoft/PythonProgrammingPuzzles" -> "jorisschellekens/borb" ["e"=1]
"microsoft/PythonProgrammingPuzzles" -> "microsoft/CodeXGLUE"
"microsoft/PythonProgrammingPuzzles" -> "bigcode-project/bigcode-evaluation-harness"
"microsoft/PythonProgrammingPuzzles" -> "deepmind/code_contests"
"microsoft/PythonProgrammingPuzzles" -> "jcw024/lichess_database_ETL"
"microsoft/PythonProgrammingPuzzles" -> "dpfried/incoder"
"GraphWalker/graphwalker-project" -> "mukatee/osmo"
"GraphWalker/graphwalker-project" -> "GraphWalker/graphwalker-example"
"GraphWalker/graphwalker-project" -> "spotify/python-graphwalker"
"GraphWalker/graphwalker-project" -> "dakusui/jcunit"
"GraphWalker/graphwalker-project" -> "Cornutum/tcases"
"GraphWalker/graphwalker-project" -> "KristianKarl/GraphWalker"
"GraphWalker/graphwalker-project" -> "jon-jacky/PyModel"
"clarkware/jdepend" -> "TNG/ArchUnit" ["e"=1]
"clarkware/jdepend" -> "yegor256/jpeek" ["e"=1]
"clarkware/jdepend" -> "dspinellis/ckjm"
"clarkware/jdepend" -> "mauricioaniche/ck"
"clarkware/jdepend" -> "TNG/ArchUnit-Examples" ["e"=1]
"clarkware/jdepend" -> "mauricioaniche/repodriller"
"microsoft/CodeXGLUE" -> "microsoft/CodeBERT"
"microsoft/CodeXGLUE" -> "salesforce/CodeT5"
"microsoft/CodeXGLUE" -> "github/CodeSearchNet"
"microsoft/CodeXGLUE" -> "tech-srl/code2seq"
"microsoft/CodeXGLUE" -> "tech-srl/code2vec"
"microsoft/CodeXGLUE" -> "wasiahmad/PLBART"
"microsoft/CodeXGLUE" -> "wasiahmad/NeuralCodeSum"
"microsoft/CodeXGLUE" -> "facebookresearch/CodeGen"
"microsoft/CodeXGLUE" -> "CGCL-codes/naturalcc"
"microsoft/CodeXGLUE" -> "openai/human-eval"
"microsoft/CodeXGLUE" -> "zhangj111/astnn"
"microsoft/CodeXGLUE" -> "parasj/contracode"
"microsoft/CodeXGLUE" -> "IBM/Project_CodeNet"
"microsoft/CodeXGLUE" -> "rjust/defects4j"
"microsoft/CodeXGLUE" -> "c2nes/javalang"
"Fraunhofer-AISEC/cpg" -> "ShiftLeftSecurity/codepropertygraph"
"Fraunhofer-AISEC/cpg" -> "Fraunhofer-AISEC/codyze"
"Fraunhofer-AISEC/cpg" -> "plume-oss/plume"
"Fraunhofer-AISEC/cpg" -> "Fraunhofer-AISEC/cpg-vis-neo4j"
"ShiftLeftSecurity/codepropertygraph" -> "ShiftLeftSecurity/joern"
"ShiftLeftSecurity/codepropertygraph" -> "octopus-platform/joern"
"ShiftLeftSecurity/codepropertygraph" -> "Fraunhofer-AISEC/cpg"
"ShiftLeftSecurity/codepropertygraph" -> "joernio/joern" ["e"=1]
"ShiftLeftSecurity/codepropertygraph" -> "ShiftLeftSecurity/overflowdb"
"ShiftLeftSecurity/codepropertygraph" -> "plume-oss/plume"
"ShiftLeftSecurity/codepropertygraph" -> "ShiftLeftSecurity/scan-action"
"ShiftLeftSecurity/codepropertygraph" -> "epicosy/devign"
"ShiftLeftSecurity/codepropertygraph" -> "ShiftLeftSecurity/llvm2cpg"
"ShiftLeftSecurity/codepropertygraph" -> "ShiftLeftSecurity/gaum"
"ShiftLeftSecurity/codepropertygraph" -> "SySeVR/SySeVR"
"ShiftLeftSecurity/codepropertygraph" -> "fabsx00/python-joern" ["e"=1]
"ShiftLeftSecurity/codepropertygraph" -> "secure-software-engineering/phasar" ["e"=1]
"SpoonLabs/spoon-examples" -> "SpoonLabs/spoon-maven-plugin"
"salesforce/jaxformer" -> "Sea-Snell/JAXSeq" ["e"=1]
"amitness/toolbox" -> "Neuraxio/Neuraxle" ["e"=1]
"amitness/toolbox" -> "uber/manifold" ["e"=1]
"amitness/toolbox" -> "amitness/papers-with-video"
"amitness/toolbox" -> "hundredblocks/ml-powered-applications" ["e"=1]
"amitness/toolbox" -> "SE-ML/awesome-seml"
"amitness/toolbox" -> "amitness/learning" ["e"=1]
"amitness/toolbox" -> "microsoft/nlp" ["e"=1]
"amitness/toolbox" -> "luspr/awesome-ml-courses" ["e"=1]
"amitness/toolbox" -> "dair-ai/nlp_paper_summaries" ["e"=1]
"amitness/toolbox" -> "alan-turing-institute/CleverCSV" ["e"=1]
"amitness/toolbox" -> "EthicalML/xai" ["e"=1]
"amitness/toolbox" -> "TDAmeritrade/stumpy" ["e"=1]
"amitness/toolbox" -> "gdikov/hypertunity"
"amitness/toolbox" -> "rasbt/stat453-deep-learning-ss20" ["e"=1]
"amitness/toolbox" -> "benedekrozemberczki/awesome-gradient-boosting-papers" ["e"=1]
"github/CodeSearchNet" -> "microsoft/CodeBERT"
"github/CodeSearchNet" -> "microsoft/CodeXGLUE"
"github/CodeSearchNet" -> "tech-srl/code2seq"
"github/CodeSearchNet" -> "tech-srl/code2vec"
"github/CodeSearchNet" -> "salesforce/CodeT5"
"github/CodeSearchNet" -> "guxd/deep-code-search"
"github/CodeSearchNet" -> "wasiahmad/NeuralCodeSum"
"github/CodeSearchNet" -> "parasj/contracode"
"github/CodeSearchNet" -> "JetBrains-Research/astminer"
"github/CodeSearchNet" -> "facebookresearch/Neural-Code-Search-Evaluation-Dataset"
"github/CodeSearchNet" -> "CGCL-codes/naturalcc"
"github/CodeSearchNet" -> "EdinburghNLP/code-docstring-corpus"
"github/CodeSearchNet" -> "hamelsmu/code_search"
"github/CodeSearchNet" -> "sriniiyer/codenn"
"github/CodeSearchNet" -> "openai/human-eval"
"johnb110/VDPython" -> "SySeVR/SySeVR"
"johnb110/VDPython" -> "saikat107/Devign"
"johnb110/VDPython" -> "epicosy/devign"
"johnb110/VDPython" -> "VulDetProject/ReVeal"
"johnb110/VDPython" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"johnb110/VDPython" -> "CGCL-codes/VulDeePecker"
"johnb110/VDPython" -> "DanielLin1986/Function-level-Vulnerability-Detection"
"johnb110/VDPython" -> "VulDeeLocator/VulDeeLocator"
"johnb110/VDPython" -> "ICL-ml4csec/VulBERTa"
"johnb110/VDPython" -> "davidhin/linevd"
"ckaestne/seaibib" -> "ckaestne/seai"
"ckaestne/seaibib" -> "SE-ML/awesome-seml"
"ckaestne/seaibib" -> "dspinellis/awesome-msr"
"ckaestne/seaibib" -> "bvasiles/empirical-methods"
"ckaestne/seaibib" -> "acmsigsoft/EmpiricalStandards"
"EvoSuite/evosuite" -> "randoop/randoop"
"EvoSuite/evosuite" -> "rjust/defects4j"
"EvoSuite/evosuite" -> "EMResearch/EvoMaster"
"EvoSuite/evosuite" -> "hcoles/pitest" ["e"=1]
"EvoSuite/evosuite" -> "mauricioaniche/ck"
"EvoSuite/evosuite" -> "tsantalis/RefactoringMiner"
"EvoSuite/evosuite" -> "jacoco/jacoco" ["e"=1]
"EvoSuite/evosuite" -> "SpoonLabs/astor"
"EvoSuite/evosuite" -> "GraphWalker/graphwalker-project"
"EvoSuite/evosuite" -> "osl/jcute" ["e"=1]
"EvoSuite/evosuite" -> "EvoSuite/evosuite-coverage-tools"
"EvoSuite/evosuite" -> "almondtools/testrecorder"
"EvoSuite/evosuite" -> "wala/WALA" ["e"=1]
"EvoSuite/evosuite" -> "gousiosg/java-callgraph"
"EvoSuite/evosuite" -> "Cornutum/tcases"
"IBM/Project_CodeNet" -> "microsoft/CodeXGLUE"
"IBM/Project_CodeNet" -> "microsoft/CodeBERT"
"IBM/Project_CodeNet" -> "github/CodeSearchNet"
"IBM/Project_CodeNet" -> "salesforce/CodeT5"
"IBM/Project_CodeNet" -> "openai/human-eval"
"IBM/Project_CodeNet" -> "saltudelft/ml4se"
"IBM/Project_CodeNet" -> "VHellendoorn/Code-LMs"
"IBM/Project_CodeNet" -> "hendrycks/apps"
"IBM/Project_CodeNet" -> "deepmind/code_contests"
"IBM/Project_CodeNet" -> "CGCL-codes/naturalcc"
"IBM/Project_CodeNet" -> "wasiahmad/PLBART"
"IBM/Project_CodeNet" -> "intel-isl/PhotorealismEnhancement" ["e"=1]
"IBM/Project_CodeNet" -> "tech-srl/code2vec"
"IBM/Project_CodeNet" -> "JetBrains-Research/astminer"
"IBM/Project_CodeNet" -> "tech-srl/code2seq"
"rjust/defects4j" -> "SpoonLabs/astor"
"rjust/defects4j" -> "bugs-dot-jar/bugs-dot-jar"
"rjust/defects4j" -> "program-repair/defects4j-dissection"
"rjust/defects4j" -> "GumTreeDiff/gumtree"
"rjust/defects4j" -> "xgdsmileboy/SimFix"
"rjust/defects4j" -> "Spirals-Team/defects4j-repair"
"rjust/defects4j" -> "microsoft/CodeXGLUE"
"rjust/defects4j" -> "c2nes/javalang"
"rjust/defects4j" -> "jkoppel/QuixBugs"
"rjust/defects4j" -> "lin-tan/CoCoNut-Artifact"
"rjust/defects4j" -> "program-repair/RepairThemAll"
"rjust/defects4j" -> "GZoltar/gzoltar"
"rjust/defects4j" -> "EvoSuite/evosuite"
"rjust/defects4j" -> "DeepFL/DeepFaultLocalization"
"rjust/defects4j" -> "program-repair/program-repair.github.io"
"tree-sitter/py-tree-sitter" -> "tree-sitter/tree-sitter-python" ["e"=1]
"tree-sitter/py-tree-sitter" -> "wasiahmad/NeuralCodeSum"
"tree-sitter/py-tree-sitter" -> "tech-srl/code2seq"
"tree-sitter/py-tree-sitter" -> "microsoft/CodeXGLUE"
"tree-sitter/py-tree-sitter" -> "microsoft/CodeBERT"
"tree-sitter/py-tree-sitter" -> "JetBrains-Research/astminer"
"tree-sitter/py-tree-sitter" -> "EdinburghNLP/code-docstring-corpus"
"tree-sitter/py-tree-sitter" -> "c2nes/javalang"
"tree-sitter/py-tree-sitter" -> "zysszy/TreeGen" ["e"=1]
"tree-sitter/py-tree-sitter" -> "bdqnghi/infercode"
"tree-sitter/py-tree-sitter" -> "clonebench/BigCloneBench"
"tree-sitter/py-tree-sitter" -> "jacobwwh/graphmatch_clone"
"tree-sitter/py-tree-sitter" -> "tree-sitter/tree-sitter-java"
"tree-sitter/py-tree-sitter" -> "LittleYUYU/StackOverflow-Question-Code-Dataset"
"CGCL-codes/naturalcc" -> "CGCL-codes/awesome-code-intelligence"
"CGCL-codes/naturalcc" -> "wasiahmad/NeuralCodeSum"
"CGCL-codes/naturalcc" -> "saltudelft/ml4se"
"CGCL-codes/naturalcc" -> "ml4code/ml4code.github.io"
"CGCL-codes/naturalcc" -> "salesforce/CodeT5"
"CGCL-codes/naturalcc" -> "microsoft/CodeXGLUE"
"CGCL-codes/naturalcc" -> "wanyao1992/code_summarization_public"
"CGCL-codes/naturalcc" -> "wala/graph4code"
"CGCL-codes/naturalcc" -> "danielzuegner/code-transformer"
"CGCL-codes/naturalcc" -> "parasj/contracode"
"salesforce/CodeT5" -> "microsoft/CodeXGLUE"
"salesforce/CodeT5" -> "microsoft/CodeBERT"
"salesforce/CodeT5" -> "wasiahmad/PLBART"
"salesforce/CodeT5" -> "salesforce/CodeRL"
"salesforce/CodeT5" -> "VHellendoorn/Code-LMs"
"salesforce/CodeT5" -> "github/CodeSearchNet"
"salesforce/CodeT5" -> "facebookresearch/CodeGen"
"salesforce/CodeT5" -> "openai/human-eval"
"salesforce/CodeT5" -> "CGCL-codes/naturalcc"
"salesforce/CodeT5" -> "salesforce/CodeGen" ["e"=1]
"salesforce/CodeT5" -> "saltudelft/ml4se"
"salesforce/CodeT5" -> "parasj/contracode"
"salesforce/CodeT5" -> "dpfried/incoder"
"salesforce/CodeT5" -> "hendrycks/apps"
"salesforce/CodeT5" -> "wasiahmad/NeuralCodeSum"
"gousiosg/java-callgraph" -> "Adrninistrator/java-all-call-graph"
"gousiosg/java-callgraph" -> "Adrninistrator/java-callgraph2"
"gousiosg/java-callgraph" -> "wala/WALA" ["e"=1]
"gousiosg/java-callgraph" -> "Sable/soot" ["e"=1]
"gousiosg/java-callgraph" -> "GumTreeDiff/gumtree"
"gousiosg/java-callgraph" -> "didi/super-jacoco" ["e"=1]
"gousiosg/java-callgraph" -> "tsantalis/RefactoringMiner"
"gousiosg/java-callgraph" -> "rjust/defects4j"
"gousiosg/java-callgraph" -> "soot-oss/soot" ["e"=1]
"gousiosg/java-callgraph" -> "Sable/heros" ["e"=1]
"gousiosg/java-callgraph" -> "javaparser/javaparser" ["e"=1]
"gousiosg/java-callgraph" -> "randoop/randoop"
"gousiosg/java-callgraph" -> "mauricioaniche/ck"
"gousiosg/java-callgraph" -> "secure-software-engineering/FlowDroid" ["e"=1]
"gousiosg/java-callgraph" -> "EvoSuite/evosuite"
"wasiahmad/PLBART" -> "parasj/contracode"
"wasiahmad/PLBART" -> "salesforce/CodeT5"
"wasiahmad/PLBART" -> "agemagician/CodeTrans"
"wasiahmad/PLBART" -> "wasiahmad/AVATAR"
"wasiahmad/PLBART" -> "google-research/plur"
"wasiahmad/PLBART" -> "bayesgroup/code_transformers"
"wasiahmad/PLBART" -> "wasiahmad/NeuralCodeSum"
"wasiahmad/PLBART" -> "bdqnghi/infercode"
"wasiahmad/PLBART" -> "pdlan/OSCAR"
"wasiahmad/PLBART" -> "microsoft/CodeXGLUE"
"wasiahmad/PLBART" -> "facebookresearch/code-prediction-transformer" ["e"=1]
"HuantWang/FUNDED_NISL" -> "epicosy/devign"
"HuantWang/FUNDED_NISL" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"HuantWang/FUNDED_NISL" -> "VulDeeLocator/VulDeeLocator"
"HuantWang/FUNDED_NISL" -> "VulDetProject/ReVeal"
"Adrninistrator/java-all-call-graph" -> "Adrninistrator/java-callgraph2"
"Adrninistrator/java-all-call-graph" -> "gousiosg/java-callgraph"
"Adrninistrator/java-all-call-graph" -> "threedr3am/gadgetinspector" ["e"=1]
"Adrninistrator/java-all-call-graph" -> "ice-doom/codeql_compile" ["e"=1]
"Adrninistrator/java-callgraph2" -> "Adrninistrator/java-all-call-graph"
"microsoft/CodeBERT" -> "microsoft/CodeXGLUE"
"microsoft/CodeBERT" -> "github/CodeSearchNet"
"microsoft/CodeBERT" -> "salesforce/CodeT5"
"microsoft/CodeBERT" -> "tech-srl/code2vec"
"microsoft/CodeBERT" -> "tech-srl/code2seq"
"microsoft/CodeBERT" -> "wasiahmad/PLBART"
"microsoft/CodeBERT" -> "wasiahmad/NeuralCodeSum"
"microsoft/CodeBERT" -> "c2nes/javalang"
"microsoft/CodeBERT" -> "zhangj111/astnn"
"microsoft/CodeBERT" -> "saltudelft/ml4se"
"microsoft/CodeBERT" -> "tree-sitter/py-tree-sitter"
"microsoft/CodeBERT" -> "JetBrains-Research/astminer"
"microsoft/CodeBERT" -> "CGCL-codes/naturalcc"
"microsoft/CodeBERT" -> "facebookresearch/CodeGen"
"microsoft/CodeBERT" -> "openai/human-eval"
"GumTreeDiff/gumtree" -> "SpoonLabs/gumtree-spoon-ast-diff"
"GumTreeDiff/gumtree" -> "SpoonLabs/astor"
"GumTreeDiff/gumtree" -> "rjust/defects4j"
"GumTreeDiff/gumtree" -> "tsantalis/RefactoringMiner"
"GumTreeDiff/gumtree" -> "INRIA/spoon"
"GumTreeDiff/gumtree" -> "program-repair/defects4j-dissection"
"GumTreeDiff/gumtree" -> "wala/WALA" ["e"=1]
"GumTreeDiff/gumtree" -> "FudanSELab/CLDIFF"
"GumTreeDiff/gumtree" -> "ishepard/pydriller"
"GumTreeDiff/gumtree" -> "dspinellis/awesome-msr"
"GumTreeDiff/gumtree" -> "SpoonLabs/nopol"
"GumTreeDiff/gumtree" -> "microsoft/CodeXGLUE"
"GumTreeDiff/gumtree" -> "tech-srl/code2seq"
"GumTreeDiff/gumtree" -> "tech-srl/code2vec"
"GumTreeDiff/gumtree" -> "JetBrains-Research/astminer"
"SpoonLabs/astor" -> "SpoonLabs/nopol"
"SpoonLabs/astor" -> "program-repair/RepairThemAll"
"SpoonLabs/astor" -> "program-repair/program-repair.github.io"
"SpoonLabs/astor" -> "rjust/defects4j"
"SpoonLabs/astor" -> "xgdsmileboy/SimFix"
"SpoonLabs/astor" -> "bugs-dot-jar/bugs-dot-jar"
"SpoonLabs/astor" -> "Spirals-Team/defects4j-repair"
"SpoonLabs/astor" -> "mechtaev/angelix"
"SpoonLabs/astor" -> "program-repair/defects4j-dissection"
"SpoonLabs/astor" -> "GumTreeDiff/gumtree"
"SpoonLabs/astor" -> "eclipse/repairnator"
"SpoonLabs/astor" -> "yyxhdy/arja"
"SpoonLabs/astor" -> "GZoltar/gzoltar"
"SpoonLabs/gumtree-spoon-ast-diff" -> "SpoonLabs/coming"
"SpoonLabs/gumtree-spoon-ast-diff" -> "GumTreeDiff/gumtree"
"SpoonLabs/gumtree-spoon-ast-diff" -> "SpoonLabs/nopol"
"SpoonLabs/gumtree-spoon-ast-diff" -> "MartinWitt/laughing-train" ["e"=1]
"tsantalis/JDeodorant" -> "tsantalis/RefactoringMiner"
"amitness/papers-with-video" -> "amitness/ml-datasets" ["e"=1]
"DanielLin1986/TransferRepresentationLearning" -> "DanielLin1986/function_representation_learning"
"ICL-ml4csec/VulBERTa" -> "davidhin/linevd"
"ICL-ml4csec/VulBERTa" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"ICL-ml4csec/VulBERTa" -> "awsm-research/LineVul"
"VulDeeLocator/VulDeeLocator" -> "VulDetProject/ReVeal"
"VulDeeLocator/VulDeeLocator" -> "davidhin/linevd"
"awsm-research/LineVul" -> "davidhin/linevd"
"awsm-research/LineVul" -> "ICL-ml4csec/VulBERTa"
"davidhin/linevd" -> "ICL-ml4csec/VulBERTa"
"davidhin/linevd" -> "vulnerabilitydetection/VulnerabilityDetectionResearch"
"saltudelft/ml4se" -> "CGCL-codes/naturalcc"
"saltudelft/ml4se" -> "ICL-ml4csec/VulBERTa"
"saltudelft/ml4se" -> "ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset"
"saltudelft/ml4se" -> "ml4code/ml4code.github.io"
"saltudelft/ml4se" -> "wasiahmad/PLBART"
"saltudelft/ml4se" -> "VulDetProject/ReVeal"
"saltudelft/ml4se" -> "microsoft/CodeBERT"
"saltudelft/ml4se" -> "microsoft/CodeXGLUE"
"saltudelft/ml4se" -> "IBM/D2A"
"saltudelft/ml4se" -> "bdqnghi/infercode"
"saltudelft/ml4se" -> "salesforce/CodeT5"
"saltudelft/ml4se" -> "SySeVR/SySeVR"
"saltudelft/ml4se" -> "SMAT-Lab/Scalpel" ["e"=1]
"saltudelft/ml4se" -> "epicosy/devign"
"saltudelft/ml4se" -> "awsm-research/LineVul"
"tech-srl/code2vec" -> "tech-srl/code2seq"
"tech-srl/code2vec" -> "JetBrains-Research/astminer"
"tech-srl/code2vec" -> "microsoft/CodeBERT"
"tech-srl/code2vec" -> "microsoft/CodeXGLUE"
"tech-srl/code2vec" -> "github/CodeSearchNet"
"tech-srl/code2vec" -> "guxd/deep-code-search"
"tech-srl/code2vec" -> "zhangj111/astnn"
"tech-srl/code2vec" -> "sriniiyer/codenn"
"tech-srl/code2vec" -> "c2nes/javalang"
"tech-srl/code2vec" -> "spcl/ncc" ["e"=1]
"tech-srl/code2vec" -> "clonebench/BigCloneBench"
"tech-srl/code2vec" -> "epicosy/devign"
"tech-srl/code2vec" -> "SySeVR/SySeVR"
"tech-srl/code2vec" -> "rjust/defects4j"
"tech-srl/code2vec" -> "microsoft/graph-based-code-modelling"
"zhangj111/astnn" -> "clonebench/BigCloneBench"
"zhangj111/astnn" -> "crestonbunch/tbcnn"
"zhangj111/astnn" -> "jacobwwh/graphmatch_clone"
"zhangj111/astnn" -> "parasol-aser/deepsim"
"zhangj111/astnn" -> "tech-srl/code2seq"
"zhangj111/astnn" -> "shiyy123/FCDetector"
"zhangj111/astnn" -> "bdqnghi/infercode"
"zhangj111/astnn" -> "jeffsvajlenko/BigCloneEval"
"zhangj111/astnn" -> "pdlan/OSCAR"
"zhangj111/astnn" -> "xing-hu/EMSE-DeepCom"
"zhangj111/astnn" -> "guxd/deep-code-search"
"zhangj111/astnn" -> "OOPSLA-2019-BugDetection/OOPSLA-2019-BugDetection"
"zhangj111/astnn" -> "wanyao1992/code_summarization_public"
"eclipse/repairnator" -> "SpoonLabs/flacoco"
"eclipse/repairnator" -> "bears-bugs/bears-benchmark"
"SpoonLabs/nopol" -> "SpoonLabs/astor"
"program-repair/defects4j-dissection" -> "SerVal-DTF/AVATAR"
"program-repair/defects4j-dissection" -> "bugs-dot-jar/bugs-dot-jar"
"xgdsmileboy/SimFix" -> "pkuzqh/Recoder"
"xgdsmileboy/SimFix" -> "SpoonLabs/nopol"
"xgdsmileboy/SimFix" -> "SerVal-DTF/TBar"
"xgdsmileboy/SimFix" -> "GZoltar/gzoltar"
"xgdsmileboy/SimFix" -> "bugs-dot-jar/bugs-dot-jar"
"xgdsmileboy/SimFix" -> "Adobee/ACS"
"xgdsmileboy/SimFix" -> "SpoonLabs/astor"
"xgdsmileboy/SimFix" -> "program-repair/defects4j-dissection"
"xgdsmileboy/SimFix" -> "DehengYang/TransplantFix"
"JetBrains-Research/astminer" -> "tech-srl/code2vec"
"JetBrains-Research/astminer" -> "JetBrains-Research/psiminer"
"JetBrains-Research/astminer" -> "tech-srl/code2seq"
"JetBrains-Research/astminer" -> "JetBrains-Research/code2seq"
"JetBrains-Research/astminer" -> "epicosy/devign"
"JetBrains-Research/astminer" -> "sonoisa/code2vec"
"JetBrains-Research/astminer" -> "m3yrin/code2seq"
"JetBrains-Research/astminer" -> "acleclair/ICPC2020_GNN"
"JetBrains-Research/astminer" -> "JetBrains-Research/reflekt" ["e"=1]
"JetBrains-Research/astminer" -> "michaelpradel/DeepBugs"
"JetBrains-Research/astminer" -> "microsoft/CodeXGLUE"
"JetBrains-Research/astminer" -> "tech-srl/slm-code-generation"
"JetBrains-Research/astminer" -> "clonebench/BigCloneBench"
"JetBrains-Research/astminer" -> "microsoft/CodeBERT"
"dspinellis/awesome-msr" -> "bvasiles/empirical-methods"
"dspinellis/awesome-msr" -> "tsantalis/RefactoringMiner"
"dspinellis/awesome-msr" -> "ishepard/pydriller"
"dspinellis/awesome-msr" -> "RepoReapers/reaper"
"dspinellis/awesome-msr" -> "ckaestne/seaibib"
"dspinellis/awesome-msr" -> "mauricioaniche/repodriller"
"dspinellis/awesome-msr" -> "diverse-project/maven-miner"
"dspinellis/awesome-msr" -> "mauricioaniche/ck"
"dspinellis/awesome-msr" -> "acmsigsoft/EmpiricalStandards"
"dspinellis/awesome-msr" -> "TestRoots/travistorrent-tools"
"dspinellis/awesome-msr" -> "electricalwind/data7"
"IBM/D2A" -> "ICL-ml4csec/VulBERTa"
"mauricioaniche/ck" -> "mauricioaniche/codesheriff"
"mauricioaniche/ck" -> "tsantalis/RefactoringMiner"
"mauricioaniche/ck" -> "mauricioaniche/repodriller"
"mauricioaniche/ck" -> "asouza/pilares-design-codigo" ["e"=1]
"mauricioaniche/ck" -> "dspinellis/awesome-msr"
"mauricioaniche/ck" -> "tsantalis/JDeodorant"
"mauricioaniche/ck" -> "tushartushar/DesigniteJava"
"mauricioaniche/ck" -> "aserg-ufmg/RefDiff"
"mauricioaniche/ck" -> "asouza/complexity-tracker" ["e"=1]
"mauricioaniche/ck" -> "dspinellis/ckjm"
"mauricioaniche/ck" -> "mauricioaniche/springlint"
"mauricioaniche/ck" -> "ishepard/pydriller"
"mauricioaniche/ck" -> "rodhilton/jasome"
"mauricioaniche/ck" -> "rjust/defects4j"
"IBM/Graph2Seq" -> "beckdaniel/acl2018_graph2seq" ["e"=1]
"IBM/Graph2Seq" -> "syxu828/Graph2Seq-0.1"
"IBM/Graph2Seq" -> "nwpuhq/Graph2Seq"
"IBM/Graph2Seq" -> "diegma/graph-2-text" ["e"=1]
"IBM/Graph2Seq" -> "freesunshine0316/neural-graph-to-seq-mp" ["e"=1]
"IBM/Graph2Seq" -> "hugochan/RL-based-Graph2Seq-for-NQG" ["e"=1]
"IBM/Graph2Seq" -> "microsoft/graph-based-code-modelling"
"IBM/Graph2Seq" -> "acleclair/ICPC2020_GNN"
"IBM/Graph2Seq" -> "xing-hu/TL-CodeSum"
"bdqnghi/ast-node-encoding" -> "bdqnghi/treecaps"
"bdqnghi/ast-node-encoding" -> "bdqnghi/ggnn.tensorflow"
"crestonbunch/tbcnn" -> "zhangj111/astnn"
"crestonbunch/tbcnn" -> "Aetf/tensorflow-tbcnn"
"crestonbunch/tbcnn" -> "shiyy123/FCDetector"
"danielzuegner/code-transformer" -> "parasj/contracode"
"danielzuegner/code-transformer" -> "AwdHanPeng/TPTrans"
"danielzuegner/code-transformer" -> "bdqnghi/infercode"
"danielzuegner/code-transformer" -> "acleclair/ICPC2020_GNN"
"danielzuegner/code-transformer" -> "bayesgroup/code_transformers"
"gagan3012/project-code-py" -> "hendrycks/apps"
"hendrycks/apps" -> "salesforce/CodeRL"
"hendrycks/apps" -> "gagan3012/project-code-py"
"hendrycks/apps" -> "openai/human-eval"
"hendrycks/apps" -> "dpfried/incoder"
"hendrycks/apps" -> "wasiahmad/PLBART"
"hendrycks/apps" -> "salesforce/CodeT5"
"microsoft/graph-based-code-modelling" -> "dmitrykazhdan/Representing-Programs-with-Graphs"
"microsoft/graph-based-code-modelling" -> "VHellendoorn/ICLR20-Great"
"microsoft/graph-based-code-modelling" -> "CoderPat/structured-neural-summarization"
"microsoft/graph-based-code-modelling" -> "bdqnghi/graph-ast"
"openai/human-eval" -> "hendrycks/apps"
"openai/human-eval" -> "salesforce/CodeT5"
"openai/human-eval" -> "microsoft/CodeXGLUE"
"openai/human-eval" -> "salesforce/CodeRL"
"openai/human-eval" -> "microsoft/CodeBERT"
"openai/human-eval" -> "dpfried/incoder"
"openai/human-eval" -> "VHellendoorn/Code-LMs"
"openai/human-eval" -> "deepmind/code_contests"
"openai/human-eval" -> "wasiahmad/PLBART"
"openai/human-eval" -> "facebookresearch/CodeGen"
"openai/human-eval" -> "wasiahmad/NeuralCodeSum"
"openai/human-eval" -> "salesforce/jaxformer"
"openai/human-eval" -> "salesforce/CodeGen" ["e"=1]
"openai/human-eval" -> "bigscience-workshop/t-zero" ["e"=1]
"openai/human-eval" -> "github/CodeSearchNet"
"tech-srl/code2seq" -> "tech-srl/code2vec"
"tech-srl/code2seq" -> "sriniiyer/codenn"
"tech-srl/code2seq" -> "wasiahmad/NeuralCodeSum"
"tech-srl/code2seq" -> "JetBrains-Research/astminer"
"tech-srl/code2seq" -> "xing-hu/EMSE-DeepCom"
"tech-srl/code2seq" -> "EdinburghNLP/code-docstring-corpus"
"tech-srl/code2seq" -> "xing-hu/TL-CodeSum"
"tech-srl/code2seq" -> "microsoft/CodeXGLUE"
"tech-srl/code2seq" -> "CoderPat/structured-neural-summarization"
"tech-srl/code2seq" -> "guxd/deep-code-search"
"tech-srl/code2seq" -> "microsoft/CodeBERT"
"tech-srl/code2seq" -> "github/CodeSearchNet"
"tech-srl/code2seq" -> "c2nes/javalang"
"tech-srl/code2seq" -> "zhangj111/astnn"
"tech-srl/code2seq" -> "m3yrin/code2seq"
"xing-hu/TL-CodeSum" -> "xing-hu/EMSE-DeepCom"
"xing-hu/TL-CodeSum" -> "wanyao1992/code_summarization_public"
"xing-hu/TL-CodeSum" -> "acleclair/ICPC2020_GNN"
"xing-hu/TL-CodeSum" -> "sriniiyer/codenn"
"michaelpradel/DeepBugs" -> "JetBrains-Research/DeepBugsPlugin"
"facebookresearch/Neural-Code-Search-Evaluation-Dataset" -> "BASE-LAB-SJTU/CosBench"
"LittleYUYU/StackOverflow-Question-Code-Dataset" -> "EdinburghNLP/code-docstring-corpus"
"LittleYUYU/StackOverflow-Question-Code-Dataset" -> "rajarshihaldar/codetextmatch"
"LittleYUYU/StackOverflow-Question-Code-Dataset" -> "conala-corpus/conala-baseline"
"LittleYUYU/StackOverflow-Question-Code-Dataset" -> "LittleYUYU/CoaCor"
"LittleYUYU/StackOverflow-Question-Code-Dataset" -> "guxd/deep-code-search"
"LittleYUYU/StackOverflow-Question-Code-Dataset" -> "facebookresearch/Neural-Code-Search-Evaluation-Dataset"
"LittleYUYU/StackOverflow-Question-Code-Dataset" -> "Jun-jie-Huang/CoCLR"
"LittleYUYU/StackOverflow-Question-Code-Dataset" -> "jeniyat/StackOverflowNER"
"facebookresearch/CodeGen" -> "facebookresearch/TransCoder"
"facebookresearch/CodeGen" -> "salesforce/CodeT5"
"facebookresearch/CodeGen" -> "microsoft/CodeXGLUE"
"facebookresearch/CodeGen" -> "wasiahmad/PLBART"
"facebookresearch/CodeGen" -> "parasj/contracode"
"facebookresearch/CodeGen" -> "agemagician/CodeTrans"
"facebookresearch/CodeGen" -> "microsoft/CodeBERT"
"facebookresearch/CodeGen" -> "openai/human-eval"
"facebookresearch/CodeGen" -> "bayesgroup/code_transformers"
"facebookresearch/CodeGen" -> "danielzuegner/code-transformer"
"facebookresearch/CodeGen" -> "CGCL-codes/naturalcc"
"facebookresearch/CodeGen" -> "dpfried/incoder"
"facebookresearch/CodeGen" -> "github/CodeSearchNet"
"facebookresearch/CodeGen" -> "google-research/plur"
"facebookresearch/CodeGen" -> "salesforce/CodeRL"
"parasj/contracode" -> "danielzuegner/code-transformer"
"parasj/contracode" -> "wasiahmad/PLBART"
"sonoisa/code2vec" -> "bentrevett/code2vec"
"xing-hu/EMSE-DeepCom" -> "xing-hu/TL-CodeSum"
"xing-hu/EMSE-DeepCom" -> "wanyao1992/code_summarization_public"
"xing-hu/EMSE-DeepCom" -> "xing-hu/DeepCom"
"xing-hu/EMSE-DeepCom" -> "wasiahmad/NeuralCodeSum"
"xing-hu/EMSE-DeepCom" -> "acleclair/ICPC2020_GNN"
"xing-hu/EMSE-DeepCom" -> "zhangj111/rencos"
"xing-hu/EMSE-DeepCom" -> "sh1doy/summarization_tf"
"xing-hu/EMSE-DeepCom" -> "gingasan/sit3"
"xing-hu/EMSE-DeepCom" -> "sriniiyer/codenn"
"xing-hu/EMSE-DeepCom" -> "tech-srl/code2seq"
"xing-hu/EMSE-DeepCom" -> "mcmillco/funcom"
"xing-hu/EMSE-DeepCom" -> "CoderPat/structured-neural-summarization"
"microsoft/CodeT" -> "salesforce/CodeRL"
"WSP-LAB/FUSE" -> "WSP-LAB/FUGIO"
"WSP-LAB/FUSE" -> "spostman/ppp-ccs2018"
"WSP-LAB/FUSE" -> "aalhuz/navex"
"EMResearch/EvoMaster" -> "isa-group/RESTest"
"EMResearch/EvoMaster" -> "Cornutum/tcases"
"EMResearch/EvoMaster" -> "EvoSuite/evosuite"
"EMResearch/EvoMaster" -> "arcuri82/testing_security_development_enterprise_systems"
"EMResearch/EvoMaster" -> "Rhapsod/sapienz"
"EMResearch/EvoMaster" -> "rjust/defects4j"
"EMResearch/EvoMaster" -> "EMResearch/EMB"
"acr31/features-javac" -> "dmitrykazhdan/Representing-Programs-with-Graphs"
"LauraWartschinski/VulnerabilityDetection" -> "DanielLin1986/Function-level-Vulnerability-Detection"
"randoop/randoop" -> "EvoSuite/evosuite"
"randoop/randoop" -> "ksen007/janala2" ["e"=1]
"randoop/randoop" -> "rjust/defects4j"
"randoop/randoop" -> "SpoonLabs/astor"
"randoop/randoop" -> "rohanpadhye/jqf" ["e"=1]
"randoop/randoop" -> "wala/WALA" ["e"=1]
"randoop/randoop" -> "pholser/junit-quickcheck" ["e"=1]
"randoop/randoop" -> "hcoles/pitest" ["e"=1]
"randoop/randoop" -> "GumTreeDiff/gumtree"
"randoop/randoop" -> "INRIA/spoon"
"randoop/randoop" -> "isstac/kelinci" ["e"=1]
"salesforce/CodeRL" -> "hendrycks/apps"
"salesforce/CodeRL" -> "salesforce/CodeT5"
"salesforce/CodeRL" -> "dpfried/incoder"
"salesforce/CodeRL" -> "microsoft/PyCodeGPT"
"salesforce/CodeRL" -> "microsoft/CodeT"
"salesforce/CodeRL" -> "openai/human-eval"
"salesforce/CodeRL" -> "reddy-lab-code-research/PPOCoder"
"salesforce/CodeRL" -> "wasiahmad/PLBART"
"salesforce/CodeRL" -> "salesforce/jaxformer"
"salesforce/CodeRL" -> "yuewang-cuhk/awesome-programming-language-pretraining-papers"
"salesforce/CodeRL" -> "neulab/code-bert-score"
"salesforce/CodeRL" -> "microsoft/CodeXGLUE"
"hamelsmu/code_search" -> "guxd/deep-code-search"
"hamelsmu/code_search" -> "facebookresearch/Neural-Code-Search-Evaluation-Dataset"
"hamelsmu/code_search" -> "sriniiyer/codenn"
"hamelsmu/code_search" -> "github/CodeSearchNet"
"hamelsmu/code_search" -> "LittleYUYU/StackOverflow-Question-Code-Dataset"
"hamelsmu/code_search" -> "hamelsmu/Seq2Seq_Tutorial"
"hamelsmu/code_search" -> "tech-srl/code2vec"
"hamelsmu/code_search" -> "chrisjmccormick/simsearch"
"GZoltar/gzoltar" -> "saeg/jaguar"
"aserg-ufmg/RefDiff" -> "rodrigo-brito/refactoring-aware-diff"
"aserg-ufmg/RefDiff" -> "tsantalis/RefactoringMiner"
"Mondego/SourcererCC" -> "clonebench/BigCloneBench"
"Mondego/SourcererCC" -> "skyhover/Deckard"
"Mondego/SourcererCC" -> "jeffsvajlenko/BigCloneEval"
"Mondego/SourcererCC" -> "PRL-PRG/dejavu-artifact"
"Mondego/SourcererCC" -> "micheletufano/AutoenCODE"
"acmsigsoft/EmpiricalStandards" -> "bvasiles/empirical-methods"
"acmsigsoft/EmpiricalStandards" -> "acmsigsoft/submission-checker"
"acmsigsoft/EmpiricalStandards" -> "ckaestne/seaibib"
"acmsigsoft/EmpiricalStandards" -> "ishepard/pydriller"
"acmsigsoft/EmpiricalStandards" -> "margaretstorey/EmseUvic2020"
"acmsigsoft/EmpiricalStandards" -> "dspinellis/awesome-msr"
"Mondego/oreo" -> "Mondego/oreo-artifact"
"SonarSource/sonar-php" -> "ircmaxell/php-cfg"
"bdqnghi/infercode" -> "bdqnghi/graph-ast"
"bdqnghi/infercode" -> "bdqnghi/ggnn.tensorflow"
"lin-tan/CURE" -> "lin-tan/CoCoNut-Artifact"
"arcuri82/algorithms" -> "arcuri82/web_development_and_api_design"
"saikat107/Devign" -> "VulDetProject/ReVeal"
"saikat107/Devign" -> "epicosy/devign"
"isa-group/IDL" -> "isa-group/IDLReasoner"
"isa-group/RESTest" -> "isa-group/IDLReasoner"
"isa-group/RESTest" -> "EMResearch/EvoMaster"
"isa-group/RESTest" -> "isa-group/IDL"
"jeniyat/StackOverflowNER" -> "lanwuwei/BERTOverflow"
"jeniyat/StackOverflowNER" -> "LittleYUYU/StackOverflow-Question-Code-Dataset"
"wanyao1992/code_summarization_public" -> "xing-hu/EMSE-DeepCom"
"wanyao1992/code_summarization_public" -> "Bolin0215/CSCGDual"
"wanyao1992/code_summarization_public" -> "XMUDM/BASTS"
"wanyao1992/code_summarization_public" -> "acleclair/ICPC2020_GNN"
"wanyao1992/code_summarization_public" -> "xing-hu/TL-CodeSum"
"BeiningBogen/iOS-Kristiania" -> "arcuri82/web_development_and_api_design"
"arcuri82/web_development_and_api_design" -> "arcuri82/algorithms"
"arcuri82/web_development_and_api_design" -> "BeiningBogen/iOS-Kristiania"
"arcuri82/web_development_and_api_design" -> "arcuri82/testing_security_development_enterprise_systems"
"clonebench/BigCloneBench" -> "jeffsvajlenko/BigCloneEval"
"clonebench/BigCloneBench" -> "zhangj111/astnn"
"clonebench/BigCloneBench" -> "Mondego/SourcererCC"
"clonebench/BigCloneBench" -> "yh1105/datasetforTBCCD"
"clonebench/BigCloneBench" -> "micheletufano/AutoenCODE"
"jeffsvajlenko/BigCloneEval" -> "clonebench/BigCloneBench"
"ckaestne/seai" -> "ckaestne/seaibib"
"acleclair/ICPC2020_GNN" -> "XMUDM/BASTS"
"acleclair/ICPC2020_GNN" -> "wasiahmad/NeuralCodeSum"
"acleclair/ICPC2020_GNN" -> "CoderPat/structured-neural-summarization"
"acleclair/ICPC2020_GNN" -> "wanyao1992/code_summarization_public"
"acleclair/ICPC2020_GNN" -> "mcmillco/funcom"
"acleclair/ICPC2020_GNN" -> "xing-hu/TL-CodeSum"
"mcmillco/funcom" -> "sh1doy/summarization_tf"
"ml4code/ml4code.github.io" -> "CGCL-codes/naturalcc"
"ml4code/ml4code.github.io" -> "saltudelft/ml4se"
"ml4code/ml4code.github.io" -> "JetBrains-Research/code2seq"
"ml4code/ml4code.github.io" -> "tech-srl/code2seq"
"google-research/python-graphs" -> "microsoft/dpu-utils"
"google-research/python-graphs" -> "VHellendoorn/ICLR20-Great"
"google-research/python-graphs" -> "ml4code/ml4code.github.io"
"VHellendoorn/ICLR20-Great" -> "google-research-datasets/great"
"VHellendoorn/ICLR20-Great" -> "acleclair/ICPC2020_GNN"
"tsantalis/RefactoringMiner" -> "tsantalis/JDeodorant"
"tsantalis/RefactoringMiner" -> "aserg-ufmg/RefDiff"
"tsantalis/RefactoringMiner" -> "mauricioaniche/ck"
"tsantalis/RefactoringMiner" -> "ishepard/pydriller"
"tsantalis/RefactoringMiner" -> "JetBrains-Research/RefactorInsight"
"tsantalis/RefactoringMiner" -> "dspinellis/awesome-msr"
"tsantalis/RefactoringMiner" -> "mauricioaniche/repodriller"
"tsantalis/RefactoringMiner" -> "jodavimehran/code-tracker"
"tsantalis/RefactoringMiner" -> "GumTreeDiff/gumtree"
"tsantalis/RefactoringMiner" -> "rjust/defects4j"
"tsantalis/RefactoringMiner" -> "wogscpar/SZZUnleashed"
"tsantalis/RefactoringMiner" -> "SpoonLabs/astor"
"GoneZ5/SCRIPT" -> "gingasan/sit3"
"eth-sri/TFix" -> "pkuzqh/Recoder"
"mauricioaniche/repodriller" -> "mauricioaniche/change-metrics"
"mauricioaniche/repodriller" -> "tsantalis/RefactoringMiner"
"mauricioaniche/repodriller" -> "ishepard/pydriller"
"skyhover/Deckard" -> "Mondego/SourcererCC"
"skyhover/Deckard" -> "Mondego/oreo"
"skyhover/Deckard" -> "clonebench/BigCloneBench"
"skyhover/Deckard" -> "Program-Analysis/Java-to-AST-with-Visualization"
"WSP-LAB/FUGIO" -> "spostman/ppp-ccs2018"
"dspinellis/ckjm" -> "mjureczko/CKJM-extended"
"arcuri82/testing_security_development_enterprise_systems" -> "arcuri82/pg6300"
"arcuri82/testing_security_development_enterprise_systems" -> "arcuri82/web_development_and_api_design"
"arcuri82/testing_security_development_enterprise_systems" -> "arcuri82/pg4200"
"arcuri82/testing_security_development_enterprise_systems" -> "arcuri82/tk2100"
"arcuri82/testing_security_development_enterprise_systems" -> "glennbech/PGR301"
"arcuri82/testing_security_development_enterprise_systems" -> "pgr301-2019/labs"
"bdqnghi/bi-tbcnn" -> "bdqnghi/ggnn.tensorflow"
"bdqnghi/bi-tbcnn" -> "bdqnghi/SAR_API_mapping"
"bdqnghi/bi-tbcnn" -> "bdqnghi/treecaps"
"bdqnghi/bi-tbcnn" -> "bdqnghi/hierarchical-programming-language-mapping"
"bdqnghi/bi-tbcnn" -> "bdqnghi/ggnn_graph_classification"
"bvasiles/empirical-methods" -> "margaretstorey/EmseUvic2020"
"bvasiles/empirical-methods" -> "acmsigsoft/EmpiricalStandards"
"bvasiles/empirical-methods" -> "dspinellis/awesome-msr"
"mechtaev/angelix" -> "gaoxiang9430/Fix2Fit"
"agemagician/CodeTrans" -> "wasiahmad/PLBART"
"agemagician/CodeTrans" -> "danielzuegner/code-transformer"
"agemagician/CodeTrans" -> "parasj/contracode"
"JetBrains-Research/kinference" -> "cupertank/browser-benchmarks"
"JetBrains-Research/kinference" -> "JetBrains-Research/DeepBugsPlugin"
"hamelsmu/Seq2Seq_Tutorial" -> "hamelsmu/ktext"
"hamelsmu/ktext" -> "hamelsmu/Seq2Seq_Tutorial"
"lin-tan/CoCoNut-Artifact" -> "lin-tan/CURE"
"lin-tan/CoCoNut-Artifact" -> "TruX-DTF/TBar"
"lin-tan/CoCoNut-Artifact" -> "ICSE-2019-AUTOFIX/ICSE-2019-AUTOFIX"
"michiyasunaga/DrRepair" -> "michiyasunaga/BIFI"
"michiyasunaga/BIFI" -> "michiyasunaga/DrRepair"
"michiyasunaga/BIFI" -> "jkoppel/QuixBugs"
"michiyasunaga/BIFI" -> "eth-sri/TFix"
"arcuri82/pg4200" -> "arcuri82/pg6300"
"Cornutum/tcases" -> "jon-jacky/PyModel"
"Cornutum/tcases" -> "openapi4j/openapi4j"
"Cornutum/tcases" -> "mukatee/osmo"
"Cornutum/tcases" -> "isa-group/RESTest"
"Cornutum/tcases" -> "GraphWalker/graphwalker-project"
"Cornutum/tcases" -> "EMResearch/EvoMaster"
"JetBrains-Research/psiminer" -> "JetBrains-Research/Lupa"
"bugs-dot-jar/bugs-dot-jar" -> "bears-bugs/bears-benchmark"
"bugs-dot-jar/bugs-dot-jar" -> "program-repair/defects4j-dissection"
"bugs-dot-jar/bugs-dot-jar" -> "Spirals-Team/IntroClassJava"
"CoderPat/structured-neural-summarization" -> "emalgorithm/structured-neural-summarization-replication"
"CoderPat/structured-neural-summarization" -> "acleclair/ICPC2020_GNN"
"CoderPat/structured-neural-summarization" -> "CoderPat/OpenGNN"
"bigcode-project/bigcode-evaluation-harness" -> "bigcode-project/bigcode-dataset"
"bdqnghi/ggnn.tensorflow" -> "bdqnghi/treecaps"
"bdqnghi/ggnn.tensorflow" -> "bdqnghi/bi-tbcnn"
"bdqnghi/ggnn.tensorflow" -> "bdqnghi/graph-ast"
"bdqnghi/ggnn.tensorflow" -> "bdqnghi/ggnn_graph_classification"
"program-repair/program-repair.github.io" -> "program-repair/RepairThemAll"
"bentrevett/code2vec" -> "sonoisa/code2vec"
"jkoppel/QuixBugs" -> "bears-bugs/bears-benchmark"
"jkoppel/QuixBugs" -> "bugs-dot-jar/bugs-dot-jar"
"dmitrykazhdan/Representing-Programs-with-Graphs" -> "acr31/features-javac"
"KristianKarl/GraphWalker" -> "KristianKarl/GraphWalkerEditor"
"KristianKarl/GraphWalker" -> "KristianKarl/GraphWalker-Examples"
"SpoonLabs/flacoco" -> "STAMP-project/test-runner"
"cuhk-seclab/XSym" -> "cuhk-seclab/LChecker"
"wogscpar/SZZUnleashed" -> "clowee/OpenSZZ"
"neulab/code-bert-score" -> "shuyanzhou/doccoder"
"clowee/OpenSZZ" -> "wogscpar/SZZUnleashed"
"program-repair/RepairThemAll" ["l"="-17.88,-33.174"]
"program-repair/RepairThemAll_experiment" ["l"="-17.904,-33.167"]
"lin-tan/CoCoNut-Artifact" ["l"="-17.911,-33.157"]
"program-repair/defects4j-dissection" ["l"="-17.862,-33.18"]
"program-repair/program-repair.github.io" ["l"="-17.873,-33.185"]
"ripsscanner/rips" ["l"="-17.461,-32.817"]
"robocoder/rips-scanner" ["l"="-17.452,-32.79"]
"oliverklee/pixy" ["l"="-17.477,-32.87"]
"bdqnghi/graph-ast" ["l"="-17.68,-33.162"]
"bdqnghi/ggnn.tensorflow" ["l"="-17.699,-33.123"]
"deepmind/code_contests" ["l"="-17.567,-33.21"]
"openai/human-eval" ["l"="-17.583,-33.196"]
"microsoft/CodeXGLUE" ["l"="-17.65,-33.189"]
"salesforce/CodeT5" ["l"="-17.597,-33.182"]
"salesforce/CodeGen" ["l"="27.407,31.049"]
"microsoft/CodeBERT" ["l"="-17.634,-33.193"]
"VHellendoorn/Code-LMs" ["l"="-17.572,-33.179"]
"hendrycks/apps" ["l"="-17.551,-33.196"]
"facebookresearch/CodeGen" ["l"="-17.597,-33.166"]
"IBM/Project_CodeNet" ["l"="-17.607,-33.203"]
"github/CodeSearchNet" ["l"="-17.632,-33.215"]
"salesforce/CodeRL" ["l"="-17.545,-33.171"]
"google-research/FLAN" ["l"="27.563,31.22"]
"facebookresearch/metaseq" ["l"="27.454,31.032"]
"EleutherAI/the-pile" ["l"="27.608,31.172"]
"CarperAI/trlx" ["l"="27.437,31.132"]
"dpfried/incoder" ["l"="-17.54,-33.184"]
"wasiahmad/PLBART" ["l"="-17.608,-33.172"]
"CGCL-codes/naturalcc" ["l"="-17.631,-33.175"]
"CGCL-codes/VulDeePecker" ["l"="-17.612,-33.049"]
"SySeVR/SySeVR" ["l"="-17.614,-33.066"]
"johnb110/VDPython" ["l"="-17.597,-33.064"]
"VulDetProject/ReVeal" ["l"="-17.614,-33.077"]
"epicosy/devign" ["l"="-17.608,-33.088"]
"HuantWang/FUNDED_NISL" ["l"="-17.632,-33.07"]
"ZeoVan/MSR_20_Code_vulnerability_CSV_Dataset" ["l"="-17.595,-33.074"]
"DanielLin1986/Function-level-Vulnerability-Detection" ["l"="-17.597,-33.048"]
"vulpecker/Vulpecker" ["l"="-17.628,-33.009"]
"Seahymn2019/Function-level-Vulnerability-Dataset" ["l"="-17.607,-33.036"]
"VulDeeLocator/VulDeeLocator" ["l"="-17.623,-33.06"]
"muVulDeePecker/muVulDeePecker" ["l"="-17.624,-33.029"]
"vulnerabilitydetection/VulnerabilityDetectionResearch" ["l"="-17.604,-33.073"]
"LauraWartschinski/VulnerabilityDetection" ["l"="-17.605,-33.019"]
"ICL-ml4csec/VulBERTa" ["l"="-17.62,-33.087"]
"daiquocnguyen/GNN-ReGVD" ["l"="-17.638,-33.059"]
"DanielLin1986/function_representation_learning" ["l"="-17.627,-33.039"]
"DanielLin1986/Data-Driven_Software_Vulnerability_Discovery" ["l"="-17.589,-33.022"]
"EdinburghNLP/code-docstring-corpus" ["l"="-17.642,-33.262"]
"xing-hu/TL-CodeSum" ["l"="-17.627,-33.256"]
"sriniiyer/codenn" ["l"="-17.65,-33.251"]
"wasiahmad/NeuralCodeSum" ["l"="-17.624,-33.233"]
"LittleYUYU/StackOverflow-Question-Code-Dataset" ["l"="-17.654,-33.293"]
"microsoft/graph-based-code-modelling" ["l"="-17.608,-33.244"]
"tech-srl/code2seq" ["l"="-17.662,-33.223"]
"uclnlp/pycodesuggest" ["l"="-17.619,-33.301"]
"conala-corpus/conala-baseline" ["l"="-17.642,-33.308"]
"wanyao1992/code_summarization_public" ["l"="-17.648,-33.238"]
"xing-hu/DeepCom" ["l"="-17.63,-33.279"]
"acleclair/ICPC2020_GNN" ["l"="-17.62,-33.245"]
"sriniiyer/concode" ["l"="-17.616,-33.316"]
"CoderPat/structured-neural-summarization" ["l"="-17.615,-33.265"]
"saikat107/Devign" ["l"="-17.591,-33.084"]
"VulDeePecker/Comparative_Study" ["l"="-17.588,-33.038"]
"DanielLin1986/TransferRepresentationLearning" ["l"="-17.644,-33.039"]
"davidhin/linevd" ["l"="-17.624,-33.077"]
"awsm-research/LineVul" ["l"="-17.62,-33.101"]
"MVDetection/MVD" ["l"="-17.573,-33.072"]
"DeepWukong/DeepWukong" ["l"="-17.568,-33.088"]
"guxd/deep-code-search" ["l"="-17.667,-33.248"]
"facebookresearch/Neural-Code-Search-Evaluation-Dataset" ["l"="-17.647,-33.276"]
"hamelsmu/code_search" ["l"="-17.67,-33.273"]
"guxd/deepAPI" ["l"="-17.692,-33.29"]
"xing-hu/EMSE-DeepCom" ["l"="-17.636,-33.25"]
"tech-srl/code2vec" ["l"="-17.679,-33.201"]
"zhangj111/astnn" ["l"="-17.695,-33.232"]
"c2nes/javalang" ["l"="-17.696,-33.215"]
"ishepard/pydriller" ["l"="-17.829,-33.133"]
"tsantalis/RefactoringMiner" ["l"="-17.853,-33.166"]
"mauricioaniche/repodriller" ["l"="-17.845,-33.12"]
"dspinellis/awesome-msr" ["l"="-17.866,-33.114"]
"aserg-ufmg/RefDiff" ["l"="-17.874,-33.141"]
"acmsigsoft/EmpiricalStandards" ["l"="-17.88,-33.098"]
"GumTreeDiff/gumtree" ["l"="-17.801,-33.188"]
"mauricioaniche/ck" ["l"="-17.85,-33.14"]
"tsantalis/JDeodorant" ["l"="-17.832,-33.154"]
"ckaestne/seaibib" ["l"="-17.894,-33.081"]
"RepoReapers/reaper" ["l"="-17.844,-33.098"]
"SMAT-Lab/Scalpel" ["l"="-17.36,-32.081"]
"bvasiles/empirical-methods" ["l"="-17.864,-33.093"]
"rjust/defects4j" ["l"="-17.83,-33.193"]
"ml4code/ml4code.github.io" ["l"="-17.664,-33.162"]
"octopus-platform/joern" ["l"="-17.564,-33.009"]
"ShiftLeftSecurity/joern" ["l"="-17.573,-33.051"]
"ShiftLeftSecurity/codepropertygraph" ["l"="-17.547,-33.031"]
"aalhuz/navex" ["l"="-17.506,-32.904"]
"malteskoruppa/phpjoern" ["l"="-17.535,-32.953"]
"Fraunhofer-AISEC/cpg" ["l"="-17.539,-33.006"]
"mast-group/convolutional-attention" ["l"="-17.667,-33.309"]
"liang2024086/code_comment_generation" ["l"="-17.672,-33.289"]
"danielzuegner/code-transformer" ["l"="-17.616,-33.181"]
"code-gen/cscg" ["l"="-17.588,-33.265"]
"zhangj111/rencos" ["l"="-17.604,-33.271"]
"sh1doy/summarization_tf" ["l"="-17.595,-33.253"]
"VHellendoorn/ICLR20-Great" ["l"="-17.572,-33.248"]
"NougatCA/SPT-Code" ["l"="-17.575,-33.262"]
"mcmillco/funcom" ["l"="-17.607,-33.256"]
"zetang94/ICSE2022_AST_Trans" ["l"="-17.587,-33.241"]
"ShiftLeftSecurity/overflowdb" ["l"="-17.532,-33.048"]
"JetBrains-Research/astminer" ["l"="-17.678,-33.184"]
"fabsx00/python-joern" ["l"="-20.051,-32.202"]
"eurecom-s3/symcc" ["l"="-19.936,-32.401"]
"trailofbits/polytracker" ["l"="-17.637,-32.168"]
"fengjixuchui/FuzzingPaper" ["l"="-19.904,-32.465"]
"PLSysSec/sys" ["l"="-20.001,-32.446"]
"INRIA/spoon" ["l"="-17.829,-33.225"]
"javaparser/javaparser" ["l"="9.361,21.531"]
"SpoonLabs/gumtree-spoon-ast-diff" ["l"="-17.805,-33.216"]
"SpoonLabs/spoon-examples" ["l"="-17.84,-33.275"]
"wala/WALA" ["l"="-17.362,-32.133"]
"soot-oss/soot" ["l"="-17.416,-32.104"]
"SpoonLabs/astor" ["l"="-17.872,-33.198"]
"Sable/soot" ["l"="-17.32,-32.142"]
"classgraph/classgraph" ["l"="26.55,35.837"]
"forge/roaster" ["l"="9.116,21.39"]
"randoop/randoop" ["l"="-17.856,-33.227"]
"raphw/byte-buddy" ["l"="9.27,21.429"]
"spotbugs/spotbugs" ["l"="9.142,21.556"]
"SE-ML/awesome-seml" ["l"="-17.9,-33.047"]
"kelvins/awesome-mlops" ["l"="25.448,34.215"]
"visenger/awesome-mlops" ["l"="23.713,30.51"]
"georgezouq/awesome-ai-in-finance" ["l"="21.762,32.589"]
"dair-ai/nlp_paper_summaries" ["l"="29.655,32.548"]
"krzjoa/awesome-python-data-science" ["l"="27.386,-19.623"]
"EthicalML/awesome-artificial-intelligence-guidelines" ["l"="25.6,34.14"]
"alirezadir/Production-Level-Deep-Learning" ["l"="23.788,30.575"]
"zenml-io/zenml" ["l"="25.426,34.224"]
"amitness/toolbox" ["l"="-17.939,-32.996"]
"neomatrix369/awesome-ai-ml-dl" ["l"="23.827,30.63"]
"chris-chris/ml-engineer-roadmap" ["l"="23.741,30.49"]
"davified/clean-code-ml" ["l"="23.36,4.181"]
"facebookresearch/TransCoder" ["l"="-17.647,-33.14"]
"linkedin/detext" ["l"="29.622,32.539"]
"stayawayinesctec/stayaway-app" ["l"="25.798,36.907"]
"hvmi/hvmi" ["l"="-21.309,-32.173"]
"lucidrains/reformer-pytorch" ["l"="29.844,32.396"]
"ko-nlp/Korpora" ["l"="44.465,-15.054"]
"cyberark/SkyArk" ["l"="-8.784,-1.471"]
"google-research/electra" ["l"="29.813,32.437"]
"1d8/Android-Analysis" ["l"="-17.672,-33.097"]
"facebookresearch/XLM" ["l"="29.881,32.471"]
"facebookresearch/KILT" ["l"="25.749,29.246"]
"musiKk/plyj" ["l"="-17.714,-33.281"]
"tree-sitter/py-tree-sitter" ["l"="-17.675,-33.233"]
"saltudelft/ml4se" ["l"="-17.626,-33.143"]
"UUUUnotfound/Navex_fixed" ["l"="-17.477,-32.89"]
"WSP-LAB/FUGIO" ["l"="-17.531,-32.876"]
"ircmaxell/php-cfg" ["l"="-17.453,-32.876"]
"viraptor/phply" ["l"="-17.506,-32.874"]
"cuhk-seclab/XSym" ["l"="-17.524,-32.914"]
"cuhk-seclab/TChecker" ["l"="-17.486,-32.912"]
"WSP-LAB/FUSE" ["l"="-17.535,-32.893"]
"olivo/TaintPHP" ["l"="-17.44,-32.855"]
"designsecurity/progpilot" ["l"="-24.729,-43.017"]
"bartvanarnhem/phpscan" ["l"="-17.428,-32.884"]
"OneSourceCat/phpvulhunter" ["l"="-10.901,-45.328"]
"JameelNabbo/PHP-Parsers" ["l"="-17.511,-32.852"]
"microsoft/PythonProgrammingPuzzles" ["l"="-17.515,-33.201"]
"google-research/python-graphs" ["l"="-17.541,-33.233"]
"microsoft/CodeT" ["l"="-17.497,-33.178"]
"girlscript/winter-of-contributing" ["l"="31.502,-21.938"]
"benthecoder/yt-channels-DS-AI-ML-CS" ["l"="23.757,30.298"]
"GoTurkiye/training" ["l"="22.663,-23.808"]
"input-output-hk/essential-cardano" ["l"="46.814,-27.826"]
"jorisschellekens/borb" ["l"="24.392,3.847"]
"bigcode-project/bigcode-evaluation-harness" ["l"="-17.446,-33.201"]
"jcw024/lichess_database_ETL" ["l"="-17.46,-33.223"]
"GraphWalker/graphwalker-project" ["l"="-17.991,-33.297"]
"mukatee/osmo" ["l"="-17.969,-33.298"]
"GraphWalker/graphwalker-example" ["l"="-18.01,-33.312"]
"spotify/python-graphwalker" ["l"="-18.003,-33.333"]
"dakusui/jcunit" ["l"="-18.03,-33.303"]
"Cornutum/tcases" ["l"="-17.967,-33.278"]
"KristianKarl/GraphWalker" ["l"="-18.028,-33.326"]
"jon-jacky/PyModel" ["l"="-17.981,-33.313"]
"clarkware/jdepend" ["l"="-17.84,-33.072"]
"TNG/ArchUnit" ["l"="9.08,21.235"]
"yegor256/jpeek" ["l"="27.073,-28.839"]
"dspinellis/ckjm" ["l"="-17.82,-33.081"]
"TNG/ArchUnit-Examples" ["l"="9.009,21.111"]
"parasj/contracode" ["l"="-17.622,-33.162"]
"Fraunhofer-AISEC/codyze" ["l"="-17.512,-32.981"]
"plume-oss/plume" ["l"="-17.519,-33.005"]
"Fraunhofer-AISEC/cpg-vis-neo4j" ["l"="-17.535,-32.984"]
"joernio/joern" ["l"="-17.396,-32.016"]
"ShiftLeftSecurity/scan-action" ["l"="-17.504,-33.035"]
"ShiftLeftSecurity/llvm2cpg" ["l"="-17.5,-33.017"]
"ShiftLeftSecurity/gaum" ["l"="-17.52,-33.024"]
"secure-software-engineering/phasar" ["l"="-17.594,-32.203"]
"SpoonLabs/spoon-maven-plugin" ["l"="-17.85,-33.3"]
"salesforce/jaxformer" ["l"="-17.519,-33.165"]
"Sea-Snell/JAXSeq" ["l"="23.475,33.649"]
"Neuraxio/Neuraxle" ["l"="25.671,33.97"]
"uber/manifold" ["l"="25.521,34.034"]
"amitness/papers-with-video" ["l"="-17.957,-32.95"]
"hundredblocks/ml-powered-applications" ["l"="23.777,30.291"]
"amitness/learning" ["l"="27.741,-20.094"]
"microsoft/nlp" ["l"="29.812,32.591"]
"luspr/awesome-ml-courses" ["l"="23.804,30.621"]
"alan-turing-institute/CleverCSV" ["l"="22.807,2.756"]
"EthicalML/xai" ["l"="25.758,34.027"]
"TDAmeritrade/stumpy" ["l"="22.465,36.059"]
"gdikov/hypertunity" ["l"="-17.979,-32.981"]
"rasbt/stat453-deep-learning-ss20" ["l"="28.112,32.566"]
"benedekrozemberczki/awesome-gradient-boosting-papers" ["l"="22.049,38.792"]
"ckaestne/seai" ["l"="-17.937,-33.063"]
"EvoSuite/evosuite" ["l"="-17.905,-33.227"]
"EMResearch/EvoMaster" ["l"="-17.964,-33.247"]
"hcoles/pitest" ["l"="9.025,21.266"]
"jacoco/jacoco" ["l"="9.226,21.541"]
"osl/jcute" ["l"="-20.168,-32.628"]
"EvoSuite/evosuite-coverage-tools" ["l"="-17.932,-33.238"]
"almondtools/testrecorder" ["l"="-17.931,-33.255"]
"gousiosg/java-callgraph" ["l"="-17.877,-33.217"]
"intel-isl/PhotorealismEnhancement" ["l"="-7.889,-19.956"]
"bugs-dot-jar/bugs-dot-jar" ["l"="-17.892,-33.18"]
"xgdsmileboy/SimFix" ["l"="-17.901,-33.19"]
"Spirals-Team/defects4j-repair" ["l"="-17.85,-33.188"]
"jkoppel/QuixBugs" ["l"="-17.923,-33.168"]
"GZoltar/gzoltar" ["l"="-17.89,-33.203"]
"DeepFL/DeepFaultLocalization" ["l"="-17.814,-33.169"]
"tree-sitter/tree-sitter-python" ["l"="-9.173,-20.998"]
"zysszy/TreeGen" ["l"="-10.918,-4.714"]
"bdqnghi/infercode" ["l"="-17.663,-33.175"]
"clonebench/BigCloneBench" ["l"="-17.718,-33.261"]
"jacobwwh/graphmatch_clone" ["l"="-17.703,-33.247"]
"tree-sitter/tree-sitter-java" ["l"="-17.698,-33.268"]
"CGCL-codes/awesome-code-intelligence" ["l"="-17.672,-33.14"]
"wala/graph4code" ["l"="-17.604,-33.122"]
"Adrninistrator/java-all-call-graph" ["l"="-17.893,-33.254"]
"Adrninistrator/java-callgraph2" ["l"="-17.905,-33.265"]
"didi/super-jacoco" ["l"="46.873,-1.028"]
"Sable/heros" ["l"="-17.348,-32.127"]
"secure-software-engineering/FlowDroid" ["l"="-17.3,-32.112"]
"agemagician/CodeTrans" ["l"="-17.603,-33.144"]
"wasiahmad/AVATAR" ["l"="-17.579,-33.133"]
"google-research/plur" ["l"="-17.565,-33.142"]
"bayesgroup/code_transformers" ["l"="-17.585,-33.148"]
"pdlan/OSCAR" ["l"="-17.662,-33.204"]
"facebookresearch/code-prediction-transformer" ["l"="-10.938,-4.735"]
"threedr3am/gadgetinspector" ["l"="-10.843,-45.797"]
"ice-doom/codeql_compile" ["l"="-10.814,-45.843"]
"FudanSELab/CLDIFF" ["l"="-17.783,-33.168"]
"SpoonLabs/nopol" ["l"="-17.848,-33.203"]
"mechtaev/angelix" ["l"="-17.945,-33.214"]
"eclipse/repairnator" ["l"="-17.955,-33.189"]
"yyxhdy/arja" ["l"="-17.911,-33.206"]
"SpoonLabs/coming" ["l"="-17.806,-33.253"]
"MartinWitt/laughing-train" ["l"="-8.244,-42.02"]
"amitness/ml-datasets" ["l"="27.213,-35.195"]
"IBM/D2A" ["l"="-17.635,-33.107"]
"spcl/ncc" ["l"="27.585,35.683"]
"crestonbunch/tbcnn" ["l"="-17.739,-33.243"]
"parasol-aser/deepsim" ["l"="-17.738,-33.259"]
"shiyy123/FCDetector" ["l"="-17.727,-33.228"]
"jeffsvajlenko/BigCloneEval" ["l"="-17.73,-33.274"]
"OOPSLA-2019-BugDetection/OOPSLA-2019-BugDetection" ["l"="-17.722,-33.241"]
"SpoonLabs/flacoco" ["l"="-17.995,-33.19"]
"bears-bugs/bears-benchmark" ["l"="-17.937,-33.176"]
"SerVal-DTF/AVATAR" ["l"="-17.886,-33.163"]
"pkuzqh/Recoder" ["l"="-17.963,-33.172"]
"SerVal-DTF/TBar" ["l"="-17.931,-33.186"]
"Adobee/ACS" ["l"="-17.937,-33.197"]
"DehengYang/TransplantFix" ["l"="-17.924,-33.195"]
"JetBrains-Research/psiminer" ["l"="-17.722,-33.153"]
"JetBrains-Research/code2seq" ["l"="-17.698,-33.161"]
"sonoisa/code2vec" ["l"="-17.723,-33.17"]
"m3yrin/code2seq" ["l"="-17.706,-33.194"]
"JetBrains-Research/reflekt" ["l"="47.983,-3.581"]
"michaelpradel/DeepBugs" ["l"="-17.751,-33.224"]
"tech-srl/slm-code-generation" ["l"="-17.706,-33.144"]
"diverse-project/maven-miner" ["l"="-17.898,-33.106"]
"TestRoots/travistorrent-tools" ["l"="-17.913,-33.103"]
"electricalwind/data7" ["l"="-17.866,-33.077"]
"mauricioaniche/codesheriff" ["l"="-17.894,-33.126"]
"asouza/pilares-design-codigo" ["l"="27.294,-0.967"]
"tushartushar/DesigniteJava" ["l"="-17.805,-33.103"]
"asouza/complexity-tracker" ["l"="27.296,-0.942"]
"mauricioaniche/springlint" ["l"="-17.806,-33.124"]
"rodhilton/jasome" ["l"="-17.828,-33.113"]
"IBM/Graph2Seq" ["l"="-17.575,-33.288"]
"beckdaniel/acl2018_graph2seq" ["l"="29.861,31.896"]
"syxu828/Graph2Seq-0.1" ["l"="-17.552,-33.309"]
"nwpuhq/Graph2Seq" ["l"="-17.541,-33.323"]
"diegma/graph-2-text" ["l"="29.873,31.952"]
"freesunshine0316/neural-graph-to-seq-mp" ["l"="29.841,31.883"]
"hugochan/RL-based-Graph2Seq-for-NQG" ["l"="25.977,29.939"]
"bdqnghi/ast-node-encoding" ["l"="-17.73,-33.1"]
"bdqnghi/treecaps" ["l"="-17.715,-33.104"]
"Aetf/tensorflow-tbcnn" ["l"="-17.767,-33.257"]
"AwdHanPeng/TPTrans" ["l"="-17.576,-33.158"]
"gagan3012/project-code-py" ["l"="-17.511,-33.222"]
"dmitrykazhdan/Representing-Programs-with-Graphs" ["l"="-17.549,-33.278"]
"bigscience-workshop/t-zero" ["l"="27.617,31.24"]
"JetBrains-Research/DeepBugsPlugin" ["l"="-17.783,-33.272"]
"BASE-LAB-SJTU/CosBench" ["l"="-17.632,-33.3"]
"rajarshihaldar/codetextmatch" ["l"="-17.648,-33.322"]
"LittleYUYU/CoaCor" ["l"="-17.675,-33.328"]
"Jun-jie-Huang/CoCLR" ["l"="-17.658,-33.332"]
"jeniyat/StackOverflowNER" ["l"="-17.636,-33.339"]
"bentrevett/code2vec" ["l"="-17.743,-33.162"]
"gingasan/sit3" ["l"="-17.605,-33.295"]
"spostman/ppp-ccs2018" ["l"="-17.549,-32.875"]
"isa-group/RESTest" ["l"="-17.995,-33.251"]
"arcuri82/testing_security_development_enterprise_systems" ["l"="-18.07,-33.265"]
"Rhapsod/sapienz" ["l"="-18.01,-33.265"]
"EMResearch/EMB" ["l"="-17.981,-33.262"]
"acr31/features-javac" ["l"="-17.528,-33.291"]
"ksen007/janala2" ["l"="-20.203,-32.652"]
"rohanpadhye/jqf" ["l"="-20.027,-32.538"]
"pholser/junit-quickcheck" ["l"="8.91,21.242"]
"isstac/kelinci" ["l"="-20.065,-32.532"]
"microsoft/PyCodeGPT" ["l"="-17.477,-33.166"]
"reddy-lab-code-research/PPOCoder" ["l"="-17.521,-33.142"]
"yuewang-cuhk/awesome-programming-language-pretraining-papers" ["l"="-17.504,-33.148"]
"neulab/code-bert-score" ["l"="-17.484,-33.143"]
"hamelsmu/Seq2Seq_Tutorial" ["l"="-17.676,-33.358"]
"chrisjmccormick/simsearch" ["l"="-17.688,-33.307"]
"saeg/jaguar" ["l"="-17.925,-33.213"]
"rodrigo-brito/refactoring-aware-diff" ["l"="-17.917,-33.126"]
"Mondego/SourcererCC" ["l"="-17.737,-33.303"]
"skyhover/Deckard" ["l"="-17.75,-33.326"]
"PRL-PRG/dejavu-artifact" ["l"="-17.73,-33.327"]
"micheletufano/AutoenCODE" ["l"="-17.753,-33.293"]
"acmsigsoft/submission-checker" ["l"="-17.924,-33.087"]
"margaretstorey/EmseUvic2020" ["l"="-17.877,-33.07"]
"Mondego/oreo" ["l"="-17.771,-33.352"]
"Mondego/oreo-artifact" ["l"="-17.779,-33.369"]
"SonarSource/sonar-php" ["l"="-17.406,-32.862"]
"lin-tan/CURE" ["l"="-17.933,-33.15"]
"arcuri82/algorithms" ["l"="-18.131,-33.271"]
"arcuri82/web_development_and_api_design" ["l"="-18.109,-33.274"]
"isa-group/IDL" ["l"="-18.018,-33.24"]
"isa-group/IDLReasoner" ["l"="-18.022,-33.251"]
"lanwuwei/BERTOverflow" ["l"="-17.624,-33.368"]
"Bolin0215/CSCGDual" ["l"="-17.682,-33.259"]
"XMUDM/BASTS" ["l"="-17.627,-33.268"]
"BeiningBogen/iOS-Kristiania" ["l"="-18.127,-33.289"]
"yh1105/datasetforTBCCD" ["l"="-17.75,-33.276"]
"microsoft/dpu-utils" ["l"="-17.496,-33.256"]
"google-research-datasets/great" ["l"="-17.539,-33.263"]
"JetBrains-Research/RefactorInsight" ["l"="-17.892,-33.148"]
"jodavimehran/code-tracker" ["l"="-17.872,-33.157"]
"wogscpar/SZZUnleashed" ["l"="-17.865,-33.247"]
"GoneZ5/SCRIPT" ["l"="-17.588,-33.323"]
"eth-sri/TFix" ["l"="-17.997,-33.163"]
"mauricioaniche/change-metrics" ["l"="-17.826,-33.096"]
"Program-Analysis/Java-to-AST-with-Visualization" ["l"="-17.753,-33.356"]
"mjureczko/CKJM-extended" ["l"="-17.81,-33.052"]
"arcuri82/pg6300" ["l"="-18.074,-33.283"]
"arcuri82/pg4200" ["l"="-18.087,-33.282"]
"arcuri82/tk2100" ["l"="-18.098,-33.252"]
"glennbech/PGR301" ["l"="-18.08,-33.251"]
"pgr301-2019/labs" ["l"="-18.09,-33.266"]
"bdqnghi/bi-tbcnn" ["l"="-17.711,-33.088"]
"bdqnghi/SAR_API_mapping" ["l"="-17.713,-33.063"]
"bdqnghi/hierarchical-programming-language-mapping" ["l"="-17.729,-33.067"]
"bdqnghi/ggnn_graph_classification" ["l"="-17.7,-33.1"]
"gaoxiang9430/Fix2Fit" ["l"="-17.975,-33.215"]
"JetBrains-Research/kinference" ["l"="-17.806,-33.31"]
"cupertank/browser-benchmarks" ["l"="-17.816,-33.328"]
"hamelsmu/ktext" ["l"="-17.678,-33.388"]
"TruX-DTF/TBar" ["l"="-17.936,-33.139"]
"ICSE-2019-AUTOFIX/ICSE-2019-AUTOFIX" ["l"="-17.949,-33.146"]
"michiyasunaga/DrRepair" ["l"="-18.027,-33.135"]
"michiyasunaga/BIFI" ["l"="-17.996,-33.146"]
"openapi4j/openapi4j" ["l"="-17.956,-33.317"]
"JetBrains-Research/Lupa" ["l"="-17.741,-33.135"]
"Spirals-Team/IntroClassJava" ["l"="-17.917,-33.178"]
"emalgorithm/structured-neural-summarization-replication" ["l"="-17.595,-33.289"]
"CoderPat/OpenGNN" ["l"="-17.588,-33.304"]
"bigcode-project/bigcode-dataset" ["l"="-17.41,-33.203"]
"KristianKarl/GraphWalkerEditor" ["l"="-18.047,-33.333"]
"KristianKarl/GraphWalker-Examples" ["l"="-18.04,-33.344"]
"STAMP-project/test-runner" ["l"="-18.02,-33.19"]
"cuhk-seclab/LChecker" ["l"="-17.543,-32.917"]
"clowee/OpenSZZ" ["l"="-17.87,-33.273"]
"shuyanzhou/doccoder" ["l"="-17.458,-33.134"]
}