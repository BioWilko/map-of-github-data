digraph G {
"input-output-hk/cardano-node" -> "input-output-hk/cardano-wallet"
"input-output-hk/cardano-node" -> "input-output-hk/daedalus"
"input-output-hk/cardano-node" -> "input-output-hk/plutus"
"input-output-hk/cardano-node" -> "input-output-hk/plutus-pioneer-program"
"input-output-hk/cardano-node" -> "cardano-community/guild-operators"
"input-output-hk/cardano-node" -> "cardano-foundation/CIPs"
"input-output-hk/cardano-node" -> "input-output-hk/cardano-sl" ["e"=1]
"input-output-hk/cardano-node" -> "gitmachtl/scripts"
"input-output-hk/cardano-node" -> "input-output-hk/cardano-db-sync"
"input-output-hk/cardano-node" -> "input-output-hk/essential-cardano"
"input-output-hk/cardano-node" -> "input-output-hk/ouroboros-network"
"input-output-hk/cardano-node" -> "input-output-hk/cardano-graphql"
"input-output-hk/cardano-node" -> "input-output-hk/plutus-apps"
"input-output-hk/cardano-node" -> "input-output-hk/adrestia"
"input-output-hk/cardano-node" -> "input-output-hk/jormungandr"
"input-output-hk/essential-cardano" -> "input-output-hk/plutus"
"input-output-hk/essential-cardano" -> "input-output-hk/plutus-pioneer-program"
"input-output-hk/essential-cardano" -> "cardano-foundation/CIPs"
"input-output-hk/essential-cardano" -> "gitmachtl/scripts"
"input-output-hk/essential-cardano" -> "cardano-community/guild-operators"
"input-output-hk/essential-cardano" -> "input-output-hk/hydra-poc"
"input-output-hk/essential-cardano" -> "input-output-hk/cardano-node"
"input-output-hk/essential-cardano" -> "CardanoSolutions/ogmios"
"input-output-hk/essential-cardano" -> "input-output-hk/cardano-db-sync"
"input-output-hk/essential-cardano" -> "input-output-hk/cardano-graphql"
"input-output-hk/essential-cardano" -> "input-output-hk/cardano-wallet"
"input-output-hk/essential-cardano" -> "cardano-foundation/developer-portal"
"input-output-hk/essential-cardano" -> "input-output-hk/plutus-starter"
"input-output-hk/essential-cardano" -> "SundaeSwap-finance/toolkit-for-cardano"
"input-output-hk/essential-cardano" -> "input-output-hk/cardano-documentation"
"input-output-hk/plutus" -> "input-output-hk/plutus-pioneer-program"
"input-output-hk/plutus" -> "input-output-hk/cardano-wallet"
"input-output-hk/plutus" -> "input-output-hk/cardano-node"
"input-output-hk/plutus" -> "input-output-hk/daedalus"
"input-output-hk/plutus" -> "input-output-hk/plutus-apps"
"input-output-hk/plutus" -> "input-output-hk/plutus-starter"
"input-output-hk/plutus" -> "input-output-hk/ouroboros-network"
"input-output-hk/plutus" -> "input-output-hk/essential-cardano"
"input-output-hk/plutus" -> "cardano-foundation/CIPs"
"input-output-hk/plutus" -> "Plutonomicon/plutonomicon"
"input-output-hk/plutus" -> "input-output-hk/cardano-db-sync"
"input-output-hk/plutus" -> "input-output-hk/cardano-graphql"
"input-output-hk/plutus" -> "input-output-hk/marlowe"
"input-output-hk/plutus" -> "input-output-hk/hydra-poc"
"input-output-hk/plutus" -> "cardano-community/guild-operators"
"input-output-hk/plutus-pioneer-program" -> "input-output-hk/plutus"
"input-output-hk/plutus-pioneer-program" -> "input-output-hk/plutus-apps"
"input-output-hk/plutus-pioneer-program" -> "input-output-hk/cardano-node"
"input-output-hk/plutus-pioneer-program" -> "input-output-hk/plutus-starter"
"input-output-hk/plutus-pioneer-program" -> "input-output-hk/essential-cardano"
"input-output-hk/plutus-pioneer-program" -> "cardano-foundation/CIPs"
"input-output-hk/plutus-pioneer-program" -> "Plutonomicon/plutonomicon"
"input-output-hk/plutus-pioneer-program" -> "input-output-hk/haskell-course"
"input-output-hk/plutus-pioneer-program" -> "iohkedu/haskell-2020"
"input-output-hk/plutus-pioneer-program" -> "input-output-hk/cardano-wallet"
"input-output-hk/plutus-pioneer-program" -> "Berry-Pool/nami-wallet"
"input-output-hk/plutus-pioneer-program" -> "cardano-community/guild-operators"
"input-output-hk/plutus-pioneer-program" -> "CardanoSolutions/ogmios"
"input-output-hk/plutus-pioneer-program" -> "input-output-hk/Alonzo-testnet"
"input-output-hk/plutus-pioneer-program" -> "input-output-hk/daedalus"
"input-output-hk/plutus-starter" -> "input-output-hk/plutus-apps"
"input-output-hk/plutus-starter" -> "Plutonomicon/plutonomicon"
"input-output-hk/plutus-starter" -> "input-output-hk/Alonzo-testnet"
"input-output-hk/plutus-starter" -> "iohkedu/haskell-2020"
"input-output-hk/plutus-starter" -> "Emurgo/cardano-serialization-lib"
"input-output-hk/plutus-starter" -> "input-output-hk/plutus"
"input-output-hk/plutus-starter" -> "input-output-hk/plutus-pioneer-program"
"input-output-hk/plutus-starter" -> "mlabs-haskell/awesome-plutus"
"input-output-hk/plutus-starter" -> "aiken-lang/aiken"
"input-output-hk/plutus-starter" -> "mlabs-haskell/plutip"
"input-output-hk/plutus-starter" -> "CardanoSolutions/ogmios"
"input-output-hk/plutus-starter" -> "spacebudz/lucid"
"input-output-hk/plutus-starter" -> "txpipe/plutus-starter-kit"
"input-output-hk/plutus-starter" -> "MartifyLabs/mesh"
"input-output-hk/plutus-starter" -> "input-output-hk/cardano-graphql"
"cardano-community/guild-operators" -> "gitmachtl/scripts"
"cardano-community/guild-operators" -> "papacarp/pooltool.io"
"cardano-community/guild-operators" -> "AndrewWestberg/cncli"
"cardano-community/guild-operators" -> "cardano-foundation/CIPs"
"cardano-community/guild-operators" -> "txpipe/oura"
"cardano-community/guild-operators" -> "Emurgo/cardano-serialization-lib"
"cardano-community/guild-operators" -> "input-output-hk/cardano-db-sync"
"cardano-community/guild-operators" -> "vacuumlabs/cardano-hw-cli"
"cardano-community/guild-operators" -> "input-output-hk/cardano-node"
"cardano-community/guild-operators" -> "input-output-hk/cardano-graphql"
"cardano-community/guild-operators" -> "input-output-hk/cardano-tutorials"
"cardano-community/guild-operators" -> "cardano-foundation/developer-portal"
"cardano-community/guild-operators" -> "txpipe/scrolls"
"cardano-community/guild-operators" -> "input-output-hk/cardano-rt-view"
"cardano-community/guild-operators" -> "input-output-hk/jormungandr"
"coinbase/rosetta-sdk-go" -> "coinbase/rosetta-cli"
"coinbase/rosetta-sdk-go" -> "coinbase/rosetta-specifications"
"coinbase/rosetta-sdk-go" -> "coinbase/rosetta-ethereum"
"coinbase/rosetta-sdk-go" -> "coinbase/rosetta-bitcoin"
"input-output-hk/cardano-wallet" -> "input-output-hk/daedalus"
"input-output-hk/cardano-wallet" -> "input-output-hk/cardano-node"
"input-output-hk/cardano-wallet" -> "input-output-hk/adrestia"
"input-output-hk/cardano-wallet" -> "input-output-hk/plutus"
"input-output-hk/cardano-wallet" -> "input-output-hk/cardano-db-sync"
"input-output-hk/cardano-wallet" -> "input-output-hk/cardano-graphql"
"input-output-hk/cardano-wallet" -> "input-output-hk/ouroboros-network"
"input-output-hk/cardano-wallet" -> "input-output-hk/jormungandr"
"input-output-hk/cardano-wallet" -> "cardano-foundation/CIPs"
"input-output-hk/cardano-wallet" -> "input-output-hk/cardano-addresses"
"input-output-hk/cardano-wallet" -> "input-output-hk/plutus-apps"
"input-output-hk/cardano-wallet" -> "input-output-hk/cardano-base"
"input-output-hk/cardano-wallet" -> "Emurgo/yoroi-frontend"
"input-output-hk/cardano-wallet" -> "input-output-hk/cardano-ledger-specs"
"input-output-hk/cardano-wallet" -> "Emurgo/cardano-serialization-lib"
"input-output-hk/rust-cardano" -> "input-output-hk/cardano-cli"
"input-output-hk/rust-cardano" -> "input-output-hk/plutus-prototype"
"input-output-hk/rust-cardano" -> "input-output-hk/jormungandr"
"input-output-hk/rust-cardano" -> "input-output-hk/js-cardano-wasm"
"input-output-hk/rust-cardano" -> "input-output-hk/project-icarus"
"input-output-hk/cardano-ops" -> "input-output-hk/cardano-ledger-specs"
"input-output-hk/cardano-ops" -> "input-output-hk/bech32"
"input-output-hk/cardano-ops" -> "input-output-hk/smash"
"input-output-hk/cardano-ops" -> "input-output-hk/cardano-base"
"input-output-hk/cardano-ops" -> "input-output-hk/cardano-node-tests"
"alessandrokonrad/Pi-Pool" -> "gitmachtl/scripts"
"alessandrokonrad/Pi-Pool" -> "input-output-hk/plutus-starter"
"alessandrokonrad/Pi-Pool" -> "Berry-Pool/nami-wallet"
"input-output-hk/cardano-documentation" -> "cardano-foundation/developer-portal"
"input-output-hk/cardano-documentation" -> "input-output-hk/cardano-graphql"
"input-output-hk/cardano-documentation" -> "cardano-foundation/CIPs"
"input-output-hk/cardano-documentation" -> "input-output-hk/ouroboros-network"
"input-output-hk/cardano-documentation" -> "input-output-hk/Alonzo-testnet"
"input-output-hk/cardano-documentation" -> "cardano-foundation/cardano-token-registry"
"input-output-hk/cardano-documentation" -> "input-output-hk/plutus-apps"
"input-output-hk/cardano-documentation" -> "input-output-hk/cardano-db-sync"
"input-output-hk/cardano-documentation" -> "input-output-hk/cardano-wallet"
"input-output-hk/cardano-documentation" -> "input-output-hk/cardano-base"
"input-output-hk/cardano-documentation" -> "input-output-hk/plutus-use-cases"
"input-output-hk/cardano-documentation" -> "input-output-hk/cardano-node-tests"
"input-output-hk/cardano-documentation" -> "input-output-hk/haskell-course"
"input-output-hk/cardano-documentation" -> "gitmachtl/scripts"
"input-output-hk/cardano-documentation" -> "cardano-community/guild-operators"
"input-output-hk/daedalus" -> "input-output-hk/cardano-wallet"
"input-output-hk/daedalus" -> "input-output-hk/cardano-node"
"input-output-hk/daedalus" -> "input-output-hk/plutus"
"input-output-hk/daedalus" -> "input-output-hk/cardano-sl" ["e"=1]
"input-output-hk/daedalus" -> "input-output-hk/adrestia"
"input-output-hk/daedalus" -> "input-output-hk/jormungandr"
"input-output-hk/daedalus" -> "Emurgo/yoroi-frontend"
"input-output-hk/daedalus" -> "cardano-foundation/CIPs"
"input-output-hk/daedalus" -> "input-output-hk/ouroboros-network"
"input-output-hk/daedalus" -> "input-output-hk/cardano-graphql"
"input-output-hk/daedalus" -> "input-output-hk/plutus-pioneer-program"
"input-output-hk/daedalus" -> "input-output-hk/cardano-db-sync"
"input-output-hk/daedalus" -> "gitmachtl/scripts"
"input-output-hk/daedalus" -> "Emurgo/cardano-serialization-lib"
"input-output-hk/daedalus" -> "cardano-community/guild-operators"
"cardano-foundation/developer-portal" -> "cardano-foundation/cardano-token-registry"
"cardano-foundation/developer-portal" -> "cardano-foundation/CIPs"
"cardano-foundation/developer-portal" -> "input-output-hk/cardano-documentation"
"cardano-foundation/developer-portal" -> "cardano-community/guild-operators"
"cardano-foundation/developer-portal" -> "cardano-foundation/testnets-cardano-org"
"cardano-foundation/developer-portal" -> "input-output-hk/cardano-db-sync"
"cardano-foundation/developer-portal" -> "input-output-hk/cardano-wallet"
"cardano-foundation/developer-portal" -> "input-output-hk/plutus-apps"
"cardano-foundation/developer-portal" -> "Berry-Pool/nami-wallet"
"cardano-foundation/developer-portal" -> "input-output-hk/cardano-graphql"
"cardano-foundation/developer-portal" -> "input-output-hk/essential-cardano"
"cardano-foundation/developer-portal" -> "cardano-foundation/stake-pool-school-handbook"
"cardano-foundation/developer-portal" -> "Emurgo/cardano-serialization-lib"
"cardano-foundation/developer-portal" -> "input-output-hk/plutus"
"cardano-foundation/developer-portal" -> "CardanoSolutions/ogmios"
"input-output-hk/haskell-course" -> "spacebudz/lucid"
"input-output-hk/haskell-course" -> "Plutonomicon/plutonomicon"
"input-output-hk/haskell-course" -> "aiken-lang/aiken"
"input-output-hk/haskell-course" -> "input-output-hk/plutus-starter"
"input-output-hk/haskell-course" -> "input-output-hk/plutus-pioneer-program"
"input-output-hk/haskell-course" -> "input-output-hk/plutus-apps"
"input-output-hk/haskell-course" -> "cardano-foundation/CIPs"
"input-output-hk/haskell-course" -> "Hyperion-BT/Helios"
"input-output-hk/haskell-course" -> "input-output-hk/cardano-documentation"
"input-output-hk/haskell-course" -> "txpipe/plutus-starter-kit"
"input-output-hk/haskell-course" -> "Plutonomicon/plutarch-plutus"
"input-output-hk/haskell-course" -> "ImperatorLang/eopsin"
"input-output-hk/haskell-course" -> "input-output-hk/cardano-db-sync"
"input-output-hk/haskell-course" -> "iohkedu/haskell-2020"
"input-output-hk/haskell-course" -> "txpipe/aiken"
"iohkedu/haskell-2020" -> "Plutonomicon/plutonomicon"
"iohkedu/haskell-2020" -> "input-output-hk/plutus-starter"
"iohkedu/haskell-2020" -> "txpipe/oura"
"iohkedu/haskell-2020" -> "input-output-hk/Alonzo-testnet"
"iohkedu/haskell-2020" -> "renzwo/cardano-plutus-apps-install-m1"
"iohkedu/haskell-2020" -> "input-output-hk/plutus-apps"
"input-output-hk/jormungandr" -> "input-output-hk/shelley-testnet"
"input-output-hk/jormungandr" -> "rdlrt/Alternate-Jormungandr-Testnet"
"input-output-hk/jormungandr" -> "Chris-Graffagnino/Jormungandr-for-Newbs"
"input-output-hk/jormungandr" -> "input-output-hk/cardano-wallet"
"input-output-hk/jormungandr" -> "gitmachtl/scripts"
"input-output-hk/jormungandr" -> "input-output-hk/ouroboros-network"
"input-output-hk/jormungandr" -> "cardano-foundation/incentivized-testnet-stakepool-registry"
"input-output-hk/jormungandr" -> "input-output-hk/daedalus"
"input-output-hk/jormungandr" -> "input-output-hk/cardano-tutorials"
"input-output-hk/jormungandr" -> "Emurgo/yoroi-frontend"
"input-output-hk/jormungandr" -> "cardano-community/guild-operators"
"input-output-hk/jormungandr" -> "papacarp/pooltool.io"
"input-output-hk/jormungandr" -> "input-output-hk/cardano-ledger-specs"
"input-output-hk/jormungandr" -> "input-output-hk/stakepool-management-tools"
"input-output-hk/jormungandr" -> "input-output-hk/rust-cardano"
"CardanoSolutions/kupo" -> "txpipe/aiken"
"CardanoSolutions/kupo" -> "OpenEngineer/plutus-light"
"CardanoSolutions/kupo" -> "MitchTurner/naumachia"
"CardanoSolutions/kupo" -> "txpipe/pallas"
"CardanoSolutions/kupo" -> "txpipe/scrolls"
"cffls/pycardano" -> "blockfrost/blockfrost-python"
"cffls/pycardano" -> "ImperatorLang/eopsin"
"cffls/pycardano" -> "txpipe/aiken"
"cffls/pycardano" -> "dynamicstrategies/cardano-wallet-connector"
"cffls/pycardano" -> "emesik/cardano-python"
"cffls/pycardano" -> "Berry-Pool/lucid"
"cffls/pycardano" -> "blockfrost/blockfrost-backend-ryo"
"cffls/pycardano" -> "ImperatorLang/imperator"
"cffls/pycardano" -> "CardanoSolutions/kupo"
"cffls/pycardano" -> "cffls/py2hs"
"cffls/pycardano" -> "txpipe/oura"
"cffls/pycardano" -> "OpenEngineer/plutus-light"
"cffls/pycardano" -> "Hyperion-BT/Helios"
"input-output-hk/hydra-poc" -> "CardanoSolutions/ogmios"
"input-output-hk/hydra-poc" -> "input-output-hk/mithril"
"input-output-hk/hydra-poc" -> "input-output-hk/cardano-db-sync"
"input-output-hk/hydra-poc" -> "CardanoSolutions/kupo"
"input-output-hk/hydra-poc" -> "input-output-hk/cardano-graphql"
"input-output-hk/hydra-poc" -> "input-output-hk/hydra-sim"
"input-output-hk/hydra-poc" -> "txpipe/oura"
"input-output-hk/hydra-poc" -> "input-output-hk/cardano-base"
"input-output-hk/hydra-poc" -> "input-output-hk/cardano-ops"
"input-output-hk/hydra-poc" -> "input-output-hk/plutus-apps"
"input-output-hk/hydra-poc" -> "txpipe/aiken"
"input-output-hk/hydra-poc" -> "txpipe/pallas"
"input-output-hk/hydra-poc" -> "input-output-hk/bech32"
"txpipe/oura" -> "txpipe/pallas"
"txpipe/oura" -> "txpipe/scrolls"
"txpipe/oura" -> "txpipe/aiken"
"txpipe/oura" -> "CardanoSolutions/kupo"
"txpipe/oura" -> "Plutonomicon/plutonomicon"
"txpipe/oura" -> "Emurgo/cardano-serialization-lib"
"txpipe/oura" -> "CardanoSolutions/ogmios"
"txpipe/oura" -> "Berry-Pool/lucid"
"txpipe/oura" -> "dcSpark/cardano-multiplatform-lib"
"txpipe/oura" -> "dcSpark/fracada"
"txpipe/oura" -> "cloudstruct/go-ouroboros-network"
"txpipe/oura" -> "Hyperion-BT/Helios"
"txpipe/oura" -> "input-output-hk/mithril"
"txpipe/oura" -> "cardano-community/guild-operators"
"txpipe/oura" -> "cffls/pycardano"
"cardano-foundation/incentivized-testnet-stakepool-registry" -> "rdlrt/Alternate-Jormungandr-Testnet"
"cardano-foundation/testnets-cardano-org" -> "input-output-hk/smash"
"Emurgo/yoroi-frontend" -> "Emurgo/yoroi-mobile"
"Emurgo/yoroi-frontend" -> "cardano-foundation/CIPs"
"Emurgo/yoroi-frontend" -> "input-output-hk/cardano-db-sync"
"Emurgo/yoroi-frontend" -> "input-output-hk/cardano-wallet"
"Emurgo/yoroi-frontend" -> "input-output-hk/daedalus"
"Emurgo/yoroi-frontend" -> "Emurgo/cardano-serialization-lib"
"Emurgo/yoroi-frontend" -> "input-output-hk/jormungandr"
"Emurgo/yoroi-frontend" -> "input-output-hk/cardano-graphql"
"Emurgo/yoroi-frontend" -> "cardano-community/guild-operators"
"Emurgo/yoroi-frontend" -> "vacuumlabs/adalite" ["e"=1]
"Emurgo/yoroi-frontend" -> "Berry-Pool/nami-wallet"
"Emurgo/yoroi-frontend" -> "cardano-foundation/testnets-cardano-org"
"Emurgo/yoroi-frontend" -> "CardanoSolutions/ogmios"
"Emurgo/yoroi-frontend" -> "input-output-hk/cardano-ledger-specs"
"Emurgo/yoroi-frontend" -> "input-output-hk/ouroboros-network"
"input-output-hk/cardano-db-sync" -> "input-output-hk/cardano-graphql"
"input-output-hk/cardano-db-sync" -> "input-output-hk/cardano-addresses"
"input-output-hk/cardano-db-sync" -> "Emurgo/cardano-serialization-lib"
"input-output-hk/cardano-db-sync" -> "cardano-foundation/CIPs"
"input-output-hk/cardano-db-sync" -> "input-output-hk/cardano-wallet"
"input-output-hk/cardano-db-sync" -> "CardanoSolutions/ogmios"
"input-output-hk/cardano-db-sync" -> "gitmachtl/scripts"
"input-output-hk/cardano-db-sync" -> "input-output-hk/cardano-rosetta"
"input-output-hk/cardano-db-sync" -> "input-output-hk/cardano-ops"
"input-output-hk/cardano-db-sync" -> "input-output-hk/ouroboros-network"
"input-output-hk/cardano-db-sync" -> "cardano-foundation/cardano-token-registry"
"input-output-hk/cardano-db-sync" -> "input-output-hk/cardano-ledger-specs"
"input-output-hk/cardano-db-sync" -> "input-output-hk/plutus-apps"
"input-output-hk/cardano-db-sync" -> "input-output-hk/hydra-poc"
"input-output-hk/cardano-db-sync" -> "cardano-community/guild-operators"
"input-output-hk/cardano-js-sdk" -> "Emurgo/cardano-serialization-lib"
"input-output-hk/cardano-js-sdk" -> "input-output-hk/cardano-ledger"
"input-output-hk/cardano-js-sdk" -> "input-output-hk/cardano-graphql"
"input-output-hk/cardano-js-sdk" -> "tango-crypto/cardano-wallet-js"
"input-output-hk/cardano-js-sdk" -> "blockfrost/blockfrost-js"
"input-output-hk/cardano-js-sdk" -> "CardanoSolutions/ogmios"
"input-output-hk/cardano-js-sdk" -> "input-output-hk/cardano-configurations"
"input-output-hk/cardano-js-sdk" -> "input-output-hk/cardano-db-sync"
"input-output-hk/cardano-js-sdk" -> "Berry-Pool/nami-wallet"
"input-output-hk/cardano-js-sdk" -> "input-output-hk/cardano-launcher"
"cardano-foundation/CIPs" -> "Emurgo/cardano-serialization-lib"
"cardano-foundation/CIPs" -> "input-output-hk/cardano-db-sync"
"cardano-foundation/CIPs" -> "cardano-community/guild-operators"
"cardano-foundation/CIPs" -> "Berry-Pool/nami-wallet"
"cardano-foundation/CIPs" -> "input-output-hk/plutus-apps"
"cardano-foundation/CIPs" -> "cardano-foundation/cardano-token-registry"
"cardano-foundation/CIPs" -> "cardano-foundation/developer-portal"
"cardano-foundation/CIPs" -> "Plutonomicon/plutonomicon"
"cardano-foundation/CIPs" -> "input-output-hk/cardano-wallet"
"cardano-foundation/CIPs" -> "CardanoSolutions/ogmios"
"cardano-foundation/CIPs" -> "txpipe/oura"
"cardano-foundation/CIPs" -> "gitmachtl/scripts"
"cardano-foundation/CIPs" -> "input-output-hk/cardano-graphql"
"cardano-foundation/CIPs" -> "Emurgo/yoroi-frontend"
"cardano-foundation/CIPs" -> "input-output-hk/hydra-poc"
"coinbase/rosetta-bitcoin" -> "coinbase/rosetta-cli"
"coinbase/rosetta-bitcoin" -> "coinbase/rosetta-ethereum"
"coinbase/rosetta-cli" -> "coinbase/rosetta-sdk-go"
"coinbase/rosetta-cli" -> "coinbase/rosetta-bitcoin"
"coinbase/rosetta-cli" -> "coinbase/rosetta-specifications"
"coinbase/rosetta-cli" -> "coinbase/rosetta-ethereum"
"coinbase/rosetta-specifications" -> "coinbase/rosetta-cli"
"coinbase/rosetta-specifications" -> "coinbase/rosetta-sdk-go"
"coinbase/rosetta-specifications" -> "coinbase/rosetta-bitcoin"
"coinbase/rosetta-specifications" -> "coinbase/rosetta-ethereum"
"coinbase/rosetta-specifications" -> "coinbase/rosetta-geth-sdk"
"coinbase/rosetta-specifications" -> "input-output-hk/cardano-rosetta"
"Python-Cardano/pycardano" -> "ImperatorLang/eopsin"
"MartifyLabs/martify.contracts" -> "MartifyLabs/martify.frontend"
"SundaeSwap-finance/toolkit-for-cardano" -> "SundaeSwap-finance/alonzo-testnet"
"SundaeSwap-finance/toolkit-for-cardano" -> "cffls/pycardano"
"input-output-hk/Alonzo-testnet" -> "input-output-hk/plutus-starter"
"input-output-hk/Alonzo-testnet" -> "input-output-hk/offchain-metadata-tools"
"input-output-hk/Alonzo-testnet" -> "ADA-Finance/cardano-staking-smart-contract"
"input-output-hk/cardano-tutorials" -> "input-output-hk/cardano-ledger-specs"
"input-output-hk/cardano-tutorials" -> "gitmachtl/scripts"
"input-output-hk/cardano-tutorials" -> "papacarp/pooltool.io"
"input-output-hk/cardano-tutorials" -> "input-output-hk/cardano-ops"
"input-output-hk/cardano-tutorials" -> "input-output-hk/jormungandr"
"input-output-hk/cardano-tutorials" -> "Chris-Graffagnino/Jormungandr-for-Newbs"
"input-output-hk/cardano-tutorials" -> "cardano-community/guild-operators"
"input-output-hk/plutus-apps" -> "input-output-hk/plutus-starter"
"input-output-hk/plutus-apps" -> "Emurgo/cardano-serialization-lib"
"input-output-hk/plutus-apps" -> "input-output-hk/plutus-pioneer-program"
"input-output-hk/plutus-apps" -> "Plutonomicon/plutonomicon"
"input-output-hk/plutus-apps" -> "input-output-hk/plutus"
"input-output-hk/plutus-apps" -> "input-output-hk/cardano-db-sync"
"input-output-hk/plutus-apps" -> "cardano-foundation/CIPs"
"input-output-hk/plutus-apps" -> "txpipe/oura"
"input-output-hk/plutus-apps" -> "input-output-hk/Alonzo-testnet"
"input-output-hk/plutus-apps" -> "input-output-hk/hydra-poc"
"input-output-hk/plutus-apps" -> "cffls/pycardano"
"input-output-hk/plutus-apps" -> "spacebudz/lucid"
"input-output-hk/plutus-apps" -> "dynamicstrategies/cardano-wallet-connector"
"input-output-hk/plutus-apps" -> "input-output-hk/cardano-ledger"
"input-output-hk/plutus-apps" -> "input-output-hk/cardano-wallet"
"Chris-Graffagnino/Jormungandr-for-Newbs" -> "lovelypool/cardano_stuff"
"Chris-Graffagnino/Jormungandr-for-Newbs" -> "input-output-hk/jormungandr"
"Chris-Graffagnino/Jormungandr-for-Newbs" -> "rdlrt/Alternate-Jormungandr-Testnet"
"Chris-Graffagnino/Jormungandr-for-Newbs" -> "papacarp/pooltool.io"
"Chris-Graffagnino/Jormungandr-for-Newbs" -> "Straightpool/scripts"
"Chris-Graffagnino/Jormungandr-for-Newbs" -> "input-output-hk/shelley-testnet"
"Chris-Graffagnino/Jormungandr-for-Newbs" -> "input-output-hk/stakepool-management-tools"
"Chris-Graffagnino/Jormungandr-for-Newbs" -> "input-output-hk/cardano-tutorials"
"Chris-Graffagnino/Jormungandr-for-Newbs" -> "input-output-hk/jormungandr-qa"
"AndrewWestberg/cncli" -> "gitmachtl/scripts"
"AndrewWestberg/cncli" -> "cardano-community/cncli"
"AndrewWestberg/cncli" -> "papacarp/pooltool.io"
"AndrewWestberg/cncli" -> "cardano-community/guild-operators"
"AndrewWestberg/cncli" -> "txpipe/oura"
"AndrewWestberg/cncli" -> "vacuumlabs/cardano-hw-cli"
"AndrewWestberg/cncli" -> "input-output-hk/cardano-rt-view"
"AndrewWestberg/cncli" -> "rdlrt/Alternate-Jormungandr-Testnet"
"AndrewWestberg/cncli" -> "txpipe/pallas"
"AndrewWestberg/cncli" -> "cardano-foundation/CIPs"
"AndrewWestberg/cncli" -> "Emurgo/cardano-serialization-lib"
"AndrewWestberg/cncli" -> "txpipe/scrolls"
"CardanoSolutions/ogmios" -> "txpipe/oura"
"CardanoSolutions/ogmios" -> "CardanoSolutions/kupo"
"CardanoSolutions/ogmios" -> "Emurgo/cardano-serialization-lib"
"CardanoSolutions/ogmios" -> "input-output-hk/hydra-poc"
"CardanoSolutions/ogmios" -> "input-output-hk/cardano-db-sync"
"CardanoSolutions/ogmios" -> "txpipe/aiken"
"CardanoSolutions/ogmios" -> "Berry-Pool/lucid"
"CardanoSolutions/ogmios" -> "Plutonomicon/plutonomicon"
"CardanoSolutions/ogmios" -> "input-output-hk/plutus-starter"
"CardanoSolutions/ogmios" -> "cardano-foundation/CIPs"
"CardanoSolutions/ogmios" -> "txpipe/pallas"
"CardanoSolutions/ogmios" -> "spacebudz/lucid"
"CardanoSolutions/ogmios" -> "MartifyLabs/mesh"
"CardanoSolutions/ogmios" -> "input-output-hk/cardano-js-sdk"
"CardanoSolutions/ogmios" -> "Berry-Pool/nami-wallet"
"MitchTurner/naumachia" -> "OpenEngineer/plutus-light"
"Plutonomicon/plutarch-plutus" -> "perturbing/vasil-tests"
"Plutonomicon/plutonomicon" -> "Plutonomicon/plutarch"
"Plutonomicon/plutonomicon" -> "txpipe/oura"
"Plutonomicon/plutonomicon" -> "input-output-hk/plutus-starter"
"Plutonomicon/plutonomicon" -> "txpipe/aiken"
"Plutonomicon/plutonomicon" -> "Berry-Pool/lucid"
"Plutonomicon/plutonomicon" -> "Liqwid-Labs/plutus-extra"
"Plutonomicon/plutonomicon" -> "Emurgo/cardano-serialization-lib"
"Plutonomicon/plutonomicon" -> "iohkedu/haskell-2020"
"Plutonomicon/plutonomicon" -> "MartifyLabs/martify.contracts"
"Plutonomicon/plutonomicon" -> "Liqwid-Labs/agora"
"Plutonomicon/plutonomicon" -> "HarmonicPool/plu-ts"
"Plutonomicon/plutonomicon" -> "input-output-hk/plutus-apps"
"Plutonomicon/plutonomicon" -> "mlabs-haskell/plutip"
"Plutonomicon/plutonomicon" -> "aiken-lang/aiken"
"Plutonomicon/plutonomicon" -> "txpipe/scrolls"
"aiken-lang/aiken" -> "spacebudz/lucid"
"aiken-lang/aiken" -> "txpipe/plutus-starter-kit"
"aiken-lang/aiken" -> "Hyperion-BT/Helios"
"aiken-lang/aiken" -> "spacebudz/nebula"
"spacebudz/lucid" -> "aiken-lang/aiken"
"spacebudz/lucid" -> "MartifyLabs/mesh"
"spacebudz/lucid" -> "dynamicstrategies/cardano-wallet-connector"
"spacebudz/lucid" -> "Hyperion-BT/Helios"
"spacebudz/lucid" -> "spacebudz/nebula"
"spacebudz/lucid" -> "HarmonicLabs/plu-ts"
"spacebudz/lucid" -> "dQuadrant/kuber"
"ImperatorLang/eopsin" -> "Python-Cardano/pycardano"
"ImperatorLang/eopsin" -> "cffls/pycardano"
"cardano-foundation/docs-cardano-org" -> "cardano-foundation/testnets-cardano-org"
"MartifyLabs/mesh" -> "cardano-foundation/cardano-connect-with-wallet"
"MartifyLabs/mesh" -> "spacebudz/lucid"
"gitmachtl/scripts" -> "cardano-community/guild-operators"
"gitmachtl/scripts" -> "AndrewWestberg/cncli"
"gitmachtl/scripts" -> "papacarp/pooltool.io"
"gitmachtl/scripts" -> "input-output-hk/cardano-db-sync"
"gitmachtl/scripts" -> "input-output-hk/cardano-tutorials"
"gitmachtl/scripts" -> "Emurgo/cardano-serialization-lib"
"gitmachtl/scripts" -> "txpipe/oura"
"gitmachtl/scripts" -> "input-output-hk/jormungandr"
"gitmachtl/scripts" -> "cardano-foundation/CIPs"
"gitmachtl/scripts" -> "vacuumlabs/cardano-hw-cli"
"gitmachtl/scripts" -> "input-output-hk/cardano-graphql"
"gitmachtl/scripts" -> "Chris-Graffagnino/Jormungandr-for-Newbs"
"gitmachtl/scripts" -> "input-output-hk/cardano-rt-view"
"gitmachtl/scripts" -> "Berry-Pool/cardanocli-js"
"gitmachtl/scripts" -> "cardano-foundation/cardano-token-registry"
"input-output-hk/cardano-ledger" -> "input-output-hk/cardano-base"
"input-output-hk/cardano-ledger" -> "input-output-hk/ouroboros-network"
"Emurgo/yoroi-mobile" -> "Emurgo/yoroi-frontend"
"input-output-hk/cardano-addresses" -> "input-output-hk/cardano-transactions"
"input-output-hk/cardano-addresses" -> "input-output-hk/bech32"
"input-output-hk/cardano-addresses" -> "input-output-hk/cardano-db-sync"
"input-output-hk/cardano-addresses" -> "input-output-hk/cardano-base"
"input-output-hk/cardano-addresses" -> "input-output-hk/cardano-rosetta"
"Berry-Pool/nami-wallet" -> "Emurgo/cardano-serialization-lib"
"Berry-Pool/nami-wallet" -> "cardano-foundation/CIPs"
"Berry-Pool/nami-wallet" -> "Berry-Pool/lucid"
"Berry-Pool/nami-wallet" -> "dynamicstrategies/cardano-wallet-connector"
"Berry-Pool/nami-wallet" -> "Berry-Pool/cardanocli-js"
"Berry-Pool/nami-wallet" -> "CardanoSolutions/ogmios"
"Berry-Pool/nami-wallet" -> "cffls/pycardano"
"Berry-Pool/nami-wallet" -> "input-output-hk/cardano-js-sdk"
"Berry-Pool/nami-wallet" -> "input-output-hk/cardano-db-sync"
"Berry-Pool/nami-wallet" -> "dendorferpatrick/nami-wallet-examples"
"Berry-Pool/nami-wallet" -> "txpipe/oura"
"Berry-Pool/nami-wallet" -> "input-output-hk/plutus-apps"
"Berry-Pool/nami-wallet" -> "Felippo001/nami-wallet-api"
"Berry-Pool/nami-wallet" -> "Plutonomicon/plutonomicon"
"Berry-Pool/nami-wallet" -> "cardano-community/guild-operators"
"Emurgo/cardano-serialization-lib" -> "input-output-hk/cardano-db-sync"
"Emurgo/cardano-serialization-lib" -> "cardano-foundation/CIPs"
"Emurgo/cardano-serialization-lib" -> "Berry-Pool/nami-wallet"
"Emurgo/cardano-serialization-lib" -> "txpipe/oura"
"Emurgo/cardano-serialization-lib" -> "txpipe/pallas"
"Emurgo/cardano-serialization-lib" -> "CardanoSolutions/ogmios"
"Emurgo/cardano-serialization-lib" -> "input-output-hk/cardano-graphql"
"Emurgo/cardano-serialization-lib" -> "dcSpark/cardano-multiplatform-lib"
"Emurgo/cardano-serialization-lib" -> "input-output-hk/plutus-apps"
"Emurgo/cardano-serialization-lib" -> "input-output-hk/cardano-js-sdk"
"Emurgo/cardano-serialization-lib" -> "dynamicstrategies/cardano-wallet-connector"
"Emurgo/cardano-serialization-lib" -> "Plutonomicon/plutonomicon"
"Emurgo/cardano-serialization-lib" -> "input-output-hk/plutus-starter"
"Emurgo/cardano-serialization-lib" -> "txpipe/scrolls"
"Emurgo/cardano-serialization-lib" -> "txpipe/aiken"
"SinglePoolAlliance/Registration" -> "papacarp/pooltool.io"
"armada-alliance/cardano-minter" -> "Berry-Pool/cardanocli-js"
"armada-alliance/cardano-minter" -> "MartifyLabs/martify.contracts"
"armada-alliance/cardano-minter" -> "ray-network/minterr"
"armada-alliance/cardano-minter" -> "dynamicstrategies/cardano-wallet-connector"
"armada-alliance/cardano-minter" -> "dendorferpatrick/nami-wallet-examples"
"cardano-foundation/cardano-token-registry" -> "input-output-hk/offchain-metadata-tools"
"cardano-foundation/cardano-token-registry" -> "input-output-hk/cardano-db-sync"
"cardano-foundation/cardano-token-registry" -> "cardano-foundation/developer-portal"
"cardano-foundation/cardano-token-registry" -> "cardano-foundation/CIPs"
"cardano-foundation/cardano-token-registry" -> "input-output-hk/cardano-addresses"
"cardano-foundation/cardano-token-registry" -> "input-output-hk/plutus-apps"
"cardano-foundation/cardano-token-registry" -> "Emurgo/cardano-serialization-lib"
"cardano-foundation/cardano-token-registry" -> "input-output-hk/Alonzo-testnet"
"cardano-foundation/cardano-token-registry" -> "input-output-hk/cardano-base"
"cardano-foundation/cardano-token-registry" -> "input-output-hk/cardano-documentation"
"cardano-foundation/cardano-token-registry" -> "gitmachtl/scripts"
"cardano-foundation/cardano-token-registry" -> "input-output-hk/mithril"
"cardano-foundation/cardano-token-registry" -> "Berry-Pool/nami-wallet"
"cardano-foundation/cardano-token-registry" -> "input-output-hk/cardano-ops"
"cardano-foundation/cardano-token-registry" -> "cardano-foundation/stake-pool-school-handbook"
"dcSpark/carp" -> "txpipe/aiken"
"dynamicstrategies/cardano-wallet-connector" -> "dendorferpatrick/nami-wallet-examples"
"dynamicstrategies/cardano-wallet-connector" -> "spacebudz/lucid"
"dynamicstrategies/cardano-wallet-connector" -> "cffls/pycardano"
"dynamicstrategies/cardano-wallet-connector" -> "HarmonicPool/cardano-wallet-interface"
"dynamicstrategies/cardano-wallet-connector" -> "StricaHQ/typhonjs"
"dynamicstrategies/cardano-wallet-connector" -> "Berry-Pool/lucid"
"dynamicstrategies/cardano-wallet-connector" -> "MartifyLabs/martify.contracts"
"dynamicstrategies/cardano-wallet-connector" -> "Emurgo/cardano-serialization-lib"
"input-output-hk/cardano-graphql" -> "input-output-hk/cardano-db-sync"
"input-output-hk/cardano-graphql" -> "input-output-hk/cardano-rosetta"
"input-output-hk/cardano-graphql" -> "Emurgo/cardano-serialization-lib"
"input-output-hk/cardano-graphql" -> "input-output-hk/cardano-wallet"
"input-output-hk/cardano-graphql" -> "input-output-hk/cardano-rest"
"input-output-hk/cardano-graphql" -> "input-output-hk/cardano-addresses"
"input-output-hk/cardano-graphql" -> "input-output-hk/hydra-poc"
"input-output-hk/cardano-graphql" -> "input-output-hk/cardano-explorer-app"
"input-output-hk/cardano-graphql" -> "input-output-hk/ouroboros-network"
"input-output-hk/cardano-graphql" -> "input-output-hk/cardano-js-sdk"
"input-output-hk/cardano-graphql" -> "input-output-hk/cardano-ops"
"input-output-hk/cardano-graphql" -> "input-output-hk/cardano-ledger-specs"
"input-output-hk/cardano-graphql" -> "cardano-foundation/CIPs"
"input-output-hk/cardano-graphql" -> "CardanoSolutions/ogmios"
"input-output-hk/cardano-graphql" -> "input-output-hk/Alonzo-testnet"
"input-output-hk/mithril" -> "txpipe/pallas"
"papacarp/pooltool.io" -> "SinglePoolAlliance/Registration"
"tango-crypto/cardano-wallet-js" -> "StricaHQ/typhonjs"
"txpipe/scrolls" -> "txpipe/pallas"
"txpipe/scrolls" -> "txpipe/awesome-starter-kits"
"txpipe/scrolls" -> "txpipe/oura"
"input-output-hk/cardano-ledger-specs" -> "input-output-hk/cardano-ops"
"input-output-hk/cardano-ledger-specs" -> "input-output-hk/cardano-base"
"input-output-hk/cardano-ledger-specs" -> "input-output-hk/bech32"
"input-output-hk/ouroboros-network" -> "input-output-hk/cardano-base"
"input-output-hk/ouroboros-network" -> "input-output-hk/cardano-ledger"
"input-output-hk/ouroboros-network" -> "input-output-hk/cardano-ledger-specs"
"input-output-hk/ouroboros-network" -> "input-output-hk/cardano-db-sync"
"input-output-hk/ouroboros-network" -> "input-output-hk/cardano-ops"
"input-output-hk/ouroboros-network" -> "input-output-hk/cardano-wallet"
"input-output-hk/ouroboros-network" -> "input-output-hk/cardano-rosetta"
"input-output-hk/ouroboros-network" -> "input-output-hk/cardano-graphql"
"input-output-hk/ouroboros-network" -> "input-output-hk/marlowe"
"input-output-hk/ouroboros-network" -> "input-output-hk/cardano-node-tests"
"input-output-hk/ouroboros-network" -> "input-output-hk/jormungandr"
"input-output-hk/ouroboros-network" -> "input-output-hk/plutus"
"input-output-hk/ouroboros-network" -> "input-output-hk/bech32"
"input-output-hk/ouroboros-network" -> "input-output-hk/hydra-poc"
"input-output-hk/ouroboros-network" -> "cardano-foundation/CIPs"
"OpenEngineer/plutus-light" -> "MitchTurner/naumachia"
"input-output-hk/lobster-challenge" -> "input-output-hk/plutus-starter"
"input-output-hk/lobster-challenge" -> "input-output-hk/Alonzo-testnet"
"input-output-hk/lobster-challenge" -> "adacapo21/plutusPioneerProgram"
"input-output-hk/lobster-challenge" -> "woofpool/cardano-private-testnet-setup"
"input-output-hk/lobster-challenge" -> "Emurgo/Emurgo-Research" ["e"=1]
"input-output-hk/shelley-testnet" -> "input-output-hk/jormungandr"
"input-output-hk/shelley-testnet" -> "rdlrt/Alternate-Jormungandr-Testnet"
"input-output-hk/shelley-testnet" -> "input-output-hk/stakepool-management-tools"
"input-output-hk/shelley-testnet" -> "input-output-hk/jormungandr-qa"
"input-output-hk/shelley-testnet" -> "bobdobs/cardano-scripts"
"input-output-hk/shelley-testnet" -> "lovelypool/cardano_stuff"
"input-output-hk/shelley-testnet" -> "Kodex-Data-Systems/Casper"
"input-output-hk/cardano-cli" -> "input-output-hk/rust-cardano"
"abracadaniel/cardano-node-docker" -> "input-output-hk/cardano-rt-view"
"abracadaniel/cardano-node-docker" -> "gitmachtl/scripts"
"input-output-hk/cardano-base" -> "input-output-hk/cardano-ops"
"input-output-hk/cardano-base" -> "input-output-hk/cardano-ledger-specs"
"input-output-hk/cardano-base" -> "input-output-hk/cardano-ledger"
"input-output-hk/cardano-base" -> "input-output-hk/ouroboros-network"
"input-output-hk/cardano-base" -> "input-output-hk/bech32"
"input-output-hk/cardano-base" -> "input-output-hk/cardano-node-tests"
"input-output-hk/adrestia" -> "input-output-hk/cardano-wallet"
"input-output-hk/adrestia" -> "input-output-hk/cardano-node-tests"
"input-output-hk/adrestia" -> "input-output-hk/cardano-base"
"input-output-hk/adrestia" -> "input-output-hk/cardano-addresses"
"input-output-hk/adrestia" -> "input-output-hk/cardano-launcher"
"input-output-hk/adrestia" -> "input-output-hk/plutus-use-cases"
"input-output-hk/adrestia" -> "input-output-hk/bech32"
"input-output-hk/adrestia" -> "input-output-hk/daedalus"
"input-output-hk/adrestia" -> "input-output-hk/cardano-db-sync"
"Hyperion-BT/Helios" -> "txpipe/aiken"
"Hyperion-BT/Helios" -> "ImperatorLang/imperator"
"Hyperion-BT/Helios" -> "txpipe/awesome-starter-kits"
"Hyperion-BT/Helios" -> "HarmonicPool/plu-ts"
"Hyperion-BT/Helios" -> "aiken-lang/aiken"
"input-output-hk/marlowe" -> "input-output-hk/ouroboros-network"
"Berry-Pool/lucid" -> "txpipe/aiken"
"Berry-Pool/lucid" -> "txpipe/oura"
"Berry-Pool/lucid" -> "HarmonicPool/plu-ts"
"Berry-Pool/lucid" -> "dynamicstrategies/cardano-wallet-connector"
"Berry-Pool/lucid" -> "Plutonomicon/plutonomicon"
"Berry-Pool/lucid" -> "txpipe/scrolls"
"Berry-Pool/lucid" -> "cffls/pycardano"
"Berry-Pool/lucid" -> "Berry-Pool/nami-wallet"
"Berry-Pool/lucid" -> "spacebudz/nebula"
"Berry-Pool/lucid" -> "dcSpark/cardano-multiplatform-lib"
"Berry-Pool/lucid" -> "CardanoSolutions/ogmios"
"Berry-Pool/lucid" -> "dcSpark/carp"
"Berry-Pool/lucid" -> "StricaHQ/typhonjs"
"Berry-Pool/lucid" -> "Hyperion-BT/Helios"
"Berry-Pool/lucid" -> "CardanoSolutions/kupo"
"txpipe/plutus-starter-kit" -> "aiken-lang/stdlib"
"bloxbean/cardano-client-lib" -> "CardanoSolutions/kupo"
"bloxbean/cardano-client-lib" -> "bloxbean/cardano-client-examples"
"bloxbean/cardano-client-lib" -> "cardano-foundation/cardano-connect-with-wallet"
"bloxbean/cardano-client-lib" -> "blockfrost/blockfrost-java"
"Berry-Pool/cardanocli-js" -> "armada-alliance/cardano-minter"
"Berry-Pool/cardanocli-js" -> "tango-crypto/cardano-wallet-js"
"Berry-Pool/cardanocli-js" -> "Berry-Pool/nami-wallet"
"Berry-Pool/cardanocli-js" -> "Emurgo/cardano-serialization-lib"
"Berry-Pool/cardanocli-js" -> "blockfrost/blockfrost-js"
"Berry-Pool/cardanocli-js" -> "Berry-Pool/lucid"
"Berry-Pool/cardanocli-js" -> "gitmachtl/scripts"
"Berry-Pool/cardanocli-js" -> "input-output-hk/Alonzo-testnet"
"txpipe/pallas" -> "txpipe/scrolls"
"txpipe/pallas" -> "txpipe/aiken"
"txpipe/pallas" -> "txpipe/oura"
"txpipe/pallas" -> "MitchTurner/naumachia"
"txpipe/pallas" -> "dcSpark/cardano-multiplatform-lib"
"txpipe/pallas" -> "CardanoSolutions/kupo"
"txpipe/pallas" -> "input-output-hk/mithril"
"rdlrt/Alternate-Jormungandr-Testnet" -> "input-output-hk/jormungandr-qa"
"rdlrt/Alternate-Jormungandr-Testnet" -> "Kodex-Data-Systems/Casper"
"dcSpark/cardano-multiplatform-lib" -> "txpipe/pallas"
"dendorferpatrick/nami-wallet-examples" -> "dynamicstrategies/cardano-wallet-connector"
"dendorferpatrick/nami-wallet-examples" -> "Felippo001/nami-wallet-api"
"HarmonicPool/plu-ts" -> "txpipe/aiken"
"HarmonicPool/plu-ts" -> "StricaHQ/typhonjs"
"HarmonicPool/plu-ts" -> "Hyperion-BT/Helios"
"HarmonicPool/plu-ts" -> "MitchTurner/naumachia"
"HarmonicPool/plu-ts" -> "ImperatorLang/imperator"
"mlabs-haskell/plutip" -> "mlabs-haskell/plutus-simple-model"
"mlabs-haskell/plutip" -> "Plutonomicon/plutarch"
"mlabs-haskell/plutip" -> "mlabs-haskell/apropos"
"Plutonomicon/plutarch" -> "mlabs-haskell/apropos"
"Plutonomicon/plutarch" -> "mlabs-haskell/apropos-tx"
"Plutonomicon/plutarch" -> "mlabs-haskell/plutip"
"Plutonomicon/plutarch" -> "well-typed/plutonomy"
"cloudstruct/go-ouroboros-network" -> "fivebinaries/go-cardano-serialization"
"input-output-hk/cardano-node-tests" -> "input-output-hk/bech32"
"spacebudz/nebula" -> "txpipe/aiken"
"mlabs-haskell/awesome-plutus" -> "mlabs-haskell/plutip"
"mlabs-haskell/awesome-plutus" -> "Liqwid-Labs/plutus-extra"
"input-output-hk/plutus-prototype" -> "input-output-hk/ouroboros-spec"
"input-output-hk/plutus-prototype" -> "input-output-hk/scdsl"
"input-output-hk/plutus-prototype" -> "runtimeverification/iele-semantics"
"emesik/cardano-python" -> "cffls/pycardano"
"emesik/cardano-python" -> "blockfrost/blockfrost-python"
"emesik/cardano-python" -> "nateshmbhat/cardano-nft-minter"
"lovelypool/cardano_stuff" -> "bobdobs/cardano-scripts"
"mlabs-haskell/apropos-tx" -> "mlabs-haskell/apropos"
"txpipe/aiken" -> "MitchTurner/naumachia"
"txpipe/aiken" -> "txpipe/pallas"
"txpipe/aiken" -> "Hyperion-BT/Helios"
"txpipe/aiken" -> "OpenEngineer/plutus-light"
"txpipe/aiken" -> "CardanoSolutions/kupo"
"txpipe/aiken" -> "ImperatorLang/imperator"
"input-output-hk/project-icarus-chrome" -> "input-output-hk/project-icarus-backend-service"
"input-output-hk/project-icarus-chrome" -> "input-output-hk/project-icarus"
"input-output-hk/cardano-rosetta" -> "input-output-hk/cardano-addresses"
"input-output-hk/cardano-rosetta" -> "input-output-hk/cardano-graphql"
"input-output-hk/cardano-rosetta" -> "input-output-hk/smash"
"input-output-hk/cardano-rosetta" -> "input-output-hk/bech32"
"input-output-hk/project-icarus" -> "input-output-hk/project-icarus-chrome"
"coinbase/rosetta-ethereum" -> "coinbase/rosetta-bitcoin"
"coinbase/rosetta-ethereum" -> "coinbase/rosetta-cli"
"coinbase/rosetta-ethereum" -> "coinbase/rosetta-sdk-go"
"runtimeverification/iele-semantics" -> "input-output-hk/ouroboros-spec"
"bobdobs/cardano-scripts" -> "thibautrey/JromungandrRestartAndStats"
"mlabs-haskell/apropos" -> "mlabs-haskell/apropos-tx"
"input-output-hk/cardano-node" ["l"="46.839,-27.765"]
"input-output-hk/cardano-wallet" ["l"="46.849,-27.791"]
"input-output-hk/daedalus" ["l"="46.861,-27.777"]
"input-output-hk/plutus" ["l"="46.822,-27.787"]
"input-output-hk/plutus-pioneer-program" ["l"="46.796,-27.822"]
"cardano-community/guild-operators" ["l"="46.836,-27.813"]
"cardano-foundation/CIPs" ["l"="46.822,-27.808"]
"input-output-hk/cardano-sl" ["l"="45.971,-27.996"]
"gitmachtl/scripts" ["l"="46.848,-27.817"]
"input-output-hk/cardano-db-sync" ["l"="46.836,-27.801"]
"input-output-hk/essential-cardano" ["l"="46.814,-27.826"]
"input-output-hk/ouroboros-network" ["l"="46.869,-27.789"]
"input-output-hk/cardano-graphql" ["l"="46.851,-27.804"]
"input-output-hk/plutus-apps" ["l"="46.8,-27.808"]
"input-output-hk/adrestia" ["l"="46.884,-27.775"]
"input-output-hk/jormungandr" ["l"="46.892,-27.822"]
"input-output-hk/hydra-poc" ["l"="46.813,-27.8"]
"CardanoSolutions/ogmios" ["l"="46.788,-27.801"]
"cardano-foundation/developer-portal" ["l"="46.837,-27.829"]
"input-output-hk/plutus-starter" ["l"="46.78,-27.833"]
"SundaeSwap-finance/toolkit-for-cardano" ["l"="46.713,-27.845"]
"input-output-hk/cardano-documentation" ["l"="46.851,-27.829"]
"Plutonomicon/plutonomicon" ["l"="46.762,-27.819"]
"input-output-hk/marlowe" ["l"="46.881,-27.747"]
"input-output-hk/haskell-course" ["l"="46.765,-27.834"]
"iohkedu/haskell-2020" ["l"="46.774,-27.85"]
"Berry-Pool/nami-wallet" ["l"="46.792,-27.787"]
"input-output-hk/Alonzo-testnet" ["l"="46.801,-27.847"]
"Emurgo/cardano-serialization-lib" ["l"="46.802,-27.796"]
"mlabs-haskell/awesome-plutus" ["l"="46.74,-27.873"]
"aiken-lang/aiken" ["l"="46.736,-27.832"]
"mlabs-haskell/plutip" ["l"="46.757,-27.875"]
"spacebudz/lucid" ["l"="46.74,-27.816"]
"txpipe/plutus-starter-kit" ["l"="46.746,-27.856"]
"MartifyLabs/mesh" ["l"="46.733,-27.798"]
"papacarp/pooltool.io" ["l"="46.868,-27.852"]
"AndrewWestberg/cncli" ["l"="46.828,-27.821"]
"txpipe/oura" ["l"="46.776,-27.81"]
"vacuumlabs/cardano-hw-cli" ["l"="46.848,-27.849"]
"input-output-hk/cardano-tutorials" ["l"="46.876,-27.836"]
"txpipe/scrolls" ["l"="46.776,-27.798"]
"input-output-hk/cardano-rt-view" ["l"="46.82,-27.772"]
"coinbase/rosetta-sdk-go" ["l"="47.05,-27.879"]
"coinbase/rosetta-cli" ["l"="47.041,-27.894"]
"coinbase/rosetta-specifications" ["l"="47.02,-27.878"]
"coinbase/rosetta-ethereum" ["l"="47.062,-27.891"]
"coinbase/rosetta-bitcoin" ["l"="47.053,-27.905"]
"input-output-hk/cardano-addresses" ["l"="46.881,-27.811"]
"input-output-hk/cardano-base" ["l"="46.876,-27.798"]
"Emurgo/yoroi-frontend" ["l"="46.865,-27.804"]
"input-output-hk/cardano-ledger-specs" ["l"="46.889,-27.804"]
"input-output-hk/rust-cardano" ["l"="46.986,-27.798"]
"input-output-hk/cardano-cli" ["l"="47.012,-27.797"]
"input-output-hk/plutus-prototype" ["l"="47.054,-27.764"]
"input-output-hk/js-cardano-wasm" ["l"="47.007,-27.776"]
"input-output-hk/project-icarus" ["l"="47.037,-27.803"]
"input-output-hk/cardano-ops" ["l"="46.871,-27.817"]
"input-output-hk/bech32" ["l"="46.887,-27.792"]
"input-output-hk/smash" ["l"="46.924,-27.826"]
"input-output-hk/cardano-node-tests" ["l"="46.899,-27.797"]
"alessandrokonrad/Pi-Pool" ["l"="46.805,-27.862"]
"cardano-foundation/cardano-token-registry" ["l"="46.828,-27.837"]
"input-output-hk/plutus-use-cases" ["l"="46.916,-27.8"]
"cardano-foundation/testnets-cardano-org" ["l"="46.909,-27.836"]
"cardano-foundation/stake-pool-school-handbook" ["l"="46.843,-27.868"]
"Hyperion-BT/Helios" ["l"="46.73,-27.809"]
"Plutonomicon/plutarch-plutus" ["l"="46.703,-27.871"]
"ImperatorLang/eopsin" ["l"="46.694,-27.82"]
"txpipe/aiken" ["l"="46.746,-27.797"]
"renzwo/cardano-plutus-apps-install-m1" ["l"="46.784,-27.892"]
"input-output-hk/shelley-testnet" ["l"="46.92,-27.859"]
"rdlrt/Alternate-Jormungandr-Testnet" ["l"="46.889,-27.86"]
"Chris-Graffagnino/Jormungandr-for-Newbs" ["l"="46.9,-27.85"]
"cardano-foundation/incentivized-testnet-stakepool-registry" ["l"="46.899,-27.875"]
"input-output-hk/stakepool-management-tools" ["l"="46.928,-27.845"]
"CardanoSolutions/kupo" ["l"="46.746,-27.781"]
"OpenEngineer/plutus-light" ["l"="46.721,-27.777"]
"MitchTurner/naumachia" ["l"="46.734,-27.771"]
"txpipe/pallas" ["l"="46.769,-27.788"]
"cffls/pycardano" ["l"="46.719,-27.795"]
"blockfrost/blockfrost-python" ["l"="46.682,-27.787"]
"dynamicstrategies/cardano-wallet-connector" ["l"="46.754,-27.772"]
"emesik/cardano-python" ["l"="46.665,-27.788"]
"Berry-Pool/lucid" ["l"="46.754,-27.789"]
"blockfrost/blockfrost-backend-ryo" ["l"="46.675,-27.77"]
"ImperatorLang/imperator" ["l"="46.707,-27.789"]
"cffls/py2hs" ["l"="46.671,-27.804"]
"input-output-hk/mithril" ["l"="46.766,-27.803"]
"input-output-hk/hydra-sim" ["l"="46.821,-27.852"]
"dcSpark/cardano-multiplatform-lib" ["l"="46.77,-27.772"]
"dcSpark/fracada" ["l"="46.736,-27.847"]
"cloudstruct/go-ouroboros-network" ["l"="46.78,-27.874"]
"Emurgo/yoroi-mobile" ["l"="46.917,-27.774"]
"vacuumlabs/adalite" ["l"="24.114,-0.27"]
"input-output-hk/cardano-rosetta" ["l"="46.907,-27.815"]
"input-output-hk/cardano-js-sdk" ["l"="46.813,-27.761"]
"input-output-hk/cardano-ledger" ["l"="46.865,-27.759"]
"tango-crypto/cardano-wallet-js" ["l"="46.777,-27.733"]
"blockfrost/blockfrost-js" ["l"="46.797,-27.723"]
"input-output-hk/cardano-configurations" ["l"="46.816,-27.725"]
"input-output-hk/cardano-launcher" ["l"="46.859,-27.736"]
"coinbase/rosetta-geth-sdk" ["l"="47.016,-27.901"]
"Python-Cardano/pycardano" ["l"="46.662,-27.826"]
"MartifyLabs/martify.contracts" ["l"="46.73,-27.752"]
"MartifyLabs/martify.frontend" ["l"="46.71,-27.724"]
"SundaeSwap-finance/alonzo-testnet" ["l"="46.681,-27.859"]
"input-output-hk/offchain-metadata-tools" ["l"="46.822,-27.875"]
"ADA-Finance/cardano-staking-smart-contract" ["l"="46.804,-27.882"]
"lovelypool/cardano_stuff" ["l"="46.934,-27.868"]
"Straightpool/scripts" ["l"="46.923,-27.875"]
"input-output-hk/jormungandr-qa" ["l"="46.911,-27.871"]
"cardano-community/cncli" ["l"="46.897,-27.784"]
"perturbing/vasil-tests" ["l"="46.679,-27.886"]
"Plutonomicon/plutarch" ["l"="46.762,-27.893"]
"Liqwid-Labs/plutus-extra" ["l"="46.725,-27.861"]
"Liqwid-Labs/agora" ["l"="46.711,-27.83"]
"HarmonicPool/plu-ts" ["l"="46.729,-27.785"]
"spacebudz/nebula" ["l"="46.715,-27.813"]
"HarmonicLabs/plu-ts" ["l"="46.686,-27.837"]
"dQuadrant/kuber" ["l"="46.691,-27.807"]
"cardano-foundation/docs-cardano-org" ["l"="46.96,-27.853"]
"cardano-foundation/cardano-connect-with-wallet" ["l"="46.691,-27.759"]
"Berry-Pool/cardanocli-js" ["l"="46.79,-27.768"]
"input-output-hk/cardano-transactions" ["l"="46.935,-27.813"]
"dendorferpatrick/nami-wallet-examples" ["l"="46.764,-27.751"]
"Felippo001/nami-wallet-api" ["l"="46.782,-27.746"]
"SinglePoolAlliance/Registration" ["l"="46.876,-27.881"]
"armada-alliance/cardano-minter" ["l"="46.754,-27.737"]
"ray-network/minterr" ["l"="46.745,-27.711"]
"dcSpark/carp" ["l"="46.714,-27.766"]
"HarmonicPool/cardano-wallet-interface" ["l"="46.73,-27.731"]
"StricaHQ/typhonjs" ["l"="46.745,-27.755"]
"input-output-hk/cardano-rest" ["l"="46.927,-27.788"]
"input-output-hk/cardano-explorer-app" ["l"="46.909,-27.746"]
"txpipe/awesome-starter-kits" ["l"="46.748,-27.809"]
"input-output-hk/lobster-challenge" ["l"="46.746,-27.9"]
"adacapo21/plutusPioneerProgram" ["l"="46.737,-27.932"]
"woofpool/cardano-private-testnet-setup" ["l"="46.718,-27.927"]
"Emurgo/Emurgo-Research" ["l"="10.244,25.259"]
"bobdobs/cardano-scripts" ["l"="46.944,-27.882"]
"Kodex-Data-Systems/Casper" ["l"="46.913,-27.882"]
"abracadaniel/cardano-node-docker" ["l"="46.837,-27.734"]
"aiken-lang/stdlib" ["l"="46.719,-27.881"]
"bloxbean/cardano-client-lib" ["l"="46.683,-27.738"]
"bloxbean/cardano-client-examples" ["l"="46.669,-27.717"]
"blockfrost/blockfrost-java" ["l"="46.658,-27.727"]
"mlabs-haskell/plutus-simple-model" ["l"="46.725,-27.901"]
"mlabs-haskell/apropos" ["l"="46.764,-27.907"]
"mlabs-haskell/apropos-tx" ["l"="46.758,-27.919"]
"well-typed/plutonomy" ["l"="46.764,-27.932"]
"fivebinaries/go-cardano-serialization" ["l"="46.789,-27.91"]
"input-output-hk/ouroboros-spec" ["l"="47.081,-27.745"]
"input-output-hk/scdsl" ["l"="47.058,-27.742"]
"runtimeverification/iele-semantics" ["l"="47.093,-27.761"]
"nateshmbhat/cardano-nft-minter" ["l"="46.631,-27.781"]
"input-output-hk/project-icarus-chrome" ["l"="47.059,-27.805"]
"input-output-hk/project-icarus-backend-service" ["l"="47.082,-27.807"]
"thibautrey/JromungandrRestartAndStats" ["l"="46.958,-27.899"]
}