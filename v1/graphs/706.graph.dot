digraph G {
"clcarwin/sphereface_pytorch" -> "wy1iu/sphereface"
"clcarwin/sphereface_pytorch" -> "MuggleWang/CosFace_pytorch"
"clcarwin/sphereface_pytorch" -> "happynear/AMSoftmax"
"clcarwin/sphereface_pytorch" -> "wujiyang/Face_Pytorch"
"clcarwin/sphereface_pytorch" -> "TreB1eN/InsightFace_Pytorch"
"clcarwin/sphereface_pytorch" -> "yule-li/CosFace"
"clcarwin/sphereface_pytorch" -> "happynear/NormFace"
"clcarwin/sphereface_pytorch" -> "TropComplique/mtcnn-pytorch"
"clcarwin/sphereface_pytorch" -> "ronghuaiyang/arcface-pytorch"
"clcarwin/sphereface_pytorch" -> "wy1iu/LargeMargin_Softmax_Loss"
"clcarwin/sphereface_pytorch" -> "penincillin/DREAM"
"clcarwin/sphereface_pytorch" -> "Joker316701882/Additive-Margin-Softmax"
"clcarwin/sphereface_pytorch" -> "AlfredXiangWu/LightCNN"
"clcarwin/sphereface_pytorch" -> "liorshk/facenet_pytorch"
"clcarwin/sphereface_pytorch" -> "fwang91/IMDb-Face"
"TadasBaltrusaitis/CLM-framework" -> "patrikhuber/superviseddescent"
"TadasBaltrusaitis/CLM-framework" -> "yulequan/face-alignment-in-3000fps"
"TadasBaltrusaitis/CLM-framework" -> "soundsilence/FaceAlignment"
"TadasBaltrusaitis/CLM-framework" -> "luoyetx/deep-landmark"
"TadasBaltrusaitis/CLM-framework" -> "zhusz/CVPR15-CFSS"
"TadasBaltrusaitis/CLM-framework" -> "kylemcdonald/FaceTracker"
"TadasBaltrusaitis/CLM-framework" -> "jwyang/face-alignment"
"TadasBaltrusaitis/CLM-framework" -> "cheind/dest"
"TadasBaltrusaitis/CLM-framework" -> "ci2cv/face-analysis-sdk"
"TadasBaltrusaitis/CLM-framework" -> "uricamic/clandmark"
"TadasBaltrusaitis/CLM-framework" -> "zhzhanp/TCDCN-face-alignment"
"TadasBaltrusaitis/CLM-framework" -> "freesouls/face-alignment-at-3000fps"
"TadasBaltrusaitis/CLM-framework" -> "qiexing/face-landmark-localization"
"TadasBaltrusaitis/CLM-framework" -> "delphifirst/FaceX"
"TadasBaltrusaitis/CLM-framework" -> "TadasBaltrusaitis/OpenFace" ["e"=1]
"tbmoon/kalman_filter" -> "tbmoon/basic_vqa"
"guozhongluo/head-pose-estimation-and-face-landmark" -> "lincolnhard/head-pose-estimation"
"guozhongluo/head-pose-estimation-and-face-landmark" -> "qiexing/face-landmark-localization"
"guozhongluo/head-pose-estimation-and-face-landmark" -> "yinguobing/head-pose-estimation"
"guozhongluo/head-pose-estimation-and-face-landmark" -> "lsy17096535/face-landmark"
"guozhongluo/head-pose-estimation-and-face-landmark" -> "natanielruiz/deep-head-pose"
"guozhongluo/head-pose-estimation-and-face-landmark" -> "chengzhengxin/sdm"
"guozhongluo/head-pose-estimation-and-face-landmark" -> "szad670401/Fast-MTCNN"
"guozhongluo/head-pose-estimation-and-face-landmark" -> "senliuy/FaceLivenessDetection"
"guozhongluo/head-pose-estimation-and-face-landmark" -> "miaoerduo/dlib-face-landmark-compression"
"guozhongluo/head-pose-estimation-and-face-landmark" -> "KaleidoZhouYN/mobilefacenet-caffe"
"imistyrain/MTCNN" -> "szad670401/Fast-MTCNN"
"imistyrain/MTCNN" -> "moli232777144/mtcnn_ncnn"
"imistyrain/MTCNN" -> "AlphaQi/MTCNN-light"
"imistyrain/MTCNN" -> "CongWeilin/mtcnn-caffe"
"imistyrain/MTCNN" -> "ElegantGod/ncnn"
"imistyrain/MTCNN" -> "qaz734913414/Ncnn_FaceTrack"
"imistyrain/MTCNN" -> "cpuimage/MTCNN"
"imistyrain/MTCNN" -> "foreverYoungGitHub/MTCNN"
"imistyrain/MTCNN" -> "honghuCode/mobileFacenet-ncnn"
"imistyrain/MTCNN" -> "dlunion/mtcnn"
"imistyrain/MTCNN" -> "ksachdeva/opencv-mtcnn"
"imistyrain/MTCNN" -> "biubug6/Face-Detector-1MB-with-landmark"
"imistyrain/MTCNN" -> "Charrin/RetinaFace-Cpp"
"imistyrain/MTCNN" -> "Longqi-S/ncnn-mtcnn"
"imistyrain/MTCNN" -> "lsy17096535/face-landmark"
"facebookresearch/supervision-by-registration" -> "D-X-Y/landmark-detection"
"facebookresearch/supervision-by-registration" -> "wywu/LAB"
"facebookresearch/supervision-by-registration" -> "guoqiangqi/PFLD"
"facebookresearch/supervision-by-registration" -> "D-X-Y/SAN"
"facebookresearch/supervision-by-registration" -> "610265158/Peppa_Pig_Face_Engine"
"facebookresearch/supervision-by-registration" -> "MarekKowalski/DeepAlignmentNetwork"
"facebookresearch/supervision-by-registration" -> "protossw512/AdaptiveWingLoss"
"facebookresearch/supervision-by-registration" -> "polarisZhao/PFLD-pytorch"
"facebookresearch/supervision-by-registration" -> "HRNet/HRNet-Facial-Landmark-Detection"
"facebookresearch/supervision-by-registration" -> "cleardusk/3DDFA" ["e"=1]
"facebookresearch/supervision-by-registration" -> "YuvalNirkin/face_segmentation" ["e"=1]
"facebookresearch/supervision-by-registration" -> "fengju514/Face-Pose-Net" ["e"=1]
"facebookresearch/supervision-by-registration" -> "justusschock/shapenet"
"facebookresearch/supervision-by-registration" -> "patrikhuber/eos" ["e"=1]
"facebookresearch/supervision-by-registration" -> "zeusees/HyperLandmark"
"HCIILAB/SCUT-FBP5500-Database-Release" -> "ustcqidi/BeautyPredict"
"HCIILAB/SCUT-FBP5500-Database-Release" -> "fendouai/FaceRank"
"HCIILAB/SCUT-FBP5500-Database-Release" -> "jackhuntcn/facial_beauty_prediction"
"HCIILAB/SCUT-FBP5500-Database-Release" -> "HCIILAB/SCUT-HEAD-Dataset-Release" ["e"=1]
"HCIILAB/SCUT-FBP5500-Database-Release" -> "lucasxlu/TransFBP"
"HCIILAB/SCUT-FBP5500-Database-Release" -> "roguesir/DL-ML-project"
"HCIILAB/SCUT-FBP5500-Database-Release" -> "Honlan/BeautyGAN" ["e"=1]
"HCIILAB/SCUT-FBP5500-Database-Release" -> "wywu/LAB"
"HCIILAB/SCUT-FBP5500-Database-Release" -> "zma-c-137/VarGFaceNet"
"HCIILAB/SCUT-FBP5500-Database-Release" -> "wtjiang98/PSGAN" ["e"=1]
"HCIILAB/SCUT-FBP5500-Database-Release" -> "switchablenorms/CelebAMask-HQ" ["e"=1]
"HCIILAB/SCUT-FBP5500-Database-Release" -> "HuyTu7/face_rating"
"HCIILAB/SCUT-FBP5500-Database-Release" -> "zeusees/HyperLandmark"
"HCIILAB/SCUT-FBP5500-Database-Release" -> "polarisZhao/PFLD-pytorch"
"HCIILAB/SCUT-FBP5500-Database-Release" -> "HuangYG123/CurricularFace"
"Tencent/TFace" -> "JDAI-CV/FaceX-Zoo"
"Tencent/TFace" -> "IrvingMeng/MagFace"
"Tencent/TFace" -> "HuangYG123/CurricularFace"
"Tencent/TFace" -> "pterhoer/FaceImageQuality"
"Tencent/TFace" -> "deepcam-cn/FaceQuality"
"Tencent/TFace" -> "mk-minchul/AdaFace"
"Tencent/TFace" -> "ZitongYu/CDCN"
"Tencent/TFace" -> "cavalleria/cavaface.pytorch"
"Tencent/TFace" -> "taylover-pei/SSDG-CVPR2020"
"Tencent/TFace" -> "biubug6/Pytorch_Retinaface"
"Tencent/TFace" -> "biubug6/Face-Detector-1MB-with-landmark"
"Tencent/TFace" -> "deepcam-cn/yolov5-face" ["e"=1]
"Tencent/TFace" -> "minivision-ai/Silent-Face-Anti-Spoofing"
"Tencent/TFace" -> "TreB1eN/InsightFace_Pytorch"
"Tencent/TFace" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019"
"LeslieZhoa/tensorflow-facenet" -> "LeslieZhoa/tensorflow-MTCNN"
"LeslieZhoa/tensorflow-facenet" -> "WindZu/facenet_facerecognition"
"WindZu/facenet_facerecognition" -> "chenlinzhong/face-login"
"WindZu/facenet_facerecognition" -> "LeslieZhoa/tensorflow-facenet"
"WindZu/facenet_facerecognition" -> "boyliwensheng/understand_facenet"
"WindZu/facenet_facerecognition" -> "MrZhousf/tf_facenet"
"WindZu/facenet_facerecognition" -> "shanren7/real_time_face_recognition"
"WindZu/facenet_facerecognition" -> "friedhelm739/Insightface-tensorflow"
"WindZu/facenet_facerecognition" -> "AITTSMD/MTCNN-Tensorflow" ["e"=1]
"WindZu/facenet_facerecognition" -> "zangruirui/facenet_regonistant"
"WindZu/facenet_facerecognition" -> "vincentwei0919/insightface_for_face_recognition"
"WindZu/facenet_facerecognition" -> "1996scarlet/ArcFace-Multiplex-Recognition"
"WindZu/facenet_facerecognition" -> "coneypo/Dlib_face_recognition_from_camera"
"WindZu/facenet_facerecognition" -> "seathiefwang/FaceRecognition-tensorflow"
"WindZu/facenet_facerecognition" -> "PanJinquan/Face_Detection_Recognition"
"WindZu/facenet_facerecognition" -> "bearsprogrammer/real-time-deep-face-recognition"
"WindZu/facenet_facerecognition" -> "LeslieZhoa/tensorflow-MTCNN"
"nwesem/mtcnn_facenet_cpp_tensorRT" -> "PKUZHOU/MTCNN_FaceDetection_TensorRT"
"nwesem/mtcnn_facenet_cpp_tensorRT" -> "Daniel595/Jetson_nano_face_recognition"
"nwesem/mtcnn_facenet_cpp_tensorRT" -> "yumaofan/jetson_nano_demo"
"nwesem/mtcnn_facenet_cpp_tensorRT" -> "step305/Jetson-Nano-FaceRecognition"
"nwesem/mtcnn_facenet_cpp_tensorRT" -> "Qengineering/Face-Recognition-Jetson-Nano"
"rockchip-linux/tools" -> "rockchip-linux/docs"
"rockchip-linux/tools" -> "rockchip-linux/rk-rootfs-build"
"rockchip-linux/tools" -> "rockchip-linux/rkbin"
"rockchip-linux/tools" -> "rockchip-linux/rkdeveloptool"
"peteryuX/retinaface-tf2" -> "peteryuX/arcface-tf2"
"peteryuX/retinaface-tf2" -> "StanislasBertrand/RetinaFace-tf2"
"peteryuX/retinaface-tf2" -> "610265158/faceboxes-tensorflow"
"peteryuX/retinaface-tf2" -> "hukkelas/DSFD-Pytorch-Inference"
"peteryuX/retinaface-tf2" -> "leondgarse/Keras_insightface"
"peteryuX/retinaface-tf2" -> "1996scarlet/faster-mobile-retinaface"
"peteryuX/retinaface-tf2" -> "wondervictor/WiderFace-Evaluation"
"XiaohangZhan/cdp" -> "yl-1993/learn-to-cluster"
"XiaohangZhan/cdp" -> "Zhongdao/gcn_clustering"
"XiaohangZhan/cdp" -> "XiaohangZhan/face_recognition_framework"
"XiaohangZhan/cdp" -> "happynear/FaceDatasets"
"XiaohangZhan/cdp" -> "sstzal/STAR-FC"
"XiaohangZhan/cdp" -> "happynear/NormFace"
"XiaohangZhan/cdp" -> "xiaoxiong74/face-cluster-by-infomap"
"XiaohangZhan/cdp" -> "seasonSH/Probabilistic-Face-Embeddings"
"XiaohangZhan/cdp" -> "penincillin/DREAM"
"XiaohangZhan/cdp" -> "fwang91/IMDb-Face"
"XiaohangZhan/cdp" -> "happynear/AMSoftmax"
"XiaohangZhan/cdp" -> "varun-suresh/Clustering"
"XiaohangZhan/cdp" -> "moli232777144/mobilefacenet-mxnet"
"XiaohangZhan/cdp" -> "Charrin/RetinaFace-Cpp"
"XiaohangZhan/cdp" -> "makarandtapaswi/BallClustering_ICCV2019"
"seetafaceengine/SeetaFace2" -> "seetafaceengine/SeetaFace6"
"seetafaceengine/SeetaFace2" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"seetafaceengine/SeetaFace2" -> "seetaface/SeetaFaceEngine2"
"seetafaceengine/SeetaFace2" -> "zuoqing1988/ZQCNN" ["e"=1]
"seetafaceengine/SeetaFace2" -> "SeetaFace6Open/index"
"seetafaceengine/SeetaFace2" -> "seetaface/SeetaFaceEngine" ["e"=1]
"seetafaceengine/SeetaFace2" -> "TencentYoutuResearch/FaceDetection-DSFD" ["e"=1]
"seetafaceengine/SeetaFace2" -> "KangLin/FaceRecognizer"
"seetafaceengine/SeetaFace2" -> "zeusees/HyperLandmark"
"seetafaceengine/SeetaFace2" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" ["e"=1]
"seetafaceengine/SeetaFace2" -> "Star-Clouds/CenterFace"
"seetafaceengine/SeetaFace2" -> "ShiqiYu/libfacedetection" ["e"=1]
"seetafaceengine/SeetaFace2" -> "deepinsight/insightface" ["e"=1]
"seetafaceengine/SeetaFace2" -> "ZhaoJ9014/face.evoLVe.PyTorch"
"seetafaceengine/SeetaFace2" -> "biubug6/Face-Detector-1MB-with-landmark"
"mpatacchiola/deepgaze" -> "natanielruiz/deep-head-pose"
"mpatacchiola/deepgaze" -> "yinguobing/head-pose-estimation"
"mpatacchiola/deepgaze" -> "TadasBaltrusaitis/OpenFace" ["e"=1]
"mpatacchiola/deepgaze" -> "lincolnhard/head-pose-estimation"
"mpatacchiola/deepgaze" -> "CSAILVision/GazeCapture"
"mpatacchiola/deepgaze" -> "kpzhang93/MTCNN_face_detection_alignment" ["e"=1]
"mpatacchiola/deepgaze" -> "swook/GazeML"
"mpatacchiola/deepgaze" -> "fengju514/Face-Pose-Net" ["e"=1]
"mpatacchiola/deepgaze" -> "shamangary/FSA-Net"
"mpatacchiola/deepgaze" -> "wywu/LAB"
"mpatacchiola/deepgaze" -> "YadiraF/PRNet" ["e"=1]
"mpatacchiola/deepgaze" -> "qiexing/face-landmark-localization"
"mpatacchiola/deepgaze" -> "guozhongluo/head-pose-estimation-and-face-landmark"
"mpatacchiola/deepgaze" -> "betars/Face-Resources"
"mpatacchiola/deepgaze" -> "dpressel/rude-carnie"
"kylemcdonald/FaceTracker" -> "kylemcdonald/ofxFaceTracker" ["e"=1]
"kylemcdonald/FaceTracker" -> "ci2cv/face-analysis-sdk"
"kylemcdonald/FaceTracker" -> "patrikhuber/4dface" ["e"=1]
"kylemcdonald/FaceTracker" -> "TadasBaltrusaitis/CLM-framework"
"kylemcdonald/FaceTracker" -> "soundsilence/FaceAlignment"
"kylemcdonald/FaceTracker" -> "jwyang/face-alignment"
"kylemcdonald/FaceTracker" -> "patrikhuber/superviseddescent"
"kylemcdonald/FaceTracker" -> "yulequan/face-alignment-in-3000fps"
"kylemcdonald/FaceTracker" -> "patrikhuber/eos" ["e"=1]
"kylemcdonald/FaceTracker" -> "freesouls/face-alignment-at-3000fps"
"kylemcdonald/FaceTracker" -> "uricamic/clandmark"
"kylemcdonald/FaceTracker" -> "arturoc/FaceSubstitution" ["e"=1]
"kylemcdonald/FaceTracker" -> "hrastnik/face_detect_n_track"
"kylemcdonald/FaceTracker" -> "chili-epfl/attention-tracker"
"kylemcdonald/FaceTracker" -> "TadasBaltrusaitis/OpenFace" ["e"=1]
"Star-Clouds/CenterFace" -> "chenjun2hao/CenterFace.pytorch"
"Star-Clouds/CenterFace" -> "biubug6/Face-Detector-1MB-with-landmark"
"Star-Clouds/CenterFace" -> "dlunion/DBFace"
"Star-Clouds/CenterFace" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"Star-Clouds/CenterFace" -> "biubug6/Pytorch_Retinaface"
"Star-Clouds/CenterFace" -> "CaoWGG/TensorRT-CenterNet" ["e"=1]
"Star-Clouds/CenterFace" -> "polarisZhao/PFLD-pytorch"
"Star-Clouds/CenterFace" -> "guoqiangqi/PFLD"
"Star-Clouds/CenterFace" -> "bleakie/CenterMulti"
"Star-Clouds/CenterFace" -> "minivision-ai/Silent-Face-Anti-Spoofing"
"Star-Clouds/CenterFace" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" ["e"=1]
"Star-Clouds/CenterFace" -> "X-zhangyang/Real-World-Masked-Face-Dataset"
"Star-Clouds/CenterFace" -> "wywu/LAB"
"Star-Clouds/CenterFace" -> "zuoqing1988/ZQCNN" ["e"=1]
"Star-Clouds/CenterFace" -> "JDAI-CV/FaceX-Zoo"
"SyGoing/LFFD-MNN" -> "SyGoing/LFFD-with-ncnn"
"chengzhengxin/sdm" -> "lsy17096535/face-landmark"
"chengzhengxin/sdm" -> "zeusees/HyperLandmark"
"chengzhengxin/sdm" -> "MarekKowalski/DeepAlignmentNetwork"
"chengzhengxin/sdm" -> "wywu/LAB"
"chengzhengxin/sdm" -> "dlunion/mtcnn"
"chengzhengxin/sdm" -> "patrikhuber/superviseddescent"
"chengzhengxin/sdm" -> "guozhongluo/head-pose-estimation-and-face-landmark"
"chengzhengxin/sdm" -> "mrgloom/Face-landmarks-detection-benchmark"
"chengzhengxin/sdm" -> "zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment"
"chengzhengxin/sdm" -> "miaoerduo/dlib-face-landmark-compression"
"chengzhengxin/sdm" -> "shaoxiaohu/Face_Alignment_Two_Stage_Re-initialization"
"chengzhengxin/sdm" -> "Seanlinx/mtcnn"
"chengzhengxin/sdm" -> "yulequan/face-alignment-in-3000fps"
"chengzhengxin/sdm" -> "actionLUO/106-landmarks-dataset"
"chengzhengxin/sdm" -> "goodluckcwl/Face-alignment-mobilenet-v2"
"cypw/MXNet2Caffe" -> "GarrickLin/MXNet2Caffe"
"cypw/MXNet2Caffe" -> "olojuwin/facerecognize-for-mobile-phone"
"cypw/MXNet2Caffe" -> "xialuxi/arcface-caffe"
"cypw/MXNet2Caffe" -> "Charrin/RetinaFace-Cpp"
"cypw/MXNet2Caffe" -> "zuoqing1988/ZQCNN-v0.0"
"cypw/MXNet2Caffe" -> "sciencefans/RSA-for-object-detection"
"ronghuaiyang/arcface-pytorch" -> "TreB1eN/InsightFace_Pytorch"
"ronghuaiyang/arcface-pytorch" -> "wujiyang/Face_Pytorch"
"ronghuaiyang/arcface-pytorch" -> "biubug6/Pytorch_Retinaface"
"ronghuaiyang/arcface-pytorch" -> "deepinsight/insightface" ["e"=1]
"ronghuaiyang/arcface-pytorch" -> "ZhaoJ9014/face.evoLVe.PyTorch"
"ronghuaiyang/arcface-pytorch" -> "MuggleWang/CosFace_pytorch"
"ronghuaiyang/arcface-pytorch" -> "timesler/facenet-pytorch" ["e"=1]
"ronghuaiyang/arcface-pytorch" -> "clcarwin/sphereface_pytorch"
"ronghuaiyang/arcface-pytorch" -> "wy1iu/sphereface"
"ronghuaiyang/arcface-pytorch" -> "siriusdemon/Build-Your-Own-Face-Model"
"ronghuaiyang/arcface-pytorch" -> "JDAI-CV/FaceX-Zoo"
"ronghuaiyang/arcface-pytorch" -> "cvqluu/Angular-Penalty-Softmax-Losses-Pytorch"
"ronghuaiyang/arcface-pytorch" -> "KaiyangZhou/pytorch-center-loss"
"ronghuaiyang/arcface-pytorch" -> "Xiaoccer/MobileFaceNet_Pytorch"
"ronghuaiyang/arcface-pytorch" -> "ChanChiChoi/awesome-Face_Recognition" ["e"=1]
"zeusees/HyperLandmark" -> "lsy17096535/face-landmark"
"zeusees/HyperLandmark" -> "chengzhengxin/sdm"
"zeusees/HyperLandmark" -> "wywu/LAB"
"zeusees/HyperLandmark" -> "zuoqing1988/ZQCNN" ["e"=1]
"zeusees/HyperLandmark" -> "guoqiangqi/PFLD"
"zeusees/HyperLandmark" -> "moli232777144/mtcnn_ncnn"
"zeusees/HyperLandmark" -> "zeusees/HyperFT"
"zeusees/HyperLandmark" -> "biubug6/Face-Detector-1MB-with-landmark"
"zeusees/HyperLandmark" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"zeusees/HyperLandmark" -> "kpzhang93/MTCNN_face_detection_alignment" ["e"=1]
"zeusees/HyperLandmark" -> "zeusees/Zeusee-Face-Anti-spoofing"
"zeusees/HyperLandmark" -> "facebookresearch/supervision-by-registration"
"zeusees/HyperLandmark" -> "polarisZhao/PFLD-pytorch"
"zeusees/HyperLandmark" -> "610265158/Peppa_Pig_Face_Engine"
"zeusees/HyperLandmark" -> "becauseofAI/MobileFace" ["e"=1]
"jackweiwang/Android-FaceDetection-UltraNet-MNN" -> "Danicaai/android-mnn"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Library" -> "Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Library" -> "Lauszus/FaceRecognitionApp"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Library" -> "pillarpond/face-recognizer-android"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Library" -> "Lauszus/FaceRecognitionLib"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Library" -> "abhn/marvel"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Library" -> "tzutalin/Android-Object-Detection"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Library" -> "GRAYKEY/mobilefacenet_android"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Library" -> "tzutalin/dlib-android"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Library" -> "tzutalin/dlib-android-app"
"yu4u/age-gender-estimation" -> "dpressel/rude-carnie"
"yu4u/age-gender-estimation" -> "BoyuanJiang/Age-Gender-Estimate-TF"
"yu4u/age-gender-estimation" -> "shamangary/SSR-Net"
"yu4u/age-gender-estimation" -> "GilLevi/AgeGenderDeepLearning"
"yu4u/age-gender-estimation" -> "yu4u/age-estimation-pytorch"
"yu4u/age-gender-estimation" -> "oarriaga/face_classification" ["e"=1]
"yu4u/age-gender-estimation" -> "ZZUTK/Face-Aging-CAAE"
"yu4u/age-gender-estimation" -> "kpzhang93/MTCNN_face_detection_alignment" ["e"=1]
"yu4u/age-gender-estimation" -> "abars/YoloKerasFaceDetection"
"yu4u/age-gender-estimation" -> "truongnmt/multi-task-learning"
"yu4u/age-gender-estimation" -> "joojs/fairface"
"yu4u/age-gender-estimation" -> "TencentYoutuResearch/FaceDetection-DSFD" ["e"=1]
"yu4u/age-gender-estimation" -> "Tony607/Keras_age_gender"
"yu4u/age-gender-estimation" -> "Microsoft/MMdnn" ["e"=1]
"yu4u/age-gender-estimation" -> "biubug6/Pytorch_Retinaface"
"bystc/FaceRecognition" -> "bystc/CollaborativeFilteringMovieRecommender" ["e"=1]
"bystc/FaceRecognition" -> "NewbranLTD/generator-nodex" ["e"=1]
"bystc/FaceRecognition" -> "Wrinth/Algorithms-with-Python" ["e"=1]
"bystc/FaceRecognition" -> "NewbranLTD/gulp-server-io" ["e"=1]
"normandipalo/faceID_beta" -> "jongmoochoi/irisfaceRGBD"
"normandipalo/faceID_beta" -> "Skuldur/facenet-face-recognition"
"normandipalo/faceID_beta" -> "DeepSystems/supervisely-tutorials" ["e"=1]
"normandipalo/faceID_beta" -> "auroua/InsightFace_TF"
"normandipalo/faceID_beta" -> "iwantooxxoox/Keras-OpenFace"
"normandipalo/faceID_beta" -> "harveyslash/Facial-Similarity-with-Siamese-Networks-in-Pytorch" ["e"=1]
"normandipalo/faceID_beta" -> "ilkarman/DeepLearningFrameworks" ["e"=1]
"normandipalo/faceID_beta" -> "gaohuang/MSDNet" ["e"=1]
"normandipalo/faceID_beta" -> "Fdevmsy/Image_Classification_with_5_methods"
"normandipalo/faceID_beta" -> "ZidanMusk/experimenting-with-sort" ["e"=1]
"rockchip-linux/rknpu" -> "rockchip-linux/rknn-toolkit"
"rockchip-linux/rknpu" -> "EASY-EAI/yolov5"
"rockchip-linux/rknpu" -> "airockchip/rknn_model_zoo"
"rockchip-linux/rknpu" -> "rockchip-linux/RKNPUTools"
"rockchip-linux/rknpu" -> "airockchip/yolov5"
"rockchip-linux/rknpu" -> "soloIife/yolov5_for_rknn"
"rockchip-linux/rknpu" -> "littledeep/YOLOv5-RK3399Pro"
"rockchip-linux/rknpu" -> "airockchip/librga"
"rockchip-linux/rknpu" -> "airockchip/rknpu_ddk"
"rockchip-linux/rknpu" -> "rockchip-linux/rknn-toolkit2"
"rockchip-linux/rknpu" -> "Zhou-sx/yolov5_Deepsort_rknn"
"rockchip-linux/rknpu" -> "rockchip-linux/rknpu2"
"rockchip-linux/rknpu" -> "soloist-v/yolov5_for_rknn"
"yjh0410/new-YOLOv1_PyTorch" -> "yjh0410/yolov2-yolov3_PyTorch"
"yjh0410/new-YOLOv1_PyTorch" -> "abeardear/pytorch-YOLO-v1"
"yjh0410/new-YOLOv1_PyTorch" -> "yjh0410/PyTorch_YOLOv1"
"yjh0410/new-YOLOv1_PyTorch" -> "yjh0410/PyTorch_YOLO-Family"
"yjh0410/new-YOLOv1_PyTorch" -> "yjh0410/yolov3-plus_PyTorch"
"yjh0410/new-YOLOv1_PyTorch" -> "lavendelion/YOLOv1-from-scratch"
"yjh0410/yolov2-yolov3_PyTorch" -> "yjh0410/new-YOLOv1_PyTorch"
"yjh0410/yolov2-yolov3_PyTorch" -> "yjh0410/PyTorch_YOLO-Family"
"yjh0410/yolov2-yolov3_PyTorch" -> "yjh0410/CenterNet-Lite" ["e"=1]
"yjh0410/yolov2-yolov3_PyTorch" -> "Peterisfar/YOLOV3" ["e"=1]
"yjh0410/yolov2-yolov3_PyTorch" -> "yjh0410/PyTorch_YOLOv2"
"yjh0410/yolov2-yolov3_PyTorch" -> "tztztztztz/yolov2.pytorch"
"yjh0410/yolov2-yolov3_PyTorch" -> "motokimura/yolo_v1_pytorch"
"1996scarlet/Laser-Eye" -> "david-wb/gaze-estimation"
"1996scarlet/Laser-Eye" -> "erkil1452/gaze360"
"TreB1eN/InsightFace_Pytorch" -> "ronghuaiyang/arcface-pytorch"
"TreB1eN/InsightFace_Pytorch" -> "ZhaoJ9014/face.evoLVe.PyTorch"
"TreB1eN/InsightFace_Pytorch" -> "biubug6/Pytorch_Retinaface"
"TreB1eN/InsightFace_Pytorch" -> "wujiyang/Face_Pytorch"
"TreB1eN/InsightFace_Pytorch" -> "deepinsight/insightface" ["e"=1]
"TreB1eN/InsightFace_Pytorch" -> "foamliu/InsightFace-v2"
"TreB1eN/InsightFace_Pytorch" -> "biubug6/Face-Detector-1MB-with-landmark"
"TreB1eN/InsightFace_Pytorch" -> "timesler/facenet-pytorch" ["e"=1]
"TreB1eN/InsightFace_Pytorch" -> "ChanChiChoi/awesome-Face_Recognition" ["e"=1]
"TreB1eN/InsightFace_Pytorch" -> "Xiaoccer/MobileFaceNet_Pytorch"
"TreB1eN/InsightFace_Pytorch" -> "JDAI-CV/FaceX-Zoo"
"TreB1eN/InsightFace_Pytorch" -> "clcarwin/sphereface_pytorch"
"TreB1eN/InsightFace_Pytorch" -> "wy1iu/sphereface"
"TreB1eN/InsightFace_Pytorch" -> "HuangYG123/CurricularFace"
"TreB1eN/InsightFace_Pytorch" -> "TropComplique/mtcnn-pytorch"
"D-X-Y/landmark-detection" -> "facebookresearch/supervision-by-registration"
"D-X-Y/landmark-detection" -> "HRNet/HRNet-Facial-Landmark-Detection"
"D-X-Y/landmark-detection" -> "protossw512/AdaptiveWingLoss"
"D-X-Y/landmark-detection" -> "guoqiangqi/PFLD"
"D-X-Y/landmark-detection" -> "polarisZhao/PFLD-pytorch"
"D-X-Y/landmark-detection" -> "cunjian/pytorch_face_landmark"
"D-X-Y/landmark-detection" -> "wywu/LAB"
"D-X-Y/landmark-detection" -> "610265158/face_landmark"
"D-X-Y/landmark-detection" -> "TheSouthFrog/stylealign"
"D-X-Y/landmark-detection" -> "justusschock/shapenet"
"D-X-Y/landmark-detection" -> "biubug6/Face-Detector-1MB-with-landmark"
"D-X-Y/landmark-detection" -> "yinguobing/cnn-facial-landmark"
"D-X-Y/landmark-detection" -> "610265158/Peppa_Pig_Face_Engine"
"D-X-Y/landmark-detection" -> "browatbn2/3FabRec"
"D-X-Y/landmark-detection" -> "natanielruiz/deep-head-pose"
"esdalmaijer/PyGaze" -> "esdalmaijer/PyGazeAnalyser"
"esdalmaijer/PyGaze" -> "esdalmaijer/webcam-eyetracker"
"esdalmaijer/PyGaze" -> "pupil-labs/pupil"
"esdalmaijer/PyGaze" -> "CSAILVision/GazeCapture"
"esdalmaijer/PyGaze" -> "antoinelame/GazeTracking"
"esdalmaijer/PyGaze" -> "stepacool/Eye-Tracker"
"esdalmaijer/PyGaze" -> "trishume/eyeLike"
"esdalmaijer/PyGaze" -> "jwdink/eyetrackingR"
"esdalmaijer/PyGaze" -> "LukeAllen/optimeyes"
"esdalmaijer/PyGaze" -> "davebraze/FDBeye"
"esdalmaijer/PyGaze" -> "hugochan/Eye-Tracker"
"esdalmaijer/PyGaze" -> "tmalsburg/saccades"
"esdalmaijer/PyGaze" -> "iitmcvg/eye-gaze"
"esdalmaijer/PyGaze" -> "opengazer/OpenGazer"
"esdalmaijer/PyGaze" -> "psychopy/psychopy" ["e"=1]
"informramiz/opencv-face-recognition-python" -> "nazmiasri95/Face-Recognition"
"informramiz/opencv-face-recognition-python" -> "informramiz/Face-Detection-OpenCV"
"informramiz/opencv-face-recognition-python" -> "Mjrovai/OpenCV-Face-Recognition"
"informramiz/opencv-face-recognition-python" -> "neha01/FaceRecognition"
"informramiz/opencv-face-recognition-python" -> "thecodacus/Face-Recognition"
"informramiz/opencv-face-recognition-python" -> "parulnith/Face-Detection-in-Python-using-OpenCV" ["e"=1]
"informramiz/opencv-face-recognition-python" -> "shantnu/Webcam-Face-Detect"
"informramiz/opencv-face-recognition-python" -> "habrman/FaceRecognition"
"informramiz/opencv-face-recognition-python" -> "winterssy/face_recognition_py"
"informramiz/opencv-face-recognition-python" -> "krasserm/face-recognition"
"informramiz/opencv-face-recognition-python" -> "shantnu/FaceDetect"
"informramiz/opencv-face-recognition-python" -> "jerry1900/faceRecognition"
"serengil/tensorflow-101" -> "serengil/deepface" ["e"=1]
"serengil/tensorflow-101" -> "nyoki-mtl/keras-facenet"
"serengil/tensorflow-101" -> "rcmalli/keras-vggface"
"serengil/tensorflow-101" -> "iwantooxxoox/Keras-OpenFace"
"serengil/tensorflow-101" -> "thoughtworksarts/EmoPy" ["e"=1]
"serengil/tensorflow-101" -> "amineHorseman/facial-expression-recognition-using-cnn" ["e"=1]
"serengil/tensorflow-101" -> "serengil/neural-networks-py"
"serengil/tensorflow-101" -> "serengil/retinaface"
"serengil/tensorflow-101" -> "yu4u/age-gender-estimation"
"serengil/tensorflow-101" -> "swghosh/DeepFace"
"serengil/tensorflow-101" -> "serengil/crypto"
"serengil/tensorflow-101" -> "deeplearningturkiye/turkce-yapay-zeka-kaynaklari" ["e"=1]
"serengil/tensorflow-101" -> "WuJie1010/Facial-Expression-Recognition.Pytorch" ["e"=1]
"serengil/tensorflow-101" -> "peteryuX/arcface-tf2"
"serengil/tensorflow-101" -> "serengil/chefboost" ["e"=1]
"sxpl/FaceAC" -> "zeusees/Zeusee-Face-Anti-spoofing"
"sxpl/FaceAC" -> "June0611/EyeBlickCheck"
"sxpl/FaceAC" -> "GuoYangGit/OCR"
"sxpl/FaceAC" -> "tyhjh/ArcFace"
"sxpl/FaceAC" -> "reggie1996/FaceDetect"
"sxpl/FaceAC" -> "kongqw/OpenCVForAndroid"
"sxpl/FaceAC" -> "wenchaosong/OCR_identify" ["e"=1]
"sxpl/FaceAC" -> "xiaoyaoyou1212/ViseFace" ["e"=1]
"sxpl/FaceAC" -> "wuhenzhizao/android-sku" ["e"=1]
"sxpl/FaceAC" -> "ArcsoftEscErd/ArcfaceDemo_Android"
"HRNet/HRNet-Facial-Landmark-Detection" -> "D-X-Y/landmark-detection"
"HRNet/HRNet-Facial-Landmark-Detection" -> "protossw512/AdaptiveWingLoss"
"HRNet/HRNet-Facial-Landmark-Detection" -> "polarisZhao/PFLD-pytorch"
"HRNet/HRNet-Facial-Landmark-Detection" -> "wywu/LAB"
"HRNet/HRNet-Facial-Landmark-Detection" -> "cunjian/pytorch_face_landmark"
"HRNet/HRNet-Facial-Landmark-Detection" -> "guoqiangqi/PFLD"
"HRNet/HRNet-Facial-Landmark-Detection" -> "facebookresearch/supervision-by-registration"
"HRNet/HRNet-Facial-Landmark-Detection" -> "zllrunning/face-parsing.PyTorch" ["e"=1]
"HRNet/HRNet-Facial-Landmark-Detection" -> "cleardusk/3DDFA_V2" ["e"=1]
"HRNet/HRNet-Facial-Landmark-Detection" -> "jhb86253817/PIPNet"
"HRNet/HRNet-Facial-Landmark-Detection" -> "biubug6/Pytorch_Retinaface"
"HRNet/HRNet-Facial-Landmark-Detection" -> "cleardusk/3DDFA" ["e"=1]
"HRNet/HRNet-Facial-Landmark-Detection" -> "leoxiaobin/deep-high-resolution-net.pytorch" ["e"=1]
"HRNet/HRNet-Facial-Landmark-Detection" -> "YadiraF/face3d" ["e"=1]
"HRNet/HRNet-Facial-Landmark-Detection" -> "biubug6/Face-Detector-1MB-with-landmark"
"ElegantGod/ncnn" -> "moli232777144/mtcnn_ncnn"
"ElegantGod/ncnn" -> "Longqi-S/ncnn-mtcnn"
"ElegantGod/ncnn" -> "dlunion/mtcnn"
"ElegantGod/ncnn" -> "moli232777144/mobilefacenet-mxnet"
"ElegantGod/ncnn" -> "honghuCode/mobileFacenet-ncnn"
"ElegantGod/ncnn" -> "foreverYoungGitHub/MTCNN"
"ElegantGod/ncnn" -> "lsy17096535/face-landmark"
"ElegantGod/ncnn" -> "CongWeilin/mtcnn-caffe"
"ElegantGod/ncnn" -> "DaFuCoding/MTCNN_Caffe"
"ElegantGod/ncnn" -> "AlphaQi/MTCNN-light"
"ElegantGod/ncnn" -> "Jack-CV/PCN"
"ElegantGod/ncnn" -> "blankWorld/MTCNN-Accelerate-Onet"
"ElegantGod/ncnn" -> "cpuimage/MTCNN"
"ElegantGod/ncnn" -> "starimeL/PytorchConverter" ["e"=1]
"ElegantGod/ncnn" -> "Seanlinx/mtcnn"
"KangLin/FaceRecognizer" -> "xiaoxiaoazhang/SeetaFace2AndroidDemo"
"KangLin/FaceRecognizer" -> "seetafaceengine/SeetaFace6"
"KangLin/FaceRecognizer" -> "seetafaceengine/SeetaFace2"
"KangLin/FaceRecognizer" -> "SeetaFace6Open/index"
"KangLin/FaceRecognizer" -> "jamesluozhiwei/seetafaceJNI"
"KangLin/FaceRecognizer" -> "guoyaohua/SmileyFace"
"Longqi-S/ncnn-mtcnn" -> "ElegantGod/ncnn"
"Longqi-S/ncnn-mtcnn" -> "deepinsight/mtcnn-ncnn"
"Longqi-S/ncnn-mtcnn" -> "moli232777144/mtcnn_ncnn"
"OAID/FaceDetection" -> "OAID/FaceRecognition"
"OAID/FaceDetection" -> "cyberfire/tensorflow-mtcnn"
"OAID/FaceDetection" -> "OAID/YSQfastfd"
"OAID/FaceDetection" -> "OAID/Caffe-HRT"
"OAID/FaceDetection" -> "honghuCode/mobileFacenet-ncnn"
"SeetaFace6Open/index" -> "seetafaceengine/SeetaFace6"
"SeetaFace6Open/index" -> "tensorflower/seetaFace6Python"
"SeetaFace6Open/index" -> "seetafaceengine/SeetaFace2"
"SeetaFace6Open/index" -> "SeetaFace6Open/SeetaFace6JNI"
"SeetaFace6Open/index" -> "KangLin/FaceRecognizer"
"SeetaFace6Open/index" -> "yangkang2021/SeetaFace6-Build"
"SeetaFace6Open/index" -> "minivision-ai/Silent-Face-Anti-Spoofing"
"SeetaFace6Open/index" -> "jamesluozhiwei/seetafaceJNI"
"SeetaFace6Open/index" -> "ViewFaceCore/ViewFaceCore"
"SeetaFace6Open/index" -> "seetaface/SeetaFaceEngine2"
"SeetaFace6Open/index" -> "MirrorYuChen/ncnn_example"
"honghuCode/mobileFacenet-ncnn" -> "moli232777144/mobilefacenet-mxnet"
"honghuCode/mobileFacenet-ncnn" -> "GRAYKEY/mobilefacenet_ncnn"
"honghuCode/mobileFacenet-ncnn" -> "GRAYKEY/mobilefacenet_android"
"honghuCode/mobileFacenet-ncnn" -> "KangKangLoveCat/insightface_ncnn"
"honghuCode/mobileFacenet-ncnn" -> "ElegantGod/ncnn"
"honghuCode/mobileFacenet-ncnn" -> "moli232777144/mtcnn_ncnn"
"honghuCode/mobileFacenet-ncnn" -> "qidiso/mobilefacenet-V2"
"honghuCode/mobileFacenet-ncnn" -> "imistyrain/MobileFaceNet"
"honghuCode/mobileFacenet-ncnn" -> "blankWorld/MTCNN-Accelerate-Onet"
"honghuCode/mobileFacenet-ncnn" -> "liguiyuan/mobilefacenet-ncnn"
"honghuCode/mobileFacenet-ncnn" -> "KaleidoZhouYN/mobilefacenet-caffe"
"honghuCode/mobileFacenet-ncnn" -> "olojuwin/facerecognize-for-mobile-phone"
"honghuCode/mobileFacenet-ncnn" -> "Charrin/RetinaFace-Cpp"
"honghuCode/mobileFacenet-ncnn" -> "cpuimage/MTCNN"
"moli232777144/mobilefacenet-mxnet" -> "honghuCode/mobileFacenet-ncnn"
"moli232777144/mobilefacenet-mxnet" -> "qidiso/mobilefacenet-V2"
"moli232777144/mobilefacenet-mxnet" -> "GRAYKEY/mobilefacenet_android"
"moli232777144/mobilefacenet-mxnet" -> "moli232777144/mtcnn_ncnn"
"moli232777144/mobilefacenet-mxnet" -> "KaleidoZhouYN/mobilefacenet-caffe"
"moli232777144/mobilefacenet-mxnet" -> "ElegantGod/ncnn"
"moli232777144/mobilefacenet-mxnet" -> "zuoqing1988/ZQCNN-v0.0"
"moli232777144/mobilefacenet-mxnet" -> "imistyrain/MobileFaceNet"
"moli232777144/mobilefacenet-mxnet" -> "zhanglaplace/MobileFaceNet"
"moli232777144/mobilefacenet-mxnet" -> "bruinxiong/Modified-CRUNet-and-Residual-Attention-Network.mxnet"
"moli232777144/mobilefacenet-mxnet" -> "KangKangLoveCat/insightface_ncnn"
"moli232777144/mobilefacenet-mxnet" -> "xialuxi/arcface-caffe"
"moli232777144/mobilefacenet-mxnet" -> "olojuwin/facerecognize-for-mobile-phone"
"moli232777144/mobilefacenet-mxnet" -> "bleakie/MaskInsightface"
"moli232777144/mobilefacenet-mxnet" -> "PKUZHOU/MTCNN_FaceDetection_TensorRT"
"qidiso/mobilefacenet-V2" -> "qidiso/termux-gui"
"qidiso/mobilefacenet-V2" -> "qidiso/mxnet-retrain"
"qidiso/mobilefacenet-V2" -> "moli232777144/mobilefacenet-mxnet"
"qidiso/mobilefacenet-V2" -> "sirius-ai/MobileFaceNet_TF"
"qidiso/mobilefacenet-V2" -> "honghuCode/mobileFacenet-ncnn"
"qidiso/mobilefacenet-V2" -> "Xiaoccer/MobileFaceNet_Pytorch"
"qidiso/mobilefacenet-V2" -> "zhanglaplace/MobileFaceNet"
"qidiso/mobilefacenet-V2" -> "becauseofAI/MobileFace" ["e"=1]
"qidiso/mobilefacenet-V2" -> "yangxue0827/MobileFaceNet_Tensorflow"
"qidiso/mobilefacenet-V2" -> "KangKangLoveCat/insightface_ncnn"
"qidiso/mobilefacenet-V2" -> "moli232777144/mtcnn_ncnn"
"qidiso/mobilefacenet-V2" -> "olojuwin/facerecognize-for-mobile-phone"
"qidiso/mobilefacenet-V2" -> "xialuxi/arcface-caffe"
"qidiso/mobilefacenet-V2" -> "bleakie/MaskInsightface"
"qidiso/mobilefacenet-V2" -> "GRAYKEY/mobilefacenet_android"
"seetafaceengine/SeetaFace6" -> "SeetaFace6Open/index"
"seetafaceengine/SeetaFace6" -> "seetafaceengine/SeetaFace2"
"seetafaceengine/SeetaFace6" -> "tensorflower/seetaFace6Python"
"seetafaceengine/SeetaFace6" -> "View12138/ViewFaceCore"
"seetafaceengine/SeetaFace6" -> "KangLin/FaceRecognizer"
"seetafaceengine/SeetaFace6" -> "seetaface/SeetaFaceEngine2"
"seetafaceengine/SeetaFace6" -> "minivision-ai/Silent-Face-Anti-Spoofing"
"seetafaceengine/SeetaFace6" -> "zeusees/HyperFAS"
"seetafaceengine/SeetaFace6" -> "dlunion/DBFace"
"seetafaceengine/SeetaFace6" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019"
"seetafaceengine/SeetaFace6" -> "bleakie/MaskInsightface"
"seetafaceengine/SeetaFace6" -> "xiangweizeng/mobile-lpr" ["e"=1]
"seetafaceengine/SeetaFace6" -> "MirrorYuChen/ncnn_example"
"seetafaceengine/SeetaFace6" -> "zuoqing1988/ZQCNN" ["e"=1]
"seetafaceengine/SeetaFace6" -> "biubug6/Face-Detector-1MB-with-landmark"
"Tencent/FaceDetection-DSFD" -> "Media-Smart/vedadet"
"Tencent/FaceDetection-DSFD" -> "biubug6/Pytorch_Retinaface"
"Tencent/FaceDetection-DSFD" -> "Tencent/TFace"
"Tencent/FaceDetection-DSFD" -> "yxlijun/DSFD.pytorch"
"Tencent/FaceDetection-DSFD" -> "deepcam-cn/yolov5-face" ["e"=1]
"Tencent/FaceDetection-DSFD" -> "polarisZhao/PFLD-pytorch"
"Tencent/FaceDetection-DSFD" -> "JDAI-CV/FaceX-Zoo"
"Tencent/FaceDetection-DSFD" -> "ChiCheng123/SRN"
"Tencent/FaceDetection-DSFD" -> "biubug6/Face-Detector-1MB-with-landmark"
"Tencent/FaceDetection-DSFD" -> "Tencent/ObjectDetection-OneStageDet"
"Tencent/FaceDetection-DSFD" -> "lijiannuist/lightDSFD"
"Tencent/FaceDetection-DSFD" -> "Star-Clouds/CenterFace"
"Tencent/FaceDetection-DSFD" -> "Hsintao/pfld_106_face_landmarks"
"Tencent/FaceDetection-DSFD" -> "X-zhangyang/Real-World-Masked-Face-Dataset"
"Tencent/FaceDetection-DSFD" -> "wondervictor/WiderFace-Evaluation"
"tensorflower/seetaFace6Python" -> "seetafaceengine/SeetaFace6"
"tensorflower/seetaFace6Python" -> "SeetaFace6Open/index"
"tensorflower/seetaFace6Python" -> "tensorflower/ArcFace-python"
"tensorflower/seetaFace6Python" -> "yangjian1218/seetaface6ToPy"
"protossw512/AdaptiveWingLoss" -> "HRNet/HRNet-Facial-Landmark-Detection"
"protossw512/AdaptiveWingLoss" -> "TheSouthFrog/stylealign"
"protossw512/AdaptiveWingLoss" -> "D-X-Y/landmark-detection"
"protossw512/AdaptiveWingLoss" -> "polarisZhao/PFLD-pytorch"
"protossw512/AdaptiveWingLoss" -> "guoqiangqi/PFLD"
"protossw512/AdaptiveWingLoss" -> "wywu/LAB"
"protossw512/AdaptiveWingLoss" -> "SeungyounShin/Adaptive-Wing-Loss-for-Robust-Face-Alignment-via-Heatmap-Regression"
"protossw512/AdaptiveWingLoss" -> "Hsintao/pfld_106_face_landmarks"
"protossw512/AdaptiveWingLoss" -> "facebookresearch/supervision-by-registration"
"protossw512/AdaptiveWingLoss" -> "610265158/face_landmark"
"protossw512/AdaptiveWingLoss" -> "Star-Clouds/FRDA"
"protossw512/AdaptiveWingLoss" -> "elliottzheng/AdaptiveWingLoss"
"protossw512/AdaptiveWingLoss" -> "TropComplique/wing-loss"
"protossw512/AdaptiveWingLoss" -> "github-luffy/PFLD_68points_Pytorch"
"protossw512/AdaptiveWingLoss" -> "cunjian/pytorch_face_landmark"
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "AIZOOTech/FaceMaskDetection"
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "aqeelanwar/MaskTheFace"
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "JDAI-CV/FaceX-Zoo"
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "biubug6/Pytorch_Retinaface"
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "biubug6/Face-Detector-1MB-with-landmark"
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "Star-Clouds/CenterFace"
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "cabani/MaskedFace-Net"
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "ZhaoJ9014/face.evoLVe.PyTorch"
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "deepcam-cn/yolov5-face" ["e"=1]
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "deepinsight/insightface" ["e"=1]
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "ChanChiChoi/awesome-Face_Recognition" ["e"=1]
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" ["e"=1]
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "TreB1eN/InsightFace_Pytorch"
"X-zhangyang/Real-World-Masked-Face-Dataset" -> "natanielruiz/deep-head-pose"
"RiweiChen/FaceTools" -> "hqli/face_recognition"
"RiweiChen/FaceTools" -> "happynear/FaceVerification"
"RiweiChen/FaceTools" -> "RiweiChen/DeepFace"
"RiweiChen/FaceTools" -> "betars/Face-Resources"
"RiweiChen/FaceTools" -> "cyh24/Joint-Bayesian"
"RiweiChen/FaceTools" -> "ydwen/caffe-face"
"RiweiChen/FaceTools" -> "wjgaas/DeepID2"
"RiweiChen/FaceTools" -> "luoyetx/deep-landmark"
"RiweiChen/FaceTools" -> "AlfredXiangWu/face_verification_experiment"
"RiweiChen/FaceTools" -> "tornadomeet/mxnet-face"
"RiweiChen/FaceTools" -> "stdcoutzyx/DeepID_FaceClassify"
"RiweiChen/FaceTools" -> "yulequan/face-alignment-in-3000fps"
"RiweiChen/FaceTools" -> "joyhuang9473/deepid-implementation"
"RiweiChen/FaceTools" -> "Tonyfy/LCNN_TRAIN"
"RiweiChen/FaceTools" -> "CongWeilin/mtcnn-caffe"
"WeitaoVan/L-GM-loss" -> "ChaofWang/L-GM_loss_pytorch"
"WeitaoVan/L-GM-loss" -> "KaleidoZhouYN/FaceRecognitionSystem"
"WeitaoVan/L-GM-loss" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"makarandtapaswi/BallClustering_ICCV2019" -> "vivoutlaw/SSIAM"
"peiyunh/tiny" -> "cydonia999/Tiny_Faces_in_Tensorflow"
"peiyunh/tiny" -> "mahyarnajibi/SSH"
"peiyunh/tiny" -> "sfzhang15/SFD"
"peiyunh/tiny" -> "Seanlinx/mtcnn"
"peiyunh/tiny" -> "varunagrawal/tiny-faces-pytorch"
"peiyunh/tiny" -> "ydwen/caffe-face"
"peiyunh/tiny" -> "kpzhang93/MTCNN_face_detection_alignment" ["e"=1]
"peiyunh/tiny" -> "szq0214/DSOD" ["e"=1]
"peiyunh/tiny" -> "zeusees/FaceBoxes"
"peiyunh/tiny" -> "sfzhang15/RefineDet" ["e"=1]
"peiyunh/tiny" -> "zhaoweicai/cascade-rcnn" ["e"=1]
"peiyunh/tiny" -> "wywu/LAB"
"peiyunh/tiny" -> "dlunion/mtcnn"
"peiyunh/tiny" -> "CongWeilin/mtcnn-caffe"
"peiyunh/tiny" -> "wy1iu/sphereface"
"yl-1993/learn-to-cluster" -> "Zhongdao/gcn_clustering"
"yl-1993/learn-to-cluster" -> "XiaohangZhan/cdp"
"yl-1993/learn-to-cluster" -> "xiaoxiong74/face-cluster-by-infomap"
"yl-1993/learn-to-cluster" -> "makarandtapaswi/BallClustering_ICCV2019"
"yl-1993/learn-to-cluster" -> "sstzal/STAR-FC"
"yl-1993/learn-to-cluster" -> "yl-1993/hfsoftmax"
"yl-1993/learn-to-cluster" -> "varun-suresh/Clustering"
"yl-1993/learn-to-cluster" -> "XiaohangZhan/face_recognition_framework"
"yl-1993/learn-to-cluster" -> "wujiyang/Face_Pytorch"
"yl-1993/learn-to-cluster" -> "Tencent/TFace"
"yl-1993/learn-to-cluster" -> "IrvingMeng/MagFace"
"yl-1993/learn-to-cluster" -> "TreB1eN/InsightFace_Pytorch"
"yl-1993/learn-to-cluster" -> "JDAI-CV/FaceX-Zoo"
"yl-1993/learn-to-cluster" -> "ronghuaiyang/arcface-pytorch"
"yl-1993/learn-to-cluster" -> "yxgeee/SpCL" ["e"=1]
"DuinoDu/mtcnn" -> "happynear/MTCNN_face_detection_alignment"
"DuinoDu/mtcnn" -> "CongWeilin/mtcnn-caffe"
"DuinoDu/mtcnn" -> "DaFuCoding/MTCNN_Caffe"
"DuinoDu/mtcnn" -> "ydwen/caffe-face"
"DuinoDu/mtcnn" -> "dlunion/mtcnn"
"DuinoDu/mtcnn" -> "Seanlinx/mtcnn"
"DuinoDu/mtcnn" -> "kpzhang93/MTCNN_face_detection_alignment" ["e"=1]
"DuinoDu/mtcnn" -> "pangyupo/mxnet_mtcnn_face_detection"
"DuinoDu/mtcnn" -> "foreverYoungGitHub/MTCNN"
"DuinoDu/mtcnn" -> "AlphaQi/MTCNN-light"
"DuinoDu/mtcnn" -> "happynear/NormFace"
"DuinoDu/mtcnn" -> "lsy17096535/face-landmark"
"DuinoDu/mtcnn" -> "AlfredXiangWu/face_verification_experiment"
"DuinoDu/mtcnn" -> "mahyarnajibi/SSH"
"DuinoDu/mtcnn" -> "tornadomeet/mxnet-face"
"FacialLandmark/landmark_py" -> "FaceDetect/jointCascade_py"
"seetaface/SeetaFaceEngine2" -> "seetaface/SeetaFaceEngine" ["e"=1]
"seetaface/SeetaFaceEngine2" -> "seetafaceengine/SeetaFace2"
"seetaface/SeetaFaceEngine2" -> "jamesluozhiwei/seetafaceJNI"
"seetaface/SeetaFaceEngine2" -> "seetafaceengine/SeetaFace6"
"seetaface/SeetaFaceEngine2" -> "zeusees/HyperLandmark"
"seetaface/SeetaFaceEngine2" -> "ydwen/caffe-face"
"seetaface/SeetaFaceEngine2" -> "moli232777144/mtcnn_ncnn"
"seetaface/SeetaFaceEngine2" -> "AlphaQi/MTCNN-light"
"seetaface/SeetaFaceEngine2" -> "dlunion/mtcnn"
"seetaface/SeetaFaceEngine2" -> "wy1iu/sphereface"
"seetaface/SeetaFaceEngine2" -> "zeusees/Zeusee-Face-Anti-spoofing"
"seetaface/SeetaFaceEngine2" -> "SeetaFace6Open/index"
"seetaface/SeetaFaceEngine2" -> "kpzhang93/MTCNN_face_detection_alignment" ["e"=1]
"seetaface/SeetaFaceEngine2" -> "zuoqing1988/ZQCNN" ["e"=1]
"seetaface/SeetaFaceEngine2" -> "CongWeilin/mtcnn-caffe"
"yalecyu/crnn.caffe" -> "kasyoukin/caffe_ocr_for_linux"
"xiongzihua/pytorch-YOLO-v1" -> "Tshzzz/pytorch_yolov1"
"xiongzihua/pytorch-YOLO-v1" -> "happyjin/pytorch-YOLO"
"xiongzihua/pytorch-YOLO-v1" -> "DuanYiqun/pytorch_implementation_of_Yolov1"
"xiongzihua/pytorch-YOLO-v1" -> "motokimura/yolo_v1_pytorch"
"xiongzihua/pytorch-YOLO-v1" -> "longcw/yolo2-pytorch" ["e"=1]
"xiongzihua/pytorch-YOLO-v1" -> "uvipen/Yolo-v2-pytorch"
"xiongzihua/pytorch-YOLO-v1" -> "BobLiu20/YOLOv3_PyTorch" ["e"=1]
"xiongzihua/pytorch-YOLO-v1" -> "LeslieZhoa/tensorflow-YOLO1"
"xiongzihua/pytorch-YOLO-v1" -> "marvis/pytorch-yolo2" ["e"=1]
"xiongzihua/pytorch-YOLO-v1" -> "marvis/pytorch-mobilenet" ["e"=1]
"xiongzihua/pytorch-YOLO-v1" -> "kevin970401/pytorch-YOLO-v1"
"xiongzihua/pytorch-YOLO-v1" -> "tztztztztz/yolov2.pytorch"
"xiongzihua/pytorch-YOLO-v1" -> "yjh0410/yolov2-yolov3_PyTorch"
"Media-Smart/vedaseg" -> "Media-Smart/vedacls"
"Media-Smart/vedaseg" -> "Media-Smart/volkscv"
"Media-Smart/vedaseg" -> "Media-Smart/volksdep"
"Media-Smart/vedaseg" -> "Media-Smart/cheetahinfer"
"Media-Smart/vedaseg" -> "Media-Smart/flexinfer"
"Media-Smart/vedaseg" -> "Media-Smart/vedastr" ["e"=1]
"Media-Smart/vedaseg" -> "LikeLy-Journey/SegmenTron" ["e"=1]
"Media-Smart/vedaseg" -> "Media-Smart/cls2det"
"Media-Smart/vedaseg" -> "lxtGH/Fast_Seg" ["e"=1]
"Media-Smart/vedaseg" -> "Media-Smart/volkstuner"
"Media-Smart/vedaseg" -> "ycszen/BiSeNet" ["e"=1]
"Media-Smart/vedaseg" -> "Media-Smart/vedadet"
"Media-Smart/vedaseg" -> "mileistone/study_resources"
"Media-Smart/vedaseg" -> "TAMU-VITA/FasterSeg" ["e"=1]
"Media-Smart/vedaseg" -> "wuhuikai/FastFCN" ["e"=1]
"66pig/face_recognition" -> "inspurer/WorkAttendanceSystem"
"66pig/face_recognition" -> "librahfacebook/Face"
"66pig/face_recognition" -> "reece15/cnn_face_detection"
"66pig/face_recognition" -> "datamonday/Face-Recognition-Class-Attendance-System"
"66pig/face_recognition" -> "BrucePoki/Attendance-system"
"66pig/face_recognition" -> "z0gSh1u/pr-attendance"
"inspurer/WorkAttendanceSystem" -> "66pig/face_recognition"
"inspurer/WorkAttendanceSystem" -> "datamonday/Face-Recognition-Class-Attendance-System"
"inspurer/WorkAttendanceSystem" -> "coneypo/Dlib_face_recognition_from_camera"
"inspurer/WorkAttendanceSystem" -> "yeziyang1992/Face_Recognition_Client"
"inspurer/WorkAttendanceSystem" -> "winterssy/face_recognition_py"
"inspurer/WorkAttendanceSystem" -> "chenlinzhong/face-login"
"inspurer/WorkAttendanceSystem" -> "hirohe/facerec-python" ["e"=1]
"inspurer/WorkAttendanceSystem" -> "librahfacebook/Face"
"inspurer/WorkAttendanceSystem" -> "reece15/cnn_face_detection"
"inspurer/WorkAttendanceSystem" -> "WindZu/facenet_facerecognition"
"inspurer/WorkAttendanceSystem" -> "yinghualuowu/Python_VLPR" ["e"=1]
"inspurer/WorkAttendanceSystem" -> "king-xw/Face_Recogntion"
"inspurer/WorkAttendanceSystem" -> "xg-zhang/faceRegister" ["e"=1]
"inspurer/WorkAttendanceSystem" -> "MrZhousf/tf_facenet"
"inspurer/WorkAttendanceSystem" -> "jerry1900/faceRecognition"
"kongqw/OpenCVForAndroid" -> "sxpl/FaceAC"
"kongqw/OpenCVForAndroid" -> "wuhaoyu1990/MagicCamera" ["e"=1]
"kongqw/OpenCVForAndroid" -> "doggycoder/AndroidOpenGLDemo" ["e"=1]
"kongqw/OpenCVForAndroid" -> "saki4510t/UVCCamera" ["e"=1]
"kongqw/OpenCVForAndroid" -> "yuxitong/TensorFlowAndroidDemo"
"kongqw/OpenCVForAndroid" -> "gloomyfish1998/opencv4android"
"kongqw/OpenCVForAndroid" -> "mabeijianxi/small-video-record" ["e"=1]
"kongqw/OpenCVForAndroid" -> "aserbao/AndroidCamera" ["e"=1]
"kongqw/OpenCVForAndroid" -> "coneypo/Dlib_face_recognition_from_camera"
"kongqw/OpenCVForAndroid" -> "pqpo/SmartCropper" ["e"=1]
"kongqw/OpenCVForAndroid" -> "xufuji456/FFmpegAndroid" ["e"=1]
"kongqw/OpenCVForAndroid" -> "tzutalin/dlib-android-app"
"kongqw/OpenCVForAndroid" -> "huangyanbin/smartTable" ["e"=1]
"kongqw/OpenCVForAndroid" -> "CJT2325/CameraView" ["e"=1]
"kongqw/OpenCVForAndroid" -> "yipianfengye/android-zxingLibrary" ["e"=1]
"yeziyang1992/Python-Tensorflow-Face-v2.0" -> "yeziyang1992/Face_Recognition_Client"
"yeziyang1992/Python-Tensorflow-Face-v2.0" -> "yeziyang1992/Python-Tensorflow-Face"
"yeziyang1992/Python-Tensorflow-Face-v2.0" -> "lph0729/TensorFlow-FaceRecognition"
"vardanagarwal/Proctoring-AI" -> "narender-rk10/MyProctor.ai-AI-BASED-SMART-ONLINE-EXAMINATION-PROCTORING-SYSYTEM"
"vardanagarwal/Proctoring-AI" -> "yinguobing/cnn-facial-landmark"
"vardanagarwal/Proctoring-AI" -> "antoinelame/GazeTracking"
"vardanagarwal/Proctoring-AI" -> "david-wb/gaze-estimation"
"vardanagarwal/Proctoring-AI" -> "aesophor/hacklympics"
"delphifirst/FaceX" -> "jwyang/face-alignment"
"delphifirst/FaceX" -> "soundsilence/FaceAlignment"
"delphifirst/FaceX" -> "yulequan/face-alignment-in-3000fps"
"mattans/AgeProgression" -> "Jooong/Face-Aging-CAAE-Pytorch"
"mattans/AgeProgression" -> "yoyohonyang/LearingFaceAgeProgression"
"mattans/AgeProgression" -> "ZZUTK/Face-Aging-CAAE"
"mattans/AgeProgression" -> "dawei6875797/Face-Aging-with-Identity-Preserved-Conditional-Generative-Adversarial-Networks"
"mattans/AgeProgression" -> "guyuchao/IPCGANs-Pytorch"
"justusschock/shapenet" -> "D-X-Y/landmark-detection"
"justusschock/shapenet" -> "facebookresearch/supervision-by-registration"
"justusschock/shapenet" -> "HRNet/HRNet-Facial-Landmark-Detection"
"justusschock/shapenet" -> "wywu/LAB"
"justusschock/shapenet" -> "goodluckcwl/Face-alignment-mobilenet-v2"
"justusschock/shapenet" -> "TencentYoutuResearch/FaceAlignment-FHR"
"justusschock/shapenet" -> "FengZhenhua/Wing-Loss"
"justusschock/shapenet" -> "guoqiangqi/PFLD"
"justusschock/shapenet" -> "mariolew/Deep-Alignment-Network-tensorflow"
"justusschock/shapenet" -> "zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment"
"justusschock/shapenet" -> "shaoxiaohu/Face_Alignment_Two_Stage_Re-initialization"
"justusschock/shapenet" -> "cunjian/pytorch_face_landmark"
"justusschock/shapenet" -> "songhengyang/face_landmark_factory"
"justusschock/shapenet" -> "D-X-Y/SAN"
"justusschock/shapenet" -> "protossw512/AdaptiveWingLoss"
"sergeytulyakov/FaceCept3D" -> "jongmoochoi/irisfaceRGBD"
"sergeytulyakov/FaceCept3D" -> "basilfx/Course-Face3D"
"sergeytulyakov/FaceCept3D" -> "XingwXiong/Face3D-Pytorch"
"sergeytulyakov/FaceCept3D" -> "patrikhuber/4dface" ["e"=1]
"jerry1900/faceRecognition" -> "seathiefwang/FaceRecognition-tensorflow"
"jerry1900/faceRecognition" -> "coneypo/Dlib_face_recognition_from_camera"
"jerry1900/faceRecognition" -> "winterssy/face_recognition_py"
"jerry1900/faceRecognition" -> "bystc/FaceRecognition"
"jerry1900/faceRecognition" -> "kuaikuaikim/DFace"
"jerry1900/faceRecognition" -> "yeziyang1992/Python-Tensorflow-Face-v2.0"
"jerry1900/faceRecognition" -> "DLlearn/python-in-dl"
"jerry1900/faceRecognition" -> "shanren7/real_time_face_recognition"
"jerry1900/faceRecognition" -> "WindZu/facenet_facerecognition"
"jerry1900/faceRecognition" -> "yeziyang1992/Face_Recognition_Client"
"jerry1900/faceRecognition" -> "chenlinzhong/face-login"
"jerry1900/faceRecognition" -> "fuzheng0301/FaceRecognition" ["e"=1]
"jerry1900/faceRecognition" -> "Mjrovai/OpenCV-Face-Recognition"
"jerry1900/faceRecognition" -> "inspurer/WorkAttendanceSystem"
"jerry1900/faceRecognition" -> "kongqw/OpenCVForAndroid"
"Raschka-research-group/coral-cnn" -> "Nicholasli1995/VisualizingNDF"
"Raschka-research-group/coral-cnn" -> "Raschka-research-group/coral-pytorch"
"Raschka-research-group/coral-cnn" -> "Herosan163/AgeEstimation"
"Raschka-research-group/coral-cnn" -> "yu4u/age-estimation-pytorch"
"Raschka-research-group/coral-cnn" -> "StevenBanama/C3AE"
"Raschka-research-group/coral-cnn" -> "JingchunCheng/All-Age-Faces-Dataset"
"Raschka-research-group/coral-cnn" -> "gaobb/DLDL-v2"
"Raschka-research-group/coral-cnn" -> "joojs/fairface"
"Raschka-research-group/coral-cnn" -> "shamangary/SSR-Net"
"Raschka-research-group/coral-cnn" -> "gaobb/DLDL"
"Raschka-research-group/coral-cnn" -> "Raschka-research-group/corn-ordinal-neuralnet"
"OverEuro/deep-head-pose-lite" -> "natanielruiz/deep-head-pose"
"OverEuro/deep-head-pose-lite" -> "haofanwang/accurate-head-pose"
"OverEuro/deep-head-pose-lite" -> "Oreobird/tf-keras-deep-head-pose"
"OverEuro/deep-head-pose-lite" -> "natanielruiz/dockerface"
"OverEuro/deep-head-pose-lite" -> "shamangary/FSA-Net"
"Skuldur/facenet-face-recognition" -> "vinayakkailas/Face_Recognition"
"Skuldur/facenet-face-recognition" -> "AISangam/Facenet-Real-time-face-recognition-using-deep-learning-Tensorflow"
"Skuldur/facenet-face-recognition" -> "krasserm/face-recognition"
"Skuldur/facenet-face-recognition" -> "nyoki-mtl/keras-facenet"
"Skuldur/facenet-face-recognition" -> "habrman/FaceRecognition"
"Skuldur/facenet-face-recognition" -> "iwantooxxoox/Keras-OpenFace"
"Skuldur/facenet-face-recognition" -> "ColeMurray/medium-facenet-tutorial" ["e"=1]
"Skuldur/facenet-face-recognition" -> "akshaybahadur21/Facial-Recognition-using-Facenet" ["e"=1]
"Skuldur/facenet-face-recognition" -> "shanren7/real_time_face_recognition"
"Skuldur/facenet-face-recognition" -> "arsfutura/face-recognition"
"bearsprogrammer/real-time-deep-face-recognition" -> "shanren7/real_time_face_recognition"
"bearsprogrammer/real-time-deep-face-recognition" -> "habrman/FaceRecognition"
"bearsprogrammer/real-time-deep-face-recognition" -> "AISangam/Facenet-Real-time-face-recognition-using-deep-learning-Tensorflow"
"bearsprogrammer/real-time-deep-face-recognition" -> "krasserm/face-recognition"
"bearsprogrammer/real-time-deep-face-recognition" -> "ishwarsawale/real-time-face-recognition-with-facenet"
"kuaikuaikim/DFace" -> "TropComplique/mtcnn-pytorch"
"kuaikuaikim/DFace" -> "Sierkinhane/mtcnn-pytorch"
"kuaikuaikim/DFace" -> "TreB1eN/InsightFace_Pytorch"
"kuaikuaikim/DFace" -> "ZhaoJ9014/face.evoLVe.PyTorch"
"kuaikuaikim/DFace" -> "AITTSMD/MTCNN-Tensorflow" ["e"=1]
"kuaikuaikim/DFace" -> "seathiefwang/FaceRecognition-tensorflow"
"kuaikuaikim/DFace" -> "kpzhang93/MTCNN_face_detection_alignment" ["e"=1]
"kuaikuaikim/DFace" -> "AlfredXiangWu/LightCNN"
"kuaikuaikim/DFace" -> "coneypo/Dlib_face_recognition_from_camera"
"kuaikuaikim/DFace" -> "wujiyang/Face_Pytorch"
"kuaikuaikim/DFace" -> "TencentYoutuResearch/FaceDetection-DSFD" ["e"=1]
"kuaikuaikim/DFace" -> "liorshk/facenet_pytorch"
"kuaikuaikim/DFace" -> "clcarwin/sphereface_pytorch"
"kuaikuaikim/DFace" -> "shanren7/real_time_face_recognition"
"kuaikuaikim/DFace" -> "jerry1900/faceRecognition"
"ternaus/retinaface" -> "biubug6/Pytorch_Retinaface"
"ternaus/retinaface" -> "ternaus/facemask_detection"
"ternaus/retinaface" -> "ternaus/iglovikov_helper_functions"
"ternaus/retinaface" -> "ouyanghuiyu/yolo-face-with-landmark"
"ternaus/retinaface" -> "yxlijun/DSFD.pytorch"
"shantnu/Webcam-Face-Detect" -> "shantnu/FaceDetect"
"meizhoubao/pyimagesearch" -> "SIlvaMFPedro/pyimagesearch"
"StephenMilborrow/muct" -> "mrgloom/Face-landmarks-detection-benchmark"
"AIInAi/tf-insightface" -> "auroua/InsightFace_TF"
"AIInAi/tf-insightface" -> "luckycallor/InsightFace-tensorflow"
"AIInAi/tf-insightface" -> "Fei-Wang/insightface"
"AIInAi/tf-insightface" -> "qidiso/mobilefacenet-V2"
"AIInAi/tf-insightface" -> "yangxue0827/MobileFaceNet_Tensorflow"
"AlfredXiangWu/LightCNN" -> "AlfredXiangWu/face_verification_experiment"
"AlfredXiangWu/LightCNN" -> "wy1iu/sphereface"
"AlfredXiangWu/LightCNN" -> "clcarwin/sphereface_pytorch"
"AlfredXiangWu/LightCNN" -> "yxu0611/Tensorflow-implementation-of-LCNN"
"AlfredXiangWu/LightCNN" -> "HRLTY/TP-GAN" ["e"=1]
"AlfredXiangWu/LightCNN" -> "ydwen/caffe-face"
"AlfredXiangWu/LightCNN" -> "cydonia999/VGGFace2-pytorch"
"AlfredXiangWu/LightCNN" -> "penincillin/DREAM"
"AlfredXiangWu/LightCNN" -> "happynear/NormFace"
"AlfredXiangWu/LightCNN" -> "happynear/FaceDatasets"
"AlfredXiangWu/LightCNN" -> "TreB1eN/InsightFace_Pytorch"
"AlfredXiangWu/LightCNN" -> "liorshk/facenet_pytorch"
"AlfredXiangWu/LightCNN" -> "kuaikuaikim/DFace"
"AlfredXiangWu/LightCNN" -> "happynear/AMSoftmax"
"AlfredXiangWu/LightCNN" -> "happynear/FaceVerification"
"CSAILVision/GazeCapture" -> "hugochan/Eye-Tracker"
"CSAILVision/GazeCapture" -> "hysts/pytorch_mpiigaze"
"CSAILVision/GazeCapture" -> "swook/GazeML"
"CSAILVision/GazeCapture" -> "Tobias-Fischer/rt_gene"
"CSAILVision/GazeCapture" -> "cvlab-uob/Awesome-Gaze-Estimation"
"CSAILVision/GazeCapture" -> "antoinelame/GazeTracking"
"CSAILVision/GazeCapture" -> "NVlabs/few_shot_gaze"
"CSAILVision/GazeCapture" -> "pupil-labs/pupil"
"CSAILVision/GazeCapture" -> "esdalmaijer/PyGaze"
"CSAILVision/GazeCapture" -> "erkil1452/gaze360"
"CSAILVision/GazeCapture" -> "hysts/pytorch_mpiigaze_demo"
"CSAILVision/GazeCapture" -> "trishume/eyeLike"
"CSAILVision/GazeCapture" -> "iitmcvg/eye-gaze"
"CSAILVision/GazeCapture" -> "natanielruiz/deep-head-pose"
"CSAILVision/GazeCapture" -> "mpatacchiola/deepgaze"
"iitzco/faced" -> "sthanhng/yoloface"
"iitzco/faced" -> "ildoonet/deepface"
"iitzco/faced" -> "yeephycho/tensorflow-face-detection"
"iitzco/faced" -> "sfzhang15/FaceBoxes"
"iitzco/faced" -> "szad670401/Fast-MTCNN"
"iitzco/faced" -> "iitzco/tfserve"
"iitzco/faced" -> "cydonia999/Tiny_Faces_in_Tensorflow"
"iitzco/faced" -> "peiyunh/tiny"
"iitzco/faced" -> "EricZgw/PyramidBox"
"iitzco/faced" -> "abars/YoloKerasFaceDetection"
"iitzco/faced" -> "justusschock/shapenet"
"iitzco/faced" -> "ipazc/mtcnn" ["e"=1]
"rcmalli/keras-vggface" -> "ox-vgg/vgg_face2"
"rcmalli/keras-vggface" -> "cydonia999/VGGFace2-pytorch"
"rcmalli/keras-vggface" -> "nyoki-mtl/keras-facenet"
"rcmalli/keras-vggface" -> "ipazc/mtcnn" ["e"=1]
"rcmalli/keras-vggface" -> "krasserm/face-recognition"
"rcmalli/keras-vggface" -> "auroua/InsightFace_TF"
"rcmalli/keras-vggface" -> "WeidiXie/Keras-VGGFace2-ResNet50"
"rcmalli/keras-vggface" -> "Tony607/Keras_face_identification_realtime"
"rcmalli/keras-vggface" -> "iwantooxxoox/Keras-OpenFace"
"rcmalli/keras-vggface" -> "AIInAi/tf-insightface"
"rcmalli/keras-vggface" -> "serengil/tensorflow-101"
"rcmalli/keras-vggface" -> "davidsandberg/facenet" ["e"=1]
"rcmalli/keras-vggface" -> "AlfredXiangWu/LightCNN"
"rcmalli/keras-vggface" -> "yu4u/age-gender-estimation"
"rcmalli/keras-vggface" -> "fengju514/Expression-Net" ["e"=1]
"richmondu/libfaceid" -> "ee09115/spoofing_detection"
"richmondu/libfaceid" -> "AhmetHamzaEmra/Intelegent_Lock"
"richmondu/libfaceid" -> "Guarouba/face_rec"
"richmondu/libfaceid" -> "juan-csv/face_liveness_detection-Anti-spoofing"
"richmondu/libfaceid" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019"
"richmondu/libfaceid" -> "JinghuiZhou/awesome_face_antispoofing"
"richmondu/libfaceid" -> "habom2310/People-tracking-with-Age-and-Gender-detection"
"richmondu/libfaceid" -> "AlexanderParkin/ChaLearn_liveness_challenge"
"richmondu/libfaceid" -> "houliang428/CNN-for-face-anti-spoofing"
"richmondu/libfaceid" -> "anand498/Face-Liveness-Detection"
"richmondu/libfaceid" -> "luckycallor/InsightFace-tensorflow"
"richmondu/libfaceid" -> "SeuTao/CVPR19-Face-Anti-spoofing"
"richmondu/libfaceid" -> "imironica/liveness"
"richmondu/libfaceid" -> "smahesh29/Gender-and-Age-Detection"
"richmondu/libfaceid" -> "OeslleLucena/FASNet"
"sfzhang15/FaceBoxes" -> "zisianw/FaceBoxes.PyTorch"
"sfzhang15/FaceBoxes" -> "zeusees/FaceBoxes"
"sfzhang15/FaceBoxes" -> "sfzhang15/SFD"
"sfzhang15/FaceBoxes" -> "ChiCheng123/SRN"
"sfzhang15/FaceBoxes" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"sfzhang15/FaceBoxes" -> "wywu/LAB"
"sfzhang15/FaceBoxes" -> "mahyarnajibi/SSH"
"sfzhang15/FaceBoxes" -> "xialuxi/arcface-caffe"
"sfzhang15/FaceBoxes" -> "sciencefans/RSA-for-object-detection"
"sfzhang15/FaceBoxes" -> "TropComplique/FaceBoxes-tensorflow"
"sfzhang15/FaceBoxes" -> "Charrin/RetinaFace-Cpp"
"sfzhang15/FaceBoxes" -> "Star-Clouds/centerface"
"sfzhang15/FaceBoxes" -> "zeusees/HyperLandmark"
"sfzhang15/FaceBoxes" -> "TencentYoutuResearch/FaceDetection-DSFD" ["e"=1]
"sfzhang15/FaceBoxes" -> "moli232777144/mtcnn_ncnn"
"jwdink/eyetrackingR" -> "samhforbes/PupillometryR"
"tmalsburg/saccades" -> "psychoinformatics-de/remodnav"
"tanakataiki/ssd_kerasV2" -> "ManishSoni1908/Mobilenet-ssd-keras"
"tanakataiki/ssd_kerasV2" -> "bruceyang2012/Face-detection-with-mobilenet-ssd"
"serengil/retinaface" -> "StanislasBertrand/RetinaFace-tf2"
"serengil/retinaface" -> "serengil/deepface" ["e"=1]
"serengil/retinaface" -> "biubug6/Pytorch_Retinaface"
"serengil/retinaface" -> "Media-Smart/vedadet"
"serengil/retinaface" -> "maheravi/Machine-Learning"
"serengil/retinaface" -> "SajjadAemmi/Data-Science"
"serengil/retinaface" -> "SajjadAemmi/Face-Alignment"
"serengil/retinaface" -> "vitoralbiero/img2pose"
"serengil/retinaface" -> "ternaus/retinaface"
"serengil/retinaface" -> "peteryuX/retinaface-tf2"
"serengil/retinaface" -> "NahidEbrahimian/Deep-Learning-Course"
"serengil/retinaface" -> "maheravi/Digikala-DataScience"
"serengil/retinaface" -> "hoseindamavandi/Python-Course"
"serengil/retinaface" -> "SajjadAemmi/Image-Processing-Telegram-Bot"
"serengil/retinaface" -> "ZitongYu/DeepFAS"
"SeuTao/CVPR19-Face-Anti-spoofing" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019"
"SeuTao/CVPR19-Face-Anti-spoofing" -> "AlexanderParkin/ChaLearn_liveness_challenge"
"SeuTao/CVPR19-Face-Anti-spoofing" -> "ZitongYu/CDCN"
"SeuTao/CVPR19-Face-Anti-spoofing" -> "JinghuiZhou/awesome_face_antispoofing"
"SeuTao/CVPR19-Face-Anti-spoofing" -> "clks-wzz/FAS-SGTD"
"SeuTao/CVPR19-Face-Anti-spoofing" -> "zzzkk2009/casia-surf-2019-codes"
"SeuTao/CVPR19-Face-Anti-spoofing" -> "minivision-ai/Silent-Face-Anti-Spoofing"
"SeuTao/CVPR19-Face-Anti-spoofing" -> "yaojieliu/ECCV2018-FaceDeSpoofing"
"SeuTao/CVPR19-Face-Anti-spoofing" -> "yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing"
"SeuTao/CVPR19-Face-Anti-spoofing" -> "deepcam-cn/Face-Anti-spoofing.pytorch"
"SeuTao/CVPR19-Face-Anti-spoofing" -> "zeusees/Zeusee-Face-Anti-spoofing"
"SeuTao/CVPR19-Face-Anti-spoofing" -> "AlexanderParkin/CASIA-SURF_CeFA"
"SeuTao/CVPR19-Face-Anti-spoofing" -> "taylover-pei/SSDG-CVPR2020"
"SeuTao/CVPR19-Face-Anti-spoofing" -> "Davidzhangyuanhan/CelebA-Spoof"
"SeuTao/CVPR19-Face-Anti-spoofing" -> "RizhaoCai/Awesome-FAS"
"SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" -> "SeuTao/CVPR19-Face-Anti-spoofing"
"SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" -> "AlexanderParkin/ChaLearn_liveness_challenge"
"SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" -> "JinghuiZhou/awesome_face_antispoofing"
"SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" -> "ZitongYu/CDCN"
"SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" -> "minivision-ai/Silent-Face-Anti-Spoofing"
"SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" -> "clks-wzz/FAS-SGTD"
"SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" -> "zzzkk2009/casia-surf-2019-codes"
"SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" -> "Davidzhangyuanhan/CelebA-Spoof"
"SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" -> "ee09115/spoofing_detection"
"SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" -> "zeusees/Zeusee-Face-Anti-spoofing"
"SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" -> "RizhaoCai/Awesome-FAS"
"SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" -> "yaojieliu/ECCV2018-FaceDeSpoofing"
"SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" -> "zeusees/HyperFAS"
"SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" -> "yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing"
"SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" -> "taylover-pei/SSDG-CVPR2020"
"ZitongYu/DeepFAS" -> "RizhaoCai/Awesome-FAS"
"ZitongYu/DeepFAS" -> "ZitongYu/CDCN"
"ZitongYu/DeepFAS" -> "taylover-pei/SSDG-CVPR2020"
"ZitongYu/DeepFAS" -> "Davidzhangyuanhan/CelebA-Spoof"
"ZitongYu/DeepFAS" -> "wangzhuo2019/SSAN"
"ZitongYu/DeepFAS" -> "clks-wzz/FAS-SGTD"
"ZitongYu/DeepFAS" -> "SeuTao/CVPR19-Face-Anti-spoofing"
"ZitongYu/DeepFAS" -> "yaojieliu/ECCV20-STDN"
"ZitongYu/DeepFAS" -> "minivision-ai/Silent-Face-Anti-Spoofing"
"ZitongYu/DeepFAS" -> "clks-wzz/PRNet-Depth-Generation"
"ZitongYu/DeepFAS" -> "kprokofi/light-weight-face-anti-spoofing"
"ZitongYu/DeepFAS" -> "AlexanderParkin/CASIA-SURF_CeFA"
"ZitongYu/DeepFAS" -> "VIS-VAR/LGSC-for-FAS"
"ZitongYu/DeepFAS" -> "AlexanderParkin/ChaLearn_liveness_challenge"
"ZitongYu/DeepFAS" -> "qyxqyx/AIM_FAS"
"biubug6/Pytorch_Retinaface" -> "biubug6/Face-Detector-1MB-with-landmark"
"biubug6/Pytorch_Retinaface" -> "TreB1eN/InsightFace_Pytorch"
"biubug6/Pytorch_Retinaface" -> "deepinsight/insightface" ["e"=1]
"biubug6/Pytorch_Retinaface" -> "Star-Clouds/CenterFace"
"biubug6/Pytorch_Retinaface" -> "deepcam-cn/yolov5-face" ["e"=1]
"biubug6/Pytorch_Retinaface" -> "ronghuaiyang/arcface-pytorch"
"biubug6/Pytorch_Retinaface" -> "polarisZhao/PFLD-pytorch"
"biubug6/Pytorch_Retinaface" -> "supernotman/RetinaFace_Pytorch"
"biubug6/Pytorch_Retinaface" -> "ZhaoJ9014/face.evoLVe.PyTorch"
"biubug6/Pytorch_Retinaface" -> "JDAI-CV/FaceX-Zoo"
"biubug6/Pytorch_Retinaface" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" ["e"=1]
"biubug6/Pytorch_Retinaface" -> "dlunion/DBFace"
"biubug6/Pytorch_Retinaface" -> "X-zhangyang/Real-World-Masked-Face-Dataset"
"biubug6/Pytorch_Retinaface" -> "ChanChiChoi/awesome-Face_Recognition" ["e"=1]
"biubug6/Pytorch_Retinaface" -> "natanielruiz/deep-head-pose"
"coneypo/Dlib_face_recognition_from_camera" -> "jerry1900/faceRecognition"
"coneypo/Dlib_face_recognition_from_camera" -> "seathiefwang/FaceRecognition-tensorflow"
"coneypo/Dlib_face_recognition_from_camera" -> "winterssy/face_recognition_py"
"coneypo/Dlib_face_recognition_from_camera" -> "kuaikuaikim/DFace"
"coneypo/Dlib_face_recognition_from_camera" -> "inspurer/WorkAttendanceSystem"
"coneypo/Dlib_face_recognition_from_camera" -> "chenlinzhong/face-login"
"coneypo/Dlib_face_recognition_from_camera" -> "vipstone/faceai" ["e"=1]
"coneypo/Dlib_face_recognition_from_camera" -> "WindZu/facenet_facerecognition"
"coneypo/Dlib_face_recognition_from_camera" -> "kongqw/OpenCVForAndroid"
"coneypo/Dlib_face_recognition_from_camera" -> "MrZhousf/tf_facenet"
"coneypo/Dlib_face_recognition_from_camera" -> "yeziyang1992/Face_Recognition_Client"
"coneypo/Dlib_face_recognition_from_camera" -> "fuzheng0301/FaceRecognition" ["e"=1]
"coneypo/Dlib_face_recognition_from_camera" -> "luanshiyinyang/FacialExpressionRecognition" ["e"=1]
"coneypo/Dlib_face_recognition_from_camera" -> "KangLin/FaceRecognizer"
"coneypo/Dlib_face_recognition_from_camera" -> "Mjrovai/OpenCV-Face-Recognition"
"minivision-ai/Silent-Face-Anti-Spoofing" -> "minivision-ai/Silent-Face-Anti-Spoofing-APK"
"minivision-ai/Silent-Face-Anti-Spoofing" -> "ZitongYu/CDCN"
"minivision-ai/Silent-Face-Anti-Spoofing" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019"
"minivision-ai/Silent-Face-Anti-Spoofing" -> "SeuTao/CVPR19-Face-Anti-spoofing"
"minivision-ai/Silent-Face-Anti-Spoofing" -> "zeusees/HyperFAS"
"minivision-ai/Silent-Face-Anti-Spoofing" -> "Davidzhangyuanhan/CelebA-Spoof"
"minivision-ai/Silent-Face-Anti-Spoofing" -> "AlexanderParkin/ChaLearn_liveness_challenge"
"minivision-ai/Silent-Face-Anti-Spoofing" -> "biubug6/Face-Detector-1MB-with-landmark"
"minivision-ai/Silent-Face-Anti-Spoofing" -> "RizhaoCai/Awesome-FAS"
"minivision-ai/Silent-Face-Anti-Spoofing" -> "clks-wzz/FAS-SGTD"
"minivision-ai/Silent-Face-Anti-Spoofing" -> "ZitongYu/DeepFAS"
"minivision-ai/Silent-Face-Anti-Spoofing" -> "JinghuiZhou/awesome_face_antispoofing"
"minivision-ai/Silent-Face-Anti-Spoofing" -> "zeusees/Zeusee-Face-Anti-spoofing"
"minivision-ai/Silent-Face-Anti-Spoofing" -> "JDAI-CV/FaceX-Zoo"
"minivision-ai/Silent-Face-Anti-Spoofing" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"dloperab/PyImageSearch-CV-DL-CrashCourse" -> "SIlvaMFPedro/pyimagesearch"
"dloperab/PyImageSearch-CV-DL-CrashCourse" -> "meizhoubao/pyimagesearch"
"dloperab/PyImageSearch-CV-DL-CrashCourse" -> "YunchuZhang/PyImageSearch-Gurus-Course"
"dloperab/PyImageSearch-CV-DL-CrashCourse" -> "Abhs9/DL4CVStarterBundle" ["e"=1]
"nazmiasri95/Face-Recognition" -> "thecodacus/Face-Recognition"
"rdcolema/tensorflow-image-classification" -> "Fdevmsy/Image_Classification_with_5_methods"
"rdcolema/tensorflow-image-classification" -> "jibikbam/CNN-3D-images-Tensorflow"
"rdcolema/tensorflow-image-classification" -> "wolfib/image-classification-CIFAR10-tf"
"rdcolema/tensorflow-image-classification" -> "suraj-deshmukh/Multi-Label-Image-Classification" ["e"=1]
"rdcolema/tensorflow-image-classification" -> "sankit1/cv-tricks.com"
"AIZOOTech/FaceMaskDetection" -> "X-zhangyang/Real-World-Masked-Face-Dataset"
"AIZOOTech/FaceMaskDetection" -> "chandrikadeb7/Face-Mask-Detection"
"AIZOOTech/FaceMaskDetection" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" ["e"=1]
"AIZOOTech/FaceMaskDetection" -> "biubug6/Pytorch_Retinaface"
"AIZOOTech/FaceMaskDetection" -> "deepinsight/insightface" ["e"=1]
"AIZOOTech/FaceMaskDetection" -> "Star-Clouds/CenterFace"
"AIZOOTech/FaceMaskDetection" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"AIZOOTech/FaceMaskDetection" -> "biubug6/Face-Detector-1MB-with-landmark"
"AIZOOTech/FaceMaskDetection" -> "ChanChiChoi/awesome-Face_Recognition" ["e"=1]
"AIZOOTech/FaceMaskDetection" -> "minivision-ai/Silent-Face-Anti-Spoofing"
"AIZOOTech/FaceMaskDetection" -> "JDAI-CV/FaceX-Zoo"
"AIZOOTech/FaceMaskDetection" -> "njvisionpower/Safety-Helmet-Wearing-Dataset" ["e"=1]
"AIZOOTech/FaceMaskDetection" -> "ZhaoJ9014/face.evoLVe.PyTorch"
"AIZOOTech/FaceMaskDetection" -> "dlunion/DBFace"
"AIZOOTech/FaceMaskDetection" -> "TreB1eN/InsightFace_Pytorch"
"shantnu/FaceDetect" -> "shantnu/Webcam-Face-Detect"
"shantnu/FaceDetect" -> "informramiz/opencv-face-recognition-python"
"shantnu/FaceDetect" -> "mrnugget/opencv-haar-classifier-training" ["e"=1]
"shantnu/FaceDetect" -> "ITCoders/Human-detection-and-Tracking" ["e"=1]
"shantnu/FaceDetect" -> "bytefish/facerec" ["e"=1]
"shantnu/FaceDetect" -> "Mjrovai/OpenCV-Face-Recognition"
"shantnu/FaceDetect" -> "shantnu/PyEng"
"shantnu/FaceDetect" -> "guoyilin/FaceDetection_CNN"
"shantnu/FaceDetect" -> "JeeveshN/Face-Detect"
"wlguan/MobileNet-v2-pruning" -> "eezywu/Pruned-MobileNet_v2"
"wlguan/MobileNet-v2-pruning" -> "wlguan/MNN-yolov3"
"winterssy/face_recognition_py" -> "coneypo/Dlib_face_recognition_from_camera"
"winterssy/face_recognition_py" -> "jerry1900/faceRecognition"
"winterssy/face_recognition_py" -> "yeziyang1992/Face_Recognition_Client"
"winterssy/face_recognition_py" -> "inspurer/WorkAttendanceSystem"
"winterssy/face_recognition_py" -> "seathiefwang/FaceRecognition-tensorflow"
"winterssy/face_recognition_py" -> "1zlab/1ZLAB_OpenCV_Face_Detection"
"winterssy/face_recognition_py" -> "bubbliiiing/keras-face-recognition" ["e"=1]
"winterssy/face_recognition_py" -> "coderXuXiang/Face_Recognition"
"winterssy/face_recognition_py" -> "douxiao/detect_face_pyqt5" ["e"=1]
"winterssy/face_recognition_py" -> "WindZu/facenet_facerecognition"
"YirongMao/softmax_variants" -> "MuggleWang/CosFace_pytorch"
"YirongMao/softmax_variants" -> "ChaofWang/L-GM_loss_pytorch"
"YirongMao/softmax_variants" -> "cvqluu/Angular-Penalty-Softmax-Losses-Pytorch"
"YirongMao/softmax_variants" -> "jxgu1016/MNIST_center_loss_pytorch"
"YirongMao/softmax_variants" -> "amirhfarzaneh/lsoftmax-pytorch"
"YirongMao/softmax_variants" -> "KaiyangZhou/pytorch-center-loss"
"View12138/ViewFaceCore" -> "View12138/ViewFaceCoreDemo"
"View12138/ViewFaceCore" -> "SpringLeee/HttpReports" ["e"=1]
"View12138/ViewFaceCore" -> "sdcb/Sdcb.FFmpeg" ["e"=1]
"View12138/ViewFaceCore" -> "kklldog/AgileConfig" ["e"=1]
"View12138/ViewFaceCore" -> "seetafaceengine/SeetaFace6"
"View12138/ViewFaceCore" -> "bobowire/Wireboy.Socket.P2PSocket" ["e"=1]
"Ascend-Research/HeadPoseEstimation-WHENet" -> "thohemp/6DRepNet"
"Ascend-Research/HeadPoseEstimation-WHENet" -> "natanielruiz/deep-head-pose"
"Ascend-Research/HeadPoseEstimation-WHENet" -> "vitoralbiero/img2pose"
"Ascend-Research/HeadPoseEstimation-WHENet" -> "shamangary/FSA-Net"
"Ascend-Research/HeadPoseEstimation-WHENet" -> "haofanwang/accurate-head-pose"
"Ascend-Research/HeadPoseEstimation-WHENet" -> "xucong-zhang/ETH-XGaze"
"Ascend-Research/HeadPoseEstimation-WHENet" -> "choyingw/SynergyNet" ["e"=1]
"Ascend-Research/HeadPoseEstimation-WHENet" -> "hysts/pytorch_mpiigaze"
"Ascend-Research/HeadPoseEstimation-WHENet" -> "yinguobing/head-pose-estimation"
"Ascend-Research/HeadPoseEstimation-WHENet" -> "omasaht/headpose-fsanet-pytorch"
"Ascend-Research/HeadPoseEstimation-WHENet" -> "WIKI2020/FacePose_pytorch"
"Ascend-Research/HeadPoseEstimation-WHENet" -> "1996scarlet/Dense-Head-Pose-Estimation" ["e"=1]
"Ascend-Research/HeadPoseEstimation-WHENet" -> "Tobias-Fischer/rt_gene"
"Ascend-Research/HeadPoseEstimation-WHENet" -> "hnuzhy/DirectMHP"
"Ascend-Research/HeadPoseEstimation-WHENet" -> "erkil1452/gaze360"
"NVlabs/few_shot_gaze" -> "Tobias-Fischer/rt_gene"
"NVlabs/few_shot_gaze" -> "xucong-zhang/ETH-XGaze"
"NVlabs/few_shot_gaze" -> "hysts/pytorch_mpiigaze"
"NVlabs/few_shot_gaze" -> "cvlab-uob/Awesome-Gaze-Estimation"
"NVlabs/few_shot_gaze" -> "erkil1452/gaze360"
"NVlabs/few_shot_gaze" -> "swook/GazeML"
"NVlabs/few_shot_gaze" -> "hysts/pytorch_mpiigaze_demo"
"NVlabs/few_shot_gaze" -> "swook/faze_preprocess"
"NVlabs/few_shot_gaze" -> "yihuacheng/GazeTR"
"NVlabs/few_shot_gaze" -> "david-wb/gaze-estimation"
"NVlabs/few_shot_gaze" -> "zhengyuf/STED-gaze"
"NVlabs/few_shot_gaze" -> "CSAILVision/GazeCapture"
"NVlabs/few_shot_gaze" -> "svip-lab/GazeFollowing"
"NVlabs/few_shot_gaze" -> "yihuacheng/PureGaze"
"NVlabs/few_shot_gaze" -> "Ahmednull/L2CS-Net"
"Tobias-Fischer/rt_gene" -> "erkil1452/gaze360"
"Tobias-Fischer/rt_gene" -> "NVlabs/few_shot_gaze"
"Tobias-Fischer/rt_gene" -> "hysts/pytorch_mpiigaze"
"Tobias-Fischer/rt_gene" -> "cvlab-uob/Awesome-Gaze-Estimation"
"Tobias-Fischer/rt_gene" -> "swook/GazeML"
"Tobias-Fischer/rt_gene" -> "xucong-zhang/ETH-XGaze"
"Tobias-Fischer/rt_gene" -> "hysts/pytorch_mpiigaze_demo"
"Tobias-Fischer/rt_gene" -> "CSAILVision/GazeCapture"
"Tobias-Fischer/rt_gene" -> "WuZhuoran/awesome-gaze"
"Tobias-Fischer/rt_gene" -> "natanielruiz/deep-head-pose"
"Tobias-Fischer/rt_gene" -> "crisie/RecurrentGaze"
"Tobias-Fischer/rt_gene" -> "swook/EVE"
"Tobias-Fischer/rt_gene" -> "shamangary/FSA-Net"
"Tobias-Fischer/rt_gene" -> "Ahmednull/L2CS-Net"
"Tobias-Fischer/rt_gene" -> "svip-lab/GazeFollowing"
"YutaItoh/3D-Eye-Tracker" -> "LeszekSwirski/singleeyefitter"
"YutaItoh/3D-Eye-Tracker" -> "LeszekSwirski/pupiltracker"
"YutaItoh/3D-Eye-Tracker" -> "pydsgz/DeepVOG"
"YutaItoh/3D-Eye-Tracker" -> "YutaItoh/3D-EyePosition-Estimation"
"YutaItoh/3D-Eye-Tracker" -> "pupil-labs/pye3d-detector"
"YutaItoh/3D-Eye-Tracker" -> "iitmcvg/eye-gaze"
"YutaItoh/3D-Eye-Tracker" -> "pupil-labs/pupil"
"YutaItoh/3D-Eye-Tracker" -> "errollw/EyeTab"
"YutaItoh/3D-Eye-Tracker" -> "hugochan/Eye-Tracker"
"YutaItoh/3D-Eye-Tracker" -> "tcsantini/EyeRecToo"
"YutaItoh/3D-Eye-Tracker" -> "esdalmaijer/webcam-eyetracker"
"antoinelame/GazeTracking" -> "CSAILVision/GazeCapture"
"antoinelame/GazeTracking" -> "swook/GazeML"
"antoinelame/GazeTracking" -> "stepacool/Eye-Tracker"
"antoinelame/GazeTracking" -> "esdalmaijer/PyGaze"
"antoinelame/GazeTracking" -> "pupil-labs/pupil"
"antoinelame/GazeTracking" -> "trishume/eyeLike"
"antoinelame/GazeTracking" -> "cvlab-uob/Awesome-Gaze-Estimation"
"antoinelame/GazeTracking" -> "natanielruiz/deep-head-pose"
"antoinelame/GazeTracking" -> "yinguobing/head-pose-estimation"
"antoinelame/GazeTracking" -> "hugochan/Eye-Tracker"
"antoinelame/GazeTracking" -> "hysts/pytorch_mpiigaze"
"antoinelame/GazeTracking" -> "esdalmaijer/webcam-eyetracker"
"antoinelame/GazeTracking" -> "mpatacchiola/deepgaze"
"antoinelame/GazeTracking" -> "NVlabs/few_shot_gaze"
"antoinelame/GazeTracking" -> "Tobias-Fischer/rt_gene"
"cvlab-uob/Awesome-Gaze-Estimation" -> "swook/GazeML"
"cvlab-uob/Awesome-Gaze-Estimation" -> "Tobias-Fischer/rt_gene"
"cvlab-uob/Awesome-Gaze-Estimation" -> "NVlabs/few_shot_gaze"
"cvlab-uob/Awesome-Gaze-Estimation" -> "hysts/pytorch_mpiigaze_demo"
"cvlab-uob/Awesome-Gaze-Estimation" -> "erkil1452/gaze360"
"cvlab-uob/Awesome-Gaze-Estimation" -> "hysts/pytorch_mpiigaze"
"cvlab-uob/Awesome-Gaze-Estimation" -> "xucong-zhang/ETH-XGaze"
"cvlab-uob/Awesome-Gaze-Estimation" -> "svip-lab/GazeFollowing"
"cvlab-uob/Awesome-Gaze-Estimation" -> "WuZhuoran/awesome-gaze"
"cvlab-uob/Awesome-Gaze-Estimation" -> "CSAILVision/GazeCapture"
"cvlab-uob/Awesome-Gaze-Estimation" -> "swook/EVE"
"cvlab-uob/Awesome-Gaze-Estimation" -> "david-wb/gaze-estimation"
"cvlab-uob/Awesome-Gaze-Estimation" -> "yihuacheng/GazeTR"
"cvlab-uob/Awesome-Gaze-Estimation" -> "pydsgz/DeepVOG"
"cvlab-uob/Awesome-Gaze-Estimation" -> "yihuacheng/PureGaze"
"erkil1452/gaze360" -> "Tobias-Fischer/rt_gene"
"erkil1452/gaze360" -> "NVlabs/few_shot_gaze"
"erkil1452/gaze360" -> "hysts/pytorch_mpiigaze"
"erkil1452/gaze360" -> "xucong-zhang/ETH-XGaze"
"erkil1452/gaze360" -> "swook/GazeML"
"erkil1452/gaze360" -> "cvlab-uob/Awesome-Gaze-Estimation"
"erkil1452/gaze360" -> "WuZhuoran/awesome-gaze"
"erkil1452/gaze360" -> "hysts/pytorch_mpiigaze_demo"
"erkil1452/gaze360" -> "yihuacheng/Gaze-Net"
"erkil1452/gaze360" -> "ejcgt/attention-target-detection"
"erkil1452/gaze360" -> "NVlabs/weakly-supervised-gaze"
"erkil1452/gaze360" -> "swook/EVE"
"erkil1452/gaze360" -> "swook/faze_preprocess"
"erkil1452/gaze360" -> "Ahmednull/L2CS-Net"
"erkil1452/gaze360" -> "recasens/Gaze-Following"
"guoqiangqi/PFLD" -> "polarisZhao/PFLD-pytorch"
"guoqiangqi/PFLD" -> "Hsintao/pfld_106_face_landmarks"
"guoqiangqi/PFLD" -> "facebookresearch/supervision-by-registration"
"guoqiangqi/PFLD" -> "github-luffy/PFLD_68points_Pytorch"
"guoqiangqi/PFLD" -> "610265158/Peppa_Pig_Face_Engine"
"guoqiangqi/PFLD" -> "biubug6/Face-Detector-1MB-with-landmark"
"guoqiangqi/PFLD" -> "D-X-Y/landmark-detection"
"guoqiangqi/PFLD" -> "wywu/LAB"
"guoqiangqi/PFLD" -> "610265158/face_landmark"
"guoqiangqi/PFLD" -> "HRNet/HRNet-Facial-Landmark-Detection"
"guoqiangqi/PFLD" -> "hanson-young/nniefacelib"
"guoqiangqi/PFLD" -> "cunjian/pytorch_face_landmark"
"guoqiangqi/PFLD" -> "protossw512/AdaptiveWingLoss"
"guoqiangqi/PFLD" -> "zeusees/HyperLandmark"
"guoqiangqi/PFLD" -> "natanielruiz/deep-head-pose"
"hugochan/Eye-Tracker" -> "gdubrg/Eye-Tracking-for-Everyone"
"hugochan/Eye-Tracker" -> "CSAILVision/GazeCapture"
"hugochan/Eye-Tracker" -> "Walleclipse/Gaze_Tracking"
"hugochan/Eye-Tracker" -> "esdalmaijer/webcam-eyetracker"
"iitmcvg/eye-gaze" -> "errollw/EyeTab"
"iitmcvg/eye-gaze" -> "Walleclipse/Gaze_Tracking"
"iitmcvg/eye-gaze" -> "opengazer/OpenGazer"
"iitmcvg/eye-gaze" -> "eyetrackingDB/GazeTrackingFramework"
"iitmcvg/eye-gaze" -> "swook/GazeML"
"iitmcvg/eye-gaze" -> "YutaItoh/3D-Eye-Tracker"
"iitmcvg/eye-gaze" -> "CSAILVision/GazeCapture"
"iitmcvg/eye-gaze" -> "trishume/SmartGaze"
"opengazer/OpenGazer" -> "tiendan/OpenGazer"
"svip-lab/GazeFollowing" -> "rohitgajawada/Where-are-they-looking-PyTorch"
"svip-lab/GazeFollowing" -> "ejcgt/attention-target-detection"
"svip-lab/GazeFollowing" -> "recasens/Gaze-Following"
"svip-lab/GazeFollowing" -> "cvlab-uob/Awesome-Gaze-Estimation"
"swook/GazeML" -> "hysts/pytorch_mpiigaze"
"swook/GazeML" -> "cvlab-uob/Awesome-Gaze-Estimation"
"swook/GazeML" -> "Tobias-Fischer/rt_gene"
"swook/GazeML" -> "erkil1452/gaze360"
"swook/GazeML" -> "NVlabs/few_shot_gaze"
"swook/GazeML" -> "david-wb/gaze-estimation"
"swook/GazeML" -> "hysts/pytorch_mpiigaze_demo"
"swook/GazeML" -> "CSAILVision/GazeCapture"
"swook/GazeML" -> "xucong-zhang/ETH-XGaze"
"swook/GazeML" -> "natanielruiz/deep-head-pose"
"swook/GazeML" -> "antoinelame/GazeTracking"
"swook/GazeML" -> "shaoanlu/GazeML-keras"
"swook/GazeML" -> "svip-lab/GazeFollowing"
"swook/GazeML" -> "pydsgz/DeepVOG"
"swook/GazeML" -> "iitmcvg/eye-gaze"
"Media-Smart/vedadet" -> "Media-Smart/volkscv"
"Media-Smart/vedadet" -> "Tencent/FaceDetection-DSFD"
"Media-Smart/vedadet" -> "biubug6/Pytorch_Retinaface"
"Media-Smart/vedadet" -> "Star-Clouds/CenterFace"
"Media-Smart/vedadet" -> "Media-Smart/flexinfer"
"Media-Smart/vedadet" -> "Media-Smart/volksdep"
"Media-Smart/vedadet" -> "akofman/wider-face-pascal-voc-annotations"
"Media-Smart/vedadet" -> "supernotman/RetinaFace_Pytorch"
"Media-Smart/vedadet" -> "dlunion/DBFace"
"Media-Smart/vedadet" -> "Media-Smart/cheetahinfer"
"Media-Smart/vedadet" -> "Media-Smart/vedaseg"
"Media-Smart/vedadet" -> "biubug6/Face-Detector-1MB-with-landmark"
"Media-Smart/vedadet" -> "deepcam-cn/yolov5-face" ["e"=1]
"Media-Smart/vedadet" -> "ChiCheng123/SRN"
"Media-Smart/vedadet" -> "chenjun2hao/CenterFace.pytorch"
"HiKapok/tf.extra_losses" -> "auroua/L_Softmax_TensorFlow"
"HiKapok/tf.extra_losses" -> "pppoe/tensorflow-sphereface-asoftmax"
"HiKapok/tf.extra_losses" -> "andrewhuman/sphereloss_tensorflow"
"HiKapok/tf.extra_losses" -> "unixpickle/spherenet"
"rockchip-linux/docs" -> "rockchip-linux/tools"
"rockchip-linux/docs" -> "rockchip-android/RKDocs"
"rockchip-linux/docs" -> "rockchip-linux/kernel"
"rockchip-linux/docs" -> "rockchip-linux/buildroot"
"rockchip-linux/docs" -> "rockchip-linux/rkbin"
"changechenyu/chenyuEbook" -> "Reginer/MVVMHub"
"itboyst/ArcSoftFaceDemo" -> "chengxy-nds/ArcSoftFaceDemo"
"itboyst/ArcSoftFaceDemo" -> "jastar-wang/arcface"
"itboyst/ArcSoftFaceDemo" -> "itboyst/ArcSoftFaceFrameDemo"
"itboyst/ArcSoftFaceDemo" -> "asdfqwrasdf/ArcFaceDemo"
"itboyst/ArcSoftFaceDemo" -> "jamesluozhiwei/seetafaceJNI"
"itboyst/ArcSoftFaceDemo" -> "itboyst/ArcSoftFaceDemoUI"
"itboyst/ArcSoftFaceDemo" -> "seetaface/SeetaFaceEngine2"
"zweigraf/face-landmarking-ios" -> "FaceAR/OpenFaceIOS"
"zweigraf/face-landmarking-ios" -> "tzutalin/dlib-android-app"
"zweigraf/face-landmarking-ios" -> "DroidsOnRoids/VisionFaceDetection"
"zweigraf/face-landmarking-ios" -> "YuAo/Vivid" ["e"=1]
"zweigraf/face-landmarking-ios" -> "tzutalin/dlib-android"
"zweigraf/face-landmarking-ios" -> "mattlawer/FaceLandmarksDetection"
"zweigraf/face-landmarking-ios" -> "Weijay/AppleFaceDetection"
"zweigraf/face-landmarking-ios" -> "cheind/dest"
"zweigraf/face-landmarking-ios" -> "gicheonkang/fast_face_android"
"zweigraf/face-landmarking-ios" -> "RoboPai/sdm"
"zweigraf/face-landmarking-ios" -> "metal-by-example/sample-code" ["e"=1]
"zweigraf/face-landmarking-ios" -> "remirobert/Facemotion"
"spmallick/dlib" -> "spmallick/learnopencv" ["e"=1]
"spmallick/dlib" -> "lincolnhard/head-pose-estimation"
"spmallick/dlib" -> "FaceAR/OpenFaceIOS"
"spmallick/dlib" -> "guozhongluo/head-pose-estimation-and-face-landmark"
"spmallick/dlib" -> "zweigraf/face-landmarking-ios"
"spmallick/dlib" -> "yinguobing/head-pose-estimation"
"spmallick/dlib" -> "opencv/open_model_zoo" ["e"=1]
"spmallick/dlib" -> "mpatacchiola/deepgaze"
"spmallick/dlib" -> "davheld/GOTURN" ["e"=1]
"spmallick/dlib" -> "Santhosh-KS/spookfish"
"spmallick/dlib" -> "hrastnik/face_detect_n_track"
"spmallick/dlib" -> "jrosebr1/imutils" ["e"=1]
"spmallick/dlib" -> "spmallick/opencv-haar-classifier-training"
"spmallick/dlib" -> "qiexing/face-landmark-localization"
"spmallick/dlib" -> "llSourcell/YOLO_Object_Detection" ["e"=1]
"YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "YonghaoHe/LFD-A-Light-and-Fast-Detector"
"YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "becauseofAI/lffd-pytorch"
"YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "gm19900510/Pytorch_Retina_License_Plate" ["e"=1]
"ZhaoJ9014/face.evoLVe.PyTorch" -> "TreB1eN/InsightFace_Pytorch"
"ZhaoJ9014/face.evoLVe.PyTorch" -> "ChanChiChoi/awesome-Face_Recognition" ["e"=1]
"ZhaoJ9014/face.evoLVe.PyTorch" -> "deepinsight/insightface" ["e"=1]
"ZhaoJ9014/face.evoLVe.PyTorch" -> "wujiyang/Face_Pytorch"
"ZhaoJ9014/face.evoLVe.PyTorch" -> "TencentYoutuResearch/FaceDetection-DSFD" ["e"=1]
"ZhaoJ9014/face.evoLVe.PyTorch" -> "biubug6/Pytorch_Retinaface"
"ZhaoJ9014/face.evoLVe.PyTorch" -> "ronghuaiyang/arcface-pytorch"
"ZhaoJ9014/face.evoLVe.PyTorch" -> "JDAI-CV/FaceX-Zoo"
"ZhaoJ9014/face.evoLVe.PyTorch" -> "wy1iu/sphereface"
"ZhaoJ9014/face.evoLVe.PyTorch" -> "ZhaoJ9014/High-Performance-Face-Recognition" ["e"=1]
"ZhaoJ9014/face.evoLVe.PyTorch" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019"
"ZhaoJ9014/face.evoLVe.PyTorch" -> "cleardusk/3DDFA" ["e"=1]
"ZhaoJ9014/face.evoLVe.PyTorch" -> "timesler/facenet-pytorch" ["e"=1]
"ZhaoJ9014/face.evoLVe.PyTorch" -> "biubug6/Face-Detector-1MB-with-landmark"
"ZhaoJ9014/face.evoLVe.PyTorch" -> "becauseofAI/MobileFace" ["e"=1]
"dlunion/CaffeLSTM-OCR" -> "dlunion/CCDL"
"dlunion/CaffeLSTM-OCR" -> "dlunion/CC4.0"
"dlunion/CaffeLSTM-OCR" -> "dlunion/CC5.0"
"dlunion/CaffeLSTM-OCR" -> "senlinuc/caffe_ocr" ["e"=1]
"dlunion/CaffeLSTM-OCR" -> "dlunion/EasyOpenPose"
"dlunion/CaffeLSTM-OCR" -> "kasyoukin/caffe_ocr_for_linux"
"dlunion/CaffeLSTM-OCR" -> "xmfbit/warpctc-caffe"
"dlunion/CaffeLSTM-OCR" -> "yalecyu/crnn.caffe"
"dlunion/CaffeLSTM-OCR" -> "warrentdrew/Caffe_SSD_LSTM_LPR"
"LukeAllen/optimeyes" -> "esdalmaijer/webcam-eyetracker"
"rockchip-linux/rknn-toolkit" -> "rockchip-linux/rknpu"
"rockchip-linux/rknn-toolkit" -> "rockchip-linux/rknn-toolkit2"
"rockchip-linux/rknn-toolkit" -> "EASY-EAI/yolov5"
"rockchip-linux/rknn-toolkit" -> "airockchip/rknn_model_zoo"
"rockchip-linux/rknn-toolkit" -> "rockchip-linux/rknpu2"
"rockchip-linux/rknn-toolkit" -> "littledeep/YOLOv5-RK3399Pro"
"rockchip-linux/rknn-toolkit" -> "rockchip-linux/RKNPUTools"
"rockchip-linux/rknn-toolkit" -> "airockchip/yolov5"
"rockchip-linux/rknn-toolkit" -> "Zhou-sx/yolov5_Deepsort_rknn"
"rockchip-linux/rknn-toolkit" -> "biubug6/Face-Detector-1MB-with-landmark"
"rockchip-linux/rknn-toolkit" -> "hanson-young/nniefacelib"
"rockchip-linux/rknn-toolkit" -> "xiangweizeng/mobile-lpr" ["e"=1]
"rockchip-linux/rknn-toolkit" -> "soloIife/yolov5_for_rknn"
"rockchip-linux/rknn-toolkit" -> "deepcam-cn/yolov5-face" ["e"=1]
"rockchip-linux/rknn-toolkit" -> "airockchip/librga"
"rockchip-linux/rknn-toolkit2" -> "rockchip-linux/rknpu2"
"rockchip-linux/rknn-toolkit2" -> "airockchip/rknn_model_zoo"
"rockchip-linux/rknn-toolkit2" -> "rockchip-linux/rknn-toolkit"
"rockchip-linux/rknn-toolkit2" -> "EASY-EAI/yolov5"
"rockchip-linux/rknn-toolkit2" -> "Zhou-sx/yolov5_Deepsort_rknn"
"rockchip-linux/rknn-toolkit2" -> "rockchip-linux/rknpu"
"rockchip-linux/rknn-toolkit2" -> "airockchip/librga"
"rockchip-linux/rknpu2" -> "rockchip-linux/rknn-toolkit2"
"rockchip-linux/rknpu2" -> "airockchip/rknn_model_zoo"
"rockchip-linux/rknpu2" -> "airockchip/librga"
"rockchip-linux/rknpu2" -> "Zhou-sx/yolov5_Deepsort_rknn"
"rockchip-linux/rknpu2" -> "rockchip-linux/rknn-toolkit"
"rockchip-linux/rknpu2" -> "rockchip-linux/rknpu"
"rockchip-linux/rknpu2" -> "EASY-EAI/yolov5"
"ydwen/caffe-face" -> "kpzhang93/MTCNN_face_detection_alignment" ["e"=1]
"ydwen/caffe-face" -> "wy1iu/sphereface"
"ydwen/caffe-face" -> "AlfredXiangWu/face_verification_experiment"
"ydwen/caffe-face" -> "happynear/NormFace"
"ydwen/caffe-face" -> "happynear/FaceVerification"
"ydwen/caffe-face" -> "happynear/MTCNN_face_detection_alignment"
"ydwen/caffe-face" -> "Seanlinx/mtcnn"
"ydwen/caffe-face" -> "CongWeilin/mtcnn-caffe"
"ydwen/caffe-face" -> "RiweiChen/DeepFace"
"ydwen/caffe-face" -> "foreverYoungGitHub/MTCNN"
"ydwen/caffe-face" -> "dlunion/mtcnn"
"ydwen/caffe-face" -> "betars/Face-Resources"
"ydwen/caffe-face" -> "happynear/AMSoftmax"
"ydwen/caffe-face" -> "soeaver/caffe-model" ["e"=1]
"ydwen/caffe-face" -> "AlphaQi/MTCNN-light"
"Linzaer/Face-Track-Detect-Extract" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"Linzaer/Face-Track-Detect-Extract" -> "ZidanMusk/experimenting-with-sort" ["e"=1]
"Linzaer/Face-Track-Detect-Extract" -> "pyannote/pyannote-video" ["e"=1]
"Linzaer/Face-Track-Detect-Extract" -> "zuoqing1988/ZQCNN-v0.0"
"Linzaer/Face-Track-Detect-Extract" -> "Star-Clouds/CenterFace"
"Linzaer/Face-Track-Detect-Extract" -> "dlunion/mtcnn"
"Linzaer/Face-Track-Detect-Extract" -> "biubug6/Face-Detector-1MB-with-landmark"
"Linzaer/Face-Track-Detect-Extract" -> "szad670401/Fast-MTCNN"
"Linzaer/Face-Track-Detect-Extract" -> "bleakie/MaskInsightface"
"Linzaer/Face-Track-Detect-Extract" -> "clancylian/retinaface"
"Linzaer/Face-Track-Detect-Extract" -> "guoqiangqi/PFLD"
"Linzaer/Face-Track-Detect-Extract" -> "becauseofAI/MobileFace" ["e"=1]
"Linzaer/Face-Track-Detect-Extract" -> "becauseofAI/lffd-pytorch"
"Linzaer/Face-Track-Detect-Extract" -> "Charrin/RetinaFace-Cpp"
"Linzaer/Face-Track-Detect-Extract" -> "olojuwin/facerecognize-for-mobile-phone"
"rockchip-linux/kernel" -> "rockchip-linux/u-boot"
"rockchip-linux/kernel" -> "rockchip-linux/docs"
"rockchip-linux/kernel" -> "rockchip-linux/libmali"
"rockchip-linux/kernel" -> "rockchip-linux/rkbin"
"rockchip-linux/kernel" -> "rockchip-linux/mpp"
"rockchip-linux/kernel" -> "friendlyarm/kernel-rockchip"
"rockchip-linux/kernel" -> "rockchip-linux/rk-rootfs-build"
"rockchip-linux/kernel" -> "rockchip-linux/buildroot"
"rockchip-linux/kernel" -> "FireflyTeam/kernel"
"rockchip-linux/kernel" -> "linux-rockchip/linux-rockchip"
"rockchip-linux/kernel" -> "rockchip-linux/gstreamer-rockchip"
"rockchip-linux/kernel" -> "rockchip-linux/tools"
"rockchip-linux/kernel" -> "ayufan-rock64/linux-kernel"
"rockchip-linux/kernel" -> "rockchip-linux/rkdeveloptool"
"rockchip-linux/kernel" -> "radxa/kernel"
"rockchip-linux/rkbin" -> "rockchip-linux/u-boot"
"rockchip-linux/rkbin" -> "rockchip-linux/rkdeveloptool"
"rockchip-linux/rkbin" -> "xboot/xrock"
"rockchip-linux/rkbin" -> "rockchip-linux/rk-rootfs-build"
"rockchip-linux/rkbin" -> "rockchip-linux/tools"
"trishume/eyeLike" -> "pupil-labs/pupil"
"trishume/eyeLike" -> "esdalmaijer/webcam-eyetracker"
"trishume/eyeLike" -> "CSAILVision/GazeCapture"
"trishume/eyeLike" -> "esdalmaijer/PyGaze"
"trishume/eyeLike" -> "elucideye/drishti"
"trishume/eyeLike" -> "antoinelame/GazeTracking"
"trishume/eyeLike" -> "opengazer/OpenGazer"
"trishume/eyeLike" -> "iitmcvg/eye-gaze"
"trishume/eyeLike" -> "errollw/EyeTab"
"trishume/eyeLike" -> "YutaItoh/3D-Eye-Tracker"
"trishume/eyeLike" -> "eyetrackingDB/GazeTrackingFramework"
"trishume/eyeLike" -> "stepacool/Eye-Tracker"
"trishume/eyeLike" -> "kylemcdonald/FaceTracker"
"trishume/eyeLike" -> "TadasBaltrusaitis/CLM-framework"
"trishume/eyeLike" -> "patrikhuber/4dface" ["e"=1]
"DeepBCI/Deep-BCI" -> "PatternRecognition/OpenBMI"
"DeepBCI/Deep-BCI" -> "wjNam/Relative_Attributing_Propagation"
"DeepBCI/Deep-BCI" -> "OpenXAIProject/LRP-EEG"
"DeepBCI/Deep-BCI" -> "vlawhern/arl-eegmodels" ["e"=1]
"DeepBCI/Deep-BCI" -> "OpenXAIProject/Lung-cancer"
"DeepBCI/Deep-BCI" -> "NeuroTechX/moabb" ["e"=1]
"DeepBCI/Deep-BCI" -> "OpenXAIProject/Diagnosis-of-Alzheimers-Disease"
"DeepBCI/Deep-BCI" -> "OpenXAIProject/Tutorials"
"DeepBCI/Deep-BCI" -> "kylemath/DeepEEG" ["e"=1]
"DeepBCI/Deep-BCI" -> "SuperBruceJia/EEG-DL" ["e"=1]
"DeepBCI/Deep-BCI" -> "braindecode/braindecode" ["e"=1]
"DeepBCI/Deep-BCI" -> "emmanuelkalunga/Online-SSVEP"
"DeepBCI/Deep-BCI" -> "pbashivan/EEGLearn" ["e"=1]
"DeepBCI/Deep-BCI" -> "zhangks98/eeg-adapt"
"nikk-nikaznan/SSVEP-Neural-Generative-Models" -> "osmanberke/Deep-SSVEP-BCI"
"osmanberke/Deep-SSVEP-BCI" -> "edwin465/SSVEP-MSCCA-MSTRCA"
"osmanberke/Deep-SSVEP-BCI" -> "jinglescode/ssvep-multi-task-learning"
"osmanberke/Deep-SSVEP-BCI" -> "nikk-nikaznan/SSVEP-Neural-Generative-Models"
"AlphaQi/MTCNN-light" -> "dlunion/mtcnn"
"AlphaQi/MTCNN-light" -> "foreverYoungGitHub/MTCNN"
"AlphaQi/MTCNN-light" -> "moli232777144/mtcnn_ncnn"
"AlphaQi/MTCNN-light" -> "happynear/MTCNN_face_detection_alignment"
"AlphaQi/MTCNN-light" -> "Seanlinx/mtcnn"
"AlphaQi/MTCNN-light" -> "zeusees/FaceBoxes"
"AlphaQi/MTCNN-light" -> "CongWeilin/mtcnn-caffe"
"AlphaQi/MTCNN-light" -> "ydwen/caffe-face"
"AlphaQi/MTCNN-light" -> "ElegantGod/ncnn"
"AlphaQi/MTCNN-light" -> "DaFuCoding/MTCNN_Caffe"
"AlphaQi/MTCNN-light" -> "imistyrain/MTCNN"
"AlphaQi/MTCNN-light" -> "luoyetx/mini-caffe"
"AlphaQi/MTCNN-light" -> "blankWorld/MTCNN-Accelerate-Onet"
"AlphaQi/MTCNN-light" -> "mahyarnajibi/SSH"
"AlphaQi/MTCNN-light" -> "szad670401/Fast-MTCNN"
"szad670401/Fast-MTCNN" -> "imistyrain/MTCNN"
"szad670401/Fast-MTCNN" -> "KaleidoZhouYN/e2e-joint-face-detection-and-alignment"
"szad670401/Fast-MTCNN" -> "blankWorld/MTCNN-Accelerate-Onet"
"szad670401/Fast-MTCNN" -> "zeusees/FaceBoxes"
"szad670401/Fast-MTCNN" -> "zuoqing1988/ZQCNN-v0.0"
"szad670401/Fast-MTCNN" -> "deepinsight/mtcnn-ncnn"
"szad670401/Fast-MTCNN" -> "zhanglaplace/3000fps-mtcnn"
"szad670401/Fast-MTCNN" -> "dlunion/mtcnn"
"szad670401/Fast-MTCNN" -> "zuoqing1988/train-mtcnn"
"szad670401/Fast-MTCNN" -> "moli232777144/mtcnn_ncnn"
"szad670401/Fast-MTCNN" -> "AlphaQi/MTCNN-light"
"vincentwei0919/insightface_for_face_recognition" -> "vincentwei0919/crawler"
"vincentwei0919/insightface_for_face_recognition" -> "friedhelm739/Insightface-tensorflow"
"vincentwei0919/insightface_for_face_recognition" -> "luckycallor/InsightFace-tensorflow"
"gqjjqg/android-extend" -> "asdfqwrasdf/ArcFaceDemo"
"lsy17096535/face-landmark" -> "zeusees/HyperLandmark"
"lsy17096535/face-landmark" -> "chengzhengxin/sdm"
"lsy17096535/face-landmark" -> "qiexing/face-landmark-localization"
"lsy17096535/face-landmark" -> "dlunion/mtcnn"
"lsy17096535/face-landmark" -> "CongWeilin/mtcnn-caffe"
"lsy17096535/face-landmark" -> "ElegantGod/ncnn"
"lsy17096535/face-landmark" -> "zeusees/FaceBoxes"
"lsy17096535/face-landmark" -> "moli232777144/mtcnn_ncnn"
"lsy17096535/face-landmark" -> "blankWorld/MTCNN-Accelerate-Onet"
"lsy17096535/face-landmark" -> "wywu/LAB"
"lsy17096535/face-landmark" -> "Seanlinx/mtcnn"
"lsy17096535/face-landmark" -> "lsy17096535/faceboxes"
"lsy17096535/face-landmark" -> "MarekKowalski/DeepAlignmentNetwork"
"lsy17096535/face-landmark" -> "guozhongluo/head-pose-estimation-and-face-landmark"
"lsy17096535/face-landmark" -> "zhzhanp/TCDCN-face-alignment"
"moli232777144/mtcnn_ncnn" -> "ElegantGod/ncnn"
"moli232777144/mtcnn_ncnn" -> "dlunion/mtcnn"
"moli232777144/mtcnn_ncnn" -> "moli232777144/mobilefacenet-mxnet"
"moli232777144/mtcnn_ncnn" -> "Longqi-S/ncnn-mtcnn"
"moli232777144/mtcnn_ncnn" -> "CongWeilin/mtcnn-caffe"
"moli232777144/mtcnn_ncnn" -> "honghuCode/mobileFacenet-ncnn"
"moli232777144/mtcnn_ncnn" -> "AlphaQi/MTCNN-light"
"moli232777144/mtcnn_ncnn" -> "imistyrain/MTCNN"
"moli232777144/mtcnn_ncnn" -> "Seanlinx/mtcnn"
"moli232777144/mtcnn_ncnn" -> "lsy17096535/face-landmark"
"moli232777144/mtcnn_ncnn" -> "olojuwin/facerecognize-for-mobile-phone"
"moli232777144/mtcnn_ncnn" -> "starimeL/PytorchConverter" ["e"=1]
"moli232777144/mtcnn_ncnn" -> "MirrorYuChen/ncnn_example"
"moli232777144/mtcnn_ncnn" -> "cpuimage/MTCNN"
"moli232777144/mtcnn_ncnn" -> "foreverYoungGitHub/MTCNN"
"tzutalin/dlib-android" -> "tzutalin/dlib-android-app"
"tzutalin/dlib-android" -> "gicheonkang/fast-face-android"
"tzutalin/dlib-android" -> "gv22ga/dlib-face-recognition-android"
"tzutalin/dlib-android" -> "TadasBaltrusaitis/CLM-framework"
"tzutalin/dlib-android" -> "gicheonkang/Fast-Face-android"
"tzutalin/dlib-android" -> "SimonCherryGZ/face-landmark-android"
"tzutalin/dlib-android" -> "Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework"
"tzutalin/dlib-android" -> "zweigraf/face-landmarking-ios"
"tzutalin/dlib-android" -> "sh1r0/caffe-android-lib"
"tzutalin/dlib-android" -> "zeusees/HyperLandmark"
"tzutalin/dlib-android" -> "miaoerduo/dlib-face-landmark-compression"
"tzutalin/dlib-android" -> "Qualeams/Android-Face-Recognition-with-Deep-Learning-Library"
"tzutalin/dlib-android" -> "yulequan/face-alignment-in-3000fps"
"tzutalin/dlib-android" -> "davisking/dlib-models" ["e"=1]
"tzutalin/dlib-android" -> "Li-Shang/faceCapture"
"tzutalin/dlib-android-app" -> "tzutalin/dlib-android"
"tzutalin/dlib-android-app" -> "gicheonkang/fast-face-android"
"tzutalin/dlib-android-app" -> "gv22ga/dlib-face-recognition-android"
"tzutalin/dlib-android-app" -> "SimonCherryGZ/face-landmark-android"
"tzutalin/dlib-android-app" -> "Li-Shang/faceCapture"
"tzutalin/dlib-android-app" -> "zweigraf/face-landmarking-ios"
"tzutalin/dlib-android-app" -> "gicheonkang/fast_face_android"
"tzutalin/dlib-android-app" -> "tunaemre/Face-Swap-Android"
"tzutalin/dlib-android-app" -> "zeusees/HyperLandmark"
"tzutalin/dlib-android-app" -> "Qualeams/Android-Face-Recognition-with-Deep-Learning-Library"
"tzutalin/dlib-android-app" -> "wysaid/android-gpuimage-plus" ["e"=1]
"tzutalin/dlib-android-app" -> "zeusees/Zeusee-Face-Anti-spoofing"
"tzutalin/dlib-android-app" -> "kongqw/OpenCVForAndroid"
"tzutalin/dlib-android-app" -> "FaceAR/OpenFaceIOS"
"tzutalin/dlib-android-app" -> "Fotoapparat/FaceDetector" ["e"=1]
"xiangdeyizhang/FaceTrack_ncnn_HyperFT" -> "qaz734913414/Ncnn_FaceTrack"
"xiangdeyizhang/FaceTrack_ncnn_HyperFT" -> "zeusees/HyperFT"
"zeusees/HyperFT" -> "qaz734913414/Ncnn_FaceTrack"
"zeusees/HyperFT" -> "xiangdeyizhang/FaceTrack_ncnn_HyperFT"
"zeusees/HyperFT" -> "zeusees/HyperLandmark"
"zeusees/HyperFT" -> "moli232777144/mtcnn_ncnn"
"zeusees/HyperFT" -> "HandsomeHans/Face-Tracking-Based-on-OpenTLD-and-RNet"
"zeusees/HyperFT" -> "zeusees/Zeusee-Face-Anti-spoofing"
"zeusees/HyperFT" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"zeusees/HyperFT" -> "zeusees/HyperLabelImg" ["e"=1]
"zeusees/HyperFT" -> "bleakie/MaskInsightface"
"zeusees/HyperFT" -> "ElegantGod/ncnn"
"zeusees/HyperFT" -> "MirrorYuChen/ncnn_example"
"zeusees/HyperFT" -> "hanson-young/nniefacelib"
"zeusees/HyperFT" -> "MirrorYuChen/ncnn_106landmarks"
"zeusees/HyperFT" -> "lsy17096535/face-landmark"
"zeusees/HyperFT" -> "imistyrain/MTCNN"
"bjj9/EVE_SCPT" -> "VIPL-TAL-GAZE/GAZE2021"
"cunjian/pytorch_face_landmark" -> "polarisZhao/PFLD-pytorch"
"cunjian/pytorch_face_landmark" -> "HRNet/HRNet-Facial-Landmark-Detection"
"cunjian/pytorch_face_landmark" -> "D-X-Y/landmark-detection"
"cunjian/pytorch_face_landmark" -> "guoqiangqi/PFLD"
"cunjian/pytorch_face_landmark" -> "github-luffy/PFLD_68points_Pytorch"
"cunjian/pytorch_face_landmark" -> "ainrichman/Peppa-Facial-Landmark-PyTorch"
"cunjian/pytorch_face_landmark" -> "Hsintao/pfld_106_face_landmarks"
"cunjian/pytorch_face_landmark" -> "biubug6/Face-Detector-1MB-with-landmark"
"cunjian/pytorch_face_landmark" -> "protossw512/AdaptiveWingLoss"
"cunjian/pytorch_face_landmark" -> "610265158/Peppa_Pig_Face_Engine"
"cunjian/pytorch_face_landmark" -> "thepowerfuldeez/facemesh.pytorch"
"cunjian/pytorch_face_landmark" -> "wywu/LAB"
"cunjian/pytorch_face_landmark" -> "WIKI2020/FacePose_pytorch"
"cunjian/pytorch_face_landmark" -> "biubug6/Pytorch_Retinaface"
"cunjian/pytorch_face_landmark" -> "Star-Clouds/CenterFace"
"swook/EVE" -> "xucong-zhang/ETH-XGaze"
"swook/EVE" -> "swook/faze_preprocess"
"ZZUTK/Face-Aging-CAAE" -> "dawei6875797/Face-Aging-with-Identity-Preserved-Conditional-Generative-Adversarial-Networks"
"ZZUTK/Face-Aging-CAAE" -> "mattans/AgeProgression"
"ZZUTK/Face-Aging-CAAE" -> "jiechen2358/FaceAging-by-cycleGAN"
"ZZUTK/Face-Aging-CAAE" -> "yoyohonyang/LearingFaceAgeProgression"
"ZZUTK/Face-Aging-CAAE" -> "Jooong/Face-Aging-CAAE-Pytorch"
"ZZUTK/Face-Aging-CAAE" -> "ajithvallabai/Pyramid-Architecture-of-GANs"
"ZZUTK/Face-Aging-CAAE" -> "guyuchao/IPCGANs-Pytorch"
"ZZUTK/Face-Aging-CAAE" -> "InterDigitalInc/HRFAE"
"ZZUTK/Face-Aging-CAAE" -> "Prinsphield/ELEGANT" ["e"=1]
"ZZUTK/Face-Aging-CAAE" -> "BoyuanJiang/Age-Gender-Estimate-TF"
"ZZUTK/Face-Aging-CAAE" -> "yu4u/age-gender-estimation"
"ZZUTK/Face-Aging-CAAE" -> "mrgloom/Face-Swap" ["e"=1]
"ZZUTK/Face-Aging-CAAE" -> "dpressel/rude-carnie"
"ZZUTK/Face-Aging-CAAE" -> "HRLTY/TP-GAN" ["e"=1]
"ZZUTK/Face-Aging-CAAE" -> "LynnHo/AttGAN-Tensorflow" ["e"=1]
"jibikbam/CNN-3D-images-Tensorflow" -> "neuro-ml/resnet_cnn_mri_adni"
"jibikbam/CNN-3D-images-Tensorflow" -> "ehosseiniasl/3d-convolutional-network"
"jibikbam/CNN-3D-images-Tensorflow" -> "josedolz/LiviaNET" ["e"=1]
"jibikbam/CNN-3D-images-Tensorflow" -> "kcct-fujimotolab/3DCNN" ["e"=1]
"jibikbam/CNN-3D-images-Tensorflow" -> "JihongJu/keras-resnet3d" ["e"=1]
"jibikbam/CNN-3D-images-Tensorflow" -> "yukitsuji/3D_CNN_tensorflow" ["e"=1]
"jibikbam/CNN-3D-images-Tensorflow" -> "liqi814/Deep-3D-CNNs-for-MRI-Classification-with-Alzheimer-s-Disease-And-Grad-CAM-Visualization"
"jibikbam/CNN-3D-images-Tensorflow" -> "wangyirui/AD_Prediction"
"jibikbam/CNN-3D-images-Tensorflow" -> "hasibzunair/3D-image-classification-tutorial"
"jibikbam/CNN-3D-images-Tensorflow" -> "himanshub1007/Alzhimers-Disease-Prediction-Using-Deep-learning"
"neuro-ml/resnet_cnn_mri_adni" -> "west-gates/3DCNN-Vis"
"neuro-ml/resnet_cnn_mri_adni" -> "ehosseiniasl/3d-convolutional-network"
"neuro-ml/resnet_cnn_mri_adni" -> "regnerus/keras-alzheimers-3d-conv"
"neuro-ml/resnet_cnn_mri_adni" -> "jibikbam/CNN-3D-images-Tensorflow"
"neuro-ml/resnet_cnn_mri_adni" -> "aramis-lab/AD-DL"
"neuro-ml/resnet_cnn_mri_adni" -> "bbanddd/ADDL"
"neuro-ml/resnet_cnn_mri_adni" -> "wangyirui/AD_Prediction"
"Spidy20/face_mask_detection" -> "prajnasb/observations"
"Spidy20/face_mask_detection" -> "chandrikadeb7/Face-Mask-Detection"
"Spidy20/face_mask_detection" -> "mk-gurucharan/Face-Mask-Detection"
"Spidy20/face_mask_detection" -> "mmphego/face_mask_detection_openvino"
"seathiefwang/FaceRecognition-tensorflow" -> "jerry1900/faceRecognition"
"seathiefwang/FaceRecognition-tensorflow" -> "coneypo/Dlib_face_recognition_from_camera"
"seathiefwang/FaceRecognition-tensorflow" -> "kuaikuaikim/DFace"
"seathiefwang/FaceRecognition-tensorflow" -> "bystc/FaceRecognition"
"seathiefwang/FaceRecognition-tensorflow" -> "shanren7/real_time_face_recognition"
"seathiefwang/FaceRecognition-tensorflow" -> "WindZu/facenet_facerecognition"
"seathiefwang/FaceRecognition-tensorflow" -> "kongqw/OpenCVForAndroid"
"seathiefwang/FaceRecognition-tensorflow" -> "vipstone/faceai" ["e"=1]
"seathiefwang/FaceRecognition-tensorflow" -> "winterssy/face_recognition_py"
"seathiefwang/FaceRecognition-tensorflow" -> "chenlinzhong/face-login"
"seathiefwang/FaceRecognition-tensorflow" -> "davidsandberg/facenet" ["e"=1]
"seathiefwang/FaceRecognition-tensorflow" -> "yeziyang1992/Python-Tensorflow-Face-v2.0"
"seathiefwang/FaceRecognition-tensorflow" -> "kpzhang93/MTCNN_face_detection_alignment" ["e"=1]
"seathiefwang/FaceRecognition-tensorflow" -> "fuzheng0301/FaceRecognition" ["e"=1]
"seathiefwang/FaceRecognition-tensorflow" -> "boyliwensheng/understand_facenet"
"cydonia999/VGGFace2-pytorch" -> "ox-vgg/vgg_face2"
"cydonia999/VGGFace2-pytorch" -> "TropComplique/mtcnn-pytorch"
"cydonia999/VGGFace2-pytorch" -> "prlz77/vgg-face.pytorch"
"cydonia999/VGGFace2-pytorch" -> "AruniRC/resnet-face-pytorch"
"cydonia999/VGGFace2-pytorch" -> "rcmalli/keras-vggface"
"cydonia999/VGGFace2-pytorch" -> "AlfredXiangWu/LightCNN"
"cydonia999/VGGFace2-pytorch" -> "EvelynFan/AWESOME-FER" ["e"=1]
"cydonia999/VGGFace2-pytorch" -> "clcarwin/sphereface_pytorch"
"cydonia999/VGGFace2-pytorch" -> "timesler/facenet-pytorch" ["e"=1]
"cydonia999/VGGFace2-pytorch" -> "yu4u/age-estimation-pytorch"
"cydonia999/VGGFace2-pytorch" -> "TreB1eN/InsightFace_Pytorch"
"cydonia999/VGGFace2-pytorch" -> "FFZhang1231/Facial-expression-recognition" ["e"=1]
"cydonia999/VGGFace2-pytorch" -> "ZhaoJ9014/High-Performance-Face-Recognition" ["e"=1]
"cydonia999/VGGFace2-pytorch" -> "ronghuaiyang/arcface-pytorch"
"cydonia999/VGGFace2-pytorch" -> "zllrunning/face-parsing.PyTorch" ["e"=1]
"natanielruiz/deep-head-pose" -> "yinguobing/head-pose-estimation"
"natanielruiz/deep-head-pose" -> "shamangary/FSA-Net"
"natanielruiz/deep-head-pose" -> "OverEuro/deep-head-pose-lite"
"natanielruiz/deep-head-pose" -> "mpatacchiola/deepgaze"
"natanielruiz/deep-head-pose" -> "lincolnhard/head-pose-estimation"
"natanielruiz/deep-head-pose" -> "guoqiangqi/PFLD"
"natanielruiz/deep-head-pose" -> "Ascend-Research/HeadPoseEstimation-WHENet"
"natanielruiz/deep-head-pose" -> "cleardusk/3DDFA" ["e"=1]
"natanielruiz/deep-head-pose" -> "biubug6/Pytorch_Retinaface"
"natanielruiz/deep-head-pose" -> "vitoralbiero/img2pose"
"natanielruiz/deep-head-pose" -> "fengju514/Face-Pose-Net" ["e"=1]
"natanielruiz/deep-head-pose" -> "guozhongluo/head-pose-estimation-and-face-landmark"
"natanielruiz/deep-head-pose" -> "swook/GazeML"
"natanielruiz/deep-head-pose" -> "wywu/LAB"
"natanielruiz/deep-head-pose" -> "haofanwang/accurate-head-pose"
"dlunion/CCDL" -> "dlunion/mtcnn"
"dlunion/CCDL" -> "dlunion/CC4.0"
"dlunion/CCDL" -> "dlunion/CaffeLSTM-OCR"
"dlunion/CCDL" -> "dlunion/CC5.0"
"dlunion/CCDL" -> "blankWorld/MTCNN-Accelerate-Onet"
"huihut/Facemoji" -> "utibenkei/DlibFaceLandmarkDetectorWithLive2DSample"
"huihut/Facemoji" -> "EnoxSoftware/DlibFaceLandmarkDetector" ["e"=1]
"huihut/Facemoji" -> "Li-Shang/faceCapture"
"huihut/Facemoji" -> "HosniMansour/Unity3DFaceTtracking" ["e"=1]
"huihut/Facemoji" -> "EnoxSoftware/CVVTuberExample" ["e"=1]
"huihut/Facemoji" -> "huailiang/face-nn" ["e"=1]
"pupil-labs/hmd-eyes" -> "pupil-labs/pupil-docs"
"pupil-labs/pupil" -> "esdalmaijer/PyGaze"
"pupil-labs/pupil" -> "trishume/eyeLike"
"pupil-labs/pupil" -> "CSAILVision/GazeCapture"
"pupil-labs/pupil" -> "antoinelame/GazeTracking"
"pupil-labs/pupil" -> "pupil-labs/hmd-eyes"
"pupil-labs/pupil" -> "YutaItoh/3D-Eye-Tracker"
"pupil-labs/pupil" -> "esdalmaijer/webcam-eyetracker"
"pupil-labs/pupil" -> "hugochan/Eye-Tracker"
"pupil-labs/pupil" -> "sccn/labstreaminglayer" ["e"=1]
"pupil-labs/pupil" -> "cvlab-uob/Awesome-Gaze-Estimation"
"pupil-labs/pupil" -> "swook/GazeML"
"pupil-labs/pupil" -> "stepacool/Eye-Tracker"
"pupil-labs/pupil" -> "pydsgz/DeepVOG"
"pupil-labs/pupil" -> "mpatacchiola/deepgaze"
"pupil-labs/pupil" -> "esdalmaijer/PyGazeAnalyser"
"1996scarlet/ArcFace-Multiplex-Recognition" -> "bleakie/MaskInsightface"
"1996scarlet/ArcFace-Multiplex-Recognition" -> "clancylian/retinaface"
"1996scarlet/ArcFace-Multiplex-Recognition" -> "biubug6/Face-Detector-1MB-with-landmark"
"1996scarlet/ArcFace-Multiplex-Recognition" -> "olojuwin/facerecognize-for-mobile-phone"
"1996scarlet/ArcFace-Multiplex-Recognition" -> "zma-c-137/VarGFaceNet"
"1996scarlet/ArcFace-Multiplex-Recognition" -> "WindZu/facenet_facerecognition"
"1996scarlet/ArcFace-Multiplex-Recognition" -> "becauseofAI/MobileFace" ["e"=1]
"1996scarlet/ArcFace-Multiplex-Recognition" -> "xialuxi/arcface-caffe"
"1996scarlet/ArcFace-Multiplex-Recognition" -> "supernotman/RetinaFace_Pytorch"
"1996scarlet/ArcFace-Multiplex-Recognition" -> "Charrin/RetinaFace-Cpp"
"1996scarlet/ArcFace-Multiplex-Recognition" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019"
"nyoki-mtl/keras-facenet" -> "iwantooxxoox/Keras-OpenFace"
"nyoki-mtl/keras-facenet" -> "rcmalli/keras-vggface"
"nyoki-mtl/keras-facenet" -> "foamliu/FaceNet"
"nyoki-mtl/keras-facenet" -> "krasserm/face-recognition"
"nyoki-mtl/keras-facenet" -> "serengil/tensorflow-101"
"nyoki-mtl/keras-facenet" -> "Skuldur/facenet-face-recognition"
"nyoki-mtl/keras-facenet" -> "ox-vgg/vgg_face2"
"nyoki-mtl/keras-facenet" -> "chen0040/keras-face"
"nyoki-mtl/keras-facenet" -> "peteryuX/arcface-tf2"
"nyoki-mtl/keras-facenet" -> "sainimohit23/FaceNet-Real-Time-face-recognition"
"nyoki-mtl/keras-facenet" -> "davidsandberg/facenet" ["e"=1]
"nyoki-mtl/keras-facenet" -> "ipazc/mtcnn" ["e"=1]
"nyoki-mtl/keras-facenet" -> "satinder147/Attendance-using-Face" ["e"=1]
"nyoki-mtl/keras-facenet" -> "ildoonet/deepface"
"nyoki-mtl/keras-facenet" -> "luckycallor/InsightFace-tensorflow"
"uvipen/Yolo-v2-pytorch" -> "tztztztztz/yolov2.pytorch"
"jacklightChen/Learn-Hyperledger-Fabric-Source-Code" -> "jacklightChen/merkle-bplus-tree"
"jacklightChen/Learn-Hyperledger-Fabric-Source-Code" -> "jacklightChen/klein"
"jacklightChen/disqus-proxy-serverless" -> "jacklightChen/klein"
"jacklightChen/disqus-proxy-serverless" -> "jacklightChen/merkle-bplus-tree"
"jacklightChen/disqus-proxy-serverless" -> "jacklightChen/Learn-Hyperledger-Fabric-Source-Code"
"jacklightChen/klein" -> "jacklightChen/merkle-bplus-tree"
"jacklightChen/klein" -> "jacklightChen/disqus-proxy-serverless"
"jacklightChen/klein" -> "jacklightChen/Learn-Hyperledger-Fabric-Source-Code"
"jacklightChen/merkle-bplus-tree" -> "jacklightChen/Learn-Hyperledger-Fabric-Source-Code"
"jacklightChen/merkle-bplus-tree" -> "jacklightChen/klein"
"KaiyangZhou/pytorch-center-loss" -> "jxgu1016/MNIST_center_loss_pytorch"
"KaiyangZhou/pytorch-center-loss" -> "louis-she/center-loss.pytorch"
"KaiyangZhou/pytorch-center-loss" -> "ronghuaiyang/arcface-pytorch"
"KaiyangZhou/pytorch-center-loss" -> "amirhfarzaneh/lsoftmax-pytorch"
"KaiyangZhou/pytorch-center-loss" -> "YirongMao/softmax_variants"
"KaiyangZhou/pytorch-center-loss" -> "clcarwin/sphereface_pytorch"
"KaiyangZhou/pytorch-center-loss" -> "Megvii-Nanjing/BBN" ["e"=1]
"KaiyangZhou/pytorch-center-loss" -> "adambielski/siamese-triplet" ["e"=1]
"KaiyangZhou/pytorch-center-loss" -> "cvqluu/Angular-Penalty-Softmax-Losses-Pytorch"
"KaiyangZhou/pytorch-center-loss" -> "tengshaofeng/ResidualAttentionNetwork-pytorch" ["e"=1]
"KaiyangZhou/pytorch-center-loss" -> "huanghoujing/person-reid-triplet-loss-baseline" ["e"=1]
"KaiyangZhou/pytorch-center-loss" -> "MuggleWang/CosFace_pytorch"
"KaiyangZhou/pytorch-center-loss" -> "Cysu/open-reid" ["e"=1]
"KaiyangZhou/pytorch-center-loss" -> "TinyZeaMays/CircleLoss" ["e"=1]
"KaiyangZhou/pytorch-center-loss" -> "vandit15/Class-balanced-loss-pytorch" ["e"=1]
"HuangYG123/CurricularFace" -> "cavalleria/cavaface.pytorch"
"HuangYG123/CurricularFace" -> "xiaoboCASIA/SV-X-Softmax"
"HuangYG123/CurricularFace" -> "IrvingMeng/MagFace"
"HuangYG123/CurricularFace" -> "Tencent/TFace"
"HuangYG123/CurricularFace" -> "cleardusk/MFR"
"HuangYG123/CurricularFace" -> "seasonSH/Probabilistic-Face-Embeddings"
"HuangYG123/CurricularFace" -> "wujiyang/Face_Pytorch"
"HuangYG123/CurricularFace" -> "JDAI-CV/FaceX-Zoo"
"HuangYG123/CurricularFace" -> "mk-minchul/AdaFace"
"HuangYG123/CurricularFace" -> "TreB1eN/InsightFace_Pytorch"
"HuangYG123/CurricularFace" -> "4uiiurz1/pytorch-adacos"
"HuangYG123/CurricularFace" -> "bleakie/MaskInsightface"
"HuangYG123/CurricularFace" -> "zma-c-137/VarGFaceNet"
"HuangYG123/CurricularFace" -> "fdbtrs/ElasticFace"
"HuangYG123/CurricularFace" -> "huangyangyu/NoiseFace"
"olojuwin/facerecognize-for-mobile-phone" -> "Star-Clouds/centerface"
"olojuwin/facerecognize-for-mobile-phone" -> "bleakie/MaskInsightface"
"olojuwin/facerecognize-for-mobile-phone" -> "zuoqing1988/ZQCNN-v0.0"
"olojuwin/facerecognize-for-mobile-phone" -> "zma-c-137/VarGFaceNet"
"olojuwin/facerecognize-for-mobile-phone" -> "Charrin/RetinaFace-Cpp"
"olojuwin/facerecognize-for-mobile-phone" -> "deepcam-cn/Face-Anti-spoofing.pytorch"
"olojuwin/facerecognize-for-mobile-phone" -> "zuoqing1988/train-mtcnn"
"olojuwin/facerecognize-for-mobile-phone" -> "moli232777144/mobilefacenet-mxnet"
"olojuwin/facerecognize-for-mobile-phone" -> "sciencefans/trojans-face-recognizer"
"olojuwin/facerecognize-for-mobile-phone" -> "JiajiongCao/CELEB-500K"
"olojuwin/facerecognize-for-mobile-phone" -> "KangKangLoveCat/insightface_ncnn"
"olojuwin/facerecognize-for-mobile-phone" -> "moli232777144/mtcnn_ncnn"
"olojuwin/facerecognize-for-mobile-phone" -> "xialuxi/arcface-caffe"
"olojuwin/facerecognize-for-mobile-phone" -> "SyGoing/LFFD-with-ncnn"
"olojuwin/facerecognize-for-mobile-phone" -> "szad670401/advanced-mxnet2caffe"
"zuoqing1988/ZQCNN-v0.0" -> "moli232777144/mobilefacenet-mxnet"
"zuoqing1988/ZQCNN-v0.0" -> "olojuwin/facerecognize-for-mobile-phone"
"zuoqing1988/ZQCNN-v0.0" -> "wy1iu/MHE"
"zuoqing1988/ZQCNN-v0.0" -> "sciencefans/RSA-for-object-detection"
"zuoqing1988/ZQCNN-v0.0" -> "GarrickLin/MXNet2Caffe"
"zuoqing1988/ZQCNN-v0.0" -> "ElegantGod/SSHA"
"zuoqing1988/ZQCNN-v0.0" -> "luoyetx/Joint-Face-Detection-and-Alignment"
"zuoqing1988/ZQCNN-v0.0" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"zuoqing1988/ZQCNN-v0.0" -> "walkoncross/prepare-faces-zyf"
"zuoqing1988/ZQCNN-v0.0" -> "xialuxi/arcface-caffe"
"zuoqing1988/ZQCNN-v0.0" -> "KaleidoZhouYN/Details-on-Face-Recognition"
"zuoqing1988/ZQCNN-v0.0" -> "bruinxiong/Modified-CRUNet-and-Residual-Attention-Network.mxnet"
"zuoqing1988/ZQCNN-v0.0" -> "KaleidoZhouYN/mobilefacenet-caffe"
"zuoqing1988/ZQCNN-v0.0" -> "liuziwei7/mobile-id"
"zuoqing1988/ZQCNN-v0.0" -> "zhanglaplace/MobileFaceNet"
"PanJinquan/Face_Detection_Recognition" -> "boyliwensheng/understand_facenet"
"PanJinquan/Face_Detection_Recognition" -> "LeslieZhoa/tensorflow-facenet"
"PanJinquan/Face_Detection_Recognition" -> "WindZu/facenet_facerecognition"
"PanJinquan/Face_Detection_Recognition" -> "chenlinzhong/face-login"
"PanJinquan/Face_Detection_Recognition" -> "LeslieZhoa/tensorflow-MTCNN"
"PanJinquan/Face_Detection_Recognition" -> "ninesky110/Real-time-face-recognition"
"PanJinquan/Face_Detection_Recognition" -> "foreverYoungGitHub/MTCNN"
"PanJinquan/Face_Detection_Recognition" -> "MrZhousf/tf_facenet"
"JDAI-CV/FaceX-Zoo" -> "Tencent/TFace"
"JDAI-CV/FaceX-Zoo" -> "IrvingMeng/MagFace"
"JDAI-CV/FaceX-Zoo" -> "X-zhangyang/Real-World-Masked-Face-Dataset"
"JDAI-CV/FaceX-Zoo" -> "biubug6/Pytorch_Retinaface"
"JDAI-CV/FaceX-Zoo" -> "ZhaoJ9014/face.evoLVe.PyTorch"
"JDAI-CV/FaceX-Zoo" -> "ZhaoJ9014/face.evoLVe"
"JDAI-CV/FaceX-Zoo" -> "HuangYG123/CurricularFace"
"JDAI-CV/FaceX-Zoo" -> "TreB1eN/InsightFace_Pytorch"
"JDAI-CV/FaceX-Zoo" -> "biubug6/Face-Detector-1MB-with-landmark"
"JDAI-CV/FaceX-Zoo" -> "aqeelanwar/MaskTheFace"
"JDAI-CV/FaceX-Zoo" -> "deepcam-cn/yolov5-face" ["e"=1]
"JDAI-CV/FaceX-Zoo" -> "minivision-ai/Silent-Face-Anti-Spoofing"
"JDAI-CV/FaceX-Zoo" -> "ChanChiChoi/awesome-Face_Recognition" ["e"=1]
"JDAI-CV/FaceX-Zoo" -> "cleardusk/3DDFA_V2" ["e"=1]
"JDAI-CV/FaceX-Zoo" -> "cavalleria/cavaface.pytorch"
"abeardear/pytorch-YOLO-v1" -> "yjh0410/new-YOLOv1_PyTorch"
"abeardear/pytorch-YOLO-v1" -> "motokimura/yolo_v1_pytorch"
"abeardear/pytorch-YOLO-v1" -> "DuanYiqun/pytorch_implementation_of_Yolov1"
"abeardear/pytorch-YOLO-v1" -> "lavendelion/YOLOv1-from-scratch"
"abeardear/pytorch-YOLO-v1" -> "yjh0410/yolov2-yolov3_PyTorch"
"abeardear/pytorch-YOLO-v1" -> "longcw/yolo2-pytorch" ["e"=1]
"abeardear/pytorch-YOLO-v1" -> "Tshzzz/pytorch_yolov1"
"abeardear/pytorch-YOLO-v1" -> "uvipen/Yolo-v2-pytorch"
"abeardear/pytorch-YOLO-v1" -> "yjh0410/PyTorch_YOLOv1"
"InterDigitalInc/HRFAE" -> "royorel/FFHQ-Aging-Dataset"
"InterDigitalInc/HRFAE" -> "yuval-alaluf/SAM" ["e"=1]
"InterDigitalInc/HRFAE" -> "dawei6875797/Face-Aging-with-Identity-Preserved-Conditional-Generative-Adversarial-Networks"
"InterDigitalInc/HRFAE" -> "guyuchao/IPCGANs-Pytorch"
"InterDigitalInc/HRFAE" -> "jiechen2358/FaceAging-by-cycleGAN"
"InterDigitalInc/HRFAE" -> "mattans/AgeProgression"
"InterDigitalInc/HRFAE" -> "royorel/Lifespan_Age_Transformation_Synthesis"
"InterDigitalInc/HRFAE" -> "genforce/interfacegan" ["e"=1]
"InterDigitalInc/HRFAE" -> "HasnainRaz/Fast-AgingGAN"
"InterDigitalInc/HRFAE" -> "Lotayou/Face-Renovation" ["e"=1]
"Sierkinhane/mtcnn-pytorch" -> "TropComplique/mtcnn-pytorch"
"Sierkinhane/mtcnn-pytorch" -> "kuaikuaikim/DFace"
"Sierkinhane/mtcnn-pytorch" -> "GitHberChen/MTCNN_Pytorch"
"Sierkinhane/mtcnn-pytorch" -> "wujiyang/MTCNN_TRAIN"
"Sierkinhane/mtcnn-pytorch" -> "polarisZhao/mtcnn-pytorch"
"Sierkinhane/mtcnn-pytorch" -> "faciallab/FaceDetector"
"Sierkinhane/mtcnn-pytorch" -> "beichen2012/mtcnn-pytorch"
"Sierkinhane/mtcnn-pytorch" -> "TreB1eN/InsightFace_Pytorch"
"Sierkinhane/mtcnn-pytorch" -> "biubug6/Face-Detector-1MB-with-landmark"
"Sierkinhane/mtcnn-pytorch" -> "guoqiangqi/PFLD"
"Sierkinhane/mtcnn-pytorch" -> "LeslieZhoa/tensorflow-MTCNN"
"Sierkinhane/mtcnn-pytorch" -> "biubug6/Pytorch_Retinaface"
"Sierkinhane/mtcnn-pytorch" -> "polarisZhao/PFLD-pytorch"
"Sierkinhane/mtcnn-pytorch" -> "liorshk/facenet_pytorch"
"Sierkinhane/mtcnn-pytorch" -> "tbmoon/facenet"
"dlunion/DBFace" -> "Star-Clouds/CenterFace"
"dlunion/DBFace" -> "biubug6/Face-Detector-1MB-with-landmark"
"dlunion/DBFace" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"dlunion/DBFace" -> "polarisZhao/PFLD-pytorch"
"dlunion/DBFace" -> "chenjun2hao/CenterFace.pytorch"
"dlunion/DBFace" -> "biubug6/Pytorch_Retinaface"
"dlunion/DBFace" -> "dlunion/tensorRTIntegrate" ["e"=1]
"dlunion/DBFace" -> "hanson-young/nniefacelib"
"dlunion/DBFace" -> "minivision-ai/Silent-Face-Anti-Spoofing"
"dlunion/DBFace" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" ["e"=1]
"dlunion/DBFace" -> "JDAI-CV/FaceX-Zoo"
"dlunion/DBFace" -> "xiangweizeng/mobile-lpr" ["e"=1]
"dlunion/DBFace" -> "zuoqing1988/ZQCNN" ["e"=1]
"dlunion/DBFace" -> "Star-Clouds/centerface"
"dlunion/DBFace" -> "cunjian/pytorch_face_landmark"
"supernotman/RetinaFace_Pytorch" -> "ElvishElvis/68-Retinaface-Pytorch-version"
"supernotman/RetinaFace_Pytorch" -> "biubug6/Face-Detector-1MB-with-landmark"
"supernotman/RetinaFace_Pytorch" -> "biubug6/Pytorch_Retinaface"
"supernotman/RetinaFace_Pytorch" -> "bogireddytejareddy/retinaface-pytorch"
"supernotman/RetinaFace_Pytorch" -> "clancylian/retinaface"
"supernotman/RetinaFace_Pytorch" -> "zma-c-137/VarGFaceNet"
"supernotman/RetinaFace_Pytorch" -> "wondervictor/WiderFace-Evaluation"
"supernotman/RetinaFace_Pytorch" -> "polarisZhao/PFLD-pytorch"
"supernotman/RetinaFace_Pytorch" -> "TreB1eN/InsightFace_Pytorch"
"supernotman/RetinaFace_Pytorch" -> "chenjun2hao/CenterFace.pytorch"
"supernotman/RetinaFace_Pytorch" -> "Media-Smart/vedadet"
"supernotman/RetinaFace_Pytorch" -> "Star-Clouds/CenterFace"
"supernotman/RetinaFace_Pytorch" -> "foamliu/InsightFace-v3"
"supernotman/RetinaFace_Pytorch" -> "guoqiangqi/PFLD"
"supernotman/RetinaFace_Pytorch" -> "ChiCheng123/SRN"
"Zhou-sx/yolov5_Deepsort_rknn" -> "airockchip/rknn_model_zoo"
"Zhou-sx/yolov5_Deepsort_rknn" -> "WindyXiang/NanoTrack_RK3588_python" ["e"=1]
"Zhou-sx/yolov5_Deepsort_rknn" -> "rockchip-linux/rknpu2"
"airockchip/rknn_model_zoo" -> "rockchip-linux/rknn-toolkit2"
"airockchip/rknn_model_zoo" -> "Zhou-sx/yolov5_Deepsort_rknn"
"airockchip/rknn_model_zoo" -> "rockchip-linux/rknpu"
"airockchip/rknn_model_zoo" -> "EASY-EAI/yolov5"
"airockchip/rknn_model_zoo" -> "rockchip-linux/rknpu2"
"airockchip/rknn_model_zoo" -> "airockchip/yolov5"
"airockchip/rknn_model_zoo" -> "soloist-v/yolov5_for_rknn"
"airockchip/rknn_model_zoo" -> "rockchip-linux/rknn-toolkit"
"airockchip/rknn_model_zoo" -> "littledeep/YOLOv5-RK3399Pro"
"airockchip/rknn_model_zoo" -> "airockchip/librga"
"airockchip/rknn_model_zoo" -> "MUZLATAN/ffmpeg_rtsp_mpp"
"airockchip/rknn_model_zoo" -> "soloIife/yolov5_for_rknn"
"airockchip/rknn_model_zoo" -> "cqu20160901/yolov8n_onnx_tensorRT_rknn_horizon"
"rockchip-linux/mpp" -> "MUZLATAN/ffmpeg_rtsp_mpp"
"rockchip-linux/mpp" -> "rockchip-linux/gstreamer-rockchip"
"rockchip-linux/mpp" -> "HermanChen/mpp"
"rockchip-linux/mpp" -> "WainDing/mpp_linux_cpp"
"rockchip-linux/mpp" -> "sliver-chen/mpp_linux_cpp"
"rockchip-linux/mpp" -> "airockchip/librga"
"rockchip-linux/mpp" -> "JeffyCN/libv4l-rkmpp"
"rockchip-linux/mpp" -> "rockchip-linux/linux-rga"
"rockchip-linux/mpp" -> "darkise/mpp_rtsp_player"
"rockchip-linux/mpp" -> "JeffyCN/FFmpeg"
"rockchip-linux/mpp" -> "DevoutPrayer/streamer"
"rockchip-linux/mpp" -> "rockchip-linux/kernel"
"rockchip-linux/mpp" -> "rockchip-linux/libmali"
"rockchip-linux/mpp" -> "allwinner-zh/media-codec" ["e"=1]
"rockchip-linux/mpp" -> "rockchip-linux/ffmpeg"
"cabani/MaskedFace-Net" -> "aqeelanwar/MaskTheFace"
"cabani/MaskedFace-Net" -> "X-zhangyang/Real-World-Masked-Face-Dataset"
"cabani/MaskedFace-Net" -> "HuangYG123/CurricularFace"
"cabani/MaskedFace-Net" -> "Tencent/TFace"
"cabani/MaskedFace-Net" -> "dchen236/FairFace"
"cabani/MaskedFace-Net" -> "Star-Clouds/CenterFace"
"vkola-lab/brain2020" -> "vkola-lab/ncomms2022"
"vkola-lab/brain2020" -> "wangyirui/AD_Prediction"
"vkola-lab/brain2020" -> "NYUMedML/CNN_design_for_AD"
"west-gates/3DCNN-Vis" -> "neuro-ml/resnet_cnn_mri_adni"
"rainofmine/Face_Attention_Network" -> "ChiCheng123/SRN"
"rainofmine/Face_Attention_Network" -> "Goingqs/PyramidBox"
"rainofmine/Face_Attention_Network" -> "rainofmine/Repulsion_Loss" ["e"=1]
"rainofmine/Face_Attention_Network" -> "louis-she/sfd.pytorch"
"rainofmine/Face_Attention_Network" -> "KaleidoZhouYN/e2e-joint-face-detection-and-alignment"
"sirius-ai/MobileFaceNet_TF" -> "yangxue0827/MobileFaceNet_Tensorflow"
"sirius-ai/MobileFaceNet_TF" -> "qidiso/mobilefacenet-V2"
"sirius-ai/MobileFaceNet_TF" -> "Xiaoccer/MobileFaceNet_Pytorch"
"sirius-ai/MobileFaceNet_TF" -> "syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing"
"sirius-ai/MobileFaceNet_TF" -> "auroua/InsightFace_TF"
"sirius-ai/MobileFaceNet_TF" -> "estebanuri/face_recognition"
"sirius-ai/MobileFaceNet_TF" -> "jiangxiluning/facenet_mtcnn_to_mobile"
"sirius-ai/MobileFaceNet_TF" -> "luckycallor/InsightFace-tensorflow"
"sirius-ai/MobileFaceNet_TF" -> "moli232777144/mobilefacenet-mxnet"
"sirius-ai/MobileFaceNet_TF" -> "honghuCode/mobileFacenet-ncnn"
"sirius-ai/MobileFaceNet_TF" -> "zhanglaplace/MobileFaceNet"
"sirius-ai/MobileFaceNet_TF" -> "yule-li/CosFace"
"sirius-ai/MobileFaceNet_TF" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019"
"sirius-ai/MobileFaceNet_TF" -> "biubug6/Face-Detector-1MB-with-landmark"
"sirius-ai/MobileFaceNet_TF" -> "imistyrain/MTCNN"
"YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "becauseofAI/lffd-pytorch"
"YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "becauseofAI/MobileFace" ["e"=1]
"YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "biubug6/Face-Detector-1MB-with-landmark"
"YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "Star-Clouds/CenterFace"
"YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "TencentYoutuResearch/FaceDetection-DSFD" ["e"=1]
"YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "dlunion/DBFace"
"YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "Star-Clouds/centerface"
"YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "xiangweizeng/mobile-lpr" ["e"=1]
"YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "zuoqing1988/ZQCNN" ["e"=1]
"YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "becauseofAI/HelloFace" ["e"=1]
"YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "aditya-vora/FCHD-Fully-Convolutional-Head-Detector" ["e"=1]
"YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "liuwei16/CSP" ["e"=1]
"YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "zisianw/FaceBoxes.PyTorch"
"YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" ["e"=1]
"YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices" -> "hanson-young/nniefacelib"
"zma-c-137/VarGFaceNet" -> "olojuwin/facerecognize-for-mobile-phone"
"zma-c-137/VarGFaceNet" -> "sciencefans/trojans-face-recognizer"
"zma-c-137/VarGFaceNet" -> "xiaoboCASIA/SV-X-Softmax"
"zma-c-137/VarGFaceNet" -> "Star-Clouds/centerface"
"zma-c-137/VarGFaceNet" -> "bleakie/MaskInsightface"
"zma-c-137/VarGFaceNet" -> "seasonSH/DocFace"
"zma-c-137/VarGFaceNet" -> "cvtower/seesawfacenet_pytorch"
"zma-c-137/VarGFaceNet" -> "GarrickLin/MXNet2Caffe"
"zma-c-137/VarGFaceNet" -> "HuangYG123/CurricularFace"
"zma-c-137/VarGFaceNet" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"zma-c-137/VarGFaceNet" -> "XiaohangZhan/face_recognition_framework"
"zma-c-137/VarGFaceNet" -> "supernotman/RetinaFace_Pytorch"
"zma-c-137/VarGFaceNet" -> "liuyuisanai/trojans-face-recognizer"
"zma-c-137/VarGFaceNet" -> "xialuxi/arcface-caffe"
"zma-c-137/VarGFaceNet" -> "JiajiongCao/CELEB-500K"
"Star-Clouds/centerface" -> "olojuwin/facerecognize-for-mobile-phone"
"Star-Clouds/centerface" -> "Charrin/RetinaFace-Cpp"
"Star-Clouds/centerface" -> "bleakie/MaskInsightface"
"Star-Clouds/centerface" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"Star-Clouds/centerface" -> "SyGoing/LFFD-with-ncnn"
"Star-Clouds/centerface" -> "Star-Clouds/FRDA"
"Star-Clouds/centerface" -> "zma-c-137/VarGFaceNet"
"Star-Clouds/centerface" -> "biubug6/Face-Detector-1MB-with-landmark"
"Star-Clouds/centerface" -> "zuoqing1988/ZQCNN-v0.0"
"Star-Clouds/centerface" -> "szad670401/advanced-mxnet2caffe"
"Star-Clouds/centerface" -> "chenjun2hao/CenterFace.pytorch"
"Star-Clouds/centerface" -> "zeusees/FaceBoxes"
"Star-Clouds/centerface" -> "zuoqing1988/train-mtcnn"
"yangfei963158659/nnie" -> "hanson-young/nniefacelib"
"yangfei963158659/nnie" -> "RaySue/NNIE-lite"
"OeslleLucena/FASNet" -> "zboulkenafet/Face-anti-spoofing-based-on-color-texture-analysis"
"OeslleLucena/FASNet" -> "allenyangyl/Face_Liveness_Detection"
"OeslleLucena/FASNet" -> "JinghuiZhou/awesome_face_antispoofing"
"OeslleLucena/FASNet" -> "jwyang/Person-Specific-FAS"
"OeslleLucena/FASNet" -> "houliang428/CNN-for-face-anti-spoofing"
"OeslleLucena/FASNet" -> "paranjapeved/Face-anti-spoofing"
"OeslleLucena/FASNet" -> "senliuy/FaceLivenessDetection"
"OeslleLucena/FASNet" -> "yunfan0621/Benchmarks_for_Face_Liveness_Detection"
"OeslleLucena/FASNet" -> "deepcam-cn/Face-Anti-spoofing.pytorch"
"OeslleLucena/FASNet" -> "zboulkenafet/Face-Anti-Spoofing-using-Speeded-Up-Robust-Features-and-Fisher-Vector-Encoding"
"OeslleLucena/FASNet" -> "SeuTao/CVPR19-Face-Anti-spoofing"
"OeslleLucena/FASNet" -> "yomna-safaa/spoofnet-tensorflow"
"OeslleLucena/FASNet" -> "zeusees/Zeusee-Face-Anti-spoofing"
"OeslleLucena/FASNet" -> "mnikitin/Learn-Convolutional-Neural-Network-for-Face-Anti-Spoofing"
"OeslleLucena/FASNet" -> "AlexanderParkin/ChaLearn_liveness_challenge"
"allenyangyl/Face_Liveness_Detection" -> "senliuy/FaceLivenessDetection"
"allenyangyl/Face_Liveness_Detection" -> "zboulkenafet/Face-anti-spoofing-based-on-color-texture-analysis"
"allenyangyl/Face_Liveness_Detection" -> "NarcissusHliangZhao/Face-Liveness-Detection"
"allenyangyl/Face_Liveness_Detection" -> "OeslleLucena/FASNet"
"allenyangyl/Face_Liveness_Detection" -> "rienheuver/face-antispoofing-LBP"
"allenyangyl/Face_Liveness_Detection" -> "wuyongchn/Face-Spoofing-Detection-or-Face-Liveness-Detection"
"allenyangyl/Face_Liveness_Detection" -> "yunfan0621/Face_Liveness_Detection"
"allenyangyl/Face_Liveness_Detection" -> "Jade999/face_antispoofing"
"allenyangyl/Face_Liveness_Detection" -> "zboulkenafet/Face-Anti-Spoofing-using-Speeded-Up-Robust-Features-and-Fisher-Vector-Encoding"
"zeusees/Zeusee-Face-Anti-spoofing" -> "SeuTao/CVPR19-Face-Anti-spoofing"
"zeusees/Zeusee-Face-Anti-spoofing" -> "JinghuiZhou/awesome_face_antispoofing"
"zeusees/Zeusee-Face-Anti-spoofing" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019"
"zeusees/Zeusee-Face-Anti-spoofing" -> "OeslleLucena/FASNet"
"zeusees/Zeusee-Face-Anti-spoofing" -> "minivision-ai/Silent-Face-Anti-Spoofing"
"zeusees/Zeusee-Face-Anti-spoofing" -> "senliuy/FaceLivenessDetection"
"zeusees/Zeusee-Face-Anti-spoofing" -> "moli232777144/mtcnn_ncnn"
"zeusees/Zeusee-Face-Anti-spoofing" -> "minivision-ai/Silent-Face-Anti-Spoofing-APK"
"zeusees/Zeusee-Face-Anti-spoofing" -> "zeusees/HyperLandmark"
"zeusees/Zeusee-Face-Anti-spoofing" -> "lsy17096535/face-landmark"
"zeusees/Zeusee-Face-Anti-spoofing" -> "zeusees/HyperFAS"
"zeusees/Zeusee-Face-Anti-spoofing" -> "AlexanderParkin/ChaLearn_liveness_challenge"
"zeusees/Zeusee-Face-Anti-spoofing" -> "allenyangyl/Face_Liveness_Detection"
"zeusees/Zeusee-Face-Anti-spoofing" -> "moli232777144/mobilefacenet-mxnet"
"zeusees/Zeusee-Face-Anti-spoofing" -> "zeusees/HyperFT"
"Fei-Wang/insightface" -> "luckycallor/InsightFace-tensorflow"
"Fei-Wang/insightface" -> "AIInAi/tf-insightface"
"Fei-Wang/insightface" -> "auroua/InsightFace_TF"
"asdfqwrasdf/ArcFaceDemo" -> "gqjjqg/android-extend"
"asdfqwrasdf/ArcFaceDemo" -> "ArcsoftEscErd/ArcfaceDemo_Android"
"asdfqwrasdf/ArcFaceDemo" -> "FacePlusPlus/MegviiFacepp-Android-SDK"
"asdfqwrasdf/ArcFaceDemo" -> "smartkids77/ArcSoft_FreeSDK_Demo"
"asdfqwrasdf/ArcFaceDemo" -> "ZeroingIn/facedemo"
"asdfqwrasdf/ArcFaceDemo" -> "tyhjh/ArcFace"
"asdfqwrasdf/ArcFaceDemo" -> "itboyst/ArcSoftFaceDemo"
"asdfqwrasdf/ArcFaceDemo" -> "cepr/android-serialport-api" ["e"=1]
"asdfqwrasdf/ArcFaceDemo" -> "junerver/ArcFaceDemo"
"asdfqwrasdf/ArcFaceDemo" -> "tzutalin/dlib-android-app"
"AlexanderParkin/ChaLearn_liveness_challenge" -> "SeuTao/CVPR19-Face-Anti-spoofing"
"AlexanderParkin/ChaLearn_liveness_challenge" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019"
"AlexanderParkin/ChaLearn_liveness_challenge" -> "ZitongYu/CDCN"
"AlexanderParkin/ChaLearn_liveness_challenge" -> "clks-wzz/FAS-SGTD"
"AlexanderParkin/ChaLearn_liveness_challenge" -> "zzzkk2009/casia-surf-2019-codes"
"AlexanderParkin/ChaLearn_liveness_challenge" -> "AlexanderParkin/CASIA-SURF_CeFA"
"AlexanderParkin/ChaLearn_liveness_challenge" -> "JinghuiZhou/awesome_face_antispoofing"
"AlexanderParkin/ChaLearn_liveness_challenge" -> "yaojieliu/ECCV2018-FaceDeSpoofing"
"AlexanderParkin/ChaLearn_liveness_challenge" -> "RizhaoCai/Awesome-FAS"
"AlexanderParkin/ChaLearn_liveness_challenge" -> "ee09115/spoofing_detection"
"AlexanderParkin/ChaLearn_liveness_challenge" -> "minivision-ai/Silent-Face-Anti-Spoofing"
"AlexanderParkin/ChaLearn_liveness_challenge" -> "Davidzhangyuanhan/CelebA-Spoof"
"AlexanderParkin/ChaLearn_liveness_challenge" -> "yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing"
"AlexanderParkin/ChaLearn_liveness_challenge" -> "deepcam-cn/Face-Anti-spoofing.pytorch"
"AlexanderParkin/ChaLearn_liveness_challenge" -> "rshaojimmy/AAAI2020-RFMetaFAS"
"Davidzhangyuanhan/CelebA-Spoof" -> "clks-wzz/FAS-SGTD"
"Davidzhangyuanhan/CelebA-Spoof" -> "ZitongYu/CDCN"
"Davidzhangyuanhan/CelebA-Spoof" -> "RizhaoCai/Awesome-FAS"
"Davidzhangyuanhan/CelebA-Spoof" -> "yaojieliu/ECCV20-STDN"
"Davidzhangyuanhan/CelebA-Spoof" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019"
"Davidzhangyuanhan/CelebA-Spoof" -> "taylover-pei/SSDG-CVPR2020"
"Davidzhangyuanhan/CelebA-Spoof" -> "minivision-ai/Silent-Face-Anti-Spoofing"
"Davidzhangyuanhan/CelebA-Spoof" -> "AlexanderParkin/ChaLearn_liveness_challenge"
"Davidzhangyuanhan/CelebA-Spoof" -> "VIS-VAR/LGSC-for-FAS"
"Davidzhangyuanhan/CelebA-Spoof" -> "ZitongYu/DeepFAS"
"Davidzhangyuanhan/CelebA-Spoof" -> "SeuTao/CVPR19-Face-Anti-spoofing"
"Davidzhangyuanhan/CelebA-Spoof" -> "yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing"
"Davidzhangyuanhan/CelebA-Spoof" -> "rshaojimmy/AAAI2020-RFMetaFAS"
"Davidzhangyuanhan/CelebA-Spoof" -> "zeusees/HyperFAS"
"Davidzhangyuanhan/CelebA-Spoof" -> "yaojieliu/ECCV2018-FaceDeSpoofing"
"RizhaoCai/Awesome-FAS" -> "ZitongYu/DeepFAS"
"RizhaoCai/Awesome-FAS" -> "taylover-pei/SSDG-CVPR2020"
"RizhaoCai/Awesome-FAS" -> "clks-wzz/FAS-SGTD"
"RizhaoCai/Awesome-FAS" -> "ZitongYu/CDCN"
"RizhaoCai/Awesome-FAS" -> "Davidzhangyuanhan/CelebA-Spoof"
"RizhaoCai/Awesome-FAS" -> "VIS-VAR/LGSC-for-FAS"
"RizhaoCai/Awesome-FAS" -> "AlexanderParkin/CASIA-SURF_CeFA"
"RizhaoCai/Awesome-FAS" -> "yaojieliu/ECCV20-STDN"
"RizhaoCai/Awesome-FAS" -> "huguesva/Face-Anti-Spoofing-Neural-Network"
"RizhaoCai/Awesome-FAS" -> "yaojieliu/ECCV2018-FaceDeSpoofing"
"RizhaoCai/Awesome-FAS" -> "AlexanderParkin/ChaLearn_liveness_challenge"
"RizhaoCai/Awesome-FAS" -> "clks-wzz/PRNet-Depth-Generation"
"RizhaoCai/Awesome-FAS" -> "rshaojimmy/AAAI2020-RFMetaFAS"
"RizhaoCai/Awesome-FAS" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019"
"RizhaoCai/Awesome-FAS" -> "yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing"
"YYuanAnyVision/mxnet_mtcnn_face_detection" -> "kpzhang93/MTCNN_face_detection_alignment" ["e"=1]
"YYuanAnyVision/mxnet_mtcnn_face_detection" -> "TropComplique/mtcnn-pytorch"
"YYuanAnyVision/mxnet_mtcnn_face_detection" -> "happynear/MTCNN_face_detection_alignment"
"YYuanAnyVision/mxnet_mtcnn_face_detection" -> "clks-wzz/FAS-SGTD"
"YYuanAnyVision/mxnet_mtcnn_face_detection" -> "SeuTao/CVPR19-Face-Anti-spoofing"
"YYuanAnyVision/mxnet_mtcnn_face_detection" -> "Seanlinx/mtcnn"
"YYuanAnyVision/mxnet_mtcnn_face_detection" -> "njvisionpower/mxnet-insightface-cpp"
"YYuanAnyVision/mxnet_mtcnn_face_detection" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019"
"YYuanAnyVision/mxnet_mtcnn_face_detection" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"YYuanAnyVision/mxnet_mtcnn_face_detection" -> "LeslieZhoa/tensorflow-MTCNN"
"ZitongYu/CDCN" -> "clks-wzz/FAS-SGTD"
"ZitongYu/CDCN" -> "taylover-pei/SSDG-CVPR2020"
"ZitongYu/CDCN" -> "SeuTao/CVPR19-Face-Anti-spoofing"
"ZitongYu/CDCN" -> "AlexanderParkin/ChaLearn_liveness_challenge"
"ZitongYu/CDCN" -> "VIS-VAR/LGSC-for-FAS"
"ZitongYu/CDCN" -> "AlexanderParkin/CASIA-SURF_CeFA"
"ZitongYu/CDCN" -> "Davidzhangyuanhan/CelebA-Spoof"
"ZitongYu/CDCN" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019"
"ZitongYu/CDCN" -> "RizhaoCai/Awesome-FAS"
"ZitongYu/CDCN" -> "ZitongYu/DeepFAS"
"ZitongYu/CDCN" -> "clks-wzz/PRNet-Depth-Generation"
"ZitongYu/CDCN" -> "minivision-ai/Silent-Face-Anti-Spoofing"
"ZitongYu/CDCN" -> "yaojieliu/ECCV20-STDN"
"ZitongYu/CDCN" -> "yaojieliu/ECCV2018-FaceDeSpoofing"
"ZitongYu/CDCN" -> "rshaojimmy/AAAI2020-RFMetaFAS"
"clks-wzz/FAS-SGTD" -> "ZitongYu/CDCN"
"clks-wzz/FAS-SGTD" -> "clks-wzz/PRNet-Depth-Generation"
"clks-wzz/FAS-SGTD" -> "taylover-pei/SSDG-CVPR2020"
"clks-wzz/FAS-SGTD" -> "qyxqyx/AIM_FAS"
"clks-wzz/FAS-SGTD" -> "VIS-VAR/LGSC-for-FAS"
"clks-wzz/FAS-SGTD" -> "yaojieliu/ECCV20-STDN"
"clks-wzz/FAS-SGTD" -> "RizhaoCai/Awesome-FAS"
"clks-wzz/FAS-SGTD" -> "AlexanderParkin/CASIA-SURF_CeFA"
"clks-wzz/FAS-SGTD" -> "Davidzhangyuanhan/CelebA-Spoof"
"clks-wzz/FAS-SGTD" -> "rshaojimmy/AAAI2020-RFMetaFAS"
"clks-wzz/FAS-SGTD" -> "SeuTao/CVPR19-Face-Anti-spoofing"
"clks-wzz/FAS-SGTD" -> "yaojieliu/ECCV2018-FaceDeSpoofing"
"clks-wzz/FAS-SGTD" -> "AlexanderParkin/ChaLearn_liveness_challenge"
"clks-wzz/FAS-SGTD" -> "deepcam-cn/Face-Anti-spoofing.pytorch"
"clks-wzz/FAS-SGTD" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019"
"ox-vgg/vgg_face2" -> "cydonia999/VGGFace2-pytorch"
"ox-vgg/vgg_face2" -> "rcmalli/keras-vggface"
"ox-vgg/vgg_face2" -> "WeidiXie/Keras-VGGFace2-ResNet50"
"ox-vgg/vgg_face2" -> "happynear/FaceDatasets"
"ox-vgg/vgg_face2" -> "ZhaoJ9014/face.evoLVe.PyTorch"
"ox-vgg/vgg_face2" -> "NNNNAI/VGGFace2-HQ" ["e"=1]
"ox-vgg/vgg_face2" -> "fwang91/IMDb-Face"
"ox-vgg/vgg_face2" -> "TreB1eN/InsightFace_Pytorch"
"ox-vgg/vgg_face2" -> "ZhaoJ9014/High-Performance-Face-Recognition" ["e"=1]
"ox-vgg/vgg_face2" -> "wujiyang/Face_Pytorch"
"ox-vgg/vgg_face2" -> "seasonSH/DocFace"
"ox-vgg/vgg_face2" -> "TropComplique/mtcnn-pytorch"
"ox-vgg/vgg_face2" -> "AlfredXiangWu/LightCNN"
"ox-vgg/vgg_face2" -> "kpzhang93/MTCNN_face_detection_alignment" ["e"=1]
"ox-vgg/vgg_face2" -> "timesler/facenet-pytorch" ["e"=1]
"qyxqyx/AIM_FAS" -> "clks-wzz/FAS-SGTD"
"qyxqyx/AIM_FAS" -> "rshaojimmy/CVPR2019-MADDoG"
"rshaojimmy/AAAI2020-RFMetaFAS" -> "taylover-pei/SSDG-CVPR2020"
"rshaojimmy/AAAI2020-RFMetaFAS" -> "rshaojimmy/CVPR2019-MADDoG"
"rshaojimmy/AAAI2020-RFMetaFAS" -> "clks-wzz/FAS-SGTD"
"rshaojimmy/AAAI2020-RFMetaFAS" -> "deepcam-cn/Face-Anti-spoofing.pytorch"
"rshaojimmy/AAAI2020-RFMetaFAS" -> "clks-wzz/PRNet-Depth-Generation"
"rshaojimmy/AAAI2020-RFMetaFAS" -> "huguesva/Face-Anti-Spoofing-Neural-Network"
"rshaojimmy/AAAI2020-RFMetaFAS" -> "yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing"
"rshaojimmy/AAAI2020-RFMetaFAS" -> "zzzkk2009/casia-surf-2019-codes"
"rshaojimmy/AAAI2020-RFMetaFAS" -> "yaojieliu/ECCV20-STDN"
"rshaojimmy/AAAI2020-RFMetaFAS" -> "qyxqyx/AIM_FAS"
"rshaojimmy/AAAI2020-RFMetaFAS" -> "yaojieliu/ECCV2018-FaceDeSpoofing"
"rshaojimmy/AAAI2020-RFMetaFAS" -> "ZitongYu/CDCN"
"rshaojimmy/AAAI2020-RFMetaFAS" -> "AlexanderParkin/CASIA-SURF_CeFA"
"rshaojimmy/AAAI2020-RFMetaFAS" -> "RizhaoCai/Awesome-FAS"
"rshaojimmy/AAAI2020-RFMetaFAS" -> "VIS-VAR/LGSC-for-FAS"
"rshaojimmy/CVPR2019-MADDoG" -> "rshaojimmy/AAAI2020-RFMetaFAS"
"rshaojimmy/CVPR2019-MADDoG" -> "qyxqyx/AIM_FAS"
"taylover-pei/SSDG-CVPR2020" -> "clks-wzz/FAS-SGTD"
"taylover-pei/SSDG-CVPR2020" -> "yaojieliu/ECCV20-STDN"
"taylover-pei/SSDG-CVPR2020" -> "ZitongYu/CDCN"
"taylover-pei/SSDG-CVPR2020" -> "RizhaoCai/Awesome-FAS"
"taylover-pei/SSDG-CVPR2020" -> "VIS-VAR/LGSC-for-FAS"
"taylover-pei/SSDG-CVPR2020" -> "rshaojimmy/AAAI2020-RFMetaFAS"
"taylover-pei/SSDG-CVPR2020" -> "wangzhuo2019/SSAN"
"taylover-pei/SSDG-CVPR2020" -> "AlexanderParkin/CASIA-SURF_CeFA"
"taylover-pei/SSDG-CVPR2020" -> "clks-wzz/PRNet-Depth-Generation"
"taylover-pei/SSDG-CVPR2020" -> "qyxqyx/AIM_FAS"
"taylover-pei/SSDG-CVPR2020" -> "rshaojimmy/CVPR2019-MADDoG"
"taylover-pei/SSDG-CVPR2020" -> "ZitongYu/DeepFAS"
"taylover-pei/SSDG-CVPR2020" -> "Davidzhangyuanhan/CelebA-Spoof"
"taylover-pei/SSDG-CVPR2020" -> "yaojieliu/ECCV2018-FaceDeSpoofing"
"taylover-pei/SSDG-CVPR2020" -> "SeuTao/CVPR19-Face-Anti-spoofing"
"wangzhuo2019/SSAN" -> "taylover-pei/SSDG-CVPR2020"
"yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing" -> "yaojieliu/ECCV2018-FaceDeSpoofing"
"yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing" -> "syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing"
"yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing" -> "yaojieliu/ECCV20-STDN"
"yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing" -> "rshaojimmy/AAAI2020-RFMetaFAS"
"yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing" -> "huguesva/Face-Anti-Spoofing-Neural-Network"
"yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing" -> "deepcam-cn/Face-Anti-spoofing.pytorch"
"yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing" -> "clks-wzz/PRNet-Depth-Generation"
"yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing" -> "SeuTao/CVPR19-Face-Anti-spoofing"
"yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing" -> "dinhquy94/face-antispoofing-using-mobileNet"
"yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing" -> "ZitongYu/CDCN"
"yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing" -> "clks-wzz/FAS-SGTD"
"yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing" -> "AlexanderParkin/ChaLearn_liveness_challenge"
"yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing" -> "RizhaoCai/Awesome-FAS"
"yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing" -> "Davidzhangyuanhan/CelebA-Spoof"
"yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing" -> "taylover-pei/SSDG-CVPR2020"
"yaojieliu/ECCV20-STDN" -> "taylover-pei/SSDG-CVPR2020"
"yaojieliu/ECCV20-STDN" -> "clks-wzz/FAS-SGTD"
"yaojieliu/ECCV20-STDN" -> "yaojieliu/ECCV2018-FaceDeSpoofing"
"yaojieliu/ECCV20-STDN" -> "AlexanderParkin/CASIA-SURF_CeFA"
"yaojieliu/ECCV20-STDN" -> "yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing"
"yaojieliu/ECCV20-STDN" -> "Davidzhangyuanhan/CelebA-Spoof"
"yaojieliu/ECCV20-STDN" -> "huguesva/Face-Anti-Spoofing-Neural-Network"
"yaojieliu/ECCV20-STDN" -> "ZitongYu/CDCN"
"yaojieliu/ECCV20-STDN" -> "RizhaoCai/Awesome-FAS"
"yaojieliu/ECCV20-STDN" -> "VIS-VAR/LGSC-for-FAS"
"yaojieliu/ECCV20-STDN" -> "rshaojimmy/AAAI2020-RFMetaFAS"
"yaojieliu/ECCV20-STDN" -> "qyxqyx/AIM_FAS"
"yaojieliu/ECCV2018-FaceDeSpoofing" -> "yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing"
"yaojieliu/ECCV2018-FaceDeSpoofing" -> "huguesva/Face-Anti-Spoofing-Neural-Network"
"yaojieliu/ECCV2018-FaceDeSpoofing" -> "yaojieliu/ECCV20-STDN"
"yaojieliu/ECCV2018-FaceDeSpoofing" -> "clks-wzz/FAS-SGTD"
"yaojieliu/ECCV2018-FaceDeSpoofing" -> "SeuTao/CVPR19-Face-Anti-spoofing"
"yaojieliu/ECCV2018-FaceDeSpoofing" -> "AlexanderParkin/ChaLearn_liveness_challenge"
"yaojieliu/ECCV2018-FaceDeSpoofing" -> "mnikitin/Learn-Convolutional-Neural-Network-for-Face-Anti-Spoofing"
"yaojieliu/ECCV2018-FaceDeSpoofing" -> "rshaojimmy/AAAI2020-RFMetaFAS"
"yaojieliu/ECCV2018-FaceDeSpoofing" -> "RizhaoCai/Awesome-FAS"
"yaojieliu/ECCV2018-FaceDeSpoofing" -> "ZitongYu/CDCN"
"yaojieliu/ECCV2018-FaceDeSpoofing" -> "taylover-pei/SSDG-CVPR2020"
"yaojieliu/ECCV2018-FaceDeSpoofing" -> "zzzkk2009/casia-surf-2019-codes"
"yaojieliu/ECCV2018-FaceDeSpoofing" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019"
"yaojieliu/ECCV2018-FaceDeSpoofing" -> "VIS-VAR/LGSC-for-FAS"
"yaojieliu/ECCV2018-FaceDeSpoofing" -> "AlexanderParkin/CASIA-SURF_CeFA"
"LeslieZhoa/tensorflow-MTCNN" -> "AITTSMD/MTCNN-Tensorflow" ["e"=1]
"LeslieZhoa/tensorflow-MTCNN" -> "LeslieZhoa/tensorflow-facenet"
"LeslieZhoa/tensorflow-MTCNN" -> "wangbm/MTCNN-Tensorflow"
"LeslieZhoa/tensorflow-MTCNN" -> "boyliwensheng/understand_facenet"
"LeslieZhoa/tensorflow-MTCNN" -> "moli232777144/mtcnn_ncnn"
"LeslieZhoa/tensorflow-MTCNN" -> "CongWeilin/mtcnn-caffe"
"LeslieZhoa/tensorflow-MTCNN" -> "chenlinzhong/face-login"
"LeslieZhoa/tensorflow-MTCNN" -> "imistyrain/MTCNN"
"LeslieZhoa/tensorflow-MTCNN" -> "Seanlinx/mtcnn"
"LeslieZhoa/tensorflow-MTCNN" -> "Charrin/RetinaFace-Cpp"
"LeslieZhoa/tensorflow-MTCNN" -> "Sierkinhane/mtcnn-pytorch"
"LeslieZhoa/tensorflow-MTCNN" -> "biubug6/Face-Detector-1MB-with-landmark"
"LeslieZhoa/tensorflow-MTCNN" -> "LeslieZhoa/tensorflow-YOLO1"
"LeslieZhoa/tensorflow-MTCNN" -> "zuoqing1988/train-mtcnn"
"LeslieZhoa/tensorflow-MTCNN" -> "dlunion/mtcnn"
"MuggleWang/CosFace_pytorch" -> "yule-li/CosFace"
"MuggleWang/CosFace_pytorch" -> "clcarwin/sphereface_pytorch"
"MuggleWang/CosFace_pytorch" -> "wujiyang/Face_Pytorch"
"MuggleWang/CosFace_pytorch" -> "YirongMao/softmax_variants"
"MuggleWang/CosFace_pytorch" -> "AruniRC/resnet-face-pytorch"
"MuggleWang/CosFace_pytorch" -> "happynear/FaceDatasets"
"MuggleWang/CosFace_pytorch" -> "ronghuaiyang/arcface-pytorch"
"MuggleWang/CosFace_pytorch" -> "wy1iu/sphereface"
"MuggleWang/CosFace_pytorch" -> "liorshk/facenet_pytorch"
"MuggleWang/CosFace_pytorch" -> "Xiaoccer/MobileFaceNet_Pytorch"
"MuggleWang/CosFace_pytorch" -> "happynear/AMSoftmax"
"MuggleWang/CosFace_pytorch" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"Seanlinx/mtcnn" -> "CongWeilin/mtcnn-caffe"
"Seanlinx/mtcnn" -> "dlunion/mtcnn"
"Seanlinx/mtcnn" -> "foreverYoungGitHub/MTCNN"
"Seanlinx/mtcnn" -> "pangyupo/mxnet_mtcnn_face_detection"
"Seanlinx/mtcnn" -> "happynear/MTCNN_face_detection_alignment"
"Seanlinx/mtcnn" -> "ydwen/caffe-face"
"Seanlinx/mtcnn" -> "DaFuCoding/MTCNN_Caffe"
"Seanlinx/mtcnn" -> "kpzhang93/MTCNN_face_detection_alignment" ["e"=1]
"Seanlinx/mtcnn" -> "AlphaQi/MTCNN-light"
"Seanlinx/mtcnn" -> "moli232777144/mtcnn_ncnn"
"Seanlinx/mtcnn" -> "tornadomeet/mxnet-face"
"Seanlinx/mtcnn" -> "AITTSMD/MTCNN-Tensorflow" ["e"=1]
"Seanlinx/mtcnn" -> "wy1iu/sphereface"
"Seanlinx/mtcnn" -> "lsy17096535/face-landmark"
"Seanlinx/mtcnn" -> "zeusees/FaceBoxes"
"WIKI2020/FacePose_pytorch" -> "polarisZhao/PFLD-pytorch"
"WIKI2020/FacePose_pytorch" -> "shamangary/FSA-Net"
"WIKI2020/FacePose_pytorch" -> "natanielruiz/deep-head-pose"
"WIKI2020/FacePose_pytorch" -> "cunjian/pytorch_face_landmark"
"WIKI2020/FacePose_pytorch" -> "vitoralbiero/img2pose"
"WIKI2020/FacePose_pytorch" -> "wensiyuanseven/light-virtual-list" ["e"=1]
"WIKI2020/FacePose_pytorch" -> "cleardusk/3DDFA_V2" ["e"=1]
"WIKI2020/FacePose_pytorch" -> "minivision-ai/Silent-Face-Anti-Spoofing"
"WIKI2020/FacePose_pytorch" -> "biubug6/Face-Detector-1MB-with-landmark"
"WIKI2020/FacePose_pytorch" -> "github-luffy/PFLD_68points_Pytorch"
"WIKI2020/FacePose_pytorch" -> "cfs6/AChat" ["e"=1]
"WIKI2020/FacePose_pytorch" -> "Hsintao/pfld_106_face_landmarks"
"WIKI2020/FacePose_pytorch" -> "wensiyuanseven/better-gesture" ["e"=1]
"WIKI2020/FacePose_pytorch" -> "hanson-young/nniefacelib"
"WIKI2020/FacePose_pytorch" -> "yinguobing/head-pose-estimation"
"WynMew/FaceAttribute" -> "d-li14/face-attribute-prediction"
"WynMew/FaceAttribute" -> "TencentYoutuResearch/FaceAttribute-FAN"
"WynMew/FaceAttribute" -> "HandsomeHans/Face-Attributes-MultiTask-Classification"
"WynMew/FaceAttribute" -> "camel007/caffe-moon"
"amirhfarzaneh/lsoftmax-pytorch" -> "jihunchoi/lsoftmax-pytorch"
"amirhfarzaneh/lsoftmax-pytorch" -> "wy1iu/LargeMargin_Softmax_Loss"
"amirhfarzaneh/lsoftmax-pytorch" -> "YirongMao/softmax_variants"
"cavalleria/cavaface.pytorch" -> "HuangYG123/CurricularFace"
"cavalleria/cavaface.pytorch" -> "bleakie/MaskInsightface"
"cavalleria/cavaface.pytorch" -> "pterhoer/FaceImageQuality"
"cavalleria/cavaface.pytorch" -> "xiaoboCASIA/SV-X-Softmax"
"cavalleria/cavaface.pytorch" -> "IrvingMeng/MagFace"
"cavalleria/cavaface.pytorch" -> "deepcam-cn/FaceQuality"
"cavalleria/cavaface.pytorch" -> "Tencent/TFace"
"cavalleria/cavaface.pytorch" -> "olojuwin/facerecognize-for-mobile-phone"
"cavalleria/cavaface.pytorch" -> "JDAI-CV/FaceX-Zoo"
"cavalleria/cavaface.pytorch" -> "ZhaoJ9014/face.evoLVe.PyTorch"
"cavalleria/cavaface.pytorch" -> "zuoqing1988/ZQCNN-v0.0"
"cavalleria/cavaface.pytorch" -> "KikimorMay/MultiFace"
"cavalleria/cavaface.pytorch" -> "xiaoxiong74/face-cluster-by-infomap"
"cavalleria/cavaface.pytorch" -> "zma-c-137/VarGFaceNet"
"cavalleria/cavaface.pytorch" -> "Charrin/RetinaFace-Cpp"
"cleardusk/MFR" -> "HuangYG123/CurricularFace"
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "ronghuaiyang/arcface-pytorch"
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "wujiyang/Face_Pytorch"
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "YirongMao/softmax_variants"
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "amirhfarzaneh/lsoftmax-pytorch"
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "KaiyangZhou/pytorch-center-loss"
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "TinyZeaMays/CircleLoss" ["e"=1]
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "foamliu/InsightFace-v2"
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "iiscleap/NeuralPlda" ["e"=1]
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "Jungjee/RawNet" ["e"=1]
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "manojpamk/pytorch_xvectors" ["e"=1]
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "clcarwin/sphereface_pytorch"
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "CoinCheung/pytorch-loss" ["e"=1]
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "TreB1eN/InsightFace_Pytorch"
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "clovaai/voxceleb_trainer" ["e"=1]
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" -> "4uiiurz1/pytorch-adacos"
"dlunion/mtcnn" -> "CongWeilin/mtcnn-caffe"
"dlunion/mtcnn" -> "AlphaQi/MTCNN-light"
"dlunion/mtcnn" -> "Seanlinx/mtcnn"
"dlunion/mtcnn" -> "DaFuCoding/MTCNN_Caffe"
"dlunion/mtcnn" -> "moli232777144/mtcnn_ncnn"
"dlunion/mtcnn" -> "foreverYoungGitHub/MTCNN"
"dlunion/mtcnn" -> "dlunion/CCDL"
"dlunion/mtcnn" -> "ElegantGod/ncnn"
"dlunion/mtcnn" -> "happynear/MTCNN_face_detection_alignment"
"dlunion/mtcnn" -> "zeusees/FaceBoxes"
"dlunion/mtcnn" -> "lsy17096535/face-landmark"
"dlunion/mtcnn" -> "blankWorld/MTCNN-Accelerate-Onet"
"dlunion/mtcnn" -> "ydwen/caffe-face"
"dlunion/mtcnn" -> "zuoqing1988/train-mtcnn"
"dlunion/mtcnn" -> "kpzhang93/MTCNN_face_detection_alignment" ["e"=1]
"happynear/NormFace" -> "happynear/FaceVerification"
"happynear/NormFace" -> "happynear/AMSoftmax"
"happynear/NormFace" -> "ydwen/caffe-face"
"happynear/NormFace" -> "sciencefans/coco_loss"
"happynear/NormFace" -> "wy1iu/sphereface"
"happynear/NormFace" -> "happynear/FaceDatasets"
"happynear/NormFace" -> "sciencefans/RSA-for-object-detection"
"happynear/NormFace" -> "wy1iu/LargeMargin_Softmax_Loss"
"happynear/NormFace" -> "AlfredXiangWu/face_verification_experiment"
"happynear/NormFace" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"happynear/NormFace" -> "KaleidoZhouYN/Details-on-Face-Recognition"
"happynear/NormFace" -> "fwang91/IMDb-Face"
"happynear/NormFace" -> "liuziwei7/mobile-id"
"happynear/NormFace" -> "Joker316701882/Additive-Margin-Softmax"
"happynear/NormFace" -> "happynear/MTCNN_face_detection_alignment"
"jihunchoi/lsoftmax-pytorch" -> "amirhfarzaneh/lsoftmax-pytorch"
"motokimura/yolo_v1_pytorch" -> "abeardear/pytorch-YOLO-v1"
"motokimura/yolo_v1_pytorch" -> "happyjin/pytorch-YOLO"
"motokimura/yolo_v1_pytorch" -> "zzzheng/pytorch-yolo-v1"
"motokimura/yolo_v1_pytorch" -> "uvipen/Yolo-v2-pytorch"
"penincillin/DREAM" -> "HRLTY/TP-GAN" ["e"=1]
"penincillin/DREAM" -> "fwang91/IMDb-Face"
"penincillin/DREAM" -> "iacopomasi/face_specific_augm" ["e"=1]
"penincillin/DREAM" -> "happynear/FaceDatasets"
"penincillin/DREAM" -> "clcarwin/sphereface_pytorch"
"penincillin/DREAM" -> "sciencefans/RSA-for-object-detection"
"penincillin/DREAM" -> "wy1iu/sphereface"
"penincillin/DREAM" -> "XiaohangZhan/cdp"
"penincillin/DREAM" -> "zhangjunh/DR-GAN-by-pytorch" ["e"=1]
"penincillin/DREAM" -> "happynear/NormFace"
"penincillin/DREAM" -> "huangyangyu/NoiseFace"
"penincillin/DREAM" -> "happynear/AMSoftmax"
"penincillin/DREAM" -> "xialuxi/arcface-caffe"
"penincillin/DREAM" -> "yule-li/CosFace"
"penincillin/DREAM" -> "WeitaoVan/L-GM-loss"
"polarisZhao/PFLD-pytorch" -> "guoqiangqi/PFLD"
"polarisZhao/PFLD-pytorch" -> "github-luffy/PFLD_68points_Pytorch"
"polarisZhao/PFLD-pytorch" -> "Hsintao/pfld_106_face_landmarks"
"polarisZhao/PFLD-pytorch" -> "cunjian/pytorch_face_landmark"
"polarisZhao/PFLD-pytorch" -> "hanson-young/nniefacelib"
"polarisZhao/PFLD-pytorch" -> "biubug6/Face-Detector-1MB-with-landmark"
"polarisZhao/PFLD-pytorch" -> "HRNet/HRNet-Facial-Landmark-Detection"
"polarisZhao/PFLD-pytorch" -> "D-X-Y/landmark-detection"
"polarisZhao/PFLD-pytorch" -> "wywu/LAB"
"polarisZhao/PFLD-pytorch" -> "jhb86253817/PIPNet"
"polarisZhao/PFLD-pytorch" -> "biubug6/Pytorch_Retinaface"
"polarisZhao/PFLD-pytorch" -> "protossw512/AdaptiveWingLoss"
"polarisZhao/PFLD-pytorch" -> "dlunion/DBFace"
"polarisZhao/PFLD-pytorch" -> "Star-Clouds/CenterFace"
"polarisZhao/PFLD-pytorch" -> "facebookresearch/supervision-by-registration"
"siriusdemon/Build-Your-Own-Face-Model" -> "chenjun2hao/CenterFace.pytorch"
"siriusdemon/Build-Your-Own-Face-Model" -> "bleakie/CenterMulti"
"siriusdemon/Build-Your-Own-Face-Model" -> "ronghuaiyang/arcface-pytorch"
"siriusdemon/Build-Your-Own-Face-Model" -> "Star-Clouds/CenterFace"
"siriusdemon/Build-Your-Own-Face-Model" -> "polarisZhao/PFLD-pytorch"
"siriusdemon/Build-Your-Own-Face-Model" -> "biubug6/Face-Detector-1MB-with-landmark"
"siriusdemon/Build-Your-Own-Face-Model" -> "dlunion/DBFace"
"siriusdemon/Build-Your-Own-Face-Model" -> "hanson-young/nniefacelib"
"siriusdemon/Build-Your-Own-Face-Model" -> "wujiyang/Face_Pytorch"
"siriusdemon/Build-Your-Own-Face-Model" -> "TreB1eN/InsightFace_Pytorch"
"siriusdemon/Build-Your-Own-Face-Model" -> "tkat0/PyTorch_BlazeFace"
"siriusdemon/Build-Your-Own-Face-Model" -> "JDAI-CV/FaceX-Zoo"
"wangbm/MTCNN-Tensorflow" -> "BobLiu20/mtcnn_tf"
"wangbm/MTCNN-Tensorflow" -> "LeslieZhoa/tensorflow-MTCNN"
"wangbm/MTCNN-Tensorflow" -> "look4pritam/tfmtcnn"
"wangbm/MTCNN-Tensorflow" -> "AITTSMD/MTCNN-Tensorflow" ["e"=1]
"wujiyang/Face_Pytorch" -> "TreB1eN/InsightFace_Pytorch"
"wujiyang/Face_Pytorch" -> "ronghuaiyang/arcface-pytorch"
"wujiyang/Face_Pytorch" -> "MuggleWang/CosFace_pytorch"
"wujiyang/Face_Pytorch" -> "ZhaoJ9014/face.evoLVe.PyTorch"
"wujiyang/Face_Pytorch" -> "QuasarLight/Pytorch_Face_Recognition-"
"wujiyang/Face_Pytorch" -> "HuangYG123/CurricularFace"
"wujiyang/Face_Pytorch" -> "foamliu/InsightFace-v2"
"wujiyang/Face_Pytorch" -> "clcarwin/sphereface_pytorch"
"wujiyang/Face_Pytorch" -> "Xiaoccer/MobileFaceNet_Pytorch"
"wujiyang/Face_Pytorch" -> "wy1iu/sphereface"
"wujiyang/Face_Pytorch" -> "yule-li/CosFace"
"wujiyang/Face_Pytorch" -> "cvqluu/Angular-Penalty-Softmax-Losses-Pytorch"
"wujiyang/Face_Pytorch" -> "xiaoboCASIA/SV-X-Softmax"
"wujiyang/Face_Pytorch" -> "TropComplique/mtcnn-pytorch"
"wujiyang/Face_Pytorch" -> "liorshk/facenet_pytorch"
"wy1iu/LargeMargin_Softmax_Loss" -> "wy1iu/SphereNet"
"wy1iu/LargeMargin_Softmax_Loss" -> "happynear/AMSoftmax"
"wy1iu/LargeMargin_Softmax_Loss" -> "wy1iu/sphereface"
"wy1iu/LargeMargin_Softmax_Loss" -> "luoyetx/mx-lsoftmax" ["e"=1]
"wy1iu/LargeMargin_Softmax_Loss" -> "wy1iu/DCNets"
"wy1iu/LargeMargin_Softmax_Loss" -> "happynear/NormFace"
"wy1iu/LargeMargin_Softmax_Loss" -> "amirhfarzaneh/lsoftmax-pytorch"
"wy1iu/LargeMargin_Softmax_Loss" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"wy1iu/LargeMargin_Softmax_Loss" -> "sciencefans/coco_loss"
"wy1iu/LargeMargin_Softmax_Loss" -> "ydwen/caffe-face"
"wy1iu/LargeMargin_Softmax_Loss" -> "walkoncross/prepare-faces-zyf"
"wy1iu/LargeMargin_Softmax_Loss" -> "clcarwin/sphereface_pytorch"
"wy1iu/LargeMargin_Softmax_Loss" -> "twtygqyy/caffe-augmentation" ["e"=1]
"wy1iu/LargeMargin_Softmax_Loss" -> "happynear/FaceDatasets"
"wy1iu/LargeMargin_Softmax_Loss" -> "happynear/FaceVerification"
"wy1iu/sphereface" -> "ydwen/caffe-face"
"wy1iu/sphereface" -> "clcarwin/sphereface_pytorch"
"wy1iu/sphereface" -> "happynear/AMSoftmax"
"wy1iu/sphereface" -> "happynear/NormFace"
"wy1iu/sphereface" -> "wy1iu/LargeMargin_Softmax_Loss"
"wy1iu/sphereface" -> "kpzhang93/MTCNN_face_detection_alignment" ["e"=1]
"wy1iu/sphereface" -> "AlfredXiangWu/face_verification_experiment"
"wy1iu/sphereface" -> "happynear/FaceVerification"
"wy1iu/sphereface" -> "mahyarnajibi/SSH"
"wy1iu/sphereface" -> "fwang91/IMDb-Face"
"wy1iu/sphereface" -> "Seanlinx/mtcnn"
"wy1iu/sphereface" -> "Joker316701882/Additive-Margin-Softmax"
"wy1iu/sphereface" -> "xialuxi/arcface-caffe"
"wy1iu/sphereface" -> "happynear/FaceDatasets"
"wy1iu/sphereface" -> "sfzhang15/SFD"
"cyh24/Joint-Bayesian" -> "stdcoutzyx/DeepID_FaceClassify"
"cyh24/Joint-Bayesian" -> "happynear/FaceVerification"
"cyh24/Joint-Bayesian" -> "lufo816/face_verification_demo"
"cyh24/Joint-Bayesian" -> "MaoXu/Joint_Bayesian"
"cyh24/Joint-Bayesian" -> "betars/Face-Resources"
"cyh24/Joint-Bayesian" -> "RiweiChen/FaceTools"
"cyh24/Joint-Bayesian" -> "happynear/NormFace"
"cyh24/Joint-Bayesian" -> "AlfredXiangWu/face_verification_experiment"
"cyh24/Joint-Bayesian" -> "shaoguangcheng/faceFrontalization" ["e"=1]
"cyh24/Joint-Bayesian" -> "jinze1994/DeepID1"
"cyh24/Joint-Bayesian" -> "pangyupo/mxnet_center_loss" ["e"=1]
"cyh24/Joint-Bayesian" -> "wjgaas/DeepID2"
"cyh24/Joint-Bayesian" -> "shen1994/DeepID"
"cyh24/Joint-Bayesian" -> "tornadomeet/mxnet-face"
"Aristochi/Dangerous_driving_behavior_detection" -> "DohaerisT/DangerousDrivingDetector"
"Aristochi/Dangerous_driving_behavior_detection" -> "PengfeiM/Fatigue-Driven-Detection-Based-on-CNN"
"Aristochi/Dangerous_driving_behavior_detection" -> "JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection"
"Aristochi/Dangerous_driving_behavior_detection" -> "Aristochi/MTCNN_CNN_DangerDrivingDetection"
"Aristochi/Dangerous_driving_behavior_detection" -> "omnigeeker/mlnd_distracted_driver_detection"
"Aristochi/Dangerous_driving_behavior_detection" -> "KyrieIrv11ng/Yolov5-driving-detection"
"DohaerisT/DangerousDrivingDetector" -> "Aristochi/Dangerous_driving_behavior_detection"
"PengfeiM/Fatigue-Driven-Detection-Based-on-CNN" -> "Aristochi/Dangerous_driving_behavior_detection"
"PengfeiM/Fatigue-Driven-Detection-Based-on-CNN" -> "JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection"
"PengfeiM/Fatigue-Driven-Detection-Based-on-CNN" -> "omnigeeker/mlnd_distracted_driver_detection"
"PengfeiM/Fatigue-Driven-Detection-Based-on-CNN" -> "DohaerisT/DangerousDrivingDetector"
"PengfeiM/Fatigue-Driven-Detection-Based-on-CNN" -> "xg-zhang/faceRegister" ["e"=1]
"PengfeiM/Fatigue-Driven-Detection-Based-on-CNN" -> "hongyaohongyao/smart_classroom" ["e"=1]
"PengfeiM/Fatigue-Driven-Detection-Based-on-CNN" -> "hzq-zjm/RobotVision2"
"TropComplique/mtcnn-pytorch" -> "Sierkinhane/mtcnn-pytorch"
"TropComplique/mtcnn-pytorch" -> "kuaikuaikim/DFace"
"TropComplique/mtcnn-pytorch" -> "cydonia999/VGGFace2-pytorch"
"TropComplique/mtcnn-pytorch" -> "clcarwin/sphereface_pytorch"
"TropComplique/mtcnn-pytorch" -> "TreB1eN/InsightFace_Pytorch"
"TropComplique/mtcnn-pytorch" -> "kpzhang93/MTCNN_face_detection_alignment" ["e"=1]
"TropComplique/mtcnn-pytorch" -> "wujiyang/Face_Pytorch"
"TropComplique/mtcnn-pytorch" -> "polarisZhao/mtcnn-pytorch"
"TropComplique/mtcnn-pytorch" -> "zisianw/FaceBoxes.PyTorch"
"TropComplique/mtcnn-pytorch" -> "YYuanAnyVision/mxnet_mtcnn_face_detection"
"TropComplique/mtcnn-pytorch" -> "timesler/facenet-pytorch" ["e"=1]
"TropComplique/mtcnn-pytorch" -> "wy1iu/sphereface"
"TropComplique/mtcnn-pytorch" -> "ZhaoJ9014/face.evoLVe.PyTorch"
"TropComplique/mtcnn-pytorch" -> "AITTSMD/MTCNN-Tensorflow" ["e"=1]
"TropComplique/mtcnn-pytorch" -> "faciallab/FaceDetector"
"wondervictor/WiderFace-Evaluation" -> "bairdzhang/smallhardface"
"wondervictor/WiderFace-Evaluation" -> "yxlijun/DSFD.pytorch"
"wondervictor/WiderFace-Evaluation" -> "xiaqunfeng/face-evaluation"
"wondervictor/WiderFace-Evaluation" -> "akofman/wider-face-pascal-voc-annotations"
"wondervictor/WiderFace-Evaluation" -> "Goingqs/PyramidBox"
"yinguobing/head-pose-estimation" -> "natanielruiz/deep-head-pose"
"yinguobing/head-pose-estimation" -> "lincolnhard/head-pose-estimation"
"yinguobing/head-pose-estimation" -> "guozhongluo/head-pose-estimation-and-face-landmark"
"yinguobing/head-pose-estimation" -> "yinguobing/cnn-facial-landmark"
"yinguobing/head-pose-estimation" -> "shamangary/FSA-Net"
"yinguobing/head-pose-estimation" -> "mpatacchiola/deepgaze"
"yinguobing/head-pose-estimation" -> "qiexing/face-landmark-localization"
"yinguobing/head-pose-estimation" -> "jerryhouuu/Face-Yaw-Roll-Pitch-from-Pose-Estimation-using-OpenCV"
"yinguobing/head-pose-estimation" -> "wywu/LAB"
"yinguobing/head-pose-estimation" -> "OverEuro/deep-head-pose-lite"
"yinguobing/head-pose-estimation" -> "lsy17096535/face-landmark"
"yinguobing/head-pose-estimation" -> "WIKI2020/FacePose_pytorch"
"yinguobing/head-pose-estimation" -> "YadiraF/face3d" ["e"=1]
"yinguobing/head-pose-estimation" -> "chengzhengxin/sdm"
"yinguobing/head-pose-estimation" -> "guoqiangqi/PFLD"
"chengxy-nds/ArcSoftFaceDemo" -> "itboyst/ArcSoftFaceDemo"
"bbanddd/ADDL" -> "vipul105/Alzheimers_Disease_Progression"
"zhangqianhui/CnnForAndroid" -> "Leliana/WhatsThis"
"zhangqianhui/CnnForAndroid" -> "sh1r0/caffe-android-lib"
"zhangqianhui/CnnForAndroid" -> "sh1r0/caffe-android-demo"
"zhangqianhui/CnnForAndroid" -> "alexkarargyris/Caffe_OpenCV_Android_App"
"zhangqianhui/CnnForAndroid" -> "solrex/caffe-mobile"
"zhangqianhui/CnnForAndroid" -> "ENCP/CNNdroid"
"zhangqianhui/CnnForAndroid" -> "imistyrain/SeetaFace4Android"
"zhangqianhui/CnnForAndroid" -> "xingwangsfu/caffe-yolo" ["e"=1]
"zhangqianhui/CnnForAndroid" -> "anson0910/CNN_face_detection"
"abhn/marvel" -> "Lauszus/FaceRecognitionApp"
"abhn/marvel" -> "Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework"
"abhn/marvel" -> "Zod20/OpenCV-Face-Recognition-Android"
"abhn/marvel" -> "Qualeams/Android-Face-Recognition-with-Deep-Learning-Library"
"elucideye/drishti" -> "iitmcvg/eye-gaze"
"elucideye/drishti" -> "trishume/eyeLike"
"elucideye/drishti" -> "severin-lemaignan/gazr"
"elucideye/drishti" -> "jonnedtc/PupilDetector"
"elucideye/drishti" -> "OAID/YSQfastfd"
"errollw/EyeTab" -> "eyetrackingDB/GazeTrackingFramework"
"errollw/EyeTab" -> "Krigu/Gaze"
"simonarvin/eyeloop" -> "esdalmaijer/PyGaze"
"simonarvin/eyeloop" -> "stepacool/Eye-Tracker"
"simonarvin/eyeloop" -> "HugoM25/Img_To_Photomosaics"
"xucong-zhang/ETH-XGaze" -> "hysts/pytorch_mpiigaze"
"xucong-zhang/ETH-XGaze" -> "VIPL-TAL-GAZE/GAZE2021"
"xucong-zhang/ETH-XGaze" -> "swook/EVE"
"xucong-zhang/ETH-XGaze" -> "hysts/pytorch_mpiigaze_demo"
"xucong-zhang/ETH-XGaze" -> "NVlabs/few_shot_gaze"
"xucong-zhang/ETH-XGaze" -> "Tobias-Fischer/rt_gene"
"xucong-zhang/ETH-XGaze" -> "erkil1452/gaze360"
"xucong-zhang/ETH-XGaze" -> "bjj9/EVE_SCPT"
"xucong-zhang/ETH-XGaze" -> "yihuacheng/GazeEstimation-Summary"
"xucong-zhang/ETH-XGaze" -> "yihuacheng/Gaze-Net"
"xucong-zhang/ETH-XGaze" -> "yihuacheng/PureGaze"
"xucong-zhang/ETH-XGaze" -> "hysts/pl_gaze_estimation"
"xucong-zhang/ETH-XGaze" -> "yihuacheng/GazeTR"
"xucong-zhang/ETH-XGaze" -> "zhengyuf/STED-gaze"
"xucong-zhang/ETH-XGaze" -> "swook/faze_preprocess"
"royorel/Lifespan_Age_Transformation_Synthesis" -> "royorel/FFHQ-Aging-Dataset"
"royorel/Lifespan_Age_Transformation_Synthesis" -> "yuval-alaluf/SAM" ["e"=1]
"royorel/Lifespan_Age_Transformation_Synthesis" -> "InterDigitalInc/HRFAE"
"royorel/Lifespan_Age_Transformation_Synthesis" -> "genforce/interfacegan" ["e"=1]
"royorel/Lifespan_Age_Transformation_Synthesis" -> "mattans/AgeProgression"
"royorel/Lifespan_Age_Transformation_Synthesis" -> "SenHe/DLFS"
"royorel/Lifespan_Age_Transformation_Synthesis" -> "dawei6875797/Face-Aging-with-Identity-Preserved-Conditional-Generative-Adversarial-Networks"
"royorel/Lifespan_Age_Transformation_Synthesis" -> "rosinality/swapping-autoencoder-pytorch" ["e"=1]
"royorel/Lifespan_Age_Transformation_Synthesis" -> "guyuchao/IPCGANs-Pytorch"
"royorel/Lifespan_Age_Transformation_Synthesis" -> "wtjiang98/PSGAN" ["e"=1]
"royorel/Lifespan_Age_Transformation_Synthesis" -> "yoyohonyang/LearingFaceAgeProgression"
"royorel/Lifespan_Age_Transformation_Synthesis" -> "Hzzone/MTLFace"
"royorel/Lifespan_Age_Transformation_Synthesis" -> "switchablenorms/CelebAMask-HQ" ["e"=1]
"royorel/Lifespan_Age_Transformation_Synthesis" -> "Hzzone/PFA-GAN"
"royorel/Lifespan_Age_Transformation_Synthesis" -> "microsoft/CoCosNet" ["e"=1]
"yxlijun/DSFD.pytorch" -> "yxlijun/Pyramidbox.pytorch"
"yxlijun/DSFD.pytorch" -> "yxlijun/S3FD.pytorch"
"yxlijun/DSFD.pytorch" -> "Goingqs/PyramidBox"
"yxlijun/DSFD.pytorch" -> "ChiCheng123/SRN"
"yxlijun/DSFD.pytorch" -> "wondervictor/WiderFace-Evaluation"
"yxlijun/DSFD.pytorch" -> "sfzhang15/SFD"
"yxlijun/DSFD.pytorch" -> "luuuyi/S3FD.PyTorch"
"yxlijun/DSFD.pytorch" -> "610265158/DSFD-tensorflow"
"sfzhang15/SFD" -> "mahyarnajibi/SSH"
"sfzhang15/SFD" -> "sciencefans/RSA-for-object-detection"
"sfzhang15/SFD" -> "clcarwin/SFD_pytorch"
"sfzhang15/SFD" -> "zeusees/FaceBoxes"
"sfzhang15/SFD" -> "yxlijun/S3FD.pytorch"
"sfzhang15/SFD" -> "ChiCheng123/SRN"
"sfzhang15/SFD" -> "Goingqs/PyramidBox"
"sfzhang15/SFD" -> "sfzhang15/FaceBoxes"
"sfzhang15/SFD" -> "foreverYoungGitHub/MTCNN"
"sfzhang15/SFD" -> "peiyunh/tiny"
"sfzhang15/SFD" -> "bairdzhang/smallhardface"
"sfzhang15/SFD" -> "EricZgw/PyramidBox"
"sfzhang15/SFD" -> "sfzhang15/RefineDet" ["e"=1]
"sfzhang15/SFD" -> "wy1iu/sphereface"
"sfzhang15/SFD" -> "ydwen/caffe-face"
"huguesva/Face-Anti-Spoofing-Neural-Network" -> "yaojieliu/ECCV2018-FaceDeSpoofing"
"huguesva/Face-Anti-Spoofing-Neural-Network" -> "shicaiwei123/anti-spoofing-of-rppg" ["e"=1]
"huguesva/Face-Anti-Spoofing-Neural-Network" -> "rshaojimmy/AAAI2020-RFMetaFAS"
"huguesva/Face-Anti-Spoofing-Neural-Network" -> "yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing"
"huguesva/Face-Anti-Spoofing-Neural-Network" -> "yaojieliu/ECCV20-STDN"
"huguesva/Face-Anti-Spoofing-Neural-Network" -> "coderwangson/awesome-face-anti-spoofing"
"huguesva/Face-Anti-Spoofing-Neural-Network" -> "AlexanderParkin/CASIA-SURF_CeFA"
"huguesva/Face-Anti-Spoofing-Neural-Network" -> "RizhaoCai/Awesome-FAS"
"huguesva/Face-Anti-Spoofing-Neural-Network" -> "clks-wzz/FAS-SGTD"
"dawei6875797/Face-Aging-with-Identity-Preserved-Conditional-Generative-Adversarial-Networks" -> "jiechen2358/FaceAging-by-cycleGAN"
"dawei6875797/Face-Aging-with-Identity-Preserved-Conditional-Generative-Adversarial-Networks" -> "guyuchao/IPCGANs-Pytorch"
"dawei6875797/Face-Aging-with-Identity-Preserved-Conditional-Generative-Adversarial-Networks" -> "ZZUTK/Face-Aging-CAAE"
"dawei6875797/Face-Aging-with-Identity-Preserved-Conditional-Generative-Adversarial-Networks" -> "mattans/AgeProgression"
"dawei6875797/Face-Aging-with-Identity-Preserved-Conditional-Generative-Adversarial-Networks" -> "Jooong/Face-Aging-CAAE-Pytorch"
"dawei6875797/Face-Aging-with-Identity-Preserved-Conditional-Generative-Adversarial-Networks" -> "yoyohonyang/LearingFaceAgeProgression"
"dawei6875797/Face-Aging-with-Identity-Preserved-Conditional-Generative-Adversarial-Networks" -> "ajithvallabai/Pyramid-Architecture-of-GANs"
"dawei6875797/Face-Aging-with-Identity-Preserved-Conditional-Generative-Adversarial-Networks" -> "InterDigitalInc/HRFAE"
"dawei6875797/Face-Aging-with-Identity-Preserved-Conditional-Generative-Adversarial-Networks" -> "HasnainRaz/Fast-AgingGAN"
"dawei6875797/Face-Aging-with-Identity-Preserved-Conditional-Generative-Adversarial-Networks" -> "TJU-Zhaoxy/A-Pyramid-Architecture-of-GANs"
"dawei6875797/Face-Aging-with-Identity-Preserved-Conditional-Generative-Adversarial-Networks" -> "royorel/FFHQ-Aging-Dataset"
"dawei6875797/Face-Aging-with-Identity-Preserved-Conditional-Generative-Adversarial-Networks" -> "Hzzone/PFA-GAN"
"dawei6875797/Face-Aging-with-Identity-Preserved-Conditional-Generative-Adversarial-Networks" -> "LynnHo/AttGAN-Tensorflow" ["e"=1]
"dawei6875797/Face-Aging-with-Identity-Preserved-Conditional-Generative-Adversarial-Networks" -> "royorel/Lifespan_Age_Transformation_Synthesis"
"jiangxiluning/facenet_mtcnn_to_mobile" -> "vcvycy/MTCNN4Android"
"jiangxiluning/facenet_mtcnn_to_mobile" -> "vcvycy/Android_Facenet"
"jiangxiluning/facenet_mtcnn_to_mobile" -> "syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing"
"jiangxiluning/facenet_mtcnn_to_mobile" -> "GRAYKEY/mobilefacenet_android"
"jiangxiluning/facenet_mtcnn_to_mobile" -> "sirius-ai/MobileFaceNet_TF"
"jiangxiluning/facenet_mtcnn_to_mobile" -> "pillarpond/face-recognizer-android"
"jiangxiluning/facenet_mtcnn_to_mobile" -> "yangxue0827/MobileFaceNet_Tensorflow"
"jiangxiluning/facenet_mtcnn_to_mobile" -> "moli232777144/mtcnn_ncnn"
"pillarpond/face-recognizer-android" -> "Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework"
"pillarpond/face-recognizer-android" -> "jiangxiluning/facenet_mtcnn_to_mobile"
"pillarpond/face-recognizer-android" -> "Lauszus/FaceRecognitionApp"
"pillarpond/face-recognizer-android" -> "vcvycy/MTCNN4Android"
"pillarpond/face-recognizer-android" -> "Zod20/OpenCV-Face-Recognition-Android"
"pillarpond/face-recognizer-android" -> "Monologuethl/Android_Facenet_Recognition"
"pillarpond/face-recognizer-android" -> "vcvycy/Android_Facenet"
"pillarpond/face-recognizer-android" -> "apkelly/devnibbles_facial_recognition_with_android"
"pillarpond/face-recognizer-android" -> "Qualeams/Android-Face-Recognition-with-Deep-Learning-Library"
"pillarpond/face-recognizer-android" -> "gv22ga/dlib-face-recognition-android"
"pillarpond/face-recognizer-android" -> "wangjiangyong/tflite_android_facedemo"
"lincolnhard/head-pose-estimation" -> "yinguobing/head-pose-estimation"
"lincolnhard/head-pose-estimation" -> "guozhongluo/head-pose-estimation-and-face-landmark"
"lincolnhard/head-pose-estimation" -> "natanielruiz/deep-head-pose"
"lincolnhard/head-pose-estimation" -> "qiexing/face-landmark-localization"
"lincolnhard/head-pose-estimation" -> "chengzhengxin/sdm"
"lincolnhard/head-pose-estimation" -> "shamangary/FSA-Net"
"lincolnhard/head-pose-estimation" -> "lsy17096535/face-landmark"
"lincolnhard/head-pose-estimation" -> "royshil/HeadPosePnP"
"lincolnhard/head-pose-estimation" -> "zeusees/HyperLandmark"
"lincolnhard/head-pose-estimation" -> "hrastnik/face_detect_n_track"
"lincolnhard/head-pose-estimation" -> "wywu/LAB"
"lincolnhard/head-pose-estimation" -> "mpatacchiola/deepgaze"
"lincolnhard/head-pose-estimation" -> "jerryhouuu/Face-Yaw-Roll-Pitch-from-Pose-Estimation-using-OpenCV"
"lincolnhard/head-pose-estimation" -> "szad670401/Fast-MTCNN"
"lincolnhard/head-pose-estimation" -> "fengju514/Face-Pose-Net" ["e"=1]
"tbmoon/basic_vqa" -> "noagarcia/awesome-vqa-pytorch"
"juan-csv/face_liveness_detection-Anti-spoofing" -> "anand498/Face-Liveness-Detection"
"juan-csv/face_liveness_detection-Anti-spoofing" -> "ee09115/spoofing_detection"
"juan-csv/face_liveness_detection-Anti-spoofing" -> "sakethbachu/Face-Liveness-Detection"
"juan-csv/face_liveness_detection-Anti-spoofing" -> "jomariya23156/face-recognition-with-liveness-web-login"
"juan-csv/face_liveness_detection-Anti-spoofing" -> "imironica/liveness"
"juan-csv/face_liveness_detection-Anti-spoofing" -> "kprokofi/light-weight-face-anti-spoofing"
"juan-csv/face_liveness_detection-Anti-spoofing" -> "Guarouba/face_rec"
"juan-csv/face_liveness_detection-Anti-spoofing" -> "AlexanderParkin/ChaLearn_liveness_challenge"
"juan-csv/face_liveness_detection-Anti-spoofing" -> "AhmetHamzaEmra/Intelegent_Lock"
"juan-csv/face_liveness_detection-Anti-spoofing" -> "birdowl21/Face-Liveness-Detection-Anti-Spoofing-Web-App"
"juan-csv/face_liveness_detection-Anti-spoofing" -> "dinhquy94/face-antispoofing-using-mobileNet"
"juan-csv/face_liveness_detection-Anti-spoofing" -> "RizhaoCai/Awesome-FAS"
"Microsoft/caffe" -> "happynear/caffe-windows"
"Microsoft/caffe" -> "daijifeng001/R-FCN" ["e"=1]
"Microsoft/caffe" -> "ydwen/caffe-face"
"Microsoft/caffe" -> "weiliu89/caffe" ["e"=1]
"Microsoft/caffe" -> "soeaver/caffe-model" ["e"=1]
"Microsoft/caffe" -> "shicai/Caffe_Manual" ["e"=1]
"Microsoft/caffe" -> "Orpine/py-R-FCN" ["e"=1]
"Microsoft/caffe" -> "ShaoqingRen/faster_rcnn" ["e"=1]
"Microsoft/caffe" -> "vlfeat/matconvnet" ["e"=1]
"Microsoft/caffe" -> "shelhamer/fcn.berkeleyvision.org" ["e"=1]
"Microsoft/caffe" -> "happynear/FaceVerification"
"Microsoft/caffe" -> "RiweiChen/DeepFace"
"Microsoft/caffe" -> "ethereon/caffe-tensorflow" ["e"=1]
"Microsoft/caffe" -> "DeepScale/SqueezeNet" ["e"=1]
"Microsoft/caffe" -> "caffe2/caffe2" ["e"=1]
"sh1r0/caffe-android-lib" -> "sh1r0/caffe-android-demo"
"sh1r0/caffe-android-lib" -> "solrex/caffe-mobile"
"sh1r0/caffe-android-lib" -> "ENCP/CNNdroid"
"sh1r0/caffe-android-lib" -> "zhangqianhui/CnnForAndroid"
"sh1r0/caffe-android-lib" -> "Leliana/WhatsThis"
"sh1r0/caffe-android-lib" -> "tzutalin/Android-Object-Detection"
"sh1r0/caffe-android-lib" -> "soumith/torch-android" ["e"=1]
"sh1r0/caffe-android-lib" -> "pmgysel/caffe" ["e"=1]
"sh1r0/caffe-android-lib" -> "facebook/fb-caffe-exts" ["e"=1]
"sh1r0/caffe-android-lib" -> "bwasti/AICamera"
"sh1r0/caffe-android-lib" -> "alexkarargyris/Caffe_OpenCV_Android_App"
"sh1r0/caffe-android-lib" -> "songhan/SqueezeNet-Deep-Compression" ["e"=1]
"sh1r0/caffe-android-lib" -> "shicai/MobileNet-Caffe" ["e"=1]
"sh1r0/caffe-android-lib" -> "XiaoMi/mobile-ai-bench" ["e"=1]
"sh1r0/caffe-android-lib" -> "luoyetx/mini-caffe"
"minivision-ai/Silent-Face-Anti-Spoofing-APK" -> "minivision-ai/Silent-Face-Anti-Spoofing"
"minivision-ai/Silent-Face-Anti-Spoofing-APK" -> "syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing"
"minivision-ai/Silent-Face-Anti-Spoofing-APK" -> "zeusees/Zeusee-Face-Anti-spoofing"
"minivision-ai/Silent-Face-Anti-Spoofing-APK" -> "zeusees/HyperFAS"
"minivision-ai/Silent-Face-Anti-Spoofing-APK" -> "olojuwin/facerecognize-for-mobile-phone"
"minivision-ai/Silent-Face-Anti-Spoofing-APK" -> "RizhaoCai/Awesome-FAS"
"minivision-ai/Silent-Face-Anti-Spoofing-APK" -> "MirrorYuChen/ncnn_example"
"hellock/icrawler" -> "dxsooo/ImageCrawl"
"hellock/icrawler" -> "XiaohangZhan/cdp"
"hellock/icrawler" -> "fwang91/IMDb-Face"
"hellock/icrawler" -> "amineHorseman/images-web-crawler"
"hellock/icrawler" -> "ydwen/caffe-face"
"hellock/icrawler" -> "soeaver/caffe-model" ["e"=1]
"hellock/icrawler" -> "hellock/torchpack"
"hellock/icrawler" -> "rksltnl/Deep-Metric-Learning-CVPR16" ["e"=1]
"datamonday/Face-Recognition-Class-Attendance-System" -> "66pig/face_recognition"
"datamonday/Face-Recognition-Class-Attendance-System" -> "inspurer/WorkAttendanceSystem"
"datamonday/Face-Recognition-Class-Attendance-System" -> "waiterxiaoyy/waiter-facerecognition-python"
"datamonday/Face-Recognition-Class-Attendance-System" -> "Sharpiless/Face-recognition-for-classroom-sign-in"
"gaobb/DLDL" -> "PuNeal/DLDL-v2-PyTorch"
"gaobb/DLDL" -> "gaobb/DLDL-v2"
"gaobb/DLDL" -> "zeakey/LDLForests"
"HasnainRaz/Fast-AgingGAN" -> "jiechen2358/FaceAging-by-cycleGAN"
"HasnainRaz/Fast-AgingGAN" -> "dawei6875797/Face-Aging-with-Identity-Preserved-Conditional-Generative-Adversarial-Networks"
"HasnainRaz/Fast-AgingGAN" -> "hyunbo9/face_aging_with_CycleGan"
"HasnainRaz/Fast-AgingGAN" -> "InterDigitalInc/HRFAE"
"ajithvallabai/Pyramid-Architecture-of-GANs" -> "TJU-Zhaoxy/A-Pyramid-Architecture-of-GANs"
"ajithvallabai/Pyramid-Architecture-of-GANs" -> "yoyohonyang/LearingFaceAgeProgression"
"ajithvallabai/Pyramid-Architecture-of-GANs" -> "Jooong/Face-Aging-CAAE-Pytorch"
"gloomyfish1998/opencv4android" -> "jiangdongguo/OpenCV4Android"
"gloomyfish1998/opencv4android" -> "kongqw/OpenCVForAndroid"
"jiechen2358/FaceAging-by-cycleGAN" -> "dawei6875797/Face-Aging-with-Identity-Preserved-Conditional-Generative-Adversarial-Networks"
"jiechen2358/FaceAging-by-cycleGAN" -> "ZZUTK/Face-Aging-CAAE"
"jiechen2358/FaceAging-by-cycleGAN" -> "guyuchao/IPCGANs-Pytorch"
"jiechen2358/FaceAging-by-cycleGAN" -> "HasnainRaz/Fast-AgingGAN"
"jiechen2358/FaceAging-by-cycleGAN" -> "hyunbo9/face_aging_with_CycleGan"
"jiechen2358/FaceAging-by-cycleGAN" -> "yoyohonyang/LearingFaceAgeProgression"
"jiechen2358/FaceAging-by-cycleGAN" -> "InterDigitalInc/HRFAE"
"jiechen2358/FaceAging-by-cycleGAN" -> "Jooong/Face-Aging-CAAE-Pytorch"
"jiechen2358/FaceAging-by-cycleGAN" -> "mattans/AgeProgression"
"yoyohonyang/LearingFaceAgeProgression" -> "TJU-Zhaoxy/A-Pyramid-Architecture-of-GANs"
"yoyohonyang/LearingFaceAgeProgression" -> "ajithvallabai/Pyramid-Architecture-of-GANs"
"yoyohonyang/LearingFaceAgeProgression" -> "mattans/AgeProgression"
"yoyohonyang/LearingFaceAgeProgression" -> "guyuchao/IPCGANs-Pytorch"
"Xiaoccer/MobileFaceNet_Pytorch" -> "sirius-ai/MobileFaceNet_TF"
"Xiaoccer/MobileFaceNet_Pytorch" -> "qidiso/mobilefacenet-V2"
"Xiaoccer/MobileFaceNet_Pytorch" -> "TreB1eN/InsightFace_Pytorch"
"Xiaoccer/MobileFaceNet_Pytorch" -> "wujiyang/Face_Pytorch"
"Xiaoccer/MobileFaceNet_Pytorch" -> "ronghuaiyang/arcface-pytorch"
"Xiaoccer/MobileFaceNet_Pytorch" -> "foamliu/MobileFaceNet"
"Xiaoccer/MobileFaceNet_Pytorch" -> "honghuCode/mobileFacenet-ncnn"
"Xiaoccer/MobileFaceNet_Pytorch" -> "MuggleWang/CosFace_pytorch"
"Xiaoccer/MobileFaceNet_Pytorch" -> "zma-c-137/VarGFaceNet"
"Xiaoccer/MobileFaceNet_Pytorch" -> "biubug6/Face-Detector-1MB-with-landmark"
"Xiaoccer/MobileFaceNet_Pytorch" -> "xuexingyu24/MobileFaceNet_Tutorial_Pytorch"
"Xiaoccer/MobileFaceNet_Pytorch" -> "cvtower/seesawfacenet_pytorch"
"Xiaoccer/MobileFaceNet_Pytorch" -> "moli232777144/mobilefacenet-mxnet"
"Xiaoccer/MobileFaceNet_Pytorch" -> "shoutOutYangJie/Face_Recognition_using_pytorch"
"Xiaoccer/MobileFaceNet_Pytorch" -> "supernotman/RetinaFace_Pytorch"
"clancylian/retinaface" -> "Charrin/RetinaFace-Cpp"
"clancylian/retinaface" -> "biubug6/Face-Detector-1MB-with-landmark"
"clancylian/retinaface" -> "PKUZHOU/MTCNN_FaceDetection_TensorRT"
"clancylian/retinaface" -> "szad670401/advanced-mxnet2caffe"
"clancylian/retinaface" -> "bleakie/CenterMulti"
"clancylian/retinaface" -> "azhe198827/retinaface_tensorRT"
"clancylian/retinaface" -> "supernotman/RetinaFace_Pytorch"
"clancylian/retinaface" -> "wzj5133329/retinaface_caffe"
"clancylian/retinaface" -> "hanson-young/nniefacelib"
"uam-biometrics/FaceQnet" -> "pterhoer/FaceImageQuality"
"uam-biometrics/FaceQnet" -> "yangyuke001/FIIQA-PyTorch"
"uam-biometrics/FaceQnet" -> "deepcam-cn/FaceQuality"
"uam-biometrics/FaceQnet" -> "seasonSH/Probabilistic-Face-Embeddings"
"uam-biometrics/FaceQnet" -> "pterhoer/QMagFace"
"uam-biometrics/FaceQnet" -> "BruceZhanKai/Face-Image-Quality-Assessment"
"uam-biometrics/FaceQnet" -> "zhanglijun95/FIIQA"
"uam-biometrics/FaceQnet" -> "Slinene/SDD-FIQA"
"uam-biometrics/FaceQnet" -> "fdbtrs/CR-FIQA"
"uam-biometrics/FaceQnet" -> "bleakie/MaskInsightface"
"uam-biometrics/FaceQnet" -> "chenjun2hao/CenterFace.pytorch"
"xialuxi/arcface-caffe" -> "gehaocool/CombinedMargin-caffe"
"xialuxi/arcface-caffe" -> "happynear/AMSoftmax"
"xialuxi/arcface-caffe" -> "zhanglaplace/MobileFaceNet"
"xialuxi/arcface-caffe" -> "blankWorld/MTCNN-Accelerate-Onet"
"xialuxi/arcface-caffe" -> "GarrickLin/MXNet2Caffe"
"xialuxi/arcface-caffe" -> "goodluckcwl/Face-alignment-mobilenet-v2"
"xialuxi/arcface-caffe" -> "xiaoboCASIA/SV-X-Softmax"
"xialuxi/arcface-caffe" -> "zuoqing1988/ZQCNN-v0.0"
"xialuxi/arcface-caffe" -> "moli232777144/mobilefacenet-mxnet"
"xialuxi/arcface-caffe" -> "Charrin/RetinaFace-Cpp"
"xialuxi/arcface-caffe" -> "yonghenglh6/DepthwiseConvolution" ["e"=1]
"xialuxi/arcface-caffe" -> "olojuwin/facerecognize-for-mobile-phone"
"xialuxi/arcface-caffe" -> "zeusees/FaceBoxes"
"xialuxi/arcface-caffe" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"xialuxi/arcface-caffe" -> "wy1iu/sphereface-plus"
"TheSouthFrog/stylealign" -> "protossw512/AdaptiveWingLoss"
"TheSouthFrog/stylealign" -> "KeqiangSun/FAB"
"TheSouthFrog/stylealign" -> "D-X-Y/landmark-detection"
"TheSouthFrog/stylealign" -> "wywu/ReenactGAN" ["e"=1]
"TheSouthFrog/stylealign" -> "TencentYoutuResearch/FaceAlignment-FHR"
"MrZhousf/tf_facenet" -> "WindZu/facenet_facerecognition"
"MrZhousf/tf_facenet" -> "bubbliiiing/keras-face-recognition" ["e"=1]
"MrZhousf/tf_facenet" -> "vincentwei0919/insightface_for_face_recognition"
"MrZhousf/tf_facenet" -> "LeslieZhoa/tensorflow-facenet"
"MrZhousf/tf_facenet" -> "Danbinabo/insighrface"
"dpressel/rude-carnie" -> "GilLevi/AgeGenderDeepLearning"
"dpressel/rude-carnie" -> "BoyuanJiang/Age-Gender-Estimate-TF"
"dpressel/rude-carnie" -> "yu4u/age-gender-estimation"
"dpressel/rude-carnie" -> "shamangary/SSR-Net"
"dpressel/rude-carnie" -> "abars/YoloKerasFaceDetection"
"dpressel/rude-carnie" -> "oarriaga/face_classification" ["e"=1]
"dpressel/rude-carnie" -> "RiweiChen/DeepFace"
"dpressel/rude-carnie" -> "Tony607/Keras_age_gender"
"dpressel/rude-carnie" -> "gliese581gg/YOLO_tensorflow" ["e"=1]
"dpressel/rude-carnie" -> "ZZUTK/Face-Aging-CAAE"
"dpressel/rude-carnie" -> "shanren7/real_time_face_recognition"
"dpressel/rude-carnie" -> "eveningglow/age-and-gender-classification"
"dpressel/rude-carnie" -> "arunponnusamy/gender-detection-keras"
"dpressel/rude-carnie" -> "AITTSMD/MTCNN-Tensorflow" ["e"=1]
"dpressel/rude-carnie" -> "mpatacchiola/deepgaze"
"ChiCheng123/SRN" -> "Goingqs/PyramidBox"
"ChiCheng123/SRN" -> "sfzhang15/SFD"
"ChiCheng123/SRN" -> "yxlijun/DSFD.pytorch"
"ChiCheng123/SRN" -> "yxlijun/Pyramidbox.pytorch"
"ChiCheng123/SRN" -> "rainofmine/Face_Attention_Network"
"ChiCheng123/SRN" -> "zisianw/FaceBoxes.PyTorch"
"ChiCheng123/SRN" -> "sfzhang15/FaceBoxes"
"ChiCheng123/SRN" -> "EricZgw/PyramidBox"
"ChiCheng123/SRN" -> "yxlijun/S3FD.pytorch"
"ChiCheng123/SRN" -> "Star-Clouds/centerface"
"ChiCheng123/SRN" -> "KimSoybean/ScratchDet" ["e"=1]
"ChiCheng123/SRN" -> "louis-she/sfd.pytorch"
"ChiCheng123/SRN" -> "TencentYoutuResearch/FaceDetection-DSFD" ["e"=1]
"ChiCheng123/SRN" -> "ywcmaike/2018--ZJUAI--PyramidBoxDetector"
"ChiCheng123/SRN" -> "OceanPang/Libra_R-CNN" ["e"=1]
"tkat0/PyTorch_BlazeFace" -> "shanglianlm0525/BlazeFace"
"tkat0/PyTorch_BlazeFace" -> "hollance/BlazeFace-PyTorch"
"tkat0/PyTorch_BlazeFace" -> "kentaroy47/BlazeFace_Person.pytorch"
"tkat0/PyTorch_BlazeFace" -> "xindongzhang/MNN-APPLICATIONS"
"vicwer/C3AE_Age_Estimation" -> "StevenBanama/C3AE"
"vicwer/C3AE_Age_Estimation" -> "b02901145/SSR-Net_megaage-asian"
"vicwer/C3AE_Age_Estimation" -> "shamangary/SSR-Net"
"yjh0410/PyTorch_YOLOv1" -> "yjh0410/PyTorch_YOLO-Family"
"AnthonyF333/FaceLandmark_PFLD_UltraLight" -> "AnthonyF333/PFLD_GhostOne"
"ElvishElvis/68-Retinaface-Pytorch-version" -> "supernotman/RetinaFace_Pytorch"
"ElvishElvis/68-Retinaface-Pytorch-version" -> "bogireddytejareddy/retinaface-pytorch"
"Hsintao/pfld_106_face_landmarks" -> "polarisZhao/PFLD-pytorch"
"Hsintao/pfld_106_face_landmarks" -> "github-luffy/PFLD_68points_Pytorch"
"Hsintao/pfld_106_face_landmarks" -> "guoqiangqi/PFLD"
"Hsintao/pfld_106_face_landmarks" -> "hanson-young/nniefacelib"
"Hsintao/pfld_106_face_landmarks" -> "szad670401/HyperLandmark"
"Hsintao/pfld_106_face_landmarks" -> "ainrichman/Peppa-Facial-Landmark-PyTorch"
"Hsintao/pfld_106_face_landmarks" -> "Single430/FaceLandmark1000"
"Hsintao/pfld_106_face_landmarks" -> "JACKYLUO1991/106-landmarks-dataset"
"Hsintao/pfld_106_face_landmarks" -> "Hsintao/pfld-ncnn"
"Hsintao/pfld_106_face_landmarks" -> "protossw512/AdaptiveWingLoss"
"Hsintao/pfld_106_face_landmarks" -> "jhb86253817/PIPNet"
"Hsintao/pfld_106_face_landmarks" -> "biubug6/Face-Detector-1MB-with-landmark"
"Hsintao/pfld_106_face_landmarks" -> "AnthonyF333/FaceLandmark_PFLD_UltraLight"
"Hsintao/pfld_106_face_landmarks" -> "cunjian/pytorch_face_landmark"
"Hsintao/pfld_106_face_landmarks" -> "ideask/A-Practical-Facial-Landmark-Detector"
"JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection" -> "Aristochi/Dangerous_driving_behavior_detection"
"JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection" -> "PengfeiM/Fatigue-Driven-Detection-Based-on-CNN"
"JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection" -> "omnigeeker/mlnd_distracted_driver_detection"
"JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection" -> "DohaerisT/DangerousDrivingDetector"
"github-luffy/PFLD_68points_Pytorch" -> "polarisZhao/PFLD-pytorch"
"github-luffy/PFLD_68points_Pytorch" -> "Hsintao/pfld_106_face_landmarks"
"github-luffy/PFLD_68points_Pytorch" -> "guoqiangqi/PFLD"
"github-luffy/PFLD_68points_Pytorch" -> "AnthonyF333/FaceLandmark_PFLD_UltraLight"
"github-luffy/PFLD_68points_Pytorch" -> "hanson-young/nniefacelib"
"github-luffy/PFLD_68points_Pytorch" -> "cunjian/pytorch_face_landmark"
"github-luffy/PFLD_68points_Pytorch" -> "protossw512/AdaptiveWingLoss"
"github-luffy/PFLD_68points_Pytorch" -> "ainrichman/Peppa-Facial-Landmark-PyTorch"
"github-luffy/PFLD_68points_Pytorch" -> "HRNet/HRNet-Facial-Landmark-Detection"
"github-luffy/PFLD_68points_Pytorch" -> "jhb86253817/PIPNet"
"github-luffy/PFLD_68points_Pytorch" -> "biubug6/Face-Detector-1MB-with-landmark"
"github-luffy/PFLD_68points_Pytorch" -> "szad670401/HyperLandmark"
"github-luffy/PFLD_68points_Pytorch" -> "Charrin/RetinaFace-Cpp"
"github-luffy/PFLD_68points_Pytorch" -> "JDAI-CV/lapa-dataset" ["e"=1]
"github-luffy/PFLD_68points_Pytorch" -> "bleakie/CenterMulti"
"jhb86253817/PIPNet" -> "DefTruth/torchlm"
"jhb86253817/PIPNet" -> "polarisZhao/PFLD-pytorch"
"jhb86253817/PIPNet" -> "Jiahao-UTS/SLPT-master"
"jhb86253817/PIPNet" -> "Hsintao/pfld_106_face_landmarks"
"jhb86253817/PIPNet" -> "nothingelse92/AnchorFace"
"jhb86253817/PIPNet" -> "choyingw/SynergyNet" ["e"=1]
"jhb86253817/PIPNet" -> "HRNet/HRNet-Facial-Landmark-Detection"
"jhb86253817/PIPNet" -> "JDAI-CV/lapa-dataset" ["e"=1]
"jhb86253817/PIPNet" -> "ainrichman/Peppa-Facial-Landmark-PyTorch"
"jhb86253817/PIPNet" -> "protossw512/AdaptiveWingLoss"
"jhb86253817/PIPNet" -> "github-luffy/PFLD_68points_Pytorch"
"jhb86253817/PIPNet" -> "thohemp/6DRepNet"
"szad670401/HyperLandmark" -> "Hsintao/pfld_106_face_landmarks"
"szad670401/HyperLandmark" -> "chengzhengxin/deep-sdm"
"szad670401/HyperLandmark" -> "github-luffy/PFLD_68points_Pytorch"
"szad670401/HyperLandmark" -> "Single430/FaceLandmark1000"
"szad670401/HyperLandmark" -> "polarisZhao/PFLD-pytorch"
"610265158/Peppa_Pig_Face_Engine" -> "610265158/face_landmark"
"610265158/Peppa_Pig_Face_Engine" -> "guoqiangqi/PFLD"
"610265158/Peppa_Pig_Face_Engine" -> "facebookresearch/supervision-by-registration"
"610265158/Peppa_Pig_Face_Engine" -> "Star-Clouds/FRDA"
"610265158/Peppa_Pig_Face_Engine" -> "polarisZhao/PFLD-pytorch"
"610265158/Peppa_Pig_Face_Engine" -> "Hsintao/pfld_106_face_landmarks"
"610265158/Peppa_Pig_Face_Engine" -> "wywu/LAB"
"610265158/Peppa_Pig_Face_Engine" -> "biubug6/Face-Detector-1MB-with-landmark"
"610265158/Peppa_Pig_Face_Engine" -> "zeusees/HyperLandmark"
"610265158/Peppa_Pig_Face_Engine" -> "Star-Clouds/CenterFace"
"610265158/Peppa_Pig_Face_Engine" -> "D-X-Y/landmark-detection"
"610265158/Peppa_Pig_Face_Engine" -> "protossw512/AdaptiveWingLoss"
"610265158/Peppa_Pig_Face_Engine" -> "hanson-young/nniefacelib"
"610265158/Peppa_Pig_Face_Engine" -> "cunjian/pytorch_face_landmark"
"610265158/Peppa_Pig_Face_Engine" -> "mrgloom/Face-landmarks-detection-benchmark"
"zeusees/HyperFAS" -> "minivision-ai/Silent-Face-Anti-Spoofing"
"zeusees/HyperFAS" -> "ZitongYu/CDCN"
"zeusees/HyperFAS" -> "JinghuiZhou/awesome_face_antispoofing"
"zeusees/HyperFAS" -> "SeuTao/CVPR19-Face-Anti-spoofing"
"zeusees/HyperFAS" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019"
"zeusees/HyperFAS" -> "RizhaoCai/Awesome-FAS"
"zeusees/HyperFAS" -> "deepcam-cn/Face-Anti-spoofing.pytorch"
"zeusees/HyperFAS" -> "Davidzhangyuanhan/CelebA-Spoof"
"zeusees/HyperFAS" -> "clks-wzz/FAS-SGTD"
"zeusees/HyperFAS" -> "yaojieliu/ECCV20-STDN"
"zeusees/HyperFAS" -> "AlexanderParkin/ChaLearn_liveness_challenge"
"zeusees/HyperFAS" -> "ee09115/spoofing_detection"
"zeusees/HyperFAS" -> "zeusees/Zeusee-Face-Anti-spoofing"
"zeusees/HyperFAS" -> "houliang428/CNN-for-face-anti-spoofing"
"zeusees/HyperFAS" -> "Hsintao/pfld_106_face_landmarks"
"shamangary/FSA-Net" -> "natanielruiz/deep-head-pose"
"shamangary/FSA-Net" -> "haofanwang/accurate-head-pose"
"shamangary/FSA-Net" -> "yinguobing/head-pose-estimation"
"shamangary/FSA-Net" -> "OverEuro/deep-head-pose-lite"
"shamangary/FSA-Net" -> "shamangary/SSR-Net"
"shamangary/FSA-Net" -> "vitoralbiero/img2pose"
"shamangary/FSA-Net" -> "omasaht/headpose-fsanet-pytorch"
"shamangary/FSA-Net" -> "WIKI2020/FacePose_pytorch"
"shamangary/FSA-Net" -> "polarisZhao/PFLD-pytorch"
"shamangary/FSA-Net" -> "guoqiangqi/PFLD"
"shamangary/FSA-Net" -> "Tobias-Fischer/rt_gene"
"shamangary/FSA-Net" -> "Ascend-Research/HeadPoseEstimation-WHENet"
"shamangary/FSA-Net" -> "lincolnhard/head-pose-estimation"
"shamangary/FSA-Net" -> "biubug6/Face-Detector-1MB-with-landmark"
"shamangary/FSA-Net" -> "D-X-Y/landmark-detection"
"stepacool/Eye-Tracker" -> "antoinelame/GazeTracking"
"stepacool/Eye-Tracker" -> "esdalmaijer/webcam-eyetracker"
"stepacool/Eye-Tracker" -> "esdalmaijer/PyGaze"
"stepacool/Eye-Tracker" -> "hugochan/Eye-Tracker"
"stepacool/Eye-Tracker" -> "YutaItoh/3D-Eye-Tracker"
"stepacool/Eye-Tracker" -> "kcmahip/opencv-eye-tracking"
"D-X-Y/SAN" -> "facebookresearch/supervision-by-registration"
"D-X-Y/SAN" -> "shaoxiaohu/Face_Alignment_Two_Stage_Re-initialization"
"D-X-Y/SAN" -> "zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment"
"D-X-Y/SAN" -> "D-X-Y/MSPLD-2018"
"D-X-Y/SAN" -> "MarekKowalski/DeepAlignmentNetwork"
"D-X-Y/SAN" -> "mariolew/Deep-Alignment-Network-tensorflow"
"D-X-Y/SAN" -> "zhiqiangdon/CU-Net"
"D-X-Y/SAN" -> "fengju514/Face-Pose-Net" ["e"=1]
"D-X-Y/SAN" -> "tyshiwo/FHR_alignment"
"D-X-Y/SAN" -> "mrgloom/Face-landmarks-detection-benchmark"
"D-X-Y/SAN" -> "zhusz/CVPR15-CFSS"
"D-X-Y/SAN" -> "1adrianb/binary-human-pose-estimation" ["e"=1]
"D-X-Y/SAN" -> "D-X-Y/GDAS" ["e"=1]
"D-X-Y/SAN" -> "wywu/LAB"
"D-X-Y/SAN" -> "FengZhenhua/Wing-Loss"
"omnigeeker/mlnd_distracted_driver_detection" -> "PengfeiM/Fatigue-Driven-Detection-Based-on-CNN"
"omnigeeker/mlnd_distracted_driver_detection" -> "Aristochi/Dangerous_driving_behavior_detection"
"omnigeeker/mlnd_distracted_driver_detection" -> "Revan-github/Fatigue-Driven-Detection-Based-on-CNN"
"omnigeeker/mlnd_distracted_driver_detection" -> "DohaerisT/DangerousDrivingDetector"
"omnigeeker/mlnd_distracted_driver_detection" -> "JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection"
"omnigeeker/mlnd_distracted_driver_detection" -> "toshi-k/kaggle-distracted-driver-detection"
"omnigeeker/mlnd_distracted_driver_detection" -> "kc345ws/FatigueMonitoring"
"omnigeeker/mlnd_distracted_driver_detection" -> "luisarojas/distracted-driver-detection"
"omnigeeker/mlnd_distracted_driver_detection" -> "fomorians/distracted-drivers-keras" ["e"=1]
"omnigeeker/mlnd_distracted_driver_detection" -> "oswaldoludwig/Human-Action-Recognition-with-Keras" ["e"=1]
"omnigeeker/mlnd_distracted_driver_detection" -> "rikichou/distracted-driving-detection"
"omnigeeker/mlnd_distracted_driver_detection" -> "ISS-Kerui/Bus-Driver-Behavior-Detection"
"EricZgw/PyramidBox" -> "Goingqs/PyramidBox"
"EricZgw/PyramidBox" -> "sfzhang15/SFD"
"EricZgw/PyramidBox" -> "ChiCheng123/SRN"
"EricZgw/PyramidBox" -> "mahyarnajibi/SSH"
"EricZgw/PyramidBox" -> "zeusees/FaceBoxes"
"EricZgw/PyramidBox" -> "bairdzhang/smallhardface"
"EricZgw/PyramidBox" -> "cydonia999/Tiny_Faces_in_Tensorflow"
"EricZgw/PyramidBox" -> "wondervictor/WiderFace-Evaluation"
"EricZgw/PyramidBox" -> "yxlijun/S3FD.pytorch"
"Goingqs/PyramidBox" -> "yxlijun/Pyramidbox.pytorch"
"Goingqs/PyramidBox" -> "EricZgw/PyramidBox"
"Goingqs/PyramidBox" -> "yxlijun/DSFD.pytorch"
"Goingqs/PyramidBox" -> "ChiCheng123/SRN"
"Goingqs/PyramidBox" -> "sfzhang15/SFD"
"Goingqs/PyramidBox" -> "bairdzhang/smallhardface"
"Goingqs/PyramidBox" -> "dechunwang/SSH-pytorch"
"Goingqs/PyramidBox" -> "clcarwin/SFD_pytorch"
"Goingqs/PyramidBox" -> "yxlijun/S3FD.pytorch"
"Goingqs/PyramidBox" -> "zeusees/FaceBoxes"
"Goingqs/PyramidBox" -> "mahyarnajibi/SSH"
"Goingqs/PyramidBox" -> "wondervictor/WiderFace-Evaluation"
"bairdzhang/smallhardface" -> "wondervictor/WiderFace-Evaluation"
"bairdzhang/smallhardface" -> "power0341/RSA_pycaffe"
"bairdzhang/smallhardface" -> "Goingqs/PyramidBox"
"bairdzhang/smallhardface" -> "sfzhang15/SFD"
"browatbn2/3FabRec" -> "seathiefwang/RankPose"
"yxlijun/Pyramidbox.pytorch" -> "Goingqs/PyramidBox"
"yxlijun/Pyramidbox.pytorch" -> "yxlijun/DSFD.pytorch"
"yxlijun/Pyramidbox.pytorch" -> "jianzhnie/pyramidbox_pytorch"
"yxlijun/Pyramidbox.pytorch" -> "yxlijun/S3FD.pytorch"
"yxlijun/Pyramidbox.pytorch" -> "ChiCheng123/SRN"
"yxlijun/S3FD.pytorch" -> "yxlijun/DSFD.pytorch"
"yxlijun/S3FD.pytorch" -> "sfzhang15/SFD"
"yxlijun/S3FD.pytorch" -> "yxlijun/Pyramidbox.pytorch"
"yxlijun/S3FD.pytorch" -> "louis-she/sfd.pytorch"
"yxlijun/S3FD.pytorch" -> "clcarwin/SFD_pytorch"
"yxlijun/S3FD.pytorch" -> "clovaai/EXTD_Pytorch"
"yxlijun/S3FD.pytorch" -> "Goingqs/PyramidBox"
"yxlijun/S3FD.pytorch" -> "luuuyi/S3FD.PyTorch"
"yxlijun/S3FD.pytorch" -> "ChiCheng123/SRN"
"yxlijun/S3FD.pytorch" -> "mahyarnajibi/SSH"
"yxlijun/S3FD.pytorch" -> "lijiannuist/lightDSFD"
"zisianw/FaceBoxes.PyTorch" -> "sfzhang15/FaceBoxes"
"zisianw/FaceBoxes.PyTorch" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"zisianw/FaceBoxes.PyTorch" -> "ChiCheng123/SRN"
"zisianw/FaceBoxes.PyTorch" -> "biubug6/Pytorch_Retinaface"
"zisianw/FaceBoxes.PyTorch" -> "TropComplique/FaceBoxes-tensorflow"
"zisianw/FaceBoxes.PyTorch" -> "TencentYoutuResearch/FaceDetection-DSFD" ["e"=1]
"zisianw/FaceBoxes.PyTorch" -> "ZhaoJ9014/face.evoLVe.PyTorch"
"zisianw/FaceBoxes.PyTorch" -> "zeusees/FaceBoxes"
"zisianw/FaceBoxes.PyTorch" -> "sfzhang15/SFD"
"zisianw/FaceBoxes.PyTorch" -> "Star-Clouds/CenterFace"
"zisianw/FaceBoxes.PyTorch" -> "mahyarnajibi/SSH"
"zisianw/FaceBoxes.PyTorch" -> "TropComplique/mtcnn-pytorch"
"zisianw/FaceBoxes.PyTorch" -> "cleardusk/3DDFA" ["e"=1]
"zisianw/FaceBoxes.PyTorch" -> "TreB1eN/InsightFace_Pytorch"
"zisianw/FaceBoxes.PyTorch" -> "biubug6/Face-Detector-1MB-with-landmark"
"RiweiChen/DeepFace" -> "ydwen/caffe-face"
"RiweiChen/DeepFace" -> "betars/Face-Resources"
"RiweiChen/DeepFace" -> "AlfredXiangWu/face_verification_experiment"
"RiweiChen/DeepFace" -> "kpzhang93/MTCNN_face_detection_alignment" ["e"=1]
"RiweiChen/DeepFace" -> "happynear/FaceVerification"
"RiweiChen/DeepFace" -> "wy1iu/sphereface"
"RiweiChen/DeepFace" -> "RiweiChen/FaceTools"
"RiweiChen/DeepFace" -> "hqli/face_recognition"
"RiweiChen/DeepFace" -> "CongWeilin/mtcnn-caffe"
"RiweiChen/DeepFace" -> "stdcoutzyx/DeepID_FaceClassify"
"RiweiChen/DeepFace" -> "seetaface/SeetaFaceEngine" ["e"=1]
"RiweiChen/DeepFace" -> "Seanlinx/mtcnn"
"RiweiChen/DeepFace" -> "dlunion/mtcnn"
"RiweiChen/DeepFace" -> "tornadomeet/mxnet-face"
"RiweiChen/DeepFace" -> "shanren7/real_time_face_recognition"
"betars/Face-Resources" -> "ydwen/caffe-face"
"betars/Face-Resources" -> "AlfredXiangWu/face_verification_experiment"
"betars/Face-Resources" -> "RiweiChen/DeepFace"
"betars/Face-Resources" -> "happynear/FaceVerification"
"betars/Face-Resources" -> "wy1iu/sphereface"
"betars/Face-Resources" -> "tornadomeet/mxnet-face"
"betars/Face-Resources" -> "kpzhang93/MTCNN_face_detection_alignment" ["e"=1]
"betars/Face-Resources" -> "happynear/NormFace"
"betars/Face-Resources" -> "zeusees/FaceBoxes"
"betars/Face-Resources" -> "RiweiChen/FaceTools"
"betars/Face-Resources" -> "cyh24/Joint-Bayesian"
"betars/Face-Resources" -> "AlphaQi/MTCNN-light"
"betars/Face-Resources" -> "yulequan/face-alignment-in-3000fps"
"betars/Face-Resources" -> "iacopomasi/face_specific_augm" ["e"=1]
"betars/Face-Resources" -> "CongWeilin/mtcnn-caffe"
"Mjrovai/OpenCV-Face-Recognition" -> "Mjrovai/OpenCV-Object-Face-Tracking"
"Mjrovai/OpenCV-Face-Recognition" -> "informramiz/opencv-face-recognition-python"
"Mjrovai/OpenCV-Face-Recognition" -> "neha01/FaceRecognition"
"Mjrovai/OpenCV-Face-Recognition" -> "jerry1900/faceRecognition"
"Mjrovai/OpenCV-Face-Recognition" -> "kmhmubin/Face-Recognition-Attendance-System" ["e"=1]
"Mjrovai/OpenCV-Face-Recognition" -> "shanren7/real_time_face_recognition"
"Mjrovai/OpenCV-Face-Recognition" -> "nazmiasri95/Face-Recognition"
"Mjrovai/OpenCV-Face-Recognition" -> "thecodacus/Face-Recognition"
"Mjrovai/OpenCV-Face-Recognition" -> "coneypo/Dlib_face_recognition_from_camera"
"Mjrovai/OpenCV-Face-Recognition" -> "makelove/OpenCV-Python-Tutorial" ["e"=1]
"Mjrovai/OpenCV-Face-Recognition" -> "joeVenner/FaceRecognition-GUI-APP"
"Mjrovai/OpenCV-Face-Recognition" -> "ChanChiChoi/awesome-Face_Recognition" ["e"=1]
"Mjrovai/OpenCV-Face-Recognition" -> "arunponnusamy/object-detection-opencv"
"Mjrovai/OpenCV-Face-Recognition" -> "ZhaoJ9014/face.evoLVe.PyTorch"
"Mjrovai/OpenCV-Face-Recognition" -> "habrman/FaceRecognition"
"steponteam/FaceRecognization" -> "ArcsoftEscErd/ArcfaceDemo_CSharp"
"steponteam/FaceRecognization" -> "catzhou2002/ArcFaceDemo"
"steponteam/FaceRecognization" -> "smartkids77/ArcSoft_FreeSDK_Demo"
"JinghuiZhou/awesome_face_antispoofing" -> "SeuTao/CVPR19-Face-Anti-spoofing"
"JinghuiZhou/awesome_face_antispoofing" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019"
"JinghuiZhou/awesome_face_antispoofing" -> "OeslleLucena/FASNet"
"JinghuiZhou/awesome_face_antispoofing" -> "AlexanderParkin/ChaLearn_liveness_challenge"
"JinghuiZhou/awesome_face_antispoofing" -> "zboulkenafet/Face-anti-spoofing-based-on-color-texture-analysis"
"JinghuiZhou/awesome_face_antispoofing" -> "houliang428/CNN-for-face-anti-spoofing"
"JinghuiZhou/awesome_face_antispoofing" -> "clks-wzz/FAS-SGTD"
"JinghuiZhou/awesome_face_antispoofing" -> "ee09115/spoofing_detection"
"JinghuiZhou/awesome_face_antispoofing" -> "zeusees/Zeusee-Face-Anti-spoofing"
"JinghuiZhou/awesome_face_antispoofing" -> "zzzkk2009/casia-surf-2019-codes"
"JinghuiZhou/awesome_face_antispoofing" -> "zeusees/HyperFAS"
"JinghuiZhou/awesome_face_antispoofing" -> "mnikitin/Learn-Convolutional-Neural-Network-for-Face-Anti-Spoofing"
"JinghuiZhou/awesome_face_antispoofing" -> "deepcam-cn/Face-Anti-spoofing.pytorch"
"JinghuiZhou/awesome_face_antispoofing" -> "yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing"
"JinghuiZhou/awesome_face_antispoofing" -> "ZitongYu/CDCN"
"biubug6/Face-Detector-1MB-with-landmark" -> "biubug6/Pytorch_Retinaface"
"biubug6/Face-Detector-1MB-with-landmark" -> "polarisZhao/PFLD-pytorch"
"biubug6/Face-Detector-1MB-with-landmark" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"biubug6/Face-Detector-1MB-with-landmark" -> "Star-Clouds/CenterFace"
"biubug6/Face-Detector-1MB-with-landmark" -> "hanson-young/nniefacelib"
"biubug6/Face-Detector-1MB-with-landmark" -> "guoqiangqi/PFLD"
"biubug6/Face-Detector-1MB-with-landmark" -> "Charrin/RetinaFace-Cpp"
"biubug6/Face-Detector-1MB-with-landmark" -> "dlunion/DBFace"
"biubug6/Face-Detector-1MB-with-landmark" -> "minivision-ai/Silent-Face-Anti-Spoofing"
"biubug6/Face-Detector-1MB-with-landmark" -> "supernotman/RetinaFace_Pytorch"
"biubug6/Face-Detector-1MB-with-landmark" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" ["e"=1]
"biubug6/Face-Detector-1MB-with-landmark" -> "olojuwin/facerecognize-for-mobile-phone"
"biubug6/Face-Detector-1MB-with-landmark" -> "deepcam-cn/yolov5-face" ["e"=1]
"biubug6/Face-Detector-1MB-with-landmark" -> "clancylian/retinaface"
"biubug6/Face-Detector-1MB-with-landmark" -> "MirrorYuChen/ncnn_example"
"bleakie/CenterMulti" -> "tensorboy/centerpose"
"bleakie/CenterMulti" -> "chenjun2hao/CenterFace.pytorch"
"bleakie/CenterMulti" -> "jinfagang/CenterNet_Pro_Max" ["e"=1]
"bleakie/CenterMulti" -> "CaoWGG/TensorRT-CenterNet" ["e"=1]
"bleakie/CenterMulti" -> "bleakie/MaskInsightface"
"bleakie/CenterMulti" -> "siriusdemon/Build-Your-Own-Face-Model"
"bleakie/CenterMulti" -> "clancylian/retinaface"
"bleakie/CenterMulti" -> "Star-Clouds/CenterFace"
"bleakie/CenterMulti" -> "FateScript/CenterNet-better" ["e"=1]
"bleakie/CenterMulti" -> "olojuwin/facerecognize-for-mobile-phone"
"bleakie/CenterMulti" -> "HiBugs/CenterNet"
"bleakie/CenterMulti" -> "xggIoU/centernet_tensorflow_wilderface_voc" ["e"=1]
"clks-wzz/PRNet-Depth-Generation" -> "clks-wzz/FAS-SGTD"
"clks-wzz/PRNet-Depth-Generation" -> "deepcam-cn/Face-Anti-spoofing.pytorch"
"clks-wzz/PRNet-Depth-Generation" -> "rshaojimmy/AAAI2020-RFMetaFAS"
"clks-wzz/PRNet-Depth-Generation" -> "taylover-pei/SSDG-CVPR2020"
"clks-wzz/PRNet-Depth-Generation" -> "ZitongYu/CDCN"
"clks-wzz/PRNet-Depth-Generation" -> "VIS-VAR/LGSC-for-FAS"
"clks-wzz/PRNet-Depth-Generation" -> "qyxqyx/AIM_FAS"
"clks-wzz/PRNet-Depth-Generation" -> "yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing"
"clks-wzz/PRNet-Depth-Generation" -> "rshaojimmy/CVPR2019-MADDoG"
"kentaroy47/BlazeFace_Person.pytorch" -> "nszjh/ssd_blazeface.pytorch"
"tensorboy/centerpose" -> "bleakie/CenterMulti"
"tensorboy/centerpose" -> "jialee93/Improved-Body-Parts" ["e"=1]
"tensorboy/centerpose" -> "CaoWGG/TensorRT-CenterNet" ["e"=1]
"tensorboy/centerpose" -> "jinfagang/CenterNet_Pro_Max" ["e"=1]
"tensorboy/centerpose" -> "chenjun2hao/CenterFace.pytorch"
"tensorboy/centerpose" -> "ilovepose/DarkPose" ["e"=1]
"tensorboy/centerpose" -> "ilovepose/fast-human-pose-estimation.pytorch" ["e"=1]
"tensorboy/centerpose" -> "HRNet/Higher-HRNet-Human-Pose-Estimation" ["e"=1]
"Reginer/aosp-android-jar" -> "Reginer/MVVMHub"
"Reginer/aosp-android-jar" -> "aeab13/android-jar-with-hidden-api"
"Reginer/aosp-android-jar" -> "yuxitong/AndroidLivePusher"
"yuxitong/TensorFlowAndroidDemo" -> "yuxitong/AutoMarKingTensorFlowPython"
"yuxitong/TensorFlowAndroidDemo" -> "kongqw/OpenCVForAndroid"
"yuxitong/TensorFlowAndroidDemo" -> "sxpl/FaceAC"
"yuxitong/TensorFlowAndroidDemo" -> "tz28/Chinese-number-gestures-recognition" ["e"=1]
"yuxitong/TensorFlowAndroidDemo" -> "ISS-Kerui/Bus-Driver-Behavior-Detection"
"yuxitong/TensorFlowAndroidDemo" -> "Reginer/MVVMHub"
"yuxitong/TensorFlowAndroidDemo" -> "yuxitong/AndroidLivePusher"
"yuxitong/TensorFlowAndroidDemo" -> "vcvycy/MTCNN4Android"
"yuxitong/TensorFlowAndroidDemo" -> "yuxitong/TimeView"
"yuxitong/TensorFlowAndroidDemo" -> "wanliyang1990/wlmusic" ["e"=1]
"yuxitong/TensorFlowAndroidDemo" -> "omnigeeker/mlnd_distracted_driver_detection"
"yuxitong/TensorFlowAndroidDemo" -> "zeusees/HyperFAS"
"opencv/opencv_zoo" -> "ShiqiYu/libfacedetection.train"
"opencv/opencv_zoo" -> "Kazuhito00/Skin-Clothes-Hair-Segmentation-using-SMP"
"SamYuen101234/Masked_Face_Recognition" -> "sachith500/MaskedFaceRepresentation"
"SamYuen101234/Masked_Face_Recognition" -> "fdbtrs/Self-restrained-Triplet-Loss"
"SamYuen101234/Masked_Face_Recognition" -> "Ultraleow/Masked-Face-Recognition"
"SamYuen101234/Masked_Face_Recognition" -> "levanquoc/masked-face-recognition"
"SamYuen101234/Masked_Face_Recognition" -> "jerryuhoo/Masked-Face-Recognition"
"Tencent/ObjectDetection-OneStageDet" -> "Tencent/FaceDetection-DSFD"
"happynear/FaceVerification" -> "happynear/NormFace"
"happynear/FaceVerification" -> "AlfredXiangWu/face_verification_experiment"
"happynear/FaceVerification" -> "ydwen/caffe-face"
"happynear/FaceVerification" -> "happynear/AMSoftmax"
"happynear/FaceVerification" -> "sciencefans/coco_loss"
"happynear/FaceVerification" -> "wy1iu/sphereface"
"happynear/FaceVerification" -> "tornadomeet/mxnet-face"
"happynear/FaceVerification" -> "happynear/MTCNN_face_detection_alignment"
"happynear/FaceVerification" -> "cyh24/Joint-Bayesian"
"happynear/FaceVerification" -> "sciencefans/RSA-for-object-detection"
"happynear/FaceVerification" -> "happynear/FaceDatasets"
"happynear/FaceVerification" -> "hqli/face_recognition"
"happynear/FaceVerification" -> "betars/Face-Resources"
"happynear/FaceVerification" -> "stdcoutzyx/DeepID_FaceClassify"
"happynear/FaceVerification" -> "dlunion/mtcnn"
"ryanlintott/SSVEP_keyboard" -> "nwayt001/SSVEP_Speller"
"friendlyarm/sd-fuse_rk3399" -> "friendlyarm/kernel-rockchip"
"AlfredXiangWu/face_verification_experiment" -> "happynear/FaceVerification"
"AlfredXiangWu/face_verification_experiment" -> "ydwen/caffe-face"
"AlfredXiangWu/face_verification_experiment" -> "wy1iu/sphereface"
"AlfredXiangWu/face_verification_experiment" -> "happynear/NormFace"
"AlfredXiangWu/face_verification_experiment" -> "AlfredXiangWu/LightCNN"
"AlfredXiangWu/face_verification_experiment" -> "betars/Face-Resources"
"AlfredXiangWu/face_verification_experiment" -> "tornadomeet/mxnet-face"
"AlfredXiangWu/face_verification_experiment" -> "RiweiChen/DeepFace"
"AlfredXiangWu/face_verification_experiment" -> "kpzhang93/MTCNN_face_detection_alignment" ["e"=1]
"AlfredXiangWu/face_verification_experiment" -> "Seanlinx/mtcnn"
"AlfredXiangWu/face_verification_experiment" -> "dlunion/mtcnn"
"AlfredXiangWu/face_verification_experiment" -> "sciencefans/RSA-for-object-detection"
"AlfredXiangWu/face_verification_experiment" -> "happynear/MTCNN_face_detection_alignment"
"AlfredXiangWu/face_verification_experiment" -> "AlphaQi/MTCNN-light"
"AlfredXiangWu/face_verification_experiment" -> "happynear/AMSoftmax"
"AISangam/Facenet-Real-time-face-recognition-using-deep-learning-Tensorflow" -> "akshaybahadur21/Facial-Recognition-using-Facenet" ["e"=1]
"AISangam/Facenet-Real-time-face-recognition-using-deep-learning-Tensorflow" -> "bearsprogrammer/real-time-deep-face-recognition"
"AISangam/Facenet-Real-time-face-recognition-using-deep-learning-Tensorflow" -> "sumantrajoshi/Face-recognition-using-deep-learning"
"AISangam/Facenet-Real-time-face-recognition-using-deep-learning-Tensorflow" -> "Skuldur/facenet-face-recognition"
"AISangam/Facenet-Real-time-face-recognition-using-deep-learning-Tensorflow" -> "arsfutura/face-recognition"
"qidiso/termux-gui" -> "qidiso/mobilefacenet-V2"
"qidiso/termux-gui" -> "qidiso/mxnet-retrain"
"qidiso/termux-gui" -> "nacos-group/grpc-java-registry-nacos" ["e"=1]
"qidiso/termux-gui" -> "yulonghu/asf" ["e"=1]
"prlz77/vgg-face.pytorch" -> "yzhang559/vgg-face"
"aqeelanwar/MaskTheFace" -> "X-zhangyang/Real-World-Masked-Face-Dataset"
"aqeelanwar/MaskTheFace" -> "cabani/MaskedFace-Net"
"aqeelanwar/MaskTheFace" -> "JDAI-CV/FaceX-Zoo"
"aqeelanwar/MaskTheFace" -> "SamYuen101234/Masked_Face_Recognition"
"aqeelanwar/MaskTheFace" -> "pterhoer/FaceImageQuality"
"aqeelanwar/MaskTheFace" -> "cavalleria/cavaface.pytorch"
"aqeelanwar/MaskTheFace" -> "IrvingMeng/MagFace"
"aqeelanwar/MaskTheFace" -> "Davidzhangyuanhan/CelebA-Spoof"
"aqeelanwar/MaskTheFace" -> "Tencent/TFace"
"aqeelanwar/MaskTheFace" -> "HuangYG123/CurricularFace"
"aqeelanwar/MaskTheFace" -> "broutonlab/face-id-with-medical-masks"
"aqeelanwar/MaskTheFace" -> "mk-minchul/AdaFace"
"aqeelanwar/MaskTheFace" -> "fdbtrs/ElasticFace"
"aqeelanwar/MaskTheFace" -> "minivision-ai/Silent-Face-Anti-Spoofing"
"aqeelanwar/MaskTheFace" -> "biubug6/Face-Detector-1MB-with-landmark"
"chandrikadeb7/Face-Mask-Detection" -> "AIZOOTech/FaceMaskDetection"
"chandrikadeb7/Face-Mask-Detection" -> "balajisrinivas/Face-Mask-Detection"
"chandrikadeb7/Face-Mask-Detection" -> "Spidy20/face_mask_detection"
"chandrikadeb7/Face-Mask-Detection" -> "X-zhangyang/Real-World-Masked-Face-Dataset"
"chandrikadeb7/Face-Mask-Detection" -> "prajnasb/observations"
"chandrikadeb7/Face-Mask-Detection" -> "cabani/MaskedFace-Net"
"chandrikadeb7/Face-Mask-Detection" -> "aqeelanwar/MaskTheFace"
"chandrikadeb7/Face-Mask-Detection" -> "Karan-Malik/FaceMaskDetector"
"chandrikadeb7/Face-Mask-Detection" -> "aieml/face-mask-detection-keras"
"chandrikadeb7/Face-Mask-Detection" -> "mk-gurucharan/Face-Mask-Detection"
"chandrikadeb7/Face-Mask-Detection" -> "adityap27/face-mask-detector"
"chandrikadeb7/Face-Mask-Detection" -> "serengil/deepface" ["e"=1]
"chandrikadeb7/Face-Mask-Detection" -> "NVIDIA-AI-IOT/face-mask-detection" ["e"=1]
"chandrikadeb7/Face-Mask-Detection" -> "timesler/facenet-pytorch" ["e"=1]
"chandrikadeb7/Face-Mask-Detection" -> "Ank-Cha/Social-Distancing-Analyser-COVID-19" ["e"=1]
"fdbtrs/ElasticFace" -> "pterhoer/QMagFace"
"fdbtrs/ElasticFace" -> "fdbtrs/Masked-Face-Recognition-KD"
"fdbtrs/ElasticFace" -> "fdbtrs/QuantFace"
"fdbtrs/ElasticFace" -> "fdbtrs/CR-FIQA"
"fdbtrs/ElasticFace" -> "fdbtrs/mixfacenets"
"fdbtrs/ElasticFace" -> "meilfang/LMFD-PAD"
"fdbtrs/ElasticFace" -> "fdbtrs/SFace-Privacy-friendly-and-Accurate-Face-Recognition-using-Synthetic-Data"
"fdbtrs/Masked-Face-Recognition-KD" -> "meilfang/SynthASpoof"
"fdbtrs/Masked-Face-Recognition-KD" -> "NetoPedro/FocusFace"
"shanren7/real_time_face_recognition" -> "kpzhang93/MTCNN_face_detection_alignment" ["e"=1]
"shanren7/real_time_face_recognition" -> "bearsprogrammer/real-time-deep-face-recognition"
"shanren7/real_time_face_recognition" -> "Seanlinx/mtcnn"
"shanren7/real_time_face_recognition" -> "AITTSMD/MTCNN-Tensorflow" ["e"=1]
"shanren7/real_time_face_recognition" -> "wy1iu/sphereface"
"shanren7/real_time_face_recognition" -> "ydwen/caffe-face"
"shanren7/real_time_face_recognition" -> "pangyupo/mxnet_mtcnn_face_detection"
"shanren7/real_time_face_recognition" -> "WindZu/facenet_facerecognition"
"shanren7/real_time_face_recognition" -> "AlphaQi/MTCNN-light"
"shanren7/real_time_face_recognition" -> "yobibyte/yobiface"
"shanren7/real_time_face_recognition" -> "davidsandberg/facenet" ["e"=1]
"shanren7/real_time_face_recognition" -> "auroua/InsightFace_TF"
"shanren7/real_time_face_recognition" -> "RiweiChen/DeepFace"
"shanren7/real_time_face_recognition" -> "boyliwensheng/understand_facenet"
"shanren7/real_time_face_recognition" -> "dlunion/mtcnn"
"happynear/caffe-windows" -> "Microsoft/caffe"
"happynear/caffe-windows" -> "ydwen/caffe-face"
"happynear/caffe-windows" -> "happynear/FaceVerification"
"happynear/caffe-windows" -> "wy1iu/sphereface"
"happynear/caffe-windows" -> "shicai/MobileNet-Caffe" ["e"=1]
"happynear/caffe-windows" -> "AlfredXiangWu/face_verification_experiment"
"happynear/caffe-windows" -> "kpzhang93/MTCNN_face_detection_alignment" ["e"=1]
"happynear/caffe-windows" -> "soeaver/caffe-model" ["e"=1]
"happynear/caffe-windows" -> "weiliu89/caffe" ["e"=1]
"happynear/caffe-windows" -> "happynear/NormFace"
"happynear/caffe-windows" -> "daijifeng001/R-FCN" ["e"=1]
"happynear/caffe-windows" -> "happynear/AMSoftmax"
"happynear/caffe-windows" -> "shicai/Caffe_Manual" ["e"=1]
"happynear/caffe-windows" -> "ShaoqingRen/faster_rcnn" ["e"=1]
"happynear/caffe-windows" -> "yonghenglh6/DepthwiseConvolution" ["e"=1]
"pangyupo/mxnet_mtcnn_face_detection" -> "tornadomeet/mxnet-face"
"pangyupo/mxnet_mtcnn_face_detection" -> "Seanlinx/mtcnn"
"pangyupo/mxnet_mtcnn_face_detection" -> "ydwen/caffe-face"
"pangyupo/mxnet_mtcnn_face_detection" -> "happynear/MTCNN_face_detection_alignment"
"pangyupo/mxnet_mtcnn_face_detection" -> "AlphaQi/MTCNN-light"
"pangyupo/mxnet_mtcnn_face_detection" -> "CongWeilin/mtcnn-caffe"
"pangyupo/mxnet_mtcnn_face_detection" -> "dlunion/mtcnn"
"pangyupo/mxnet_mtcnn_face_detection" -> "kpzhang93/MTCNN_face_detection_alignment" ["e"=1]
"pangyupo/mxnet_mtcnn_face_detection" -> "DaFuCoding/MTCNN_Caffe"
"pangyupo/mxnet_mtcnn_face_detection" -> "foreverYoungGitHub/MTCNN"
"pangyupo/mxnet_mtcnn_face_detection" -> "DuinoDu/mtcnn"
"pangyupo/mxnet_mtcnn_face_detection" -> "luoyetx/JDA"
"pangyupo/mxnet_mtcnn_face_detection" -> "AlfredXiangWu/face_verification_experiment"
"pangyupo/mxnet_mtcnn_face_detection" -> "shanren7/real_time_face_recognition"
"pangyupo/mxnet_mtcnn_face_detection" -> "precedenceguo/mx-rcnn" ["e"=1]
"xmfbit/warpctc-caffe" -> "happynear/SpatialTransformerLayer"
"ISS-Kerui/Bus-Driver-Behavior-Detection" -> "maxuehao/Smokeing-detection"
"toshi-k/kaggle-distracted-driver-detection" -> "tks0123456789/kaggle-Otto" ["e"=1]
"nenadmarkus/pico" -> "wincle/NPD"
"nenadmarkus/pico" -> "luoyetx/JDA"
"nenadmarkus/pico" -> "yulequan/face-alignment-in-3000fps"
"nenadmarkus/pico" -> "CitrusRokid/OpenNPD"
"nenadmarkus/pico" -> "patrikhuber/superviseddescent"
"nenadmarkus/pico" -> "freesouls/face-alignment-at-3000fps"
"nenadmarkus/pico" -> "RoboPai/sdm"
"nenadmarkus/pico" -> "jwyang/face-alignment"
"nenadmarkus/pico" -> "soundsilence/FaceAlignment"
"nenadmarkus/pico" -> "luoyetx/face-alignment-at-3000fps"
"nenadmarkus/pico" -> "tntrung/impSDM"
"nenadmarkus/pico" -> "foreverYoungGitHub/MTCNN"
"nenadmarkus/pico" -> "tornadomeet/mxnet-face"
"nenadmarkus/pico" -> "pangyupo/mxnet_mtcnn_face_detection"
"nenadmarkus/pico" -> "TadasBaltrusaitis/CLM-framework"
"gicheonkang/fast-face-android" -> "tzutalin/dlib-android-app"
"gicheonkang/fast-face-android" -> "SimonCherryGZ/face-landmark-android"
"gicheonkang/fast-face-android" -> "tzutalin/dlib-android"
"gicheonkang/fast-face-android" -> "gv22ga/dlib-face-recognition-android"
"gicheonkang/fast-face-android" -> "Luca96/android-face-landmarks"
"gicheonkang/fast-face-android" -> "flyingzhao/FacialLandmarkAndroid"
"gicheonkang/fast-face-android" -> "boyw165/my-dlib-experiment" ["e"=1]
"4uiiurz1/pytorch-adacos" -> "HuangYG123/CurricularFace"
"4uiiurz1/pytorch-adacos" -> "xiaoboCASIA/SV-X-Softmax"
"4uiiurz1/pytorch-adacos" -> "xialuxi/arcface-caffe"
"4uiiurz1/pytorch-adacos" -> "zma-c-137/VarGFaceNet"
"4uiiurz1/pytorch-adacos" -> "wujiyang/Face_Pytorch"
"4uiiurz1/pytorch-adacos" -> "happynear/FaceDatasets"
"4uiiurz1/pytorch-adacos" -> "foamliu/InsightFace-v2"
"4uiiurz1/pytorch-adacos" -> "ronghuaiyang/arcface-pytorch"
"4uiiurz1/pytorch-adacos" -> "YirongMao/softmax_variants"
"huangyangyu/NoiseFace" -> "huangyangyu/SeqFace"
"huangyangyu/NoiseFace" -> "zhongyy/Unequal-Training-for-Deep-Face-Recognition-with-Long-Tailed-Noisy-Data"
"huangyangyu/NoiseFace" -> "xiaoboCASIA/SV-X-Softmax"
"hysts/pytorch_mpiigaze" -> "hysts/pytorch_mpiigaze_demo"
"hysts/pytorch_mpiigaze" -> "xucong-zhang/ETH-XGaze"
"hysts/pytorch_mpiigaze" -> "swook/GazeML"
"hysts/pytorch_mpiigaze" -> "Tobias-Fischer/rt_gene"
"hysts/pytorch_mpiigaze" -> "NVlabs/few_shot_gaze"
"hysts/pytorch_mpiigaze" -> "erkil1452/gaze360"
"hysts/pytorch_mpiigaze" -> "cvlab-uob/Awesome-Gaze-Estimation"
"hysts/pytorch_mpiigaze" -> "CSAILVision/GazeCapture"
"hysts/pytorch_mpiigaze" -> "VIPL-TAL-GAZE/GAZE2021"
"hysts/pytorch_mpiigaze" -> "hysts/pl_gaze_estimation"
"hysts/pytorch_mpiigaze" -> "swook/EVE"
"hysts/pytorch_mpiigaze" -> "yihuacheng/Full-face"
"hysts/pytorch_mpiigaze" -> "ti-ginkgo/MPIIFaceGaze"
"hysts/pytorch_mpiigaze" -> "swook/faze_preprocess"
"hysts/pytorch_mpiigaze" -> "WuZhuoran/awesome-gaze"
"vitoralbiero/img2pose" -> "thohemp/6DRepNet"
"vitoralbiero/img2pose" -> "cleardusk/3DDFA_V2" ["e"=1]
"vitoralbiero/img2pose" -> "Ascend-Research/HeadPoseEstimation-WHENet"
"vitoralbiero/img2pose" -> "natanielruiz/deep-head-pose"
"vitoralbiero/img2pose" -> "soubhiksanyal/FLAME_PyTorch" ["e"=1]
"vitoralbiero/img2pose" -> "YadiraF/DECA" ["e"=1]
"vitoralbiero/img2pose" -> "shamangary/FSA-Net"
"vitoralbiero/img2pose" -> "polarisZhao/PFLD-pytorch"
"vitoralbiero/img2pose" -> "choyingw/SynergyNet" ["e"=1]
"vitoralbiero/img2pose" -> "protossw512/AdaptiveWingLoss"
"vitoralbiero/img2pose" -> "WIKI2020/FacePose_pytorch"
"vitoralbiero/img2pose" -> "Tencent/TFace"
"vitoralbiero/img2pose" -> "JDAI-CV/lapa-dataset" ["e"=1]
"vitoralbiero/img2pose" -> "HRNet/HRNet-Facial-Landmark-Detection"
"vitoralbiero/img2pose" -> "cunjian/pytorch_face_landmark"
"rockchip-linux/u-boot" -> "rockchip-linux/kernel"
"rockchip-linux/u-boot" -> "rockchip-linux/rkbin"
"rockchip-linux/u-boot" -> "rockchip-linux/libmali"
"rockchip-linux/u-boot" -> "rockchip-linux/buildroot"
"rockchip-linux/u-boot" -> "rockchip-linux/rk-rootfs-build"
"rockchip-linux/u-boot" -> "rockchip-linux/rkdeveloptool"
"QuasarLight/Pytorch_Face_Recognition-" -> "wujiyang/Face_Pytorch"
"peteryuX/arcface-tf2" -> "peteryuX/retinaface-tf2"
"peteryuX/arcface-tf2" -> "dmonterom/face_recognition_TF2"
"peteryuX/arcface-tf2" -> "luckycallor/InsightFace-tensorflow"
"peteryuX/arcface-tf2" -> "leondgarse/Keras_insightface"
"peteryuX/arcface-tf2" -> "4uiiurz1/keras-arcface"
"peteryuX/arcface-tf2" -> "peteryuX/esrgan-tf2" ["e"=1]
"neha01/FaceRecognition" -> "ashishdubey10/Face-Recognition-Based-Attendance-System" ["e"=1]
"4uiiurz1/keras-arcface" -> "peteryuX/arcface-tf2"
"4uiiurz1/keras-arcface" -> "auroua/InsightFace_TF"
"4uiiurz1/keras-arcface" -> "luckycallor/InsightFace-tensorflow"
"4uiiurz1/keras-arcface" -> "leondgarse/Keras_insightface"
"4uiiurz1/keras-arcface" -> "dmonterom/face_recognition_TF2"
"4uiiurz1/keras-arcface" -> "ktjonsson/keras-ArcFace"
"4uiiurz1/keras-arcface" -> "ronghuaiyang/arcface-pytorch"
"4uiiurz1/keras-arcface" -> "Fei-Wang/insightface"
"4uiiurz1/keras-arcface" -> "wujiyang/Face_Pytorch"
"4uiiurz1/keras-arcface" -> "EncodeTS/TensorFlow_Center_Loss"
"4uiiurz1/keras-arcface" -> "xiaochus/MobileNetV3" ["e"=1]
"HandsomeHans/Face-Tracking-Based-on-OpenTLD-and-RNet" -> "HandsomeHans/PCN-ncnn"
"auroua/InsightFace_TF" -> "luckycallor/InsightFace-tensorflow"
"auroua/InsightFace_TF" -> "AIInAi/tf-insightface"
"auroua/InsightFace_TF" -> "Joker316701882/Additive-Margin-Softmax"
"auroua/InsightFace_TF" -> "sirius-ai/MobileFaceNet_TF"
"auroua/InsightFace_TF" -> "yule-li/CosFace"
"auroua/InsightFace_TF" -> "moli232777144/mobilefacenet-mxnet"
"auroua/InsightFace_TF" -> "Fei-Wang/insightface"
"auroua/InsightFace_TF" -> "wy1iu/sphereface"
"auroua/InsightFace_TF" -> "happynear/AMSoftmax"
"auroua/InsightFace_TF" -> "AITTSMD/MTCNN-Tensorflow" ["e"=1]
"auroua/InsightFace_TF" -> "wywu/LAB"
"auroua/InsightFace_TF" -> "happynear/FaceDatasets"
"auroua/InsightFace_TF" -> "qidiso/mobilefacenet-V2"
"auroua/InsightFace_TF" -> "fwang91/IMDb-Face"
"auroua/InsightFace_TF" -> "TreB1eN/InsightFace_Pytorch"
"fendouai/FaceRank" -> "Entropy-xcy/RankFace"
"fendouai/FaceRank" -> "roguesir/DL-ML-project"
"fendouai/FaceRank" -> "HCIILAB/SCUT-FBP5500-Database-Release"
"fendouai/FaceRank" -> "fendouai/Awesome-TensorFlow-Chinese" ["e"=1]
"fendouai/FaceRank" -> "ustcqidi/BeautyPredict"
"fendouai/FaceRank" -> "fendouai/ChatGirl"
"fendouai/FaceRank" -> "fendouai/Awesome-Chatbot" ["e"=1]
"fendouai/FaceRank" -> "RiweiChen/DeepFace"
"fendouai/FaceRank" -> "TensorFlowNews/TensorFlow-Bitcoin-Robot"
"fendouai/FaceRank" -> "wy1iu/sphereface"
"fendouai/FaceRank" -> "zeusees/HyperLandmark"
"fendouai/FaceRank" -> "betars/Face-Resources"
"fendouai/FaceRank" -> "luyishisi/tensorflow" ["e"=1]
"fendouai/FaceRank" -> "dpressel/rude-carnie"
"fendouai/FaceRank" -> "shanren7/real_time_face_recognition"
"yu4u/age-estimation-pytorch" -> "Herosan163/AgeEstimation"
"yu4u/age-estimation-pytorch" -> "yu4u/age-gender-estimation"
"yu4u/age-estimation-pytorch" -> "shamangary/SSR-Net"
"yu4u/age-estimation-pytorch" -> "Nicholasli1995/VisualizingNDF"
"yu4u/age-estimation-pytorch" -> "StevenBanama/C3AE"
"yu4u/age-estimation-pytorch" -> "jingkuan/Age-Gender-Pred"
"yu4u/age-estimation-pytorch" -> "oukohou/SSR_Net_Pytorch"
"yu4u/age-estimation-pytorch" -> "Raschka-research-group/coral-cnn"
"yu4u/age-estimation-pytorch" -> "dandynaufaldi/Agendernet"
"yu4u/age-estimation-pytorch" -> "wayen820/gender_age_estimation_mxnet"
"yu4u/age-estimation-pytorch" -> "vicwer/C3AE_Age_Estimation"
"yu4u/age-estimation-pytorch" -> "InterDigitalInc/HRFAE"
"yu4u/age-estimation-pytorch" -> "joojs/fairface"
"yu4u/age-estimation-pytorch" -> "deepinx/age-gender-estimation"
"IrvingMeng/MagFace" -> "Tencent/TFace"
"IrvingMeng/MagFace" -> "deepcam-cn/FaceQuality"
"IrvingMeng/MagFace" -> "pterhoer/FaceImageQuality"
"IrvingMeng/MagFace" -> "HuangYG123/CurricularFace"
"IrvingMeng/MagFace" -> "mk-minchul/AdaFace"
"IrvingMeng/MagFace" -> "JDAI-CV/FaceX-Zoo"
"IrvingMeng/MagFace" -> "cavalleria/cavaface.pytorch"
"IrvingMeng/MagFace" -> "seasonSH/Probabilistic-Face-Embeddings"
"IrvingMeng/MagFace" -> "fdbtrs/CR-FIQA"
"IrvingMeng/MagFace" -> "Ontheway361/dul-pytorch"
"IrvingMeng/MagFace" -> "uam-biometrics/FaceQnet"
"IrvingMeng/MagFace" -> "pterhoer/QMagFace"
"IrvingMeng/MagFace" -> "xiaoboCASIA/SV-X-Softmax"
"IrvingMeng/MagFace" -> "fdbtrs/ElasticFace"
"IrvingMeng/MagFace" -> "aqeelanwar/MaskTheFace"
"usnistgov/frvt" -> "xiaoboCASIA/SV-X-Softmax"
"usnistgov/frvt" -> "JiajiongCao/CELEB-500K"
"usnistgov/frvt" -> "olojuwin/facerecognize-for-mobile-phone"
"usnistgov/frvt" -> "HuangYG123/CurricularFace"
"usnistgov/frvt" -> "sciencefans/coco_loss"
"usnistgov/frvt" -> "zma-c-137/VarGFaceNet"
"usnistgov/frvt" -> "happynear/FaceDatasets"
"usnistgov/frvt" -> "fwang91/IMDb-Face"
"ZhaoJ9014/face.evoLVe" -> "JDAI-CV/FaceX-Zoo"
"ZhaoJ9014/face.evoLVe" -> "Tencent/TFace"
"ZhaoJ9014/face.evoLVe" -> "mk-minchul/AdaFace"
"ZhaoJ9014/face.evoLVe" -> "IrvingMeng/MagFace"
"ZhaoJ9014/face.evoLVe" -> "timesler/facenet-pytorch" ["e"=1]
"ZhaoJ9014/face.evoLVe" -> "ronghuaiyang/arcface-pytorch"
"ZhaoJ9014/face.evoLVe" -> "cavalleria/cavaface"
"ZhaoJ9014/face.evoLVe" -> "TreB1eN/InsightFace_Pytorch"
"ZhaoJ9014/face.evoLVe" -> "zllrunning/face-parsing.PyTorch" ["e"=1]
"ZhaoJ9014/face.evoLVe" -> "biubug6/Pytorch_Retinaface"
"ZhaoJ9014/face.evoLVe" -> "deepcam-cn/yolov5-face" ["e"=1]
"ZhaoJ9014/face.evoLVe" -> "ShawnXYang/Face-Robustness-Benchmark" ["e"=1]
"ZhaoJ9014/face.evoLVe" -> "QuasarLight/Pytorch_Face_Recognition-"
"ZhaoJ9014/face.evoLVe" -> "ZitongYu/DeepFAS"
"ZhaoJ9014/face.evoLVe" -> "HuangYG123/CurricularFace"
"leondgarse/Keras_insightface" -> "bleakie/MaskInsightface"
"leondgarse/Keras_insightface" -> "peteryuX/arcface-tf2"
"mk-minchul/AdaFace" -> "IrvingMeng/MagFace"
"mk-minchul/AdaFace" -> "HuangYG123/CurricularFace"
"mk-minchul/AdaFace" -> "Tencent/TFace"
"mk-minchul/AdaFace" -> "fdbtrs/ElasticFace"
"mk-minchul/AdaFace" -> "pterhoer/QMagFace"
"mk-minchul/AdaFace" -> "ydwen/opensphere"
"mk-minchul/AdaFace" -> "JDAI-CV/FaceX-Zoo"
"mk-minchul/AdaFace" -> "microsoft/DigiFace1M"
"mk-minchul/AdaFace" -> "wujiyang/Face_Pytorch"
"mk-minchul/AdaFace" -> "deepcam-cn/FaceQuality"
"mk-minchul/AdaFace" -> "xiaoboCASIA/SV-X-Softmax"
"mk-minchul/AdaFace" -> "cavalleria/cavaface"
"mk-minchul/AdaFace" -> "gist-ailab/teaching-where-to-look"
"mk-minchul/AdaFace" -> "anguyen8/deepface-emd"
"mk-minchul/AdaFace" -> "ZhaoJ9014/face.evoLVe"
"dinhquy94/face-antispoofing-using-mobileNet" -> "deepcam-cn/Face-Anti-spoofing.pytorch"
"dinhquy94/face-antispoofing-using-mobileNet" -> "yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing"
"dinhquy94/face-antispoofing-using-mobileNet" -> "houliang428/CNN-for-face-anti-spoofing"
"himanshub1007/Alzhimers-Disease-Prediction-Using-Deep-learning" -> "yingszuo/cnn_mci_ad_classification"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "dpressel/rude-carnie"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "yu4u/age-gender-estimation"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "GilLevi/AgeGenderDeepLearning"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "shamangary/SSR-Net"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "abars/YoloKerasFaceDetection"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "Tony607/Keras_age_gender"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "wayen820/gender_age_estimation_mxnet"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "ZZUTK/Face-Aging-CAAE"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "zonetrooper32/AgeEstimateAdience"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "b02901145/SSR-Net_megaage-asian"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "dandynaufaldi/Agendernet"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "OValery16/gender-age-classification"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "wondonghyeon/face-classification"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "qiexing/face-landmark-localization"
"BoyuanJiang/Age-Gender-Estimate-TF" -> "rileykwok/Face-Recognition-Model-with-Gender-Age-and-Emotions-Estimations"
"hrastnik/face_detect_n_track" -> "OAID/YSQfastfd"
"hrastnik/face_detect_n_track" -> "happynear/MTCNN_face_detection_alignment"
"hrastnik/face_detect_n_track" -> "yulequan/face-alignment-in-3000fps"
"hrastnik/face_detect_n_track" -> "dlunion/mtcnn"
"hrastnik/face_detect_n_track" -> "szad670401/Fast-MTCNN"
"hrastnik/face_detect_n_track" -> "Bkmz21/CompactCNNCascade"
"hrastnik/face_detect_n_track" -> "lincolnhard/head-pose-estimation"
"hrastnik/face_detect_n_track" -> "blankWorld/MTCNN-Accelerate-Onet"
"hrastnik/face_detect_n_track" -> "freesouls/face-alignment-at-3000fps"
"hrastnik/face_detect_n_track" -> "lsy17096535/face-landmark"
"hrastnik/face_detect_n_track" -> "imistyrain/MTCNN"
"hrastnik/face_detect_n_track" -> "patrikhuber/superviseddescent"
"layumi/2015_Face_Detection" -> "luoyetx/JDA"
"layumi/2015_Face_Detection" -> "anson0910/CNN_face_detection"
"layumi/2015_Face_Detection" -> "yulequan/face-alignment-in-3000fps"
"layumi/2015_Face_Detection" -> "guoyilin/FaceDetection_CNN"
"layumi/2015_Face_Detection" -> "FaceDetect/jointCascade_py"
"MarekKowalski/DeepAlignmentNetwork" -> "zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment"
"MarekKowalski/DeepAlignmentNetwork" -> "mariolew/Deep-Alignment-Network-tensorflow"
"MarekKowalski/DeepAlignmentNetwork" -> "wywu/LAB"
"MarekKowalski/DeepAlignmentNetwork" -> "shaoxiaohu/Face_Alignment_Two_Stage_Re-initialization"
"MarekKowalski/DeepAlignmentNetwork" -> "fengju514/Face-Pose-Net" ["e"=1]
"MarekKowalski/DeepAlignmentNetwork" -> "facebookresearch/supervision-by-registration"
"MarekKowalski/DeepAlignmentNetwork" -> "lsy17096535/face-landmark"
"MarekKowalski/DeepAlignmentNetwork" -> "mrgloom/Face-landmarks-detection-benchmark"
"MarekKowalski/DeepAlignmentNetwork" -> "chengzhengxin/sdm"
"MarekKowalski/DeepAlignmentNetwork" -> "qiexing/face-landmark-localization"
"MarekKowalski/DeepAlignmentNetwork" -> "zhzhanp/TCDCN-face-alignment"
"MarekKowalski/DeepAlignmentNetwork" -> "MarekKowalski/FaceSwap" ["e"=1]
"MarekKowalski/DeepAlignmentNetwork" -> "D-X-Y/SAN"
"MarekKowalski/DeepAlignmentNetwork" -> "sfzhang15/SFD"
"MarekKowalski/DeepAlignmentNetwork" -> "yulequan/face-alignment-in-3000fps"
"luoyetx/deep-landmark" -> "qiexing/face-landmark-localization"
"luoyetx/deep-landmark" -> "ishay2b/VanillaCNN"
"luoyetx/deep-landmark" -> "sciencefans/RSA-for-object-detection"
"luoyetx/deep-landmark" -> "luoyetx/JDA"
"luoyetx/deep-landmark" -> "yulequan/face-alignment-in-3000fps"
"luoyetx/deep-landmark" -> "luoyetx/face-alignment-at-3000fps"
"luoyetx/deep-landmark" -> "DaFuCoding/MTCNN_Caffe"
"luoyetx/deep-landmark" -> "jwyang/face-alignment"
"luoyetx/deep-landmark" -> "CongWeilin/mtcnn-caffe"
"luoyetx/deep-landmark" -> "ydwen/caffe-face"
"luoyetx/deep-landmark" -> "TadasBaltrusaitis/CLM-framework"
"luoyetx/deep-landmark" -> "lsy17096535/face-landmark"
"luoyetx/deep-landmark" -> "zhzhanp/TCDCN-face-alignment"
"luoyetx/deep-landmark" -> "freesouls/face-alignment-at-3000fps"
"luoyetx/deep-landmark" -> "mrgloom/Face-landmarks-detection-benchmark"
"mariolew/Deep-Alignment-Network-tensorflow" -> "zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment"
"mariolew/Deep-Alignment-Network-tensorflow" -> "MarekKowalski/DeepAlignmentNetwork"
"yinguobing/cnn-facial-landmark" -> "yinguobing/head-pose-estimation"
"yinguobing/cnn-facial-landmark" -> "yinguobing/facial-landmark-detection-hrnet"
"yinguobing/cnn-facial-landmark" -> "qiexing/face-landmark-localization"
"yinguobing/cnn-facial-landmark" -> "D-X-Y/landmark-detection"
"yinguobing/cnn-facial-landmark" -> "lsy17096535/face-landmark"
"yinguobing/cnn-facial-landmark" -> "songhengyang/face_landmark_factory"
"yinguobing/cnn-facial-landmark" -> "guoqiangqi/PFLD"
"yinguobing/cnn-facial-landmark" -> "HRNet/HRNet-Facial-Landmark-Detection"
"yinguobing/cnn-facial-landmark" -> "junhwanjang/face_landmark_dnn"
"yinguobing/cnn-facial-landmark" -> "luoyetx/deep-landmark"
"yinguobing/cnn-facial-landmark" -> "wywu/LAB"
"yinguobing/cnn-facial-landmark" -> "cunjian/pytorch_face_landmark"
"yinguobing/cnn-facial-landmark" -> "yinguobing/image_utility"
"yinguobing/cnn-facial-landmark" -> "natanielruiz/deep-head-pose"
"yinguobing/cnn-facial-landmark" -> "mrgloom/Face-landmarks-detection-benchmark"
"zhiqiangdon/CU-Net" -> "mariolew/Deep-Alignment-Network-tensorflow"
"zhiqiangdon/CU-Net" -> "TropComplique/wing-loss"
"zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment" -> "mariolew/Deep-Alignment-Network-tensorflow"
"zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment" -> "MarekKowalski/DeepAlignmentNetwork"
"zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment" -> "wywu/LAB"
"zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment" -> "D-X-Y/SAN"
"zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment" -> "LeeRel1991/faceAlignment_tensorflow"
"zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment" -> "goodluckcwl/Face-alignment-mobilenet-v2"
"CongWeilin/mtcnn-caffe" -> "dlunion/mtcnn"
"CongWeilin/mtcnn-caffe" -> "Seanlinx/mtcnn"
"CongWeilin/mtcnn-caffe" -> "foreverYoungGitHub/MTCNN"
"CongWeilin/mtcnn-caffe" -> "happynear/MTCNN_face_detection_alignment"
"CongWeilin/mtcnn-caffe" -> "DaFuCoding/MTCNN_Caffe"
"CongWeilin/mtcnn-caffe" -> "ydwen/caffe-face"
"CongWeilin/mtcnn-caffe" -> "moli232777144/mtcnn_ncnn"
"CongWeilin/mtcnn-caffe" -> "lsy17096535/face-landmark"
"CongWeilin/mtcnn-caffe" -> "DuinoDu/mtcnn"
"CongWeilin/mtcnn-caffe" -> "blankWorld/MTCNN-Accelerate-Onet"
"CongWeilin/mtcnn-caffe" -> "kpzhang93/MTCNN_face_detection_alignment" ["e"=1]
"CongWeilin/mtcnn-caffe" -> "AlphaQi/MTCNN-light"
"CongWeilin/mtcnn-caffe" -> "ElegantGod/ncnn"
"CongWeilin/mtcnn-caffe" -> "luoyetx/Joint-Face-Detection-and-Alignment"
"CongWeilin/mtcnn-caffe" -> "zeusees/FaceBoxes"
"GilLevi/AgeGenderDeepLearning" -> "dpressel/rude-carnie"
"GilLevi/AgeGenderDeepLearning" -> "yu4u/age-gender-estimation"
"GilLevi/AgeGenderDeepLearning" -> "BoyuanJiang/Age-Gender-Estimate-TF"
"GilLevi/AgeGenderDeepLearning" -> "shamangary/SSR-Net"
"GilLevi/AgeGenderDeepLearning" -> "Tony607/Keras_age_gender"
"GilLevi/AgeGenderDeepLearning" -> "ydwen/caffe-face"
"GilLevi/AgeGenderDeepLearning" -> "ishay2b/VanillaCNN"
"GilLevi/AgeGenderDeepLearning" -> "Russell91/ReInspect" ["e"=1]
"GilLevi/AgeGenderDeepLearning" -> "zonetrooper32/AgeEstimateAdience"
"GilLevi/AgeGenderDeepLearning" -> "diovisgood/agender"
"GilLevi/AgeGenderDeepLearning" -> "tornadomeet/mxnet-face"
"GilLevi/AgeGenderDeepLearning" -> "guoyilin/FaceDetection_CNN"
"GilLevi/AgeGenderDeepLearning" -> "wayen820/gender_age_estimation_mxnet"
"GilLevi/AgeGenderDeepLearning" -> "kpzhang93/MTCNN_face_detection_alignment" ["e"=1]
"GilLevi/AgeGenderDeepLearning" -> "isseu/emotion-recognition-neural-networks" ["e"=1]
"balajisrinivas/Face-Mask-Detection" -> "chandrikadeb7/Face-Mask-Detection"
"balajisrinivas/Face-Mask-Detection" -> "aieml/face-mask-detection-keras"
"balajisrinivas/Face-Mask-Detection" -> "Karan-Malik/FaceMaskDetector"
"balajisrinivas/Face-Mask-Detection" -> "Spidy20/face_mask_detection"
"balajisrinivas/Face-Mask-Detection" -> "adityap27/face-mask-detector"
"balajisrinivas/Face-Mask-Detection" -> "abd-shoumik/Social-distance-detection" ["e"=1]
"balajisrinivas/Face-Mask-Detection" -> "nicknochnack/RealTimeObjectDetection" ["e"=1]
"sciencefans/RSA-for-object-detection" -> "sciencefans/coco_loss"
"sciencefans/RSA-for-object-detection" -> "happynear/FaceDatasets"
"sciencefans/RSA-for-object-detection" -> "sfzhang15/SFD"
"sciencefans/RSA-for-object-detection" -> "walkoncross/prepare-faces-zyf"
"sciencefans/RSA-for-object-detection" -> "power0341/RSA_pycaffe"
"sciencefans/RSA-for-object-detection" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"sciencefans/RSA-for-object-detection" -> "zuoqing1988/ZQCNN-v0.0"
"sciencefans/RSA-for-object-detection" -> "KaleidoZhouYN/Details-on-Face-Recognition"
"sciencefans/RSA-for-object-detection" -> "happynear/NormFace"
"sciencefans/RSA-for-object-detection" -> "mahyarnajibi/SSH"
"sciencefans/RSA-for-object-detection" -> "zeusees/FaceBoxes"
"sciencefans/RSA-for-object-detection" -> "blankWorld/MTCNN-Accelerate-Onet"
"sciencefans/RSA-for-object-detection" -> "happynear/FaceVerification"
"sciencefans/RSA-for-object-detection" -> "zhanglaplace/MobileFaceNet"
"sciencefans/RSA-for-object-detection" -> "Jack-CV/PCN"
"foamliu/InsightFace-v2" -> "TreB1eN/InsightFace_Pytorch"
"foamliu/InsightFace-v2" -> "wujiyang/Face_Pytorch"
"foamliu/InsightFace-v2" -> "foamliu/InsightFace-PyTorch"
"foamliu/InsightFace-v2" -> "bleakie/MaskInsightface"
"foamliu/InsightFace-v2" -> "ronghuaiyang/arcface-pytorch"
"foamliu/InsightFace-v2" -> "HuangYG123/CurricularFace"
"foamliu/InsightFace-v2" -> "XiaohangZhan/face_recognition_framework"
"foamliu/InsightFace-v2" -> "foamliu/InsightFace-v3"
"foamliu/InsightFace-v2" -> "cavalleria/cavaface.pytorch"
"foamliu/InsightFace-v2" -> "QuasarLight/Pytorch_Face_Recognition-"
"foamliu/InsightFace-v2" -> "xiaoboCASIA/SV-X-Softmax"
"foamliu/InsightFace-v2" -> "seasonSH/Probabilistic-Face-Embeddings"
"foamliu/InsightFace-v2" -> "EB-Dodo/C-MS-Celeb"
"foamliu/InsightFace-v2" -> "IrvingMeng/MagFace"
"foamliu/InsightFace-v2" -> "4uiiurz1/pytorch-adacos"
"Star-Clouds/FRDA" -> "Star-Clouds/centerface"
"Star-Clouds/FRDA" -> "olojuwin/facerecognize-for-mobile-phone"
"Star-Clouds/FRDA" -> "chenjun2hao/CenterFace.pytorch"
"Star-Clouds/FRDA" -> "protossw512/AdaptiveWingLoss"
"chenjun2hao/CenterFace.pytorch" -> "Star-Clouds/CenterFace"
"chenjun2hao/CenterFace.pytorch" -> "bleakie/CenterMulti"
"chenjun2hao/CenterFace.pytorch" -> "siriusdemon/Build-Your-Own-Face-Model"
"chenjun2hao/CenterFace.pytorch" -> "dlunion/DBFace"
"chenjun2hao/CenterFace.pytorch" -> "Star-Clouds/FRDA"
"chenjun2hao/CenterFace.pytorch" -> "Star-Clouds/centerface"
"chenjun2hao/CenterFace.pytorch" -> "tensorboy/centerpose"
"chenjun2hao/CenterFace.pytorch" -> "becauseofAI/lffd-pytorch"
"chenjun2hao/CenterFace.pytorch" -> "biubug6/Face-Detector-1MB-with-landmark"
"chenjun2hao/CenterFace.pytorch" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"chenjun2hao/CenterFace.pytorch" -> "hanson-young/nniefacelib"
"chenjun2hao/CenterFace.pytorch" -> "polarisZhao/PFLD-pytorch"
"hanson-young/nniefacelib" -> "yangfei963158659/nnie"
"hanson-young/nniefacelib" -> "RaySue/NNIE-lite"
"hanson-young/nniefacelib" -> "polarisZhao/PFLD-pytorch"
"hanson-young/nniefacelib" -> "biubug6/Face-Detector-1MB-with-landmark"
"hanson-young/nniefacelib" -> "Hsintao/pfld_106_face_landmarks"
"hanson-young/nniefacelib" -> "aovoc/nnieqat-pytorch" ["e"=1]
"hanson-young/nniefacelib" -> "MirrorYuChen/ncnn_example"
"hanson-young/nniefacelib" -> "guoqiangqi/PFLD"
"hanson-young/nniefacelib" -> "Charrin/RetinaFace-Cpp"
"hanson-young/nniefacelib" -> "github-luffy/PFLD_68points_Pytorch"
"hanson-young/nniefacelib" -> "ChenYingpeng/caffe-yolov3" ["e"=1]
"hanson-young/nniefacelib" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"hanson-young/nniefacelib" -> "xxradon/PytorchToCaffe" ["e"=1]
"hanson-young/nniefacelib" -> "xiangweizeng/mobile-lpr" ["e"=1]
"hanson-young/nniefacelib" -> "610265158/face_landmark"
"arunponnusamy/cvlib" -> "arunponnusamy/object-detection-opencv"
"arunponnusamy/cvlib" -> "arunponnusamy/gender-detection-keras"
"arunponnusamy/cvlib" -> "ipazc/mtcnn" ["e"=1]
"arunponnusamy/cvlib" -> "Luca96/dlib-minified-models"
"arunponnusamy/cvlib" -> "arunponnusamy/face-detection-comparison"
"arunponnusamy/cvlib" -> "yeephycho/tensorflow-face-detection"
"bruceyang2012/Face-detection-with-mobilenet-ssd" -> "bruceyang2012/Face-identification-with-cnn-triplet-loss"
"bruceyang2012/Face-detection-with-mobilenet-ssd" -> "bruceyang2012/Face-Alignment-with-simple-cnn"
"bruceyang2012/Face-detection-with-mobilenet-ssd" -> "yeephycho/tensorflow-face-detection"
"bruceyang2012/Face-detection-with-mobilenet-ssd" -> "yeephycho/widerface-to-tfrecord"
"bruceyang2012/Face-detection-with-mobilenet-ssd" -> "tanakataiki/ssd_kerasV2"
"bruceyang2012/Face-detection-with-mobilenet-ssd" -> "Seymour-Lee/face-detection-ssd-mobilenet"
"friedhelm739/Insightface-tensorflow" -> "friedhelm739/MTCNN-tensorflow"
"mahyarnajibi/SSH" -> "sfzhang15/SFD"
"mahyarnajibi/SSH" -> "zeusees/FaceBoxes"
"mahyarnajibi/SSH" -> "sciencefans/RSA-for-object-detection"
"mahyarnajibi/SSH" -> "peiyunh/tiny"
"mahyarnajibi/SSH" -> "wy1iu/sphereface"
"mahyarnajibi/SSH" -> "kpzhang93/MTCNN_face_detection_alignment" ["e"=1]
"mahyarnajibi/SSH" -> "wywu/LAB"
"mahyarnajibi/SSH" -> "dlunion/mtcnn"
"mahyarnajibi/SSH" -> "Seanlinx/mtcnn"
"mahyarnajibi/SSH" -> "AlphaQi/MTCNN-light"
"mahyarnajibi/SSH" -> "happynear/NormFace"
"mahyarnajibi/SSH" -> "CongWeilin/mtcnn-caffe"
"mahyarnajibi/SSH" -> "ydwen/caffe-face"
"mahyarnajibi/SSH" -> "foreverYoungGitHub/MTCNN"
"mahyarnajibi/SSH" -> "TencentYoutuResearch/FaceDetection-DSFD" ["e"=1]
"yangxue0827/MobileFaceNet_Tensorflow" -> "SelinaFelton/LightFaceNet"
"yangxue0827/MobileFaceNet_Tensorflow" -> "sirius-ai/MobileFaceNet_TF"
"yeephycho/tensorflow-face-detection" -> "bruceyang2012/Face-detection-with-mobilenet-ssd"
"yeephycho/tensorflow-face-detection" -> "sfzhang15/SFD"
"yeephycho/tensorflow-face-detection" -> "ildoonet/deepface"
"yeephycho/tensorflow-face-detection" -> "MarekKowalski/DeepAlignmentNetwork"
"yeephycho/tensorflow-face-detection" -> "mahyarnajibi/SSH"
"yeephycho/tensorflow-face-detection" -> "yeephycho/widerface-to-tfrecord"
"yeephycho/tensorflow-face-detection" -> "iitzco/faced"
"yeephycho/tensorflow-face-detection" -> "kpzhang93/MTCNN_face_detection_alignment" ["e"=1]
"yeephycho/tensorflow-face-detection" -> "sirius-ai/MobileFaceNet_TF"
"yeephycho/tensorflow-face-detection" -> "zeusees/HyperLandmark"
"yeephycho/tensorflow-face-detection" -> "AITTSMD/MTCNN-Tensorflow" ["e"=1]
"yeephycho/tensorflow-face-detection" -> "wywu/LAB"
"yeephycho/tensorflow-face-detection" -> "qdraw/tensorflow-face-object-detector-tutorial"
"yeephycho/tensorflow-face-detection" -> "ipazc/mtcnn" ["e"=1]
"yeephycho/tensorflow-face-detection" -> "cydonia999/Tiny_Faces_in_Tensorflow"
"Guarouba/face_rec" -> "rishikksh20/Liveness-Detection"
"StanislasBertrand/RetinaFace-tf2" -> "peteryuX/retinaface-tf2"
"StanislasBertrand/RetinaFace-tf2" -> "serengil/retinaface"
"StanislasBertrand/RetinaFace-tf2" -> "610265158/faceboxes-tensorflow"
"SthPhoenix/InsightFace-REST" -> "bleakie/MaskInsightface"
"SthPhoenix/InsightFace-REST" -> "linghu8812/tensorrt_inference" ["e"=1]
"SthPhoenix/InsightFace-REST" -> "Tencent/TFace"
"SthPhoenix/InsightFace-REST" -> "littletomatodonkey/insight-face-paddle"
"SthPhoenix/InsightFace-REST" -> "IrvingMeng/MagFace"
"SthPhoenix/InsightFace-REST" -> "tuna-date/Face-Recognition-with-InsightFace"
"SthPhoenix/InsightFace-REST" -> "zeusees/HyperFAS"
"SthPhoenix/InsightFace-REST" -> "pterhoer/FaceImageQuality"
"SthPhoenix/InsightFace-REST" -> "Star-Clouds/CenterFace"
"SthPhoenix/InsightFace-REST" -> "deepcam-cn/yolov5-face" ["e"=1]
"SthPhoenix/InsightFace-REST" -> "zma-c-137/VarGFaceNet"
"SthPhoenix/InsightFace-REST" -> "JDAI-CV/FaceX-Zoo"
"SthPhoenix/InsightFace-REST" -> "MirrorYuChen/ncnn_example"
"bleakie/MaskInsightface" -> "olojuwin/facerecognize-for-mobile-phone"
"bleakie/MaskInsightface" -> "cavalleria/cavaface.pytorch"
"bleakie/MaskInsightface" -> "Star-Clouds/centerface"
"bleakie/MaskInsightface" -> "bleakie/CenterMulti"
"bleakie/MaskInsightface" -> "becauseofAI/MobileFace" ["e"=1]
"bleakie/MaskInsightface" -> "zma-c-137/VarGFaceNet"
"bleakie/MaskInsightface" -> "moli232777144/mobilefacenet-mxnet"
"bleakie/MaskInsightface" -> "SyGoing/LFFD-with-ncnn"
"bleakie/MaskInsightface" -> "MirrorYuChen/ncnn_106landmarks"
"bleakie/MaskInsightface" -> "biubug6/Face-Detector-1MB-with-landmark"
"bleakie/MaskInsightface" -> "Charrin/RetinaFace-Cpp"
"bleakie/MaskInsightface" -> "deepcam-cn/FaceQuality"
"bleakie/MaskInsightface" -> "HuangYG123/CurricularFace"
"bleakie/MaskInsightface" -> "MirrorYuChen/ncnn_example"
"bleakie/MaskInsightface" -> "Star-Clouds/FRDA"
"littletomatodonkey/insight-face-paddle" -> "RangeKing/PaddleOCR-Quicker" ["e"=1]
"syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing" -> "yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing"
"syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing" -> "chentyjpm/InsightFaceRecognition_Demo_AndroidNCNN"
"syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing" -> "estebanuri/face_recognition"
"syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing" -> "jiangxiluning/facenet_mtcnn_to_mobile"
"syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing" -> "vcvycy/MTCNN4Android"
"syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing" -> "sirius-ai/MobileFaceNet_TF"
"syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing" -> "minivision-ai/Silent-Face-Anti-Spoofing-APK"
"syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing" -> "shubham0204/FaceRecognition_With_FaceNet_Android"
"junhwanjang/face_landmark_dnn" -> "huohuotm/Facial-Landmark"
"louis-she/center-loss.pytorch" -> "jxgu1016/MNIST_center_loss_pytorch"
"louis-she/center-loss.pytorch" -> "KaiyangZhou/pytorch-center-loss"
"louis-she/center-loss.pytorch" -> "lyakaap/image-feature-learning-pytorch"
"Fdevmsy/Image_Classification_with_5_methods" -> "rdcolema/tensorflow-image-classification"
"Fdevmsy/Image_Classification_with_5_methods" -> "Abhishek-Arora/Image-Classification-Using-SVM"
"Fdevmsy/Image_Classification_with_5_methods" -> "efidalgo/AutoBlur-CNN-Features"
"TobiasRoeddiger/GazePointHeatMap" -> "takyamamoto/Fixation-Densitymap"
"lslcode/SSD_for_Tensorflow" -> "Windaway/DSOD-Tensorflow"
"cpuimage/MTCNN" -> "moli232777144/mtcnn_ncnn"
"cpuimage/MTCNN" -> "ElegantGod/ncnn"
"cpuimage/MTCNN" -> "honghuCode/mobileFacenet-ncnn"
"cpuimage/MTCNN" -> "dlunion/mtcnn"
"cpuimage/MTCNN" -> "moli232777144/mobilefacenet-mxnet"
"cpuimage/MTCNN" -> "deepinsight/mtcnn-ncnn"
"cpuimage/MTCNN" -> "imistyrain/MTCNN"
"cpuimage/MTCNN" -> "happynear/MTCNN_face_detection_alignment"
"cpuimage/MTCNN" -> "Longqi-S/ncnn-mtcnn"
"iArunava/YOLOv3-Object-Detection-with-OpenCV" -> "arunponnusamy/object-detection-opencv"
"iArunava/YOLOv3-Object-Detection-with-OpenCV" -> "Surya-Murali/Real-Time-Object-Detection-With-OpenCV"
"iArunava/YOLOv3-Object-Detection-with-OpenCV" -> "lbeaucourt/Object-detection"
"Li-Shang/faceCapture" -> "tzutalin/dlib-android-app"
"Li-Shang/faceCapture" -> "huihut/Facemoji"
"Li-Shang/faceCapture" -> "jan-skarupa/facerig"
"Li-Shang/faceCapture" -> "gicheonkang/fast-face-android"
"Li-Shang/faceCapture" -> "HTTdesu/SimpleFacerig"
"Li-Shang/faceCapture" -> "tzutalin/dlib-android"
"Li-Shang/faceCapture" -> "miaoerduo/dlib-face-landmark-compression"
"GuoYangGit/OCR" -> "z376368673/FaceSignIn"
"Zhongdao/gcn_clustering" -> "yl-1993/learn-to-cluster"
"Zhongdao/gcn_clustering" -> "XiaohangZhan/cdp"
"Zhongdao/gcn_clustering" -> "makarandtapaswi/BallClustering_ICCV2019"
"Zhongdao/gcn_clustering" -> "varun-suresh/Clustering"
"Zhongdao/gcn_clustering" -> "seasonSH/Probabilistic-Face-Embeddings"
"Zhongdao/gcn_clustering" -> "ssarfraz/FINCH-Clustering"
"Zhongdao/gcn_clustering" -> "xiaoboCASIA/SV-X-Softmax"
"Zhongdao/gcn_clustering" -> "zhunzhong07/ECN" ["e"=1]
"Zhongdao/gcn_clustering" -> "XiaohangZhan/face_recognition_framework"
"Zhongdao/gcn_clustering" -> "yl-1993/hfsoftmax"
"Zhongdao/gcn_clustering" -> "sjtuzq/person_search_gcn" ["e"=1]
"ydwen/opensphere" -> "deepcam-cn/FaceQuality"
"ydwen/opensphere" -> "xiaoboCASIA/SV-X-Softmax"
"Hzzone/MTLFace" -> "Hzzone/PFA-GAN"
"Hzzone/MTLFace" -> "guyuchao/IPCGANs-Pytorch"
"Hzzone/MTLFace" -> "Hzzone/AgeFlow"
"aramis-lab/AD-DL" -> "aramis-lab/AD-ML"
"aramis-lab/AD-DL" -> "aramis-lab/clinicadl"
"aramis-lab/AD-DL" -> "aramis-lab/clinica"
"aramis-lab/AD-DL" -> "wangyirui/AD_Prediction"
"aramis-lab/AD-DL" -> "ehosseiniasl/3d-convolutional-network"
"aramis-lab/AD-DL" -> "NYUMedML/CNN_design_for_AD"
"aramis-lab/AD-DL" -> "jrieke/cnn-interpretability"
"aramis-lab/clinica" -> "aramis-lab/clinicadl"
"aramis-lab/clinica" -> "aramis-lab/AD-DL"
"aramis-lab/clinica" -> "aramis-lab/AD-ML"
"aramis-lab/clinica" -> "nipreps/dmriprep" ["e"=1]
"aramis-lab/clinica" -> "BIDS-Apps/freesurfer"
"aramis-lab/clinicadl" -> "aramis-lab/AD-DL"
"aramis-lab/clinicadl" -> "aramis-lab/clinica"
"louis-she/sfd.pytorch" -> "clcarwin/SFD_pytorch"
"alibaba/MNNKit" -> "xindongzhang/MNN-APPLICATIONS"
"alibaba/MNNKit" -> "MirrorYuChen/mnn_example"
"alibaba/MNNKit" -> "olojuwin/facerecognize-for-mobile-phone"
"alibaba/MNNKit" -> "alibaba/MNN" ["e"=1]
"alibaba/MNNKit" -> "MirrorYuChen/ncnn_example"
"alibaba/MNNKit" -> "qaz734913414/Ncnn_FaceTrack"
"alibaba/MNNKit" -> "Danicaai/android-mnn"
"alibaba/MNNKit" -> "Tencent/TNN" ["e"=1]
"alibaba/MNNKit" -> "zuoqing1988/ZQCNN" ["e"=1]
"alibaba/MNNKit" -> "chehongshu/ncnnforandroid_objectiondetection_Mobilenetssd" ["e"=1]
"alibaba/MNNKit" -> "minivision-ai/Silent-Face-Anti-Spoofing-APK"
"alibaba/MNNKit" -> "moli232777144/mtcnn_ncnn"
"alibaba/MNNKit" -> "zeusees/HyperLandmark"
"alibaba/MNNKit" -> "hanson-young/nniefacelib"
"alibaba/MNNKit" -> "dangbo/ncnn-mobile"
"Tonyfy/LCNN_TRAIN" -> "liuziwei7/mobile-id"
"Jack-CV/PCN-FaceDetection" -> "HandsomeHans/PCN-ncnn"
"Jack-CV/PCN-FaceDetection" -> "zuoqing1988/ZQCNN-v0.0"
"Jack-CV/PCN-FaceDetection" -> "KaleidoZhouYN/e2e-joint-face-detection-and-alignment"
"Jack-CV/PCN-FaceDetection" -> "moli232777144/mobilefacenet-mxnet"
"Jack-CV/PCN-FaceDetection" -> "wywu/LAB"
"gv22ga/dlib-face-recognition-android" -> "tzutalin/dlib-android-app"
"gv22ga/dlib-face-recognition-android" -> "gicheonkang/fast-face-android"
"gv22ga/dlib-face-recognition-android" -> "weank1984/face-recognition"
"varun-suresh/Clustering" -> "kevinlu1211/FacialClusteringPipeline"
"varun-suresh/Clustering" -> "Zhongdao/gcn_clustering"
"luckycallor/InsightFace-tensorflow" -> "auroua/InsightFace_TF"
"luckycallor/InsightFace-tensorflow" -> "AIInAi/tf-insightface"
"luckycallor/InsightFace-tensorflow" -> "peteryuX/arcface-tf2"
"luckycallor/InsightFace-tensorflow" -> "Fei-Wang/insightface"
"luckycallor/InsightFace-tensorflow" -> "vincentwei0919/insightface_for_face_recognition"
"luckycallor/InsightFace-tensorflow" -> "friedhelm739/Insightface-tensorflow"
"luckycallor/InsightFace-tensorflow" -> "sirius-ai/MobileFaceNet_TF"
"luckycallor/InsightFace-tensorflow" -> "yule-li/CosFace"
"luckycallor/InsightFace-tensorflow" -> "HiKapok/tf.extra_losses"
"luckycallor/InsightFace-tensorflow" -> "leondgarse/Keras_insightface"
"luckycallor/InsightFace-tensorflow" -> "Joker316701882/Additive-Margin-Softmax"
"luckycallor/InsightFace-tensorflow" -> "dmonterom/face_recognition_TF2"
"luckycallor/InsightFace-tensorflow" -> "qidiso/mobilefacenet-V2"
"luckycallor/InsightFace-tensorflow" -> "Xiaoccer/MobileFaceNet_Pytorch"
"luckycallor/InsightFace-tensorflow" -> "4uiiurz1/keras-arcface"
"chenlinzhong/face-login" -> "WindZu/facenet_facerecognition"
"chenlinzhong/face-login" -> "LeslieZhoa/tensorflow-MTCNN"
"chenlinzhong/face-login" -> "shanren7/real_time_face_recognition"
"chenlinzhong/face-login" -> "boyliwensheng/understand_facenet"
"chenlinzhong/face-login" -> "MrZhousf/tf_facenet"
"chenlinzhong/face-login" -> "coneypo/Dlib_face_recognition_from_camera"
"chenlinzhong/face-login" -> "LeslieZhoa/tensorflow-facenet"
"chenlinzhong/face-login" -> "inspurer/WorkAttendanceSystem"
"chenlinzhong/face-login" -> "PanJinquan/Face_Detection_Recognition"
"chenlinzhong/face-login" -> "auroua/InsightFace_TF"
"chenlinzhong/face-login" -> "seathiefwang/FaceRecognition-tensorflow"
"chenlinzhong/face-login" -> "jerry1900/faceRecognition"
"chenlinzhong/face-login" -> "AITTSMD/MTCNN-Tensorflow" ["e"=1]
"chenlinzhong/face-login" -> "xvshu/face_login"
"chenlinzhong/face-login" -> "imistyrain/MTCNN"
"yuxitong/TimeView" -> "zzZZ-ssq/vue-old-circle-clock"
"FacePlusPlus/MegviiFacepp-Android-SDK" -> "FacePlusPlus/java-sdk"
"FacePlusPlus/MegviiFacepp-Android-SDK" -> "FacePlusPlus/MegviiFacepp-iOS-SDK"
"KaihuaTang/ResNet50-Pytorch-Face-Recognition" -> "AruniRC/resnet-face-pytorch"
"ArcsoftEscErd/ArcfaceDemo_Android" -> "ArcsoftEscErd/IdCardVeriDemo_Android"
"ArcsoftEscErd/ArcfaceDemo_Android" -> "asdfqwrasdf/ArcFaceDemo"
"shuguoli68/FaceDemo" -> "shuguoli68/LiSeetaFace2"
"yuxitong/AndroidLivePusher" -> "kangdp/EcoBoxView-master-sample"
"RaySue/NNIE-lite" -> "hanson-young/nniefacelib"
"RaySue/NNIE-lite" -> "aovoc/nnieqat-pytorch" ["e"=1]
"RaySue/NNIE-lite" -> "liuky74/SDC-NNIE-tutorial"
"RaySue/NNIE-lite" -> "yangfei963158659/nnie"
"RaySue/NNIE-lite" -> "liqi-c/tengine-nnie"
"RaySue/NNIE-lite" -> "Wulingtian/yolov5_onnx2caffe" ["e"=1]
"pengzishang/EasyStepIndicator" -> "z8g/common"
"tony709394/postchildren-web" -> "yanxlg/react-components"
"tony709394/postchildren-web" -> "yanxlg/eboard"
"yangyuke001/FIIQA-PyTorch" -> "shellteo/s-json" ["e"=1]
"yangyuke001/FIIQA-PyTorch" -> "pengzishang/EasyStepIndicator"
"yangyuke001/FIIQA-PyTorch" -> "lightbatis/lightbatis"
"yangyuke001/FIIQA-PyTorch" -> "tony709394/postchildren-web"
"yangyuke001/FIIQA-PyTorch" -> "z8g/common"
"yangyuke001/FIIQA-PyTorch" -> "uam-biometrics/FaceQnet"
"yangyuke001/FIIQA-PyTorch" -> "jacklightChen/disqus-proxy-serverless"
"yanxlg/eboard" -> "tony709394/postchildren-desktop"
"yanxlg/react-components" -> "tony709394/postchildren-web"
"LeslieZhoa/tensorflow-YOLO1" -> "lslcode/SSD_for_Tensorflow"
"thohemp/6DRepNet" -> "choyingw/SynergyNet" ["e"=1]
"thohemp/6DRepNet" -> "Ascend-Research/HeadPoseEstimation-WHENet"
"thohemp/6DRepNet" -> "vitoralbiero/img2pose"
"thohemp/6DRepNet" -> "MCG-NJU/SADRNet" ["e"=1]
"thohemp/6DRepNet" -> "elliottzheng/face-detection"
"thohemp/6DRepNet" -> "omasaht/headpose-fsanet-pytorch"
"thohemp/6DRepNet" -> "PinataFarms/DAD-3DHeads" ["e"=1]
"thohemp/6DRepNet" -> "jhb86253817/PIPNet"
"thohemp/6DRepNet" -> "Ahmednull/L2CS-Net"
"thohemp/6DRepNet" -> "TimoBolkart/BFM_to_FLAME" ["e"=1]
"thohemp/6DRepNet" -> "andresprados/SPIGA"
"thohemp/6DRepNet" -> "deepcam-cn/FaceQuality"
"thohemp/6DRepNet" -> "hnuzhy/DirectMHP"
"thohemp/6DRepNet" -> "natanielruiz/deep-head-pose"
"thohemp/6DRepNet" -> "Zielon/MICA" ["e"=1]
"openhisilicon/HIVIEW" -> "openhisilicon/PRODUCT"
"openhisilicon/HIVIEW" -> "openhisilicon/AF-algorithm"
"openhisilicon/HIVIEW" -> "openhisilicon/SDK"
"openhisilicon/HIVIEW" -> "openhisilicon/TOOLS"
"openhisilicon/HIVIEW" -> "openhisilicon/qt-hi3519v101"
"openhisilicon/HIVIEW" -> "yeung908/lvjh_ipcamera_hisi3518"
"openhisilicon/HIVIEW" -> "zucker-chen/libs"
"openhisilicon/HIVIEW" -> "tevcam2020/yolov5-nnie"
"openhisilicon/HIVIEW" -> "lam2003/hisi_monitor"
"openhisilicon/HIVIEW" -> "gozfree/aquila" ["e"=1]
"openhisilicon/HIVIEW" -> "hanson-young/nniefacelib"
"openhisilicon/HIVIEW" -> "ireader/media-server" ["e"=1]
"openhisilicon/HIVIEW" -> "yangfei963158659/nnie"
"openhisilicon/HIVIEW" -> "rockchip-linux/mpp"
"openhisilicon/HIVIEW" -> "RaySue/NNIE-lite"
"PyImageSearch/imutils" -> "serengil/retinaface"
"PyImageSearch/imutils" -> "dloperab/PyImageSearch-CV-DL-CrashCourse"
"dlunion/CC5.0" -> "dlunion/CC4.0"
"guanfuchen/facedet" -> "lxg2015/faceboxes"
"happynear/FaceDatasets" -> "happynear/AMSoftmax"
"happynear/FaceDatasets" -> "sciencefans/coco_loss"
"happynear/FaceDatasets" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"happynear/FaceDatasets" -> "fwang91/IMDb-Face"
"happynear/FaceDatasets" -> "sciencefans/RSA-for-object-detection"
"happynear/FaceDatasets" -> "happynear/NormFace"
"happynear/FaceDatasets" -> "KaleidoZhouYN/FaceRecognitionSystem"
"happynear/FaceDatasets" -> "Joker316701882/Additive-Margin-Softmax"
"happynear/FaceDatasets" -> "happynear/FaceVerification"
"happynear/FaceDatasets" -> "wy1iu/sphereface"
"happynear/FaceDatasets" -> "JiajiongCao/CELEB-500K"
"happynear/FaceDatasets" -> "xiaoboCASIA/SV-X-Softmax"
"happynear/FaceDatasets" -> "KaleidoZhouYN/Details-on-Face-Recognition"
"happynear/FaceDatasets" -> "MuggleWang/CosFace_pytorch"
"happynear/FaceDatasets" -> "walkoncross/prepare-faces-zyf"
"lxg2015/faceboxes" -> "XiaXuehai/faceboxes"
"lxg2015/faceboxes" -> "guanfuchen/facedet"
"Entropy-xcy/RankFace" -> "Entropy-xcy/Toxic_v1"
"yinguobing/facial-landmark-detection-hrnet" -> "yinguobing/face-mesh-generator"
"yinguobing/facial-landmark-detection-hrnet" -> "yinguobing/facial-landmark-dataset"
"yinguobing/facial-landmark-detection-hrnet" -> "yinguobing/cnn-facial-landmark"
"airockchip/yolov5" -> "soloIife/yolov5_for_rknn"
"airockchip/yolov5" -> "EASY-EAI/yolov5"
"airockchip/yolov5" -> "rockchip-linux/rknpu"
"airockchip/yolov5" -> "airockchip/rknn_model_zoo"
"Joker316701882/Additive-Margin-Softmax" -> "happynear/AMSoftmax"
"Joker316701882/Additive-Margin-Softmax" -> "yule-li/CosFace"
"Joker316701882/Additive-Margin-Softmax" -> "happynear/NormFace"
"Joker316701882/Additive-Margin-Softmax" -> "happynear/FaceDatasets"
"Joker316701882/Additive-Margin-Softmax" -> "wy1iu/sphereface"
"Joker316701882/Additive-Margin-Softmax" -> "auroua/InsightFace_TF"
"Joker316701882/Additive-Margin-Softmax" -> "fwang91/IMDb-Face"
"Joker316701882/Additive-Margin-Softmax" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"Joker316701882/Additive-Margin-Softmax" -> "sciencefans/RSA-for-object-detection"
"Joker316701882/Additive-Margin-Softmax" -> "sciencefans/coco_loss"
"Joker316701882/Additive-Margin-Softmax" -> "clcarwin/sphereface_pytorch"
"Joker316701882/Additive-Margin-Softmax" -> "happynear/FaceVerification"
"Joker316701882/Additive-Margin-Softmax" -> "pppoe/tensorflow-sphereface-asoftmax"
"Joker316701882/Additive-Margin-Softmax" -> "HiKapok/tf.extra_losses"
"Joker316701882/Additive-Margin-Softmax" -> "wujiyang/Face_Pytorch"
"liorshk/facenet_pytorch" -> "tbmoon/facenet"
"liorshk/facenet_pytorch" -> "clcarwin/sphereface_pytorch"
"liorshk/facenet_pytorch" -> "wujiyang/Face_Pytorch"
"liorshk/facenet_pytorch" -> "MuggleWang/CosFace_pytorch"
"liorshk/facenet_pytorch" -> "andreasveit/triplet-network-pytorch" ["e"=1]
"liorshk/facenet_pytorch" -> "jxgu1016/MNIST_center_loss_pytorch"
"liorshk/facenet_pytorch" -> "CaptainEven/FaceRecognition"
"liorshk/facenet_pytorch" -> "AlfredXiangWu/LightCNN"
"liorshk/facenet_pytorch" -> "kuaikuaikim/DFace"
"liorshk/facenet_pytorch" -> "TropComplique/mtcnn-pytorch"
"liorshk/facenet_pytorch" -> "thnkim/OpenFacePytorch"
"liorshk/facenet_pytorch" -> "TreB1eN/InsightFace_Pytorch"
"tbmoon/facenet" -> "liorshk/facenet_pytorch"
"tbmoon/facenet" -> "tamerthamoqa/facenet-pytorch-vggface2"
"tbmoon/facenet" -> "tbmoon/basic_vqa"
"tbmoon/facenet" -> "tamerthamoqa/facenet-pytorch-glint360k"
"tbmoon/facenet" -> "tbmoon/kalman_filter"
"tbmoon/facenet" -> "CaptainEven/FaceRecognition"
"tbmoon/facenet" -> "MuggleWang/CosFace_pytorch"
"tbmoon/facenet" -> "TropComplique/mtcnn-pytorch"
"tbmoon/facenet" -> "Xiaoccer/MobileFaceNet_Pytorch"
"tbmoon/facenet" -> "BeiXi1949/Face-Recognition_FaceNet_PyTorch"
"ci2cv/face-analysis-sdk" -> "patrikhuber/4dface" ["e"=1]
"ci2cv/face-analysis-sdk" -> "kylemcdonald/FaceTracker"
"ci2cv/face-analysis-sdk" -> "patrikhuber/superviseddescent"
"ci2cv/face-analysis-sdk" -> "yulequan/face-alignment-in-3000fps"
"ci2cv/face-analysis-sdk" -> "TadasBaltrusaitis/CLM-framework"
"ci2cv/face-analysis-sdk" -> "patrikhuber/eos" ["e"=1]
"ci2cv/face-analysis-sdk" -> "menpo/lsfm" ["e"=1]
"ci2cv/face-analysis-sdk" -> "jwyang/face-alignment"
"ci2cv/face-analysis-sdk" -> "soundsilence/FaceAlignment"
"ci2cv/face-analysis-sdk" -> "MichaelMure/3DMM" ["e"=1]
"ci2cv/face-analysis-sdk" -> "anhttran/3dmm_cnn" ["e"=1]
"ci2cv/face-analysis-sdk" -> "cheind/dest"
"ci2cv/face-analysis-sdk" -> "freesouls/face-alignment-at-3000fps"
"ci2cv/face-analysis-sdk" -> "delphifirst/FaceX"
"ci2cv/face-analysis-sdk" -> "KeeganRen/FaceReconstruction" ["e"=1]
"MirrorYuChen/ncnn_106landmarks" -> "hanson-young/ncnnpy"
"wangweiwei/vue-resize-observer" -> "yanxlg/react-components"
"wangweiwei/vue-resize-observer" -> "lijian096870/LJKeyBroadEventManager"
"wangweiwei/vue-resize-observer" -> "wangweiwei/video-metadata-thumbnails"
"boyliwensheng/understand_facenet" -> "WindZu/facenet_facerecognition"
"boyliwensheng/understand_facenet" -> "LeslieZhoa/tensorflow-MTCNN"
"boyliwensheng/understand_facenet" -> "shanren7/real_time_face_recognition"
"boyliwensheng/understand_facenet" -> "LeslieZhoa/tensorflow-facenet"
"boyliwensheng/understand_facenet" -> "PanJinquan/Face_Detection_Recognition"
"boyliwensheng/understand_facenet" -> "chenlinzhong/face-login"
"boyliwensheng/understand_facenet" -> "MrZhousf/tf_facenet"
"boyliwensheng/understand_facenet" -> "AITTSMD/MTCNN-Tensorflow" ["e"=1]
"boyliwensheng/understand_facenet" -> "liorshk/facenet_pytorch"
"boyliwensheng/understand_facenet" -> "luckycallor/InsightFace-tensorflow"
"boyliwensheng/understand_facenet" -> "tbmoon/facenet"
"boyliwensheng/understand_facenet" -> "moli232777144/mobilefacenet-mxnet"
"boyliwensheng/understand_facenet" -> "auroua/InsightFace_TF"
"boyliwensheng/understand_facenet" -> "vincentwei0919/insightface_for_face_recognition"
"boyliwensheng/understand_facenet" -> "Joker316701882/Additive-Margin-Softmax"
"YonghaoHe/LFD-A-Light-and-Fast-Detector" -> "YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"YonghaoHe/LFD-A-Light-and-Fast-Detector" -> "chenjun2hao/CenterFace.pytorch"
"YonghaoHe/LFD-A-Light-and-Fast-Detector" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"YonghaoHe/LFD-A-Light-and-Fast-Detector" -> "Star-Clouds/CenterFace"
"YonghaoHe/LFD-A-Light-and-Fast-Detector" -> "hanson-young/nniefacelib"
"YonghaoHe/LFD-A-Light-and-Fast-Detector" -> "becauseofAI/lffd-pytorch"
"YonghaoHe/LFD-A-Light-and-Fast-Detector" -> "Syencil/tensorRT" ["e"=1]
"dlunion/OpenPose" -> "dlunion/EasyOpenPose"
"dlunion/OpenPose" -> "lincolnhard/openpose-darknet"
"PKUZHOU/MTCNN_FaceDetection_TensorRT" -> "nwesem/mtcnn_facenet_cpp_tensorRT"
"PKUZHOU/MTCNN_FaceDetection_TensorRT" -> "wy1iu/sphereface-plus"
"PKUZHOU/MTCNN_FaceDetection_TensorRT" -> "moli232777144/mobilefacenet-mxnet"
"PKUZHOU/MTCNN_FaceDetection_TensorRT" -> "clancylian/retinaface"
"PKUZHOU/MTCNN_FaceDetection_TensorRT" -> "blankWorld/MTCNN-Accelerate-Onet"
"PKUZHOU/MTCNN_FaceDetection_TensorRT" -> "xialuxi/arcface-caffe"
"PKUZHOU/MTCNN_FaceDetection_TensorRT" -> "AlphaQi/MTCNN-light"
"PKUZHOU/MTCNN_FaceDetection_TensorRT" -> "olojuwin/facerecognize-for-mobile-phone"
"PKUZHOU/MTCNN_FaceDetection_TensorRT" -> "lewes6369/TensorRT-Yolov3" ["e"=1]
"xindongzhang/MNN-APPLICATIONS" -> "MirrorYuChen/mnn_example"
"xindongzhang/MNN-APPLICATIONS" -> "wlguan/MNN-yolov3"
"xindongzhang/MNN-APPLICATIONS" -> "SyGoing/LFFD-MNN"
"xindongzhang/MNN-APPLICATIONS" -> "biubug6/Face-Detector-1MB-with-landmark"
"xindongzhang/MNN-APPLICATIONS" -> "Charrin/RetinaFace-Cpp"
"xindongzhang/MNN-APPLICATIONS" -> "moli232777144/mtcnn_ncnn"
"xindongzhang/MNN-APPLICATIONS" -> "Star-Clouds/centerface"
"xindongzhang/MNN-APPLICATIONS" -> "hanson-young/nniefacelib"
"xindongzhang/MNN-APPLICATIONS" -> "alibaba/MNNKit"
"xindongzhang/MNN-APPLICATIONS" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"xindongzhang/MNN-APPLICATIONS" -> "guoqiangqi/PFLD"
"xindongzhang/MNN-APPLICATIONS" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"xindongzhang/MNN-APPLICATIONS" -> "moli232777144/mobilefacenet-mxnet"
"xindongzhang/MNN-APPLICATIONS" -> "MirrorYuChen/ncnn_example"
"xindongzhang/MNN-APPLICATIONS" -> "zuoqing1988/ZQCNN" ["e"=1]
"jrieke/cnn-interpretability" -> "wangyirui/AD_Prediction"
"jrieke/cnn-interpretability" -> "NYUMedML/CNN_design_for_AD"
"jrieke/cnn-interpretability" -> "Information-Fusion-Lab-Umass/alzheimers-cnn-study"
"jrieke/cnn-interpretability" -> "regnerus/keras-alzheimers-3d-conv"
"jrieke/cnn-interpretability" -> "aramis-lab/AD-DL"
"jrieke/cnn-interpretability" -> "ehosseiniasl/3d-convolutional-network"
"jrieke/cnn-interpretability" -> "vkola-lab/brain2020"
"LcenArthas/CCF-BDCI2019-Multi-person-Face-Recognition-Competition-Baseline" -> "foamliu/InsightFace-v3"
"LcenArthas/CCF-BDCI2019-Multi-person-Face-Recognition-Competition-Baseline" -> "themostnewone/2019ccf"
"ShiqiYu/libfacedetection.train" -> "polarisZhao/PFLD-pytorch"
"ShiqiYu/libfacedetection.train" -> "Star-Clouds/CenterFace"
"ShiqiYu/libfacedetection.train" -> "dlunion/DBFace"
"ShiqiYu/libfacedetection.train" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"ShiqiYu/libfacedetection.train" -> "ShiqiYu/libfacedetection" ["e"=1]
"ShiqiYu/libfacedetection.train" -> "opencv/opencv_zoo"
"ShiqiYu/libfacedetection.train" -> "guoqiangqi/PFLD"
"ShiqiYu/libfacedetection.train" -> "biubug6/Face-Detector-1MB-with-landmark"
"ShiqiYu/libfacedetection.train" -> "zisianw/FaceBoxes.PyTorch"
"ShiqiYu/libfacedetection.train" -> "cunjian/pytorch_face_landmark"
"ShiqiYu/libfacedetection.train" -> "zuoqing1988/ZQCNN" ["e"=1]
"ShiqiYu/libfacedetection.train" -> "biubug6/Pytorch_Retinaface"
"ShiqiYu/libfacedetection.train" -> "becauseofAI/lffd-pytorch"
"ShiqiYu/libfacedetection.train" -> "610265158/face_landmark"
"ShiqiYu/libfacedetection.train" -> "deepcam-cn/yolov5-face" ["e"=1]
"andresprados/SPIGA" -> "starhiking/HeatmapInHeatmap"
"haofanwang/accurate-head-pose" -> "MingzhenShao/HeadPose"
"haofanwang/accurate-head-pose" -> "OverEuro/deep-head-pose-lite"
"haofanwang/accurate-head-pose" -> "shamangary/FSA-Net"
"MirrorYuChen/ncnn_example" -> "MirrorYuChen/mnn_example"
"MirrorYuChen/ncnn_example" -> "hanson-young/nniefacelib"
"MirrorYuChen/ncnn_example" -> "moli232777144/mtcnn_ncnn"
"MirrorYuChen/ncnn_example" -> "biubug6/Face-Detector-1MB-with-landmark"
"MirrorYuChen/ncnn_example" -> "qaz734913414/Ncnn_FaceTrack"
"MirrorYuChen/ncnn_example" -> "bleakie/MaskInsightface"
"MirrorYuChen/ncnn_example" -> "honghuCode/mobileFacenet-ncnn"
"MirrorYuChen/ncnn_example" -> "zuoqing1988/ZQCNN" ["e"=1]
"MirrorYuChen/ncnn_example" -> "liguiyuan/mobilefacenet-ncnn"
"MirrorYuChen/ncnn_example" -> "olojuwin/facerecognize-for-mobile-phone"
"MirrorYuChen/ncnn_example" -> "Charrin/RetinaFace-Cpp"
"MirrorYuChen/ncnn_example" -> "zchrissirhcz/awesome-ncnn" ["e"=1]
"MirrorYuChen/ncnn_example" -> "nihui/ncnn-assets" ["e"=1]
"MirrorYuChen/ncnn_example" -> "polarisZhao/PFLD-pytorch"
"MirrorYuChen/ncnn_example" -> "guoqiangqi/PFLD"
"ayufan-rock64/linux-build" -> "pine64dev/PINE64-Installer"
"ayufan-rock64/linux-build" -> "ayufan-rock64/linux-kernel"
"ayufan-rock64/linux-build" -> "ayufan-rock64/linux-mainline-kernel"
"ayufan-rock64/linux-build" -> "Leapo/Rock64-R64.GPIO"
"ayufan-rock64/linux-build" -> "tuxd3v/ats"
"ayufan-rock64/linux-build" -> "mrfixit2001/debian_builds"
"ayufan-rock64/linux-build" -> "ayufan-rock64/linux-u-boot"
"ayufan-rock64/linux-build" -> "mrfixit2001/debian_desktop"
"ayufan-rock64/linux-build" -> "rockchip-linux/kernel"
"ayufan-rock64/linux-build" -> "mrfixit2001/recalbox_rock64"
"ayufan-rock64/linux-build" -> "rockchip-linux/u-boot"
"ayufan-rock64/linux-build" -> "ayufan-rock64/linux-package"
"ayufan-rock64/linux-build" -> "carlosedp/kubernetes-arm"
"ayufan-rock64/linux-build" -> "rockchip-linux/libmali"
"ayufan-rock64/linux-build" -> "m01/rock64-arch-linux-build"
"becauseofAI/lffd-pytorch" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"becauseofAI/lffd-pytorch" -> "YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"becauseofAI/lffd-pytorch" -> "SyGoing/LFFD-MNN"
"becauseofAI/lffd-pytorch" -> "lijiannuist/lightDSFD"
"becauseofAI/lffd-pytorch" -> "chenjun2hao/CenterFace.pytorch"
"becauseofAI/lffd-pytorch" -> "Star-Clouds/centerface"
"luigivieira/Facial-Landmarks-Annotation-Tool" -> "Mukosame/Face-Annotation-Tool"
"luigivieira/Facial-Landmarks-Annotation-Tool" -> "mrgloom/Face-landmarks-detection-benchmark"
"luigivieira/Facial-Landmarks-Annotation-Tool" -> "jiankangdeng/MenpoBenchmark"
"prajnasb/observations" -> "mk-gurucharan/Face-Mask-Detection"
"prajnasb/observations" -> "Spidy20/face_mask_detection"
"prajnasb/observations" -> "kairess/mask-detection"
"prajnasb/observations" -> "chandrikadeb7/Face-Mask-Detection"
"prajnasb/observations" -> "JadHADDAD92/covid-mask-detector"
"prajnasb/observations" -> "X-zhangyang/Real-World-Masked-Face-Dataset"
"prajnasb/observations" -> "adityap27/face-mask-detector"
"prajnasb/observations" -> "Karan-Malik/FaceMaskDetector"
"cleardusk/MeGlass" -> "cleardusk/EmotionChallenge"
"cleardusk/MeGlass" -> "fwang91/IMDb-Face"
"cleardusk/MeGlass" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"cleardusk/MeGlass" -> "cleardusk/MFR"
"cleardusk/MeGlass" -> "olojuwin/facerecognize-for-mobile-phone"
"cleardusk/MeGlass" -> "xiaoboCASIA/SV-X-Softmax"
"cleardusk/MeGlass" -> "wy1iu/MHE"
"cleardusk/MeGlass" -> "KaleidoZhouYN/Details-on-Face-Recognition"
"cleardusk/MeGlass" -> "happynear/AMSoftmax"
"cleardusk/MeGlass" -> "sciencefans/coco_loss"
"cleardusk/MeGlass" -> "wywu/LAB"
"cleardusk/MeGlass" -> "happynear/NormFace"
"ENCP/CNNdroid" -> "sh1r0/caffe-android-lib"
"ENCP/CNNdroid" -> "zhangqianhui/CnnForAndroid"
"ENCP/CNNdroid" -> "sh1r0/caffe-android-demo"
"ENCP/CNNdroid" -> "bwasti/AICamera"
"ENCP/CNNdroid" -> "tornadomeet/mxnet-face"
"ENCP/CNNdroid" -> "songhan/SqueezeNet-Deep-Compression" ["e"=1]
"ENCP/CNNdroid" -> "in66-dev/In-Prestissimo"
"ENCP/CNNdroid" -> "Maratyszcza/NNPACK" ["e"=1]
"ENCP/CNNdroid" -> "google/gemmlowp" ["e"=1]
"ENCP/CNNdroid" -> "mtmd/Mobile_ConvNet"
"ENCP/CNNdroid" -> "jiaxiang-wu/quantized-cnn" ["e"=1]
"ENCP/CNNdroid" -> "ydwen/caffe-face"
"ENCP/CNNdroid" -> "csarron/emdl" ["e"=1]
"ENCP/CNNdroid" -> "solrex/caffe-mobile"
"ENCP/CNNdroid" -> "luoyetx/JDA"
"ElegantGod/SSHA" -> "deepinsight/mxnet-SSH"
"ElegantGod/SSHA" -> "KaleidoZhouYN/FaceRecognitionSystem"
"ElegantGod/SSHA" -> "zuoqing1988/ZQCNN-v0.0"
"ElegantGod/SSHA" -> "KaleidoZhouYN/e2e-joint-face-detection-and-alignment"
"FaceAR/OpenFaceIOS" -> "zweigraf/face-landmarking-ios"
"FaceAR/OpenFaceIOS" -> "YuAo/Vivid" ["e"=1]
"FaceAR/OpenFaceIOS" -> "TadasBaltrusaitis/OpenFace" ["e"=1]
"FaceAR/OpenFaceIOS" -> "ci2cv/face-analysis-sdk"
"FaceAR/OpenFaceIOS" -> "KeeganRen/FaceReconstruction" ["e"=1]
"FaceAR/OpenFaceIOS" -> "cheind/dest"
"FaceAR/OpenFaceIOS" -> "mattlawer/FaceLandmarksDetection"
"FaceAR/OpenFaceIOS" -> "luoyetx/face-alignment-at-3000fps"
"FaceAR/OpenFaceIOS" -> "tzutalin/dlib-android-app"
"FaceAR/OpenFaceIOS" -> "yulequan/face-alignment-in-3000fps"
"FaceAR/OpenFaceIOS" -> "erickingxu/MetalImage" ["e"=1]
"FaceAR/OpenFaceIOS" -> "patrikhuber/4dface" ["e"=1]
"FaceAR/OpenFaceIOS" -> "KimDaeWook/GPUImage-Instagram" ["e"=1]
"JiajiongCao/CELEB-500K" -> "szad670401/advanced-mxnet2caffe"
"KangKangLoveCat/insightface_ncnn" -> "honghuCode/mobileFacenet-ncnn"
"KangKangLoveCat/insightface_ncnn" -> "GRAYKEY/mobilefacenet_ncnn"
"KangKangLoveCat/insightface_ncnn" -> "liguiyuan/mobilefacenet-ncnn"
"KangKangLoveCat/insightface_ncnn" -> "moli232777144/mobilefacenet-mxnet"
"KangKangLoveCat/insightface_ncnn" -> "olojuwin/facerecognize-for-mobile-phone"
"MirrorYuChen/mnn_example" -> "xindongzhang/MNN-APPLICATIONS"
"MirrorYuChen/mnn_example" -> "MirrorYuChen/ncnn_example"
"MirrorYuChen/mnn_example" -> "JACKYLUO1991/106-landmarks-dataset"
"TencentYoutuResearch/FaceAlignment-FHR" -> "TencentYoutuResearch/FaceAttribute-FAN"
"TencentYoutuResearch/FaceAlignment-FHR" -> "tyshiwo/FHR_alignment"
"cheind/dest" -> "patrikhuber/superviseddescent"
"cheind/dest" -> "RoboPai/sdm"
"cheind/dest" -> "soundsilence/FaceAlignment"
"cheind/dest" -> "yulequan/face-alignment-in-3000fps"
"cheind/dest" -> "luoyetx/JDA"
"cheind/dest" -> "trigeorgis/mdm"
"cheind/dest" -> "KeeganRen/FaceReconstruction" ["e"=1]
"cheind/dest" -> "patrikhuber/4dface" ["e"=1]
"cheind/dest" -> "tntrung/impSDM"
"cheind/dest" -> "MichaelMure/3DMM" ["e"=1]
"cheind/dest" -> "TadasBaltrusaitis/CLM-framework"
"cheind/dest" -> "anson0910/CNN_face_detection"
"cheind/dest" -> "junyanz/FaceDemo" ["e"=1]
"cheind/dest" -> "jwyang/face-alignment"
"cheind/dest" -> "freesouls/face-alignment-at-3000fps"
"dlunion/EasyOpenPose" -> "dlunion/OpenPose"
"dlunion/EasyOpenPose" -> "lincolnhard/openpose-darknet"
"dlunion/EasyOpenPose" -> "dlunion/CaffeLSTM-OCR"
"gehaocool/CombinedMargin-caffe" -> "xialuxi/arcface-caffe"
"gehaocool/CombinedMargin-caffe" -> "zhanglaplace/MobileFaceNet"
"gehaocool/CombinedMargin-caffe" -> "KaleidoZhouYN/mobilefacenet-caffe"
"jian667/face-dataset" -> "JiajiongCao/CELEB-500K"
"jian667/face-dataset" -> "pterhoer/MAAD-Face"
"jian667/face-dataset" -> "jiankangdeng/handbook"
"jing-interactive/DancingGaga" -> "lincolnhard/openpose-darknet"
"jing-interactive/DancingGaga" -> "dlunion/EasyOpenPose"
"mnikitin/Learn-Convolutional-Neural-Network-for-Face-Anti-Spoofing" -> "zboulkenafet/Face-anti-spoofing-based-on-color-texture-analysis"
"mnikitin/Learn-Convolutional-Neural-Network-for-Face-Anti-Spoofing" -> "yunfan0621/Benchmarks_for_Face_Liveness_Detection"
"mnikitin/Learn-Convolutional-Neural-Network-for-Face-Anti-Spoofing" -> "vcolamatteo/face-authentication"
"mnikitin/Learn-Convolutional-Neural-Network-for-Face-Anti-Spoofing" -> "houliang428/CNN-for-face-anti-spoofing"
"mnikitin/Learn-Convolutional-Neural-Network-for-Face-Anti-Spoofing" -> "yaojieliu/ECCV2018-FaceDeSpoofing"
"mnikitin/Learn-Convolutional-Neural-Network-for-Face-Anti-Spoofing" -> "wuyongchn/Face-Spoofing-Detection-or-Face-Liveness-Detection"
"shamangary/SSR-Net" -> "b02901145/SSR-Net_megaage-asian"
"shamangary/SSR-Net" -> "yu4u/age-gender-estimation"
"shamangary/SSR-Net" -> "wayen820/gender_age_estimation_mxnet"
"shamangary/SSR-Net" -> "vicwer/C3AE_Age_Estimation"
"shamangary/SSR-Net" -> "shamangary/FSA-Net"
"shamangary/SSR-Net" -> "yu4u/age-estimation-pytorch"
"shamangary/SSR-Net" -> "BoyuanJiang/Age-Gender-Estimate-TF"
"shamangary/SSR-Net" -> "oukohou/SSR_Net_Pytorch"
"shamangary/SSR-Net" -> "dpressel/rude-carnie"
"shamangary/SSR-Net" -> "StevenBanama/C3AE"
"shamangary/SSR-Net" -> "wywu/LAB"
"shamangary/SSR-Net" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices"
"shamangary/SSR-Net" -> "GilLevi/AgeGenderDeepLearning"
"shamangary/SSR-Net" -> "siriusdemon/pytorch-DEX"
"shamangary/SSR-Net" -> "Raschka-research-group/coral-cnn"
"uricamic/flandmark" -> "uricamic/clandmark"
"uricamic/flandmark" -> "soundsilence/FaceAlignment"
"uricamic/flandmark" -> "jwyang/face-alignment"
"uricamic/flandmark" -> "tntrung/impSDM"
"uricamic/flandmark" -> "wg-perception/PartsBasedDetector"
"wayen820/gender_age_estimation_mxnet" -> "deepinx/age-gender-estimation"
"wayen820/gender_age_estimation_mxnet" -> "b02901145/SSR-Net_megaage-asian"
"wayen820/gender_age_estimation_mxnet" -> "shamangary/SSR-Net"
"wayen820/gender_age_estimation_mxnet" -> "ivclab/agegenderLMTCNN"
"wywu/LAB" -> "facebookresearch/supervision-by-registration"
"wywu/LAB" -> "MarekKowalski/DeepAlignmentNetwork"
"wywu/LAB" -> "zeusees/HyperLandmark"
"wywu/LAB" -> "guoqiangqi/PFLD"
"wywu/LAB" -> "HRNet/HRNet-Facial-Landmark-Detection"
"wywu/LAB" -> "polarisZhao/PFLD-pytorch"
"wywu/LAB" -> "D-X-Y/landmark-detection"
"wywu/LAB" -> "lsy17096535/face-landmark"
"wywu/LAB" -> "YadiraF/PRNet" ["e"=1]
"wywu/LAB" -> "protossw512/AdaptiveWingLoss"
"wywu/LAB" -> "mahyarnajibi/SSH"
"wywu/LAB" -> "zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment"
"wywu/LAB" -> "cleardusk/3DDFA" ["e"=1]
"wywu/LAB" -> "patrikhuber/eos" ["e"=1]
"wywu/LAB" -> "dlunion/mtcnn"
"zhanglaplace/3000fps-mtcnn" -> "zhanglaplace/mtcnn"
"zhanglaplace/MobileFaceNet" -> "KaleidoZhouYN/mobilefacenet-caffe"
"zhanglaplace/MobileFaceNet" -> "gehaocool/CombinedMargin-caffe"
"zhanglaplace/MobileFaceNet" -> "xialuxi/arcface-caffe"
"zhanglaplace/MobileFaceNet" -> "flycat0101/imistyrain-MobileFaceNet"
"zuoqing1988/ZQlib" -> "zuoqing1988/ZQ_VirtualAD"
"zuoqing1988/ZQlib" -> "zuoqing1988/ZQlibCuda"
"zuoqing1988/ZQlib" -> "zuoqing1988/ZQ_SmokeSimulation"
"zuoqing1988/ZQlib" -> "zuoqing1988/ZQCNN-v0.0"
"AhmetHamzaEmra/Intelegent_Lock" -> "ee09115/spoofing_detection"
"AhmetHamzaEmra/Intelegent_Lock" -> "richmondu/libfaceid"
"AhmetHamzaEmra/Intelegent_Lock" -> "rishikksh20/Liveness-Detection"
"AhmetHamzaEmra/Intelegent_Lock" -> "Guarouba/face_rec"
"AhmetHamzaEmra/Intelegent_Lock" -> "juan-csv/face_liveness_detection-Anti-spoofing"
"AhmetHamzaEmra/Intelegent_Lock" -> "anand498/Face-Liveness-Detection"
"AhmetHamzaEmra/Intelegent_Lock" -> "leokwu/livenessnet"
"AhmetHamzaEmra/Intelegent_Lock" -> "imironica/liveness"
"AhmetHamzaEmra/Intelegent_Lock" -> "JinghuiZhou/awesome_face_antispoofing"
"tpys/face-everthing" -> "wy1iu/sphereface"
"tpys/face-everthing" -> "happynear/AMSoftmax"
"tpys/face-everthing" -> "zeusees/FaceBoxes"
"tpys/face-everthing" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"tpys/face-everthing" -> "xialuxi/arcface-caffe"
"tpys/face-everthing" -> "happynear/FaceDatasets"
"tpys/face-everthing" -> "fwang91/IMDb-Face"
"tpys/face-everthing" -> "happynear/FaceVerification"
"deepcam-cn/Face-Anti-spoofing.pytorch" -> "clks-wzz/PRNet-Depth-Generation"
"deepcam-cn/Face-Anti-spoofing.pytorch" -> "rshaojimmy/AAAI2020-RFMetaFAS"
"deepcam-cn/Face-Anti-spoofing.pytorch" -> "clks-wzz/FAS-SGTD"
"deepcam-cn/Face-Anti-spoofing.pytorch" -> "SoftwareGift/Face-Anti-spoofing-for-RGB"
"deepcam-cn/Face-Anti-spoofing.pytorch" -> "yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing"
"deepcam-cn/Face-Anti-spoofing.pytorch" -> "dinhquy94/face-antispoofing-using-mobileNet"
"deepcam-cn/Face-Anti-spoofing.pytorch" -> "zzzkk2009/casia-surf-2019-codes"
"deepcam-cn/Face-Anti-spoofing.pytorch" -> "SeuTao/CVPR19-Face-Anti-spoofing"
"deepcam-cn/Face-Anti-spoofing.pytorch" -> "huguesva/Face-Anti-Spoofing-Neural-Network"
"takiyu/hyperface" -> "shashanktyagi/HyperFace-TensorFlow-implementation"
"takiyu/hyperface" -> "sourabhvora/HyperFace-with-SqueezeNet"
"takiyu/hyperface" -> "zhzhanp/TCDCN-face-alignment"
"takiyu/hyperface" -> "xipeng13/recurrent-face-alignment"
"varunagrawal/tiny-faces-pytorch" -> "cydonia999/Tiny_Faces_in_Tensorflow"
"varunagrawal/tiny-faces-pytorch" -> "peiyunh/tiny"
"Media-Smart/SKU110K-DenseDet" -> "Media-Smart/volkstuner"
"Media-Smart/SKU110K-DenseDet" -> "Media-Smart/vedacls"
"Media-Smart/SKU110K-DenseDet" -> "Media-Smart/cls2det"
"Media-Smart/SKU110K-DenseDet" -> "Media-Smart/cheetahinfer"
"arunponnusamy/object-detection-opencv" -> "arunponnusamy/cvlib"
"arunponnusamy/object-detection-opencv" -> "iArunava/YOLOv3-Object-Detection-with-OpenCV"
"arunponnusamy/object-detection-opencv" -> "Surya-Murali/Real-Time-Object-Detection-With-OpenCV"
"arunponnusamy/object-detection-opencv" -> "yash42828/YOLO-object-detection-with-OpenCV"
"arunponnusamy/object-detection-opencv" -> "arunponnusamy/gender-detection-keras"
"arunponnusamy/object-detection-opencv" -> "arunponnusamy/face-detection-comparison"
"610265158/face_landmark" -> "610265158/Peppa_Pig_Face_Engine"
"610265158/face_landmark" -> "guoqiangqi/PFLD"
"610265158/face_landmark" -> "goodluckcwl/Face-alignment-mobilenet-v2"
"610265158/face_landmark" -> "protossw512/AdaptiveWingLoss"
"610265158/face_landmark" -> "610265158/faceboxes-tensorflow"
"610265158/face_landmark" -> "polarisZhao/PFLD-pytorch"
"610265158/face_landmark" -> "ainrichman/Peppa-Facial-Landmark-PyTorch"
"610265158/face_landmark" -> "D-X-Y/landmark-detection"
"610265158/face_landmark" -> "Hsintao/pfld_106_face_landmarks"
"610265158/face_landmark" -> "hanson-young/nniefacelib"
"610265158/face_landmark" -> "mrgloom/Face-landmarks-detection-benchmark"
"610265158/face_landmark" -> "wywu/LAB"
"610265158/face_landmark" -> "HRNet/HRNet-Facial-Landmark-Detection"
"610265158/face_landmark" -> "TheSouthFrog/stylealign"
"610265158/face_landmark" -> "facebookresearch/supervision-by-registration"
"SimonCherryGZ/face-landmark-android" -> "gicheonkang/fast-face-android"
"SimonCherryGZ/face-landmark-android" -> "tzutalin/dlib-android-app"
"SimonCherryGZ/face-landmark-android" -> "SimonCherryGZ/ARCamera" ["e"=1]
"SimonCherryGZ/face-landmark-android" -> "ongakuer/CameraFilter" ["e"=1]
"SimonCherryGZ/face-landmark-android" -> "tunaemre/Face-Swap-Android"
"SimonCherryGZ/face-landmark-android" -> "DingProg/Makeup" ["e"=1]
"SimonCherryGZ/face-landmark-android" -> "KAlO2/PerfectShow" ["e"=1]
"SimonCherryGZ/face-landmark-android" -> "tzutalin/dlib-android"
"SimonCherryGZ/face-landmark-android" -> "gicheonkang/fast_face_android"
"SimonCherryGZ/face-landmark-android" -> "hardik-trivedi/FaceFilter"
"SimonCherryGZ/face-landmark-android" -> "gaetanozappi/Android-face-filters"
"SimonCherryGZ/face-landmark-android" -> "gsrathoreniks/FaceFilter"
"SimonCherryGZ/face-landmark-android" -> "cangwang/MagicCamera3" ["e"=1]
"SimonCherryGZ/face-landmark-android" -> "ochornenko/Camera2GLPreview" ["e"=1]
"SimonCherryGZ/face-landmark-android" -> "doggycoder/AndroidOpenGLDemo" ["e"=1]
"goodluckcwl/Face-alignment-mobilenet-v2" -> "tensor-yu/cascaded_mobilenet-v2"
"goodluckcwl/Face-alignment-mobilenet-v2" -> "zhanglaplace/MobileFaceNet"
"goodluckcwl/Face-alignment-mobilenet-v2" -> "xialuxi/arcface-caffe"
"goodluckcwl/Face-alignment-mobilenet-v2" -> "KaleidoZhouYN/mobilefacenet-caffe"
"goodluckcwl/Face-alignment-mobilenet-v2" -> "610265158/face_landmark"
"goodluckcwl/Face-alignment-mobilenet-v2" -> "zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment"
"goodluckcwl/Face-alignment-mobilenet-v2" -> "TropComplique/wing-loss"
"haofanwang/mxnet-Head-Pose" -> "Cjiangbpcs/gazenet_mxJiang"
"sthanhng/yoloface" -> "abars/YoloKerasFaceDetection"
"sthanhng/yoloface" -> "Chenyang-ZHU/YOLOv3-Based-Face-Detection-Tracking"
"sthanhng/yoloface" -> "iitzco/faced"
"sthanhng/yoloface" -> "xhuvom/darknetFaceID"
"sthanhng/yoloface" -> "AzureWoods/faceRecognition-yolo-facenet"
"sthanhng/yoloface" -> "yeephycho/tensorflow-face-detection"
"sthanhng/yoloface" -> "ildoonet/deepface"
"sthanhng/yoloface" -> "bruceyang2012/Face-detection-with-mobilenet-ssd"
"sthanhng/yoloface" -> "imistyrain/yolo-face"
"sthanhng/yoloface" -> "fyr91/face_detection"
"sthanhng/yoloface" -> "zlmo/Face-Detection"
"sthanhng/yoloface" -> "SpikeKing/keras-yolo3-detection" ["e"=1]
"sthanhng/yoloface" -> "zisianw/FaceBoxes.PyTorch"
"sthanhng/yoloface" -> "ipazc/mtcnn" ["e"=1]
"lbeaucourt/Object-detection" -> "iArunava/YOLOv3-Object-Detection-with-OpenCV"
"lbeaucourt/Object-detection" -> "datitran/object_detector_app" ["e"=1]
"lbeaucourt/Object-detection" -> "gustavz/realtime_object_detection"
"lbeaucourt/Object-detection" -> "bendidi/Tracking-with-darkflow" ["e"=1]
"lbeaucourt/Object-detection" -> "myfavouritekk/vdetlib" ["e"=1]
"tomrunia/TF_FeatureExtraction" -> "efidalgo/AutoBlur-CNN-Features"
"zhzhanp/TCDCN-face-alignment" -> "zhusz/CVPR15-CFSS"
"zhzhanp/TCDCN-face-alignment" -> "ishay2b/VanillaCNN"
"zhzhanp/TCDCN-face-alignment" -> "trigeorgis/mdm"
"zhzhanp/TCDCN-face-alignment" -> "lsy17096535/face-landmark"
"zhzhanp/TCDCN-face-alignment" -> "jwyang/face-alignment"
"zhzhanp/TCDCN-face-alignment" -> "MarekKowalski/DeepAlignmentNetwork"
"zhzhanp/TCDCN-face-alignment" -> "tornadomeet/mxnet-face"
"zhzhanp/TCDCN-face-alignment" -> "patrikhuber/superviseddescent"
"zhzhanp/TCDCN-face-alignment" -> "takiyu/hyperface"
"zhzhanp/TCDCN-face-alignment" -> "mrgloom/Face-landmarks-detection-benchmark"
"zhzhanp/TCDCN-face-alignment" -> "luoyetx/deep-landmark"
"zhzhanp/TCDCN-face-alignment" -> "yulequan/face-alignment-in-3000fps"
"zhzhanp/TCDCN-face-alignment" -> "qiexing/face-landmark-localization"
"zhzhanp/TCDCN-face-alignment" -> "flyingzhao/tfTCDCN"
"zhzhanp/TCDCN-face-alignment" -> "soundsilence/FaceAlignment"
"deepinx/age-gender-estimation" -> "wayen820/gender_age_estimation_mxnet"
"ildoonet/deepface" -> "yeephycho/tensorflow-face-detection"
"ildoonet/deepface" -> "iitzco/faced"
"ildoonet/deepface" -> "auroua/InsightFace_TF"
"ildoonet/deepface" -> "krasserm/face-recognition"
"ildoonet/deepface" -> "sirius-ai/MobileFaceNet_TF"
"ildoonet/deepface" -> "TropComplique/FaceBoxes-tensorflow"
"ildoonet/deepface" -> "swghosh/DeepFace"
"wangyirui/AD_Prediction" -> "ehosseiniasl/3d-convolutional-network"
"wangyirui/AD_Prediction" -> "jrieke/cnn-interpretability"
"wangyirui/AD_Prediction" -> "regnerus/keras-alzheimers-3d-conv"
"wangyirui/AD_Prediction" -> "aramis-lab/AD-DL"
"wangyirui/AD_Prediction" -> "vkola-lab/brain2020"
"wangyirui/AD_Prediction" -> "NYUMedML/CNN_design_for_AD"
"wangyirui/AD_Prediction" -> "Information-Fusion-Lab-Umass/alzheimers-cnn-study"
"wangyirui/AD_Prediction" -> "OpenXAIProject/Diagnosis-of-Alzheimers-Disease"
"wangyirui/AD_Prediction" -> "grantgasser/Alzheimers-Prediction"
"wangyirui/AD_Prediction" -> "deepak525/Dementia-Classification-Compare-Classifiers"
"wangyirui/AD_Prediction" -> "neuro-ml/resnet_cnn_mri_adni"
"wangyirui/AD_Prediction" -> "bbanddd/ADDL"
"wangweiwei/video-metadata-thumbnails" -> "wangweiwei/vue-resize-observer"
"wangweiwei/video-metadata-thumbnails" -> "tony709394/postchildren-web"
"wangweiwei/video-metadata-thumbnails" -> "yanxlg/react-components"
"wangweiwei/video-metadata-thumbnails" -> "lijian096870/LJKeyBroadEventManager"
"yeziyang1992/Face_Recognition_Client" -> "yeziyang1992/Python-Tensorflow-Face-v2.0"
"yule-li/CosFace" -> "MuggleWang/CosFace_pytorch"
"yule-li/CosFace" -> "Joker316701882/Additive-Margin-Softmax"
"yule-li/CosFace" -> "happynear/AMSoftmax"
"yule-li/CosFace" -> "auroua/InsightFace_TF"
"yule-li/CosFace" -> "wy1iu/sphereface"
"yule-li/CosFace" -> "clcarwin/sphereface_pytorch"
"yule-li/CosFace" -> "happynear/FaceDatasets"
"yule-li/CosFace" -> "wujiyang/Face_Pytorch"
"yule-li/CosFace" -> "luckycallor/InsightFace-tensorflow"
"yule-li/CosFace" -> "penincillin/DREAM"
"yule-li/CosFace" -> "HiKapok/tf.extra_losses"
"yule-li/CosFace" -> "xialuxi/arcface-caffe"
"yule-li/CosFace" -> "HRLTY/TP-GAN" ["e"=1]
"abars/YoloKerasFaceDetection" -> "dannyblueliu/YOLO-Face-detection"
"abars/YoloKerasFaceDetection" -> "sthanhng/yoloface"
"abars/YoloKerasFaceDetection" -> "BoyuanJiang/Age-Gender-Estimate-TF"
"abars/YoloKerasFaceDetection" -> "OValery16/gender-age-classification"
"abars/YoloKerasFaceDetection" -> "wayen820/gender_age_estimation_mxnet"
"abars/YoloKerasFaceDetection" -> "dpressel/rude-carnie"
"abars/YoloKerasFaceDetection" -> "imistyrain/yolo-face"
"ManishSoni1908/Mobilenet-ssd-keras" -> "tanakataiki/ssd_kerasV2"
"hysts/pytorch_mpiigaze_demo" -> "hysts/pytorch_mpiigaze"
"hysts/pytorch_mpiigaze_demo" -> "xucong-zhang/ETH-XGaze"
"hysts/pytorch_mpiigaze_demo" -> "david-wb/gaze-estimation"
"hysts/pytorch_mpiigaze_demo" -> "cvlab-uob/Awesome-Gaze-Estimation"
"hysts/pytorch_mpiigaze_demo" -> "hysts/pl_gaze_estimation"
"hysts/pytorch_mpiigaze_demo" -> "Tobias-Fischer/rt_gene"
"hysts/pytorch_mpiigaze_demo" -> "NVlabs/few_shot_gaze"
"hysts/pytorch_mpiigaze_demo" -> "swook/GazeML"
"hysts/pytorch_mpiigaze_demo" -> "erkil1452/gaze360"
"hysts/pytorch_mpiigaze_demo" -> "swook/EVE"
"hysts/pytorch_mpiigaze_demo" -> "bjj9/EVE_SCPT"
"hysts/pytorch_mpiigaze_demo" -> "VIPL-TAL-GAZE/GAZE2021"
"hysts/pytorch_mpiigaze_demo" -> "yihuacheng/PureGaze"
"hysts/pytorch_mpiigaze_demo" -> "glefundes/mobile-face-gaze"
"hysts/pytorch_mpiigaze_demo" -> "WuZhuoran/awesome-gaze"
"luoyetx/mini-caffe" -> "zuoqing1988/ZQCNN-v0.0"
"luoyetx/mini-caffe" -> "yonghenglh6/DepthwiseConvolution" ["e"=1]
"luoyetx/mini-caffe" -> "foreverYoungGitHub/MTCNN"
"luoyetx/mini-caffe" -> "blankWorld/MTCNN-Accelerate-Onet"
"luoyetx/mini-caffe" -> "AlphaQi/MTCNN-light"
"luoyetx/mini-caffe" -> "solrex/caffe-mobile"
"luoyetx/mini-caffe" -> "dlunion/mtcnn"
"luoyetx/mini-caffe" -> "OAID/YSQfastfd"
"luoyetx/mini-caffe" -> "farmingyard/caffe-mobilenet" ["e"=1]
"luoyetx/mini-caffe" -> "shicai/MobileNet-Caffe" ["e"=1]
"luoyetx/mini-caffe" -> "in66-dev/In-Prestissimo"
"luoyetx/mini-caffe" -> "cypw/MXNet2Caffe"
"luoyetx/mini-caffe" -> "BUG1989/ncnn-benchmark"
"luoyetx/mini-caffe" -> "KaleidoZhouYN/mobilefacenet-caffe"
"luoyetx/mini-caffe" -> "CongWeilin/mtcnn-caffe"
"cydonia999/Tiny_Faces_in_Tensorflow" -> "peiyunh/tiny"
"cydonia999/Tiny_Faces_in_Tensorflow" -> "alexattia/ExtendedTinyFaces"
"cydonia999/Tiny_Faces_in_Tensorflow" -> "chinakook/hr101_mxnet"
"cydonia999/Tiny_Faces_in_Tensorflow" -> "varunagrawal/tiny-faces-pytorch"
"cydonia999/Tiny_Faces_in_Tensorflow" -> "mahyarnajibi/SSH"
"cydonia999/Tiny_Faces_in_Tensorflow" -> "sfzhang15/SFD"
"cydonia999/Tiny_Faces_in_Tensorflow" -> "TropComplique/FaceBoxes-tensorflow"
"cydonia999/Tiny_Faces_in_Tensorflow" -> "EricZgw/PyramidBox"
"cydonia999/Tiny_Faces_in_Tensorflow" -> "Jack-CV/PCN"
"cydonia999/Tiny_Faces_in_Tensorflow" -> "zeusees/FaceBoxes"
"fyr91/face_detection" -> "fyr91/face_recognition"
"xiaoxiong74/face-cluster-by-infomap" -> "sstzal/STAR-FC"
"xiaoxiong74/face-cluster-by-infomap" -> "yl-1993/learn-to-cluster"
"xiaoxiong74/face-cluster-by-infomap" -> "deepcam-cn/FaceQuality"
"emmanuelkalunga/Online-SSVEP" -> "sylvchev/dataset-ssvep-exoskeleton"
"ustcqidi/BeautyPredict" -> "lucasxlu/TransFBP"
"ustcqidi/BeautyPredict" -> "HuyTu7/face_rating"
"ustcqidi/BeautyPredict" -> "HCIILAB/SCUT-FBP5500-Database-Release"
"ustcqidi/BeautyPredict" -> "bknyaz/beauty_vision"
"DefTruth/torchlm" -> "jhb86253817/PIPNet"
"DefTruth/torchlm" -> "choyingw/SynergyNet" ["e"=1]
"dlunion/CC4.0" -> "dlunion/CC5.0"
"dlunion/CC4.0" -> "dlunion/CCDL"
"dlunion/CC4.0" -> "dlunion/CaffeLSTM-OCR"
"dlunion/CC4.0" -> "dlunion/EasyOpenPose"
"EB-Dodo/C-MS-Celeb" -> "KaleidoZhouYN/Sphereface-Ms-celeb-1M"
"Media-Smart/cheetahinfer" -> "Media-Smart/vedacls"
"Media-Smart/cheetahinfer" -> "Media-Smart/flexinfer"
"Media-Smart/cheetahinfer" -> "Media-Smart/volkstuner"
"Media-Smart/cheetahinfer" -> "Media-Smart/volkscv"
"Media-Smart/cheetahinfer" -> "Media-Smart/cls2det"
"Media-Smart/flexinfer" -> "Media-Smart/cheetahinfer"
"Media-Smart/flexinfer" -> "Media-Smart/vedacls"
"Media-Smart/flexinfer" -> "Media-Smart/volkstuner"
"Media-Smart/flexinfer" -> "Media-Smart/volksdep"
"Media-Smart/flexinfer" -> "Media-Smart/cls2det"
"Media-Smart/flexinfer" -> "Media-Smart/volkscv"
"Media-Smart/vedacls" -> "Media-Smart/volkstuner"
"Media-Smart/vedacls" -> "Media-Smart/cls2det"
"Media-Smart/vedacls" -> "Media-Smart/cheetahinfer"
"Media-Smart/volksdep" -> "Media-Smart/flexinfer"
"Media-Smart/volksdep" -> "Media-Smart/cheetahinfer"
"Media-Smart/volksdep" -> "Media-Smart/vedacls"
"Media-Smart/volksdep" -> "Media-Smart/vedaseg"
"Media-Smart/volksdep" -> "Media-Smart/vedastr" ["e"=1]
"Media-Smart/volksdep" -> "Media-Smart/volkscv"
"Media-Smart/volksdep" -> "Media-Smart/volkstuner"
"Media-Smart/volksdep" -> "Media-Smart/cls2det"
"Media-Smart/volksdep" -> "Media-Smart/vedadet"
"Media-Smart/volksdep" -> "Media-Smart/vedatad"
"Media-Smart/volksdep" -> "dlunion/tensorRTIntegrate" ["e"=1]
"mrgloom/Face-landmarks-detection-benchmark" -> "MarekKowalski/DeepAlignmentNetwork"
"mrgloom/Face-landmarks-detection-benchmark" -> "qiexing/face-landmark-localization"
"mrgloom/Face-landmarks-detection-benchmark" -> "luigivieira/Facial-Landmarks-Annotation-Tool"
"mrgloom/Face-landmarks-detection-benchmark" -> "trigeorgis/mdm"
"mrgloom/Face-landmarks-detection-benchmark" -> "lsy17096535/face-landmark"
"mrgloom/Face-landmarks-detection-benchmark" -> "jwyang/face-alignment"
"mrgloom/Face-landmarks-detection-benchmark" -> "zhzhanp/TCDCN-face-alignment"
"mrgloom/Face-landmarks-detection-benchmark" -> "wywu/LAB"
"mrgloom/Face-landmarks-detection-benchmark" -> "luoyetx/deep-landmark"
"mrgloom/Face-landmarks-detection-benchmark" -> "zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment"
"mrgloom/Face-landmarks-detection-benchmark" -> "ishay2b/VanillaCNN"
"mrgloom/Face-landmarks-detection-benchmark" -> "yulequan/face-alignment-in-3000fps"
"mrgloom/Face-landmarks-detection-benchmark" -> "610265158/face_landmark"
"mrgloom/Face-landmarks-detection-benchmark" -> "delphifirst/FaceX"
"mrgloom/Face-landmarks-detection-benchmark" -> "chengzhengxin/sdm"
"patrikhuber/superviseddescent" -> "RoboPai/sdm"
"patrikhuber/superviseddescent" -> "patrikhuber/4dface" ["e"=1]
"patrikhuber/superviseddescent" -> "yulequan/face-alignment-in-3000fps"
"patrikhuber/superviseddescent" -> "tntrung/impSDM"
"patrikhuber/superviseddescent" -> "luoyetx/JDA"
"patrikhuber/superviseddescent" -> "cheind/dest"
"patrikhuber/superviseddescent" -> "freesouls/face-alignment-at-3000fps"
"patrikhuber/superviseddescent" -> "zhusz/CVPR15-CFSS"
"patrikhuber/superviseddescent" -> "soundsilence/FaceAlignment"
"patrikhuber/superviseddescent" -> "jwyang/face-alignment"
"patrikhuber/superviseddescent" -> "TadasBaltrusaitis/CLM-framework"
"patrikhuber/superviseddescent" -> "patrikhuber/eos" ["e"=1]
"patrikhuber/superviseddescent" -> "zhzhanp/TCDCN-face-alignment"
"patrikhuber/superviseddescent" -> "menpo/lsfm" ["e"=1]
"patrikhuber/superviseddescent" -> "nenadmarkus/pico"
"trigeorgis/mdm" -> "zhusz/CVPR15-CFSS"
"trigeorgis/mdm" -> "xipeng13/recurrent-face-alignment"
"trigeorgis/mdm" -> "shaoxiaohu/Face_Alignment_Two_Stage_Re-initialization"
"trigeorgis/mdm" -> "moliusimon/csdm"
"trigeorgis/mdm" -> "tntrung/impSDM"
"uricamic/clandmark" -> "uricamic/flandmark"
"uricamic/clandmark" -> "TadasBaltrusaitis/CLM-framework"
"uricamic/clandmark" -> "luoyetx/JDA"
"pppoe/WhatsThis-iOS" -> "Leliana/WhatsThis"
"Jiahao-UTS/SLPT-master" -> "starhiking/HeatmapInHeatmap"
"alexattia/ExtendedTinyFaces" -> "cydonia999/Tiny_Faces_in_Tensorflow"
"b02901145/SSR-Net_megaage-asian" -> "shamangary/SSR-Net"
"b02901145/SSR-Net_megaage-asian" -> "wayen820/gender_age_estimation_mxnet"
"b02901145/SSR-Net_megaage-asian" -> "vicwer/C3AE_Age_Estimation"
"estebanuri/face_recognition" -> "shubham0204/FaceRecognition_With_FaceNet_Android"
"estebanuri/face_recognition" -> "syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing"
"estebanuri/face_recognition" -> "sirius-ai/MobileFaceNet_TF"
"estebanuri/face_recognition" -> "estebanuri/facemaskdetector"
"estebanuri/face_recognition" -> "atharvakale31/Real-Time_Face_Recognition_Android"
"estebanuri/face_recognition" -> "Malikanhar/Android-Face-Recognition"
"estebanuri/face_recognition" -> "pillarpond/face-recognizer-android"
"sbdcv/sbd_mask" -> "olojuwin/facerecognize-for-mobile-phone"
"mk-gurucharan/Face-Mask-Detection" -> "prajnasb/observations"
"david-wb/gaze-estimation" -> "hysts/pytorch_mpiigaze_demo"
"david-wb/gaze-estimation" -> "ycdhqzhiai/Gaze-PFLD"
"david-wb/gaze-estimation" -> "swook/GazeML"
"david-wb/gaze-estimation" -> "yihuacheng/Gaze-Net"
"david-wb/gaze-estimation" -> "yihuacheng/Full-face"
"david-wb/gaze-estimation" -> "NVlabs/few_shot_gaze"
"njvisionpower/mxnet-insightface-cpp" -> "njvisionpower/mxnet-mtcnn-cpp"
"njvisionpower/mxnet-insightface-cpp" -> "KangKangLoveCat/insightface_ncnn"
"njvisionpower/mxnet-insightface-cpp" -> "markson14/Face-Recognition-Cpp"
"juan-csv/face_recognition_occlusion" -> "JavisPeng/FaceRecognitionWithMask"
"juan-csv/face_recognition_occlusion" -> "susithrj/MaskNet-Occlusion-Invariant-Face-Recognition-System"
"juan-csv/face_recognition_occlusion" -> "levanquoc/masked-face-recognition"
"yihuacheng/GazeTR" -> "yihuacheng/PureGaze"
"yihuacheng/GazeTR" -> "yihuacheng/Full-face"
"anand498/Face-Liveness-Detection" -> "juan-csv/face_liveness_detection-Anti-spoofing"
"anand498/Face-Liveness-Detection" -> "rishikksh20/Liveness-Detection"
"anand498/Face-Liveness-Detection" -> "imironica/liveness"
"anand498/Face-Liveness-Detection" -> "sakethbachu/Face-Liveness-Detection"
"anand498/Face-Liveness-Detection" -> "OhmGeek/FacialLivenessTests"
"vudung45/HLS-GoogleDrive" -> "vudung45/FaceRTC"
"vudung45/HLS-GoogleDrive" -> "vudung45/MovieSites-MediaExtractor"
"Lauszus/FaceRecognitionApp" -> "Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework"
"Lauszus/FaceRecognitionApp" -> "abhn/marvel"
"Lauszus/FaceRecognitionApp" -> "Lauszus/FaceRecognitionLib"
"Lauszus/FaceRecognitionApp" -> "Qualeams/Android-Face-Recognition-with-Deep-Learning-Library"
"Lauszus/FaceRecognitionApp" -> "pillarpond/face-recognizer-android"
"Lauszus/FaceRecognitionApp" -> "Malikanhar/Android-Face-Recognition"
"Lauszus/FaceRecognitionApp" -> "shubham0204/FaceRecognition_With_FaceNet_Android"
"Lauszus/FaceRecognitionApp" -> "gv22ga/dlib-face-recognition-android"
"Lauszus/FaceRecognitionApp" -> "atharvakale31/Real-Time_Face_Recognition_Android"
"Lauszus/FaceRecognitionApp" -> "husaynhakeem/android-face-detector" ["e"=1]
"Lauszus/FaceRecognitionApp" -> "RedApparat/FaceDetector" ["e"=1]
"Lauszus/FaceRecognitionApp" -> "gicheonkang/fast-face-android"
"Lauszus/FaceRecognitionApp" -> "yaylas/AndroidFaceRecognizer"
"Lauszus/FaceRecognitionApp" -> "sirius-ai/MobileFaceNet_TF"
"Lauszus/FaceRecognitionApp" -> "Zod20/OpenCV-Face-Recognition-Android"
"Charrin/RetinaFace-Cpp" -> "clancylian/retinaface"
"Charrin/RetinaFace-Cpp" -> "Star-Clouds/centerface"
"Charrin/RetinaFace-Cpp" -> "biubug6/Face-Detector-1MB-with-landmark"
"Charrin/RetinaFace-Cpp" -> "olojuwin/facerecognize-for-mobile-phone"
"Charrin/RetinaFace-Cpp" -> "xialuxi/arcface-caffe"
"Charrin/RetinaFace-Cpp" -> "hanson-young/nniefacelib"
"Charrin/RetinaFace-Cpp" -> "cholihao/Retinaface-caffe"
"Charrin/RetinaFace-Cpp" -> "moli232777144/mtcnn_ncnn"
"Charrin/RetinaFace-Cpp" -> "honghuCode/mobileFacenet-ncnn"
"Charrin/RetinaFace-Cpp" -> "cypw/MXNet2Caffe"
"Charrin/RetinaFace-Cpp" -> "szad670401/advanced-mxnet2caffe"
"Charrin/RetinaFace-Cpp" -> "zeusees/FaceBoxes"
"Charrin/RetinaFace-Cpp" -> "zuoqing1988/train-mtcnn"
"Charrin/RetinaFace-Cpp" -> "bleakie/MaskInsightface"
"Charrin/RetinaFace-Cpp" -> "wzj5133329/retinaface_caffe"
"jomariya23156/face-recognition-with-liveness-web-login" -> "birdowl21/Face-Liveness-Detection-Anti-Spoofing-Web-App"
"yulequan/face-alignment-in-3000fps" -> "jwyang/face-alignment"
"yulequan/face-alignment-in-3000fps" -> "soundsilence/FaceAlignment"
"yulequan/face-alignment-in-3000fps" -> "freesouls/face-alignment-at-3000fps"
"yulequan/face-alignment-in-3000fps" -> "luoyetx/face-alignment-at-3000fps"
"yulequan/face-alignment-in-3000fps" -> "patrikhuber/superviseddescent"
"yulequan/face-alignment-in-3000fps" -> "luoyetx/JDA"
"yulequan/face-alignment-in-3000fps" -> "delphifirst/FaceX"
"yulequan/face-alignment-in-3000fps" -> "qiexing/face-landmark-localization"
"yulequan/face-alignment-in-3000fps" -> "CitrusRokid/OpenNPD"
"yulequan/face-alignment-in-3000fps" -> "luoyetx/deep-landmark"
"yulequan/face-alignment-in-3000fps" -> "RoboPai/sdm"
"yulequan/face-alignment-in-3000fps" -> "TadasBaltrusaitis/CLM-framework"
"yulequan/face-alignment-in-3000fps" -> "zhusz/CVPR15-CFSS"
"yulequan/face-alignment-in-3000fps" -> "layumi/2015_Face_Detection"
"yulequan/face-alignment-in-3000fps" -> "wincle/NPD"
"FireflyTeam/kernel" -> "FireflyTeam/build"
"FireflyTeam/kernel" -> "FireflyTeam/u-boot"
"ayufan-rock64/linux-mainline-kernel" -> "ayufan-rock64/linux-kernel"
"vudung45/FaceRec" -> "vudung45/FaceRTC"
"vudung45/FaceRec" -> "habrman/FaceRecognition"
"airockchip/librga" -> "rockchip-linux/rknpu2"
"number9473/nn-algorithm" -> "Jack-CV/PCN"
"number9473/nn-algorithm" -> "sfzhang15/SFD"
"number9473/nn-algorithm" -> "mahyarnajibi/SSH"
"number9473/nn-algorithm" -> "sciencefans/coco_loss"
"number9473/nn-algorithm" -> "walkoncross/prepare-faces-zyf"
"number9473/nn-algorithm" -> "huangyangyu/NoiseFace"
"atharvakale31/Real-Time_Face_Recognition_Android" -> "Malikanhar/Android-Face-Recognition"
"atharvakale31/Real-Time_Face_Recognition_Android" -> "irhammuch/android-face-recognition"
"atharvakale31/Real-Time_Face_Recognition_Android" -> "shubham0204/FaceRecognition_With_FaceNet_Android"
"shubham0204/FaceRecognition_With_FaceNet_Android" -> "estebanuri/face_recognition"
"shubham0204/FaceRecognition_With_FaceNet_Android" -> "atharvakale31/Real-Time_Face_Recognition_Android"
"shubham0204/FaceRecognition_With_FaceNet_Android" -> "syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing"
"jongmoochoi/irisfaceRGBD" -> "sergeytulyakov/FaceCept3D"
"jongmoochoi/irisfaceRGBD" -> "cating341/RGB-D-Face-Recognition"
"jongmoochoi/irisfaceRGBD" -> "XingwXiong/Face3D-Pytorch"
"adityap27/face-mask-detector" -> "VictorLin000/YOLOv3_mask_detect"
"EASY-EAI/yolov5" -> "airockchip/yolov5"
"EASY-EAI/yolov5" -> "soloIife/yolov5_for_rknn"
"EASY-EAI/yolov5" -> "rockchip-linux/rknpu"
"EASY-EAI/yolov5" -> "airockchip/rknn_model_zoo"
"EASY-EAI/yolov5" -> "rockchip-linux/rknn-toolkit"
"EASY-EAI/yolov5" -> "littledeep/YOLOv5-RK3399Pro"
"EASY-EAI/yolov5" -> "rockchip-linux/rknn-toolkit2"
"EASY-EAI/yolov5" -> "troyseed/toybrick_ssd_multithread"
"EASY-EAI/yolov5" -> "Zhou-sx/yolov5_Deepsort_rknn"
"EASY-EAI/yolov5" -> "mrwangwg123/my-rknn-yolov5"
"qiexing/face-landmark-localization" -> "luoyetx/deep-landmark"
"qiexing/face-landmark-localization" -> "lsy17096535/face-landmark"
"qiexing/face-landmark-localization" -> "guozhongluo/head-pose-estimation-and-face-landmark"
"qiexing/face-landmark-localization" -> "yulequan/face-alignment-in-3000fps"
"qiexing/face-landmark-localization" -> "ishay2b/VanillaCNN"
"qiexing/face-landmark-localization" -> "blankWorld/MTCNN-Accelerate-Onet"
"qiexing/face-landmark-localization" -> "mrgloom/Face-landmarks-detection-benchmark"
"qiexing/face-landmark-localization" -> "MarekKowalski/DeepAlignmentNetwork"
"qiexing/face-landmark-localization" -> "CongWeilin/mtcnn-caffe"
"qiexing/face-landmark-localization" -> "ElegantGod/ncnn"
"qiexing/face-landmark-localization" -> "dlunion/mtcnn"
"qiexing/face-landmark-localization" -> "ydwen/caffe-face"
"qiexing/face-landmark-localization" -> "zhzhanp/TCDCN-face-alignment"
"qiexing/face-landmark-localization" -> "foreverYoungGitHub/MTCNN"
"qiexing/face-landmark-localization" -> "lincolnhard/head-pose-estimation"
"radxa/kernel" -> "radxa/u-boot"
"radxa/kernel" -> "radxa/rockchip-bsp"
"Jack-CV/PCN" -> "sciencefans/RSA-for-object-detection"
"Jack-CV/PCN" -> "ElegantGod/ncnn"
"Jack-CV/PCN" -> "dlunion/mtcnn"
"Jack-CV/PCN" -> "zeusees/FaceBoxes"
"Jack-CV/PCN" -> "sfzhang15/SFD"
"Jack-CV/PCN" -> "zuoqing1988/ZQCNN-v0.0"
"Jack-CV/PCN" -> "szad670401/Fast-MTCNN"
"Jack-CV/PCN" -> "moli232777144/mobilefacenet-mxnet"
"Jack-CV/PCN" -> "Seanlinx/mtcnn"
"Jack-CV/PCN" -> "liuziwei7/mobile-id"
"fwang91/IMDb-Face" -> "happynear/FaceDatasets"
"fwang91/IMDb-Face" -> "happynear/AMSoftmax"
"fwang91/IMDb-Face" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"fwang91/IMDb-Face" -> "happynear/NormFace"
"fwang91/IMDb-Face" -> "wy1iu/sphereface"
"fwang91/IMDb-Face" -> "Joker316701882/Additive-Margin-Softmax"
"fwang91/IMDb-Face" -> "sciencefans/coco_loss"
"fwang91/IMDb-Face" -> "cleardusk/MeGlass"
"fwang91/IMDb-Face" -> "xiaoboCASIA/SV-X-Softmax"
"fwang91/IMDb-Face" -> "penincillin/DREAM"
"fwang91/IMDb-Face" -> "moli232777144/mobilefacenet-mxnet"
"fwang91/IMDb-Face" -> "sfzhang15/SFD"
"fwang91/IMDb-Face" -> "seasonSH/DocFace"
"fwang91/IMDb-Face" -> "sciencefans/RSA-for-object-detection"
"fwang91/IMDb-Face" -> "wy1iu/sphereface-plus"
"codeniko/shape_predictor_81_face_landmarks" -> "codeniko/eos"
"codeniko/shape_predictor_81_face_landmarks" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019"
"codeniko/shape_predictor_81_face_landmarks" -> "YuvalNirkin/face_segmentation" ["e"=1]
"codeniko/shape_predictor_81_face_landmarks" -> "songhengyang/face_landmark_factory"
"codeniko/shape_predictor_81_face_landmarks" -> "zeusees/HyperLandmark"
"codeniko/shape_predictor_81_face_landmarks" -> "yinguobing/cnn-facial-landmark"
"codeniko/shape_predictor_81_face_landmarks" -> "cleardusk/MeGlass"
"codeniko/shape_predictor_81_face_landmarks" -> "nxsEdson/CVD-Physiological-Measurement" ["e"=1]
"codeniko/shape_predictor_81_face_landmarks" -> "JACKYLUO1991/Face-skin-hair-segmentaiton-and-skin-color-evaluation" ["e"=1]
"codeniko/shape_predictor_81_face_landmarks" -> "610265158/Peppa_Pig_Face_Engine"
"codeniko/shape_predictor_81_face_landmarks" -> "wywu/LAB"
"codeniko/shape_predictor_81_face_landmarks" -> "SeuTao/CVPR19-Face-Anti-spoofing"
"cyberfire/tensorflow-mtcnn" -> "mndar/facenet_classifier"
"cyberfire/tensorflow-mtcnn" -> "OAID/FaceDetection"
"KaleidoZhouYN/e2e-joint-face-detection-and-alignment" -> "ElegantGod/mxnet-SSHA"
"KaleidoZhouYN/e2e-joint-face-detection-and-alignment" -> "XiaXuehai/faceboxes"
"KaleidoZhouYN/e2e-joint-face-detection-and-alignment" -> "ElegantGod/SSHA"
"KaleidoZhouYN/e2e-joint-face-detection-and-alignment" -> "szad670401/Fast-MTCNN"
"TropComplique/FaceBoxes-tensorflow" -> "610265158/faceboxes-tensorflow"
"TropComplique/FaceBoxes-tensorflow" -> "zisianw/FaceBoxes.PyTorch"
"TropComplique/FaceBoxes-tensorflow" -> "zeusees/FaceBoxes"
"TropComplique/FaceBoxes-tensorflow" -> "sfzhang15/FaceBoxes"
"TropComplique/FaceBoxes-tensorflow" -> "TropComplique/wing-loss"
"clcarwin/SFD_pytorch" -> "louis-she/sfd.pytorch"
"clcarwin/SFD_pytorch" -> "sfzhang15/SFD"
"clcarwin/SFD_pytorch" -> "yxlijun/S3FD.pytorch"
"clcarwin/SFD_pytorch" -> "Goingqs/PyramidBox"
"habrman/FaceRecognition" -> "habrman/keras-dcgan"
"habrman/FaceRecognition" -> "vudung45/FaceRec"
"habrman/FaceRecognition" -> "nazmiasri95/Face-Recognition"
"tornadomeet/mxnet-face" -> "pangyupo/mxnet_mtcnn_face_detection"
"tornadomeet/mxnet-face" -> "happynear/FaceVerification"
"tornadomeet/mxnet-face" -> "Seanlinx/mtcnn"
"tornadomeet/mxnet-face" -> "AlfredXiangWu/face_verification_experiment"
"tornadomeet/mxnet-face" -> "ydwen/caffe-face"
"tornadomeet/mxnet-face" -> "precedenceguo/mx-rcnn" ["e"=1]
"tornadomeet/mxnet-face" -> "luoyetx/JDA"
"tornadomeet/mxnet-face" -> "zhreshold/mxnet-ssd" ["e"=1]
"tornadomeet/mxnet-face" -> "betars/Face-Resources"
"tornadomeet/mxnet-face" -> "zhzhanp/TCDCN-face-alignment"
"tornadomeet/mxnet-face" -> "tfwu/FaceDetection-ConvNet-3D"
"tornadomeet/mxnet-face" -> "AlphaQi/MTCNN-light"
"tornadomeet/mxnet-face" -> "zhreshold/mxnet-yolo" ["e"=1]
"tornadomeet/mxnet-face" -> "luoyetx/deep-landmark"
"tornadomeet/mxnet-face" -> "DaFuCoding/MTCNN_Caffe"
"zeusees/FaceBoxes" -> "dlunion/mtcnn"
"zeusees/FaceBoxes" -> "sfzhang15/SFD"
"zeusees/FaceBoxes" -> "lsy17096535/faceboxes"
"zeusees/FaceBoxes" -> "mahyarnajibi/SSH"
"zeusees/FaceBoxes" -> "sfzhang15/FaceBoxes"
"zeusees/FaceBoxes" -> "blankWorld/MTCNN-Accelerate-Onet"
"zeusees/FaceBoxes" -> "AlphaQi/MTCNN-light"
"zeusees/FaceBoxes" -> "sciencefans/RSA-for-object-detection"
"zeusees/FaceBoxes" -> "lsy17096535/face-landmark"
"zeusees/FaceBoxes" -> "szad670401/Fast-MTCNN"
"zeusees/FaceBoxes" -> "CongWeilin/mtcnn-caffe"
"zeusees/FaceBoxes" -> "xialuxi/arcface-caffe"
"zeusees/FaceBoxes" -> "Jack-CV/PCN"
"zeusees/FaceBoxes" -> "Seanlinx/mtcnn"
"zeusees/FaceBoxes" -> "happynear/MTCNN_face_detection_alignment"
"wjNam/Relative_Attributing_Propagation" -> "OpenXAIProject/LRP-EEG"
"wjNam/Relative_Attributing_Propagation" -> "OpenXAIProject/Lung-cancer"
"pinguo-luhaofang/tripletloss" -> "lufo816/face_verification_demo"
"TencentYoutuResearch/FaceAttribute-FAN" -> "TencentYoutuResearch/FaceAlignment-FHR"
"TencentYoutuResearch/FaceAttribute-FAN" -> "WynMew/FaceAttribute"
"TencentYoutuResearch/FaceAttribute-FAN" -> "d-li14/face-attribute-prediction"
"TencentYoutuResearch/FaceAttribute-FAN" -> "b02901145/SSR-Net_megaage-asian"
"XiaohangZhan/face_recognition_framework" -> "XiaohangZhan/cdp"
"XiaohangZhan/face_recognition_framework" -> "zma-c-137/VarGFaceNet"
"XiaohangZhan/face_recognition_framework" -> "foamliu/InsightFace-v3"
"XiaohangZhan/face_recognition_framework" -> "bleakie/MaskInsightface"
"XiaohangZhan/face_recognition_framework" -> "yl-1993/learn-to-cluster"
"d-li14/face-attribute-prediction" -> "WynMew/FaceAttribute"
"d-li14/face-attribute-prediction" -> "Hawaii0821/FaceAttr-Analysis"
"d-li14/face-attribute-prediction" -> "TencentYoutuResearch/FaceAttribute-FAN"
"ouyanghuiyu/darknet_face_with_landmark" -> "ouyanghuiyu/yolo-face-with-landmark"
"ghnor/SeetaFace-AS" -> "imistyrain/SeetaFace4Android"
"ghnor/SeetaFace-AS" -> "iarray/Seetaface-SO"
"cvtower/seesawfacenet_pytorch" -> "pshashk/seesaw-facenet"
"cvtower/seesawfacenet_pytorch" -> "cvtower/SeesawNet_pytorch"
"jxgu1016/MNIST_center_loss_pytorch" -> "KaiyangZhou/pytorch-center-loss"
"jxgu1016/MNIST_center_loss_pytorch" -> "louis-she/center-loss.pytorch"
"jxgu1016/MNIST_center_loss_pytorch" -> "YirongMao/softmax_variants"
"jxgu1016/MNIST_center_loss_pytorch" -> "lyakaap/image-feature-learning-pytorch"
"jxgu1016/MNIST_center_loss_pytorch" -> "clcarwin/sphereface_pytorch"
"jxgu1016/MNIST_center_loss_pytorch" -> "liorshk/facenet_pytorch"
"jxgu1016/MNIST_center_loss_pytorch" -> "jihunchoi/lsoftmax-pytorch"
"jxgu1016/MNIST_center_loss_pytorch" -> "amirhfarzaneh/lsoftmax-pytorch"
"jxgu1016/MNIST_center_loss_pytorch" -> "AruniRC/resnet-face-pytorch"
"jxgu1016/MNIST_center_loss_pytorch" -> "MuggleWang/CosFace_pytorch"
"jxgu1016/MNIST_center_loss_pytorch" -> "Paralysis/ringloss"
"jxgu1016/MNIST_center_loss_pytorch" -> "Joker316701882/Additive-Margin-Softmax"
"OAID/Caffe-HRT" -> "OAID/MXNet-HRT"
"blankWorld/MTCNN-Accelerate-Onet" -> "xialuxi/arcface-caffe"
"blankWorld/MTCNN-Accelerate-Onet" -> "dlunion/mtcnn"
"blankWorld/MTCNN-Accelerate-Onet" -> "zeusees/FaceBoxes"
"blankWorld/MTCNN-Accelerate-Onet" -> "CongWeilin/mtcnn-caffe"
"blankWorld/MTCNN-Accelerate-Onet" -> "szad670401/Fast-MTCNN"
"blankWorld/MTCNN-Accelerate-Onet" -> "honghuCode/mobileFacenet-ncnn"
"blankWorld/MTCNN-Accelerate-Onet" -> "lsy17096535/faceboxes"
"blankWorld/MTCNN-Accelerate-Onet" -> "sciencefans/RSA-for-object-detection"
"blankWorld/MTCNN-Accelerate-Onet" -> "luoyetx/Joint-Face-Detection-and-Alignment"
"blankWorld/MTCNN-Accelerate-Onet" -> "lsy17096535/ncnn-vs2013"
"blankWorld/MTCNN-Accelerate-Onet" -> "lsy17096535/face-landmark"
"qaz734913414/Ncnn_FaceTrack" -> "zeusees/HyperFT"
"qaz734913414/Ncnn_FaceTrack" -> "xiangdeyizhang/FaceTrack_ncnn_HyperFT"
"qaz734913414/Ncnn_FaceTrack" -> "MirrorYuChen/ncnn_example"
"qaz734913414/Ncnn_FaceTrack" -> "szad670401/Fast-MTCNN"
"qaz734913414/Ncnn_FaceTrack" -> "HandsomeHans/Face-Tracking-Based-on-OpenTLD-and-RNet"
"sciencefans/CaffeMex_v2" -> "sciencefans/Quality-Aware-Network"
"sciencefans/CaffeMex_v2" -> "sciencefans/coco_loss"
"seasonSH/Probabilistic-Face-Embeddings" -> "Ontheway361/dul-pytorch"
"seasonSH/Probabilistic-Face-Embeddings" -> "xiaoboCASIA/SV-X-Softmax"
"seasonSH/Probabilistic-Face-Embeddings" -> "uam-biometrics/FaceQnet"
"seasonSH/Probabilistic-Face-Embeddings" -> "HuangYG123/CurricularFace"
"seasonSH/Probabilistic-Face-Embeddings" -> "IrvingMeng/MagFace"
"seasonSH/Probabilistic-Face-Embeddings" -> "huangyangyu/NoiseFace"
"seasonSH/Probabilistic-Face-Embeddings" -> "zhongyy/Unequal-Training-for-Deep-Face-Recognition-with-Long-Tailed-Noisy-Data"
"seasonSH/Probabilistic-Face-Embeddings" -> "pterhoer/FaceImageQuality"
"seasonSH/Probabilistic-Face-Embeddings" -> "Zhongdao/gcn_clustering"
"seasonSH/Probabilistic-Face-Embeddings" -> "cleardusk/MFR"
"seasonSH/Probabilistic-Face-Embeddings" -> "XiaohangZhan/cdp"
"seasonSH/Probabilistic-Face-Embeddings" -> "zma-c-137/VarGFaceNet"
"seasonSH/Probabilistic-Face-Embeddings" -> "BradyFU/DVG"
"seasonSH/Probabilistic-Face-Embeddings" -> "fdbtrs/ElasticFace"
"seasonSH/Probabilistic-Face-Embeddings" -> "seasonSH/DocFace"
"BeiXi1949/Face-Recognition_FaceNet_PyTorch" -> "Skyendless/FaceRecognition"
"pro-cloud/pro-cloud" -> "lijian096870/LJKeyBroadEventManager"
"pro-cloud/pro-cloud" -> "BeaHugs/RxImagePicker" ["e"=1]
"ArcsoftEscErd/ArcfaceDemo_CSharp" -> "ArcsoftEscErd/ArcSoftIDCardFace_CSharp"
"FaceDetect/jointCascade_py" -> "luoyetx/JDA"
"FaceDetect/jointCascade_py" -> "FacialLandmark/landmark_py"
"FaceDetect/jointCascade_py" -> "kensun0/Joint_Cascade_Face_Detection_And_Alignment"
"FaceDetect/jointCascade_py" -> "tntrung/impSDM"
"joojs/fairface" -> "dchen236/FairFace"
"joojs/fairface" -> "pterhoer/MAAD-Face"
"joojs/fairface" -> "supernotman/RetinaFace_Pytorch"
"joojs/fairface" -> "Raschka-research-group/coral-cnn"
"joojs/fairface" -> "yu4u/age-estimation-pytorch"
"joojs/fairface" -> "princetonvisualai/DomainBiasMitigation"
"shuguoli68/LiSeetaFace2" -> "shuguoli68/FaceDemo"
"shuguoli68/LiSeetaFace2" -> "myml666/Seetaface2"
"happynear/MTCNN_face_detection_alignment" -> "DaFuCoding/MTCNN_Caffe"
"happynear/MTCNN_face_detection_alignment" -> "Seanlinx/mtcnn"
"happynear/MTCNN_face_detection_alignment" -> "CongWeilin/mtcnn-caffe"
"happynear/MTCNN_face_detection_alignment" -> "DuinoDu/mtcnn"
"happynear/MTCNN_face_detection_alignment" -> "ydwen/caffe-face"
"happynear/MTCNN_face_detection_alignment" -> "dlunion/mtcnn"
"happynear/MTCNN_face_detection_alignment" -> "foreverYoungGitHub/MTCNN"
"happynear/MTCNN_face_detection_alignment" -> "AlphaQi/MTCNN-light"
"happynear/MTCNN_face_detection_alignment" -> "happynear/FaceVerification"
"happynear/MTCNN_face_detection_alignment" -> "kpzhang93/MTCNN_face_detection_alignment" ["e"=1]
"happynear/MTCNN_face_detection_alignment" -> "pangyupo/mxnet_mtcnn_face_detection"
"happynear/MTCNN_face_detection_alignment" -> "happynear/NormFace"
"happynear/MTCNN_face_detection_alignment" -> "moli232777144/mtcnn_ncnn"
"happynear/MTCNN_face_detection_alignment" -> "blankWorld/MTCNN-Accelerate-Onet"
"happynear/MTCNN_face_detection_alignment" -> "zeusees/FaceBoxes"
"in66-dev/In-Prestissimo" -> "BUG1989/ncnn-benchmark"
"in66-dev/In-Prestissimo" -> "luoyetx/mini-caffe"
"in66-dev/In-Prestissimo" -> "blankWorld/MTCNN-Accelerate-Onet"
"in66-dev/In-Prestissimo" -> "lsy17096535/ncnn-vs2013"
"in66-dev/In-Prestissimo" -> "AlphaQi/MTCNN-light"
"in66-dev/In-Prestissimo" -> "PerfXLab/embedded_ai" ["e"=1]
"in66-dev/In-Prestissimo" -> "OAID/YSQfastfd"
"in66-dev/In-Prestissimo" -> "ENCP/CNNdroid"
"thecodacus/Face-Recognition" -> "nazmiasri95/Face-Recognition"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework" -> "Qualeams/Android-Face-Recognition-with-Deep-Learning-Library"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework" -> "Lauszus/FaceRecognitionApp"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework" -> "pillarpond/face-recognizer-android"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework" -> "abhn/marvel"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework" -> "yaylas/AndroidFaceRecognizer"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework" -> "tzutalin/dlib-android"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework" -> "GRAYKEY/mobilefacenet_android"
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework" -> "gv22ga/dlib-face-recognition-android"
"AlexanderParkin/CASIA-SURF_CeFA" -> "clks-wzz/FAS-SGTD"
"AlexanderParkin/CASIA-SURF_CeFA" -> "ZitongYu/CDCN"
"AlexanderParkin/CASIA-SURF_CeFA" -> "taylover-pei/SSDG-CVPR2020"
"AlexanderParkin/CASIA-SURF_CeFA" -> "yaojieliu/ECCV20-STDN"
"AlexanderParkin/CASIA-SURF_CeFA" -> "RizhaoCai/Awesome-FAS"
"AlexanderParkin/CASIA-SURF_CeFA" -> "zzzkk2009/casia-surf-2019-codes"
"AlexanderParkin/CASIA-SURF_CeFA" -> "huguesva/Face-Anti-Spoofing-Neural-Network"
"AlexanderParkin/CASIA-SURF_CeFA" -> "AlexanderParkin/ChaLearn_liveness_challenge"
"AlexanderParkin/CASIA-SURF_CeFA" -> "VIS-VAR/LGSC-for-FAS"
"AlexanderParkin/CASIA-SURF_CeFA" -> "SeuTao/CVPR19-Face-Anti-spoofing"
"AlexanderParkin/CASIA-SURF_CeFA" -> "rshaojimmy/AAAI2020-RFMetaFAS"
"AlexanderParkin/CASIA-SURF_CeFA" -> "clks-wzz/PRNet-Depth-Generation"
"AlexanderParkin/CASIA-SURF_CeFA" -> "yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing"
"AlexanderParkin/CASIA-SURF_CeFA" -> "yaojieliu/ECCV2018-FaceDeSpoofing"
"AlexanderParkin/CASIA-SURF_CeFA" -> "Davidzhangyuanhan/CelebA-Spoof"
"BradyFU/DVG-Face" -> "BradyFU/DVG"
"DaFuCoding/MTCNN_Caffe" -> "dlunion/mtcnn"
"DaFuCoding/MTCNN_Caffe" -> "foreverYoungGitHub/MTCNN"
"DaFuCoding/MTCNN_Caffe" -> "happynear/MTCNN_face_detection_alignment"
"DaFuCoding/MTCNN_Caffe" -> "CongWeilin/mtcnn-caffe"
"DaFuCoding/MTCNN_Caffe" -> "Seanlinx/mtcnn"
"DaFuCoding/MTCNN_Caffe" -> "DuinoDu/mtcnn"
"DaFuCoding/MTCNN_Caffe" -> "ElegantGod/ncnn"
"DaFuCoding/MTCNN_Caffe" -> "ydwen/caffe-face"
"DaFuCoding/MTCNN_Caffe" -> "AlphaQi/MTCNN-light"
"DaFuCoding/MTCNN_Caffe" -> "moli232777144/mtcnn_ncnn"
"DaFuCoding/MTCNN_Caffe" -> "happynear/FaceVerification"
"DaFuCoding/MTCNN_Caffe" -> "KaleidoZhouYN/Details-on-Face-Recognition"
"DaFuCoding/MTCNN_Caffe" -> "luoyetx/deep-landmark"
"DaFuCoding/MTCNN_Caffe" -> "zhanglaplace/MobileFaceNet"
"DaFuCoding/MTCNN_Caffe" -> "pangyupo/mxnet_mtcnn_face_detection"
"EncodeTS/TensorFlow_Center_Loss" -> "shamangary/Keras-MNIST-center-loss-with-visualization"
"EncodeTS/TensorFlow_Center_Loss" -> "pppoe/tensorflow-sphereface-asoftmax"
"EncodeTS/TensorFlow_Center_Loss" -> "zoli333/Center-Loss"
"deepcam-cn/FaceQuality" -> "pterhoer/FaceImageQuality"
"deepcam-cn/FaceQuality" -> "IrvingMeng/MagFace"
"deepcam-cn/FaceQuality" -> "uam-biometrics/FaceQnet"
"deepcam-cn/FaceQuality" -> "Tencent/TFace"
"deepcam-cn/FaceQuality" -> "Slinene/SDD-FIQA"
"deepcam-cn/FaceQuality" -> "xiaoxiong74/face-cluster-by-infomap"
"grigorisg9gr/polynomial_nets" -> "pterhoer/QMagFace"
"iwantooxxoox/Keras-OpenFace" -> "krasserm/face-recognition"
"iwantooxxoox/Keras-OpenFace" -> "nyoki-mtl/keras-facenet"
"iwantooxxoox/Keras-OpenFace" -> "allanzelener/YAD2K" ["e"=1]
"iwantooxxoox/Keras-OpenFace" -> "sumantrajoshi/Face-recognition-using-deep-learning"
"iwantooxxoox/Keras-OpenFace" -> "davidsandberg/facenet" ["e"=1]
"iwantooxxoox/Keras-OpenFace" -> "log0/neural-style-painting" ["e"=1]
"iwantooxxoox/Keras-OpenFace" -> "Skuldur/facenet-face-recognition"
"iwantooxxoox/Keras-OpenFace" -> "rcmalli/keras-vggface"
"iwantooxxoox/Keras-OpenFace" -> "vinayakkailas/Face_Recognition"
"iwantooxxoox/Keras-OpenFace" -> "akshaybahadur21/Facial-Recognition-using-Facenet" ["e"=1]
"iwantooxxoox/Keras-OpenFace" -> "chen0040/keras-face"
"iwantooxxoox/Keras-OpenFace" -> "serengil/tensorflow-101"
"iwantooxxoox/Keras-OpenFace" -> "fchollet/deep-learning-models" ["e"=1]
"iwantooxxoox/Keras-OpenFace" -> "auroua/InsightFace_TF"
"iwantooxxoox/Keras-OpenFace" -> "swghosh/DeepFace"
"jerryhouuu/Face-Yaw-Roll-Pitch-from-Pose-Estimation-using-OpenCV" -> "yinguobing/head-pose-estimation"
"jerryhouuu/Face-Yaw-Roll-Pitch-from-Pose-Estimation-using-OpenCV" -> "penincillin/DREAM"
"wy1iu/DCNets" -> "wy1iu/SphereNet"
"wy1iu/DCNets" -> "wy1iu/LargeMargin_Softmax_Loss"
"wy1iu/DCNets" -> "unixpickle/spherenet"
"wy1iu/DCNets" -> "YisenWang/Iterative_learning"
"stdcoutzyx/DeepID_FaceClassify" -> "cyh24/Joint-Bayesian"
"stdcoutzyx/DeepID_FaceClassify" -> "happynear/FaceVerification"
"stdcoutzyx/DeepID_FaceClassify" -> "hqli/face_recognition"
"stdcoutzyx/DeepID_FaceClassify" -> "shen1994/DeepID"
"stdcoutzyx/DeepID_FaceClassify" -> "RiweiChen/DeepFace"
"stdcoutzyx/DeepID_FaceClassify" -> "jinze1994/DeepID1"
"stdcoutzyx/DeepID_FaceClassify" -> "AlfredXiangWu/face_verification_experiment"
"stdcoutzyx/DeepID_FaceClassify" -> "ydwen/caffe-face"
"stdcoutzyx/DeepID_FaceClassify" -> "RiweiChen/FaceTools"
"stdcoutzyx/DeepID_FaceClassify" -> "patrikhuber/superviseddescent"
"stdcoutzyx/DeepID_FaceClassify" -> "stdcoutzyx/FaceRetrieval"
"stdcoutzyx/DeepID_FaceClassify" -> "betars/Face-Resources"
"stdcoutzyx/DeepID_FaceClassify" -> "joyhuang9473/deepid-implementation"
"stdcoutzyx/DeepID_FaceClassify" -> "tntrung/impSDM"
"stdcoutzyx/DeepID_FaceClassify" -> "tornadomeet/mxnet-face"
"Raschka-research-group/coral-pytorch" -> "Raschka-research-group/corn-ordinal-neuralnet"
"hollance/BlazeFace-PyTorch" -> "thepowerfuldeez/facemesh.pytorch"
"hollance/BlazeFace-PyTorch" -> "tkat0/PyTorch_BlazeFace"
"hollance/BlazeFace-PyTorch" -> "kentaroy47/BlazeFace_Person.pytorch"
"hollance/BlazeFace-PyTorch" -> "becauseofAI/lffd-pytorch"
"hollance/BlazeFace-PyTorch" -> "zmurez/MediaPipePyTorch"
"hollance/BlazeFace-PyTorch" -> "OverEuro/deep-head-pose-lite"
"oukohou/SSR_Net_Pytorch" -> "CrazySummerday/SSR-Net"
"playerkk/face-py-faster-rcnn" -> "sciencefans/RSA-for-object-detection"
"playerkk/face-py-faster-rcnn" -> "sfzhang15/SFD"
"playerkk/face-py-faster-rcnn" -> "mahyarnajibi/SSH"
"playerkk/face-py-faster-rcnn" -> "kensun0/Face-Detecion-with-the-Faster-R-CNN-R-FCN"
"playerkk/face-py-faster-rcnn" -> "ydwen/caffe-face"
"playerkk/face-py-faster-rcnn" -> "tornadomeet/mxnet-face"
"playerkk/face-py-faster-rcnn" -> "dlunion/mtcnn"
"playerkk/face-py-faster-rcnn" -> "xiaolonw/adversarial-frcnn" ["e"=1]
"playerkk/face-py-faster-rcnn" -> "Seanlinx/mtcnn"
"playerkk/face-py-faster-rcnn" -> "Jack-CV/PCN"
"playerkk/face-py-faster-rcnn" -> "zeusees/FaceBoxes"
"playerkk/face-py-faster-rcnn" -> "zimenglan-sysu-512/Focal-Loss" ["e"=1]
"playerkk/face-py-faster-rcnn" -> "RiweiChen/DeepFace"
"playerkk/face-py-faster-rcnn" -> "pangyupo/mxnet_mtcnn_face_detection"
"playerkk/face-py-faster-rcnn" -> "peiyunh/tiny"
"gsrathoreniks/FaceFilter" -> "gsrathoreniks/ShadowLibrary-Android"
"gsrathoreniks/FaceFilter" -> "hardik-trivedi/FaceFilter"
"gsrathoreniks/FaceFilter" -> "gsrathoreniks/ktor-sample"
"smartkids77/ArcSoft_FreeSDK_Demo" -> "ArcJonSnow/Demo_for_Windows"
"linuxerwang/rkflashkit" -> "rockchip-linux/rkdeveloptool"
"linuxerwang/rkflashkit" -> "Galland/rkflashtool_rk3066"
"linuxerwang/rkflashkit" -> "linux-rockchip/rkflashtool"
"VIS-VAR/LGSC-for-FAS" -> "clks-wzz/FAS-SGTD"
"VIS-VAR/LGSC-for-FAS" -> "taylover-pei/SSDG-CVPR2020"
"VIS-VAR/LGSC-for-FAS" -> "ZitongYu/CDCN"
"VIS-VAR/LGSC-for-FAS" -> "Podidiving/lgsc-for-fas-pytorch"
"VIS-VAR/LGSC-for-FAS" -> "RizhaoCai/Awesome-FAS"
"VIS-VAR/LGSC-for-FAS" -> "clks-wzz/PRNet-Depth-Generation"
"VIS-VAR/LGSC-for-FAS" -> "yaojieliu/ECCV20-STDN"
"VIS-VAR/LGSC-for-FAS" -> "AlexanderParkin/CASIA-SURF_CeFA"
"VIS-VAR/LGSC-for-FAS" -> "rshaojimmy/AAAI2020-RFMetaFAS"
"VIS-VAR/LGSC-for-FAS" -> "Davidzhangyuanhan/CelebA-Spoof"
"VIS-VAR/LGSC-for-FAS" -> "yaojieliu/ECCV2018-FaceDeSpoofing"
"VIS-VAR/LGSC-for-FAS" -> "huguesva/Face-Anti-Spoofing-Neural-Network"
"VIS-VAR/LGSC-for-FAS" -> "AlexanderParkin/ChaLearn_liveness_challenge"
"VIS-VAR/LGSC-for-FAS" -> "yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing"
"VIS-VAR/LGSC-for-FAS" -> "qyxqyx/AIM_FAS"
"Weijay/AppleFaceDetection" -> "gunapandianraj/iOS11-VisionFrameWork"
"SIlvaMFPedro/pyimagesearch" -> "meizhoubao/pyimagesearch"
"SIlvaMFPedro/pyimagesearch" -> "dloperab/PyImageSearch-CV-DL-CrashCourse"
"mnakanishi/TRCA-SSVEP" -> "okbalefthanded/bci_toolbox"
"mnakanishi/TRCA-SSVEP" -> "mnakanishi/12JFPM_SSVEP"
"mnakanishi/TRCA-SSVEP" -> "nikk-nikaznan/SSVEP-Neural-Generative-Models"
"mnakanishi/TRCA-SSVEP" -> "bobvo23/flicker_stimulator"
"mnakanishi/TRCA-SSVEP" -> "emmanuelkalunga/Online-SSVEP"
"mnakanishi/TRCA-SSVEP" -> "aaravindravi/Brain-computer-interfaces"
"mnakanishi/TRCA-SSVEP" -> "osmanberke/Deep-SSVEP-BCI"
"mnakanishi/TRCA-SSVEP" -> "sylvchev/dataset-ssvep-exoskeleton"
"jinze1994/DeepID1" -> "shen1994/DeepID"
"freesouls/face-alignment-at-3000fps" -> "yulequan/face-alignment-in-3000fps"
"freesouls/face-alignment-at-3000fps" -> "luoyetx/face-alignment-at-3000fps"
"freesouls/face-alignment-at-3000fps" -> "jwyang/face-alignment"
"freesouls/face-alignment-at-3000fps" -> "soundsilence/FaceAlignment"
"freesouls/face-alignment-at-3000fps" -> "patrikhuber/superviseddescent"
"freesouls/face-alignment-at-3000fps" -> "luoyetx/JDA"
"freesouls/face-alignment-at-3000fps" -> "zhusz/CVPR15-CFSS"
"freesouls/face-alignment-at-3000fps" -> "lsy17096535/face-landmark"
"freesouls/face-alignment-at-3000fps" -> "RoboPai/sdm"
"freesouls/face-alignment-at-3000fps" -> "luoyetx/deep-landmark"
"freesouls/face-alignment-at-3000fps" -> "happynear/FaceVerification"
"freesouls/face-alignment-at-3000fps" -> "CitrusRokid/OpenNPD"
"freesouls/face-alignment-at-3000fps" -> "happynear/MTCNN_face_detection_alignment"
"freesouls/face-alignment-at-3000fps" -> "nenadmarkus/pico"
"freesouls/face-alignment-at-3000fps" -> "tntrung/impSDM"
"dangbo/ncnn-mobile" -> "GRAYKEY/mobilefacenet_android"
"dangbo/ncnn-mobile" -> "moli232777144/mtcnn_ncnn"
"dangbo/ncnn-mobile" -> "ElegantGod/ncnn"
"dangbo/ncnn-mobile" -> "KaleidoZhouYN/mobilefacenet-caffe"
"dangbo/ncnn-mobile" -> "moli232777144/mobilefacenet-mxnet"
"dangbo/ncnn-mobile" -> "starimeL/PytorchConverter" ["e"=1]
"dangbo/ncnn-mobile" -> "miaoerduo/dlib-face-landmark-compression"
"dangbo/ncnn-mobile" -> "yonghenglh6/DepthwiseConvolution" ["e"=1]
"vcvycy/MTCNN4Android" -> "vcvycy/Android_Facenet"
"vcvycy/MTCNN4Android" -> "jiangxiluning/facenet_mtcnn_to_mobile"
"vcvycy/MTCNN4Android" -> "syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing"
"vcvycy/MTCNN4Android" -> "cayden/facesample"
"vcvycy/MTCNN4Android" -> "tzolov/mtcnn-java"
"vcvycy/MTCNN4Android" -> "GthanosAI/android_mtcnn_insightface_face_recognize"
"vcvycy/MTCNN4Android" -> "moli232777144/mtcnn_ncnn"
"vcvycy/MTCNN4Android" -> "pillarpond/face-recognizer-android"
"chili-epfl/attention-tracker" -> "severin-lemaignan/gazr"
"severin-lemaignan/gazr" -> "chili-epfl/attention-tracker"
"krasserm/face-recognition" -> "iwantooxxoox/Keras-OpenFace"
"krasserm/face-recognition" -> "nyoki-mtl/keras-facenet"
"krasserm/face-recognition" -> "akshaybahadur21/Facial-Recognition-using-Facenet" ["e"=1]
"krasserm/face-recognition" -> "chen0040/keras-face"
"krasserm/face-recognition" -> "bearsprogrammer/real-time-deep-face-recognition"
"krasserm/face-recognition" -> "rcmalli/keras-vggface"
"krasserm/face-recognition" -> "Skuldur/facenet-face-recognition"
"krasserm/face-recognition" -> "ildoonet/deepface"
"krasserm/face-recognition" -> "sumantrajoshi/Face-recognition-using-deep-learning"
"krasserm/face-recognition" -> "vinayakkailas/Face_Recognition"
"krasserm/face-recognition" -> "satinder147/Attendance-using-Face" ["e"=1]
"krasserm/face-recognition" -> "shanren7/real_time_face_recognition"
"krasserm/face-recognition" -> "sainimohit23/FaceNet-Real-Time-face-recognition"
"yjh0410/FreeYOLO" -> "yjh0410/YOLOF-Lite"
"yjh0410/PyTorch_YOLO-Family" -> "yjh0410/PyTorch_YOLOv1"
"yjh0410/PyTorch_YOLO-Family" -> "yjh0410/PyTorch_YOLOF"
"yjh0410/PyTorch_YOLO-Family" -> "yjh0410/FreeYOLO"
"yjh0410/PyTorch_YOLO-Family" -> "yjh0410/yolov2-yolov3_PyTorch"
"ssarfraz/FINCH-Clustering" -> "Zhongdao/gcn_clustering"
"ssarfraz/FINCH-Clustering" -> "mahdiabavisani/Deep-multimodal-subspace-clustering-networks" ["e"=1]
"ssarfraz/FINCH-Clustering" -> "panji1990/Deep-subspace-clustering-networks" ["e"=1]
"ssarfraz/FINCH-Clustering" -> "makarandtapaswi/BallClustering_ICCV2019"
"ssarfraz/FINCH-Clustering" -> "shahsohil/DCC" ["e"=1]
"SoftwareGift/Face-Anti-spoofing-for-RGB" -> "deepcam-cn/Face-Anti-spoofing.pytorch"
"happynear/AMSoftmax" -> "happynear/NormFace"
"happynear/AMSoftmax" -> "happynear/FaceDatasets"
"happynear/AMSoftmax" -> "wy1iu/sphereface"
"happynear/AMSoftmax" -> "wy1iu/LargeMargin_Softmax_Loss"
"happynear/AMSoftmax" -> "xialuxi/arcface-caffe"
"happynear/AMSoftmax" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"happynear/AMSoftmax" -> "sciencefans/coco_loss"
"happynear/AMSoftmax" -> "Joker316701882/Additive-Margin-Softmax"
"happynear/AMSoftmax" -> "fwang91/IMDb-Face"
"happynear/AMSoftmax" -> "happynear/FaceVerification"
"happynear/AMSoftmax" -> "ydwen/caffe-face"
"happynear/AMSoftmax" -> "KaleidoZhouYN/mobilefacenet-caffe"
"happynear/AMSoftmax" -> "clcarwin/sphereface_pytorch"
"happynear/AMSoftmax" -> "yule-li/CosFace"
"happynear/AMSoftmax" -> "sciencefans/RSA-for-object-detection"
"smahesh29/Gender-and-Age-Detection" -> "arunponnusamy/gender-detection-keras"
"smahesh29/Gender-and-Age-Detection" -> "juan-csv/Face_info"
"smahesh29/Gender-and-Age-Detection" -> "habom2310/People-tracking-with-Age-and-Gender-detection"
"smahesh29/Gender-and-Age-Detection" -> "diovisgood/agender"
"smahesh29/Gender-and-Age-Detection" -> "richmondu/libfaceid"
"smahesh29/Gender-and-Age-Detection" -> "sajjjadayobi/FaceLib" ["e"=1]
"anson0910/CNN_face_detection" -> "guoyilin/FaceDetection_CNN"
"anson0910/CNN_face_detection" -> "mks0601/A-Convolutional-Neural-Network-Cascade-for-Face-Detection"
"anson0910/CNN_face_detection" -> "layumi/2015_Face_Detection"
"anson0910/CNN_face_detection" -> "luoyetx/JDA"
"anson0910/CNN_face_detection" -> "yulequan/face-alignment-in-3000fps"
"anson0910/CNN_face_detection" -> "luoyetx/deep-landmark"
"anson0910/CNN_face_detection" -> "cheind/dest"
"anson0910/CNN_face_detection" -> "Seanlinx/mtcnn"
"anson0910/CNN_face_detection" -> "aosokin/cnn_head_detection" ["e"=1]
"anson0910/CNN_face_detection" -> "soundsilence/FaceAlignment"
"anson0910/CNN_face_detection" -> "ydwen/caffe-face"
"anson0910/CNN_face_detection" -> "CongWeilin/mtcnn-caffe"
"anson0910/CNN_face_detection" -> "jwyang/face-alignment"
"anson0910/CNN_face_detection" -> "anson0910/CNN_face_detection_models"
"anson0910/CNN_face_detection" -> "tornadomeet/mxnet-face"
"liuky74/SDC-NNIE-tutorial" -> "dongjiu522/nnie-yolov3"
"luoyetx/JDA" -> "FaceDetect/jointCascade_py"
"luoyetx/JDA" -> "CitrusRokid/OpenNPD"
"luoyetx/JDA" -> "kensun0/Joint_Cascade_Face_Detection_And_Alignment"
"luoyetx/JDA" -> "wincle/NPD"
"luoyetx/JDA" -> "patrikhuber/superviseddescent"
"luoyetx/JDA" -> "yulequan/face-alignment-in-3000fps"
"luoyetx/JDA" -> "tntrung/impSDM"
"luoyetx/JDA" -> "freesouls/face-alignment-at-3000fps"
"luoyetx/JDA" -> "jwyang/face-alignment"
"luoyetx/JDA" -> "layumi/2015_Face_Detection"
"luoyetx/JDA" -> "soundsilence/FaceAlignment"
"luoyetx/JDA" -> "luoyetx/deep-landmark"
"luoyetx/JDA" -> "tornadomeet/mxnet-face"
"luoyetx/JDA" -> "luoyetx/face-alignment-at-3000fps"
"luoyetx/JDA" -> "nenadmarkus/pico"
"610265158/DSFD-tensorflow" -> "610265158/faceboxes-tensorflow"
"610265158/DSFD-tensorflow" -> "yxlijun/DSFD.pytorch"
"shamangary/Keras-MNIST-center-loss-with-visualization" -> "handongfeng/MNIST-center-loss"
"shamangary/Keras-MNIST-center-loss-with-visualization" -> "EncodeTS/TensorFlow_Center_Loss"
"zhusz/CVPR15-CFSS" -> "trigeorgis/mdm"
"zhusz/CVPR15-CFSS" -> "patrikhuber/superviseddescent"
"zhusz/CVPR15-CFSS" -> "soundsilence/FaceAlignment"
"zhusz/CVPR15-CFSS" -> "freesouls/face-alignment-at-3000fps"
"zhusz/CVPR15-CFSS" -> "zhzhanp/TCDCN-face-alignment"
"zhusz/CVPR15-CFSS" -> "tntrung/impSDM"
"zhusz/CVPR15-CFSS" -> "moliusimon/csdm"
"zhusz/CVPR15-CFSS" -> "yulequan/face-alignment-in-3000fps"
"zhusz/CVPR15-CFSS" -> "luoyetx/JDA"
"imistyrain/yolo-face" -> "imistyrain/facemask"
"rileykwok/Face-Recognition-Model-with-Gender-Age-and-Emotions-Estimations" -> "khaledrefai/Face-Recognition-Model-with-Gender-Age-and-Emotions-Estimations"
"soundsilence/FaceAlignment" -> "jwyang/face-alignment"
"soundsilence/FaceAlignment" -> "yulequan/face-alignment-in-3000fps"
"soundsilence/FaceAlignment" -> "freesouls/face-alignment-at-3000fps"
"soundsilence/FaceAlignment" -> "delphifirst/FaceX"
"soundsilence/FaceAlignment" -> "luoyetx/face-alignment-at-3000fps"
"soundsilence/FaceAlignment" -> "patrikhuber/superviseddescent"
"soundsilence/FaceAlignment" -> "cheind/dest"
"soundsilence/FaceAlignment" -> "zhusz/CVPR15-CFSS"
"soundsilence/FaceAlignment" -> "luoyetx/JDA"
"soundsilence/FaceAlignment" -> "tntrung/impSDM"
"soundsilence/FaceAlignment" -> "TadasBaltrusaitis/CLM-framework"
"soundsilence/FaceAlignment" -> "zhzhanp/TCDCN-face-alignment"
"soundsilence/FaceAlignment" -> "anson0910/CNN_face_detection"
"soundsilence/FaceAlignment" -> "uricamic/flandmark"
"soundsilence/FaceAlignment" -> "patrikhuber/4dface" ["e"=1]
"BradyFU/DVG" -> "BradyFU/DVG-Face"
"xiaoxiaoazhang/SeetaFace2AndroidDemo" -> "hzy3774/SeetaFace2Android"
"xiaoxiaoazhang/SeetaFace2AndroidDemo" -> "myml666/Seetaface2"
"sh1r0/caffe-android-demo" -> "sh1r0/caffe-android-lib"
"sh1r0/caffe-android-demo" -> "solrex/caffe-mobile"
"sh1r0/caffe-android-demo" -> "zhangqianhui/CnnForAndroid"
"sh1r0/caffe-android-demo" -> "Leliana/WhatsThis"
"sh1r0/caffe-android-demo" -> "bwasti/AICamera"
"sh1r0/caffe-android-demo" -> "ENCP/CNNdroid"
"sh1r0/caffe-android-demo" -> "alexkarargyris/Caffe_OpenCV_Android_App"
"sh1r0/caffe-android-demo" -> "tzutalin/Android-Object-Detection"
"solrex/caffe-mobile" -> "sh1r0/caffe-android-lib"
"solrex/caffe-mobile" -> "sh1r0/caffe-android-demo"
"solrex/caffe-mobile" -> "luoyetx/mini-caffe"
"solrex/caffe-mobile" -> "zhangqianhui/CnnForAndroid"
"solrex/caffe-mobile" -> "foreverYoungGitHub/MTCNN"
"solrex/caffe-mobile" -> "alexkarargyris/Caffe_OpenCV_Android_App"
"solrex/caffe-mobile" -> "KleinYuan/Caffe2-iOS" ["e"=1]
"solrex/caffe-mobile" -> "OAID/YSQfastfd"
"solrex/caffe-mobile" -> "camel007/Caffe-ShuffleNet" ["e"=1]
"solrex/caffe-mobile" -> "pmgysel/caffe" ["e"=1]
"solrex/caffe-mobile" -> "AlphaQi/MTCNN-light"
"kasyoukin/caffe_ocr_for_linux" -> "ChWick/warp-ctc"
"kasyoukin/caffe_ocr_for_linux" -> "yalecyu/crnn.caffe"
"KeqiangSun/FAB" -> "TheSouthFrog/stylealign"
"zmurez/MediaPipePyTorch" -> "tiqq111/mediapipe_pytorch"
"quanhua92/darknet" -> "dannyblueliu/YOLO-version-2-Face-detection"
"quanhua92/darknet" -> "xhuvom/darknetFaceID"
"wy1iu/SphereNet" -> "wy1iu/DCNets"
"wy1iu/SphereNet" -> "unixpickle/spherenet"
"wy1iu/SphereNet" -> "wy1iu/LargeMargin_Softmax_Loss"
"bruinxiong/Modified-CRUNet-and-Residual-Attention-Network.mxnet" -> "imistyrain/MobileFaceNet"
"xiaoboCASIA/SV-X-Softmax" -> "huangyangyu/NoiseFace"
"xiaoboCASIA/SV-X-Softmax" -> "tiandunx/SV-X-Softmax"
"xiaoboCASIA/SV-X-Softmax" -> "JiajiongCao/CELEB-500K"
"xiaoboCASIA/SV-X-Softmax" -> "seasonSH/Probabilistic-Face-Embeddings"
"xiaoboCASIA/SV-X-Softmax" -> "HuangYG123/CurricularFace"
"xiaoboCASIA/SV-X-Softmax" -> "zma-c-137/VarGFaceNet"
"xiaoboCASIA/SV-X-Softmax" -> "xialuxi/arcface-caffe"
"xiaoboCASIA/SV-X-Softmax" -> "walkoncross/prepare-faces-zyf"
"xiaoboCASIA/SV-X-Softmax" -> "HuangYG123/DDL"
"xiaoboCASIA/SV-X-Softmax" -> "tiandunx/loss_function_search"
"xiaoboCASIA/SV-X-Softmax" -> "wy1iu/MHE"
"xiaoboCASIA/SV-X-Softmax" -> "zuoqing1988/ZQCNN-v0.0"
"xiaoboCASIA/SV-X-Softmax" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"xiaoboCASIA/SV-X-Softmax" -> "cavalleria/cavaface.pytorch"
"GRAYKEY/mobilefacenet_ncnn" -> "honghuCode/mobileFacenet-ncnn"
"tntrung/impSDM" -> "kensun0/Joint_Cascade_Face_Detection_And_Alignment"
"lsy17096535/faceboxes" -> "lqs19881030/faceboxes"
"deepinsight/insightocr" -> "actionLUO/106-landmarks-dataset"
"FireflyTeam/u-boot" -> "FireflyTeam/build"
"KaleidoZhouYN/Sphereface-Ms-celeb-1M" -> "KaleidoZhouYN/Loss-Functions"
"KaleidoZhouYN/Sphereface-Ms-celeb-1M" -> "sciencefans/coco_loss"
"KaleidoZhouYN/Sphereface-Ms-celeb-1M" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"KaleidoZhouYN/Sphereface-Ms-celeb-1M" -> "hujun100/tensorflow-sphereface"
"inlmouse/MS-Celeb-1M_WashList" -> "KaleidoZhouYN/Details-on-Face-Recognition"
"NYUMedML/CNN_design_for_AD" -> "jrieke/cnn-interpretability"
"NYUMedML/CNN_design_for_AD" -> "vkola-lab/brain2020"
"NYUMedML/CNN_design_for_AD" -> "aramis-lab/AD-DL"
"liuziwei7/mobile-id" -> "KaleidoZhouYN/Details-on-Face-Recognition"
"liuziwei7/mobile-id" -> "zuoqing1988/ZQCNN-v0.0"
"liuziwei7/mobile-id" -> "Tonyfy/LCNN_TRAIN"
"liuziwei7/mobile-id" -> "happynear/NormFace"
"liuziwei7/mobile-id" -> "inlmouse/MS-Celeb-1M_WashList"
"liuziwei7/mobile-id" -> "wincle/NPD"
"liuziwei7/mobile-id" -> "KaleidoZhouYN/mobilefacenet-caffe"
"hqli/face_recognition" -> "RiweiChen/FaceTools"
"hqli/face_recognition" -> "wjgaas/DeepID2"
"hqli/face_recognition" -> "happynear/FaceVerification"
"hqli/face_recognition" -> "stdcoutzyx/DeepID_FaceClassify"
"hqli/face_recognition" -> "RiweiChen/DeepFace"
"hqli/face_recognition" -> "PatienceKai/VGG_Face_Caffe_Model"
"hqli/face_recognition" -> "AlfredXiangWu/face_verification_experiment"
"hqli/face_recognition" -> "ydwen/caffe-face"
"hqli/face_recognition" -> "joyhuang9473/deepid-implementation"
"hqli/face_recognition" -> "liuziwei7/mobile-id"
"hqli/face_recognition" -> "betars/Face-Resources"
"hqli/face_recognition" -> "hizhangp/triplet" ["e"=1]
"hqli/face_recognition" -> "shen1994/DeepID"
"hqli/face_recognition" -> "foreverYoungGitHub/MTCNN"
"hqli/face_recognition" -> "DaFuCoding/MTCNN_Caffe"
"tzutalin/Android-Object-Detection" -> "sh1r0/caffe-android-lib"
"tzutalin/Android-Object-Detection" -> "natanielruiz/android-yolo" ["e"=1]
"tzutalin/Android-Object-Detection" -> "sh1r0/caffe-android-demo"
"tzutalin/Android-Object-Detection" -> "zhangqianhui/CnnForAndroid"
"tzutalin/Android-Object-Detection" -> "alexkarargyris/Caffe_OpenCV_Android_App"
"tzutalin/Android-Object-Detection" -> "szaza/android-yolo-v2" ["e"=1]
"tzutalin/Android-Object-Detection" -> "Qualeams/Android-Face-Recognition-with-Deep-Learning-Library"
"bobvo23/flicker_stimulator" -> "nwayt001/SSVEP_Speller"
"pupil-labs/pye3d-detector" -> "pupil-labs/pupil-detectors"
"mks0601/A-Convolutional-Neural-Network-Cascade-for-Face-Detection" -> "anson0910/CNN_face_detection"
"OAID/FaceRecognition" -> "OAID/FaceDetection"
"guoyilin/FaceDetection_CNN" -> "anson0910/CNN_face_detection"
"guoyilin/FaceDetection_CNN" -> "layumi/2015_Face_Detection"
"guoyilin/FaceDetection_CNN" -> "luoyetx/JDA"
"guoyilin/FaceDetection_CNN" -> "tornadomeet/mxnet-face"
"guoyilin/FaceDetection_CNN" -> "jwyang/face-alignment"
"guoyilin/FaceDetection_CNN" -> "yulequan/face-alignment-in-3000fps"
"guoyilin/FaceDetection_CNN" -> "happynear/FaceVerification"
"guoyilin/FaceDetection_CNN" -> "CitrusRokid/OpenNPD"
"guoyilin/FaceDetection_CNN" -> "luoyetx/deep-landmark"
"guoyilin/FaceDetection_CNN" -> "Russell91/ReInspect" ["e"=1]
"guoyilin/FaceDetection_CNN" -> "soundsilence/FaceAlignment"
"guoyilin/FaceDetection_CNN" -> "freesouls/face-alignment-at-3000fps"
"guoyilin/FaceDetection_CNN" -> "RiweiChen/DeepFace"
"guoyilin/FaceDetection_CNN" -> "ydwen/caffe-face"
"guoyilin/FaceDetection_CNN" -> "FaceDetect/jointCascade_py"
"okbalefthanded/bci_toolbox" -> "mnakanishi/TRCA-SSVEP"
"PatternRecognition/OpenBMI" -> "DeepBCI/Deep-BCI"
"PatternRecognition/OpenBMI" -> "OpenXAIProject/LRP-EEG"
"PatternRecognition/OpenBMI" -> "OpenXAIProject/Lung-cancer"
"PatternRecognition/OpenBMI" -> "OpenXAIProject/Diagnosis-of-Alzheimers-Disease"
"PatternRecognition/OpenBMI" -> "wjNam/Relative_Attributing_Propagation"
"PatternRecognition/OpenBMI" -> "OpenXAIProject/Tutorials"
"PatternRecognition/OpenBMI" -> "zhangks98/eeg-adapt"
"ainrichman/Peppa-Facial-Landmark-PyTorch" -> "Hsintao/pfld_106_face_landmarks"
"ainrichman/Peppa-Facial-Landmark-PyTorch" -> "cunjian/pytorch_face_landmark"
"ainrichman/Peppa-Facial-Landmark-PyTorch" -> "610265158/face_landmark"
"ainrichman/Peppa-Facial-Landmark-PyTorch" -> "polarisZhao/PFLD-pytorch"
"ainrichman/Peppa-Facial-Landmark-PyTorch" -> "jhb86253817/PIPNet"
"GRAYKEY/mobilefacenet_android" -> "honghuCode/mobileFacenet-ncnn"
"GRAYKEY/mobilefacenet_android" -> "moli232777144/mobilefacenet-mxnet"
"GRAYKEY/mobilefacenet_android" -> "KaleidoZhouYN/mobilefacenet-caffe"
"GRAYKEY/mobilefacenet_android" -> "vcvycy/Android_Facenet"
"GRAYKEY/mobilefacenet_android" -> "dangbo/ncnn-mobile"
"GRAYKEY/mobilefacenet_android" -> "GRAYKEY/mobilefacenet_ncnn"
"GRAYKEY/mobilefacenet_android" -> "Monologuethl/Android_Facenet_Recognition"
"GRAYKEY/mobilefacenet_android" -> "zhanglaplace/MobileFaceNet"
"ehosseiniasl/3d-convolutional-network" -> "wangyirui/AD_Prediction"
"ehosseiniasl/3d-convolutional-network" -> "RishalAggarwal/3D-Convnet-for-Alzheimer-s-Detection"
"ehosseiniasl/3d-convolutional-network" -> "regnerus/keras-alzheimers-3d-conv"
"ehosseiniasl/3d-convolutional-network" -> "aramis-lab/AD-ML"
"cleardusk/ImageToAscii" -> "cleardusk/EmotionChallenge"
"cleardusk/ImageToAscii" -> "cleardusk/UCAS"
"jwyang/face-alignment" -> "yulequan/face-alignment-in-3000fps"
"jwyang/face-alignment" -> "soundsilence/FaceAlignment"
"jwyang/face-alignment" -> "freesouls/face-alignment-at-3000fps"
"jwyang/face-alignment" -> "luoyetx/face-alignment-at-3000fps"
"jwyang/face-alignment" -> "delphifirst/FaceX"
"jwyang/face-alignment" -> "patrikhuber/superviseddescent"
"jwyang/face-alignment" -> "luoyetx/JDA"
"jwyang/face-alignment" -> "FacialLandmark/landmark_py"
"jwyang/face-alignment" -> "tntrung/impSDM"
"jwyang/face-alignment" -> "zhzhanp/TCDCN-face-alignment"
"jwyang/face-alignment" -> "luoyetx/deep-landmark"
"jwyang/face-alignment" -> "jwyang/face-alignment-cpp"
"jwyang/face-alignment" -> "FaceDetect/jointCascade_py"
"jwyang/face-alignment" -> "mrgloom/Face-landmarks-detection-benchmark"
"jwyang/face-alignment" -> "zhusz/CVPR15-CFSS"
"SyGoing/LFFD-with-ncnn" -> "SyGoing/LFFD-MNN"
"SyGoing/LFFD-with-ncnn" -> "SyGoing/LFFD-OpenVINO"
"foreverYoungGitHub/MTCNN" -> "CongWeilin/mtcnn-caffe"
"foreverYoungGitHub/MTCNN" -> "DaFuCoding/MTCNN_Caffe"
"foreverYoungGitHub/MTCNN" -> "dlunion/mtcnn"
"foreverYoungGitHub/MTCNN" -> "Seanlinx/mtcnn"
"foreverYoungGitHub/MTCNN" -> "AlphaQi/MTCNN-light"
"foreverYoungGitHub/MTCNN" -> "ydwen/caffe-face"
"foreverYoungGitHub/MTCNN" -> "ElegantGod/ncnn"
"foreverYoungGitHub/MTCNN" -> "happynear/MTCNN_face_detection_alignment"
"foreverYoungGitHub/MTCNN" -> "sfzhang15/SFD"
"foreverYoungGitHub/MTCNN" -> "moli232777144/mtcnn_ncnn"
"foreverYoungGitHub/MTCNN" -> "luoyetx/mini-caffe"
"foreverYoungGitHub/MTCNN" -> "xialuxi/arcface-caffe"
"foreverYoungGitHub/MTCNN" -> "blankWorld/MTCNN-Accelerate-Onet"
"foreverYoungGitHub/MTCNN" -> "shaoxiaohu/Face_Alignment_Two_Stage_Re-initialization"
"foreverYoungGitHub/MTCNN" -> "mahyarnajibi/SSH"
"shen1994/DeepID" -> "jinze1994/DeepID1"
"basilfx/Course-Face3D" -> "cypatrickwee/3D-Face-Recognition"
"seasonSH/DocFace" -> "sciencefans/coco_loss"
"seasonSH/DocFace" -> "happynear/FaceDatasets"
"seasonSH/DocFace" -> "zma-c-137/VarGFaceNet"
"seasonSH/DocFace" -> "fwang91/IMDb-Face"
"seasonSH/DocFace" -> "sciencefans/RSA-for-object-detection"
"seasonSH/DocFace" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"seasonSH/DocFace" -> "happynear/NormFace"
"seasonSH/DocFace" -> "happynear/AMSoftmax"
"seasonSH/DocFace" -> "xiaoboCASIA/SV-X-Softmax"
"seasonSH/DocFace" -> "walkoncross/prepare-faces-zyf"
"seasonSH/DocFace" -> "zuoqing1988/ZQCNN-v0.0"
"seasonSH/DocFace" -> "bleakie/MaskInsightface"
"seasonSH/DocFace" -> "moli232777144/mobilefacenet-mxnet"
"seasonSH/DocFace" -> "KaleidoZhouYN/Details-on-Face-Recognition"
"seasonSH/DocFace" -> "bruinxiong/Modified-CRUNet-and-Residual-Attention-Network.mxnet"
"thepowerfuldeez/facemesh.pytorch" -> "hollance/BlazeFace-PyTorch"
"thepowerfuldeez/facemesh.pytorch" -> "gouthamvgk/facemesh_coreml_tf"
"thepowerfuldeez/facemesh.pytorch" -> "cedriclmenard/irislandmarks.pytorch"
"thepowerfuldeez/facemesh.pytorch" -> "cunjian/pytorch_face_landmark"
"dchen236/FairFace" -> "joojs/fairface"
"dchen236/FairFace" -> "pterhoer/MAAD-Face"
"dchen236/FairFace" -> "princetonvisualai/gan-debiasing"
"dchen236/FairFace" -> "princetonvisualai/DomainBiasMitigation"
"dchen236/FairFace" -> "deepcam-cn/FaceQuality"
"markson14/Face-Recognition-Cpp" -> "szad670401/tvm_mobilefacenet"
"sstzal/STAR-FC" -> "xiaoxiong74/face-cluster-by-infomap"
"Ahmednull/L2CS-Net" -> "yihuacheng/PureGaze"
"Ahmednull/L2CS-Net" -> "NVlabs/few_shot_gaze"
"Ahmednull/L2CS-Net" -> "erkil1452/gaze360"
"Ahmednull/L2CS-Net" -> "xucong-zhang/ETH-XGaze"
"Leliana/WhatsThis" -> "pppoe/WhatsThis-iOS"
"Leliana/WhatsThis" -> "zhangqianhui/CnnForAndroid"
"Leliana/WhatsThis" -> "jdeng/gomxnet"
"Leliana/WhatsThis" -> "sh1r0/caffe-android-demo"
"hardik-trivedi/FaceFilter" -> "gsrathoreniks/FaceFilter"
"pterhoer/FaceImageQuality" -> "uam-biometrics/FaceQnet"
"pterhoer/FaceImageQuality" -> "deepcam-cn/FaceQuality"
"pterhoer/FaceImageQuality" -> "IrvingMeng/MagFace"
"pterhoer/FaceImageQuality" -> "Tencent/TFace"
"pterhoer/FaceImageQuality" -> "cavalleria/cavaface.pytorch"
"pterhoer/FaceImageQuality" -> "yangyuke001/FIIQA-PyTorch"
"pterhoer/FaceImageQuality" -> "SSL92/hyperIQA" ["e"=1]
"pterhoer/FaceImageQuality" -> "zwx8981/DBCNN-PyTorch" ["e"=1]
"pterhoer/FaceImageQuality" -> "pterhoer/MAAD-Face"
"pterhoer/FaceImageQuality" -> "seasonSH/Probabilistic-Face-Embeddings"
"pterhoer/FaceImageQuality" -> "JDAI-CV/FaceX-Zoo"
"pterhoer/FaceImageQuality" -> "HuangYG123/CurricularFace"
"pterhoer/FaceImageQuality" -> "RizhaoCai/Awesome-FAS"
"pterhoer/FaceImageQuality" -> "minivision-ai/Silent-Face-Anti-Spoofing"
"pterhoer/FaceImageQuality" -> "ZitongYu/CDCN"
"KaleidoZhouYN/mobilefacenet-caffe" -> "zhanglaplace/MobileFaceNet"
"KaleidoZhouYN/mobilefacenet-caffe" -> "moli232777144/mobilefacenet-mxnet"
"KaleidoZhouYN/mobilefacenet-caffe" -> "imistyrain/MobileFaceNet"
"KaleidoZhouYN/mobilefacenet-caffe" -> "gehaocool/CombinedMargin-caffe"
"OAID/YSQfastfd" -> "Longqi-S/ncnn-mtcnn"
"OAID/YSQfastfd" -> "zeusees/FaceBoxes"
"OAID/YSQfastfd" -> "luoyetx/mini-caffe"
"OAID/YSQfastfd" -> "OAID/FaceRecognition"
"OAID/YSQfastfd" -> "OAID/mtcnn"
"OAID/YSQfastfd" -> "OAID/FaceDetection"
"deepinsight/mtcnn-ncnn" -> "Longqi-S/ncnn-mtcnn"
"huangyangyu/SeqFace" -> "huangyangyu/NoiseFace"
"zhly0/facenet-face-cluster-chinese-whispers-" -> "KaleidoZhouYN/FaceRecognitionSystem"
"wy1iu/sphereface-plus" -> "wy1iu/MHE"
"openhisilicon/AF-algorithm" -> "openhisilicon/qt-hi3519v101"
"openhisilicon/AF-algorithm" -> "openhisilicon/TOOLS"
"openhisilicon/PRODUCT" -> "openhisilicon/TOOLS"
"openhisilicon/PRODUCT" -> "openhisilicon/qt-hi3519v101"
"openhisilicon/PRODUCT" -> "openhisilicon/SDK"
"openhisilicon/PRODUCT" -> "openhisilicon/AF-algorithm"
"openhisilicon/SDK" -> "openhisilicon/TOOLS"
"openhisilicon/SDK" -> "openhisilicon/qt-hi3519v101"
"openhisilicon/SDK" -> "openhisilicon/PRODUCT"
"openhisilicon/SDK" -> "openhisilicon/AF-algorithm"
"arunponnusamy/gender-detection-keras" -> "arunponnusamy/gender-classification"
"arunponnusamy/gender-detection-keras" -> "smahesh29/Gender-and-Age-Detection"
"houliang428/CNN-for-face-anti-spoofing" -> "paranjapeved/Face-anti-spoofing"
"houliang428/CNN-for-face-anti-spoofing" -> "yunfan0621/Benchmarks_for_Face_Liveness_Detection"
"houliang428/CNN-for-face-anti-spoofing" -> "zboulkenafet/Face-anti-spoofing-based-on-color-texture-analysis"
"houliang428/CNN-for-face-anti-spoofing" -> "mnikitin/Learn-Convolutional-Neural-Network-for-Face-Anti-Spoofing"
"ee09115/spoofing_detection" -> "richmondu/libfaceid"
"ee09115/spoofing_detection" -> "juan-csv/face_liveness_detection-Anti-spoofing"
"ee09115/spoofing_detection" -> "AlexanderParkin/ChaLearn_liveness_challenge"
"ee09115/spoofing_detection" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019"
"ee09115/spoofing_detection" -> "JinghuiZhou/awesome_face_antispoofing"
"ee09115/spoofing_detection" -> "SeuTao/CVPR19-Face-Anti-spoofing"
"ee09115/spoofing_detection" -> "AhmetHamzaEmra/Intelegent_Lock"
"ee09115/spoofing_detection" -> "anand498/Face-Liveness-Detection"
"ee09115/spoofing_detection" -> "mnikitin/Learn-Convolutional-Neural-Network-for-Face-Anti-Spoofing"
"ee09115/spoofing_detection" -> "yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing"
"ee09115/spoofing_detection" -> "houliang428/CNN-for-face-anti-spoofing"
"ee09115/spoofing_detection" -> "yaojieliu/ECCV2018-FaceDeSpoofing"
"ee09115/spoofing_detection" -> "RizhaoCai/Awesome-FAS"
"ee09115/spoofing_detection" -> "vcolamatteo/face-authentication"
"ee09115/spoofing_detection" -> "zeusees/HyperFAS"
"fdbtrs/CR-FIQA" -> "fdbtrs/mixfacenets"
"fdbtrs/mixfacenets" -> "fdbtrs/QuantFace"
"fdbtrs/mixfacenets" -> "fdbtrs/PocketNet"
"broutonlab/face-id-with-medical-masks" -> "juan-csv/face_recognition_occlusion"
"ejcgt/attention-target-detection" -> "svip-lab/GazeFollowing"
"ejcgt/attention-target-detection" -> "erkil1452/gaze360"
"Mjrovai/OpenCV-Object-Face-Tracking" -> "Mjrovai/OpenCV-Face-Recognition"
"royorel/FFHQ-Aging-Dataset" -> "royorel/Lifespan_Age_Transformation_Synthesis"
"royorel/FFHQ-Aging-Dataset" -> "InterDigitalInc/HRFAE"
"royorel/FFHQ-Aging-Dataset" -> "DCGM/ffhq-features-dataset"
"royorel/FFHQ-Aging-Dataset" -> "guyuchao/IPCGANs-Pytorch"
"royorel/FFHQ-Aging-Dataset" -> "yuval-alaluf/SAM" ["e"=1]
"sciencefans/Quality-Aware-Network" -> "sciencefans/CaffeMex_v2"
"sciencefans/Quality-Aware-Network" -> "shuangjiexu/Spatial-Temporal-Pooling-Networks-ReID" ["e"=1]
"sciencefans/Quality-Aware-Network" -> "dapengchen123/video_reid" ["e"=1]
"HermanChen/mpp" -> "rockchip-linux/mpp"
"KaleidoZhouYN/Loss-Functions" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"KaleidoZhouYN/Loss-Functions" -> "KaleidoZhouYN/Sphereface-Ms-celeb-1M"
"KaleidoZhouYN/Loss-Functions" -> "sciencefans/coco_loss"
"TJU-Zhaoxy/A-Pyramid-Architecture-of-GANs" -> "yoyohonyang/LearingFaceAgeProgression"
"TJU-Zhaoxy/A-Pyramid-Architecture-of-GANs" -> "ajithvallabai/Pyramid-Architecture-of-GANs"
"sciencefans/coco_loss" -> "KaleidoZhouYN/Details-on-Face-Recognition"
"sciencefans/coco_loss" -> "sciencefans/RSA-for-object-detection"
"sciencefans/coco_loss" -> "walkoncross/prepare-faces-zyf"
"sciencefans/coco_loss" -> "happynear/FaceDatasets"
"sciencefans/coco_loss" -> "happynear/NormFace"
"sciencefans/coco_loss" -> "happynear/AMSoftmax"
"sciencefans/coco_loss" -> "inlmouse/MS-Celeb-1M_WashList"
"sciencefans/coco_loss" -> "sciencefans/CaffeMex_v2"
"sciencefans/coco_loss" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"sciencefans/coco_loss" -> "sciencefans/Quality-Aware-Network"
"sciencefans/coco_loss" -> "KaleidoZhouYN/FaceRecognitionSystem"
"sciencefans/coco_loss" -> "happynear/FaceVerification"
"sciencefans/coco_loss" -> "wy1iu/LargeMargin_Softmax_Loss"
"hukkelas/DSFD-Pytorch-Inference" -> "lijiannuist/lightDSFD"
"hukkelas/DSFD-Pytorch-Inference" -> "yxlijun/DSFD.pytorch"
"Jade999/face_antispoofing" -> "gc535/LivenessDectectionForFaceSpoofingAttack"
"serengil/crypto" -> "serengil/exchanging-encrypted-mails"
"serengil/crypto" -> "serengil/neural-networks-py"
"ishay2b/VanillaCNN" -> "BobLiu20/FacialLandmark_Caffe"
"ishay2b/VanillaCNN" -> "luoyetx/deep-landmark"
"ishay2b/VanillaCNN" -> "zhzhanp/TCDCN-face-alignment"
"ishay2b/VanillaCNN" -> "qiexing/face-landmark-localization"
"ishay2b/VanillaCNN" -> "olddocks/caffe-facialkp"
"ishay2b/VanillaCNN" -> "mrgloom/Face-landmarks-detection-benchmark"
"ishay2b/VanillaCNN" -> "lsy17096535/face-landmark"
"ishay2b/VanillaCNN" -> "cunjian/face_alignment"
"ishay2b/VanillaCNN" -> "MarekKowalski/DeepAlignmentNetwork"
"ishay2b/VanillaCNN" -> "trigeorgis/mdm"
"olddocks/caffe-facialkp" -> "qiexing/caffe-regression"
"linux-rockchip/linux-rockchip" -> "linux-rockchip/u-boot-rockchip"
"senliuy/FaceLivenessDetection" -> "allenyangyl/Face_Liveness_Detection"
"senliuy/FaceLivenessDetection" -> "wuyongchn/Face-Spoofing-Detection-or-Face-Liveness-Detection"
"senliuy/FaceLivenessDetection" -> "zboulkenafet/Face-anti-spoofing-based-on-color-texture-analysis"
"senliuy/FaceLivenessDetection" -> "NarcissusHliangZhao/Face-Liveness-Detection"
"senliuy/FaceLivenessDetection" -> "OeslleLucena/FASNet"
"senliuy/FaceLivenessDetection" -> "yunfan0621/Face_Liveness_Detection"
"yihuacheng/PureGaze" -> "DreamtaleCore/PnP-GA"
"zhengyuf/STED-gaze" -> "swook/faze_preprocess"
"clovaai/EXTD_Pytorch" -> "yxlijun/S3FD.pytorch"
"wg-perception/PartsBasedDetector" -> "hbristow/cvmatio"
"friendlyarm/kernel-rockchip" -> "friendlyarm/sd-fuse_rk3399"
"habom2310/People-tracking-with-Age-and-Gender-detection" -> "tuomastik/video_face_detection"
"VIPL-TAL-GAZE/GAZE2021" -> "bjj9/EVE_SCPT"
"VIPL-TAL-GAZE/GAZE2021" -> "hysts/pl_gaze_estimation"
"tztztztztz/yolov2.pytorch" -> "Tshzzz/pytorch_yolov2"
"Single430/FaceLandmark1000" -> "Hsintao/pfld_106_face_landmarks"
"mileistone/study_resources" -> "Media-Smart/volkscv"
"mileistone/study_resources" -> "Media-Smart/vedacls"
"mileistone/study_resources" -> "Media-Smart/cheetahinfer"
"mileistone/study_resources" -> "Media-Smart/vedastr" ["e"=1]
"mileistone/study_resources" -> "Media-Smart/vedaseg"
"rockchip-linux/rkdeveloptool" -> "rockchip-linux/rkbin"
"YunYang1994/SphereFace" -> "pppoe/tensorflow-sphereface-asoftmax"
"YunYang1994/SphereFace" -> "HiKapok/tf.extra_losses"
"z8g/blog" -> "z8g/common"
"gaetanozappi/Android-face-filters" -> "gsrathoreniks/FaceFilter"
"pppoe/tensorflow-sphereface-asoftmax" -> "hujun100/tensorflow-sphereface"
"pppoe/tensorflow-sphereface-asoftmax" -> "HiKapok/tf.extra_losses"
"pppoe/tensorflow-sphereface-asoftmax" -> "YunYang1994/SphereFace"
"pppoe/tensorflow-sphereface-asoftmax" -> "andrewhuman/sphereloss_tensorflow"
"AruniRC/resnet-face-pytorch" -> "MuggleWang/CosFace_pytorch"
"AruniRC/resnet-face-pytorch" -> "KaihuaTang/ResNet50-Pytorch-Face-Recognition"
"AruniRC/resnet-face-pytorch" -> "cydonia999/VGGFace2-pytorch"
"natanielruiz/dockerface" -> "OverEuro/deep-head-pose-lite"
"ouyanghuiyu/yolo-face-with-landmark" -> "ouyanghuiyu/darknet_face_with_landmark"
"Hawaii0821/FaceAttr-Analysis" -> "d-li14/face-attribute-prediction"
"PuNeal/DLDL-v2-PyTorch" -> "gaobb/DLDL"
"PuNeal/DLDL-v2-PyTorch" -> "gaobb/DLDL-v2"
"rockchip-linux/libmali" -> "rockchip-linux/u-boot"
"rockchip-linux/libmali" -> "rockchip-linux/gstreamer-rockchip"
"guyuchao/IPCGANs-Pytorch" -> "dawei6875797/Face-Aging-with-Identity-Preserved-Conditional-Generative-Adversarial-Networks"
"guyuchao/IPCGANs-Pytorch" -> "yoyohonyang/LearingFaceAgeProgression"
"guyuchao/IPCGANs-Pytorch" -> "Hzzone/PFA-GAN"
"guyuchao/IPCGANs-Pytorch" -> "TJU-Zhaoxy/A-Pyramid-Architecture-of-GANs"
"codeniko/eos" -> "codeniko/shape_predictor_81_face_landmarks"
"shashanktyagi/HyperFace-TensorFlow-implementation" -> "sourabhvora/HyperFace-with-SqueezeNet"
"shashanktyagi/HyperFace-TensorFlow-implementation" -> "maharshi95/HyperFace"
"shashanktyagi/HyperFace-TensorFlow-implementation" -> "takiyu/hyperface"
"shashanktyagi/HyperFace-TensorFlow-implementation" -> "Adityav2410/RealTimeHyperface"
"ivclab/Online-Face-Recognition-and-Authentication" -> "ivclab/NeuralMerger"
"ivclab/Online-Face-Recognition-and-Authentication" -> "ivclab/Merging-MobileNets-for-Multitask"
"ivclab/Online-Face-Recognition-and-Authentication" -> "ivclab/PAE"
"ivclab/Online-Face-Recognition-and-Authentication" -> "ivclab/Sound20"
"ivclab/Online-Face-Recognition-and-Authentication" -> "ivclab/DeepPhotoCritic-ICCV17"
"ivclab/Online-Face-Recognition-and-Authentication" -> "ivclab/agegenderLMTCNN"
"ivclab/Online-Face-Recognition-and-Authentication" -> "ivclab/BigGAN-Generator-Pretrained-Pytorch"
"ivclab/Online-Face-Recognition-and-Authentication" -> "ivclab/caffe-cvprw15"
"tunaemre/Face-Swap-Android" -> "androidroadies/FaceSwap"
"tunaemre/Face-Swap-Android" -> "alex011235/FaceSwap-Android"
"luoyetx/Joint-Face-Detection-and-Alignment" -> "daikankan/mtcnn"
"luoyetx/Joint-Face-Detection-and-Alignment" -> "zuoqing1988/ZQCNN-v0.0"
"luoyetx/face-alignment-at-3000fps" -> "yulequan/face-alignment-in-3000fps"
"luoyetx/face-alignment-at-3000fps" -> "freesouls/face-alignment-at-3000fps"
"luoyetx/face-alignment-at-3000fps" -> "jwyang/face-alignment"
"luoyetx/face-alignment-at-3000fps" -> "soundsilence/FaceAlignment"
"luoyetx/face-alignment-at-3000fps" -> "wincle/NPD"
"luoyetx/face-alignment-at-3000fps" -> "luoyetx/JDA"
"luoyetx/face-alignment-at-3000fps" -> "luoyetx/deep-landmark"
"luoyetx/face-alignment-at-3000fps" -> "CitrusRokid/OpenNPD"
"luoyetx/face-alignment-at-3000fps" -> "patrikhuber/superviseddescent"
"luoyetx/face-alignment-at-3000fps" -> "ElegantGod/ncnn"
"luoyetx/face-alignment-at-3000fps" -> "blankWorld/MTCNN-Accelerate-Onet"
"GarrickLin/MXNet2Caffe" -> "cypw/MXNet2Caffe"
"GarrickLin/MXNet2Caffe" -> "zuoqing1988/ZQCNN-v0.0"
"GarrickLin/MXNet2Caffe" -> "xialuxi/arcface-caffe"
"GarrickLin/MXNet2Caffe" -> "szad670401/advanced-mxnet2caffe"
"KaleidoZhouYN/Angular-Triplet-Loss" -> "KaleidoZhouYN/FaceRecognitionSystem"
"KaleidoZhouYN/Angular-Triplet-Loss" -> "KaleidoZhouYN/Loss-Functions"
"KaleidoZhouYN/Angular-Triplet-Loss" -> "KaleidoZhouYN/Details-on-Face-Recognition"
"KaleidoZhouYN/Angular-Triplet-Loss" -> "happynear/AMSoftmax"
"KaleidoZhouYN/Angular-Triplet-Loss" -> "happynear/FaceDatasets"
"KaleidoZhouYN/Angular-Triplet-Loss" -> "sciencefans/RSA-for-object-detection"
"KaleidoZhouYN/Angular-Triplet-Loss" -> "sciencefans/coco_loss"
"KaleidoZhouYN/Angular-Triplet-Loss" -> "zuoqing1988/ZQCNN-v0.0"
"KaleidoZhouYN/Angular-Triplet-Loss" -> "wy1iu/LargeMargin_Softmax_Loss"
"KaleidoZhouYN/Angular-Triplet-Loss" -> "happynear/NormFace"
"KaleidoZhouYN/Angular-Triplet-Loss" -> "walkoncross/prepare-faces-zyf"
"KaleidoZhouYN/Angular-Triplet-Loss" -> "inlmouse/MS-Celeb-1M_WashList"
"KaleidoZhouYN/Angular-Triplet-Loss" -> "fwang91/IMDb-Face"
"KaleidoZhouYN/Details-on-Face-Recognition" -> "KaleidoZhouYN/FaceRecognitionSystem"
"KaleidoZhouYN/Details-on-Face-Recognition" -> "inlmouse/MS-Celeb-1M_WashList"
"KaleidoZhouYN/Details-on-Face-Recognition" -> "KaleidoZhouYN/More-Details-On-FaceRecognition-1"
"KaleidoZhouYN/Details-on-Face-Recognition" -> "sciencefans/coco_loss"
"KaleidoZhouYN/Details-on-Face-Recognition" -> "KaleidoZhouYN/Angular-Triplet-Loss"
"KaleidoZhouYN/FaceRecognitionSystem" -> "KaleidoZhouYN/Details-on-Face-Recognition"
"Ontheway361/dul-pytorch" -> "seasonSH/Probabilistic-Face-Embeddings"
"Ontheway361/dul-pytorch" -> "MouxiaoHuang/DUL"
"Ontheway361/dul-pytorch" -> "Ontheway361/pfe-pytorch"
"eveningglow/age-and-gender-classification" -> "LouieYang/AgeAndGenderEstimation"
"walkoncross/prepare-faces-zyf" -> "sciencefans/coco_loss"
"walkoncross/prepare-faces-zyf" -> "sciencefans/RSA-for-object-detection"
"walkoncross/prepare-faces-zyf" -> "KaleidoZhouYN/FaceRecognitionSystem"
"walkoncross/prepare-faces-zyf" -> "KaleidoZhouYN/Details-on-Face-Recognition"
"walkoncross/prepare-faces-zyf" -> "zuoqing1988/ZQCNN-v0.0"
"wy1iu/MHE" -> "wy1iu/sphereface-plus"
"wy1iu/MHE" -> "clavichord93/diagonalwise-refactorization-caffe"
"zhongyy/Unequal-Training-for-Deep-Face-Recognition-with-Long-Tailed-Noisy-Data" -> "huangyangyu/NoiseFace"
"ivclab/BigGAN-Generator-Pretrained-Pytorch" -> "ivclab/NeuralMerger"
"ivclab/BigGAN-Generator-Pretrained-Pytorch" -> "ivclab/Sound20"
"ivclab/BigGAN-Generator-Pretrained-Pytorch" -> "ivclab/Merging-MobileNets-for-Multitask"
"ivclab/BigGAN-Generator-Pretrained-Pytorch" -> "ivclab/PAE"
"gdubrg/Eye-Tracking-for-Everyone" -> "hugochan/Eye-Tracker"
"wuyongchn/Face-Spoofing-Detection-or-Face-Liveness-Detection" -> "gc535/LivenessDectectionForFaceSpoofingAttack"
"wuyongchn/Face-Spoofing-Detection-or-Face-Liveness-Detection" -> "zboulkenafet/Face-anti-spoofing-based-on-color-texture-analysis"
"ayufan-rock64/linux-kernel" -> "ayufan-rock64/linux-mainline-kernel"
"ayufan-rock64/linux-kernel" -> "ayufan-rock64/linux-u-boot"
"wondonghyeon/face-classification" -> "usc-sail/mica-race-from-face"
"davebraze/FDBeye" -> "jwdink/eyetrackingR"
"davebraze/FDBeye" -> "jashubbard/edfR"
"davebraze/FDBeye" -> "tmalsburg/saccades"
"gaobb/DLDL-v2" -> "gaobb/DLDL"
"gaobb/DLDL-v2" -> "PuNeal/DLDL-v2-PyTorch"
"zuoqing1988/train-mtcnn" -> "zuoqing1988/train-GenderAge"
"zuoqing1988/train-mtcnn" -> "luoyetx/Joint-Face-Detection-and-Alignment"
"zuoqing1988/train-mtcnn" -> "dlunion/mtcnn"
"zuoqing1988/train-mtcnn" -> "olojuwin/facerecognize-for-mobile-phone"
"lincolnhard/openpose-darknet" -> "dlunion/EasyOpenPose"
"CitrusRokid/OpenNPD" -> "wincle/NPD"
"CitrusRokid/OpenNPD" -> "luoyetx/JDA"
"wincle/NPD" -> "CitrusRokid/OpenNPD"
"wincle/NPD" -> "luoyetx/JDA"
"wincle/NPD" -> "nenadmarkus/pico"
"wincle/NPD" -> "kensun0/Joint_Cascade_Face_Detection_And_Alignment"
"vcvycy/Android_Facenet" -> "Monologuethl/Android_Facenet_Recognition"
"vcvycy/Android_Facenet" -> "vcvycy/MTCNN4Android"
"vcvycy/Android_Facenet" -> "GRAYKEY/mobilefacenet_android"
"esdalmaijer/PyGazeAnalyser" -> "titoghose/PyTrack"
"esdalmaijer/PyGazeAnalyser" -> "esdalmaijer/PyGaze"
"esdalmaijer/PyGazeAnalyser" -> "ecekt/eyegaze"
"esdalmaijer/PyGazeAnalyser" -> "takyamamoto/Fixation-Densitymap"
"esdalmaijer/PyGazeAnalyser" -> "davebraze/FDBeye"
"esdalmaijer/PyGazeAnalyser" -> "TobiasRoeddiger/GazePointHeatMap"
"esdalmaijer/PyGazeAnalyser" -> "pupil-labs/pupil-community"
"zboulkenafet/Face-anti-spoofing-based-on-color-texture-analysis" -> "mnikitin/Learn-Convolutional-Neural-Network-for-Face-Anti-Spoofing"
"zboulkenafet/Face-anti-spoofing-based-on-color-texture-analysis" -> "wuyongchn/Face-Spoofing-Detection-or-Face-Liveness-Detection"
"zboulkenafet/Face-anti-spoofing-based-on-color-texture-analysis" -> "allenyangyl/Face_Liveness_Detection"
"zboulkenafet/Face-anti-spoofing-based-on-color-texture-analysis" -> "zboulkenafet/Face-Anti-Spoofing-using-Speeded-Up-Robust-Features-and-Fisher-Vector-Encoding"
"zboulkenafet/Face-anti-spoofing-based-on-color-texture-analysis" -> "OeslleLucena/FASNet"
"zboulkenafet/Face-anti-spoofing-based-on-color-texture-analysis" -> "houliang428/CNN-for-face-anti-spoofing"
"zboulkenafet/Face-anti-spoofing-based-on-color-texture-analysis" -> "gc535/LivenessDectectionForFaceSpoofingAttack"
"zboulkenafet/Face-anti-spoofing-based-on-color-texture-analysis" -> "pp21/Guided-Scale-Texture-for-Face-Presentation-Attack-Detection"
"zboulkenafet/Face-anti-spoofing-based-on-color-texture-analysis" -> "JinghuiZhou/awesome_face_antispoofing"
"zboulkenafet/Face-anti-spoofing-based-on-color-texture-analysis" -> "XgTu/GFA-CNN" ["e"=1]
"esdalmaijer/webcam-eyetracker" -> "esdalmaijer/PyGaze"
"esdalmaijer/webcam-eyetracker" -> "LukeAllen/optimeyes"
"esdalmaijer/webcam-eyetracker" -> "pupil-labs/pupil-community"
"esdalmaijer/webcam-eyetracker" -> "trishume/eyeLike"
"esdalmaijer/webcam-eyetracker" -> "stepacool/Eye-Tracker"
"esdalmaijer/webcam-eyetracker" -> "esdalmaijer/PyGazeAnalyser"
"esdalmaijer/webcam-eyetracker" -> "hugochan/Eye-Tracker"
"esdalmaijer/webcam-eyetracker" -> "pupil-labs/pupil"
"cleardusk/EmotionChallenge" -> "cleardusk/ImageToAscii"
"cleardusk/EmotionChallenge" -> "cleardusk/UCAS"
"Luca96/android-face-landmarks" -> "Luca96/dlib-for-android"
"D-X-Y/MSPLD-2018" -> "D-X-Y/Dual-Network-WSOD"
"D-X-Y/MSPLD-2018" -> "D-X-Y/awesome-AutoML"
"AnthonyF333/PFLD_GhostOne" -> "AnthonyF333/FaceLandmark_PFLD_UltraLight"
"fdbtrs/PocketNet" -> "fdbtrs/QuantFace"
"tensor-yu/cascaded_mobilenet-v2" -> "goodluckcwl/Face-alignment-mobilenet-v2"
"tensor-yu/cascaded_mobilenet-v2" -> "zuoqing1988/train-mtcnn"
"tensor-yu/cascaded_mobilenet-v2" -> "CongWeilin/mtcnn-caffe"
"tensor-yu/cascaded_mobilenet-v2" -> "lsy17096535/face-landmark"
"tensor-yu/cascaded_mobilenet-v2" -> "moli232777144/mobilefacenet-mxnet"
"tensor-yu/cascaded_mobilenet-v2" -> "zeusees/FaceBoxes"
"darkise/mpp_rtsp_player" -> "sliver-chen/mpp_linux_cpp"
"JeeveshN/Face-Detect" -> "JeeveshN/Facial-Recognition-Tool"
"vcolamatteo/face-authentication" -> "Jade999/face_antispoofing"
"vcolamatteo/face-authentication" -> "gc535/LivenessDectectionForFaceSpoofingAttack"
"zzzkk2009/casia-surf-2019-codes" -> "SeuTao/CVPR19-Face-Anti-spoofing"
"zzzkk2009/casia-surf-2019-codes" -> "AlexanderParkin/ChaLearn_liveness_challenge"
"zzzkk2009/casia-surf-2019-codes" -> "rshaojimmy/AAAI2020-RFMetaFAS"
"zzzkk2009/casia-surf-2019-codes" -> "AlexanderParkin/CASIA-SURF_CeFA"
"zzzkk2009/casia-surf-2019-codes" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019"
"zzzkk2009/casia-surf-2019-codes" -> "clks-wzz/FAS-SGTD"
"zzzkk2009/casia-surf-2019-codes" -> "jimeffry/face-anti-spoofing"
"zzzkk2009/casia-surf-2019-codes" -> "deepcam-cn/Face-Anti-spoofing.pytorch"
"zzzkk2009/casia-surf-2019-codes" -> "yaojieliu/ECCV2018-FaceDeSpoofing"
"zzzkk2009/casia-surf-2019-codes" -> "JinghuiZhou/awesome_face_antispoofing"
"zzzkk2009/casia-surf-2019-codes" -> "mnikitin/Learn-Convolutional-Neural-Network-for-Face-Anti-Spoofing"
"zzzkk2009/casia-surf-2019-codes" -> "taylover-pei/SSDG-CVPR2020"
"zzzkk2009/casia-surf-2019-codes" -> "ZitongYu/CDCN"
"bruceyang2012/Face-Alignment-with-simple-cnn" -> "bruceyang2012/Face-identification-with-cnn-triplet-loss"
"remirobert/Facemotion" -> "joelrfcosta/FaceRecognition"
"androidroadies/FaceSwap" -> "tunaemre/Face-Swap-Android"
"rockchip-linux/gstreamer-rockchip" -> "rockchip-linux/mpp"
"rockchip-linux/gstreamer-rockchip" -> "rockchip-linux/libmali"
"Reginer/MVVMHub" -> "yuxitong/AndroidLivePusher"
"Reginer/MVVMHub" -> "kangdp/TptDialSample"
"fyr91/face_recognition" -> "fyr91/face_detection"
"OpenXAIProject/Automatic-Stock-Trading" -> "OpenXAIProject/Financial-Expert-Korean-Quot"
"OpenXAIProject/Automatic-Stock-Trading" -> "OpenXAIProject/Real-time-Financial-Data"
"OpenXAIProject/Automatic-Stock-Trading" -> "OpenXAIProject/Network-Structure-Dropout"
"OpenXAIProject/Automatic-Stock-Trading" -> "OpenXAIProject/Mixed-Effect-Composite-RNN-Gaussian-Process"
"OpenXAIProject/Automatic-Stock-Trading" -> "OpenXAIProject/One-Shot-Learning"
"OpenXAIProject/Automatic-Stock-Trading" -> "OpenXAIProject/TimeNet"
"OpenXAIProject/Automatic-Stock-Trading" -> "OpenXAIProject/Lung-cancer"
"OpenXAIProject/Automatic-Stock-Trading" -> "OpenXAIProject/OneShot-Learning-Selective-Ensemble"
"OpenXAIProject/Automatic-Stock-Trading" -> "OpenXAIProject/UncertintyAttention_DropMax"
"OpenXAIProject/Automatic-Stock-Trading" -> "OpenXAIProject/Annual-Report-Extraction"
"OpenXAIProject/Automatic-Stock-Trading" -> "OpenXAIProject/Deep-Generative-Model"
"OpenXAIProject/Diagnosis-of-Alzheimers-Disease" -> "OpenXAIProject/Lung-cancer"
"OpenXAIProject/Diagnosis-of-Alzheimers-Disease" -> "OpenXAIProject/LRP-EEG"
"OpenXAIProject/Joint-AFA-Classification" -> "OpenXAIProject/Network-Structure-Dropout"
"OpenXAIProject/Joint-AFA-Classification" -> "OpenXAIProject/Financial-Expert-Korean-Quot"
"OpenXAIProject/Joint-AFA-Classification" -> "OpenXAIProject/Real-time-Financial-Data"
"OpenXAIProject/Joint-AFA-Classification" -> "OpenXAIProject/TimeNet"
"OpenXAIProject/One-Shot-Learning" -> "OpenXAIProject/Network-Structure-Dropout"
"OpenXAIProject/One-Shot-Learning" -> "OpenXAIProject/Deep-Generative-Model"
"OpenXAIProject/One-Shot-Learning" -> "OpenXAIProject/OneShot-Learning-Selective-Ensemble"
"OpenXAIProject/One-Shot-Learning" -> "OpenXAIProject/Causality-between-elements-based-on-time-series-data"
"OpenXAIProject/One-Shot-Learning" -> "OpenXAIProject/Financial-Expert-Korean-Quot"
"OpenXAIProject/One-Shot-Learning" -> "OpenXAIProject/Real-time-Financial-Data"
"OpenXAIProject/One-Shot-Learning" -> "OpenXAIProject/TimeNet"
"OpenXAIProject/Preprocessed_ABIDE_Dataset" -> "OpenXAIProject/Financial-Expert-Korean-Quot"
"OpenXAIProject/Preprocessed_ABIDE_Dataset" -> "OpenXAIProject/Real-time-Financial-Data"
"OpenXAIProject/Preprocessed_ABIDE_Dataset" -> "OpenXAIProject/Deep-Generative-Model"
"OpenXAIProject/Preprocessed_ABIDE_Dataset" -> "OpenXAIProject/Network-Structure-Dropout"
"OpenXAIProject/Preprocessed_ABIDE_Dataset" -> "OpenXAIProject/TimeNet"
"OpenXAIProject/TimeNet" -> "OpenXAIProject/Network-Structure-Dropout"
"OpenXAIProject/TimeNet" -> "OpenXAIProject/Causality-between-elements-based-on-time-series-data"
"OpenXAIProject/TimeNet" -> "OpenXAIProject/Financial-Expert-Korean-Quot"
"OpenXAIProject/TimeNet" -> "OpenXAIProject/Real-time-Financial-Data"
"OpenXAIProject/Tutorials" -> "OpenXAIProject/UncertintyAttention_DropMax"
"OpenXAIProject/Tutorials" -> "OpenXAIProject/Automatic-Stock-Report"
"OpenXAIProject/Tutorials" -> "OpenXAIProject/LRP-EEG"
"OpenXAIProject/Tutorials" -> "OpenXAIProject/Lung-cancer"
"OpenXAIProject/Tutorials" -> "OpenXAIProject/Financial-Expert-Korean-Quot"
"OpenXAIProject/Tutorials" -> "OpenXAIProject/Real-time-Financial-Data"
"OpenXAIProject/Tutorials" -> "OpenXAIProject/Mixed-Effect-Composite-RNN-Gaussian-Process"
"OpenXAIProject/Tutorials" -> "OpenXAIProject/Causality-between-elements-based-on-time-series-data"
"OpenXAIProject/Tutorials" -> "OpenXAIProject/TimeNet"
"OpenXAIProject/Tutorials" -> "OpenXAIProject/Diagnosis-of-Alzheimers-Disease"
"OpenXAIProject/Tutorials" -> "OpenXAIProject/Deep-Generative-Model"
"OpenXAIProject/Tutorials" -> "OpenXAIProject/One-Shot-Learning"
"OpenXAIProject/Tutorials" -> "OpenXAIProject/Preprocessed_ABIDE_Dataset"
"OpenXAIProject/Tutorials" -> "OpenXAIProject/Preprocessed_IXI_Dataset"
"OpenXAIProject/Tutorials" -> "OpenXAIProject/Network-Structure-Dropout"
"OpenXAIProject/UncertintyAttention_DropMax" -> "OpenXAIProject/Automatic-Stock-Report"
"OpenXAIProject/UncertintyAttention_DropMax" -> "OpenXAIProject/Financial-Expert-Korean-Quot"
"OpenXAIProject/UncertintyAttention_DropMax" -> "OpenXAIProject/Real-time-Financial-Data"
"OpenXAIProject/UncertintyAttention_DropMax" -> "OpenXAIProject/LRP-EEG"
"OpenXAIProject/UncertintyAttention_DropMax" -> "OpenXAIProject/Tutorials"
"OpenXAIProject/UncertintyAttention_DropMax" -> "OpenXAIProject/Preprocessed_IXI_Dataset"
"OpenXAIProject/UncertintyAttention_DropMax" -> "OpenXAIProject/Network-Structure-Dropout"
"pterhoer/QMagFace" -> "fdbtrs/ElasticFace"
"pterhoer/QMagFace" -> "fdbtrs/SFace-Privacy-friendly-and-Accurate-Face-Recognition-using-Synthetic-Data"
"serengil/neural-networks-py" -> "serengil/exchanging-encrypted-mails"
"tyshiwo/FHR_alignment" -> "TencentYoutuResearch/FaceAlignment-FHR"
"dannyblueliu/YOLO-version-2-Face-detection" -> "quanhua92/darknet"
"rockchip-linux/rk-rootfs-build" -> "rockchip-linux/build"
"soloIife/yolov5_for_rknn" -> "airockchip/yolov5"
"soloIife/yolov5_for_rknn" -> "EASY-EAI/yolov5"
"soloIife/yolov5_for_rknn" -> "hhxdestiny/yolov5_for_rknn"
"carlosedp/kubernetes-arm" -> "carlosedp/prometheus-operator-ARM"
"wzj5133329/retinaface_caffe" -> "cholihao/Retinaface-caffe"
"soloist-v/yolov5_for_rknn" -> "mrwangwg123/my-rknn-yolov5"
"soloist-v/yolov5_for_rknn" -> "littledeep/YOLOv5-RK3399Pro"
"eyetrackingDB/GazeTrackingFramework" -> "errollw/EyeTab"
"eyetrackingDB/GazeTrackingFramework" -> "eyetrackingDB/GazeTrackingOfflineProcessing"
"cholihao/Retinaface-caffe" -> "wzj5133329/retinaface_caffe"
"dannyblueliu/YOLO-Face-detection" -> "azmathmoosa/azFace"
"Media-Smart/vedatad" -> "Media-Smart/vedacls"
"Media-Smart/volkscv" -> "Media-Smart/vedacls"
"Media-Smart/volkscv" -> "Media-Smart/volkstuner"
"Media-Smart/volkscv" -> "Media-Smart/cheetahinfer"
"Media-Smart/volkscv" -> "Media-Smart/cls2det"
"StevenBanama/C3AE" -> "vicwer/C3AE_Age_Estimation"
"ivclab/Day_Night_dataset_list" -> "ivclab/Sound20"
"ivclab/Day_Night_dataset_list" -> "ivclab/Merging-MobileNets-for-Multitask"
"ivclab/Day_Night_dataset_list" -> "ivclab/ConditionalGLO"
"ivclab/Day_Night_dataset_list" -> "ivclab/DeepPhotoCritic-ICCV17"
"ivclab/Day_Night_dataset_list" -> "ivclab/NeuralMerger"
"ivclab/Day_Night_dataset_list" -> "ivclab/caffe-cvprw15"
"ivclab/Day_Night_dataset_list" -> "ivclab/PAE"
"ivclab/PAE" -> "ivclab/NeuralMerger"
"ivclab/PAE" -> "ivclab/Sound20"
"ivclab/PAE" -> "ivclab/Merging-MobileNets-for-Multitask"
"ivclab/PAE" -> "ivclab/ConditionalGLO"
"ivclab/PAE" -> "ivclab/DeepPhotoCritic-ICCV17"
"ivclab/PAE" -> "ivclab/caffe-cvprw15"
"ivclab/PAE" -> "ivclab/agegenderLMTCNN"
"ivclab/agegenderLMTCNN" -> "ivclab/NeuralMerger"
"ivclab/agegenderLMTCNN" -> "ivclab/Sound20"
"ivclab/agegenderLMTCNN" -> "ivclab/Merging-MobileNets-for-Multitask"
"ivclab/agegenderLMTCNN" -> "ivclab/PAE"
"ivclab/agegenderLMTCNN" -> "ivclab/ConditionalGLO"
"ivclab/agegenderLMTCNN" -> "ivclab/DeepPhotoCritic-ICCV17"
"D-X-Y/Dual-Network-WSOD" -> "D-X-Y/HCMF"
"littledeep/YOLOv5-RK3399Pro" -> "soloist-v/yolov5_for_rknn"
"littledeep/YOLOv5-RK3399Pro" -> "mrwangwg123/my-rknn-yolov5"
"imistyrain/SeetaFace4Android" -> "ghnor/SeetaFace-AS"
"MUZLATAN/ffmpeg_rtsp_mpp" -> "WainDing/mpp_linux_cpp"
"MUZLATAN/ffmpeg_rtsp_mpp" -> "rockchip-linux/mpp"
"MUZLATAN/ffmpeg_rtsp_mpp" -> "MUZLATAN/MPP_ENCODE"
"MUZLATAN/ffmpeg_rtsp_mpp" -> "darkise/mpp_rtsp_player"
"Jooong/Face-Aging-CAAE-Pytorch" -> "mattans/AgeProgression"
"Jooong/Face-Aging-CAAE-Pytorch" -> "ajithvallabai/Pyramid-Architecture-of-GANs"
"paranjapeved/Face-anti-spoofing" -> "houliang428/CNN-for-face-anti-spoofing"
"JACKYLUO1991/106-landmarks-dataset" -> "chengzhengxin/deep-sdm"
"Media-Smart/cls2det" -> "Media-Smart/vedacls"
"Media-Smart/cls2det" -> "Media-Smart/volkstuner"
"Media-Smart/volkstuner" -> "Media-Smart/vedacls"
"Media-Smart/volkstuner" -> "Media-Smart/cls2det"
"xhuvom/darknetFaceID" -> "quanhua92/darknet"
"xhuvom/darknetFaceID" -> "dannyblueliu/YOLO-version-2-Face-detection"
"sliver-chen/mpp_linux_cpp" -> "WainDing/mpp_linux_cpp"
"sourabhvora/HyperFace-with-SqueezeNet" -> "shashanktyagi/HyperFace-TensorFlow-implementation"
"Oreobird/tf-keras-deep-head-pose" -> "haofanwang/mxnet-Head-Pose"
"imistyrain/facemask" -> "imistyrain/yolo-face"
"deepinsight/mxnet-SSH" -> "ElegantGod/SSHA"
"RoboPai/sdm" -> "patrikhuber/superviseddescent"
"RoboPai/sdm" -> "wincle/NPD"
"RoboPai/sdm" -> "cheind/dest"
"RoboPai/sdm" -> "yulequan/face-alignment-in-3000fps"
"shanglianlm0525/BlazeFace" -> "dl-maxwang/blazeface-tensorflow"
"zboulkenafet/Face-Anti-Spoofing-using-Speeded-Up-Robust-Features-and-Fisher-Vector-Encoding" -> "javier2491/CVPRw2018"
"tevcam2020/yolov5-nnie" -> "tevcam2020/arcface-nnie"
"Seymour-Lee/face-detection-ssd-mobilenet" -> "Seymour-Lee/leetcode-solutions"
"zuoqing1988/ZQ_SmokeSimulation" -> "zuoqing1988/ZQ_VirtualAD"
"zuoqing1988/ZQ_SmokeSimulation" -> "zuoqing1988/ZQlibCuda"
"zuoqing1988/ZQ_VirtualAD" -> "zuoqing1988/ZQlibCuda"
"zuoqing1988/ZQ_VirtualAD" -> "zuoqing1988/ZQ_SmokeSimulation"
"zuoqing1988/ZQlibCuda" -> "zuoqing1988/ZQ_VirtualAD"
"zuoqing1988/ZQlibCuda" -> "zuoqing1988/ZQ_SmokeSimulation"
"longchr123/deep-learning-ocean" -> "hhxdestiny/yolov5_for_rknn"
"clcarwin/sphereface_pytorch" ["l"="35.147,33.449"]
"wy1iu/sphereface" ["l"="35.062,33.46"]
"MuggleWang/CosFace_pytorch" ["l"="35.169,33.446"]
"happynear/AMSoftmax" ["l"="35.085,33.465"]
"wujiyang/Face_Pytorch" ["l"="35.166,33.411"]
"TreB1eN/InsightFace_Pytorch" ["l"="35.133,33.38"]
"yule-li/CosFace" ["l"="35.123,33.461"]
"happynear/NormFace" ["l"="35.055,33.476"]
"TropComplique/mtcnn-pytorch" ["l"="35.145,33.428"]
"ronghuaiyang/arcface-pytorch" ["l"="35.158,33.393"]
"wy1iu/LargeMargin_Softmax_Loss" ["l"="35.129,33.485"]
"penincillin/DREAM" ["l"="35.115,33.436"]
"Joker316701882/Additive-Margin-Softmax" ["l"="35.119,33.476"]
"AlfredXiangWu/LightCNN" ["l"="35.107,33.485"]
"liorshk/facenet_pytorch" ["l"="35.188,33.466"]
"fwang91/IMDb-Face" ["l"="35.101,33.443"]
"TadasBaltrusaitis/CLM-framework" ["l"="34.79,33.463"]
"patrikhuber/superviseddescent" ["l"="34.82,33.486"]
"yulequan/face-alignment-in-3000fps" ["l"="34.832,33.479"]
"soundsilence/FaceAlignment" ["l"="34.808,33.501"]
"luoyetx/deep-landmark" ["l"="34.868,33.469"]
"zhusz/CVPR15-CFSS" ["l"="34.805,33.479"]
"kylemcdonald/FaceTracker" ["l"="34.759,33.457"]
"jwyang/face-alignment" ["l"="34.821,33.498"]
"cheind/dest" ["l"="34.789,33.498"]
"ci2cv/face-analysis-sdk" ["l"="34.771,33.486"]
"uricamic/clandmark" ["l"="34.759,33.507"]
"zhzhanp/TCDCN-face-alignment" ["l"="34.83,33.465"]
"freesouls/face-alignment-at-3000fps" ["l"="34.848,33.484"]
"qiexing/face-landmark-localization" ["l"="34.862,33.415"]
"delphifirst/FaceX" ["l"="34.794,33.486"]
"TadasBaltrusaitis/OpenFace" ["l"="33.916,35.271"]
"tbmoon/kalman_filter" ["l"="35.329,33.507"]
"tbmoon/basic_vqa" ["l"="35.348,33.5"]
"guozhongluo/head-pose-estimation-and-face-landmark" ["l"="34.879,33.351"]
"lincolnhard/head-pose-estimation" ["l"="34.857,33.341"]
"yinguobing/head-pose-estimation" ["l"="34.849,33.299"]
"lsy17096535/face-landmark" ["l"="34.913,33.414"]
"natanielruiz/deep-head-pose" ["l"="34.86,33.259"]
"chengzhengxin/sdm" ["l"="34.881,33.407"]
"szad670401/Fast-MTCNN" ["l"="34.945,33.429"]
"senliuy/FaceLivenessDetection" ["l"="35.123,33.186"]
"miaoerduo/dlib-face-landmark-compression" ["l"="34.809,33.41"]
"KaleidoZhouYN/mobilefacenet-caffe" ["l"="34.992,33.424"]
"imistyrain/MTCNN" ["l"="34.988,33.439"]
"moli232777144/mtcnn_ncnn" ["l"="34.986,33.414"]
"AlphaQi/MTCNN-light" ["l"="34.96,33.467"]
"CongWeilin/mtcnn-caffe" ["l"="34.959,33.455"]
"ElegantGod/ncnn" ["l"="34.956,33.439"]
"qaz734913414/Ncnn_FaceTrack" ["l"="35.026,33.384"]
"cpuimage/MTCNN" ["l"="34.999,33.443"]
"foreverYoungGitHub/MTCNN" ["l"="34.945,33.471"]
"honghuCode/mobileFacenet-ncnn" ["l"="35.007,33.419"]
"dlunion/mtcnn" ["l"="34.948,33.458"]
"ksachdeva/opencv-mtcnn" ["l"="35.022,33.518"]
"biubug6/Face-Detector-1MB-with-landmark" ["l"="35.032,33.323"]
"Charrin/RetinaFace-Cpp" ["l"="35.035,33.371"]
"Longqi-S/ncnn-mtcnn" ["l"="34.975,33.457"]
"facebookresearch/supervision-by-registration" ["l"="34.904,33.322"]
"D-X-Y/landmark-detection" ["l"="34.905,33.294"]
"wywu/LAB" ["l"="34.921,33.352"]
"guoqiangqi/PFLD" ["l"="34.951,33.304"]
"D-X-Y/SAN" ["l"="34.826,33.373"]
"610265158/Peppa_Pig_Face_Engine" ["l"="34.94,33.312"]
"MarekKowalski/DeepAlignmentNetwork" ["l"="34.862,33.401"]
"protossw512/AdaptiveWingLoss" ["l"="34.921,33.285"]
"polarisZhao/PFLD-pytorch" ["l"="34.974,33.293"]
"HRNet/HRNet-Facial-Landmark-Detection" ["l"="34.936,33.288"]
"cleardusk/3DDFA" ["l"="34.704,31.688"]
"YuvalNirkin/face_segmentation" ["l"="34.766,31.584"]
"fengju514/Face-Pose-Net" ["l"="34.679,31.625"]
"justusschock/shapenet" ["l"="34.877,33.331"]
"patrikhuber/eos" ["l"="34.715,31.661"]
"zeusees/HyperLandmark" ["l"="34.953,33.355"]
"HCIILAB/SCUT-FBP5500-Database-Release" ["l"="35.068,33.34"]
"ustcqidi/BeautyPredict" ["l"="35.093,33.333"]
"fendouai/FaceRank" ["l"="35.06,33.415"]
"jackhuntcn/facial_beauty_prediction" ["l"="35.095,33.306"]
"HCIILAB/SCUT-HEAD-Dataset-Release" ["l"="33.98,34.115"]
"lucasxlu/TransFBP" ["l"="35.094,33.321"]
"roguesir/DL-ML-project" ["l"="35.089,33.371"]
"Honlan/BeautyGAN" ["l"="33.573,33.031"]
"zma-c-137/VarGFaceNet" ["l"="35.118,33.357"]
"wtjiang98/PSGAN" ["l"="33.527,33.016"]
"switchablenorms/CelebAMask-HQ" ["l"="33.448,32.941"]
"HuyTu7/face_rating" ["l"="35.105,33.314"]
"HuangYG123/CurricularFace" ["l"="35.169,33.334"]
"Tencent/TFace" ["l"="35.143,33.279"]
"JDAI-CV/FaceX-Zoo" ["l"="35.133,33.298"]
"IrvingMeng/MagFace" ["l"="35.2,33.3"]
"pterhoer/FaceImageQuality" ["l"="35.186,33.272"]
"deepcam-cn/FaceQuality" ["l"="35.163,33.277"]
"mk-minchul/AdaFace" ["l"="35.208,33.286"]
"ZitongYu/CDCN" ["l"="35.157,33.213"]
"cavalleria/cavaface.pytorch" ["l"="35.149,33.326"]
"taylover-pei/SSDG-CVPR2020" ["l"="35.153,33.201"]
"biubug6/Pytorch_Retinaface" ["l"="35.048,33.299"]
"deepcam-cn/yolov5-face" ["l"="34.543,35.659"]
"minivision-ai/Silent-Face-Anti-Spoofing" ["l"="35.121,33.256"]
"SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" ["l"="35.151,33.255"]
"LeslieZhoa/tensorflow-facenet" ["l"="35.099,33.547"]
"LeslieZhoa/tensorflow-MTCNN" ["l"="35.054,33.498"]
"WindZu/facenet_facerecognition" ["l"="35.121,33.551"]
"chenlinzhong/face-login" ["l"="35.107,33.564"]
"boyliwensheng/understand_facenet" ["l"="35.114,33.53"]
"MrZhousf/tf_facenet" ["l"="35.15,33.579"]
"shanren7/real_time_face_recognition" ["l"="35.052,33.539"]
"friedhelm739/Insightface-tensorflow" ["l"="35.171,33.552"]
"AITTSMD/MTCNN-Tensorflow" ["l"="34.01,35.28"]
"zangruirui/facenet_regonistant" ["l"="35.186,33.59"]
"vincentwei0919/insightface_for_face_recognition" ["l"="35.154,33.546"]
"1996scarlet/ArcFace-Multiplex-Recognition" ["l"="35.089,33.383"]
"coneypo/Dlib_face_recognition_from_camera" ["l"="35.134,33.565"]
"seathiefwang/FaceRecognition-tensorflow" ["l"="35.115,33.582"]
"PanJinquan/Face_Detection_Recognition" ["l"="35.083,33.563"]
"bearsprogrammer/real-time-deep-face-recognition" ["l"="35.094,33.632"]
"nwesem/mtcnn_facenet_cpp_tensorRT" ["l"="34.822,33.357"]
"PKUZHOU/MTCNN_FaceDetection_TensorRT" ["l"="34.984,33.382"]
"Daniel595/Jetson_nano_face_recognition" ["l"="34.774,33.345"]
"yumaofan/jetson_nano_demo" ["l"="34.763,33.341"]
"step305/Jetson-Nano-FaceRecognition" ["l"="34.788,33.345"]
"Qengineering/Face-Recognition-Jetson-Nano" ["l"="34.747,33.347"]
"rockchip-linux/tools" ["l"="34.636,34.062"]
"rockchip-linux/docs" ["l"="34.654,34.049"]
"rockchip-linux/rk-rootfs-build" ["l"="34.662,34.083"]
"rockchip-linux/rkbin" ["l"="34.648,34.073"]
"rockchip-linux/rkdeveloptool" ["l"="34.636,34.087"]
"peteryuX/retinaface-tf2" ["l"="35.028,33.436"]
"peteryuX/arcface-tf2" ["l"="35.095,33.518"]
"StanislasBertrand/RetinaFace-tf2" ["l"="35.006,33.389"]
"610265158/faceboxes-tensorflow" ["l"="34.969,33.374"]
"hukkelas/DSFD-Pytorch-Inference" ["l"="34.982,33.331"]
"leondgarse/Keras_insightface" ["l"="35.091,33.484"]
"1996scarlet/faster-mobile-retinaface" ["l"="35.003,33.554"]
"wondervictor/WiderFace-Evaluation" ["l"="34.982,33.343"]
"XiaohangZhan/cdp" ["l"="35.189,33.394"]
"yl-1993/learn-to-cluster" ["l"="35.228,33.355"]
"Zhongdao/gcn_clustering" ["l"="35.262,33.364"]
"XiaohangZhan/face_recognition_framework" ["l"="35.194,33.357"]
"happynear/FaceDatasets" ["l"="35.106,33.452"]
"sstzal/STAR-FC" ["l"="35.246,33.346"]
"xiaoxiong74/face-cluster-by-infomap" ["l"="35.212,33.326"]
"seasonSH/Probabilistic-Face-Embeddings" ["l"="35.22,33.337"]
"varun-suresh/Clustering" ["l"="35.281,33.378"]
"moli232777144/mobilefacenet-mxnet" ["l"="35.032,33.41"]
"makarandtapaswi/BallClustering_ICCV2019" ["l"="35.297,33.371"]
"seetafaceengine/SeetaFace2" ["l"="35.125,33.322"]
"seetafaceengine/SeetaFace6" ["l"="35.155,33.307"]
"YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices" ["l"="35.023,33.305"]
"seetaface/SeetaFaceEngine2" ["l"="35.074,33.357"]
"zuoqing1988/ZQCNN" ["l"="34.038,35.349"]
"SeetaFace6Open/index" ["l"="35.18,33.318"]
"seetaface/SeetaFaceEngine" ["l"="33.971,35.264"]
"TencentYoutuResearch/FaceDetection-DSFD" ["l"="34.157,35.37"]
"KangLin/FaceRecognizer" ["l"="35.202,33.343"]
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" ["l"="34.171,35.466"]
"Star-Clouds/CenterFace" ["l"="35.03,33.281"]
"ShiqiYu/libfacedetection" ["l"="34.023,35.379"]
"deepinsight/insightface" ["l"="34.075,35.427"]
"ZhaoJ9014/face.evoLVe.PyTorch" ["l"="35.139,33.361"]
"mpatacchiola/deepgaze" ["l"="34.798,33.289"]
"CSAILVision/GazeCapture" ["l"="34.69,33.177"]
"kpzhang93/MTCNN_face_detection_alignment" ["l"="34.08,35.262"]
"swook/GazeML" ["l"="34.717,33.169"]
"shamangary/FSA-Net" ["l"="34.858,33.243"]
"YadiraF/PRNet" ["l"="34.684,31.645"]
"betars/Face-Resources" ["l"="34.969,33.5"]
"dpressel/rude-carnie" ["l"="34.833,33.343"]
"kylemcdonald/ofxFaceTracker" ["l"="33.698,-23.33"]
"patrikhuber/4dface" ["l"="34.7,31.602"]
"arturoc/FaceSubstitution" ["l"="33.698,-23.35"]
"hrastnik/face_detect_n_track" ["l"="34.865,33.446"]
"chili-epfl/attention-tracker" ["l"="34.636,33.394"]
"chenjun2hao/CenterFace.pytorch" ["l"="35.046,33.283"]
"dlunion/DBFace" ["l"="35.047,33.268"]
"CaoWGG/TensorRT-CenterNet" ["l"="34.681,35.524"]
"bleakie/CenterMulti" ["l"="35.063,33.29"]
"X-zhangyang/Real-World-Masked-Face-Dataset" ["l"="35.09,33.251"]
"SyGoing/LFFD-MNN" ["l"="35.036,33.247"]
"SyGoing/LFFD-with-ncnn" ["l"="35.064,33.278"]
"mrgloom/Face-landmarks-detection-benchmark" ["l"="34.834,33.423"]
"zjjMaiMai/Deep-Alignment-Network-A-convolutional-neural-network-for-robust-face-alignment" ["l"="34.869,33.379"]
"shaoxiaohu/Face_Alignment_Two_Stage_Re-initialization" ["l"="34.845,33.413"]
"Seanlinx/mtcnn" ["l"="34.972,33.471"]
"actionLUO/106-landmarks-dataset" ["l"="34.856,33.537"]
"goodluckcwl/Face-alignment-mobilenet-v2" ["l"="34.936,33.382"]
"cypw/MXNet2Caffe" ["l"="35.027,33.401"]
"GarrickLin/MXNet2Caffe" ["l"="35.056,33.391"]
"olojuwin/facerecognize-for-mobile-phone" ["l"="35.059,33.366"]
"xialuxi/arcface-caffe" ["l"="35.047,33.412"]
"zuoqing1988/ZQCNN-v0.0" ["l"="35.04,33.424"]
"sciencefans/RSA-for-object-detection" ["l"="35.031,33.455"]
"timesler/facenet-pytorch" ["l"="33.968,35.392"]
"siriusdemon/Build-Your-Own-Face-Model" ["l"="35.078,33.312"]
"cvqluu/Angular-Penalty-Softmax-Losses-Pytorch" ["l"="35.206,33.419"]
"KaiyangZhou/pytorch-center-loss" ["l"="35.244,33.438"]
"Xiaoccer/MobileFaceNet_Pytorch" ["l"="35.133,33.409"]
"ChanChiChoi/awesome-Face_Recognition" ["l"="34.068,35.389"]
"zeusees/HyperFT" ["l"="35.022,33.363"]
"zeusees/Zeusee-Face-Anti-spoofing" ["l"="35.079,33.278"]
"becauseofAI/MobileFace" ["l"="-33.616,-15.882"]
"jackweiwang/Android-FaceDetection-UltraNet-MNN" ["l"="35.276,33.341"]
"Danicaai/android-mnn" ["l"="35.167,33.347"]
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Library" ["l"="34.763,33.438"]
"Qualeams/Android-Face-Recognition-with-Deep-Learning-Test-Framework" ["l"="34.757,33.42"]
"Lauszus/FaceRecognitionApp" ["l"="34.774,33.41"]
"pillarpond/face-recognizer-android" ["l"="34.798,33.402"]
"Lauszus/FaceRecognitionLib" ["l"="34.713,33.424"]
"abhn/marvel" ["l"="34.735,33.421"]
"tzutalin/Android-Object-Detection" ["l"="34.77,33.557"]
"GRAYKEY/mobilefacenet_android" ["l"="34.932,33.418"]
"tzutalin/dlib-android" ["l"="34.722,33.439"]
"tzutalin/dlib-android-app" ["l"="34.743,33.404"]
"yu4u/age-gender-estimation" ["l"="34.825,33.319"]
"BoyuanJiang/Age-Gender-Estimate-TF" ["l"="34.77,33.313"]
"shamangary/SSR-Net" ["l"="34.813,33.272"]
"GilLevi/AgeGenderDeepLearning" ["l"="34.842,33.359"]
"yu4u/age-estimation-pytorch" ["l"="34.813,33.246"]
"oarriaga/face_classification" ["l"="0.798,40.133"]
"ZZUTK/Face-Aging-CAAE" ["l"="34.671,33.288"]
"abars/YoloKerasFaceDetection" ["l"="34.777,33.361"]
"truongnmt/multi-task-learning" ["l"="34.729,33.285"]
"joojs/fairface" ["l"="34.92,33.209"]
"Tony607/Keras_age_gender" ["l"="34.793,33.323"]
"Microsoft/MMdnn" ["l"="34.266,35.282"]
"bystc/FaceRecognition" ["l"="35.193,33.645"]
"bystc/CollaborativeFilteringMovieRecommender" ["l"="9.726,19.788"]
"NewbranLTD/generator-nodex" ["l"="9.628,19.802"]
"Wrinth/Algorithms-with-Python" ["l"="9.687,19.775"]
"NewbranLTD/gulp-server-io" ["l"="9.699,19.789"]
"normandipalo/faceID_beta" ["l"="35.159,33.753"]
"jongmoochoi/irisfaceRGBD" ["l"="35.198,33.852"]
"Skuldur/facenet-face-recognition" ["l"="35.089,33.653"]
"DeepSystems/supervisely-tutorials" ["l"="29.299,34.085"]
"auroua/InsightFace_TF" ["l"="35.085,33.5"]
"iwantooxxoox/Keras-OpenFace" ["l"="35.072,33.621"]
"harveyslash/Facial-Similarity-with-Siamese-Networks-in-Pytorch" ["l"="24,35.479"]
"ilkarman/DeepLearningFrameworks" ["l"="34.162,35.256"]
"gaohuang/MSDNet" ["l"="34.412,35.197"]
"Fdevmsy/Image_Classification_with_5_methods" ["l"="35.317,33.998"]
"ZidanMusk/experimenting-with-sort" ["l"="32.363,36.098"]
"rockchip-linux/rknpu" ["l"="34.83,33.771"]
"rockchip-linux/rknn-toolkit" ["l"="34.852,33.716"]
"EASY-EAI/yolov5" ["l"="34.824,33.759"]
"airockchip/rknn_model_zoo" ["l"="34.824,33.782"]
"rockchip-linux/RKNPUTools" ["l"="34.857,33.749"]
"airockchip/yolov5" ["l"="34.81,33.763"]
"soloIife/yolov5_for_rknn" ["l"="34.812,33.751"]
"littledeep/YOLOv5-RK3399Pro" ["l"="34.808,33.775"]
"airockchip/librga" ["l"="34.822,33.8"]
"airockchip/rknpu_ddk" ["l"="34.813,33.817"]
"rockchip-linux/rknn-toolkit2" ["l"="34.842,33.76"]
"Zhou-sx/yolov5_Deepsort_rknn" ["l"="34.845,33.783"]
"rockchip-linux/rknpu2" ["l"="34.85,33.772"]
"soloist-v/yolov5_for_rknn" ["l"="34.805,33.794"]
"yjh0410/new-YOLOv1_PyTorch" ["l"="34.45,33.925"]
"yjh0410/yolov2-yolov3_PyTorch" ["l"="34.483,33.924"]
"abeardear/pytorch-YOLO-v1" ["l"="34.468,33.905"]
"yjh0410/PyTorch_YOLOv1" ["l"="34.434,33.938"]
"yjh0410/PyTorch_YOLO-Family" ["l"="34.45,33.951"]
"yjh0410/yolov3-plus_PyTorch" ["l"="34.417,33.929"]
"lavendelion/YOLOv1-from-scratch" ["l"="34.436,33.909"]
"yjh0410/CenterNet-Lite" ["l"="34.977,35.464"]
"Peterisfar/YOLOV3" ["l"="34.733,35.345"]
"yjh0410/PyTorch_YOLOv2" ["l"="34.484,33.947"]
"tztztztztz/yolov2.pytorch" ["l"="34.521,33.912"]
"motokimura/yolo_v1_pytorch" ["l"="34.492,33.897"]
"1996scarlet/Laser-Eye" ["l"="34.722,33.078"]
"david-wb/gaze-estimation" ["l"="34.725,33.122"]
"erkil1452/gaze360" ["l"="34.727,33.134"]
"foamliu/InsightFace-v2" ["l"="35.194,33.372"]
"cunjian/pytorch_face_landmark" ["l"="34.947,33.27"]
"610265158/face_landmark" ["l"="34.924,33.317"]
"TheSouthFrog/stylealign" ["l"="34.861,33.278"]
"yinguobing/cnn-facial-landmark" ["l"="34.868,33.308"]
"browatbn2/3FabRec" ["l"="34.829,33.225"]
"esdalmaijer/PyGaze" ["l"="34.603,33.153"]
"esdalmaijer/PyGazeAnalyser" ["l"="34.561,33.124"]
"esdalmaijer/webcam-eyetracker" ["l"="34.614,33.164"]
"pupil-labs/pupil" ["l"="34.644,33.173"]
"antoinelame/GazeTracking" ["l"="34.686,33.194"]
"stepacool/Eye-Tracker" ["l"="34.61,33.177"]
"trishume/eyeLike" ["l"="34.643,33.224"]
"jwdink/eyetrackingR" ["l"="34.536,33.108"]
"LukeAllen/optimeyes" ["l"="34.588,33.13"]
"davebraze/FDBeye" ["l"="34.556,33.102"]
"hugochan/Eye-Tracker" ["l"="34.632,33.153"]
"tmalsburg/saccades" ["l"="34.561,33.085"]
"iitmcvg/eye-gaze" ["l"="34.631,33.192"]
"opengazer/OpenGazer" ["l"="34.571,33.187"]
"psychopy/psychopy" ["l"="28.418,37.395"]
"informramiz/opencv-face-recognition-python" ["l"="35.131,33.688"]
"nazmiasri95/Face-Recognition" ["l"="35.159,33.7"]
"informramiz/Face-Detection-OpenCV" ["l"="35.19,33.74"]
"Mjrovai/OpenCV-Face-Recognition" ["l"="35.157,33.644"]
"neha01/FaceRecognition" ["l"="35.18,33.708"]
"thecodacus/Face-Recognition" ["l"="35.166,33.686"]
"parulnith/Face-Detection-in-Python-using-OpenCV" ["l"="30.556,27.947"]
"shantnu/Webcam-Face-Detect" ["l"="35.099,33.744"]
"habrman/FaceRecognition" ["l"="35.145,33.712"]
"winterssy/face_recognition_py" ["l"="35.146,33.62"]
"krasserm/face-recognition" ["l"="35.055,33.613"]
"shantnu/FaceDetect" ["l"="35.072,33.714"]
"jerry1900/faceRecognition" ["l"="35.133,33.597"]
"serengil/tensorflow-101" ["l"="35.032,33.567"]
"serengil/deepface" ["l"="33.953,35.455"]
"nyoki-mtl/keras-facenet" ["l"="35.067,33.59"]
"rcmalli/keras-vggface" ["l"="35.077,33.539"]
"thoughtworksarts/EmoPy" ["l"="-0.71,40.331"]
"amineHorseman/facial-expression-recognition-using-cnn" ["l"="-0.689,40.332"]
"serengil/neural-networks-py" ["l"="35.02,33.625"]
"serengil/retinaface" ["l"="35.002,33.342"]
"swghosh/DeepFace" ["l"="35.016,33.607"]
"serengil/crypto" ["l"="35.018,33.639"]
"deeplearningturkiye/turkce-yapay-zeka-kaynaklari" ["l"="22.712,-23.824"]
"WuJie1010/Facial-Expression-Recognition.Pytorch" ["l"="-0.689,40.347"]
"serengil/chefboost" ["l"="22.494,31.409"]
"sxpl/FaceAC" ["l"="34.879,33.237"]
"June0611/EyeBlickCheck" ["l"="34.868,33.181"]
"GuoYangGit/OCR" ["l"="34.876,33.171"]
"tyhjh/ArcFace" ["l"="34.885,33.144"]
"reggie1996/FaceDetect" ["l"="34.86,33.159"]
"kongqw/OpenCVForAndroid" ["l"="34.887,33.431"]
"wenchaosong/OCR_identify" ["l"="49.035,1.709"]
"xiaoyaoyou1212/ViseFace" ["l"="49.438,2.518"]
"wuhenzhizao/android-sku" ["l"="48.427,3.017"]
"ArcsoftEscErd/ArcfaceDemo_Android" ["l"="34.877,33.11"]
"zllrunning/face-parsing.PyTorch" ["l"="33.456,33.02"]
"cleardusk/3DDFA_V2" ["l"="34.76,31.718"]
"jhb86253817/PIPNet" ["l"="34.932,33.231"]
"leoxiaobin/deep-high-resolution-net.pytorch" ["l"="36.045,35.137"]
"YadiraF/face3d" ["l"="34.731,31.675"]
"DaFuCoding/MTCNN_Caffe" ["l"="34.957,33.479"]
"Jack-CV/PCN" ["l"="34.994,33.456"]
"blankWorld/MTCNN-Accelerate-Onet" ["l"="34.939,33.448"]
"starimeL/PytorchConverter" ["l"="34.616,35.177"]
"xiaoxiaoazhang/SeetaFace2AndroidDemo" ["l"="35.367,33.348"]
"jamesluozhiwei/seetafaceJNI" ["l"="35.157,33.287"]
"guoyaohua/SmileyFace" ["l"="35.307,33.333"]
"deepinsight/mtcnn-ncnn" ["l"="35.003,33.466"]
"OAID/FaceDetection" ["l"="34.905,33.578"]
"OAID/FaceRecognition" ["l"="34.883,33.586"]
"cyberfire/tensorflow-mtcnn" ["l"="34.895,33.636"]
"OAID/YSQfastfd" ["l"="34.877,33.503"]
"OAID/Caffe-HRT" ["l"="34.903,33.665"]
"tensorflower/seetaFace6Python" ["l"="35.234,33.295"]
"SeetaFace6Open/SeetaFace6JNI" ["l"="35.245,33.309"]
"yangkang2021/SeetaFace6-Build" ["l"="35.233,33.314"]
"ViewFaceCore/ViewFaceCore" ["l"="35.296,33.306"]
"MirrorYuChen/ncnn_example" ["l"="35.04,33.346"]
"GRAYKEY/mobilefacenet_ncnn" ["l"="35.003,33.401"]
"KangKangLoveCat/insightface_ncnn" ["l"="35.067,33.399"]
"qidiso/mobilefacenet-V2" ["l"="35.058,33.431"]
"imistyrain/MobileFaceNet" ["l"="35.04,33.433"]
"liguiyuan/mobilefacenet-ncnn" ["l"="35.043,33.39"]
"zhanglaplace/MobileFaceNet" ["l"="35.004,33.43"]
"bruinxiong/Modified-CRUNet-and-Residual-Attention-Network.mxnet" ["l"="35.072,33.428"]
"bleakie/MaskInsightface" ["l"="35.093,33.347"]
"qidiso/termux-gui" ["l"="35.089,33.431"]
"qidiso/mxnet-retrain" ["l"="35.077,33.44"]
"sirius-ai/MobileFaceNet_TF" ["l"="35.018,33.427"]
"yangxue0827/MobileFaceNet_Tensorflow" ["l"="35.026,33.466"]
"View12138/ViewFaceCore" ["l"="35.261,33.297"]
"zeusees/HyperFAS" ["l"="35.125,33.24"]
"xiangweizeng/mobile-lpr" ["l"="30.858,34.826"]
"Tencent/FaceDetection-DSFD" ["l"="35.026,33.261"]
"Media-Smart/vedadet" ["l"="35.03,33.221"]
"yxlijun/DSFD.pytorch" ["l"="34.959,33.329"]
"ChiCheng123/SRN" ["l"="34.971,33.361"]
"Tencent/ObjectDetection-OneStageDet" ["l"="35.039,33.196"]
"lijiannuist/lightDSFD" ["l"="34.987,33.298"]
"Hsintao/pfld_106_face_landmarks" ["l"="34.963,33.259"]
"tensorflower/ArcFace-python" ["l"="35.308,33.289"]
"yangjian1218/seetaface6ToPy" ["l"="35.288,33.288"]
"SeungyounShin/Adaptive-Wing-Loss-for-Robust-Face-Alignment-via-Heatmap-Regression" ["l"="34.892,33.219"]
"Star-Clouds/FRDA" ["l"="35.006,33.298"]
"elliottzheng/AdaptiveWingLoss" ["l"="34.904,33.225"]
"TropComplique/wing-loss" ["l"="34.895,33.353"]
"github-luffy/PFLD_68points_Pytorch" ["l"="34.964,33.276"]
"AIZOOTech/FaceMaskDetection" ["l"="35.091,33.229"]
"aqeelanwar/MaskTheFace" ["l"="35.178,33.252"]
"cabani/MaskedFace-Net" ["l"="35.119,33.223"]
"RiweiChen/FaceTools" ["l"="34.952,33.526"]
"hqli/face_recognition" ["l"="34.979,33.538"]
"happynear/FaceVerification" ["l"="35.018,33.5"]
"RiweiChen/DeepFace" ["l"="34.982,33.516"]
"cyh24/Joint-Bayesian" ["l"="34.974,33.553"]
"ydwen/caffe-face" ["l"="34.991,33.488"]
"wjgaas/DeepID2" ["l"="34.968,33.572"]
"AlfredXiangWu/face_verification_experiment" ["l"="35.004,33.506"]
"tornadomeet/mxnet-face" ["l"="34.923,33.509"]
"stdcoutzyx/DeepID_FaceClassify" ["l"="34.947,33.545"]
"joyhuang9473/deepid-implementation" ["l"="34.949,33.568"]
"Tonyfy/LCNN_TRAIN" ["l"="35.003,33.535"]
"WeitaoVan/L-GM-loss" ["l"="35.177,33.489"]
"ChaofWang/L-GM_loss_pytorch" ["l"="35.224,33.488"]
"KaleidoZhouYN/FaceRecognitionSystem" ["l"="35.11,33.496"]
"KaleidoZhouYN/Angular-Triplet-Loss" ["l"="35.102,33.462"]
"vivoutlaw/SSIAM" ["l"="35.356,33.376"]
"peiyunh/tiny" ["l"="34.924,33.456"]
"cydonia999/Tiny_Faces_in_Tensorflow" ["l"="34.915,33.471"]
"mahyarnajibi/SSH" ["l"="34.974,33.445"]
"sfzhang15/SFD" ["l"="34.967,33.42"]
"varunagrawal/tiny-faces-pytorch" ["l"="34.893,33.481"]
"szq0214/DSOD" ["l"="34.545,35.143"]
"zeusees/FaceBoxes" ["l"="34.968,33.434"]
"sfzhang15/RefineDet" ["l"="34.558,35.247"]
"zhaoweicai/cascade-rcnn" ["l"="34.591,35.28"]
"yl-1993/hfsoftmax" ["l"="35.3,33.354"]
"yxgeee/SpCL" ["l"="33.027,36.911"]
"DuinoDu/mtcnn" ["l"="34.971,33.485"]
"happynear/MTCNN_face_detection_alignment" ["l"="34.984,33.469"]
"pangyupo/mxnet_mtcnn_face_detection" ["l"="34.951,33.507"]
"FacialLandmark/landmark_py" ["l"="34.794,33.547"]
"FaceDetect/jointCascade_py" ["l"="34.816,33.534"]
"yalecyu/crnn.caffe" ["l"="34.588,33.646"]
"kasyoukin/caffe_ocr_for_linux" ["l"="34.588,33.661"]
"xiongzihua/pytorch-YOLO-v1" ["l"="34.544,33.87"]
"Tshzzz/pytorch_yolov1" ["l"="34.489,33.875"]
"happyjin/pytorch-YOLO" ["l"="34.524,33.887"]
"DuanYiqun/pytorch_implementation_of_Yolov1" ["l"="34.504,33.881"]
"longcw/yolo2-pytorch" ["l"="34.43,35.261"]
"uvipen/Yolo-v2-pytorch" ["l"="34.509,33.901"]
"BobLiu20/YOLOv3_PyTorch" ["l"="34.542,35.287"]
"LeslieZhoa/tensorflow-YOLO1" ["l"="34.765,33.721"]
"marvis/pytorch-yolo2" ["l"="34.518,35.253"]
"marvis/pytorch-mobilenet" ["l"="34.571,35.199"]
"kevin970401/pytorch-YOLO-v1" ["l"="34.527,33.857"]
"Media-Smart/vedaseg" ["l"="35.015,33.118"]
"Media-Smart/vedacls" ["l"="35.034,33.097"]
"Media-Smart/volkscv" ["l"="35.03,33.119"]
"Media-Smart/volksdep" ["l"="35.032,33.131"]
"Media-Smart/cheetahinfer" ["l"="35.038,33.111"]
"Media-Smart/flexinfer" ["l"="35.046,33.124"]
"Media-Smart/vedastr" ["l"="29.69,34.053"]
"LikeLy-Journey/SegmenTron" ["l"="31.76,37.032"]
"Media-Smart/cls2det" ["l"="35.043,33.101"]
"lxtGH/Fast_Seg" ["l"="31.823,37.034"]
"Media-Smart/volkstuner" ["l"="35.028,33.103"]
"ycszen/BiSeNet" ["l"="31.846,37.048"]
"mileistone/study_resources" ["l"="35.019,33.084"]
"TAMU-VITA/FasterSeg" ["l"="31.814,37.013"]
"wuhuikai/FastFCN" ["l"="31.725,37.004"]
"66pig/face_recognition" ["l"="35.246,33.652"]
"inspurer/WorkAttendanceSystem" ["l"="35.186,33.615"]
"librahfacebook/Face" ["l"="35.226,33.647"]
"reece15/cnn_face_detection" ["l"="35.24,33.636"]
"datamonday/Face-Recognition-Class-Attendance-System" ["l"="35.249,33.67"]
"BrucePoki/Attendance-system" ["l"="35.275,33.663"]
"z0gSh1u/pr-attendance" ["l"="35.283,33.675"]
"yeziyang1992/Face_Recognition_Client" ["l"="35.166,33.617"]
"hirohe/facerec-python" ["l"="1.189,40.576"]
"yinghualuowu/Python_VLPR" ["l"="30.842,34.737"]
"king-xw/Face_Recogntion" ["l"="35.217,33.634"]
"xg-zhang/faceRegister" ["l"="30.863,34.698"]
"wuhaoyu1990/MagicCamera" ["l"="50.716,1.768"]
"doggycoder/AndroidOpenGLDemo" ["l"="50.72,1.734"]
"saki4510t/UVCCamera" ["l"="50.969,1.86"]
"yuxitong/TensorFlowAndroidDemo" ["l"="34.722,33.338"]
"gloomyfish1998/opencv4android" ["l"="34.79,33.433"]
"mabeijianxi/small-video-record" ["l"="50.697,1.706"]
"aserbao/AndroidCamera" ["l"="50.802,1.672"]
"pqpo/SmartCropper" ["l"="48.795,1.305"]
"xufuji456/FFmpegAndroid" ["l"="50.788,1.71"]
"huangyanbin/smartTable" ["l"="48.703,1.341"]
"CJT2325/CameraView" ["l"="48.633,1.273"]
"yipianfengye/android-zxingLibrary" ["l"="48.632,1.207"]
"yeziyang1992/Python-Tensorflow-Face-v2.0" ["l"="35.177,33.634"]
"yeziyang1992/Python-Tensorflow-Face" ["l"="35.217,33.666"]
"lph0729/TensorFlow-FaceRecognition" ["l"="35.204,33.663"]
"vardanagarwal/Proctoring-AI" ["l"="34.769,33.159"]
"narender-rk10/MyProctor.ai-AI-BASED-SMART-ONLINE-EXAMINATION-PROCTORING-SYSYTEM" ["l"="34.767,33.092"]
"aesophor/hacklympics" ["l"="34.778,33.121"]
"mattans/AgeProgression" ["l"="34.604,33.275"]
"Jooong/Face-Aging-CAAE-Pytorch" ["l"="34.619,33.279"]
"yoyohonyang/LearingFaceAgeProgression" ["l"="34.588,33.279"]
"dawei6875797/Face-Aging-with-Identity-Preserved-Conditional-Generative-Adversarial-Networks" ["l"="34.587,33.266"]
"guyuchao/IPCGANs-Pytorch" ["l"="34.572,33.268"]
"TencentYoutuResearch/FaceAlignment-FHR" ["l"="34.735,33.304"]
"FengZhenhua/Wing-Loss" ["l"="34.806,33.335"]
"mariolew/Deep-Alignment-Network-tensorflow" ["l"="34.841,33.374"]
"songhengyang/face_landmark_factory" ["l"="34.885,33.285"]
"sergeytulyakov/FaceCept3D" ["l"="35.213,33.889"]
"basilfx/Course-Face3D" ["l"="35.225,33.918"]
"XingwXiong/Face3D-Pytorch" ["l"="35.22,33.872"]
"kuaikuaikim/DFace" ["l"="35.149,33.497"]
"DLlearn/python-in-dl" ["l"="35.135,33.661"]
"fuzheng0301/FaceRecognition" ["l"="-51.429,0.084"]
"Raschka-research-group/coral-cnn" ["l"="34.818,33.183"]
"Nicholasli1995/VisualizingNDF" ["l"="34.789,33.187"]
"Raschka-research-group/coral-pytorch" ["l"="34.805,33.135"]
"Herosan163/AgeEstimation" ["l"="34.792,33.201"]
"StevenBanama/C3AE" ["l"="34.796,33.225"]
"JingchunCheng/All-Age-Faces-Dataset" ["l"="34.82,33.113"]
"gaobb/DLDL-v2" ["l"="34.8,33.106"]
"gaobb/DLDL" ["l"="34.804,33.092"]
"Raschka-research-group/corn-ordinal-neuralnet" ["l"="34.805,33.152"]
"OverEuro/deep-head-pose-lite" ["l"="34.86,33.2"]
"haofanwang/accurate-head-pose" ["l"="34.848,33.214"]
"Oreobird/tf-keras-deep-head-pose" ["l"="34.844,33.098"]
"natanielruiz/dockerface" ["l"="34.836,33.152"]
"vinayakkailas/Face_Recognition" ["l"="35.064,33.656"]
"AISangam/Facenet-Real-time-face-recognition-using-deep-learning-Tensorflow" ["l"="35.087,33.676"]
"ColeMurray/medium-facenet-tutorial" ["l"="-32.308,39.587"]
"akshaybahadur21/Facial-Recognition-using-Facenet" ["l"="36.213,34.57"]
"arsfutura/face-recognition" ["l"="35.098,33.702"]
"ishwarsawale/real-time-face-recognition-with-facenet" ["l"="35.109,33.669"]
"Sierkinhane/mtcnn-pytorch" ["l"="35.126,33.42"]
"ternaus/retinaface" ["l"="35.007,33.197"]
"ternaus/facemask_detection" ["l"="35.011,33.155"]
"ternaus/iglovikov_helper_functions" ["l"="34.999,33.143"]
"ouyanghuiyu/yolo-face-with-landmark" ["l"="35.019,33.053"]
"meizhoubao/pyimagesearch" ["l"="34.979,33.835"]
"SIlvaMFPedro/pyimagesearch" ["l"="34.974,33.818"]
"StephenMilborrow/muct" ["l"="34.703,33.488"]
"AIInAi/tf-insightface" ["l"="35.102,33.508"]
"luckycallor/InsightFace-tensorflow" ["l"="35.125,33.496"]
"Fei-Wang/insightface" ["l"="35.127,33.517"]
"yxu0611/Tensorflow-implementation-of-LCNN" ["l"="35.18,33.536"]
"HRLTY/TP-GAN" ["l"="34.608,31.632"]
"cydonia999/VGGFace2-pytorch" ["l"="35.13,33.449"]
"hysts/pytorch_mpiigaze" ["l"="34.717,33.15"]
"Tobias-Fischer/rt_gene" ["l"="34.739,33.162"]
"cvlab-uob/Awesome-Gaze-Estimation" ["l"="34.695,33.148"]
"NVlabs/few_shot_gaze" ["l"="34.71,33.141"]
"hysts/pytorch_mpiigaze_demo" ["l"="34.698,33.134"]
"iitzco/faced" ["l"="34.892,33.452"]
"sthanhng/yoloface" ["l"="34.81,33.468"]
"ildoonet/deepface" ["l"="34.969,33.528"]
"yeephycho/tensorflow-face-detection" ["l"="34.927,33.489"]
"sfzhang15/FaceBoxes" ["l"="34.982,33.394"]
"iitzco/tfserve" ["l"="34.853,33.461"]
"EricZgw/PyramidBox" ["l"="34.937,33.407"]
"ipazc/mtcnn" ["l"="33.971,35.346"]
"ox-vgg/vgg_face2" ["l"="35.141,33.471"]
"WeidiXie/Keras-VGGFace2-ResNet50" ["l"="35.138,33.535"]
"Tony607/Keras_face_identification_realtime" ["l"="35.099,33.602"]
"davidsandberg/facenet" ["l"="34.008,35.319"]
"fengju514/Expression-Net" ["l"="34.715,31.635"]
"richmondu/libfaceid" ["l"="35.234,33.244"]
"ee09115/spoofing_detection" ["l"="35.212,33.218"]
"AhmetHamzaEmra/Intelegent_Lock" ["l"="35.264,33.211"]
"Guarouba/face_rec" ["l"="35.292,33.208"]
"juan-csv/face_liveness_detection-Anti-spoofing" ["l"="35.254,33.197"]
"JinghuiZhou/awesome_face_antispoofing" ["l"="35.185,33.223"]
"habom2310/People-tracking-with-Age-and-Gender-detection" ["l"="35.303,33.275"]
"AlexanderParkin/ChaLearn_liveness_challenge" ["l"="35.177,33.231"]
"houliang428/CNN-for-face-anti-spoofing" ["l"="35.212,33.193"]
"anand498/Face-Liveness-Detection" ["l"="35.28,33.194"]
"SeuTao/CVPR19-Face-Anti-spoofing" ["l"="35.153,33.238"]
"imironica/liveness" ["l"="35.28,33.214"]
"smahesh29/Gender-and-Age-Detection" ["l"="35.252,33.328"]
"OeslleLucena/FASNet" ["l"="35.184,33.186"]
"zisianw/FaceBoxes.PyTorch" ["l"="35.008,33.374"]
"TropComplique/FaceBoxes-tensorflow" ["l"="34.952,33.413"]
"Star-Clouds/centerface" ["l"="35.046,33.336"]
"samhforbes/PupillometryR" ["l"="34.499,33.079"]
"psychoinformatics-de/remodnav" ["l"="34.535,33.053"]
"tanakataiki/ssd_kerasV2" ["l"="34.825,33.649"]
"ManishSoni1908/Mobilenet-ssd-keras" ["l"="34.808,33.675"]
"bruceyang2012/Face-detection-with-mobilenet-ssd" ["l"="34.86,33.593"]
"maheravi/Machine-Learning" ["l"="34.988,33.312"]
"SajjadAemmi/Data-Science" ["l"="34.969,33.321"]
"SajjadAemmi/Face-Alignment" ["l"="34.971,33.309"]
"vitoralbiero/img2pose" ["l"="34.911,33.242"]
"NahidEbrahimian/Deep-Learning-Course" ["l"="34.987,33.321"]
"maheravi/Digikala-DataScience" ["l"="34.994,33.318"]
"hoseindamavandi/Python-Course" ["l"="34.98,33.312"]
"SajjadAemmi/Image-Processing-Telegram-Bot" ["l"="34.979,33.319"]
"ZitongYu/DeepFAS" ["l"="35.138,33.213"]
"clks-wzz/FAS-SGTD" ["l"="35.163,33.22"]
"zzzkk2009/casia-surf-2019-codes" ["l"="35.196,33.214"]
"yaojieliu/ECCV2018-FaceDeSpoofing" ["l"="35.184,33.21"]
"yaojieliu/CVPR2019-DeepTreeLearningForZeroShotFaceAntispoofing" ["l"="35.162,33.229"]
"deepcam-cn/Face-Anti-spoofing.pytorch" ["l"="35.192,33.23"]
"AlexanderParkin/CASIA-SURF_CeFA" ["l"="35.173,33.206"]
"Davidzhangyuanhan/CelebA-Spoof" ["l"="35.149,33.222"]
"RizhaoCai/Awesome-FAS" ["l"="35.173,33.219"]
"wangzhuo2019/SSAN" ["l"="35.143,33.168"]
"yaojieliu/ECCV20-STDN" ["l"="35.165,33.2"]
"clks-wzz/PRNet-Depth-Generation" ["l"="35.174,33.196"]
"kprokofi/light-weight-face-anti-spoofing" ["l"="35.233,33.18"]
"VIS-VAR/LGSC-for-FAS" ["l"="35.166,33.19"]
"qyxqyx/AIM_FAS" ["l"="35.159,33.18"]
"supernotman/RetinaFace_Pytorch" ["l"="35.058,33.312"]
"vipstone/faceai" ["l"="15.64,5.769"]
"luanshiyinyang/FacialExpressionRecognition" ["l"="-0.657,40.366"]
"minivision-ai/Silent-Face-Anti-Spoofing-APK" ["l"="35.081,33.296"]
"dloperab/PyImageSearch-CV-DL-CrashCourse" ["l"="34.98,33.787"]
"YunchuZhang/PyImageSearch-Gurus-Course" ["l"="35,33.814"]
"Abhs9/DL4CVStarterBundle" ["l"="30.159,36.194"]
"rdcolema/tensorflow-image-classification" ["l"="35.387,34.107"]
"jibikbam/CNN-3D-images-Tensorflow" ["l"="35.498,34.281"]
"wolfib/image-classification-CIFAR10-tf" ["l"="35.38,34.137"]
"suraj-deshmukh/Multi-Label-Image-Classification" ["l"="33.648,36.407"]
"sankit1/cv-tricks.com" ["l"="35.422,34.129"]
"chandrikadeb7/Face-Mask-Detection" ["l"="35.165,33.11"]
"njvisionpower/Safety-Helmet-Wearing-Dataset" ["l"="31.95,36.307"]
"mrnugget/opencv-haar-classifier-training" ["l"="30.979,36.351"]
"ITCoders/Human-detection-and-Tracking" ["l"="32.387,36.025"]
"bytefish/facerec" ["l"="30.225,37.008"]
"shantnu/PyEng" ["l"="35.062,33.775"]
"guoyilin/FaceDetection_CNN" ["l"="34.887,33.517"]
"JeeveshN/Face-Detect" ["l"="35.089,33.789"]
"wlguan/MobileNet-v2-pruning" ["l"="34.928,33.634"]
"eezywu/Pruned-MobileNet_v2" ["l"="34.929,33.68"]
"wlguan/MNN-yolov3" ["l"="34.935,33.526"]
"1zlab/1ZLAB_OpenCV_Face_Detection" ["l"="35.18,33.664"]
"bubbliiiing/keras-face-recognition" ["l"="29.608,35.297"]
"coderXuXiang/Face_Recognition" ["l"="35.163,33.665"]
"douxiao/detect_face_pyqt5" ["l"="-10.088,21.738"]
"YirongMao/softmax_variants" ["l"="35.225,33.449"]
"jxgu1016/MNIST_center_loss_pytorch" ["l"="35.242,33.465"]
"amirhfarzaneh/lsoftmax-pytorch" ["l"="35.225,33.474"]
"View12138/ViewFaceCoreDemo" ["l"="35.332,33.289"]
"SpringLeee/HttpReports" ["l"="23.055,19.332"]
"sdcb/Sdcb.FFmpeg" ["l"="23.245,19.209"]
"kklldog/AgileConfig" ["l"="23.087,19.304"]
"bobowire/Wireboy.Socket.P2PSocket" ["l"="23.046,19.318"]
"Ascend-Research/HeadPoseEstimation-WHENet" ["l"="34.829,33.205"]
"thohemp/6DRepNet" ["l"="34.889,33.195"]
"xucong-zhang/ETH-XGaze" ["l"="34.715,33.131"]
"choyingw/SynergyNet" ["l"="34.889,31.72"]
"omasaht/headpose-fsanet-pytorch" ["l"="34.848,33.191"]
"WIKI2020/FacePose_pytorch" ["l"="34.919,33.26"]
"1996scarlet/Dense-Head-Pose-Estimation" ["l"="34.871,31.716"]
"hnuzhy/DirectMHP" ["l"="34.846,33.173"]
"swook/faze_preprocess" ["l"="34.695,33.12"]
"yihuacheng/GazeTR" ["l"="34.686,33.112"]
"zhengyuf/STED-gaze" ["l"="34.686,33.1"]
"svip-lab/GazeFollowing" ["l"="34.715,33.113"]
"yihuacheng/PureGaze" ["l"="34.701,33.112"]
"Ahmednull/L2CS-Net" ["l"="34.753,33.14"]
"WuZhuoran/awesome-gaze" ["l"="34.683,33.139"]
"crisie/RecurrentGaze" ["l"="34.757,33.112"]
"swook/EVE" ["l"="34.707,33.124"]
"YutaItoh/3D-Eye-Tracker" ["l"="34.588,33.173"]
"LeszekSwirski/singleeyefitter" ["l"="34.552,33.149"]
"LeszekSwirski/pupiltracker" ["l"="34.539,33.157"]
"pydsgz/DeepVOG" ["l"="34.652,33.147"]
"YutaItoh/3D-EyePosition-Estimation" ["l"="34.539,33.174"]
"pupil-labs/pye3d-detector" ["l"="34.523,33.163"]
"errollw/EyeTab" ["l"="34.584,33.202"]
"tcsantini/EyeRecToo" ["l"="34.553,33.168"]
"yihuacheng/Gaze-Net" ["l"="34.73,33.105"]
"ejcgt/attention-target-detection" ["l"="34.717,33.093"]
"NVlabs/weakly-supervised-gaze" ["l"="34.703,33.084"]
"recasens/Gaze-Following" ["l"="34.735,33.093"]
"hanson-young/nniefacelib" ["l"="34.963,33.343"]
"gdubrg/Eye-Tracking-for-Everyone" ["l"="34.619,33.12"]
"Walleclipse/Gaze_Tracking" ["l"="34.616,33.138"]
"eyetrackingDB/GazeTrackingFramework" ["l"="34.602,33.21"]
"trishume/SmartGaze" ["l"="34.598,33.193"]
"tiendan/OpenGazer" ["l"="34.513,33.183"]
"rohitgajawada/Where-are-they-looking-PyTorch" ["l"="34.702,33.064"]
"shaoanlu/GazeML-keras" ["l"="34.749,33.126"]
"akofman/wider-face-pascal-voc-annotations" ["l"="34.992,33.239"]
"HiKapok/tf.extra_losses" ["l"="35.213,33.53"]
"auroua/L_Softmax_TensorFlow" ["l"="35.26,33.566"]
"pppoe/tensorflow-sphereface-asoftmax" ["l"="35.244,33.54"]
"andrewhuman/sphereloss_tensorflow" ["l"="35.252,33.553"]
"unixpickle/spherenet" ["l"="35.226,33.539"]
"rockchip-android/RKDocs" ["l"="34.662,34.063"]
"rockchip-linux/kernel" ["l"="34.678,34.043"]
"rockchip-linux/buildroot" ["l"="34.698,34.054"]
"changechenyu/chenyuEbook" ["l"="34.476,33.36"]
"Reginer/MVVMHub" ["l"="34.557,33.359"]
"itboyst/ArcSoftFaceDemo" ["l"="35.044,33.15"]
"chengxy-nds/ArcSoftFaceDemo" ["l"="35.07,33.098"]
"jastar-wang/arcface" ["l"="35.077,33.115"]
"itboyst/ArcSoftFaceFrameDemo" ["l"="35.062,33.116"]
"asdfqwrasdf/ArcFaceDemo" ["l"="34.904,33.096"]
"itboyst/ArcSoftFaceDemoUI" ["l"="35.059,33.131"]
"zweigraf/face-landmarking-ios" ["l"="34.685,33.463"]
"FaceAR/OpenFaceIOS" ["l"="34.733,33.461"]
"DroidsOnRoids/VisionFaceDetection" ["l"="34.595,33.495"]
"YuAo/Vivid" ["l"="-49.484,4.091"]
"mattlawer/FaceLandmarksDetection" ["l"="34.656,33.48"]
"Weijay/AppleFaceDetection" ["l"="34.565,33.499"]
"gicheonkang/fast_face_android" ["l"="34.668,33.438"]
"RoboPai/sdm" ["l"="34.796,33.508"]
"metal-by-example/sample-code" ["l"="-49.567,3.981"]
"remirobert/Facemotion" ["l"="34.586,33.52"]
"spmallick/dlib" ["l"="34.774,33.38"]
"spmallick/learnopencv" ["l"="34.008,35.414"]
"opencv/open_model_zoo" ["l"="32.231,35.732"]
"davheld/GOTURN" ["l"="32.54,36.114"]
"Santhosh-KS/spookfish" ["l"="34.726,33.365"]
"jrosebr1/imutils" ["l"="34.086,35.358"]
"spmallick/opencv-haar-classifier-training" ["l"="34.699,33.372"]
"llSourcell/YOLO_Object_Detection" ["l"="34.253,35.153"]
"YonghaoHe/LFFD-A-Light-and-Fast-Face-Detector-for-Edge-Devices" ["l"="35,33.214"]
"YonghaoHe/LFD-A-Light-and-Fast-Detector" ["l"="35.01,33.241"]
"becauseofAI/lffd-pytorch" ["l"="35.008,33.258"]
"gm19900510/Pytorch_Retina_License_Plate" ["l"="30.87,34.802"]
"ZhaoJ9014/High-Performance-Face-Recognition" ["l"="-35.287,-17.369"]
"dlunion/CaffeLSTM-OCR" ["l"="34.618,33.618"]
"dlunion/CCDL" ["l"="34.741,33.558"]
"dlunion/CC4.0" ["l"="34.646,33.604"]
"dlunion/CC5.0" ["l"="34.662,33.596"]
"senlinuc/caffe_ocr" ["l"="29.473,34.14"]
"dlunion/EasyOpenPose" ["l"="34.559,33.652"]
"xmfbit/warpctc-caffe" ["l"="34.547,33.626"]
"warrentdrew/Caffe_SSD_LSTM_LPR" ["l"="34.583,33.625"]
"soeaver/caffe-model" ["l"="34.479,35.12"]
"Linzaer/Face-Track-Detect-Extract" ["l"="35.003,33.355"]
"pyannote/pyannote-video" ["l"="-32.275,39.568"]
"clancylian/retinaface" ["l"="35.031,33.335"]
"rockchip-linux/u-boot" ["l"="34.683,34.066"]
"rockchip-linux/libmali" ["l"="34.707,34.025"]
"rockchip-linux/mpp" ["l"="34.729,33.924"]
"friendlyarm/kernel-rockchip" ["l"="34.659,34.103"]
"FireflyTeam/kernel" ["l"="34.632,34.026"]
"linux-rockchip/linux-rockchip" ["l"="34.689,34.086"]
"rockchip-linux/gstreamer-rockchip" ["l"="34.71,33.989"]
"ayufan-rock64/linux-kernel" ["l"="34.718,34.082"]
"radxa/kernel" ["l"="34.604,34.063"]
"xboot/xrock" ["l"="34.612,34.095"]
"elucideye/drishti" ["l"="34.656,33.306"]
"DeepBCI/Deep-BCI" ["l"="35.656,34.5"]
"PatternRecognition/OpenBMI" ["l"="35.638,34.482"]
"wjNam/Relative_Attributing_Propagation" ["l"="35.654,34.481"]
"OpenXAIProject/LRP-EEG" ["l"="35.634,34.495"]
"vlawhern/arl-eegmodels" ["l"="28.607,37.459"]
"OpenXAIProject/Lung-cancer" ["l"="35.622,34.493"]
"NeuroTechX/moabb" ["l"="28.633,37.456"]
"OpenXAIProject/Diagnosis-of-Alzheimers-Disease" ["l"="35.614,34.464"]
"OpenXAIProject/Tutorials" ["l"="35.625,34.511"]
"kylemath/DeepEEG" ["l"="28.619,37.447"]
"SuperBruceJia/EEG-DL" ["l"="28.613,37.499"]
"braindecode/braindecode" ["l"="28.589,37.459"]
"emmanuelkalunga/Online-SSVEP" ["l"="35.705,34.547"]
"pbashivan/EEGLearn" ["l"="28.589,37.447"]
"zhangks98/eeg-adapt" ["l"="35.673,34.484"]
"nikk-nikaznan/SSVEP-Neural-Generative-Models" ["l"="35.761,34.599"]
"osmanberke/Deep-SSVEP-BCI" ["l"="35.76,34.613"]
"edwin465/SSVEP-MSCCA-MSTRCA" ["l"="35.756,34.632"]
"jinglescode/ssvep-multi-task-learning" ["l"="35.776,34.631"]
"luoyetx/mini-caffe" ["l"="34.912,33.496"]
"KaleidoZhouYN/e2e-joint-face-detection-and-alignment" ["l"="34.944,33.487"]
"zhanglaplace/3000fps-mtcnn" ["l"="34.875,33.457"]
"zuoqing1988/train-mtcnn" ["l"="35.011,33.409"]
"vincentwei0919/crawler" ["l"="35.194,33.572"]
"gqjjqg/android-extend" ["l"="34.908,33.054"]
"lsy17096535/faceboxes" ["l"="34.909,33.44"]
"gicheonkang/fast-face-android" ["l"="34.682,33.421"]
"gv22ga/dlib-face-recognition-android" ["l"="34.717,33.411"]
"gicheonkang/Fast-Face-android" ["l"="34.644,33.46"]
"SimonCherryGZ/face-landmark-android" ["l"="34.644,33.436"]
"sh1r0/caffe-android-lib" ["l"="34.802,33.572"]
"davisking/dlib-models" ["l"="33.929,35.242"]
"Li-Shang/faceCapture" ["l"="34.659,33.412"]
"tunaemre/Face-Swap-Android" ["l"="34.61,33.453"]
"wysaid/android-gpuimage-plus" ["l"="50.752,1.733"]
"Fotoapparat/FaceDetector" ["l"="52.396,-2.334"]
"xiangdeyizhang/FaceTrack_ncnn_HyperFT" ["l"="35.048,33.378"]
"HandsomeHans/Face-Tracking-Based-on-OpenTLD-and-RNet" ["l"="35.07,33.381"]
"zeusees/HyperLabelImg" ["l"="30.914,34.824"]
"MirrorYuChen/ncnn_106landmarks" ["l"="35.118,33.342"]
"bjj9/EVE_SCPT" ["l"="34.671,33.112"]
"VIPL-TAL-GAZE/GAZE2021" ["l"="34.675,33.125"]
"ainrichman/Peppa-Facial-Landmark-PyTorch" ["l"="34.94,33.255"]
"thepowerfuldeez/facemesh.pytorch" ["l"="34.939,33.163"]
"jiechen2358/FaceAging-by-cycleGAN" ["l"="34.61,33.262"]
"ajithvallabai/Pyramid-Architecture-of-GANs" ["l"="34.6,33.289"]
"InterDigitalInc/HRFAE" ["l"="34.603,33.25"]
"Prinsphield/ELEGANT" ["l"="33.409,32.747"]
"mrgloom/Face-Swap" ["l"="34.731,31.512"]
"LynnHo/AttGAN-Tensorflow" ["l"="33.441,32.8"]
"neuro-ml/resnet_cnn_mri_adni" ["l"="35.522,34.323"]
"ehosseiniasl/3d-convolutional-network" ["l"="35.53,34.337"]
"josedolz/LiviaNET" ["l"="29.11,36.435"]
"kcct-fujimotolab/3DCNN" ["l"="32.573,34.859"]
"JihongJu/keras-resnet3d" ["l"="32.466,34.741"]
"yukitsuji/3D_CNN_tensorflow" ["l"="30.439,44.361"]
"liqi814/Deep-3D-CNNs-for-MRI-Classification-with-Alzheimer-s-Disease-And-Grad-CAM-Visualization" ["l"="35.475,34.29"]
"wangyirui/AD_Prediction" ["l"="35.545,34.353"]
"hasibzunair/3D-image-classification-tutorial" ["l"="35.481,34.267"]
"himanshub1007/Alzhimers-Disease-Prediction-Using-Deep-learning" ["l"="35.523,34.264"]
"west-gates/3DCNN-Vis" ["l"="35.527,34.305"]
"regnerus/keras-alzheimers-3d-conv" ["l"="35.549,34.336"]
"aramis-lab/AD-DL" ["l"="35.53,34.367"]
"bbanddd/ADDL" ["l"="35.507,34.341"]
"Spidy20/face_mask_detection" ["l"="35.177,33.053"]
"prajnasb/observations" ["l"="35.159,33.074"]
"mk-gurucharan/Face-Mask-Detection" ["l"="35.18,33.069"]
"mmphego/face_mask_detection_openvino" ["l"="35.194,33.01"]
"prlz77/vgg-face.pytorch" ["l"="35.24,33.508"]
"AruniRC/resnet-face-pytorch" ["l"="35.212,33.465"]
"EvelynFan/AWESOME-FER" ["l"="-0.723,40.355"]
"FFZhang1231/Facial-expression-recognition" ["l"="-0.754,40.356"]
"huihut/Facemoji" ["l"="34.568,33.41"]
"utibenkei/DlibFaceLandmarkDetectorWithLive2DSample" ["l"="34.515,33.417"]
"EnoxSoftware/DlibFaceLandmarkDetector" ["l"="-11.94,40.642"]
"HosniMansour/Unity3DFaceTtracking" ["l"="34.731,31.832"]
"EnoxSoftware/CVVTuberExample" ["l"="35.443,36.026"]
"huailiang/face-nn" ["l"="-13.023,39.949"]
"pupil-labs/hmd-eyes" ["l"="34.598,33.094"]
"pupil-labs/pupil-docs" ["l"="34.58,33.065"]
"sccn/labstreaminglayer" ["l"="28.667,37.436"]
"foamliu/FaceNet" ["l"="35.039,33.657"]
"chen0040/keras-face" ["l"="35.047,33.64"]
"sainimohit23/FaceNet-Real-Time-face-recognition" ["l"="35.063,33.637"]
"satinder147/Attendance-using-Face" ["l"="24.224,35.699"]
"jacklightChen/Learn-Hyperledger-Fabric-Source-Code" ["l"="35.485,33.181"]
"jacklightChen/merkle-bplus-tree" ["l"="35.493,33.192"]
"jacklightChen/klein" ["l"="35.477,33.192"]
"jacklightChen/disqus-proxy-serverless" ["l"="35.454,33.194"]
"louis-she/center-loss.pytorch" ["l"="35.292,33.455"]
"Megvii-Nanjing/BBN" ["l"="33.709,36.657"]
"adambielski/siamese-triplet" ["l"="24.069,35.5"]
"tengshaofeng/ResidualAttentionNetwork-pytorch" ["l"="31.677,37.203"]
"huanghoujing/person-reid-triplet-loss-baseline" ["l"="33.05,36.825"]
"Cysu/open-reid" ["l"="33.086,36.835"]
"TinyZeaMays/CircleLoss" ["l"="33.477,34.246"]
"vandit15/Class-balanced-loss-pytorch" ["l"="33.732,36.651"]
"xiaoboCASIA/SV-X-Softmax" ["l"="35.157,33.376"]
"cleardusk/MFR" ["l"="35.178,33.356"]
"4uiiurz1/pytorch-adacos" ["l"="35.174,33.386"]
"fdbtrs/ElasticFace" ["l"="35.27,33.281"]
"huangyangyu/NoiseFace" ["l"="35.205,33.389"]
"sciencefans/trojans-face-recognizer" ["l"="35.107,33.336"]
"JiajiongCao/CELEB-500K" ["l"="35.107,33.348"]
"szad670401/advanced-mxnet2caffe" ["l"="35.058,33.354"]
"wy1iu/MHE" ["l"="35.117,33.405"]
"ElegantGod/SSHA" ["l"="35.032,33.488"]
"luoyetx/Joint-Face-Detection-and-Alignment" ["l"="34.982,33.429"]
"walkoncross/prepare-faces-zyf" ["l"="35.085,33.449"]
"KaleidoZhouYN/Details-on-Face-Recognition" ["l"="35.072,33.47"]
"liuziwei7/mobile-id" ["l"="35.018,33.484"]
"ninesky110/Real-time-face-recognition" ["l"="35.106,33.614"]
"ZhaoJ9014/face.evoLVe" ["l"="35.178,33.302"]
"royorel/FFHQ-Aging-Dataset" ["l"="34.547,33.24"]
"yuval-alaluf/SAM" ["l"="33.251,32.988"]
"royorel/Lifespan_Age_Transformation_Synthesis" ["l"="34.549,33.258"]
"genforce/interfacegan" ["l"="33.329,32.953"]
"HasnainRaz/Fast-AgingGAN" ["l"="34.579,33.247"]
"Lotayou/Face-Renovation" ["l"="35.731,32.362"]
"GitHberChen/MTCNN_Pytorch" ["l"="35.188,33.424"]
"wujiyang/MTCNN_TRAIN" ["l"="35.212,33.434"]
"polarisZhao/mtcnn-pytorch" ["l"="35.174,33.429"]
"faciallab/FaceDetector" ["l"="35.186,33.44"]
"beichen2012/mtcnn-pytorch" ["l"="35.197,33.432"]
"tbmoon/facenet" ["l"="35.241,33.487"]
"dlunion/tensorRTIntegrate" ["l"="34.672,35.564"]
"ElvishElvis/68-Retinaface-Pytorch-version" ["l"="35.07,33.262"]
"bogireddytejareddy/retinaface-pytorch" ["l"="35.064,33.25"]
"foamliu/InsightFace-v3" ["l"="35.229,33.327"]
"WindyXiang/NanoTrack_RK3588_python" ["l"="32.532,36.42"]
"MUZLATAN/ffmpeg_rtsp_mpp" ["l"="34.759,33.885"]
"cqu20160901/yolov8n_onnx_tensorRT_rknn_horizon" ["l"="34.833,33.814"]
"HermanChen/mpp" ["l"="34.701,33.935"]
"WainDing/mpp_linux_cpp" ["l"="34.745,33.909"]
"sliver-chen/mpp_linux_cpp" ["l"="34.754,33.928"]
"JeffyCN/libv4l-rkmpp" ["l"="34.698,33.918"]
"rockchip-linux/linux-rga" ["l"="34.739,33.959"]
"darkise/mpp_rtsp_player" ["l"="34.759,33.913"]
"JeffyCN/FFmpeg" ["l"="34.725,33.949"]
"DevoutPrayer/streamer" ["l"="34.75,33.945"]
"allwinner-zh/media-codec" ["l"="-34.808,42.837"]
"rockchip-linux/ffmpeg" ["l"="34.707,33.952"]
"dchen236/FairFace" ["l"="35.034,33.178"]
"vkola-lab/brain2020" ["l"="35.572,34.373"]
"vkola-lab/ncomms2022" ["l"="35.596,34.386"]
"NYUMedML/CNN_design_for_AD" ["l"="35.551,34.376"]
"rainofmine/Face_Attention_Network" ["l"="34.925,33.394"]
"Goingqs/PyramidBox" ["l"="34.951,33.378"]
"rainofmine/Repulsion_Loss" ["l"="34.694,36.477"]
"louis-she/sfd.pytorch" ["l"="34.911,33.369"]
"syaringan357/Android-MobileFaceNet-MTCNN-FaceAntiSpoofing" ["l"="34.972,33.35"]
"estebanuri/face_recognition" ["l"="34.891,33.388"]
"jiangxiluning/facenet_mtcnn_to_mobile" ["l"="34.912,33.4"]
"becauseofAI/HelloFace" ["l"="-33.608,-15.902"]
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" ["l"="34.007,34.116"]
"liuwei16/CSP" ["l"="34.678,36.477"]
"seasonSH/DocFace" ["l"="35.106,33.423"]
"cvtower/seesawfacenet_pytorch" ["l"="35.221,33.397"]
"liuyuisanai/trojans-face-recognizer" ["l"="35.21,33.357"]
"yangfei963158659/nnie" ["l"="34.854,33.436"]
"RaySue/NNIE-lite" ["l"="34.83,33.442"]
"zboulkenafet/Face-anti-spoofing-based-on-color-texture-analysis" ["l"="35.194,33.168"]
"allenyangyl/Face_Liveness_Detection" ["l"="35.163,33.161"]
"jwyang/Person-Specific-FAS" ["l"="35.205,33.134"]
"paranjapeved/Face-anti-spoofing" ["l"="35.224,33.172"]
"yunfan0621/Benchmarks_for_Face_Liveness_Detection" ["l"="35.217,33.162"]
"zboulkenafet/Face-Anti-Spoofing-using-Speeded-Up-Robust-Features-and-Fisher-Vector-Encoding" ["l"="35.197,33.145"]
"yomna-safaa/spoofnet-tensorflow" ["l"="35.228,33.145"]
"mnikitin/Learn-Convolutional-Neural-Network-for-Face-Anti-Spoofing" ["l"="35.208,33.18"]
"NarcissusHliangZhao/Face-Liveness-Detection" ["l"="35.142,33.141"]
"rienheuver/face-antispoofing-LBP" ["l"="35.186,33.126"]
"wuyongchn/Face-Spoofing-Detection-or-Face-Liveness-Detection" ["l"="35.185,33.152"]
"yunfan0621/Face_Liveness_Detection" ["l"="35.138,33.154"]
"Jade999/face_antispoofing" ["l"="35.218,33.128"]
"FacePlusPlus/MegviiFacepp-Android-SDK" ["l"="34.909,32.986"]
"smartkids77/ArcSoft_FreeSDK_Demo" ["l"="34.87,32.959"]
"ZeroingIn/facedemo" ["l"="34.895,33.066"]
"cepr/android-serialport-api" ["l"="51.115,1.906"]
"junerver/ArcFaceDemo" ["l"="34.885,33.055"]
"rshaojimmy/AAAI2020-RFMetaFAS" ["l"="35.184,33.201"]
"huguesva/Face-Anti-Spoofing-Neural-Network" ["l"="35.196,33.2"]
"YYuanAnyVision/mxnet_mtcnn_face_detection" ["l"="35.109,33.371"]
"njvisionpower/mxnet-insightface-cpp" ["l"="35.24,33.398"]
"NNNNAI/VGGFace2-HQ" ["l"="34.968,31.512"]
"rshaojimmy/CVPR2019-MADDoG" ["l"="35.178,33.171"]
"dinhquy94/face-antispoofing-using-mobileNet" ["l"="35.222,33.206"]
"wangbm/MTCNN-Tensorflow" ["l"="35.163,33.565"]
"wensiyuanseven/light-virtual-list" ["l"="21.817,27.365"]
"cfs6/AChat" ["l"="21.838,27.382"]
"wensiyuanseven/better-gesture" ["l"="21.87,27.357"]
"WynMew/FaceAttribute" ["l"="34.553,33.302"]
"d-li14/face-attribute-prediction" ["l"="34.571,33.31"]
"TencentYoutuResearch/FaceAttribute-FAN" ["l"="34.631,33.299"]
"HandsomeHans/Face-Attributes-MultiTask-Classification" ["l"="34.513,33.306"]
"camel007/caffe-moon" ["l"="34.501,33.296"]
"jihunchoi/lsoftmax-pytorch" ["l"="35.268,33.487"]
"KikimorMay/MultiFace" ["l"="35.193,33.287"]
"iiscleap/NeuralPlda" ["l"="0.303,39.729"]
"Jungjee/RawNet" ["l"="0.37,39.744"]
"manojpamk/pytorch_xvectors" ["l"="0.358,39.753"]
"CoinCheung/pytorch-loss" ["l"="33.748,36.589"]
"clovaai/voxceleb_trainer" ["l"="0.376,39.788"]
"sciencefans/coco_loss" ["l"="35.098,33.474"]
"zzzheng/pytorch-yolo-v1" ["l"="34.468,33.885"]
"iacopomasi/face_specific_augm" ["l"="34.663,31.618"]
"zhangjunh/DR-GAN-by-pytorch" ["l"="34.552,31.62"]
"tkat0/PyTorch_BlazeFace" ["l"="34.995,33.172"]
"BobLiu20/mtcnn_tf" ["l"="35.226,33.598"]
"look4pritam/tfmtcnn" ["l"="35.21,33.595"]
"QuasarLight/Pytorch_Face_Recognition-" ["l"="35.212,33.373"]
"wy1iu/SphereNet" ["l"="35.194,33.52"]
"luoyetx/mx-lsoftmax" ["l"="33.059,35.752"]
"wy1iu/DCNets" ["l"="35.21,33.517"]
"twtygqyy/caffe-augmentation" ["l"="34.585,35.04"]
"lufo816/face_verification_demo" ["l"="34.959,33.642"]
"MaoXu/Joint_Bayesian" ["l"="34.96,33.612"]
"shaoguangcheng/faceFrontalization" ["l"="34.554,31.684"]
"jinze1994/DeepID1" ["l"="34.952,33.593"]
"pangyupo/mxnet_center_loss" ["l"="33.113,35.709"]
"shen1994/DeepID" ["l"="34.96,33.581"]
"Aristochi/Dangerous_driving_behavior_detection" ["l"="34.369,33.325"]
"DohaerisT/DangerousDrivingDetector" ["l"="34.382,33.335"]
"PengfeiM/Fatigue-Driven-Detection-Based-on-CNN" ["l"="34.375,33.309"]
"JingyibySUTsoftware/Yolov5-deepsort-driverDistracted-driving-behavior-detection" ["l"="34.392,33.319"]
"Aristochi/MTCNN_CNN_DangerDrivingDetection" ["l"="34.325,33.324"]
"omnigeeker/mlnd_distracted_driver_detection" ["l"="34.432,33.325"]
"KyrieIrv11ng/Yolov5-driving-detection" ["l"="34.341,33.334"]
"hongyaohongyao/smart_classroom" ["l"="-0.591,40.386"]
"hzq-zjm/RobotVision2" ["l"="34.339,33.297"]
"bairdzhang/smallhardface" ["l"="34.964,33.385"]
"xiaqunfeng/face-evaluation" ["l"="34.956,33.291"]
"jerryhouuu/Face-Yaw-Roll-Pitch-from-Pose-Estimation-using-OpenCV" ["l"="34.899,33.338"]
"vipul105/Alzheimers_Disease_Progression" ["l"="35.483,34.344"]
"zhangqianhui/CnnForAndroid" ["l"="34.812,33.596"]
"Leliana/WhatsThis" ["l"="34.778,33.631"]
"sh1r0/caffe-android-demo" ["l"="34.796,33.593"]
"alexkarargyris/Caffe_OpenCV_Android_App" ["l"="34.782,33.583"]
"solrex/caffe-mobile" ["l"="34.849,33.556"]
"ENCP/CNNdroid" ["l"="34.842,33.577"]
"imistyrain/SeetaFace4Android" ["l"="34.75,33.679"]
"xingwangsfu/caffe-yolo" ["l"="34.514,35.083"]
"anson0910/CNN_face_detection" ["l"="34.864,33.519"]
"Zod20/OpenCV-Face-Recognition-Android" ["l"="34.758,33.398"]
"severin-lemaignan/gazr" ["l"="34.611,33.363"]
"jonnedtc/PupilDetector" ["l"="34.614,33.315"]
"Krigu/Gaze" ["l"="34.536,33.197"]
"simonarvin/eyeloop" ["l"="34.521,33.138"]
"HugoM25/Img_To_Photomosaics" ["l"="34.476,33.124"]
"yihuacheng/GazeEstimation-Summary" ["l"="34.695,33.091"]
"hysts/pl_gaze_estimation" ["l"="34.686,33.126"]
"SenHe/DLFS" ["l"="34.497,33.244"]
"rosinality/swapping-autoencoder-pytorch" ["l"="33.209,32.899"]
"Hzzone/MTLFace" ["l"="34.511,33.262"]
"Hzzone/PFA-GAN" ["l"="34.537,33.27"]
"microsoft/CoCosNet" ["l"="34.529,32.535"]
"yxlijun/Pyramidbox.pytorch" ["l"="34.936,33.344"]
"yxlijun/S3FD.pytorch" ["l"="34.936,33.367"]
"luuuyi/S3FD.PyTorch" ["l"="34.928,33.334"]
"610265158/DSFD-tensorflow" ["l"="34.94,33.327"]
"clcarwin/SFD_pytorch" ["l"="34.917,33.382"]
"shicaiwei123/anti-spoofing-of-rppg" ["l"="29.425,37.271"]
"coderwangson/awesome-face-anti-spoofing" ["l"="35.249,33.158"]
"TJU-Zhaoxy/A-Pyramid-Architecture-of-GANs" ["l"="34.572,33.285"]
"vcvycy/MTCNN4Android" ["l"="34.852,33.383"]
"vcvycy/Android_Facenet" ["l"="34.873,33.395"]
"Monologuethl/Android_Facenet_Recognition" ["l"="34.844,33.402"]
"apkelly/devnibbles_facial_recognition_with_android" ["l"="34.741,33.381"]
"wangjiangyong/tflite_android_facedemo" ["l"="34.722,33.381"]
"royshil/HeadPosePnP" ["l"="34.761,33.296"]
"noagarcia/awesome-vqa-pytorch" ["l"="35.383,33.507"]
"sakethbachu/Face-Liveness-Detection" ["l"="35.303,33.174"]
"jomariya23156/face-recognition-with-liveness-web-login" ["l"="35.3,33.157"]
"birdowl21/Face-Liveness-Detection-Anti-Spoofing-Web-App" ["l"="35.285,33.167"]
"Microsoft/caffe" ["l"="35,33.581"]
"happynear/caffe-windows" ["l"="35.027,33.543"]
"daijifeng001/R-FCN" ["l"="34.418,35.11"]
"weiliu89/caffe" ["l"="34.325,35.17"]
"shicai/Caffe_Manual" ["l"="34.565,35.076"]
"Orpine/py-R-FCN" ["l"="34.464,35.072"]
"ShaoqingRen/faster_rcnn" ["l"="34.336,35.101"]
"vlfeat/matconvnet" ["l"="30.195,37.089"]
"shelhamer/fcn.berkeleyvision.org" ["l"="34.324,35.133"]
"ethereon/caffe-tensorflow" ["l"="34.278,35.111"]
"DeepScale/SqueezeNet" ["l"="34.356,35.084"]
"caffe2/caffe2" ["l"="27.02,33.871"]
"soumith/torch-android" ["l"="26.819,34.387"]
"pmgysel/caffe" ["l"="30.635,35.584"]
"facebook/fb-caffe-exts" ["l"="26.89,34.187"]
"bwasti/AICamera" ["l"="34.8,33.617"]
"songhan/SqueezeNet-Deep-Compression" ["l"="30.657,35.602"]
"shicai/MobileNet-Caffe" ["l"="34.517,35.142"]
"XiaoMi/mobile-ai-bench" ["l"="27.556,35.378"]
"hellock/icrawler" ["l"="35.264,33.456"]
"dxsooo/ImageCrawl" ["l"="35.337,33.453"]
"amineHorseman/images-web-crawler" ["l"="35.356,33.466"]
"hellock/torchpack" ["l"="35.319,33.452"]
"rksltnl/Deep-Metric-Learning-CVPR16" ["l"="33.66,34.191"]
"waiterxiaoyy/waiter-facerecognition-python" ["l"="35.291,33.7"]
"Sharpiless/Face-recognition-for-classroom-sign-in" ["l"="35.27,33.7"]
"PuNeal/DLDL-v2-PyTorch" ["l"="34.796,33.079"]
"zeakey/LDLForests" ["l"="34.796,33.053"]
"hyunbo9/face_aging_with_CycleGan" ["l"="34.587,33.236"]
"jiangdongguo/OpenCV4Android" ["l"="34.693,33.442"]
"foamliu/MobileFaceNet" ["l"="35.242,33.414"]
"xuexingyu24/MobileFaceNet_Tutorial_Pytorch" ["l"="35.224,33.424"]
"shoutOutYangJie/Face_Recognition_using_pytorch" ["l"="35.228,33.412"]
"azhe198827/retinaface_tensorRT" ["l"="35.011,33.28"]
"wzj5133329/retinaface_caffe" ["l"="35.018,33.335"]
"uam-biometrics/FaceQnet" ["l"="35.229,33.272"]
"yangyuke001/FIIQA-PyTorch" ["l"="35.357,33.214"]
"pterhoer/QMagFace" ["l"="35.269,33.265"]
"BruceZhanKai/Face-Image-Quality-Assessment" ["l"="35.277,33.246"]
"zhanglijun95/FIIQA" ["l"="35.291,33.238"]
"Slinene/SDD-FIQA" ["l"="35.216,33.258"]
"fdbtrs/CR-FIQA" ["l"="35.277,33.271"]
"gehaocool/CombinedMargin-caffe" ["l"="35.023,33.417"]
"yonghenglh6/DepthwiseConvolution" ["l"="34.578,35.129"]
"wy1iu/sphereface-plus" ["l"="35.085,33.4"]
"KeqiangSun/FAB" ["l"="34.832,33.249"]
"wywu/ReenactGAN" ["l"="34.938,31.541"]
"Danbinabo/insighrface" ["l"="35.216,33.616"]
"gliese581gg/YOLO_tensorflow" ["l"="34.341,35.122"]
"eveningglow/age-and-gender-classification" ["l"="34.702,33.322"]
"arunponnusamy/gender-detection-keras" ["l"="35.202,33.449"]
"KimSoybean/ScratchDet" ["l"="34.708,35.317"]
"ywcmaike/2018--ZJUAI--PyramidBoxDetector" ["l"="34.916,33.334"]
"OceanPang/Libra_R-CNN" ["l"="34.707,35.373"]
"shanglianlm0525/BlazeFace" ["l"="34.984,33.087"]
"hollance/BlazeFace-PyTorch" ["l"="34.955,33.146"]
"kentaroy47/BlazeFace_Person.pytorch" ["l"="34.974,33.124"]
"xindongzhang/MNN-APPLICATIONS" ["l"="35.002,33.328"]
"vicwer/C3AE_Age_Estimation" ["l"="34.778,33.246"]
"b02901145/SSR-Net_megaage-asian" ["l"="34.75,33.272"]
"AnthonyF333/FaceLandmark_PFLD_UltraLight" ["l"="34.951,33.206"]
"AnthonyF333/PFLD_GhostOne" ["l"="34.949,33.178"]
"szad670401/HyperLandmark" ["l"="34.957,33.234"]
"Single430/FaceLandmark1000" ["l"="34.961,33.215"]
"JACKYLUO1991/106-landmarks-dataset" ["l"="34.976,33.227"]
"Hsintao/pfld-ncnn" ["l"="34.944,33.218"]
"ideask/A-Practical-Facial-Landmark-Detector" ["l"="34.941,33.193"]
"JDAI-CV/lapa-dataset" ["l"="33.974,33.119"]
"DefTruth/torchlm" ["l"="34.92,33.184"]
"Jiahao-UTS/SLPT-master" ["l"="34.915,33.148"]
"nothingelse92/AnchorFace" ["l"="34.909,33.171"]
"chengzhengxin/deep-sdm" ["l"="34.961,33.194"]
"kcmahip/opencv-eye-tracking" ["l"="34.568,33.161"]
"D-X-Y/MSPLD-2018" ["l"="34.705,33.355"]
"zhiqiangdon/CU-Net" ["l"="34.804,33.351"]
"tyshiwo/FHR_alignment" ["l"="34.75,33.327"]
"1adrianb/binary-human-pose-estimation" ["l"="36.295,35.2"]
"D-X-Y/GDAS" ["l"="28.475,34.382"]
"Revan-github/Fatigue-Driven-Detection-Based-on-CNN" ["l"="34.393,33.354"]
"toshi-k/kaggle-distracted-driver-detection" ["l"="34.402,33.294"]
"kc345ws/FatigueMonitoring" ["l"="34.417,33.308"]
"luisarojas/distracted-driver-detection" ["l"="34.413,33.346"]
"fomorians/distracted-drivers-keras" ["l"="32.594,34.728"]
"oswaldoludwig/Human-Action-Recognition-with-Keras" ["l"="32.574,34.765"]
"rikichou/distracted-driving-detection" ["l"="34.41,33.332"]
"ISS-Kerui/Bus-Driver-Behavior-Detection" ["l"="34.548,33.334"]
"dechunwang/SSH-pytorch" ["l"="34.899,33.374"]
"power0341/RSA_pycaffe" ["l"="34.999,33.411"]
"seathiefwang/RankPose" ["l"="34.806,33.201"]
"jianzhnie/pyramidbox_pytorch" ["l"="34.891,33.313"]
"clovaai/EXTD_Pytorch" ["l"="34.887,33.364"]
"Mjrovai/OpenCV-Object-Face-Tracking" ["l"="35.197,33.684"]
"kmhmubin/Face-Recognition-Attendance-System" ["l"="24.259,35.765"]
"makelove/OpenCV-Python-Tutorial" ["l"="30.183,36.753"]
"joeVenner/FaceRecognition-GUI-APP" ["l"="35.22,33.705"]
"arunponnusamy/object-detection-opencv" ["l"="35.289,33.612"]
"steponteam/FaceRecognization" ["l"="34.857,32.877"]
"ArcsoftEscErd/ArcfaceDemo_CSharp" ["l"="34.857,32.837"]
"catzhou2002/ArcFaceDemo" ["l"="34.841,32.853"]
"tensorboy/centerpose" ["l"="35.054,33.24"]
"jinfagang/CenterNet_Pro_Max" ["l"="34.804,35.455"]
"FateScript/CenterNet-better" ["l"="34.791,35.508"]
"HiBugs/CenterNet" ["l"="35.059,33.223"]
"xggIoU/centernet_tensorflow_wilderface_voc" ["l"="31.811,37.617"]
"nszjh/ssd_blazeface.pytorch" ["l"="34.969,33.101"]
"jialee93/Improved-Body-Parts" ["l"="36.123,35.048"]
"ilovepose/DarkPose" ["l"="36.041,35.059"]
"ilovepose/fast-human-pose-estimation.pytorch" ["l"="36.069,35.046"]
"HRNet/Higher-HRNet-Human-Pose-Estimation" ["l"="36.072,35.073"]
"Reginer/aosp-android-jar" ["l"="34.511,33.37"]
"aeab13/android-jar-with-hidden-api" ["l"="34.469,33.383"]
"yuxitong/AndroidLivePusher" ["l"="34.587,33.353"]
"yuxitong/AutoMarKingTensorFlowPython" ["l"="34.677,33.331"]
"tz28/Chinese-number-gestures-recognition" ["l"="36.06,34.558"]
"yuxitong/TimeView" ["l"="34.659,33.338"]
"wanliyang1990/wlmusic" ["l"="50.834,1.619"]
"opencv/opencv_zoo" ["l"="34.982,33.189"]
"ShiqiYu/libfacedetection.train" ["l"="34.99,33.265"]
"Kazuhito00/Skin-Clothes-Hair-Segmentation-using-SMP" ["l"="34.979,33.147"]
"SamYuen101234/Masked_Face_Recognition" ["l"="35.324,33.143"]
"sachith500/MaskedFaceRepresentation" ["l"="35.36,33.117"]
"fdbtrs/Self-restrained-Triplet-Loss" ["l"="35.367,33.129"]
"Ultraleow/Masked-Face-Recognition" ["l"="35.351,33.133"]
"levanquoc/masked-face-recognition" ["l"="35.343,33.107"]
"jerryuhoo/Masked-Face-Recognition" ["l"="35.341,33.122"]
"ryanlintott/SSVEP_keyboard" ["l"="35.82,34.593"]
"nwayt001/SSVEP_Speller" ["l"="35.799,34.588"]
"friendlyarm/sd-fuse_rk3399" ["l"="34.65,34.126"]
"sumantrajoshi/Face-recognition-using-deep-learning" ["l"="35.06,33.67"]
"nacos-group/grpc-java-registry-nacos" ["l"="8.639,17.326"]
"yulonghu/asf" ["l"="8.631,17.314"]
"yzhang559/vgg-face" ["l"="35.284,33.53"]
"broutonlab/face-id-with-medical-masks" ["l"="35.28,33.141"]
"balajisrinivas/Face-Mask-Detection" ["l"="35.21,33.053"]
"Karan-Malik/FaceMaskDetector" ["l"="35.198,33.072"]
"aieml/face-mask-detection-keras" ["l"="35.224,33.072"]
"adityap27/face-mask-detector" ["l"="35.193,33.039"]
"NVIDIA-AI-IOT/face-mask-detection" ["l"="29.977,38.039"]
"Ank-Cha/Social-Distancing-Analyser-COVID-19" ["l"="27.289,28.078"]
"fdbtrs/Masked-Face-Recognition-KD" ["l"="35.372,33.267"]
"fdbtrs/QuantFace" ["l"="35.335,33.262"]
"fdbtrs/mixfacenets" ["l"="35.321,33.26"]
"meilfang/LMFD-PAD" ["l"="35.324,33.275"]
"fdbtrs/SFace-Privacy-friendly-and-Accurate-Face-Recognition-using-Synthetic-Data" ["l"="35.296,33.261"]
"meilfang/SynthASpoof" ["l"="35.4,33.26"]
"NetoPedro/FocusFace" ["l"="35.415,33.259"]
"yobibyte/yobiface" ["l"="35.081,33.601"]
"luoyetx/JDA" ["l"="34.838,33.509"]
"precedenceguo/mx-rcnn" ["l"="32.994,35.797"]
"happynear/SpatialTransformerLayer" ["l"="34.511,33.63"]
"maxuehao/Smokeing-detection" ["l"="34.513,33.334"]
"tks0123456789/kaggle-Otto" ["l"="22.621,37.564"]
"nenadmarkus/pico" ["l"="34.853,33.503"]
"wincle/NPD" ["l"="34.85,33.52"]
"CitrusRokid/OpenNPD" ["l"="34.832,33.519"]
"luoyetx/face-alignment-at-3000fps" ["l"="34.841,33.491"]
"tntrung/impSDM" ["l"="34.817,33.516"]
"Luca96/android-face-landmarks" ["l"="34.592,33.431"]
"flyingzhao/FacialLandmarkAndroid" ["l"="34.627,33.421"]
"boyw165/my-dlib-experiment" ["l"="24.9,-30.744"]
"huangyangyu/SeqFace" ["l"="35.275,33.397"]
"zhongyy/Unequal-Training-for-Deep-Face-Recognition-with-Long-Tailed-Noisy-Data" ["l"="35.25,33.378"]
"yihuacheng/Full-face" ["l"="34.706,33.106"]
"ti-ginkgo/MPIIFaceGaze" ["l"="34.738,33.115"]
"soubhiksanyal/FLAME_PyTorch" ["l"="34.863,31.703"]
"YadiraF/DECA" ["l"="34.841,31.694"]
"dmonterom/face_recognition_TF2" ["l"="35.15,33.528"]
"4uiiurz1/keras-arcface" ["l"="35.166,33.506"]
"peteryuX/esrgan-tf2" ["l"="35.736,31.999"]
"ashishdubey10/Face-Recognition-Based-Attendance-System" ["l"="24.251,35.741"]
"ktjonsson/keras-ArcFace" ["l"="35.2,33.537"]
"EncodeTS/TensorFlow_Center_Loss" ["l"="35.304,33.564"]
"xiaochus/MobileNetV3" ["l"="34.764,35.124"]
"HandsomeHans/PCN-ncnn" ["l"="35.077,33.41"]
"Entropy-xcy/RankFace" ["l"="35.162,33.463"]
"fendouai/Awesome-TensorFlow-Chinese" ["l"="23.771,31.323"]
"fendouai/ChatGirl" ["l"="35.177,33.456"]
"fendouai/Awesome-Chatbot" ["l"="30.448,28.137"]
"TensorFlowNews/TensorFlow-Bitcoin-Robot" ["l"="35.106,33.394"]
"luyishisi/tensorflow" ["l"="23.741,31.406"]
"jingkuan/Age-Gender-Pred" ["l"="34.774,33.21"]
"oukohou/SSR_Net_Pytorch" ["l"="34.78,33.227"]
"dandynaufaldi/Agendernet" ["l"="34.751,33.261"]
"wayen820/gender_age_estimation_mxnet" ["l"="34.767,33.259"]
"deepinx/age-gender-estimation" ["l"="34.762,33.233"]
"Ontheway361/dul-pytorch" ["l"="35.28,33.318"]
"usnistgov/frvt" ["l"="35.123,33.394"]
"cavalleria/cavaface" ["l"="35.249,33.272"]
"ShawnXYang/Face-Robustness-Benchmark" ["l"="21.555,14.156"]
"ydwen/opensphere" ["l"="35.222,33.308"]
"microsoft/DigiFace1M" ["l"="35.311,33.242"]
"gist-ailab/teaching-where-to-look" ["l"="35.26,33.255"]
"anguyen8/deepface-emd" ["l"="35.153,33.19"]
"yingszuo/cnn_mci_ad_classification" ["l"="35.545,34.256"]
"zonetrooper32/AgeEstimateAdience" ["l"="34.778,33.333"]
"OValery16/gender-age-classification" ["l"="34.735,33.323"]
"wondonghyeon/face-classification" ["l"="34.693,33.265"]
"rileykwok/Face-Recognition-Model-with-Gender-Age-and-Emotions-Estimations" ["l"="34.701,33.286"]
"Bkmz21/CompactCNNCascade" ["l"="34.786,33.526"]
"layumi/2015_Face_Detection" ["l"="34.841,33.529"]
"MarekKowalski/FaceSwap" ["l"="34.791,31.472"]
"ishay2b/VanillaCNN" ["l"="34.812,33.443"]
"yinguobing/facial-landmark-detection-hrnet" ["l"="34.789,33.258"]
"junhwanjang/face_landmark_dnn" ["l"="34.77,33.275"]
"yinguobing/image_utility" ["l"="34.833,33.274"]
"LeeRel1991/faceAlignment_tensorflow" ["l"="34.806,33.371"]
"Russell91/ReInspect" ["l"="34.43,35.039"]
"diovisgood/agender" ["l"="35.072,33.326"]
"isseu/emotion-recognition-neural-networks" ["l"="-0.675,40.301"]
"abd-shoumik/Social-distance-detection" ["l"="27.321,28.077"]
"nicknochnack/RealTimeObjectDetection" ["l"="31.108,32.455"]
"foamliu/InsightFace-PyTorch" ["l"="35.309,33.39"]
"EB-Dodo/C-MS-Celeb" ["l"="35.28,33.429"]
"aovoc/nnieqat-pytorch" ["l"="30.825,35.75"]
"ChenYingpeng/caffe-yolov3" ["l"="34.612,35.141"]
"xxradon/PytorchToCaffe" ["l"="34.61,35.216"]
"arunponnusamy/cvlib" ["l"="35.23,33.572"]
"Luca96/dlib-minified-models" ["l"="35.287,33.591"]
"arunponnusamy/face-detection-comparison" ["l"="35.266,33.597"]
"bruceyang2012/Face-identification-with-cnn-triplet-loss" ["l"="34.849,33.635"]
"bruceyang2012/Face-Alignment-with-simple-cnn" ["l"="34.846,33.651"]
"yeephycho/widerface-to-tfrecord" ["l"="34.888,33.567"]
"Seymour-Lee/face-detection-ssd-mobilenet" ["l"="34.864,33.646"]
"friedhelm739/MTCNN-tensorflow" ["l"="35.208,33.578"]
"SelinaFelton/LightFaceNet" ["l"="35.039,33.513"]
"qdraw/tensorflow-face-object-detector-tutorial" ["l"="34.917,33.558"]
"rishikksh20/Liveness-Detection" ["l"="35.305,33.193"]
"SthPhoenix/InsightFace-REST" ["l"="35.117,33.276"]
"linghu8812/tensorrt_inference" ["l"="34.654,35.556"]
"littletomatodonkey/insight-face-paddle" ["l"="35.097,33.193"]
"tuna-date/Face-Recognition-with-InsightFace" ["l"="35.109,33.203"]
"RangeKing/PaddleOCR-Quicker" ["l"="-25.813,-14.861"]
"chentyjpm/InsightFaceRecognition_Demo_AndroidNCNN" ["l"="34.908,33.279"]
"shubham0204/FaceRecognition_With_FaceNet_Android" ["l"="34.864,33.366"]
"huohuotm/Facial-Landmark" ["l"="34.73,33.259"]
"lyakaap/image-feature-learning-pytorch" ["l"="35.309,33.47"]
"Abhishek-Arora/Image-Classification-Using-SVM" ["l"="35.316,34.024"]
"efidalgo/AutoBlur-CNN-Features" ["l"="35.347,34.02"]
"TobiasRoeddiger/GazePointHeatMap" ["l"="34.503,33.101"]
"takyamamoto/Fixation-Densitymap" ["l"="34.519,33.11"]
"lslcode/SSD_for_Tensorflow" ["l"="34.719,33.768"]
"Windaway/DSOD-Tensorflow" ["l"="34.697,33.792"]
"iArunava/YOLOv3-Object-Detection-with-OpenCV" ["l"="35.365,33.659"]
"Surya-Murali/Real-Time-Object-Detection-With-OpenCV" ["l"="35.337,33.646"]
"lbeaucourt/Object-detection" ["l"="35.419,33.69"]
"jan-skarupa/facerig" ["l"="34.6,33.413"]
"HTTdesu/SimpleFacerig" ["l"="34.608,33.4"]
"z376368673/FaceSignIn" ["l"="34.865,33.145"]
"ssarfraz/FINCH-Clustering" ["l"="35.332,33.366"]
"zhunzhong07/ECN" ["l"="33.029,36.85"]
"sjtuzq/person_search_gcn" ["l"="33.145,36.819"]
"Hzzone/AgeFlow" ["l"="34.476,33.259"]
"aramis-lab/AD-ML" ["l"="35.51,34.364"]
"aramis-lab/clinicadl" ["l"="35.527,34.388"]
"aramis-lab/clinica" ["l"="35.509,34.387"]
"jrieke/cnn-interpretability" ["l"="35.557,34.361"]
"nipreps/dmriprep" ["l"="28.458,36.848"]
"BIDS-Apps/freesurfer" ["l"="35.494,34.407"]
"alibaba/MNNKit" ["l"="35.022,33.348"]
"MirrorYuChen/mnn_example" ["l"="35,33.309"]
"alibaba/MNN" ["l"="34.206,35.543"]
"Tencent/TNN" ["l"="34.265,35.587"]
"chehongshu/ncnnforandroid_objectiondetection_Mobilenetssd" ["l"="36.022,34.638"]
"dangbo/ncnn-mobile" ["l"="34.948,33.398"]
"Jack-CV/PCN-FaceDetection" ["l"="35.014,33.443"]
"weank1984/face-recognition" ["l"="34.682,33.402"]
"kevinlu1211/FacialClusteringPipeline" ["l"="35.337,33.389"]
"xvshu/face_login" ["l"="35.165,33.6"]
"zzZZ-ssq/vue-old-circle-clock" ["l"="34.631,33.338"]
"FacePlusPlus/java-sdk" ["l"="34.923,32.944"]
"FacePlusPlus/MegviiFacepp-iOS-SDK" ["l"="34.904,32.953"]
"KaihuaTang/ResNet50-Pytorch-Face-Recognition" ["l"="35.28,33.477"]
"ArcsoftEscErd/IdCardVeriDemo_Android" ["l"="34.866,33.074"]
"shuguoli68/FaceDemo" ["l"="35.535,33.344"]
"shuguoli68/LiSeetaFace2" ["l"="35.51,33.345"]
"kangdp/EcoBoxView-master-sample" ["l"="34.565,33.347"]
"liuky74/SDC-NNIE-tutorial" ["l"="34.725,33.48"]
"liqi-c/tengine-nnie" ["l"="34.751,33.443"]
"Wulingtian/yolov5_onnx2caffe" ["l"="30.871,35.837"]
"pengzishang/EasyStepIndicator" ["l"="35.414,33.195"]
"z8g/common" ["l"="35.419,33.177"]
"tony709394/postchildren-web" ["l"="35.489,33.153"]
"yanxlg/react-components" ["l"="35.523,33.143"]
"yanxlg/eboard" ["l"="35.514,33.125"]
"shellteo/s-json" ["l"="-26.11,18.115"]
"lightbatis/lightbatis" ["l"="35.392,33.197"]
"tony709394/postchildren-desktop" ["l"="35.531,33.107"]
"MCG-NJU/SADRNet" ["l"="34.895,31.671"]
"elliottzheng/face-detection" ["l"="34.862,33.131"]
"PinataFarms/DAD-3DHeads" ["l"="34.917,31.718"]
"TimoBolkart/BFM_to_FLAME" ["l"="34.855,31.693"]
"andresprados/SPIGA" ["l"="34.893,33.127"]
"Zielon/MICA" ["l"="34.898,31.707"]
"openhisilicon/HIVIEW" ["l"="34.767,33.602"]
"openhisilicon/PRODUCT" ["l"="34.751,33.637"]
"openhisilicon/AF-algorithm" ["l"="34.741,33.624"]
"openhisilicon/SDK" ["l"="34.738,33.635"]
"openhisilicon/TOOLS" ["l"="34.75,33.621"]
"openhisilicon/qt-hi3519v101" ["l"="34.754,33.626"]
"yeung908/lvjh_ipcamera_hisi3518" ["l"="34.725,33.618"]
"zucker-chen/libs" ["l"="34.733,33.61"]
"tevcam2020/yolov5-nnie" ["l"="34.722,33.647"]
"lam2003/hisi_monitor" ["l"="34.722,33.633"]
"gozfree/aquila" ["l"="-31.738,41.44"]
"ireader/media-server" ["l"="-26.564,12.013"]
"PyImageSearch/imutils" ["l"="34.982,33.636"]
"guanfuchen/facedet" ["l"="34.808,33.719"]
"lxg2015/faceboxes" ["l"="34.829,33.694"]
"XiaXuehai/faceboxes" ["l"="34.88,33.616"]
"Entropy-xcy/Toxic_v1" ["l"="35.188,33.478"]
"yinguobing/face-mesh-generator" ["l"="34.723,33.23"]
"yinguobing/facial-landmark-dataset" ["l"="34.743,33.22"]
"andreasveit/triplet-network-pytorch" ["l"="24.054,35.471"]
"CaptainEven/FaceRecognition" ["l"="35.272,33.503"]
"thnkim/OpenFacePytorch" ["l"="35.303,33.498"]
"tamerthamoqa/facenet-pytorch-vggface2" ["l"="35.325,33.532"]
"tamerthamoqa/facenet-pytorch-glint360k" ["l"="35.308,33.522"]
"BeiXi1949/Face-Recognition_FaceNet_PyTorch" ["l"="35.353,33.524"]
"menpo/lsfm" ["l"="34.734,31.636"]
"MichaelMure/3DMM" ["l"="34.718,31.6"]
"anhttran/3dmm_cnn" ["l"="34.714,31.617"]
"KeeganRen/FaceReconstruction" ["l"="34.706,31.589"]
"hanson-young/ncnnpy" ["l"="35.153,33.342"]
"wangweiwei/vue-resize-observer" ["l"="35.561,33.129"]
"lijian096870/LJKeyBroadEventManager" ["l"="35.581,33.12"]
"wangweiwei/video-metadata-thumbnails" ["l"="35.545,33.135"]
"Syencil/tensorRT" ["l"="34.661,35.574"]
"dlunion/OpenPose" ["l"="34.519,33.661"]
"lincolnhard/openpose-darknet" ["l"="34.529,33.678"]
"lewes6369/TensorRT-Yolov3" ["l"="29.923,38.2"]
"BUG1989/caffe-int8-convert-tools" ["l"="27.615,35.405"]
"Information-Fusion-Lab-Umass/alzheimers-cnn-study" ["l"="35.576,34.353"]
"LcenArthas/CCF-BDCI2019-Multi-person-Face-Recognition-Competition-Baseline" ["l"="35.357,33.305"]
"themostnewone/2019ccf" ["l"="35.412,33.297"]
"starhiking/HeatmapInHeatmap" ["l"="34.909,33.118"]
"MingzhenShao/HeadPose" ["l"="34.836,33.184"]
"zchrissirhcz/awesome-ncnn" ["l"="31.63,36.297"]
"nihui/ncnn-assets" ["l"="31.62,36.338"]
"ayufan-rock64/linux-build" ["l"="34.718,34.112"]
"pine64dev/PINE64-Installer" ["l"="34.706,34.163"]
"ayufan-rock64/linux-mainline-kernel" ["l"="34.734,34.091"]
"Leapo/Rock64-R64.GPIO" ["l"="34.757,34.118"]
"tuxd3v/ats" ["l"="34.753,34.139"]
"mrfixit2001/debian_builds" ["l"="34.729,34.139"]
"ayufan-rock64/linux-u-boot" ["l"="34.741,34.1"]
"mrfixit2001/debian_desktop" ["l"="34.693,34.143"]
"mrfixit2001/recalbox_rock64" ["l"="34.714,34.135"]
"ayufan-rock64/linux-package" ["l"="34.701,34.127"]
"carlosedp/kubernetes-arm" ["l"="34.741,34.168"]
"m01/rock64-arch-linux-build" ["l"="34.739,34.127"]
"luigivieira/Facial-Landmarks-Annotation-Tool" ["l"="34.709,33.468"]
"Mukosame/Face-Annotation-Tool" ["l"="34.659,33.496"]
"jiankangdeng/MenpoBenchmark" ["l"="34.63,33.501"]
"kairess/mask-detection" ["l"="35.154,33.033"]
"JadHADDAD92/covid-mask-detector" ["l"="35.165,33.011"]
"cleardusk/MeGlass" ["l"="35.094,33.414"]
"cleardusk/EmotionChallenge" ["l"="35.224,33.498"]
"in66-dev/In-Prestissimo" ["l"="34.899,33.534"]
"Maratyszcza/NNPACK" ["l"="27.681,35.385"]
"google/gemmlowp" ["l"="27.663,35.41"]
"mtmd/Mobile_ConvNet" ["l"="34.824,33.627"]
"jiaxiang-wu/quantized-cnn" ["l"="30.633,35.605"]
"csarron/emdl" ["l"="-7.836,47.15"]
"deepinsight/mxnet-SSH" ["l"="35.05,33.52"]
"erickingxu/MetalImage" ["l"="-49.579,3.94"]
"KimDaeWook/GPUImage-Instagram" ["l"="-49.367,4.097"]
"trigeorgis/mdm" ["l"="34.782,33.474"]
"junyanz/FaceDemo" ["l"="34.673,31.559"]
"jian667/face-dataset" ["l"="35.099,33.171"]
"pterhoer/MAAD-Face" ["l"="35.066,33.183"]
"jiankangdeng/handbook" ["l"="35.114,33.109"]
"jing-interactive/DancingGaga" ["l"="34.503,33.69"]
"vcolamatteo/face-authentication" ["l"="35.232,33.157"]
"siriusdemon/pytorch-DEX" ["l"="34.745,33.243"]
"uricamic/flandmark" ["l"="34.757,33.537"]
"wg-perception/PartsBasedDetector" ["l"="34.689,33.621"]
"ivclab/agegenderLMTCNN" ["l"="34.655,33.063"]
"zhanglaplace/mtcnn" ["l"="34.845,33.453"]
"flycat0101/imistyrain-MobileFaceNet" ["l"="34.992,33.403"]
"zuoqing1988/ZQlib" ["l"="34.916,33.305"]
"zuoqing1988/ZQ_VirtualAD" ["l"="34.897,33.275"]
"zuoqing1988/ZQlibCuda" ["l"="34.892,33.266"]
"zuoqing1988/ZQ_SmokeSimulation" ["l"="34.885,33.275"]
"leokwu/livenessnet" ["l"="35.327,33.191"]
"tpys/face-everthing" ["l"="35.07,33.479"]
"SoftwareGift/Face-Anti-spoofing-for-RGB" ["l"="35.242,33.218"]
"takiyu/hyperface" ["l"="34.718,33.533"]
"shashanktyagi/HyperFace-TensorFlow-implementation" ["l"="34.67,33.561"]
"sourabhvora/HyperFace-with-SqueezeNet" ["l"="34.656,33.555"]
"xipeng13/recurrent-face-alignment" ["l"="34.714,33.515"]
"Media-Smart/SKU110K-DenseDet" ["l"="35.04,33.074"]
"yash42828/YOLO-object-detection-with-OpenCV" ["l"="35.337,33.629"]
"SimonCherryGZ/ARCamera" ["l"="50.59,1.757"]
"ongakuer/CameraFilter" ["l"="50.814,1.708"]
"DingProg/Makeup" ["l"="50.765,1.589"]
"KAlO2/PerfectShow" ["l"="33.676,33.081"]
"hardik-trivedi/FaceFilter" ["l"="34.573,33.453"]
"gaetanozappi/Android-face-filters" ["l"="34.571,33.438"]
"gsrathoreniks/FaceFilter" ["l"="34.552,33.451"]
"cangwang/MagicCamera3" ["l"="50.657,1.47"]
"ochornenko/Camera2GLPreview" ["l"="-12.769,26.483"]
"tensor-yu/cascaded_mobilenet-v2" ["l"="34.963,33.404"]
"haofanwang/mxnet-Head-Pose" ["l"="34.833,33.044"]
"Cjiangbpcs/gazenet_mxJiang" ["l"="34.826,33.02"]
"Chenyang-ZHU/YOLOv3-Based-Face-Detection-Tracking" ["l"="34.731,33.508"]
"xhuvom/darknetFaceID" ["l"="34.687,33.587"]
"AzureWoods/faceRecognition-yolo-facenet" ["l"="34.745,33.516"]
"imistyrain/yolo-face" ["l"="34.721,33.395"]
"fyr91/face_detection" ["l"="34.694,33.525"]
"zlmo/Face-Detection" ["l"="34.746,33.497"]
"SpikeKing/keras-yolo3-detection" ["l"="34.488,35.229"]
"datitran/object_detector_app" ["l"="34.245,35.128"]
"gustavz/realtime_object_detection" ["l"="35.458,33.713"]
"bendidi/Tracking-with-darkflow" ["l"="32.391,36.085"]
"myfavouritekk/vdetlib" ["l"="32.582,36.024"]
"tomrunia/TF_FeatureExtraction" ["l"="35.371,34.04"]
"flyingzhao/tfTCDCN" ["l"="34.769,33.518"]
"grantgasser/Alzheimers-Prediction" ["l"="35.573,34.337"]
"deepak525/Dementia-Classification-Compare-Classifiers" ["l"="35.521,34.353"]
"dannyblueliu/YOLO-Face-detection" ["l"="34.672,33.361"]
"glefundes/mobile-face-gaze" ["l"="34.656,33.09"]
"farmingyard/caffe-mobilenet" ["l"="34.597,35.077"]
"BUG1989/ncnn-benchmark" ["l"="34.9,33.555"]
"alexattia/ExtendedTinyFaces" ["l"="34.881,33.536"]
"chinakook/hr101_mxnet" ["l"="34.881,33.554"]
"fyr91/face_recognition" ["l"="34.66,33.537"]
"sylvchev/dataset-ssvep-exoskeleton" ["l"="35.725,34.564"]
"bknyaz/beauty_vision" ["l"="35.113,33.305"]
"KaleidoZhouYN/Sphereface-Ms-celeb-1M" ["l"="35.198,33.486"]
"Media-Smart/vedatad" ["l"="35.052,33.084"]
"moliusimon/csdm" ["l"="34.758,33.49"]
"pppoe/WhatsThis-iOS" ["l"="34.762,33.662"]
"estebanuri/facemaskdetector" ["l"="34.83,33.394"]
"atharvakale31/Real-Time_Face_Recognition_Android" ["l"="34.813,33.384"]
"Malikanhar/Android-Face-Recognition" ["l"="34.817,33.398"]
"sbdcv/sbd_mask" ["l"="35.103,33.293"]
"ycdhqzhiai/Gaze-PFLD" ["l"="34.738,33.081"]
"njvisionpower/mxnet-mtcnn-cpp" ["l"="35.293,33.409"]
"markson14/Face-Recognition-Cpp" ["l"="35.356,33.412"]
"juan-csv/face_recognition_occlusion" ["l"="35.337,33.088"]
"JavisPeng/FaceRecognitionWithMask" ["l"="35.364,33.07"]
"susithrj/MaskNet-Occlusion-Invariant-Face-Recognition-System" ["l"="35.349,33.065"]
"OhmGeek/FacialLivenessTests" ["l"="35.324,33.172"]
"vudung45/HLS-GoogleDrive" ["l"="35.258,33.843"]
"vudung45/FaceRTC" ["l"="35.228,33.812"]
"vudung45/MovieSites-MediaExtractor" ["l"="35.275,33.86"]
"husaynhakeem/android-face-detector" ["l"="51.096,-4.974"]
"RedApparat/FaceDetector" ["l"="48.065,-2.853"]
"yaylas/AndroidFaceRecognizer" ["l"="34.702,33.403"]
"cholihao/Retinaface-caffe" ["l"="35.016,33.322"]
"FireflyTeam/build" ["l"="34.615,34.018"]
"FireflyTeam/u-boot" ["l"="34.606,34.027"]
"vudung45/FaceRec" ["l"="35.189,33.771"]
"number9473/nn-algorithm" ["l"="35.055,33.446"]
"irhammuch/android-face-recognition" ["l"="34.757,33.378"]
"cating341/RGB-D-Face-Recognition" ["l"="35.19,33.874"]
"VictorLin000/YOLOv3_mask_detect" ["l"="35.218,33.001"]
"troyseed/toybrick_ssd_multithread" ["l"="34.786,33.774"]
"mrwangwg123/my-rknn-yolov5" ["l"="34.793,33.787"]
"radxa/u-boot" ["l"="34.583,34.081"]
"radxa/rockchip-bsp" ["l"="34.567,34.07"]
"codeniko/shape_predictor_81_face_landmarks" ["l"="34.994,33.285"]
"codeniko/eos" ["l"="34.979,33.244"]
"nxsEdson/CVD-Physiological-Measurement" ["l"="29.431,37.308"]
"JACKYLUO1991/Face-skin-hair-segmentaiton-and-skin-color-evaluation" ["l"="33.89,33.124"]
"mndar/facenet_classifier" ["l"="34.885,33.68"]
"ElegantGod/mxnet-SSHA" ["l"="34.923,33.535"]
"habrman/keras-dcgan" ["l"="35.145,33.735"]
"zhreshold/mxnet-ssd" ["l"="33.012,35.78"]
"tfwu/FaceDetection-ConvNet-3D" ["l"="34.907,33.604"]
"zhreshold/mxnet-yolo" ["l"="33.018,35.798"]
"pinguo-luhaofang/tripletloss" ["l"="34.957,33.699"]
"Hawaii0821/FaceAttr-Analysis" ["l"="34.54,33.315"]
"ouyanghuiyu/darknet_face_with_landmark" ["l"="35.024,33.013"]
"ghnor/SeetaFace-AS" ["l"="34.723,33.705"]
"iarray/Seetaface-SO" ["l"="34.706,33.722"]
"pshashk/seesaw-facenet" ["l"="35.268,33.409"]
"cvtower/SeesawNet_pytorch" ["l"="35.258,33.4"]
"Paralysis/ringloss" ["l"="35.329,33.478"]
"OAID/MXNet-HRT" ["l"="34.904,33.703"]
"lsy17096535/ncnn-vs2013" ["l"="34.909,33.522"]
"sciencefans/CaffeMex_v2" ["l"="35.146,33.517"]
"sciencefans/Quality-Aware-Network" ["l"="35.167,33.525"]
"BradyFU/DVG" ["l"="35.361,33.329"]
"Skyendless/FaceRecognition" ["l"="35.396,33.536"]
"pro-cloud/pro-cloud" ["l"="35.61,33.108"]
"BeaHugs/RxImagePicker" ["l"="-26.263,18.043"]
"ArcsoftEscErd/ArcSoftIDCardFace_CSharp" ["l"="34.854,32.815"]
"kensun0/Joint_Cascade_Face_Detection_And_Alignment" ["l"="34.824,33.542"]
"princetonvisualai/DomainBiasMitigation" ["l"="34.971,33.165"]
"myml666/Seetaface2" ["l"="35.45,33.346"]
"PerfXLab/embedded_ai" ["l"="-7.79,47.138"]
"BradyFU/DVG-Face" ["l"="35.399,33.327"]
"shamangary/Keras-MNIST-center-loss-with-visualization" ["l"="35.355,33.583"]
"zoli333/Center-Loss" ["l"="35.333,33.577"]
"grigorisg9gr/polynomial_nets" ["l"="35.349,33.236"]
"allanzelener/YAD2K" ["l"="34.339,35.152"]
"log0/neural-style-painting" ["l"="33.427,32.252"]
"fchollet/deep-learning-models" ["l"="34.197,35.172"]
"YisenWang/Iterative_learning" ["l"="35.26,33.536"]
"stdcoutzyx/FaceRetrieval" ["l"="34.933,33.602"]
"zmurez/MediaPipePyTorch" ["l"="34.952,33.064"]
"CrazySummerday/SSR-Net" ["l"="34.753,33.203"]
"playerkk/face-py-faster-rcnn" ["l"="34.955,33.493"]
"kensun0/Face-Detecion-with-the-Faster-R-CNN-R-FCN" ["l"="34.931,33.574"]
"xiaolonw/adversarial-frcnn" ["l"="34.542,35.121"]
"zimenglan-sysu-512/Focal-Loss" ["l"="34.599,35.043"]
"gsrathoreniks/ShadowLibrary-Android" ["l"="34.52,33.452"]
"gsrathoreniks/ktor-sample" ["l"="34.523,33.462"]
"ArcJonSnow/Demo_for_Windows" ["l"="34.862,32.925"]
"linuxerwang/rkflashkit" ["l"="34.591,34.14"]
"Galland/rkflashtool_rk3066" ["l"="34.565,34.152"]
"linux-rockchip/rkflashtool" ["l"="34.578,34.17"]
"Podidiving/lgsc-for-fas-pytorch" ["l"="35.177,33.138"]
"gunapandianraj/iOS11-VisionFrameWork" ["l"="34.509,33.516"]
"mnakanishi/TRCA-SSVEP" ["l"="35.74,34.584"]
"okbalefthanded/bci_toolbox" ["l"="35.721,34.589"]
"mnakanishi/12JFPM_SSVEP" ["l"="35.743,34.602"]
"bobvo23/flicker_stimulator" ["l"="35.774,34.583"]
"aaravindravi/Brain-computer-interfaces" ["l"="35.725,34.606"]
"cayden/facesample" ["l"="34.755,33.363"]
"tzolov/mtcnn-java" ["l"="34.794,33.383"]
"GthanosAI/android_mtcnn_insightface_face_recognize" ["l"="34.793,33.365"]
"yjh0410/FreeYOLO" ["l"="34.418,33.974"]
"yjh0410/YOLOF-Lite" ["l"="34.402,33.988"]
"yjh0410/PyTorch_YOLOF" ["l"="34.444,33.973"]
"mahdiabavisani/Deep-multimodal-subspace-clustering-networks" ["l"="24.688,32.818"]
"panji1990/Deep-subspace-clustering-networks" ["l"="24.734,32.8"]
"shahsohil/DCC" ["l"="24.766,32.791"]
"juan-csv/Face_info" ["l"="35.34,33.328"]
"sajjjadayobi/FaceLib" ["l"="25.642,14.038"]
"mks0601/A-Convolutional-Neural-Network-Cascade-for-Face-Detection" ["l"="34.826,33.558"]
"aosokin/cnn_head_detection" ["l"="33.963,34.098"]
"anson0910/CNN_face_detection_models" ["l"="34.837,33.547"]
"dongjiu522/nnie-yolov3" ["l"="34.681,33.493"]
"handongfeng/MNIST-center-loss" ["l"="35.395,33.597"]
"imistyrain/facemask" ["l"="34.679,33.388"]
"khaledrefai/Face-Recognition-Model-with-Gender-Age-and-Emotions-Estimations" ["l"="34.671,33.268"]
"hzy3774/SeetaFace2Android" ["l"="35.404,33.352"]
"KleinYuan/Caffe2-iOS" ["l"="-48.604,5.467"]
"camel007/Caffe-ShuffleNet" ["l"="34.598,35.055"]
"ChWick/warp-ctc" ["l"="34.575,33.681"]
"tiqq111/mediapipe_pytorch" ["l"="34.951,33.029"]
"quanhua92/darknet" ["l"="34.658,33.622"]
"dannyblueliu/YOLO-version-2-Face-detection" ["l"="34.644,33.633"]
"tiandunx/SV-X-Softmax" ["l"="35.224,33.38"]
"HuangYG123/DDL" ["l"="35.236,33.373"]
"tiandunx/loss_function_search" ["l"="35.236,33.384"]
"lqs19881030/faceboxes" ["l"="34.887,33.468"]
"deepinsight/insightocr" ["l"="34.837,33.608"]
"KaleidoZhouYN/Loss-Functions" ["l"="35.165,33.48"]
"hujun100/tensorflow-sphereface" ["l"="35.244,33.523"]
"inlmouse/MS-Celeb-1M_WashList" ["l"="35.07,33.494"]
"PatienceKai/VGG_Face_Caffe_Model" ["l"="34.976,33.602"]
"hizhangp/triplet" ["l"="33.736,34.159"]
"natanielruiz/android-yolo" ["l"="48.464,-4.764"]
"szaza/android-yolo-v2" ["l"="48.428,-4.776"]
"pupil-labs/pupil-detectors" ["l"="34.489,33.157"]
"RishalAggarwal/3D-Convnet-for-Alzheimer-s-Detection" ["l"="35.553,34.319"]
"cleardusk/ImageToAscii" ["l"="35.26,33.516"]
"cleardusk/UCAS" ["l"="35.273,33.52"]
"jwyang/face-alignment-cpp" ["l"="34.777,33.54"]
"SyGoing/LFFD-OpenVINO" ["l"="35.067,33.209"]
"cypatrickwee/3D-Face-Recognition" ["l"="35.233,33.935"]
"gouthamvgk/facemesh_coreml_tf" ["l"="34.941,33.102"]
"cedriclmenard/irislandmarks.pytorch" ["l"="34.935,33.118"]
"princetonvisualai/gan-debiasing" ["l"="35.072,33.134"]
"szad670401/tvm_mobilefacenet" ["l"="35.404,33.417"]
"jdeng/gomxnet" ["l"="34.731,33.671"]
"SSL92/hyperIQA" ["l"="35.245,32.302"]
"zwx8981/DBCNN-PyTorch" ["l"="35.244,32.322"]
"OAID/mtcnn" ["l"="34.866,33.572"]
"zhly0/facenet-face-cluster-chinese-whispers-" ["l"="35.19,33.551"]
"arunponnusamy/gender-classification" ["l"="35.257,33.474"]
"fdbtrs/PocketNet" ["l"="35.361,33.252"]
"DCGM/ffhq-features-dataset" ["l"="34.491,33.222"]
"shuangjiexu/Spatial-Temporal-Pooling-Networks-ReID" ["l"="33.089,36.746"]
"dapengchen123/video_reid" ["l"="33.105,36.762"]
"gc535/LivenessDectectionForFaceSpoofingAttack" ["l"="35.214,33.143"]
"serengil/exchanging-encrypted-mails" ["l"="35.014,33.654"]
"BobLiu20/FacialLandmark_Caffe" ["l"="34.733,33.49"]
"olddocks/caffe-facialkp" ["l"="34.683,33.508"]
"cunjian/face_alignment" ["l"="34.745,33.478"]
"qiexing/caffe-regression" ["l"="34.627,33.534"]
"linux-rockchip/u-boot-rockchip" ["l"="34.682,34.112"]
"DreamtaleCore/PnP-GA" ["l"="34.679,33.072"]
"hbristow/cvmatio" ["l"="34.656,33.66"]
"tuomastik/video_face_detection" ["l"="35.344,33.271"]
"Tshzzz/pytorch_yolov2" ["l"="34.524,33.93"]
"YunYang1994/SphereFace" ["l"="35.273,33.554"]
"z8g/blog" ["l"="35.451,33.156"]
"maharshi95/HyperFace" ["l"="34.642,33.574"]
"Adityav2410/RealTimeHyperface" ["l"="34.627,33.574"]
"ivclab/Online-Face-Recognition-and-Authentication" ["l"="34.622,33.031"]
"ivclab/NeuralMerger" ["l"="34.635,33.024"]
"ivclab/Merging-MobileNets-for-Multitask" ["l"="34.643,33.028"]
"ivclab/PAE" ["l"="34.636,33.038"]
"ivclab/Sound20" ["l"="34.634,33.031"]
"ivclab/DeepPhotoCritic-ICCV17" ["l"="34.647,33.036"]
"ivclab/BigGAN-Generator-Pretrained-Pytorch" ["l"="34.62,33.015"]
"ivclab/caffe-cvprw15" ["l"="34.63,33.017"]
"androidroadies/FaceSwap" ["l"="34.578,33.47"]
"alex011235/FaceSwap-Android" ["l"="34.555,33.471"]
"daikankan/mtcnn" ["l"="34.927,33.431"]
"KaleidoZhouYN/More-Details-On-FaceRecognition-1" ["l"="35.072,33.515"]
"MouxiaoHuang/DUL" ["l"="35.332,33.308"]
"Ontheway361/pfe-pytorch" ["l"="35.323,33.316"]
"LouieYang/AgeAndGenderEstimation" ["l"="34.643,33.325"]
"clavichord93/diagonalwise-refactorization-caffe" ["l"="35.188,33.412"]
"usc-sail/mica-race-from-face" ["l"="34.662,33.251"]
"jashubbard/edfR" ["l"="34.535,33.074"]
"zuoqing1988/train-GenderAge" ["l"="35.038,33.446"]
"titoghose/PyTrack" ["l"="34.523,33.09"]
"ecekt/eyegaze" ["l"="34.54,33.094"]
"pupil-labs/pupil-community" ["l"="34.569,33.14"]
"pp21/Guided-Scale-Texture-for-Face-Presentation-Attack-Detection" ["l"="35.236,33.131"]
"XgTu/GFA-CNN" ["l"="34.693,31.727"]
"Luca96/dlib-for-android" ["l"="34.54,33.432"]
"D-X-Y/Dual-Network-WSOD" ["l"="34.652,33.353"]
"D-X-Y/awesome-AutoML" ["l"="34.677,33.347"]
"JeeveshN/Facial-Recognition-Tool" ["l"="35.095,33.822"]
"jimeffry/face-anti-spoofing" ["l"="35.25,33.176"]
"joelrfcosta/FaceRecognition" ["l"="34.549,33.536"]
"kangdp/TptDialSample" ["l"="34.531,33.36"]
"OpenXAIProject/Automatic-Stock-Trading" ["l"="35.596,34.525"]
"OpenXAIProject/Financial-Expert-Korean-Quot" ["l"="35.61,34.516"]
"OpenXAIProject/Real-time-Financial-Data" ["l"="35.608,34.523"]
"OpenXAIProject/Network-Structure-Dropout" ["l"="35.616,34.523"]
"OpenXAIProject/Mixed-Effect-Composite-RNN-Gaussian-Process" ["l"="35.598,34.505"]
"OpenXAIProject/One-Shot-Learning" ["l"="35.604,34.535"]
"OpenXAIProject/TimeNet" ["l"="35.612,34.53"]
"OpenXAIProject/OneShot-Learning-Selective-Ensemble" ["l"="35.589,34.546"]
"OpenXAIProject/UncertintyAttention_DropMax" ["l"="35.63,34.521"]
"OpenXAIProject/Annual-Report-Extraction" ["l"="35.573,34.536"]
"OpenXAIProject/Deep-Generative-Model" ["l"="35.614,34.538"]
"OpenXAIProject/Joint-AFA-Classification" ["l"="35.594,34.516"]
"OpenXAIProject/Causality-between-elements-based-on-time-series-data" ["l"="35.624,34.54"]
"OpenXAIProject/Preprocessed_ABIDE_Dataset" ["l"="35.625,34.53"]
"OpenXAIProject/Automatic-Stock-Report" ["l"="35.65,34.523"]
"OpenXAIProject/Preprocessed_IXI_Dataset" ["l"="35.642,34.534"]
"rockchip-linux/build" ["l"="34.639,34.108"]
"hhxdestiny/yolov5_for_rknn" ["l"="34.782,33.762"]
"carlosedp/prometheus-operator-ARM" ["l"="34.747,34.194"]
"eyetrackingDB/GazeTrackingOfflineProcessing" ["l"="34.572,33.212"]
"azmathmoosa/azFace" ["l"="34.634,33.363"]
"ivclab/Day_Night_dataset_list" ["l"="34.644,33.015"]
"ivclab/ConditionalGLO" ["l"="34.656,33.033"]
"D-X-Y/HCMF" ["l"="34.624,33.348"]
"MUZLATAN/MPP_ENCODE" ["l"="34.739,33.888"]
"dl-maxwang/blazeface-tensorflow" ["l"="34.983,33.05"]
"javier2491/CVPRw2018" ["l"="35.213,33.116"]
"tevcam2020/arcface-nnie" ["l"="34.703,33.665"]
"Seymour-Lee/leetcode-solutions" ["l"="34.86,33.67"]
"longchr123/deep-learning-ocean" ["l"="34.767,33.771"]
}