digraph G {
"google/gin-config" -> "google/flax"
"google/gin-config" -> "deepmind/rlax"
"google/gin-config" -> "IDSIA/sacred" ["e"=1]
"google/gin-config" -> "facebookresearch/hydra" ["e"=1]
"google/gin-config" -> "deepmind/optax"
"google/gin-config" -> "arogozhnikov/einops" ["e"=1]
"google/gin-config" -> "facebookresearch/higher" ["e"=1]
"google/gin-config" -> "facebookincubator/submitit" ["e"=1]
"google/gin-config" -> "deepmind/dm-haiku"
"google/gin-config" -> "google/compare_gan" ["e"=1]
"google/gin-config" -> "tensorflow/agents" ["e"=1]
"google/gin-config" -> "google/trax" ["e"=1]
"google/gin-config" -> "astooke/rlpyt" ["e"=1]
"google/gin-config" -> "deepmind/chex"
"google/gin-config" -> "google/objax"
"google/tensorstore" -> "facebookincubator/AITemplate" ["e"=1]
"google/tensorstore" -> "pytorch/torchdynamo" ["e"=1]
"google/tensorstore" -> "openxla/xla" ["e"=1]
"google/tensorstore" -> "ELS-RD/kernl" ["e"=1]
"google/tensorstore" -> "zarr-developers/zarr-python" ["e"=1]
"google/tensorstore" -> "deepmind/dm-haiku"
"google/tensorstore" -> "facebookresearch/fairscale" ["e"=1]
"google/tensorstore" -> "google/neuroglancer" ["e"=1]
"google/tensorstore" -> "google/flax"
"google/tensorstore" -> "google/jaxopt"
"google/tensorstore" -> "pytorch/tensorpipe" ["e"=1]
"google/tensorstore" -> "google/CommonLoopUtils"
"google/tensorstore" -> "saalfeldlab/n5" ["e"=1]
"google/tensorstore" -> "facebookresearch/torcharrow"
"google/tensorstore" -> "deepmind/optax"
"jg-you/noisy-networks-measurements" -> "gstonge/SamplableSet"
"johnhw/pfilter" -> "nchopin/particles"
"johnhw/pfilter" -> "tingiskhan/pyfilter"
"ott-jax/ott" -> "google-research/ott"
"ott-jax/ott" -> "google/sympy2jax"
"ott-jax/ott" -> "google/jaxopt"
"ott-jax/ott" -> "dfm/tinygp"
"ott-jax/ott" -> "jeanfeydy/geomloss" ["e"=1]
"ott-jax/ott" -> "deepmind/kfac-jax"
"ott-jax/ott" -> "patrick-kidger/diffrax"
"ott-jax/ott" -> "google/tree-math"
"ott-jax/ott" -> "google/jaxtyping"
"ott-jax/ott" -> "jacobjinkelly/easy-neural-ode"
"vopani/datatableton" -> "vopani/waveton"
"vopani/datatableton" -> "vopani/datasciencenightly"
"vopani/datatableton" -> "vopani/jaxton"
"vopani/datatableton" -> "vopani/fortyone"
"vopani/datatableton" -> "tunguz/ML_Resources" ["e"=1]
"vopani/datatableton" -> "tmabraham/awesome-fastai" ["e"=1]
"rmcelreath/stat_rethinking_2023" -> "rmcelreath/stat_rethinking_2022"
"rmcelreath/stat_rethinking_2023" -> "rmcelreath/rethinking"
"rmcelreath/stat_rethinking_2023" -> "pymc-devs/pymc-resources"
"rmcelreath/stat_rethinking_2023" -> "rmcelreath/stat_rethinking_2020"
"rmcelreath/stat_rethinking_2023" -> "mcanouil/awesome-quarto" ["e"=1]
"rmcelreath/stat_rethinking_2023" -> "avehtari/BDA_course_Aalto"
"rmcelreath/stat_rethinking_2023" -> "easystats/performance" ["e"=1]
"rmcelreath/stat_rethinking_2023" -> "vincentarelbundock/marginaleffects" ["e"=1]
"rmcelreath/stat_rethinking_2023" -> "erikgahner/awesome-ggplot2" ["e"=1]
"rmcelreath/stat_rethinking_2023" -> "ddsjoberg/gtsummary" ["e"=1]
"rmcelreath/stat_rethinking_2023" -> "rmcelreath/statrethinking_winter2019"
"rmcelreath/stat_rethinking_2023" -> "paul-buerkner/brms"
"rmcelreath/stat_rethinking_2023" -> "rstudio/gt" ["e"=1]
"rmcelreath/stat_rethinking_2023" -> "mjskay/ggdist" ["e"=1]
"rmcelreath/stat_rethinking_2023" -> "Nixtla/statsforecast" ["e"=1]
"stan-dev/pystan" -> "stan-dev/stan"
"stan-dev/pystan" -> "arviz-devs/arviz"
"stan-dev/pystan" -> "pymc-devs/pymc3" ["e"=1]
"stan-dev/pystan" -> "avehtari/BDA_py_demos"
"stan-dev/pystan" -> "stan-dev/example-models"
"stan-dev/pystan" -> "stan-dev/rstan"
"stan-dev/pystan" -> "bambinos/bambi"
"stan-dev/pystan" -> "stan-dev/cmdstanpy"
"stan-dev/pystan" -> "blei-lab/edward" ["e"=1]
"stan-dev/pystan" -> "pymc-devs/pymc4"
"stan-dev/pystan" -> "pyro-ppl/numpyro"
"stan-dev/pystan" -> "pymc-devs/pymc" ["e"=1]
"stan-dev/pystan" -> "pydata/patsy" ["e"=1]
"stan-dev/pystan" -> "stan-dev/pystan-next"
"stan-dev/pystan" -> "pyro-ppl/pyro" ["e"=1]
"deepmind/mctx" -> "YeWR/EfficientZero" ["e"=1]
"deepmind/mctx" -> "deepmind/rlax"
"deepmind/mctx" -> "werner-duvaud/muzero-general" ["e"=1]
"deepmind/mctx" -> "RobertTLange/gymnax" ["e"=1]
"deepmind/mctx" -> "deepmind/dm-haiku"
"deepmind/mctx" -> "deepmind/chex"
"deepmind/mctx" -> "google/brax" ["e"=1]
"deepmind/mctx" -> "eloialonso/iris" ["e"=1]
"deepmind/mctx" -> "deepmind/optax"
"deepmind/mctx" -> "deepmind/acme" ["e"=1]
"deepmind/mctx" -> "sail-sg/envpool" ["e"=1]
"deepmind/mctx" -> "google/flax"
"deepmind/mctx" -> "vwxyzjn/cleanrl" ["e"=1]
"deepmind/mctx" -> "deepmind/distrax"
"deepmind/mctx" -> "patrick-kidger/equinox"
"google/flax" -> "deepmind/dm-haiku"
"google/flax" -> "deepmind/optax"
"google/flax" -> "google/jax" ["e"=1]
"google/flax" -> "deepmind/rlax"
"google/flax" -> "google/trax" ["e"=1]
"google/flax" -> "n2cholas/awesome-jax"
"google/flax" -> "pyro-ppl/numpyro"
"google/flax" -> "deepmind/chex"
"google/flax" -> "patrick-kidger/equinox"
"google/flax" -> "deepmind/jraph"
"google/flax" -> "arogozhnikov/einops" ["e"=1]
"google/flax" -> "openai/triton" ["e"=1]
"google/flax" -> "google/jaxopt"
"google/flax" -> "google/neural-tangents"
"google/flax" -> "pytorch/functorch"
"JWarmenhoven/DBDA-python" -> "aloctavodia/Doing_bayesian_data_analysis"
"JWarmenhoven/DBDA-python" -> "aloctavodia/BAP"
"JWarmenhoven/DBDA-python" -> "pymc-devs/resources"
"JWarmenhoven/DBDA-python" -> "aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3"
"JWarmenhoven/DBDA-python" -> "JWarmenhoven/ISLR-python" ["e"=1]
"JWarmenhoven/DBDA-python" -> "ericmjl/bayesian-stats-modelling-tutorial"
"JWarmenhoven/DBDA-python" -> "bambinos/bambi"
"JWarmenhoven/DBDA-python" -> "pymc-devs/pymc4"
"JWarmenhoven/DBDA-python" -> "ericmjl/bayesian-analysis-recipes"
"JWarmenhoven/DBDA-python" -> "avehtari/BDA_py_demos"
"JWarmenhoven/DBDA-python" -> "luke14free/pm-prophet"
"JWarmenhoven/DBDA-python" -> "markdregan/Bayesian-Modelling-in-Python"
"JWarmenhoven/DBDA-python" -> "PacktPublishing/Bayesian-Analysis-with-Python"
"JWarmenhoven/DBDA-python" -> "LeiG/Applied-Predictive-Modeling-with-Python" ["e"=1]
"JWarmenhoven/DBDA-python" -> "pymc-devs/pymc3" ["e"=1]
"CambridgeUniversityPress/FirstCourseNetworkScience" -> "PacktPublishing/Network-Science-with-Python-and-NetworkX-Quick-Start-Guide"
"fonnesbeck/gp_regression" -> "fonnesbeck/Bayes_Computing_Course"
"google-research/dex-lang" -> "hasktorch/hasktorch" ["e"=1]
"google-research/dex-lang" -> "diku-dk/futhark" ["e"=1]
"google-research/dex-lang" -> "pyro-ppl/numpyro"
"google-research/dex-lang" -> "deepmind/optax"
"google-research/dex-lang" -> "deepmind/chex"
"google-research/dex-lang" -> "google/jaxopt"
"google-research/dex-lang" -> "blackjax-devs/blackjax"
"google-research/dex-lang" -> "granule-project/granule" ["e"=1]
"google-research/dex-lang" -> "patrick-kidger/equinox"
"google-research/dex-lang" -> "deepmind/dm-haiku"
"google-research/dex-lang" -> "google/jaxtyping"
"google-research/dex-lang" -> "patrick-kidger/diffrax"
"google-research/dex-lang" -> "wsmoses/Enzyme" ["e"=1]
"google-research/dex-lang" -> "koka-lang/koka" ["e"=1]
"google-research/dex-lang" -> "deepmind/distrax"
"google/sympy2jax" -> "google/jaxtyping"
"google/sympy2jax" -> "ott-jax/ott"
"google/sympy2jax" -> "e3nn/e3nn-jax" ["e"=1]
"google/sympy2jax" -> "patrick-kidger/diffrax"
"google/sympy2jax" -> "google/CommonLoopUtils"
"google/sympy2jax" -> "SymJAX/SymJAX"
"google/sympy2jax" -> "cgarciae/simple-pytree"
"google/sympy2jax" -> "dfm/jpu"
"stan-dev/stan" -> "stan-dev/rstan"
"stan-dev/stan" -> "stan-dev/pystan"
"stan-dev/stan" -> "stan-dev/example-models"
"stan-dev/stan" -> "paul-buerkner/brms"
"stan-dev/stan" -> "stan-dev/math"
"stan-dev/stan" -> "blei-lab/edward" ["e"=1]
"stan-dev/stan" -> "rmcelreath/rethinking"
"stan-dev/stan" -> "pymc-devs/pymc3" ["e"=1]
"stan-dev/stan" -> "avehtari/BDA_R_demos"
"stan-dev/stan" -> "stan-dev/rstanarm"
"stan-dev/stan" -> "TuringLang/Turing.jl" ["e"=1]
"stan-dev/stan" -> "tensorflow/probability" ["e"=1]
"stan-dev/stan" -> "avehtari/BDA_course_Aalto"
"stan-dev/stan" -> "stan-dev/cmdstan"
"stan-dev/stan" -> "avehtari/BDA_py_demos"
"benmaier/netwulf" -> "dblarremore/webweb"
"benmaier/netwulf" -> "benmaier/tacoma"
"benmaier/netwulf" -> "netsiphd/netrd"
"benmaier/netwulf" -> "ulfaslak/network_styling_with_d3"
"benmaier/netwulf" -> "cuinfoscience/INFO5613-Fall2021"
"benmaier/netwulf" -> "gstonge/SamplableSet"
"google/vizier" -> "google/learned_optimization"
"google/vizier" -> "awslabs/fortuna" ["e"=1]
"google/vizier" -> "deepmind/xmanager"
"google/vizier" -> "google/ml_collections"
"google/vizier" -> "ELS-RD/kernl" ["e"=1]
"google/vizier" -> "google/pyglove"
"google/vizier" -> "nnaisense/evotorch" ["e"=1]
"google/vizier" -> "facebookresearch/rl" ["e"=1]
"google/vizier" -> "mosaicml/composer" ["e"=1]
"google/vizier" -> "google/flax"
"google/vizier" -> "awslabs/syne-tune" ["e"=1]
"google/vizier" -> "deepmind/mctx"
"google/vizier" -> "microsoft/LMOps" ["e"=1]
"google/vizier" -> "google/jaxopt"
"google/vizier" -> "Sea-Snell/JAXSeq"
"pytorch/data" -> "pytorch/functorch"
"pytorch/data" -> "facebookresearch/torcharrow"
"pytorch/data" -> "pytorch/torchdynamo" ["e"=1]
"pytorch/data" -> "webdataset/webdataset" ["e"=1]
"pytorch/data" -> "pytorch/torcharrow"
"pytorch/data" -> "PyTorchLightning/metrics" ["e"=1]
"pytorch/data" -> "PyTorchLightning/lightning-flash" ["e"=1]
"pytorch/data" -> "facebookresearch/torchdim"
"pytorch/data" -> "facebookresearch/multimodal" ["e"=1]
"pytorch/data" -> "lucidrains/lion-pytorch" ["e"=1]
"pytorch/data" -> "libffcv/ffcv" ["e"=1]
"pytorch/data" -> "huggingface/evaluate" ["e"=1]
"pytorch/data" -> "pytorch/torcheval"
"pytorch/data" -> "pytorch/torchx" ["e"=1]
"pytorch/data" -> "huggingface/accelerate" ["e"=1]
"SkBlaz/py3plex" -> "nkoub/multinetx"
"google/ml_collections" -> "google/fiddle"
"google/ml_collections" -> "google/CommonLoopUtils"
"google/ml_collections" -> "deepmind/chex"
"google/ml_collections" -> "deepmind/optax"
"google/ml_collections" -> "google-research/big_vision" ["e"=1]
"google/ml_collections" -> "google/flax"
"google/ml_collections" -> "patrick-kidger/torchtyping" ["e"=1]
"google/ml_collections" -> "deepmind/tree"
"google/ml_collections" -> "deepmind/dm-haiku"
"google/ml_collections" -> "n2cholas/awesome-jax"
"google/ml_collections" -> "deepmind/xmanager"
"google/ml_collections" -> "google/jaxtyping"
"google/ml_collections" -> "deepmind/jaxline"
"google/ml_collections" -> "keras-team/keras-cv" ["e"=1]
"google/ml_collections" -> "patrick-kidger/equinox"
"borgwang/tinynn" -> "borgwang/tinynn-autograd"
"borgwang/tinynn" -> "joelgrus/autograd"
"borgwang/tinynn" -> "chaoming0625/NumpyDL"
"borgwang/tinynn" -> "zc911/MatrixSlow"
"bayesiains/nflows" -> "janosh/awesome-normalizing-flows"
"bayesiains/nflows" -> "kamenbliznashki/normalizing_flows"
"bayesiains/nflows" -> "bayesiains/nsf"
"bayesiains/nflows" -> "karpathy/pytorch-normalizing-flows"
"bayesiains/nflows" -> "VincentStimper/normalizing-flows"
"bayesiains/nflows" -> "tonyduan/normalizing-flows"
"bayesiains/nflows" -> "didriknielsen/survae_flows"
"bayesiains/nflows" -> "mackelab/sbi"
"bayesiains/nflows" -> "facebookincubator/flowtorch"
"bayesiains/nflows" -> "johannbrehmer/manifold-flow"
"bayesiains/nflows" -> "ikostrikov/pytorch-flows"
"bayesiains/nflows" -> "LukasRinder/normalizing-flows"
"bayesiains/nflows" -> "nicola-decao/BNAF"
"bayesiains/nflows" -> "deepmind/distrax"
"bayesiains/nflows" -> "rosinality/glow-pytorch"
"jmtomczak/vae_vpflows" -> "kefirski/bdir_vae"
"jmtomczak/vae_vpflows" -> "jmtomczak/vae_householder_flow"
"kefirski/bdir_vae" -> "jmtomczak/vae_vpflows"
"riannevdberg/sylvester-flows" -> "nicola-decao/BNAF"
"riannevdberg/sylvester-flows" -> "ex4sperans/variational-inference-with-normalizing-flows"
"riannevdberg/sylvester-flows" -> "bayesiains/nsf"
"riannevdberg/sylvester-flows" -> "kamenbliznashki/normalizing_flows"
"riannevdberg/sylvester-flows" -> "jmtomczak/vae_vampprior" ["e"=1]
"riannevdberg/sylvester-flows" -> "CW-Huang/NAF"
"riannevdberg/sylvester-flows" -> "acids-ircam/pytorch_flows"
"riannevdberg/sylvester-flows" -> "abdulfatir/normalizing-flows"
"riannevdberg/sylvester-flows" -> "rtqichen/ffjord"
"riannevdberg/sylvester-flows" -> "ikostrikov/pytorch-flows"
"riannevdberg/sylvester-flows" -> "didriknielsen/survae_flows"
"riannevdberg/sylvester-flows" -> "jmtomczak/vae_vpflows"
"riannevdberg/sylvester-flows" -> "ericjang/normalizing-flows-tutorial"
"karpathy/find-birds" -> "karpathy/pytorch-made"
"rmcelreath/stat_rethinking_2020" -> "rmcelreath/rethinking"
"rmcelreath/stat_rethinking_2020" -> "rmcelreath/statrethinking_winter2019"
"rmcelreath/stat_rethinking_2020" -> "avehtari/BDA_course_Aalto"
"rmcelreath/stat_rethinking_2020" -> "pymc-devs/resources"
"rmcelreath/stat_rethinking_2020" -> "mjskay/tidybayes"
"rmcelreath/stat_rethinking_2020" -> "rmcelreath/stat_rethinking_2022"
"rmcelreath/stat_rethinking_2020" -> "paul-buerkner/brms"
"rmcelreath/stat_rethinking_2020" -> "rmcelreath/causal_salad_2021"
"rmcelreath/stat_rethinking_2020" -> "ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse_2_ed"
"rmcelreath/stat_rethinking_2020" -> "ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse"
"rmcelreath/stat_rethinking_2020" -> "malcolmbarrett/ggdag" ["e"=1]
"rmcelreath/stat_rethinking_2020" -> "thomasp85/patchwork" ["e"=1]
"rmcelreath/stat_rethinking_2020" -> "rmcelreath/stat_rethinking_2023"
"rmcelreath/stat_rethinking_2020" -> "vincentarelbundock/modelsummary" ["e"=1]
"rmcelreath/stat_rethinking_2020" -> "cavaunpeu/statistical-rethinking"
"google/objax" -> "deepmind/optax"
"google/objax" -> "deepmind/chex"
"google/objax" -> "n2cholas/awesome-jax"
"google/objax" -> "deepmind/dm-haiku"
"google/objax" -> "google/jaxopt"
"google/objax" -> "patrick-kidger/equinox"
"google/objax" -> "deepmind/dm_pix"
"google/objax" -> "deepmind/distrax"
"google/objax" -> "google/flax"
"google/objax" -> "srush/parallax"
"google/objax" -> "poets-ai/elegy"
"google/objax" -> "deepmind/rlax"
"google/objax" -> "cgarciae/treex"
"google/objax" -> "google/CommonLoopUtils"
"google/objax" -> "pyro-ppl/numpyro"
"ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse" -> "paul-buerkner/brms"
"ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse" -> "mjskay/tidybayes"
"ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse" -> "ASKurz/Doing-Bayesian-Data-Analysis-in-brms-and-the-tidyverse"
"ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse" -> "rmcelreath/rethinking"
"ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse" -> "ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse_2_ed"
"ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse" -> "lindeloev/tests-as-linear" ["e"=1]
"ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse" -> "strengejacke/ggeffects" ["e"=1]
"ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse" -> "stan-dev/rstanarm"
"ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse" -> "florianhartig/DHARMa"
"ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse" -> "avehtari/BDA_R_demos"
"ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse" -> "easystats/bayestestR" ["e"=1]
"ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse" -> "hrbrmstr/ggalt" ["e"=1]
"ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse" -> "noamross/gam-resources"
"ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse" -> "ThinkR-open/remedy" ["e"=1]
"ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse" -> "thomasp85/patchwork" ["e"=1]
"paul-buerkner/brms" -> "mjskay/tidybayes"
"paul-buerkner/brms" -> "stan-dev/rstanarm"
"paul-buerkner/brms" -> "rmcelreath/rethinking"
"paul-buerkner/brms" -> "stan-dev/bayesplot"
"paul-buerkner/brms" -> "stan-dev/rstan"
"paul-buerkner/brms" -> "easystats/bayestestR" ["e"=1]
"paul-buerkner/brms" -> "lme4/lme4" ["e"=1]
"paul-buerkner/brms" -> "stan-dev/stan"
"paul-buerkner/brms" -> "stan-dev/example-models"
"paul-buerkner/brms" -> "ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse"
"paul-buerkner/brms" -> "thomasp85/patchwork" ["e"=1]
"paul-buerkner/brms" -> "bambinos/bambi"
"paul-buerkner/brms" -> "strengejacke/ggeffects" ["e"=1]
"paul-buerkner/brms" -> "mjskay/ggdist" ["e"=1]
"paul-buerkner/brms" -> "IndrajeetPatil/ggstatsplot" ["e"=1]
"rmcelreath/stat_rethinking_2022" -> "rmcelreath/rethinking"
"rmcelreath/stat_rethinking_2022" -> "rmcelreath/stat_rethinking_2023"
"rmcelreath/stat_rethinking_2022" -> "pymc-devs/resources"
"rmcelreath/stat_rethinking_2022" -> "avehtari/BDA_course_Aalto"
"rmcelreath/stat_rethinking_2022" -> "rmcelreath/statrethinking_winter2019"
"rmcelreath/stat_rethinking_2022" -> "rmcelreath/stat_rethinking_2020"
"rmcelreath/stat_rethinking_2022" -> "BoltzmannEntropy/interviews.ai" ["e"=1]
"rmcelreath/stat_rethinking_2022" -> "allisonhorst/stats-illustrations" ["e"=1]
"rmcelreath/stat_rethinking_2022" -> "paul-buerkner/brms"
"rmcelreath/stat_rethinking_2022" -> "rougier/scientific-visualization-book" ["e"=1]
"rmcelreath/stat_rethinking_2022" -> "probml/pyprobml" ["e"=1]
"rmcelreath/stat_rethinking_2022" -> "Nixtla/statsforecast" ["e"=1]
"rmcelreath/stat_rethinking_2022" -> "mcanouil/awesome-quarto" ["e"=1]
"rmcelreath/stat_rethinking_2022" -> "rstudio/gt" ["e"=1]
"rmcelreath/stat_rethinking_2022" -> "rfordatascience/tidytuesday" ["e"=1]
"deepmind/conditional-neural-process" -> "kasparmartens/NeuralProcesses"
"deepmind/conditional-neural-process" -> "geniki/neural-processes"
"MBrouns/timeseers" -> "luke14free/pm-prophet"
"MBrouns/timeseers" -> "pymc-devs/pymc-examples"
"MBrouns/timeseers" -> "carlomazzaferro/scikit-hts" ["e"=1]
"MBrouns/timeseers" -> "fonnesbeck/gp_regression"
"MBrouns/timeseers" -> "corriebar/Bayesian-Workflow-with-PyMC"
"MBrouns/timeseers" -> "pymc-labs/CausalPy" ["e"=1]
"MBrouns/timeseers" -> "bambinos/bambi"
"MBrouns/timeseers" -> "koaning/scikit-lego" ["e"=1]
"MBrouns/timeseers" -> "uber/orbit" ["e"=1]
"MBrouns/timeseers" -> "tblume1992/ThymeBoost" ["e"=1]
"MBrouns/timeseers" -> "pyro-ppl/Pyro-M5-Starter-Kit" ["e"=1]
"nchopin/particles" -> "johnhw/pfilter"
"nchopin/particles" -> "tingiskhan/pyfilter"
"nchopin/particles" -> "blackjax-devs/blackjax"
"nchopin/particles" -> "nasa/SMCPy"
"nchopin/particles" -> "JTT94/filterflow"
"nchopin/particles" -> "lawmurray/Birch"
"nchopin/particles" -> "rlouf/mcx"
"nchopin/particles" -> "dilinwang820/Stein-Variational-Gradient-Descent" ["e"=1]
"nchopin/particles" -> "jeremiecoullon/SGMCMCJax"
"nchopin/particles" -> "matt-graham/mici"
"nchopin/particles" -> "nchopin/py-smc2"
"nchopin/particles" -> "pierrejacob/couplingsmontecarlo"
"nchopin/particles" -> "AdamCobb/hamiltorch" ["e"=1]
"deepmind/rlax" -> "deepmind/dm-haiku"
"deepmind/rlax" -> "deepmind/optax"
"deepmind/rlax" -> "deepmind/chex"
"deepmind/rlax" -> "deepmind/haiku"
"deepmind/rlax" -> "deepmind/bsuite" ["e"=1]
"deepmind/rlax" -> "deepmind/acme" ["e"=1]
"deepmind/rlax" -> "RobertTLange/gymnax" ["e"=1]
"deepmind/rlax" -> "deepmind/jraph"
"deepmind/rlax" -> "google/flax"
"deepmind/rlax" -> "deepmind/dm_env"
"deepmind/rlax" -> "google/brax" ["e"=1]
"deepmind/rlax" -> "ikostrikov/jaxrl" ["e"=1]
"deepmind/rlax" -> "deepmind/distrax"
"deepmind/rlax" -> "deepmind/dqn_zoo" ["e"=1]
"deepmind/rlax" -> "google-research/rliable" ["e"=1]
"deepmind/tree" -> "deepmind/chex"
"deepmind/tree" -> "deepmind/optax"
"deepmind/tree" -> "dfm/extending-jax"
"deepmind/tree" -> "deepmind/rlax"
"deepmind/tree" -> "deepmind/distrax"
"deepmind/tree" -> "google/ml_collections"
"deepmind/tree" -> "deepmind/dm-haiku"
"deepmind/tree" -> "deepmind/dm_pix"
"deepmind/tree" -> "patrick-kidger/equinox"
"deepmind/tree" -> "deepmind/reverb" ["e"=1]
"deepmind/tree" -> "google/brax" ["e"=1]
"deepmind/tree" -> "deepmind/launchpad"
"deepmind/tree" -> "google/tree-math"
"deepmind/tree" -> "cgarciae/treex"
"deepmind/tree" -> "deepmind/dm_env_rpc"
"ramonhagenaars/nptyping" -> "numpy/numpy-stubs"
"ramonhagenaars/nptyping" -> "google/jaxtyping"
"ramonhagenaars/nptyping" -> "ramonhagenaars/typish"
"ramonhagenaars/nptyping" -> "mypyc/mypyc" ["e"=1]
"ramonhagenaars/nptyping" -> "patrick-kidger/torchtyping" ["e"=1]
"MIPT-Oulu/solt" -> "MIPT-Oulu/pytorch_bn_fusion"
"stanford-iprl-lab/torchfilter" -> "brentyi/dfgo"
"stanford-iprl-lab/torchfilter" -> "brentyi/multimodalfilter"
"avehtari/BDA_py_demos" -> "avehtari/BDA_R_demos"
"avehtari/BDA_py_demos" -> "avehtari/BDA_course_Aalto"
"avehtari/BDA_py_demos" -> "aloctavodia/Doing_bayesian_data_analysis"
"avehtari/BDA_py_demos" -> "aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3"
"avehtari/BDA_py_demos" -> "pymc-devs/resources"
"avehtari/BDA_py_demos" -> "stan-dev/pystan"
"avehtari/BDA_py_demos" -> "markdregan/Bayesian-Modelling-in-Python"
"avehtari/BDA_py_demos" -> "avehtari/BDA_m_demos"
"avehtari/BDA_py_demos" -> "rmcelreath/rethinking"
"avehtari/BDA_py_demos" -> "ericmjl/bayesian-analysis-recipes"
"avehtari/BDA_py_demos" -> "aloctavodia/BAP"
"avehtari/BDA_py_demos" -> "bambinos/bambi"
"avehtari/BDA_py_demos" -> "stan-dev/stan"
"avehtari/BDA_py_demos" -> "arviz-devs/arviz"
"avehtari/BDA_py_demos" -> "JWarmenhoven/DBDA-python"
"wiseodd/MCMC" -> "wiseodd/probabilistic-models"
"wiseodd/MCMC" -> "Joseph94m/MCMC"
"wiseodd/MCMC" -> "matt-graham/mici"
"wiseodd/MCMC" -> "chi-feng/mcmc-demo"
"wiseodd/MCMC" -> "fonnesbeck/mcmc_pydata_london_2019"
"mackelab/sbi" -> "sbi-benchmark/sbibm"
"mackelab/sbi" -> "undark-lab/swyft"
"mackelab/sbi" -> "mackelab/delfi"
"mackelab/sbi" -> "bayesiains/nflows"
"mackelab/sbi" -> "justinalsing/pydelfi"
"mackelab/sbi" -> "deepmind/distrax"
"mackelab/sbi" -> "montefiore-ai/hypothesis"
"mackelab/sbi" -> "blackjax-devs/blackjax"
"mackelab/sbi" -> "joshspeagle/dynesty" ["e"=1]
"mackelab/sbi" -> "kazewong/flowMC"
"mackelab/sbi" -> "francois-rozet/lampe"
"mackelab/sbi" -> "elfi-dev/elfi"
"mackelab/sbi" -> "Joshuaalbert/jaxns" ["e"=1]
"mackelab/sbi" -> "johannbrehmer/manifold-flow"
"mackelab/sbi" -> "conormdurkan/lfi"
"n2cholas/awesome-jax" -> "deepmind/optax"
"n2cholas/awesome-jax" -> "google/jaxopt"
"n2cholas/awesome-jax" -> "deepmind/dm-haiku"
"n2cholas/awesome-jax" -> "patrick-kidger/diffrax"
"n2cholas/awesome-jax" -> "patrick-kidger/equinox"
"n2cholas/awesome-jax" -> "deepmind/chex"
"n2cholas/awesome-jax" -> "google/objax"
"n2cholas/awesome-jax" -> "google/flax"
"n2cholas/awesome-jax" -> "deepmind/distrax"
"n2cholas/awesome-jax" -> "google/jaxtyping"
"n2cholas/awesome-jax" -> "google/CommonLoopUtils"
"n2cholas/awesome-jax" -> "gordicaleksa/get-started-with-JAX"
"n2cholas/awesome-jax" -> "blackjax-devs/blackjax"
"n2cholas/awesome-jax" -> "pyro-ppl/numpyro"
"n2cholas/awesome-jax" -> "RobertTLange/gymnax" ["e"=1]
"jwkvam/celluloid" -> "deepmind/distrax"
"jwkvam/celluloid" -> "lukelbd/proplot" ["e"=1]
"jwkvam/celluloid" -> "pyro-ppl/numpyro"
"jwkvam/celluloid" -> "DiffEqML/torchdyn"
"jwkvam/celluloid" -> "bayesiains/nflows"
"jwkvam/celluloid" -> "google-research/torchsde"
"jwkvam/celluloid" -> "bayesiains/nsf"
"jwkvam/celluloid" -> "deepmind/jraph"
"jwkvam/celluloid" -> "maxhumber/gif" ["e"=1]
"jwkvam/celluloid" -> "google-research/arxiv-latex-cleaner" ["e"=1]
"jwkvam/celluloid" -> "patrick-kidger/equinox"
"jwkvam/celluloid" -> "nschloe/tikzplotlib" ["e"=1]
"jwkvam/celluloid" -> "blackjax-devs/blackjax"
"jwkvam/celluloid" -> "facebookresearch/hiplot" ["e"=1]
"jwkvam/celluloid" -> "johannesjmeyer/rsmf"
"rmcelreath/statrethinking_winter2019" -> "rmcelreath/rethinking"
"rmcelreath/statrethinking_winter2019" -> "avehtari/BDA_course_Aalto"
"rmcelreath/statrethinking_winter2019" -> "pymc-devs/resources"
"rmcelreath/statrethinking_winter2019" -> "rmcelreath/stat_rethinking_2020"
"rmcelreath/statrethinking_winter2019" -> "paul-buerkner/brms"
"rmcelreath/statrethinking_winter2019" -> "mjskay/tidybayes"
"rmcelreath/statrethinking_winter2019" -> "thomasp85/patchwork" ["e"=1]
"rmcelreath/statrethinking_winter2019" -> "rmcelreath/stat_rethinking_2022"
"rmcelreath/statrethinking_winter2019" -> "gbosquechacon/statrethink_course_in_pymc3"
"rmcelreath/statrethinking_winter2019" -> "ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse"
"rmcelreath/statrethinking_winter2019" -> "stan-dev/example-models"
"rmcelreath/statrethinking_winter2019" -> "rstudio/gt" ["e"=1]
"rmcelreath/statrethinking_winter2019" -> "avehtari/BDA_R_demos"
"rmcelreath/statrethinking_winter2019" -> "allisonhorst/stats-illustrations" ["e"=1]
"rmcelreath/statrethinking_winter2019" -> "aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3"
"markdregan/Bayesian-Modelling-in-Python" -> "aloctavodia/Doing_bayesian_data_analysis"
"markdregan/Bayesian-Modelling-in-Python" -> "pymc-devs/pymc3" ["e"=1]
"markdregan/Bayesian-Modelling-in-Python" -> "aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3"
"markdregan/Bayesian-Modelling-in-Python" -> "blei-lab/edward" ["e"=1]
"markdregan/Bayesian-Modelling-in-Python" -> "avehtari/BDA_py_demos"
"markdregan/Bayesian-Modelling-in-Python" -> "jmschrei/pomegranate" ["e"=1]
"markdregan/Bayesian-Modelling-in-Python" -> "rhiever/tpot" ["e"=1]
"markdregan/Bayesian-Modelling-in-Python" -> "pymc-devs/resources"
"markdregan/Bayesian-Modelling-in-Python" -> "fonnesbeck/scipy2014_tutorial"
"markdregan/Bayesian-Modelling-in-Python" -> "google/skflow" ["e"=1]
"markdregan/Bayesian-Modelling-in-Python" -> "ericmjl/bayesian-analysis-recipes"
"markdregan/Bayesian-Modelling-in-Python" -> "bloomberg/bqplot" ["e"=1]
"markdregan/Bayesian-Modelling-in-Python" -> "pgmpy/pgmpy" ["e"=1]
"markdregan/Bayesian-Modelling-in-Python" -> "ericmjl/bayesian-stats-modelling-tutorial"
"markdregan/Bayesian-Modelling-in-Python" -> "stitchfix/pyxley" ["e"=1]
"deepmind/neural-processes" -> "EmilienDupont/neural-processes"
"deepmind/neural-processes" -> "YannDubs/Neural-Process-Family"
"deepmind/neural-processes" -> "soobinseo/Attentive-Neural-Process"
"deepmind/neural-processes" -> "cambridge-mlg/convcnp"
"deepmind/neural-processes" -> "geniki/neural-processes"
"deepmind/neural-processes" -> "3springs/attentive-neural-processes"
"deepmind/neural-processes" -> "bayesiains/nflows"
"deepmind/neural-processes" -> "didriknielsen/survae_flows"
"deepmind/neural-processes" -> "crisbodnar/ndp"
"deepmind/neural-processes" -> "wesselb/NeuralProcesses.jl"
"deepmind/neural-processes" -> "kasparmartens/NeuralProcesses"
"deepmind/neural-processes" -> "cornellius-gp/gpytorch" ["e"=1]
"deepmind/neural-processes" -> "openai/ebm_code_release" ["e"=1]
"deepmind/neural-processes" -> "AMLab-Amsterdam/FNP"
"deepmind/neural-processes" -> "ahmedmalaa/deep-learning-uncertainty" ["e"=1]
"patrick-kidger/signatory" -> "bottler/iisignature"
"patrick-kidger/signatory" -> "patrick-kidger/Deep-Signature-Transforms"
"patrick-kidger/signatory" -> "datasig-ac-uk/esig"
"patrick-kidger/signatory" -> "patrick-kidger/torchcde"
"patrick-kidger/signatory" -> "crispitagorico/sigkernel"
"patrick-kidger/signatory" -> "tgcsaba/GPSig"
"patrick-kidger/signatory" -> "patrick-kidger/NeuralCDE"
"patrick-kidger/signatory" -> "kormilitzin/the-signature-method-in-machine-learning"
"patrick-kidger/signatory" -> "SigCGANs/Conditional-Sig-Wasserstein-GANs" ["e"=1]
"patrick-kidger/signatory" -> "jambo6/generalised-signature-method"
"patrick-kidger/signatory" -> "jambo6/neuralRDEs"
"google/maxtext" -> "cgarciae/ciclo"
"aloctavodia/BAP" -> "pymc-devs/resources"
"aloctavodia/BAP" -> "JWarmenhoven/DBDA-python"
"aloctavodia/BAP" -> "PacktPublishing/Bayesian-Analysis-with-Python"
"aloctavodia/BAP" -> "ericmjl/bayesian-analysis-recipes"
"aloctavodia/BAP" -> "aloctavodia/Doing_bayesian_data_analysis"
"aloctavodia/BAP" -> "aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3"
"aloctavodia/BAP" -> "PacktPublishing/Bayesian-Analysis-with-Python-Second-Edition"
"aloctavodia/BAP" -> "junpenglao/advance-bayesian-modelling-with-PyMC3"
"aloctavodia/BAP" -> "ericmjl/bayesian-stats-modelling-tutorial"
"aloctavodia/BAP" -> "pymc-devs/pymc4"
"aloctavodia/BAP" -> "fonnesbeck/Bayes_Computing_Course"
"aloctavodia/BAP" -> "avehtari/BDA_py_demos"
"aloctavodia/BAP" -> "bambinos/bambi"
"aloctavodia/BAP" -> "luke14free/pm-prophet"
"aloctavodia/BAP" -> "arviz-devs/arviz"
"deepgenerativemodels/notes" -> "tonyduan/normalizing-flows"
"deepgenerativemodels/notes" -> "ermongroup/cs228-notes" ["e"=1]
"deepgenerativemodels/notes" -> "janosh/awesome-normalizing-flows"
"deepgenerativemodels/notes" -> "ikostrikov/pytorch-flows"
"stan-dev/rstanarm" -> "stan-dev/bayesplot"
"stan-dev/rstanarm" -> "paul-buerkner/brms"
"stan-dev/rstanarm" -> "stan-dev/rstan"
"stan-dev/rstanarm" -> "mjskay/tidybayes"
"stan-dev/rstanarm" -> "stan-dev/loo"
"stan-dev/rstanarm" -> "stan-dev/rstantools"
"stan-dev/rstanarm" -> "stan-dev/projpred"
"stan-dev/rstanarm" -> "stan-dev/cmdstanr"
"stan-dev/rstanarm" -> "stan-dev/stancon_talks"
"stan-dev/rstanarm" -> "easystats/bayestestR" ["e"=1]
"stan-dev/rstanarm" -> "stan-dev/shinystan"
"stan-dev/rstanarm" -> "stan-dev/example-models"
"stan-dev/rstanarm" -> "xfim/ggmcmc"
"stan-dev/rstanarm" -> "strengejacke/ggeffects" ["e"=1]
"stan-dev/rstanarm" -> "stan-dev/posterior"
"rtqichen/torchdiffeq" -> "DiffEqML/torchdyn"
"rtqichen/torchdiffeq" -> "rtqichen/ffjord"
"rtqichen/torchdiffeq" -> "Zymrael/awesome-neural-ode"
"rtqichen/torchdiffeq" -> "google-research/torchsde"
"rtqichen/torchdiffeq" -> "msurtsukov/neural-ode"
"rtqichen/torchdiffeq" -> "EmilienDupont/augmented-neural-odes"
"rtqichen/torchdiffeq" -> "cornellius-gp/gpytorch" ["e"=1]
"rtqichen/torchdiffeq" -> "YuliaRubanova/latent_ode"
"rtqichen/torchdiffeq" -> "rusty1s/pytorch_geometric" ["e"=1]
"rtqichen/torchdiffeq" -> "kmkolasinski/deep-learning-notes"
"rtqichen/torchdiffeq" -> "HIPS/autograd" ["e"=1]
"rtqichen/torchdiffeq" -> "patrick-kidger/NeuralCDE"
"rtqichen/torchdiffeq" -> "google/jax" ["e"=1]
"rtqichen/torchdiffeq" -> "arogozhnikov/einops" ["e"=1]
"rtqichen/torchdiffeq" -> "pyro-ppl/pyro" ["e"=1]
"karpathy/pytorch-made" -> "ikostrikov/pytorch-flows"
"karpathy/pytorch-made" -> "mgermain/MADE"
"karpathy/pytorch-made" -> "gpapamak/maf"
"karpathy/pytorch-made" -> "karpathy/pytorch-normalizing-flows"
"karpathy/pytorch-made" -> "karpathy/find-birds"
"karpathy/pytorch-made" -> "CW-Huang/NAF"
"karpathy/pytorch-made" -> "jzbontar/pixelcnn-pytorch" ["e"=1]
"karpathy/pytorch-made" -> "ericjang/normalizing-flows-tutorial"
"karpathy/pytorch-made" -> "kamenbliznashki/normalizing_flows"
"karpathy/pytorch-made" -> "karpathy/examples" ["e"=1]
"karpathy/pytorch-made" -> "riannevdberg/sylvester-flows"
"karpathy/pytorch-made" -> "nicola-decao/BNAF"
"karpathy/pytorch-made" -> "ptrblck/prog_gans_pytorch_inference" ["e"=1]
"karpathy/pytorch-made" -> "Schlumberger/joint-vae" ["e"=1]
"karpathy/pytorch-made" -> "didriknielsen/survae_flows"
"deepmind/kfac-jax" -> "deepmind/jmp"
"deepmind/kfac-jax" -> "deepmind/dks"
"chi-feng/mcmc-demo" -> "chi-feng/gp-demo"
"chi-feng/mcmc-demo" -> "ColCarroll/imcmc"
"chi-feng/mcmc-demo" -> "pyro-ppl/numpyro"
"chi-feng/mcmc-demo" -> "wiseodd/MCMC"
"chi-feng/mcmc-demo" -> "mcleonard/sampyl"
"chi-feng/mcmc-demo" -> "blackjax-devs/blackjax"
"chi-feng/mcmc-demo" -> "rlouf/mcx"
"chi-feng/mcmc-demo" -> "AdamCobb/hamiltorch" ["e"=1]
"chi-feng/mcmc-demo" -> "joshspeagle/dynesty" ["e"=1]
"chi-feng/mcmc-demo" -> "bob-carpenter/prob-stats"
"chi-feng/mcmc-demo" -> "Joseph94m/MCMC"
"chi-feng/mcmc-demo" -> "mackelab/sbi"
"chi-feng/mcmc-demo" -> "fehiepsi/rethinking-numpyro"
"chi-feng/mcmc-demo" -> "ColCarroll/minimc"
"chi-feng/mcmc-demo" -> "dfm/emcee" ["e"=1]
"pyro-ppl/funsor" -> "pyro-ppl/brmp"
"pyro-ppl/funsor" -> "pyro-ppl/numpyro"
"mattjj/autodidact" -> "HIPS/autograd" ["e"=1]
"mattjj/autodidact" -> "bgavran/autodiff"
"mattjj/autodidact" -> "n2cholas/awesome-jax"
"mattjj/autodidact" -> "google/jaxopt"
"mattjj/autodidact" -> "google-research/dex-lang"
"mattjj/autodidact" -> "patrick-kidger/equinox"
"mattjj/autodidact" -> "deepmind/optax"
"mattjj/autodidact" -> "patrick-kidger/diffrax"
"mattjj/autodidact" -> "google/tangent" ["e"=1]
"mattjj/autodidact" -> "deepmind/chex"
"mattjj/autodidact" -> "pyro-ppl/numpyro"
"mattjj/autodidact" -> "probabilistic-numerics/probnum"
"mattjj/autodidact" -> "getkeops/keops" ["e"=1]
"mattjj/autodidact" -> "joelgrus/autograd"
"mattjj/autodidact" -> "google/flax"
"google/neural-tangents" -> "pyro-ppl/numpyro"
"google/neural-tangents" -> "deepmind/dm-haiku"
"google/neural-tangents" -> "google/flax"
"google/neural-tangents" -> "cornellius-gp/gpytorch" ["e"=1]
"google/neural-tangents" -> "facebookresearch/higher" ["e"=1]
"google/neural-tangents" -> "deepmind/optax"
"google/neural-tangents" -> "tancik/fourier-feature-networks" ["e"=1]
"google/neural-tangents" -> "google-research/torchsde"
"google/neural-tangents" -> "tomgoldstein/loss-landscape" ["e"=1]
"google/neural-tangents" -> "rtqichen/torchdiffeq"
"google/neural-tangents" -> "DiffEqML/torchdyn"
"google/neural-tangents" -> "brain-research/nngp" ["e"=1]
"google/neural-tangents" -> "pytorch/botorch" ["e"=1]
"google/neural-tangents" -> "pyro-ppl/pyro" ["e"=1]
"google/neural-tangents" -> "cvxgrp/cvxpylayers" ["e"=1]
"pyro-ppl/numpyro" -> "blackjax-devs/blackjax"
"pyro-ppl/numpyro" -> "pyro-ppl/pyro" ["e"=1]
"pyro-ppl/numpyro" -> "fehiepsi/rethinking-numpyro"
"pyro-ppl/numpyro" -> "deepmind/optax"
"pyro-ppl/numpyro" -> "rlouf/mcx"
"pyro-ppl/numpyro" -> "arviz-devs/arviz"
"pyro-ppl/numpyro" -> "deepmind/dm-haiku"
"pyro-ppl/numpyro" -> "deepmind/distrax"
"pyro-ppl/numpyro" -> "deepmind/chex"
"pyro-ppl/numpyro" -> "google/flax"
"pyro-ppl/numpyro" -> "patrick-kidger/equinox"
"pyro-ppl/numpyro" -> "google/jaxopt"
"pyro-ppl/numpyro" -> "pymc-devs/pymc4"
"pyro-ppl/numpyro" -> "pyro-ppl/funsor"
"pyro-ppl/numpyro" -> "bambinos/bambi"
"deepmind/dm-haiku" -> "deepmind/optax"
"deepmind/dm-haiku" -> "google/flax"
"deepmind/dm-haiku" -> "deepmind/rlax"
"deepmind/dm-haiku" -> "deepmind/chex"
"deepmind/dm-haiku" -> "patrick-kidger/equinox"
"deepmind/dm-haiku" -> "n2cholas/awesome-jax"
"deepmind/dm-haiku" -> "deepmind/jraph"
"deepmind/dm-haiku" -> "pyro-ppl/numpyro"
"deepmind/dm-haiku" -> "deepmind/acme" ["e"=1]
"deepmind/dm-haiku" -> "google/jax" ["e"=1]
"deepmind/dm-haiku" -> "google/jaxopt"
"deepmind/dm-haiku" -> "google/objax"
"deepmind/dm-haiku" -> "deepmind/distrax"
"deepmind/dm-haiku" -> "poets-ai/elegy"
"deepmind/dm-haiku" -> "google/neural-tangents"
"google/tree-math" -> "cgarciae/simple-pytree"
"google/tree-math" -> "cgarciae/treeo"
"google/tree-math" -> "NeilGirdhar/tjax"
"PyCon/2017-slides" -> "ikding/pycon_time_series"
"PyCon/2017-slides" -> "fonnesbeck/intro_stat_modeling_2017"
"PyCon/2017-slides" -> "PyCon/2015-slides" ["e"=1]
"pymc-devs/pymc-resources" -> "rmcelreath/stat_rethinking_2023"
"pymc-devs/pymc-resources" -> "pymc-devs/pymc-examples"
"pymc-devs/pymc-resources" -> "pymc-labs/CausalPy" ["e"=1]
"pymc-devs/pymc-resources" -> "BayesianModelingandComputationInPython/BookCode_Edition1"
"pymc-devs/pymc-resources" -> "rmcelreath/stat_rethinking_2022"
"ksachdeva/rethinking-tensorflow-probability" -> "fehiepsi/rethinking-numpyro"
"ksachdeva/rethinking-tensorflow-probability" -> "pymc-devs/resources"
"ksachdeva/rethinking-tensorflow-probability" -> "pymc-devs/pymc4"
"google/fiddle" -> "google/ml_collections"
"aesara-devs/aesara" -> "blackjax-devs/blackjax"
"aesara-devs/aesara" -> "bambinos/bambi"
"aesara-devs/aesara" -> "pyro-ppl/numpyro"
"aesara-devs/aesara" -> "aesara-devs/aeppl"
"aesara-devs/aesara" -> "arviz-devs/arviz"
"aesara-devs/aesara" -> "blackjax-devs/sampling-book"
"aesara-devs/aesara" -> "aesara-devs/aehmc"
"aesara-devs/aesara" -> "pymc-devs/pymc" ["e"=1]
"aesara-devs/aesara" -> "pymc-devs/pytensor"
"aesara-devs/aesara" -> "deepmind/optax"
"aesara-devs/aesara" -> "probabilistic-numerics/probnum"
"aesara-devs/aesara" -> "ICB-DCM/pyABC"
"aesara-devs/aesara" -> "pymc-devs/pymc4"
"aesara-devs/aesara" -> "google/jaxopt"
"aesara-devs/aesara" -> "pymc-devs/pymc-examples"
"arviz-devs/arviz" -> "bambinos/bambi"
"arviz-devs/arviz" -> "pyro-ppl/numpyro"
"arviz-devs/arviz" -> "pymc-devs/pymc4"
"arviz-devs/arviz" -> "pymc-devs/resources"
"arviz-devs/arviz" -> "pymc-devs/pymc3" ["e"=1]
"arviz-devs/arviz" -> "blackjax-devs/blackjax"
"arviz-devs/arviz" -> "stan-dev/pystan"
"arviz-devs/arviz" -> "aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3"
"arviz-devs/arviz" -> "tensorflow/probability" ["e"=1]
"arviz-devs/arviz" -> "luke14free/pm-prophet"
"arviz-devs/arviz" -> "aesara-devs/aesara"
"arviz-devs/arviz" -> "aloctavodia/Doing_bayesian_data_analysis"
"arviz-devs/arviz" -> "pydata/xarray" ["e"=1]
"arviz-devs/arviz" -> "rlouf/mcx"
"arviz-devs/arviz" -> "pyro-ppl/pyro" ["e"=1]
"avehtari/BDA_course_Aalto" -> "rmcelreath/statrethinking_winter2019"
"avehtari/BDA_course_Aalto" -> "avehtari/BDA_py_demos"
"avehtari/BDA_course_Aalto" -> "avehtari/BDA_R_demos"
"avehtari/BDA_course_Aalto" -> "rmcelreath/rethinking"
"avehtari/BDA_course_Aalto" -> "paul-buerkner/brms"
"avehtari/BDA_course_Aalto" -> "pymc-devs/resources"
"avehtari/BDA_course_Aalto" -> "rmcelreath/stat_rethinking_2020"
"avehtari/BDA_course_Aalto" -> "rmcelreath/stat_rethinking_2022"
"avehtari/BDA_course_Aalto" -> "stan-dev/example-models"
"avehtari/BDA_course_Aalto" -> "stan-dev/stan"
"avehtari/BDA_course_Aalto" -> "mjskay/tidybayes"
"avehtari/BDA_course_Aalto" -> "avehtari/ROS-Examples"
"avehtari/BDA_course_Aalto" -> "probml/pyprobml" ["e"=1]
"avehtari/BDA_course_Aalto" -> "thomasp85/patchwork" ["e"=1]
"avehtari/BDA_course_Aalto" -> "arviz-devs/arviz"
"fonnesbeck/Bayes_Computing_Course" -> "fonnesbeck/gp_regression"
"fonnesbeck/Bayes_Computing_Course" -> "ericmjl/bayesian-analysis-recipes"
"fonnesbeck/Bayes_Computing_Course" -> "fonnesbeck/bayes_course_july2020"
"pymc-devs/resources" -> "aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3"
"pymc-devs/resources" -> "rmcelreath/statrethinking_winter2019"
"pymc-devs/resources" -> "rmcelreath/rethinking"
"pymc-devs/resources" -> "aloctavodia/Doing_bayesian_data_analysis"
"pymc-devs/resources" -> "aloctavodia/BAP"
"pymc-devs/resources" -> "arviz-devs/arviz"
"pymc-devs/resources" -> "JWarmenhoven/DBDA-python"
"pymc-devs/resources" -> "bambinos/bambi"
"pymc-devs/resources" -> "ericmjl/bayesian-analysis-recipes"
"pymc-devs/resources" -> "pymc-devs/pymc4"
"pymc-devs/resources" -> "ksachdeva/rethinking-tensorflow-probability"
"pymc-devs/resources" -> "pymc-devs/pymc3" ["e"=1]
"pymc-devs/resources" -> "avehtari/BDA_course_Aalto"
"pymc-devs/resources" -> "ericmjl/bayesian-stats-modelling-tutorial"
"pymc-devs/resources" -> "rmcelreath/stat_rethinking_2020"
"JSeam2/Neural-Ordinary-Differential-Equations" -> "mandubian/neural-ode"
"JSeam2/Neural-Ordinary-Differential-Equations" -> "jason71995/Keras_ODENet"
"JSeam2/Neural-Ordinary-Differential-Equations" -> "titu1994/tfdiffeq"
"JSeam2/Neural-Ordinary-Differential-Equations" -> "rtqichen/ffjord"
"JSeam2/Neural-Ordinary-Differential-Equations" -> "rajatvd/NeuralODE"
"YuliaRubanova/latent_ode" -> "patrick-kidger/NeuralCDE"
"YuliaRubanova/latent_ode" -> "edebrouwer/gru_ode_bayes"
"YuliaRubanova/latent_ode" -> "patrick-kidger/torchcde"
"YuliaRubanova/latent_ode" -> "Zymrael/awesome-neural-ode"
"YuliaRubanova/latent_ode" -> "EmilienDupont/augmented-neural-odes"
"YuliaRubanova/latent_ode" -> "google-research/torchsde"
"YuliaRubanova/latent_ode" -> "rtqichen/ffjord"
"YuliaRubanova/latent_ode" -> "rtqichen/torchdiffeq"
"YuliaRubanova/latent_ode" -> "DiffEqML/torchdyn"
"YuliaRubanova/latent_ode" -> "msurtsukov/neural-ode"
"YuliaRubanova/latent_ode" -> "bayesiains/nsf"
"YuliaRubanova/latent_ode" -> "titu1994/tfdiffeq"
"YuliaRubanova/latent_ode" -> "jacobjinkelly/easy-neural-ode"
"YuliaRubanova/latent_ode" -> "locuslab/deq"
"YuliaRubanova/latent_ode" -> "patrick-kidger/FasterNeuralDiffEq"
"google/edward2" -> "google/uncertainty-baselines" ["e"=1]
"google/edward2" -> "rlouf/mcx"
"google/edward2" -> "pyro-ppl/numpyro"
"google/edward2" -> "pymc-devs/pymc4"
"google/edward2" -> "fehiepsi/rethinking-numpyro"
"google/edward2" -> "deepmind/distrax"
"google/edward2" -> "OATML/bdl-benchmarks" ["e"=1]
"google/edward2" -> "tensorflow/probability" ["e"=1]
"google/edward2" -> "google-research/robustness_metrics" ["e"=1]
"google/edward2" -> "deepmind/optax"
"google/edward2" -> "blackjax-devs/blackjax"
"google/edward2" -> "google/neural-tangents"
"google/edward2" -> "google/objax"
"google/edward2" -> "google/uncertainty-metrics" ["e"=1]
"google/edward2" -> "secondmind-labs/trieste" ["e"=1]
"vopani/jaxton" -> "n2cholas/awesome-jax"
"vopani/jaxton" -> "vopani/datatableton"
"vopani/jaxton" -> "gordicaleksa/get-started-with-JAX"
"vopani/jaxton" -> "deepmind/dm_pix"
"vopani/jaxton" -> "google/CommonLoopUtils"
"vopani/jaxton" -> "vopani/waveton"
"vopani/jaxton" -> "deepmind/optax"
"vopani/jaxton" -> "google/jaxtyping"
"vopani/jaxton" -> "AakashKumarNain/TF_JAX_tutorials"
"vopani/jaxton" -> "google/jaxopt"
"vopani/jaxton" -> "google/objax"
"vopani/jaxton" -> "poets-ai/elegy"
"vopani/jaxton" -> "wandb/Groundbreaking-Papers"
"vopani/jaxton" -> "patrick-kidger/equinox"
"vopani/jaxton" -> "RobertTLange/gymnax" ["e"=1]
"google-research/torchsde" -> "DiffEqML/torchdyn"
"google-research/torchsde" -> "patrick-kidger/NeuralCDE"
"google-research/torchsde" -> "patrick-kidger/torchcde"
"google-research/torchsde" -> "Zymrael/awesome-neural-ode"
"google-research/torchsde" -> "patrick-kidger/diffrax"
"google-research/torchsde" -> "rtqichen/torchdiffeq"
"google-research/torchsde" -> "YuliaRubanova/latent_ode"
"google-research/torchsde" -> "rtqichen/ffjord"
"google-research/torchsde" -> "yang-song/score_sde" ["e"=1]
"google-research/torchsde" -> "bayesiains/nflows"
"google-research/torchsde" -> "patrick-kidger/equinox"
"google-research/torchsde" -> "msurtsukov/neural-ode"
"google-research/torchsde" -> "yang-song/score_sde_pytorch" ["e"=1]
"google-research/torchsde" -> "cvxgrp/cvxpylayers" ["e"=1]
"google-research/torchsde" -> "google/neural-tangents"
"chrischute/glow" -> "chrischute/real-nvp"
"deepmind/distrax" -> "blackjax-devs/blackjax"
"deepmind/distrax" -> "deepmind/chex"
"deepmind/distrax" -> "deepmind/optax"
"deepmind/distrax" -> "google/CommonLoopUtils"
"deepmind/distrax" -> "google/jaxtyping"
"deepmind/distrax" -> "thomaspinder/GPJax"
"deepmind/distrax" -> "ChrisWaites/jax-flows" ["e"=1]
"deepmind/distrax" -> "google/jaxopt"
"deepmind/distrax" -> "mackelab/sbi"
"deepmind/distrax" -> "patrick-kidger/diffrax"
"deepmind/distrax" -> "jax-ml/oryx"
"deepmind/distrax" -> "jeremiecoullon/SGMCMCJax"
"deepmind/distrax" -> "rlouf/mcx"
"deepmind/distrax" -> "patrick-kidger/equinox"
"deepmind/distrax" -> "pyro-ppl/numpyro"
"kmkolasinski/deep-learning-notes" -> "rtqichen/torchdiffeq"
"kmkolasinski/deep-learning-notes" -> "Zymrael/awesome-neural-ode"
"kmkolasinski/deep-learning-notes" -> "msurtsukov/neural-ode"
"kmkolasinski/deep-learning-notes" -> "EmilienDupont/augmented-neural-odes"
"kmkolasinski/deep-learning-notes" -> "YuliaRubanova/latent_ode"
"kmkolasinski/deep-learning-notes" -> "rtqichen/ffjord"
"kmkolasinski/deep-learning-notes" -> "titu1994/tfdiffeq"
"kmkolasinski/deep-learning-notes" -> "ericjang/normalizing-flows-tutorial"
"kmkolasinski/deep-learning-notes" -> "taki0112/Tensorflow-Cookbook" ["e"=1]
"kmkolasinski/deep-learning-notes" -> "mandubian/neural-ode"
"kmkolasinski/deep-learning-notes" -> "insurgent92/CS231N_17_KOR_SUB" ["e"=1]
"kmkolasinski/deep-learning-notes" -> "DiffEqML/torchdyn"
"kmkolasinski/deep-learning-notes" -> "locuslab/deq"
"kmkolasinski/deep-learning-notes" -> "google/compare_gan" ["e"=1]
"kmkolasinski/deep-learning-notes" -> "openai/glow" ["e"=1]
"hristo-vrigazov/mmap.ninja" -> "facebookresearch/torchdim"
"AmazaspShumik/sklearn-bayes" -> "JamesRitchie/scikit-rvm"
"AmazaspShumik/sklearn-bayes" -> "scikit-learn-contrib/forest-confidence-interval" ["e"=1]
"AmazaspShumik/sklearn-bayes" -> "bambinos/bambi"
"AmazaspShumik/sklearn-bayes" -> "rsteca/sklearn-deap" ["e"=1]
"AmazaspShumik/sklearn-bayes" -> "ericmjl/bayesian-analysis-recipes"
"AmazaspShumik/sklearn-bayes" -> "TomAugspurger/engarde" ["e"=1]
"AmazaspShumik/sklearn-bayes" -> "RJT1990/pyflux" ["e"=1]
"AmazaspShumik/sklearn-bayes" -> "aloctavodia/Doing_bayesian_data_analysis"
"AmazaspShumik/sklearn-bayes" -> "avehtari/BDA_py_demos"
"AmazaspShumik/sklearn-bayes" -> "yandex/rep" ["e"=1]
"AmazaspShumik/sklearn-bayes" -> "ellisonbg/altair" ["e"=1]
"AmazaspShumik/sklearn-bayes" -> "tdhopper/notes-on-dirichlet-processes" ["e"=1]
"AmazaspShumik/sklearn-bayes" -> "aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3"
"AmazaspShumik/sklearn-bayes" -> "jmschrei/pomegranate" ["e"=1]
"AmazaspShumik/sklearn-bayes" -> "scikit-garden/scikit-garden"
"pymc-learn/pymc-learn" -> "parsing-science/pymc3_models"
"pymc-learn/pymc-learn" -> "luke14free/pm-prophet"
"deepmind/jraph" -> "deepmind/optax"
"deepmind/jraph" -> "deepmind/dm-haiku"
"deepmind/jraph" -> "deepmind/chex"
"deepmind/jraph" -> "deepmind/rlax"
"deepmind/jraph" -> "google/jax-md" ["e"=1]
"deepmind/jraph" -> "google/flax"
"deepmind/jraph" -> "deepmind/distrax"
"deepmind/jraph" -> "pyro-ppl/numpyro"
"deepmind/jraph" -> "n2cholas/awesome-jax"
"deepmind/jraph" -> "google/jaxopt"
"deepmind/jraph" -> "patrick-kidger/equinox"
"deepmind/jraph" -> "snap-stanford/GraphGym" ["e"=1]
"deepmind/jraph" -> "patrick-kidger/diffrax"
"deepmind/jraph" -> "google/CommonLoopUtils"
"deepmind/jraph" -> "tensorflow/gnn" ["e"=1]
"jhjacobsen/pytorch-i-revnet" -> "renmengye/revnet-public" ["e"=1]
"jhjacobsen/pytorch-i-revnet" -> "silvandeleemput/memcnn"
"jhjacobsen/pytorch-i-revnet" -> "jhjacobsen/invertible-resnet"
"jhjacobsen/pytorch-i-revnet" -> "tbung/pytorch-revnet"
"jhjacobsen/pytorch-i-revnet" -> "rtqichen/residual-flows"
"jhjacobsen/pytorch-i-revnet" -> "ikostrikov/pytorch-flows"
"jhjacobsen/pytorch-i-revnet" -> "VLL-HD/FrEIA"
"jhjacobsen/pytorch-i-revnet" -> "jhjacobsen/fully-invertible-revnet"
"jhjacobsen/pytorch-i-revnet" -> "CW-Huang/NAF"
"jhjacobsen/pytorch-i-revnet" -> "chaiyujin/glow-pytorch"
"bojone/flow" -> "rosinality/glow-pytorch"
"bojone/flow" -> "ex4sperans/variational-inference-with-normalizing-flows"
"bojone/flow" -> "aravindsrinivas/flowpp"
"bojone/flow" -> "tonyduan/normalizing-flows"
"bojone/flow" -> "paultsw/nice_pytorch"
"bojone/flow" -> "chrischute/real-nvp"
"stan-dev/example-models" -> "stan-dev/stan"
"stan-dev/example-models" -> "stan-dev/rstan"
"stan-dev/example-models" -> "paul-buerkner/brms"
"stan-dev/example-models" -> "avehtari/BDA_R_demos"
"stan-dev/example-models" -> "stan-dev/stancon_talks"
"stan-dev/example-models" -> "stan-dev/rstanarm"
"stan-dev/example-models" -> "rmcelreath/rethinking"
"stan-dev/example-models" -> "stan-dev/bayesplot"
"stan-dev/example-models" -> "sinhrks/stan-statespace"
"stan-dev/example-models" -> "bob-carpenter/prob-stats"
"stan-dev/example-models" -> "stan-dev/pystan"
"stan-dev/example-models" -> "mjskay/tidybayes"
"stan-dev/example-models" -> "betanalpha/knitr_case_studies"
"stan-dev/example-models" -> "avehtari/BDA_course_Aalto"
"stan-dev/example-models" -> "rmcelreath/statrethinking_winter2019"
"tonyduan/normalizing-flows" -> "kamenbliznashki/normalizing_flows"
"tonyduan/normalizing-flows" -> "bayesiains/nsf"
"tonyduan/normalizing-flows" -> "bayesiains/nflows"
"tonyduan/normalizing-flows" -> "LukasRinder/normalizing-flows"
"tonyduan/normalizing-flows" -> "ex4sperans/variational-inference-with-normalizing-flows"
"tonyduan/normalizing-flows" -> "karpathy/pytorch-normalizing-flows"
"tonyduan/normalizing-flows" -> "didriknielsen/survae_flows"
"tonyduan/normalizing-flows" -> "chrischute/real-nvp"
"tonyduan/normalizing-flows" -> "nicola-decao/BNAF"
"tonyduan/normalizing-flows" -> "ikostrikov/pytorch-flows"
"tonyduan/normalizing-flows" -> "abdulfatir/normalizing-flows"
"tonyduan/normalizing-flows" -> "gpapamak/maf"
"tonyduan/normalizing-flows" -> "TrentBrick/PyTorchDiscreteFlows"
"tonyduan/normalizing-flows" -> "ericjang/normalizing-flows-tutorial"
"tonyduan/normalizing-flows" -> "acids-ircam/pytorch_flows"
"dfm/extending-jax" -> "jax-ml/jax-triton"
"dfm/extending-jax" -> "mpi4jax/mpi4jax"
"dfm/extending-jax" -> "google/tree-math"
"dfm/extending-jax" -> "cgarciae/treex"
"dfm/extending-jax" -> "NeilGirdhar/tjax"
"dfm/extending-jax" -> "google/jaxopt"
"dfm/extending-jax" -> "brentyi/jaxlie"
"dfm/extending-jax" -> "deepmind/chex"
"dfm/extending-jax" -> "brentyi/jaxfg"
"dfm/extending-jax" -> "google/jaxtyping"
"dfm/extending-jax" -> "cgarciae/simple-pytree"
"dfm/extending-jax" -> "deepmind/distrax"
"jax-ml/jax-triton" -> "ayaka14732/jax-smi"
"jax-ml/jax-triton" -> "dfm/extending-jax"
"jax-ml/jax-triton" -> "Sea-Snell/JAXSeq"
"ericmjl/bayesian-stats-modelling-tutorial" -> "ericmjl/bayesian-analysis-recipes"
"ericmjl/bayesian-stats-modelling-tutorial" -> "hugobowne/deep-learning-from-scratch-pytorch" ["e"=1]
"ericmjl/bayesian-stats-modelling-tutorial" -> "fonnesbeck/intro_stat_modeling_2017"
"ericmjl/bayesian-stats-modelling-tutorial" -> "pymc-devs/resources"
"ericmjl/bayesian-stats-modelling-tutorial" -> "aloctavodia/BAP"
"ericmjl/bayesian-stats-modelling-tutorial" -> "ericmjl/Network-Analysis-Made-Simple"
"ericmjl/bayesian-stats-modelling-tutorial" -> "canyon289/bayesian-model-evaluation"
"ericmjl/bayesian-stats-modelling-tutorial" -> "jupyter-widgets/tutorial" ["e"=1]
"ericmjl/bayesian-stats-modelling-tutorial" -> "JWarmenhoven/DBDA-python"
"ericmjl/bayesian-stats-modelling-tutorial" -> "ericmjl/dl-workshop"
"ericmjl/bayesian-stats-modelling-tutorial" -> "aloctavodia/Doing_bayesian_data_analysis"
"ericmjl/bayesian-stats-modelling-tutorial" -> "bambinos/bambi"
"ericmjl/bayesian-stats-modelling-tutorial" -> "aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3"
"ericmjl/bayesian-stats-modelling-tutorial" -> "markdregan/Bayesian-Modelling-in-Python"
"ericmjl/bayesian-stats-modelling-tutorial" -> "luke14free/pm-prophet"
"stan-dev/bayesplot" -> "mjskay/tidybayes"
"stan-dev/bayesplot" -> "easystats/bayestestR" ["e"=1]
"stan-dev/bayesplot" -> "stan-dev/rstanarm"
"stan-dev/bayesplot" -> "stan-dev/loo"
"stan-dev/bayesplot" -> "stan-dev/posterior"
"stan-dev/bayesplot" -> "paul-buerkner/brms"
"stan-dev/bayesplot" -> "easystats/modelbased" ["e"=1]
"stan-dev/bayesplot" -> "easystats/parameters" ["e"=1]
"stan-dev/bayesplot" -> "strengejacke/ggeffects" ["e"=1]
"stan-dev/bayesplot" -> "mjskay/ggdist" ["e"=1]
"stan-dev/bayesplot" -> "easystats/see" ["e"=1]
"stan-dev/bayesplot" -> "easystats/insight" ["e"=1]
"stan-dev/bayesplot" -> "easystats/effectsize" ["e"=1]
"stan-dev/bayesplot" -> "tidymodels/infer" ["e"=1]
"stan-dev/bayesplot" -> "easystats/correlation" ["e"=1]
"locuslab/trellisnet" -> "locuslab/deq"
"locuslab/trellisnet" -> "ofirpress/YouMayNotNeedAttention"
"locuslab/trellisnet" -> "locuslab/TCN" ["e"=1]
"locuslab/trellisnet" -> "haohy/TCAN" ["e"=1]
"Zymrael/awesome-neural-ode" -> "DiffEqML/torchdyn"
"Zymrael/awesome-neural-ode" -> "EmilienDupont/augmented-neural-odes"
"Zymrael/awesome-neural-ode" -> "patrick-kidger/NeuralCDE"
"Zymrael/awesome-neural-ode" -> "rtqichen/torchdiffeq"
"Zymrael/awesome-neural-ode" -> "msurtsukov/neural-ode"
"Zymrael/awesome-neural-ode" -> "google-research/torchsde"
"Zymrael/awesome-neural-ode" -> "YuliaRubanova/latent_ode"
"Zymrael/awesome-neural-ode" -> "patrick-kidger/torchcde"
"Zymrael/awesome-neural-ode" -> "jacobjinkelly/easy-neural-ode"
"Zymrael/awesome-neural-ode" -> "rtqichen/ffjord"
"Zymrael/awesome-neural-ode" -> "2prime/ODE-DL"
"Zymrael/awesome-neural-ode" -> "janosh/awesome-normalizing-flows"
"Zymrael/awesome-neural-ode" -> "Zymrael/gde"
"Zymrael/awesome-neural-ode" -> "tum-pbs/PhiFlow" ["e"=1]
"Zymrael/awesome-neural-ode" -> "patrick-kidger/diffrax"
"aloctavodia/Doing_bayesian_data_analysis" -> "JWarmenhoven/DBDA-python"
"aloctavodia/Doing_bayesian_data_analysis" -> "aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3"
"aloctavodia/Doing_bayesian_data_analysis" -> "markdregan/Bayesian-Modelling-in-Python"
"aloctavodia/Doing_bayesian_data_analysis" -> "pymc-devs/resources"
"aloctavodia/Doing_bayesian_data_analysis" -> "bambinos/bambi"
"aloctavodia/Doing_bayesian_data_analysis" -> "aloctavodia/BAP"
"aloctavodia/Doing_bayesian_data_analysis" -> "avehtari/BDA_py_demos"
"aloctavodia/Doing_bayesian_data_analysis" -> "ericmjl/bayesian-analysis-recipes"
"aloctavodia/Doing_bayesian_data_analysis" -> "fonnesbeck/scipy2014_tutorial"
"aloctavodia/Doing_bayesian_data_analysis" -> "pymc-devs/pymc3" ["e"=1]
"aloctavodia/Doing_bayesian_data_analysis" -> "strawlab/best"
"aloctavodia/Doing_bayesian_data_analysis" -> "pymc-devs/pymc4"
"aloctavodia/Doing_bayesian_data_analysis" -> "arviz-devs/arviz"
"aloctavodia/Doing_bayesian_data_analysis" -> "junpenglao/advance-bayesian-modelling-with-PyMC3"
"aloctavodia/Doing_bayesian_data_analysis" -> "junpenglao/Bayesian-Cognitive-Modeling-in-Pymc3"
"strawlab/best" -> "erikson84/BayesDataAnalysisWithPyMC"
"amueller/COMS4995-s20" -> "amueller/COMS4995-s19"
"chaiyujin/glow-pytorch" -> "rosinality/glow-pytorch"
"chaiyujin/glow-pytorch" -> "y0ast/Glow-PyTorch"
"chaiyujin/glow-pytorch" -> "chrischute/real-nvp"
"chaiyujin/glow-pytorch" -> "kamenbliznashki/normalizing_flows"
"chaiyujin/glow-pytorch" -> "openai/glow" ["e"=1]
"chaiyujin/glow-pytorch" -> "chrischute/glow"
"chaiyujin/glow-pytorch" -> "pclucas14/pytorch-glow"
"chaiyujin/glow-pytorch" -> "jhjacobsen/invertible-resnet"
"chaiyujin/glow-pytorch" -> "ikostrikov/pytorch-flows"
"chaiyujin/glow-pytorch" -> "andreas128/SRFlow" ["e"=1]
"chaiyujin/glow-pytorch" -> "rtqichen/ffjord"
"chaiyujin/glow-pytorch" -> "rtqichen/residual-flows"
"chaiyujin/glow-pytorch" -> "corenel/pytorch-glow"
"chaiyujin/glow-pytorch" -> "aravindsrinivas/flowpp"
"chaiyujin/glow-pytorch" -> "ericjang/normalizing-flows-tutorial"
"balajiln/mondrianforest" -> "amirsaffari/online-random-forests"
"balajiln/mondrianforest" -> "nel215/mondrianforest"
"balajiln/mondrianforest" -> "amirsaffari/online-multiclass-lpboost"
"balajiln/mondrianforest" -> "scikit-garden/scikit-garden"
"rtqichen/residual-flows" -> "jhjacobsen/invertible-resnet"
"rtqichen/residual-flows" -> "didriknielsen/survae_flows"
"rtqichen/residual-flows" -> "bayesiains/nsf"
"rtqichen/residual-flows" -> "rtqichen/ffjord"
"rtqichen/residual-flows" -> "ikostrikov/pytorch-flows"
"rtqichen/residual-flows" -> "rosinality/glow-pytorch"
"rtqichen/residual-flows" -> "kamenbliznashki/normalizing_flows"
"rtqichen/residual-flows" -> "PolinaKirichenko/flows_ood"
"rtqichen/residual-flows" -> "y0ast/Glow-PyTorch"
"rtqichen/residual-flows" -> "harvardnlp/TextFlow"
"rtqichen/residual-flows" -> "aravindsrinivas/flowpp"
"rtqichen/residual-flows" -> "chrischute/glow"
"rtqichen/residual-flows" -> "chaiyujin/glow-pytorch"
"rtqichen/residual-flows" -> "karpathy/pytorch-normalizing-flows"
"rtqichen/residual-flows" -> "jhjacobsen/pytorch-i-revnet"
"jonasrauber/eagerpy" -> "deepmind/distrax"
"jonasrauber/eagerpy" -> "bethgelab/foolbox" ["e"=1]
"jonasrauber/eagerpy" -> "google/objax"
"jonasrauber/eagerpy" -> "poets-ai/elegy"
"jonasrauber/eagerpy" -> "patrick-kidger/equinox"
"jonasrauber/eagerpy" -> "mackelab/sbi"
"jonasrauber/eagerpy" -> "deepmind/chex"
"jonasrauber/eagerpy" -> "getkeops/keops" ["e"=1]
"jonasrauber/eagerpy" -> "rlouf/mcx"
"jonasrauber/eagerpy" -> "pyro-ppl/numpyro"
"jonasrauber/eagerpy" -> "deepmind/dm-haiku"
"jonasrauber/eagerpy" -> "pytorch/functorch"
"jonasrauber/eagerpy" -> "f-dangel/backpack" ["e"=1]
"jonasrauber/eagerpy" -> "pytorch/data"
"jonasrauber/eagerpy" -> "microsoft/robust-models-transfer" ["e"=1]
"google/learned_optimization" -> "xl0/lovely-tensors" ["e"=1]
"google/learned_optimization" -> "RobertTLange/evosax" ["e"=1]
"google/learned_optimization" -> "RobertTLange/gymnax" ["e"=1]
"google/learned_optimization" -> "google/vizier"
"google/learned_optimization" -> "run-ai/genv" ["e"=1]
"google/learned_optimization" -> "nnaisense/evotorch" ["e"=1]
"google/learned_optimization" -> "google/jaxopt"
"google/learned_optimization" -> "kach/gradient-descent-the-ultimate-optimizer"
"google/learned_optimization" -> "vopani/jaxton"
"google/learned_optimization" -> "HazyResearch/H3" ["e"=1]
"google/learned_optimization" -> "gordicaleksa/get-started-with-JAX"
"google/learned_optimization" -> "lucidrains/lion-pytorch" ["e"=1]
"google/learned_optimization" -> "mosaicml/composer" ["e"=1]
"google/learned_optimization" -> "deepmind/optax"
"google/learned_optimization" -> "n2cholas/awesome-jax"
"WestHealth/pyvis" -> "plotly/dash-cytoscape" ["e"=1]
"WestHealth/pyvis" -> "imohitmayank/jaal"
"WestHealth/pyvis" -> "Zsailer/nx_altair"
"WestHealth/pyvis" -> "benmaier/netwulf"
"WestHealth/pyvis" -> "ericmjl/nxviz"
"WestHealth/pyvis" -> "jhwang1992/network-visualization"
"WestHealth/pyvis" -> "paulbrodersen/netgraph"
"WestHealth/pyvis" -> "sknetwork-team/scikit-network" ["e"=1]
"WestHealth/pyvis" -> "GiulioRossetti/cdlib" ["e"=1]
"WestHealth/pyvis" -> "erdogant/d3graph"
"WestHealth/pyvis" -> "ChrisChross/streamlit-agraph"
"WestHealth/pyvis" -> "holoviz/holoviews" ["e"=1]
"WestHealth/pyvis" -> "benedekrozemberczki/karateclub" ["e"=1]
"WestHealth/pyvis" -> "GiulioRossetti/ndlib"
"WestHealth/pyvis" -> "graphistry/pygraphistry" ["e"=1]
"rosinality/glow-pytorch" -> "chaiyujin/glow-pytorch"
"rosinality/glow-pytorch" -> "y0ast/Glow-PyTorch"
"rosinality/glow-pytorch" -> "kamenbliznashki/normalizing_flows"
"rosinality/glow-pytorch" -> "chrischute/real-nvp"
"rosinality/glow-pytorch" -> "ikostrikov/pytorch-flows"
"rosinality/glow-pytorch" -> "rtqichen/residual-flows"
"rosinality/glow-pytorch" -> "chrischute/glow"
"rosinality/glow-pytorch" -> "openai/glow" ["e"=1]
"rosinality/glow-pytorch" -> "fmu2/realNVP"
"rosinality/glow-pytorch" -> "jhjacobsen/invertible-resnet"
"rosinality/glow-pytorch" -> "bayesiains/nflows"
"rosinality/glow-pytorch" -> "karpathy/pytorch-normalizing-flows"
"rosinality/glow-pytorch" -> "didriknielsen/survae_flows"
"rosinality/glow-pytorch" -> "gpapamak/maf"
"rosinality/glow-pytorch" -> "andreas128/SRFlow" ["e"=1]
"nkoub/multinetx" -> "bolozna/Multilayer-networks-library"
"nkoub/multinetx" -> "SkBlaz/py3plex"
"nkoub/multinetx" -> "manlius/muxViz"
"nkoub/multinetx" -> "SkBlaz/Py3plex"
"nkoub/multinetx" -> "jkbren/matplotlib-multilayer-network"
"nkoub/multinetx" -> "GiulioRossetti/dynetx"
"nkoub/multinetx" -> "mplex/multiplex"
"nkoub/multinetx" -> "deepgraph/deepgraph"
"joelgrus/joelnet" -> "joelgrus/autograd"
"deepmind/dm_alchemy" -> "dido1998/CausalMBRL"
"deepmind/launchpad" -> "deepmind/reverb" ["e"=1]
"deepmind/launchpad" -> "deepmind/distrax"
"deepmind/launchpad" -> "deepmind/chex"
"deepmind/launchpad" -> "deepmind/xmanager"
"deepmind/launchpad" -> "deepmind/rlax"
"avehtari/BDA_R_demos" -> "avehtari/BDA_py_demos"
"avehtari/BDA_R_demos" -> "avehtari/BDA_course_Aalto"
"avehtari/BDA_R_demos" -> "stan-dev/example-models"
"avehtari/BDA_R_demos" -> "rmcelreath/rethinking"
"avehtari/BDA_R_demos" -> "mjskay/tidybayes"
"avehtari/BDA_R_demos" -> "stan-dev/stancon_talks"
"avehtari/BDA_R_demos" -> "paul-buerkner/brms"
"avehtari/BDA_R_demos" -> "avehtari/modelselection"
"avehtari/BDA_R_demos" -> "stan-dev/rstanarm"
"avehtari/BDA_R_demos" -> "stan-dev/rstan"
"avehtari/BDA_R_demos" -> "ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse"
"avehtari/BDA_R_demos" -> "jhoupt/DBDA2Estan"
"avehtari/BDA_R_demos" -> "stan-dev/stan"
"avehtari/BDA_R_demos" -> "avehtari/BDA_m_demos"
"avehtari/BDA_R_demos" -> "malcolmbarrett/ggdag" ["e"=1]
"avehtari/ROS-Examples" -> "avehtari/modelselection"
"avehtari/ROS-Examples" -> "NickCH-K/causalbook" ["e"=1]
"avehtari/ROS-Examples" -> "behrman/ros"
"avehtari/ROS-Examples" -> "bambinos/Bambi_resources"
"avehtari/ROS-Examples" -> "avehtari/BDA_R_demos"
"bob-carpenter/prob-stats" -> "sinhrks/stan-statespace"
"bob-carpenter/prob-stats" -> "avehtari/modelselection_tutorial"
"bob-carpenter/prob-stats" -> "avehtari/RAOS-Examples"
"bob-carpenter/prob-stats" -> "betanalpha/stan_intro"
"bob-carpenter/prob-stats" -> "stan-dev/example-models"
"bob-carpenter/prob-stats" -> "stan-dev/rstanarm"
"bob-carpenter/prob-stats" -> "MansMeg/posteriordb"
"bob-carpenter/prob-stats" -> "hammerlab/survivalstan"
"fehiepsi/rethinking-numpyro" -> "pyro-ppl/numpyro"
"fehiepsi/rethinking-numpyro" -> "fehiepsi/rethinking-pyro"
"fehiepsi/rethinking-numpyro" -> "ksachdeva/rethinking-tensorflow-probability"
"fehiepsi/rethinking-numpyro" -> "rlouf/mcx"
"fehiepsi/rethinking-numpyro" -> "deepmind/distrax"
"fehiepsi/rethinking-numpyro" -> "blackjax-devs/blackjax"
"fehiepsi/rethinking-numpyro" -> "dfm/tinygp"
"fehiepsi/rethinking-numpyro" -> "google/edward2"
"fehiepsi/rethinking-numpyro" -> "jeremiecoullon/SGMCMCJax"
"fehiepsi/rethinking-numpyro" -> "ColCarroll/minimc"
"fehiepsi/rethinking-numpyro" -> "pymc-devs/resources"
"fehiepsi/rethinking-numpyro" -> "probml/dynamax"
"fehiepsi/rethinking-numpyro" -> "pymc-devs/pymc4"
"fehiepsi/rethinking-numpyro" -> "asuagar/statrethink-course-numpyro-2019"
"fehiepsi/rethinking-numpyro" -> "bambinos/bambi"
"DiffEqML/torchdyn" -> "Zymrael/awesome-neural-ode"
"DiffEqML/torchdyn" -> "google-research/torchsde"
"DiffEqML/torchdyn" -> "rtqichen/torchdiffeq"
"DiffEqML/torchdyn" -> "patrick-kidger/NeuralCDE"
"DiffEqML/torchdyn" -> "patrick-kidger/diffrax"
"DiffEqML/torchdyn" -> "patrick-kidger/torchcde"
"DiffEqML/torchdyn" -> "EmilienDupont/augmented-neural-odes"
"DiffEqML/torchdyn" -> "rtqichen/ffjord"
"DiffEqML/torchdyn" -> "tum-pbs/PhiFlow" ["e"=1]
"DiffEqML/torchdyn" -> "bayesiains/nflows"
"DiffEqML/torchdyn" -> "msurtsukov/neural-ode"
"DiffEqML/torchdyn" -> "jacobjinkelly/easy-neural-ode"
"DiffEqML/torchdyn" -> "YuliaRubanova/latent_ode"
"DiffEqML/torchdyn" -> "cvxgrp/cvxpylayers" ["e"=1]
"DiffEqML/torchdyn" -> "SciML/DiffEqFlux.jl" ["e"=1]
"YannDubs/Neural-Process-Family" -> "cambridge-mlg/convcnp"
"YannDubs/Neural-Process-Family" -> "EmilienDupont/neural-processes"
"YannDubs/Neural-Process-Family" -> "wesselb/NeuralProcesses.jl"
"YannDubs/Neural-Process-Family" -> "wesselb/neuralprocesses"
"YannDubs/Neural-Process-Family" -> "deepmind/neural-processes"
"YannDubs/Neural-Process-Family" -> "soobinseo/Attentive-Neural-Process"
"YannDubs/Neural-Process-Family" -> "AMLab-Amsterdam/FNP"
"YannDubs/Neural-Process-Family" -> "makora9143/pytorch-convcnp"
"YannDubs/Neural-Process-Family" -> "crisbodnar/ndp"
"YannDubs/Neural-Process-Family" -> "tung-nd/TNP-pytorch"
"YannDubs/Neural-Process-Family" -> "3springs/attentive-neural-processes"
"pytorch/functorch" -> "pytorch/data"
"pytorch/functorch" -> "patrick-kidger/equinox"
"pytorch/functorch" -> "pytorch/torchdynamo" ["e"=1]
"pytorch/functorch" -> "google/flax"
"pytorch/functorch" -> "patrick-kidger/diffrax"
"pytorch/functorch" -> "facebookresearch/torchdim"
"pytorch/functorch" -> "deepmind/optax"
"pytorch/functorch" -> "deepmind/dm-haiku"
"pytorch/functorch" -> "patrick-kidger/torchtyping" ["e"=1]
"pytorch/functorch" -> "n2cholas/awesome-jax"
"pytorch/functorch" -> "facebookresearch/fairscale" ["e"=1]
"pytorch/functorch" -> "google/jaxopt"
"pytorch/functorch" -> "google-research/torchsde"
"pytorch/functorch" -> "deepmind/chex"
"pytorch/functorch" -> "DiffEqML/torchdyn"
"wiseodd/probabilistic-models" -> "wiseodd/MCMC"
"amirsaffari/online-random-forests" -> "amirsaffari/online-multiclass-lpboost"
"amirsaffari/online-random-forests" -> "nel215/mondrianforest"
"amirsaffari/online-random-forests" -> "balajiln/mondrianforest"
"amueller/ml-training-advanced" -> "amueller/ml-training-intro"
"predictive-analytics-lab/data-science-types" -> "numpy/numpy-stubs"
"stan-dev/rstan" -> "stan-dev/stan"
"stan-dev/rstan" -> "stan-dev/rstanarm"
"stan-dev/rstan" -> "paul-buerkner/brms"
"stan-dev/rstan" -> "stan-dev/example-models"
"stan-dev/rstan" -> "stan-dev/bayesplot"
"stan-dev/rstan" -> "rmcelreath/rethinking"
"stan-dev/rstan" -> "avehtari/BDA_R_demos"
"stan-dev/rstan" -> "stan-dev/pystan"
"stan-dev/rstan" -> "mjskay/tidybayes"
"stan-dev/rstan" -> "stan-dev/shinystan"
"stan-dev/rstan" -> "RcppCore/Rcpp" ["e"=1]
"stan-dev/rstan" -> "HenrikBengtsson/future" ["e"=1]
"stan-dev/rstan" -> "rich-iannone/DiagrammeR" ["e"=1]
"stan-dev/rstan" -> "stan-dev/stancon_talks"
"stan-dev/rstan" -> "lme4/lme4" ["e"=1]
"patrick-kidger/equinox" -> "patrick-kidger/diffrax"
"patrick-kidger/equinox" -> "google/jaxtyping"
"patrick-kidger/equinox" -> "deepmind/optax"
"patrick-kidger/equinox" -> "google/jaxopt"
"patrick-kidger/equinox" -> "deepmind/chex"
"patrick-kidger/equinox" -> "deepmind/dm-haiku"
"patrick-kidger/equinox" -> "n2cholas/awesome-jax"
"patrick-kidger/equinox" -> "deepmind/distrax"
"patrick-kidger/equinox" -> "pytorch/functorch"
"patrick-kidger/equinox" -> "google/flax"
"patrick-kidger/equinox" -> "pyro-ppl/numpyro"
"patrick-kidger/equinox" -> "blackjax-devs/blackjax"
"patrick-kidger/equinox" -> "google/objax"
"patrick-kidger/equinox" -> "cgarciae/treex"
"patrick-kidger/equinox" -> "google/sympy2jax"
"Rachnog/Neural-ODE-Experiments" -> "msurtsukov/neural-ode"
"Rachnog/Neural-ODE-Experiments" -> "EmilienDupont/augmented-neural-odes"
"rr-learning/CausalWorld" -> "dido1998/CausalMBRL"
"rr-learning/CausalWorld" -> "martius-lab/cid-in-rl"
"ericmjl/Network-Analysis-Made-Simple" -> "ericmjl/nxviz"
"ericmjl/Network-Analysis-Made-Simple" -> "ericmjl/bayesian-stats-modelling-tutorial"
"ericmjl/Network-Analysis-Made-Simple" -> "briatte/awesome-network-analysis" ["e"=1]
"ericmjl/Network-Analysis-Made-Simple" -> "ericmjl/bayesian-analysis-recipes"
"ericmjl/Network-Analysis-Made-Simple" -> "aloctavodia/Doing_bayesian_data_analysis"
"ericmjl/Network-Analysis-Made-Simple" -> "jupyter-widgets/tutorial" ["e"=1]
"ericmjl/Network-Analysis-Made-Simple" -> "amueller/ml-workshop-3-of-4"
"ericmjl/Network-Analysis-Made-Simple" -> "amueller/ml-workshop-4-of-4"
"ericmjl/Network-Analysis-Made-Simple" -> "aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3"
"ericmjl/Network-Analysis-Made-Simple" -> "MridulS/pydata-networkx"
"ericmjl/Network-Analysis-Made-Simple" -> "GiulioRossetti/ndlib"
"ericmjl/Network-Analysis-Made-Simple" -> "nkoub/multinetx"
"ericmjl/Network-Analysis-Made-Simple" -> "ericmjl/pyjanitor" ["e"=1]
"ericmjl/Network-Analysis-Made-Simple" -> "AllenDowney/BayesMadeSimple" ["e"=1]
"ericmjl/Network-Analysis-Made-Simple" -> "CambridgeUniversityPress/FirstCourseNetworkScience"
"phlippe/uvadlc_notebooks" -> "janosh/awesome-normalizing-flows"
"phlippe/uvadlc_notebooks" -> "deepmind/dm-haiku"
"phlippe/uvadlc_notebooks" -> "phlippe/UvA_Summaries"
"phlippe/uvadlc_notebooks" -> "vahidk/EffectivePyTorch" ["e"=1]
"phlippe/uvadlc_notebooks" -> "deepmind/distrax"
"phlippe/uvadlc_notebooks" -> "google/flax"
"phlippe/uvadlc_notebooks" -> "patrick-kidger/equinox"
"phlippe/uvadlc_notebooks" -> "learnables/learn2learn" ["e"=1]
"phlippe/uvadlc_notebooks" -> "NielsRogge/Transformers-Tutorials" ["e"=1]
"phlippe/uvadlc_notebooks" -> "e3nn/e3nn" ["e"=1]
"phlippe/uvadlc_notebooks" -> "deepmind/optax"
"phlippe/uvadlc_notebooks" -> "n2cholas/awesome-jax"
"phlippe/uvadlc_notebooks" -> "benedekrozemberczki/pytorch_geometric_temporal" ["e"=1]
"phlippe/uvadlc_notebooks" -> "deepmind/educational" ["e"=1]
"phlippe/uvadlc_notebooks" -> "dair-ai/Transformers-Recipe" ["e"=1]
"chrischute/real-nvp" -> "fmu2/realNVP"
"chrischute/real-nvp" -> "chrischute/glow"
"chrischute/real-nvp" -> "senya-ashukha/real-nvp-pytorch"
"chrischute/real-nvp" -> "chaiyujin/glow-pytorch"
"chrischute/real-nvp" -> "rosinality/glow-pytorch"
"chrischute/real-nvp" -> "tonyduan/normalizing-flows"
"chrischute/real-nvp" -> "kamenbliznashki/normalizing_flows"
"chrischute/real-nvp" -> "didriknielsen/survae_flows"
"chrischute/real-nvp" -> "ikostrikov/pytorch-flows"
"chrischute/real-nvp" -> "y0ast/Glow-PyTorch"
"chrischute/real-nvp" -> "bayesiains/nsf"
"chrischute/real-nvp" -> "ex4sperans/variational-inference-with-normalizing-flows"
"chrischute/real-nvp" -> "gpapamak/maf"
"chrischute/real-nvp" -> "paultsw/nice_pytorch"
"chrischute/real-nvp" -> "rtqichen/ffjord"
"senya-ashukha/real-nvp-pytorch" -> "chrischute/real-nvp"
"JamesRitchie/scikit-rvm" -> "AmazaspShumik/sklearn-bayes"
"JamesRitchie/scikit-rvm" -> "Mind-the-Pineapple/sklearn-rvm"
"szymonmaszke/torchdata" -> "szymonmaszke/torchfunc"
"szymonmaszke/torchdata" -> "Vermeille/Torchelie"
"gordicaleksa/get-started-with-JAX" -> "n2cholas/awesome-jax"
"gordicaleksa/get-started-with-JAX" -> "vopani/jaxton"
"gordicaleksa/get-started-with-JAX" -> "AakashKumarNain/TF_JAX_tutorials"
"gordicaleksa/get-started-with-JAX" -> "RobertTLange/evosax" ["e"=1]
"gordicaleksa/get-started-with-JAX" -> "RobertTLange/gymnax" ["e"=1]
"gordicaleksa/get-started-with-JAX" -> "google/jaxtyping"
"gordicaleksa/get-started-with-JAX" -> "deepmind/dm-haiku"
"gordicaleksa/get-started-with-JAX" -> "google/learned_optimization"
"gordicaleksa/get-started-with-JAX" -> "google/flax"
"fonnesbeck/scipy2014_tutorial" -> "aloctavodia/Doing_bayesian_data_analysis"
"fonnesbeck/scipy2014_tutorial" -> "markdregan/Bayesian-Modelling-in-Python"
"fonnesbeck/scipy2014_tutorial" -> "ericmjl/bayesian-analysis-recipes"
"fonnesbeck/scipy2014_tutorial" -> "fonnesbeck/Bios8366" ["e"=1]
"fonnesbeck/scipy2014_tutorial" -> "fonnesbeck/intro_stat_modeling_2017"
"fonnesbeck/scipy2014_tutorial" -> "fonnesbeck/statistical-analysis-python-tutorial" ["e"=1]
"fonnesbeck/scipy2014_tutorial" -> "fonnesbeck/PyMC3_DataScienceLA"
"VLL-HD/FrEIA" -> "VLL-HD/analyzing_inverse_problems"
"VLL-HD/FrEIA" -> "jhjacobsen/invertible-resnet"
"VLL-HD/FrEIA" -> "VLL-HD/conditional_INNs"
"VLL-HD/FrEIA" -> "gudovskiy/cflow-ad" ["e"=1]
"VLL-HD/FrEIA" -> "janosh/awesome-normalizing-flows"
"VLL-HD/FrEIA" -> "silvandeleemput/memcnn"
"VLL-HD/FrEIA" -> "kamenbliznashki/normalizing_flows"
"VLL-HD/FrEIA" -> "didriknielsen/survae_flows"
"VLL-HD/FrEIA" -> "bayesiains/nflows"
"VLL-HD/FrEIA" -> "pkuxmq/Invertible-Image-Rescaling" ["e"=1]
"VLL-HD/FrEIA" -> "marco-rudolph/differnet" ["e"=1]
"VLL-HD/FrEIA" -> "rosinality/glow-pytorch"
"VLL-HD/FrEIA" -> "jhjacobsen/pytorch-i-revnet"
"VLL-HD/FrEIA" -> "andreas128/SRFlow" ["e"=1]
"VLL-HD/FrEIA" -> "chrischute/real-nvp"
"stan-dev/math" -> "stan-dev/stan"
"stan-dev/math" -> "stan-dev/cmdstan"
"stan-dev/math" -> "autodiff/autodiff" ["e"=1]
"stan-dev/math" -> "stan-dev/stanc3"
"stan-dev/math" -> "stan-dev/cmdstanpy"
"stan-dev/math" -> "rjhogan/Adept-2"
"stan-dev/math" -> "PatWie/CppNumericalSolvers" ["e"=1]
"stan-dev/math" -> "rjhogan/Adept"
"stan-dev/math" -> "stan-dev/stancon_talks"
"stan-dev/math" -> "syclik/stan-algorithms"
"stan-dev/math" -> "yixuan/LBFGSpp" ["e"=1]
"stan-dev/math" -> "stan-dev/design-docs"
"stan-dev/math" -> "stan-dev/rstan"
"stan-dev/math" -> "stan-dev/pystan"
"stan-dev/math" -> "stan-dev/cmdstanr"
"amueller/COMS4995-s19" -> "amueller/ml-workshop-3-of-4"
"amueller/COMS4995-s19" -> "amueller/ml-workshop-2-of-4"
"amueller/COMS4995-s19" -> "amueller/ml-workshop-4-of-4"
"amueller/COMS4995-s19" -> "amueller/COMS4995-s18"
"amueller/COMS4995-s19" -> "amueller/ml-training-advanced"
"amueller/COMS4995-s19" -> "amueller/COMS4995-s20"
"amueller/COMS4995-s19" -> "amueller/ml-workshop-1-of-4"
"mandubian/neural-ode" -> "jason71995/Keras_ODENet"
"BayesianModelingandComputationInPython/BookCode_Edition1" -> "arviz-devs/arviz"
"BayesianModelingandComputationInPython/BookCode_Edition1" -> "bambinos/bambi"
"BayesianModelingandComputationInPython/BookCode_Edition1" -> "pymc-devs/resources"
"BayesianModelingandComputationInPython/BookCode_Edition1" -> "pymc-devs/pymc-examples"
"BayesianModelingandComputationInPython/BookCode_Edition1" -> "fehiepsi/rethinking-numpyro"
"BayesianModelingandComputationInPython/BookCode_Edition1" -> "pymc-devs/pymc-resources"
"BayesianModelingandComputationInPython/BookCode_Edition1" -> "aloctavodia/BAP"
"BayesianModelingandComputationInPython/BookCode_Edition1" -> "blackjax-devs/blackjax"
"BayesianModelingandComputationInPython/BookCode_Edition1" -> "arviz-devs/preliz"
"BayesianModelingandComputationInPython/BookCode_Edition1" -> "pymc-devs/pymc-bart"
"bolozna/Multilayer-networks-library" -> "nkoub/multinetx"
"bolozna/Multilayer-networks-library" -> "SkBlaz/py3plex"
"manlius/muxViz" -> "nkoub/multinetx"
"manlius/muxViz" -> "bolozna/Multilayer-networks-library"
"manlius/muxViz" -> "SkBlaz/py3plex"
"manlius/muxViz" -> "KatolaZ/multired"
"manlius/muxViz" -> "frankkramer-lab/mully"
"manlius/muxViz" -> "jdwilson4/MultilayerExtraction"
"manlius/muxViz" -> "netsiphd/netrd"
"manlius/muxViz" -> "jkbren/einet"
"manlius/muxViz" -> "mplex/multiplex"
"manlius/muxViz" -> "KatolaZ/mammult"
"manlius/muxViz" -> "mapequation/infomap" ["e"=1]
"manlius/muxViz" -> "thomasp85/tidygraph" ["e"=1]
"EmilienDupont/augmented-neural-odes" -> "Zymrael/awesome-neural-ode"
"EmilienDupont/augmented-neural-odes" -> "msurtsukov/neural-ode"
"EmilienDupont/augmented-neural-odes" -> "rtqichen/ffjord"
"EmilienDupont/augmented-neural-odes" -> "patrick-kidger/NeuralCDE"
"EmilienDupont/augmented-neural-odes" -> "DiffEqML/torchdyn"
"EmilienDupont/augmented-neural-odes" -> "YuliaRubanova/latent_ode"
"EmilienDupont/augmented-neural-odes" -> "jacobjinkelly/easy-neural-ode"
"EmilienDupont/augmented-neural-odes" -> "rtqichen/torchdiffeq"
"EmilienDupont/augmented-neural-odes" -> "amirgholami/anode"
"EmilienDupont/augmented-neural-odes" -> "patrick-kidger/torchcde"
"EmilienDupont/augmented-neural-odes" -> "cfinlay/ffjord-rnode"
"EmilienDupont/augmented-neural-odes" -> "Rachnog/Neural-ODE-Experiments"
"EmilienDupont/augmented-neural-odes" -> "titu1994/tfdiffeq"
"EmilienDupont/augmented-neural-odes" -> "google-research/torchsde"
"EmilienDupont/augmented-neural-odes" -> "juntang-zhuang/torch_ACA"
"rmcelreath/rethinking" -> "rmcelreath/statrethinking_winter2019"
"rmcelreath/rethinking" -> "paul-buerkner/brms"
"rmcelreath/rethinking" -> "pymc-devs/resources"
"rmcelreath/rethinking" -> "rmcelreath/stat_rethinking_2022"
"rmcelreath/rethinking" -> "rmcelreath/stat_rethinking_2020"
"rmcelreath/rethinking" -> "avehtari/BDA_course_Aalto"
"rmcelreath/rethinking" -> "mjskay/tidybayes"
"rmcelreath/rethinking" -> "ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse"
"rmcelreath/rethinking" -> "stan-dev/rstan"
"rmcelreath/rethinking" -> "aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3"
"rmcelreath/rethinking" -> "avehtari/BDA_R_demos"
"rmcelreath/rethinking" -> "stan-dev/example-models"
"rmcelreath/rethinking" -> "thomasp85/patchwork" ["e"=1]
"rmcelreath/rethinking" -> "rmcelreath/stat_rethinking_2023"
"rmcelreath/rethinking" -> "stan-dev/stan"
"locuslab/deq" -> "locuslab/mdeq"
"locuslab/deq" -> "locuslab/SATNet" ["e"=1]
"locuslab/deq" -> "rtqichen/ffjord"
"locuslab/deq" -> "locuslab/trellisnet"
"locuslab/deq" -> "locuslab/monotone_op_net"
"locuslab/deq" -> "YuliaRubanova/latent_ode"
"locuslab/deq" -> "cvxgrp/cvxpylayers" ["e"=1]
"locuslab/deq" -> "DiffEqML/torchdyn"
"locuslab/deq" -> "Zymrael/awesome-neural-ode"
"locuslab/deq" -> "locuslab/optnet" ["e"=1]
"locuslab/deq" -> "HazyResearch/state-spaces" ["e"=1]
"locuslab/deq" -> "yang-song/score_sde" ["e"=1]
"locuslab/deq" -> "ermongroup/ncsn" ["e"=1]
"locuslab/deq" -> "EmilienDupont/augmented-neural-odes"
"locuslab/deq" -> "google-research/torchsde"
"2prime/ODE-DL" -> "Zymrael/awesome-neural-ode"
"2prime/ODE-DL" -> "ZichaoLong/PDE-Net" ["e"=1]
"2prime/ODE-DL" -> "rtqichen/ffjord"
"2prime/ODE-DL" -> "YuliaRubanova/latent_ode"
"2prime/ODE-DL" -> "2prime/Paper-Reading"
"2prime/ODE-DL" -> "zhuohan123/macaron-net"
"2prime/ODE-DL" -> "EmilienDupont/augmented-neural-odes"
"2prime/ODE-DL" -> "a-norcliffe/sonode"
"rtqichen/ffjord" -> "rtqichen/torchdiffeq"
"rtqichen/ffjord" -> "rtqichen/residual-flows"
"rtqichen/ffjord" -> "EmilienDupont/augmented-neural-odes"
"rtqichen/ffjord" -> "riannevdberg/sylvester-flows"
"rtqichen/ffjord" -> "ikostrikov/pytorch-flows"
"rtqichen/ffjord" -> "jhjacobsen/invertible-resnet"
"rtqichen/ffjord" -> "didriknielsen/survae_flows"
"rtqichen/ffjord" -> "amirgholami/anode"
"rtqichen/ffjord" -> "kamenbliznashki/normalizing_flows"
"rtqichen/ffjord" -> "cfinlay/ffjord-rnode"
"rtqichen/ffjord" -> "DiffEqML/torchdyn"
"rtqichen/ffjord" -> "YuliaRubanova/latent_ode"
"rtqichen/ffjord" -> "google-research/torchsde"
"rtqichen/ffjord" -> "chrischute/real-nvp"
"rtqichen/ffjord" -> "chaiyujin/glow-pytorch"
"tbung/pytorch-revnet" -> "renmengye/revnet-public" ["e"=1]
"zhuohan123/macaron-net" -> "gonglinyuan/StackingBERT"
"szymonmaszke/torchlayers" -> "kwotsin/mimicry" ["e"=1]
"szymonmaszke/torchlayers" -> "szymonmaszke/torchdata"
"szymonmaszke/torchlayers" -> "szymonmaszke/torchfunc"
"szymonmaszke/torchlayers" -> "MIPT-Oulu/solt"
"szymonmaszke/torchlayers" -> "PyTorchLightning/pytorch-lightning-bolts" ["e"=1]
"szymonmaszke/torchlayers" -> "google-research/flax"
"szymonmaszke/torchlayers" -> "huggingface/pytorch_block_sparse" ["e"=1]
"kamenbliznashki/normalizing_flows" -> "tonyduan/normalizing-flows"
"kamenbliznashki/normalizing_flows" -> "bayesiains/nflows"
"kamenbliznashki/normalizing_flows" -> "karpathy/pytorch-normalizing-flows"
"kamenbliznashki/normalizing_flows" -> "didriknielsen/survae_flows"
"kamenbliznashki/normalizing_flows" -> "rosinality/glow-pytorch"
"kamenbliznashki/normalizing_flows" -> "ikostrikov/pytorch-flows"
"kamenbliznashki/normalizing_flows" -> "janosh/awesome-normalizing-flows"
"kamenbliznashki/normalizing_flows" -> "ex4sperans/variational-inference-with-normalizing-flows"
"kamenbliznashki/normalizing_flows" -> "riannevdberg/sylvester-flows"
"kamenbliznashki/normalizing_flows" -> "gpapamak/maf"
"kamenbliznashki/normalizing_flows" -> "nicola-decao/BNAF"
"kamenbliznashki/normalizing_flows" -> "y0ast/Glow-PyTorch"
"kamenbliznashki/normalizing_flows" -> "bayesiains/nsf"
"kamenbliznashki/normalizing_flows" -> "chaiyujin/glow-pytorch"
"kamenbliznashki/normalizing_flows" -> "chrischute/real-nvp"
"fonnesbeck/PyMC3_DataScienceLA" -> "junpenglao/PrecisionWorkshop1_Prep"
"junpenglao/PrecisionWorkshop1_Prep" -> "junpenglao/advance-bayesian-modelling-with-PyMC3"
"junpenglao/PrecisionWorkshop1_Prep" -> "fonnesbeck/PyMC3_DataScienceLA"
"stan-dev/cmdstanr" -> "stan-dev/posterior"
"stan-dev/cmdstanr" -> "stan-dev/cmdstan"
"stan-dev/cmdstanr" -> "stan-dev/rstantools"
"stan-dev/cmdstanr" -> "stan-dev/projpred"
"InvestmentSystems/static-frame" -> "predictive-analytics-lab/data-science-types"
"CedricFR/dataenforce" -> "predictive-analytics-lab/data-science-types"
"netsiphd/netrd" -> "jg-you/plant-pollinator-inference"
"netsiphd/netrd" -> "gstonge/SamplableSet"
"netsiphd/netrd" -> "jg-you/noisy-networks-measurements"
"netsiphd/netrd" -> "jkbren/einet"
"netsiphd/netrd" -> "benmaier/tacoma"
"netsiphd/netrd" -> "barahona-research-group/hcga"
"jason71995/Keras_ODENet" -> "mandubian/neural-ode"
"PacktPublishing/Bayesian-Analysis-with-Python" -> "aloctavodia/BAP"
"PacktPublishing/Bayesian-Analysis-with-Python" -> "PacktPublishing/Bayesian-Analysis-with-Python-Second-Edition"
"karpathy/pytorch-normalizing-flows" -> "kamenbliznashki/normalizing_flows"
"karpathy/pytorch-normalizing-flows" -> "bayesiains/nflows"
"karpathy/pytorch-normalizing-flows" -> "tonyduan/normalizing-flows"
"karpathy/pytorch-normalizing-flows" -> "janosh/awesome-normalizing-flows"
"karpathy/pytorch-normalizing-flows" -> "ikostrikov/pytorch-flows"
"karpathy/pytorch-normalizing-flows" -> "bayesiains/nsf"
"karpathy/pytorch-normalizing-flows" -> "didriknielsen/survae_flows"
"karpathy/pytorch-normalizing-flows" -> "rtqichen/residual-flows"
"karpathy/pytorch-normalizing-flows" -> "ericjang/normalizing-flows-tutorial"
"karpathy/pytorch-normalizing-flows" -> "rosinality/glow-pytorch"
"karpathy/pytorch-normalizing-flows" -> "karpathy/pytorch-made"
"karpathy/pytorch-normalizing-flows" -> "rtqichen/ffjord"
"karpathy/pytorch-normalizing-flows" -> "riannevdberg/sylvester-flows"
"karpathy/pytorch-normalizing-flows" -> "gpapamak/maf"
"karpathy/pytorch-normalizing-flows" -> "LukasRinder/normalizing-flows"
"ex4sperans/variational-inference-with-normalizing-flows" -> "abdulfatir/normalizing-flows"
"ex4sperans/variational-inference-with-normalizing-flows" -> "riannevdberg/sylvester-flows"
"ex4sperans/variational-inference-with-normalizing-flows" -> "tonyduan/normalizing-flows"
"ex4sperans/variational-inference-with-normalizing-flows" -> "kamenbliznashki/normalizing_flows"
"ex4sperans/variational-inference-with-normalizing-flows" -> "ericjang/normalizing-flows-tutorial"
"ex4sperans/variational-inference-with-normalizing-flows" -> "gpapamak/maf"
"ex4sperans/variational-inference-with-normalizing-flows" -> "bayesiains/nsf"
"ex4sperans/variational-inference-with-normalizing-flows" -> "ikostrikov/pytorch-flows"
"ex4sperans/variational-inference-with-normalizing-flows" -> "chrischute/real-nvp"
"ex4sperans/variational-inference-with-normalizing-flows" -> "kefirski/bdir_vae"
"ex4sperans/variational-inference-with-normalizing-flows" -> "jmtomczak/vae_vpflows"
"ex4sperans/variational-inference-with-normalizing-flows" -> "aravindsrinivas/flowpp"
"jhjacobsen/invertible-resnet" -> "rtqichen/residual-flows"
"jhjacobsen/invertible-resnet" -> "jhjacobsen/pytorch-i-revnet"
"jhjacobsen/invertible-resnet" -> "chaiyujin/glow-pytorch"
"jhjacobsen/invertible-resnet" -> "y0ast/Glow-PyTorch"
"jhjacobsen/invertible-resnet" -> "rtqichen/ffjord"
"jhjacobsen/invertible-resnet" -> "VLL-HD/FrEIA"
"jhjacobsen/invertible-resnet" -> "kamenbliznashki/normalizing_flows"
"jhjacobsen/invertible-resnet" -> "silvandeleemput/memcnn"
"jhjacobsen/invertible-resnet" -> "rosinality/glow-pytorch"
"jhjacobsen/invertible-resnet" -> "bayesiains/nsf"
"jhjacobsen/invertible-resnet" -> "chrischute/real-nvp"
"jhjacobsen/invertible-resnet" -> "didriknielsen/survae_flows"
"jhjacobsen/invertible-resnet" -> "ikostrikov/pytorch-flows"
"jhjacobsen/invertible-resnet" -> "CW-Huang/NAF"
"jhjacobsen/invertible-resnet" -> "karpathy/pytorch-normalizing-flows"
"y0ast/Glow-PyTorch" -> "rosinality/glow-pytorch"
"y0ast/Glow-PyTorch" -> "chaiyujin/glow-pytorch"
"y0ast/Glow-PyTorch" -> "kamenbliznashki/normalizing_flows"
"y0ast/Glow-PyTorch" -> "jhjacobsen/invertible-resnet"
"y0ast/Glow-PyTorch" -> "chrischute/real-nvp"
"y0ast/Glow-PyTorch" -> "chrischute/glow"
"y0ast/Glow-PyTorch" -> "rtqichen/residual-flows"
"y0ast/Glow-PyTorch" -> "ikostrikov/pytorch-flows"
"y0ast/Glow-PyTorch" -> "riannevdberg/sylvester-flows"
"y0ast/Glow-PyTorch" -> "aravindsrinivas/flowpp"
"y0ast/Glow-PyTorch" -> "karpathy/pytorch-normalizing-flows"
"y0ast/Glow-PyTorch" -> "gpapamak/maf"
"y0ast/Glow-PyTorch" -> "bayesiains/nsf"
"ericmjl/bayesian-analysis-recipes" -> "ericmjl/bayesian-stats-modelling-tutorial"
"ericmjl/bayesian-analysis-recipes" -> "aloctavodia/BAP"
"ericmjl/bayesian-analysis-recipes" -> "pymc-devs/resources"
"ericmjl/bayesian-analysis-recipes" -> "aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3"
"ericmjl/bayesian-analysis-recipes" -> "luke14free/pm-prophet"
"ericmjl/bayesian-analysis-recipes" -> "ericmjl/bayesian-deep-learning-demystified"
"ericmjl/bayesian-analysis-recipes" -> "aloctavodia/Doing_bayesian_data_analysis"
"ericmjl/bayesian-analysis-recipes" -> "ericmjl/bayesian-stats-talk"
"ericmjl/bayesian-analysis-recipes" -> "pymc-devs/pymc4"
"ericmjl/bayesian-analysis-recipes" -> "parsing-science/pymc3_models"
"ericmjl/bayesian-analysis-recipes" -> "bambinos/bambi"
"ericmjl/bayesian-analysis-recipes" -> "fonnesbeck/Bayes_Computing_Course"
"ericmjl/bayesian-analysis-recipes" -> "junpenglao/advance-bayesian-modelling-with-PyMC3"
"ericmjl/bayesian-analysis-recipes" -> "avehtari/BDA_py_demos"
"ericmjl/bayesian-analysis-recipes" -> "fonnesbeck/scipy2014_tutorial"
"mjskay/tidybayes" -> "stan-dev/bayesplot"
"mjskay/tidybayes" -> "paul-buerkner/brms"
"mjskay/tidybayes" -> "easystats/bayestestR" ["e"=1]
"mjskay/tidybayes" -> "mjskay/ggdist" ["e"=1]
"mjskay/tidybayes" -> "tidymodels/infer" ["e"=1]
"mjskay/tidybayes" -> "strengejacke/ggeffects" ["e"=1]
"mjskay/tidybayes" -> "stan-dev/rstanarm"
"mjskay/tidybayes" -> "easystats/see" ["e"=1]
"mjskay/tidybayes" -> "njtierney/naniar" ["e"=1]
"mjskay/tidybayes" -> "thomasp85/patchwork" ["e"=1]
"mjskay/tidybayes" -> "easystats/performance" ["e"=1]
"mjskay/tidybayes" -> "datalorax/equatiomatic" ["e"=1]
"mjskay/tidybayes" -> "easystats/easystats" ["e"=1]
"mjskay/tidybayes" -> "IndrajeetPatil/ggstatsplot" ["e"=1]
"mjskay/tidybayes" -> "sfirke/janitor" ["e"=1]
"blackjax-devs/blackjax" -> "rlouf/mcx"
"blackjax-devs/blackjax" -> "deepmind/distrax"
"blackjax-devs/blackjax" -> "pyro-ppl/numpyro"
"blackjax-devs/blackjax" -> "jeremiecoullon/SGMCMCJax"
"blackjax-devs/blackjax" -> "aesara-devs/aeppl"
"blackjax-devs/blackjax" -> "thomaspinder/GPJax"
"blackjax-devs/blackjax" -> "jax-ml/oryx"
"blackjax-devs/blackjax" -> "deepmind/optax"
"blackjax-devs/blackjax" -> "probml/dynamax"
"blackjax-devs/blackjax" -> "google/jaxopt"
"blackjax-devs/blackjax" -> "mackelab/sbi"
"blackjax-devs/blackjax" -> "probml/sts-jax"
"blackjax-devs/blackjax" -> "bambinos/bambi"
"blackjax-devs/blackjax" -> "deepmind/chex"
"blackjax-devs/blackjax" -> "blackjax-devs/sampling-book"
"fonnesbeck/intro_stat_modeling_2017" -> "ericmjl/bayesian-stats-modelling-tutorial"
"fonnesbeck/intro_stat_modeling_2017" -> "parsing-science/pymc3_quickstart_guide"
"abdulfatir/normalizing-flows" -> "ex4sperans/variational-inference-with-normalizing-flows"
"abdulfatir/normalizing-flows" -> "ericjang/normalizing-flows-tutorial"
"abdulfatir/normalizing-flows" -> "abdulfatir/planar-flow-pytorch"
"abdulfatir/normalizing-flows" -> "riannevdberg/sylvester-flows"
"acids-ircam/pytorch_flows" -> "riannevdberg/sylvester-flows"
"janosh/awesome-normalizing-flows" -> "bayesiains/nflows"
"janosh/awesome-normalizing-flows" -> "kamenbliznashki/normalizing_flows"
"janosh/awesome-normalizing-flows" -> "VincentStimper/normalizing-flows"
"janosh/awesome-normalizing-flows" -> "karpathy/pytorch-normalizing-flows"
"janosh/awesome-normalizing-flows" -> "facebookincubator/flowtorch"
"janosh/awesome-normalizing-flows" -> "didriknielsen/survae_flows"
"janosh/awesome-normalizing-flows" -> "VLL-HD/FrEIA"
"janosh/awesome-normalizing-flows" -> "tonyduan/normalizing-flows"
"janosh/awesome-normalizing-flows" -> "yang-song/score_sde" ["e"=1]
"janosh/awesome-normalizing-flows" -> "ikostrikov/pytorch-flows"
"janosh/awesome-normalizing-flows" -> "Zymrael/awesome-neural-ode"
"janosh/awesome-normalizing-flows" -> "Chen-Cai-OSU/awesome-equivariant-network" ["e"=1]
"janosh/awesome-normalizing-flows" -> "LukasRinder/normalizing-flows"
"janosh/awesome-normalizing-flows" -> "mackelab/sbi"
"janosh/awesome-normalizing-flows" -> "yang-song/score_sde_pytorch" ["e"=1]
"numpy/numpy-stubs" -> "machinalis/mypy-data"
"numpy/numpy-stubs" -> "predictive-analytics-lab/data-science-types"
"numpy/numpy-stubs" -> "ramonhagenaars/nptyping"
"aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3" -> "pymc-devs/resources"
"aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3" -> "aloctavodia/Doing_bayesian_data_analysis"
"aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3" -> "ericmjl/bayesian-analysis-recipes"
"aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3" -> "aloctavodia/BAP"
"aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3" -> "rmcelreath/rethinking"
"aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3" -> "avehtari/BDA_py_demos"
"aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3" -> "bambinos/bambi"
"aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3" -> "JWarmenhoven/DBDA-python"
"aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3" -> "markdregan/Bayesian-Modelling-in-Python"
"aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3" -> "arviz-devs/arviz"
"aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3" -> "pymc-devs/pymc4"
"aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3" -> "junpenglao/Bayesian-Cognitive-Modeling-in-Pymc3"
"aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3" -> "pymc-devs/pymc3" ["e"=1]
"aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3" -> "luke14free/pm-prophet"
"aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3" -> "junpenglao/advance-bayesian-modelling-with-PyMC3"
"rjhogan/Adept-2" -> "rjhogan/Adept"
"rjhogan/Adept-2" -> "BachiLi/had"
"patrick-kidger/diffrax" -> "patrick-kidger/equinox"
"patrick-kidger/diffrax" -> "google/jaxopt"
"patrick-kidger/diffrax" -> "deepmind/distrax"
"patrick-kidger/diffrax" -> "google/jaxtyping"
"patrick-kidger/diffrax" -> "google-research/torchsde"
"patrick-kidger/diffrax" -> "n2cholas/awesome-jax"
"patrick-kidger/diffrax" -> "patrick-kidger/torchcde"
"patrick-kidger/diffrax" -> "DiffEqML/torchdyn"
"patrick-kidger/diffrax" -> "deepmind/optax"
"patrick-kidger/diffrax" -> "blackjax-devs/blackjax"
"patrick-kidger/diffrax" -> "tum-pbs/PhiFlow" ["e"=1]
"patrick-kidger/diffrax" -> "google/sympy2jax"
"patrick-kidger/diffrax" -> "jacobjinkelly/easy-neural-ode"
"patrick-kidger/diffrax" -> "pyro-ppl/numpyro"
"patrick-kidger/diffrax" -> "deepmind/chex"
"glmmTMB/glmmTMB" -> "florianhartig/DHARMa"
"glmmTMB/glmmTMB" -> "pbs-assess/sdmTMB"
"glmmTMB/glmmTMB" -> "kaskr/adcomp"
"glmmTMB/glmmTMB" -> "gavinsimpson/gratia" ["e"=1]
"glmmTMB/glmmTMB" -> "rvlenth/emmeans" ["e"=1]
"glmmTMB/glmmTMB" -> "strengejacke/ggeffects" ["e"=1]
"glmmTMB/glmmTMB" -> "bbolker/mixedmodels-misc"
"google-research/flax" -> "deepmind/haiku"
"google-research/flax" -> "JuliusKunze/jaxnet"
"google-research/flax" -> "pyro-ppl/numpyro"
"google-research/flax" -> "deepmind/rlax"
"google-research/flax" -> "rlouf/mcx"
"google-research/flax" -> "deepmind/distrax"
"google-research/flax" -> "deepmind/dm-haiku"
"google-research/flax" -> "deepmind/chex"
"google-research/flax" -> "szymonmaszke/torchlayers"
"google-research/flax" -> "google/jaxopt"
"google-research/flax" -> "johannbrehmer/manifold-flow"
"google-research/flax" -> "google/neural-tangents"
"google-research/flax" -> "google-research/dex-lang"
"google-research/flax" -> "deepmind/jraph"
"google-research/flax" -> "ChrisWaites/jax-flows" ["e"=1]
"luke14free/pm-prophet" -> "MBrouns/timeseers"
"luke14free/pm-prophet" -> "pymc-devs/pymc4"
"luke14free/pm-prophet" -> "parsing-science/pymc3_models"
"luke14free/pm-prophet" -> "bambinos/bambi"
"luke14free/pm-prophet" -> "ericmjl/bayesian-analysis-recipes"
"luke14free/pm-prophet" -> "pymc-learn/pymc-learn"
"luke14free/pm-prophet" -> "pymc-devs/pymc-examples"
"luke14free/pm-prophet" -> "CollinRooney12/htsprophet" ["e"=1]
"luke14free/pm-prophet" -> "arviz-devs/arviz"
"luke14free/pm-prophet" -> "dafiti/causalimpact" ["e"=1]
"luke14free/pm-prophet" -> "pymc-labs/CausalPy" ["e"=1]
"luke14free/pm-prophet" -> "pymc-devs/resources"
"luke14free/pm-prophet" -> "AlexIoannides/pymc-example-project"
"deepmind/dm_env" -> "deepmind/rlax"
"deepmind/dm_env" -> "deepmind/acme" ["e"=1]
"deepmind/dm_env" -> "deepmind/reverb" ["e"=1]
"deepmind/dm_env" -> "deepmind/dm_alchemy"
"deepmind/dm_env" -> "deepmind/bsuite" ["e"=1]
"deepmind/dm_env" -> "instadeepai/Mava" ["e"=1]
"deepmind/dm_env" -> "deepmind/jaxline"
"deepmind/haiku" -> "deepmind/rlax"
"ICB-DCM/pyABC" -> "ICB-DCM/pyPESTO"
"ICB-DCM/pyABC" -> "PEtab-dev/libpetab-python"
"ICB-DCM/pyABC" -> "AMICI-dev/AMICI"
"ICB-DCM/pyABC" -> "ICB-DCM/parPE"
"ICB-DCM/pyABC" -> "eth-cscs/abcpy"
"ICB-DCM/pyABC" -> "ICB-DCM/AMICI"
"ICB-DCM/pyABC" -> "Benchmarking-Initiative/Benchmark-Models-PEtab"
"ICB-DCM/pyABC" -> "ICB-DCM/PESTO"
"ICB-DCM/pyABC" -> "PEtab-dev/PEtab"
"ICB-DCM/pyABC" -> "PEtab-dev/petabvis"
"rlouf/mcx" -> "blackjax-devs/blackjax"
"rlouf/mcx" -> "matt-graham/mici"
"rlouf/mcx" -> "ColCarroll/minimc"
"rlouf/mcx" -> "pyro-ppl/numpyro"
"rlouf/mcx" -> "fehiepsi/rethinking-numpyro"
"rlouf/mcx" -> "dfm/tinygp"
"rlouf/mcx" -> "deepmind/distrax"
"rlouf/mcx" -> "facebookresearch/pplbench"
"rlouf/mcx" -> "aesara-devs/aeppl"
"rlouf/mcx" -> "jeremiecoullon/SGMCMCJax"
"rlouf/mcx" -> "pymc-devs/Theano-PyMC"
"rlouf/mcx" -> "wesselb/stheno"
"rlouf/mcx" -> "thomaspinder/GPJax"
"rlouf/mcx" -> "Information-Fusion-Lab-Umass/NuX"
"rlouf/mcx" -> "ColCarroll/imcmc"
"paulbrodersen/netgraph" -> "ericmjl/nxviz"
"paulbrodersen/netgraph" -> "pnnl/HyperNetX" ["e"=1]
"paulbrodersen/netgraph" -> "bhargavchippada/forceatlas2"
"paulbrodersen/netgraph" -> "GiulioRossetti/cdlib" ["e"=1]
"paulbrodersen/netgraph" -> "vtraag/leidenalg" ["e"=1]
"paulbrodersen/netgraph" -> "WestHealth/pyvis"
"paulbrodersen/netgraph" -> "benmaier/netwulf"
"joelgrus/autograd" -> "joelgrus/joelnet"
"VincentStimper/normalizing-flows" -> "bayesiains/nflows"
"VincentStimper/normalizing-flows" -> "facebookincubator/flowtorch"
"VincentStimper/normalizing-flows" -> "janosh/awesome-normalizing-flows"
"VincentStimper/normalizing-flows" -> "kamenbliznashki/normalizing_flows"
"VincentStimper/normalizing-flows" -> "francois-rozet/zuko"
"VincentStimper/normalizing-flows" -> "didriknielsen/survae_flows"
"VincentStimper/normalizing-flows" -> "acids-ircam/pytorch_flows"
"VincentStimper/normalizing-flows" -> "VincentStimper/resampled-base-flows"
"VincentStimper/normalizing-flows" -> "tonyduan/normalizing-flows"
"VincentStimper/normalizing-flows" -> "nicola-decao/BNAF"
"VincentStimper/normalizing-flows" -> "kazewong/flowMC"
"VincentStimper/normalizing-flows" -> "ikostrikov/pytorch-flows"
"VincentStimper/normalizing-flows" -> "karpathy/pytorch-normalizing-flows"
"VincentStimper/normalizing-flows" -> "mackelab/sbi"
"VincentStimper/normalizing-flows" -> "rtqichen/residual-flows"
"erdogant/d3graph" -> "erdogant/hnet"
"didriknielsen/survae_flows" -> "rtqichen/residual-flows"
"didriknielsen/survae_flows" -> "kamenbliznashki/normalizing_flows"
"didriknielsen/survae_flows" -> "bayesiains/nflows"
"didriknielsen/survae_flows" -> "bayesiains/nsf"
"didriknielsen/survae_flows" -> "tonyduan/normalizing-flows"
"didriknielsen/survae_flows" -> "chrischute/real-nvp"
"didriknielsen/survae_flows" -> "nicola-decao/BNAF"
"didriknielsen/survae_flows" -> "ikostrikov/pytorch-flows"
"didriknielsen/survae_flows" -> "johannbrehmer/manifold-flow"
"didriknielsen/survae_flows" -> "riannevdberg/sylvester-flows"
"didriknielsen/survae_flows" -> "rtqichen/ffjord"
"didriknielsen/survae_flows" -> "janosh/awesome-normalizing-flows"
"didriknielsen/survae_flows" -> "gpapamak/maf"
"didriknielsen/survae_flows" -> "CW-Huang/CP-Flow"
"didriknielsen/survae_flows" -> "izmailovpavel/flowgmm"
"dfm/tinygp" -> "thomaspinder/GPJax"
"dfm/tinygp" -> "Joshuaalbert/jaxns" ["e"=1]
"dfm/tinygp" -> "joshspeagle/dynesty" ["e"=1]
"dfm/tinygp" -> "rlouf/mcx"
"dfm/tinygp" -> "jax-ml/oryx"
"dfm/tinygp" -> "blackjax-devs/blackjax"
"dfm/tinygp" -> "dfm/george" ["e"=1]
"dfm/tinygp" -> "bd-j/prospector" ["e"=1]
"GiulioRossetti/ndlib" -> "GiulioRossetti/cdlib" ["e"=1]
"GiulioRossetti/ndlib" -> "GiulioRossetti/dynetx"
"GiulioRossetti/ndlib" -> "ericmjl/nxviz"
"GiulioRossetti/ndlib" -> "nkoub/multinetx"
"GiulioRossetti/ndlib" -> "aesuli/ics"
"pymc-devs/pymc-examples" -> "pymc-devs/Theano-PyMC"
"pymc-devs/pymc-examples" -> "AmpersandTV/pymc3-hmm"
"pymc-devs/pymc-examples" -> "aesara-devs/aeppl"
"pymc-devs/pymc-examples" -> "MBrouns/timeseers"
"pymc-devs/pymc-examples" -> "bambinos/bambi"
"pymc-devs/pymc-examples" -> "blackjax-devs/blackjax"
"pymc-devs/pymc-examples" -> "pymc-devs/pytensor"
"pymc-devs/pymc-examples" -> "pymc-devs/pymc.io"
"rasmusab/bayesian_first_aid" -> "stan-dev/rstanarm"
"rasmusab/bayesian_first_aid" -> "smbache/magrittr" ["e"=1]
"rasmusab/bayesian_first_aid" -> "dgrtwo/broom" ["e"=1]
"rasmusab/bayesian_first_aid" -> "rasmusab/distribution_diagrams"
"rasmusab/bayesian_first_aid" -> "stan-dev/example-models"
"rasmusab/bayesian_first_aid" -> "rmcelreath/glmer2stan"
"kaskr/adcomp" -> "skaug/tmb-case-studies"
"kaskr/adcomp" -> "admb-project/admb"
"kaskr/adcomp" -> "kaskr/tmbstan"
"kaskr/adcomp" -> "glmmTMB/glmmTMB"
"kaskr/adcomp" -> "mlysy/TMBtools"
"kaskr/adcomp" -> "pbs-assess/sdmTMB"
"kaskr/adcomp" -> "kaskr/RTMB"
"kaskr/adcomp" -> "nmfs-stock-synthesis/stock-synthesis"
"kaskr/adcomp" -> "r4ss/r4ss"
"kaskr/adcomp" -> "James-Thorson/2018_FSH556"
"ikostrikov/pytorch-flows" -> "kamenbliznashki/normalizing_flows"
"ikostrikov/pytorch-flows" -> "karpathy/pytorch-made"
"ikostrikov/pytorch-flows" -> "bayesiains/nflows"
"ikostrikov/pytorch-flows" -> "bayesiains/nsf"
"ikostrikov/pytorch-flows" -> "rosinality/glow-pytorch"
"ikostrikov/pytorch-flows" -> "gpapamak/maf"
"ikostrikov/pytorch-flows" -> "rtqichen/ffjord"
"ikostrikov/pytorch-flows" -> "rtqichen/residual-flows"
"ikostrikov/pytorch-flows" -> "tonyduan/normalizing-flows"
"ikostrikov/pytorch-flows" -> "karpathy/pytorch-normalizing-flows"
"ikostrikov/pytorch-flows" -> "didriknielsen/survae_flows"
"ikostrikov/pytorch-flows" -> "chrischute/real-nvp"
"ikostrikov/pytorch-flows" -> "CW-Huang/NAF"
"ikostrikov/pytorch-flows" -> "riannevdberg/sylvester-flows"
"ikostrikov/pytorch-flows" -> "chaiyujin/glow-pytorch"
"edebrouwer/gru_ode_bayes" -> "YuliaRubanova/latent_ode"
"edebrouwer/gru_ode_bayes" -> "patrick-kidger/NeuralCDE"
"edebrouwer/gru_ode_bayes" -> "patrick-kidger/torchcde"
"edebrouwer/gru_ode_bayes" -> "mlech26l/ode-lstms"
"3springs/attentive-neural-processes" -> "soobinseo/Attentive-Neural-Process"
"scikit-garden/scikit-garden" -> "civisanalytics/civisml-extensions"
"scikit-garden/scikit-garden" -> "dfagnan/QuantileRandomForestRegressor"
"ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse_2_ed" -> "ASKurz/Doing-Bayesian-Data-Analysis-in-brms-and-the-tidyverse"
"Joseph94m/MCMC" -> "wiseodd/MCMC"
"AMICI-dev/AMICI" -> "PEtab-dev/PEtab"
"AMICI-dev/AMICI" -> "ICB-DCM/pyPESTO"
"AMICI-dev/AMICI" -> "fides-dev/fides"
"AMICI-dev/AMICI" -> "Benchmarking-Initiative/Benchmark-Models-PEtab"
"johannbrehmer/manifold-flow" -> "bayesiains/nsf"
"johannbrehmer/manifold-flow" -> "bayesiains/nflows"
"johannbrehmer/manifold-flow" -> "Information-Fusion-Lab-Umass/NuX"
"johannbrehmer/manifold-flow" -> "didriknielsen/survae_flows"
"johannbrehmer/manifold-flow" -> "justinalsing/pydelfi"
"johannbrehmer/manifold-flow" -> "johannbrehmer/pointers"
"johannbrehmer/manifold-flow" -> "chrvt/denoising-normalizing-flow"
"johannbrehmer/manifold-flow" -> "conormdurkan/lfi"
"johannbrehmer/manifold-flow" -> "jacobjinkelly/easy-neural-ode"
"bambinos/bambi" -> "arviz-devs/arviz"
"bambinos/bambi" -> "blackjax-devs/blackjax"
"bambinos/bambi" -> "pymc-devs/resources"
"bambinos/bambi" -> "pymc-labs/CausalPy" ["e"=1]
"bambinos/bambi" -> "aloctavodia/Doing_bayesian_data_analysis"
"bambinos/bambi" -> "pyro-ppl/numpyro"
"bambinos/bambi" -> "paul-buerkner/brms"
"bambinos/bambi" -> "luke14free/pm-prophet"
"bambinos/bambi" -> "pymc-devs/pymc-examples"
"bambinos/bambi" -> "pymc-devs/pymc4"
"bambinos/bambi" -> "aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3"
"bambinos/bambi" -> "rlouf/mcx"
"bambinos/bambi" -> "dswah/pyGAM" ["e"=1]
"bambinos/bambi" -> "bambinos/Bambi_resources"
"bambinos/bambi" -> "aesara-devs/aesara"
"bayesiains/nsf" -> "bayesiains/nflows"
"bayesiains/nsf" -> "johannbrehmer/manifold-flow"
"bayesiains/nsf" -> "tonyduan/normalizing-flows"
"bayesiains/nsf" -> "CW-Huang/NAF"
"bayesiains/nsf" -> "riannevdberg/sylvester-flows"
"bayesiains/nsf" -> "btgraham/Batchwise-Dropout" ["e"=1]
"bayesiains/nsf" -> "didriknielsen/survae_flows"
"bayesiains/nsf" -> "rtqichen/residual-flows"
"bayesiains/nsf" -> "nicola-decao/BNAF"
"bayesiains/nsf" -> "prichemond/ds3" ["e"=1]
"bayesiains/nsf" -> "MadryLab/cox" ["e"=1]
"bayesiains/nsf" -> "aravindsrinivas/flowpp"
"bayesiains/nsf" -> "kamenbliznashki/normalizing_flows"
"bayesiains/nsf" -> "ikostrikov/pytorch-flows"
"bayesiains/nsf" -> "anguyen8/sam" ["e"=1]
"florianhartig/DHARMa" -> "glmmTMB/glmmTMB"
"florianhartig/DHARMa" -> "strengejacke/ggeffects" ["e"=1]
"cfinlay/ffjord-rnode" -> "juntang-zhuang/torch_ACA"
"CW-Huang/NAF" -> "CW-Huang/torchkit"
"CW-Huang/NAF" -> "harvardnlp/TextFlow"
"CW-Huang/NAF" -> "nicola-decao/BNAF"
"CW-Huang/NAF" -> "bayesiains/nsf"
"CW-Huang/NAF" -> "gpapamak/maf"
"CW-Huang/NAF" -> "riannevdberg/sylvester-flows"
"aravindsrinivas/flowpp" -> "bayesiains/nsf"
"aravindsrinivas/flowpp" -> "XuezheMax/macow" ["e"=1]
"aravindsrinivas/flowpp" -> "ehoogeboom/emerging" ["e"=1]
"aravindsrinivas/flowpp" -> "izmailovpavel/flowgmm"
"harvardnlp/TextFlow" -> "CW-Huang/NAF"
"harvardnlp/TextFlow" -> "TrentBrick/PyTorchDiscreteFlows"
"deepmind/chex" -> "deepmind/optax"
"deepmind/chex" -> "deepmind/distrax"
"deepmind/chex" -> "deepmind/rlax"
"deepmind/chex" -> "deepmind/dm-haiku"
"deepmind/chex" -> "patrick-kidger/equinox"
"deepmind/chex" -> "google/jaxopt"
"deepmind/chex" -> "google/jaxtyping"
"deepmind/chex" -> "google/CommonLoopUtils"
"deepmind/chex" -> "google/tree-math"
"deepmind/chex" -> "deepmind/jraph"
"deepmind/chex" -> "mpi4jax/mpi4jax"
"deepmind/chex" -> "google/objax"
"deepmind/chex" -> "n2cholas/awesome-jax"
"deepmind/chex" -> "deepmind/dm_pix"
"deepmind/chex" -> "dfm/extending-jax"
"deepmind/optax" -> "deepmind/chex"
"deepmind/optax" -> "deepmind/dm-haiku"
"deepmind/optax" -> "deepmind/rlax"
"deepmind/optax" -> "google/flax"
"deepmind/optax" -> "google/jaxopt"
"deepmind/optax" -> "n2cholas/awesome-jax"
"deepmind/optax" -> "deepmind/distrax"
"deepmind/optax" -> "patrick-kidger/equinox"
"deepmind/optax" -> "deepmind/jraph"
"deepmind/optax" -> "pyro-ppl/numpyro"
"deepmind/optax" -> "google/objax"
"deepmind/optax" -> "blackjax-devs/blackjax"
"deepmind/optax" -> "google/jaxtyping"
"deepmind/optax" -> "google/CommonLoopUtils"
"deepmind/optax" -> "deepmind/dm_pix"
"jacobjinkelly/easy-neural-ode" -> "Information-Fusion-Lab-Umass/NuX"
"jacobjinkelly/easy-neural-ode" -> "patrick-kidger/FasterNeuralDiffEq"
"jacobjinkelly/easy-neural-ode" -> "ChrisWaites/jax-flows" ["e"=1]
"jacobjinkelly/easy-neural-ode" -> "Zymrael/awesome-neural-ode"
"jacobjinkelly/easy-neural-ode" -> "cgarciae/simple-pytree"
"jacobjinkelly/easy-neural-ode" -> "patrick-kidger/diffrax"
"jacobjinkelly/easy-neural-ode" -> "EmilienDupont/augmented-neural-odes"
"jacobjinkelly/easy-neural-ode" -> "patrick-kidger/NeuralCDE"
"jacobjinkelly/easy-neural-ode" -> "gehring/fax"
"jacobjinkelly/easy-neural-ode" -> "johannbrehmer/manifold-flow"
"jacobjinkelly/easy-neural-ode" -> "google/tree-math"
"jacobjinkelly/easy-neural-ode" -> "cfinlay/ffjord-rnode"
"jacobjinkelly/easy-neural-ode" -> "juntang-zhuang/torch_ACA"
"jacobjinkelly/easy-neural-ode" -> "DiffEqML/torchdyn"
"jax-ml/oryx" -> "blackjax-devs/sampling-book"
"mpi4jax/mpi4jax" -> "dfm/extending-jax"
"mpi4jax/mpi4jax" -> "google/tree-math"
"mpi4jax/mpi4jax" -> "deepmind/chex"
"mpi4jax/mpi4jax" -> "e3nn/e3nn-jax" ["e"=1]
"mpi4jax/mpi4jax" -> "google/jaxopt"
"mpi4jax/mpi4jax" -> "DifferentiableUniverseInitiative/jax_cosmo" ["e"=1]
"mpi4jax/mpi4jax" -> "cgarciae/simple-pytree"
"mpi4jax/mpi4jax" -> "jax-ml/jax-triton"
"mpi4jax/mpi4jax" -> "ASEM000/kernex"
"mpi4jax/mpi4jax" -> "dionhaefner/pyhpc-benchmarks"
"mpi4jax/mpi4jax" -> "deepmind/kfac-jax"
"mpi4jax/mpi4jax" -> "ucl-bug/jaxdf"
"mpi4jax/mpi4jax" -> "blackjax-devs/blackjax"
"mpi4jax/mpi4jax" -> "Joshuaalbert/jaxns" ["e"=1]
"TrentBrick/PyTorchDiscreteFlows" -> "harvardnlp/TextFlow"
"TrentBrick/PyTorchDiscreteFlows" -> "phlippe/CategoricalNF"
"deepmind/xmanager" -> "deepmind/optax"
"deepmind/xmanager" -> "deepmind/launchpad"
"deepmind/xmanager" -> "google/seqio" ["e"=1]
"deepmind/xmanager" -> "google-research/t5x" ["e"=1]
"deepmind/xmanager" -> "deepmind/dm_pix"
"deepmind/xmanager" -> "deepmind/chex"
"deepmind/xmanager" -> "google/flaxformer" ["e"=1]
"deepmind/xmanager" -> "deepmind/distrax"
"deepmind/xmanager" -> "cgarciae/treex"
"deepmind/xmanager" -> "google/paxml"
"deepmind/xmanager" -> "deepmind/rlax"
"deepmind/xmanager" -> "google/ml_collections"
"deepmind/xmanager" -> "google/flax"
"deepmind/xmanager" -> "google/jaxopt"
"deepmind/xmanager" -> "deepmind/jraph"
"llSourcell/Neural_Differential_Equations" -> "msurtsukov/neural-ode"
"mcleonard/sampyl" -> "mfouesneau/NUTS"
"mcleonard/sampyl" -> "EliseJ/astroABC"
"mcleonard/sampyl" -> "minaskar/zeus" ["e"=1]
"patrick-kidger/NeuralCDE" -> "patrick-kidger/torchcde"
"patrick-kidger/NeuralCDE" -> "YuliaRubanova/latent_ode"
"patrick-kidger/NeuralCDE" -> "google-research/torchsde"
"patrick-kidger/NeuralCDE" -> "Zymrael/awesome-neural-ode"
"patrick-kidger/NeuralCDE" -> "DiffEqML/torchdyn"
"patrick-kidger/NeuralCDE" -> "EmilienDupont/augmented-neural-odes"
"patrick-kidger/NeuralCDE" -> "patrick-kidger/signatory"
"patrick-kidger/NeuralCDE" -> "msurtsukov/neural-ode"
"patrick-kidger/NeuralCDE" -> "jacobjinkelly/easy-neural-ode"
"patrick-kidger/NeuralCDE" -> "edebrouwer/gru_ode_bayes"
"patrick-kidger/NeuralCDE" -> "rtqichen/ffjord"
"patrick-kidger/NeuralCDE" -> "patrick-kidger/FasterNeuralDiffEq"
"patrick-kidger/NeuralCDE" -> "patrick-kidger/diffrax"
"patrick-kidger/NeuralCDE" -> "juntang-zhuang/torch_ACA"
"patrick-kidger/NeuralCDE" -> "Zymrael/gde"
"pymc-devs/pymc4" -> "arviz-devs/arviz"
"pymc-devs/pymc4" -> "luke14free/pm-prophet"
"pymc-devs/pymc4" -> "pymc-devs/pymc3" ["e"=1]
"pymc-devs/pymc4" -> "pyro-ppl/numpyro"
"pymc-devs/pymc4" -> "tensorflow/probability" ["e"=1]
"pymc-devs/pymc4" -> "bambinos/bambi"
"pymc-devs/pymc4" -> "pymc-devs/resources"
"pymc-devs/pymc4" -> "pymc-learn/pymc-learn"
"pymc-devs/pymc4" -> "rlouf/mcx"
"pymc-devs/pymc4" -> "aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3"
"pymc-devs/pymc4" -> "ericmjl/bayesian-analysis-recipes"
"pymc-devs/pymc4" -> "google/edward2"
"pymc-devs/pymc4" -> "aloctavodia/BAP"
"pymc-devs/pymc4" -> "aloctavodia/Doing_bayesian_data_analysis"
"pymc-devs/pymc4" -> "fehiepsi/rethinking-numpyro"
"francois-rozet/zuko" -> "francois-rozet/lampe"
"amueller/COMS4995-s18" -> "amueller/applied_ml_spring_2017" ["e"=1]
"amueller/COMS4995-s18" -> "amueller/ml-training-advanced"
"google-research/ott" -> "ott-jax/ott"
"amueller/ml-workshop-1-of-4" -> "amueller/ml-workshop-2-of-4"
"amueller/ml-workshop-1-of-4" -> "amueller/ml-workshop-4-of-4"
"amueller/ml-workshop-1-of-4" -> "amueller/ml-workshop-3-of-4"
"AakashKumarNain/TF_JAX_tutorials" -> "vopani/jaxton"
"AakashKumarNain/TF_JAX_tutorials" -> "gordicaleksa/get-started-with-JAX"
"AakashKumarNain/TF_JAX_tutorials" -> "AakashKumarNain/diffusion_models"
"amueller/ml-training-intro" -> "amueller/ml-training-advanced"
"amueller/ml-training-intro" -> "amueller/ml-workshop-2-of-4"
"amueller/ml-training-intro" -> "kwartler/ODSC"
"undark-lab/swyft" -> "montefiore-ai/hypothesis"
"undark-lab/swyft" -> "mackelab/sbi"
"undark-lab/swyft" -> "tedwards2412/ripple"
"undark-lab/swyft" -> "justinalsing/pydelfi"
"undark-lab/swyft" -> "sbi-benchmark/sbibm"
"undark-lab/swyft" -> "kazewong/flowMC"
"philipphennig/NumericsOfML" -> "marvinpfoertner/cholupdates"
"philipphennig/NumericsOfML" -> "marvinpfoertner/linpde-gp"
"cetmann/iunets" -> "silvandeleemput/memcnn"
"amueller/ml-workshop-2-of-4" -> "amueller/ml-workshop-4-of-4"
"amueller/ml-workshop-2-of-4" -> "amueller/ml-workshop-3-of-4"
"amueller/ml-workshop-2-of-4" -> "amueller/ml-workshop-1-of-4"
"amueller/ml-workshop-3-of-4" -> "amueller/ml-workshop-4-of-4"
"amueller/ml-workshop-3-of-4" -> "amueller/ml-workshop-2-of-4"
"amueller/ml-workshop-3-of-4" -> "amueller/ml-workshop-1-of-4"
"amueller/ml-workshop-4-of-4" -> "amueller/ml-workshop-3-of-4"
"amueller/ml-workshop-4-of-4" -> "amueller/ml-workshop-2-of-4"
"amueller/ml-workshop-4-of-4" -> "amueller/ml-workshop-1-of-4"
"EmilienDupont/neural-processes" -> "geniki/neural-processes"
"EmilienDupont/neural-processes" -> "cambridge-mlg/convcnp"
"EmilienDupont/neural-processes" -> "deepmind/neural-processes"
"EmilienDupont/neural-processes" -> "YannDubs/Neural-Process-Family"
"EmilienDupont/neural-processes" -> "soobinseo/Attentive-Neural-Process"
"EmilienDupont/neural-processes" -> "makora9143/pytorch-convcnp"
"EmilienDupont/neural-processes" -> "AMLab-Amsterdam/FNP"
"EmilienDupont/neural-processes" -> "3springs/attentive-neural-processes"
"EmilienDupont/neural-processes" -> "crisbodnar/ndp"
"msurtsukov/neural-ode" -> "EmilienDupont/augmented-neural-odes"
"msurtsukov/neural-ode" -> "Zymrael/awesome-neural-ode"
"msurtsukov/neural-ode" -> "rtqichen/torchdiffeq"
"msurtsukov/neural-ode" -> "patrick-kidger/NeuralCDE"
"msurtsukov/neural-ode" -> "Rachnog/Neural-ODE-Experiments"
"msurtsukov/neural-ode" -> "patrick-kidger/torchcde"
"msurtsukov/neural-ode" -> "DiffEqML/torchdyn"
"msurtsukov/neural-ode" -> "YuliaRubanova/latent_ode"
"msurtsukov/neural-ode" -> "jacobjinkelly/easy-neural-ode"
"msurtsukov/neural-ode" -> "rtqichen/ffjord"
"msurtsukov/neural-ode" -> "google-research/torchsde"
"msurtsukov/neural-ode" -> "llSourcell/Neural_Differential_Equations"
"msurtsukov/neural-ode" -> "JSeam2/Neural-Ordinary-Differential-Equations"
"msurtsukov/neural-ode" -> "NeuroDiffGym/neurodiffeq" ["e"=1]
"msurtsukov/neural-ode" -> "kmkolasinski/deep-learning-notes"
"fonnesbeck/mcmc_pydata_london_2019" -> "LostInBayes/Training-Intelligent-Game-Agents-with-Deep-Reinforcement-Learning"
"fonnesbeck/mcmc_pydata_london_2019" -> "terfilip/DataAnalysisParallel-PyData"
"facebookresearch/torcharrow" -> "facebookresearch/torchrec"
"facebookresearch/torcharrow" -> "pytorch/data"
"patrick-kidger/torchcde" -> "patrick-kidger/NeuralCDE"
"patrick-kidger/torchcde" -> "YuliaRubanova/latent_ode"
"patrick-kidger/torchcde" -> "google-research/torchsde"
"patrick-kidger/torchcde" -> "patrick-kidger/diffrax"
"patrick-kidger/torchcde" -> "patrick-kidger/signatory"
"patrick-kidger/torchcde" -> "DiffEqML/torchdyn"
"patrick-kidger/torchcde" -> "Zymrael/awesome-neural-ode"
"patrick-kidger/torchcde" -> "patrick-kidger/FasterNeuralDiffEq"
"patrick-kidger/torchcde" -> "jeongwhanchoi/STG-NCDE" ["e"=1]
"patrick-kidger/torchcde" -> "edebrouwer/gru_ode_bayes"
"patrick-kidger/torchcde" -> "msurtsukov/neural-ode"
"patrick-kidger/torchcde" -> "EmilienDupont/augmented-neural-odes"
"patrick-kidger/torchcde" -> "jacobjinkelly/easy-neural-ode"
"patrick-kidger/torchcde" -> "NeuroDiffGym/neurodiffeq" ["e"=1]
"patrick-kidger/torchcde" -> "Zymrael/gde"
"bottler/iisignature" -> "patrick-kidger/signatory"
"AustinRochford/webmc3" -> "aseyboldt/nuts-rs"
"fehiepsi/rethinking-pyro" -> "fehiepsi/rethinking-numpyro"
"parsing-science/pymc3_models" -> "AustinRochford/webmc3"
"parsing-science/pymc3_models" -> "luke14free/pm-prophet"
"parsing-science/pymc3_models" -> "parsing-science/pymc3_quickstart_guide"
"parsing-science/pymc3_models" -> "pymc-learn/pymc-learn"
"parsing-science/pymc3_models" -> "ferrine/gelato"
"probml/dynamax" -> "probml/sts-jax"
"probml/dynamax" -> "blackjax-devs/blackjax"
"probml/dynamax" -> "lindermanlab/ssm" ["e"=1]
"probml/dynamax" -> "deepmind/distrax"
"probml/dynamax" -> "thomaspinder/GPJax"
"probml/dynamax" -> "dfm/tinygp"
"probml/dynamax" -> "patrick-kidger/diffrax"
"probml/dynamax" -> "blackjax-devs/sampling-book"
"probml/dynamax" -> "probabilistic-numerics/probnum"
"probml/dynamax" -> "google/CommonLoopUtils"
"probml/dynamax" -> "deepmind/optax"
"probml/dynamax" -> "google/jaxtyping"
"probml/dynamax" -> "fehiepsi/rethinking-numpyro"
"probml/dynamax" -> "pyro-ppl/numpyro"
"probml/dynamax" -> "rlouf/mcx"
"matt-graham/mici" -> "jeremiecoullon/SGMCMCJax"
"matt-graham/mici" -> "rlouf/mcx"
"matt-graham/mici" -> "eigenfoo/littlemcmc"
"kingoflolz/swarm-jax" -> "kingoflolz/CLIP_JAX" ["e"=1]
"kingoflolz/swarm-jax" -> "brentyi/jaxlie"
"kingoflolz/swarm-jax" -> "ayaka14732/jax-smi"
"ericmjl/nxviz" -> "ericmjl/Network-Analysis-Made-Simple"
"ericmjl/nxviz" -> "GiulioRossetti/ndlib"
"ericmjl/nxviz" -> "paulbrodersen/netgraph"
"ericmjl/nxviz" -> "ponnhide/pyCircos" ["e"=1]
"ericmjl/nxviz" -> "SkBlaz/Py3plex"
"ericmjl/nxviz" -> "WestHealth/pyvis"
"cgarciae/treex" -> "cgarciae/treeo"
"cgarciae/treex" -> "google/tree-math"
"cgarciae/treex" -> "dfm/extending-jax"
"cgarciae/treex" -> "poets-ai/elegy"
"cgarciae/treex" -> "cgarciae/simple-pytree"
"cgarciae/treex" -> "google/CommonLoopUtils"
"cgarciae/treex" -> "NeilGirdhar/tjax"
"cgarciae/treex" -> "google/jaxtyping"
"google/CommonLoopUtils" -> "deepmind/distrax"
"google/CommonLoopUtils" -> "google/jaxtyping"
"google/CommonLoopUtils" -> "google/orbax"
"google/CommonLoopUtils" -> "deepmind/chex"
"google/CommonLoopUtils" -> "deepmind/jmp"
"google/CommonLoopUtils" -> "deepmind/dm_pix"
"google/CommonLoopUtils" -> "deepmind/optax"
"google/CommonLoopUtils" -> "deepmind/kfac-jax"
"google/CommonLoopUtils" -> "google/tree-math"
"google/CommonLoopUtils" -> "Sea-Snell/JAXSeq"
"google/CommonLoopUtils" -> "cgarciae/treex"
"google/CommonLoopUtils" -> "jax-ml/jax-triton"
"aesara-devs/aeppl" -> "aesara-devs/aemcmc"
"aesara-devs/aeppl" -> "aesara-devs/aehmc"
"aesara-devs/aeppl" -> "rlouf/aex"
"rasmusab/distribution_diagrams" -> "tinu-schneider/DBDA_hierach_diagram"
"rasmusab/distribution_diagrams" -> "ropensci/rrrpkg" ["e"=1]
"rasmusab/distribution_diagrams" -> "rasmusab/bayesian_first_aid"
"rasmusab/distribution_diagrams" -> "stan-dev/example-models"
"rasmusab/distribution_diagrams" -> "hrbrmstr/markdowntemplates" ["e"=1]
"rasmusab/distribution_diagrams" -> "Statisticat/LaplacesDemon"
"stan-dev/stancon_talks" -> "avehtari/modelselection_tutorial"
"stan-dev/stancon_talks" -> "stan-dev/rstanarm"
"stan-dev/stancon_talks" -> "stan-dev/example-models"
"stan-dev/stancon_talks" -> "betanalpha/knitr_case_studies"
"stan-dev/stancon_talks" -> "avehtari/BDA_R_demos"
"stan-dev/stancon_talks" -> "stan-dev/cmdstanr"
"stan-dev/stancon_talks" -> "jgabry/bayes-vis-paper"
"stan-dev/stancon_talks" -> "betanalpha/stan_intro"
"stan-dev/posterior" -> "stan-dev/cmdstanr"
"blackjax-devs/sampling-book" -> "aesara-devs/aehmc"
"probabilistic-numerics/probnum" -> "thomaspinder/GPJax"
"probabilistic-numerics/probnum" -> "philipphennig/NumericsOfML"
"probabilistic-numerics/probnum" -> "patrick-kidger/diffrax"
"probabilistic-numerics/probnum" -> "mackelab/sbi"
"probabilistic-numerics/probnum" -> "deepmind/distrax"
"probabilistic-numerics/probnum" -> "f-dangel/backpack" ["e"=1]
"probabilistic-numerics/probnum" -> "nathanaelbosch/ProbNumDiffEq.jl"
"probabilistic-numerics/probnum" -> "pyro-ppl/numpyro"
"probabilistic-numerics/probnum" -> "probml/dynamax"
"probabilistic-numerics/probnum" -> "pnkraemer/tueplots" ["e"=1]
"probabilistic-numerics/probnum" -> "JonathanWenger/itergp"
"probabilistic-numerics/probnum" -> "rlouf/mcx"
"probabilistic-numerics/probnum" -> "probabilistic-numerics/probnum-spring-school"
"probabilistic-numerics/probnum" -> "blackjax-devs/blackjax"
"probabilistic-numerics/probnum" -> "blackjax-devs/sampling-book"
"probml/sts-jax" -> "probml/dynamax"
"probml/sts-jax" -> "blackjax-devs/sampling-book"
"probml/sts-jax" -> "thomaspinder/GPJax"
"probml/sts-jax" -> "probml/ssm-jax"
"probml/sts-jax" -> "blackjax-devs/blackjax"
"probml/sts-jax" -> "probml/JSL"
"google/jaxtyping" -> "patrick-kidger/equinox"
"google/jaxtyping" -> "deepmind/distrax"
"google/jaxtyping" -> "google/CommonLoopUtils"
"google/jaxtyping" -> "deepmind/chex"
"google/jaxtyping" -> "google/sympy2jax"
"google/jaxtyping" -> "google/jaxopt"
"google/jaxtyping" -> "deepmind/optax"
"google/jaxtyping" -> "patrick-kidger/diffrax"
"google/jaxtyping" -> "cgarciae/treex"
"google/jaxtyping" -> "thomaspinder/GPJax"
"google/jaxtyping" -> "n2cholas/awesome-jax"
"google/jaxtyping" -> "jax-ml/jax-triton"
"google/jaxtyping" -> "google/tree-math"
"google/jaxtyping" -> "blackjax-devs/blackjax"
"google/jaxtyping" -> "dfm/extending-jax"
"stan-dev/projpred" -> "stan-dev/cmdstanr"
"poets-ai/elegy" -> "cgarciae/treex"
"poets-ai/elegy" -> "deepmind/optax"
"poets-ai/elegy" -> "deepmind/chex"
"poets-ai/elegy" -> "deepmind/dm-haiku"
"poets-ai/elegy" -> "patrick-kidger/equinox"
"poets-ai/elegy" -> "deepmind/dm_pix"
"poets-ai/elegy" -> "deepmind/distrax"
"poets-ai/elegy" -> "google/objax"
"poets-ai/elegy" -> "n2cholas/awesome-jax"
"poets-ai/elegy" -> "google/CommonLoopUtils"
"poets-ai/elegy" -> "google/flax"
"poets-ai/elegy" -> "kingoflolz/swarm-jax"
"poets-ai/elegy" -> "google/jaxopt"
"poets-ai/elegy" -> "ChrisWaites/jax-flows" ["e"=1]
"poets-ai/elegy" -> "deepmind/rlax"
"titu1994/tfdiffeq" -> "mandubian/neural-ode"
"titu1994/tfdiffeq" -> "YuliaRubanova/latent_ode"
"titu1994/tfdiffeq" -> "JSeam2/Neural-Ordinary-Differential-Equations"
"titu1994/tfdiffeq" -> "rtqichen/ffjord"
"titu1994/tfdiffeq" -> "EmilienDupont/augmented-neural-odes"
"VLL-HD/analyzing_inverse_problems" -> "jaekookang/invertible_neural_networks"
"szymonmaszke/torchfunc" -> "szymonmaszke/torchdata"
"juntang-zhuang/torch_ACA" -> "juntang-zhuang/TorchDiffEqPack"
"juntang-zhuang/torch_ACA" -> "cfinlay/ffjord-rnode"
"facebookincubator/flowtorch" -> "bayesiains/nflows"
"facebookincubator/flowtorch" -> "VincentStimper/normalizing-flows"
"facebookincubator/flowtorch" -> "janosh/awesome-normalizing-flows"
"facebookincubator/flowtorch" -> "facebookresearch/beanmachine"
"facebookincubator/flowtorch" -> "francois-rozet/zuko"
"facebookincubator/flowtorch" -> "CW-Huang/CP-Flow"
"facebookincubator/flowtorch" -> "tonyduan/normalizing-flows"
"facebookincubator/flowtorch" -> "noegroup/stochastic_normalizing_flows" ["e"=1]
"ASKurz/Doing-Bayesian-Data-Analysis-in-brms-and-the-tidyverse" -> "ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse_2_ed"
"ASKurz/Doing-Bayesian-Data-Analysis-in-brms-and-the-tidyverse" -> "ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse"
"James-Thorson-NOAA/VAST" -> "pbs-assess/sdmTMB"
"noamross/gam-resources" -> "gavinsimpson/intro-gam-webinar-2020"
"stan-dev/loo" -> "stan-dev/rstantools"
"stan-dev/loo" -> "stan-dev/posterior"
"brentyi/jaxfg" -> "brentyi/jaxlie"
"brentyi/jaxfg" -> "brentyi/dfgo"
"brentyi/jaxfg" -> "brentyi/jax_dataclasses"
"brentyi/jaxlie" -> "brentyi/jaxfg"
"brentyi/jaxlie" -> "brentyi/dfgo"
"brentyi/jaxlie" -> "brentyi/jax_dataclasses"
"deepgraph/deepgraph" -> "nkoub/multinetx"
"deepgraph/deepgraph" -> "SkBlaz/Py3plex"
"thomaspinder/GPJax" -> "jeremiecoullon/SGMCMCJax"
"thomaspinder/GPJax" -> "dfm/tinygp"
"thomaspinder/GPJax" -> "deepmind/distrax"
"thomaspinder/GPJax" -> "AaltoML/BayesNewton"
"thomaspinder/GPJax" -> "blackjax-devs/blackjax"
"thomaspinder/GPJax" -> "secondmind-labs/GPflux" ["e"=1]
"thomaspinder/GPJax" -> "probml/sts-jax"
"thomaspinder/GPJax" -> "jax-ml/oryx"
"thomaspinder/GPJax" -> "blackjax-devs/sampling-book"
"pymc-devs/pytensor" -> "arviz-devs/preliz"
"pymc-devs/pytensor" -> "aesara-devs/aeppl"
"LukasRinder/normalizing-flows" -> "tonyduan/normalizing-flows"
"LukasRinder/normalizing-flows" -> "nicola-decao/BNAF"
"LukasRinder/normalizing-flows" -> "bgroenks96/normalizing-flows"
"LukasRinder/normalizing-flows" -> "abdulfatir/normalizing-flows"
"LukasRinder/normalizing-flows" -> "gpapamak/maf"
"LukasRinder/normalizing-flows" -> "kamenbliznashki/normalizing_flows"
"LukasRinder/normalizing-flows" -> "bayesiains/nflows"
"LukasRinder/normalizing-flows" -> "bayesiains/nsf"
"justinalsing/pydelfi" -> "mackelab/delfi"
"mackelab/delfi" -> "gpapamak/snl"
"mackelab/delfi" -> "justinalsing/pydelfi"
"stan-dev/shinystan" -> "stan-dev/rstantools"
"stan-dev/shinystan" -> "stan-dev/rstanarm"
"kasparmartens/NeuralProcesses" -> "geniki/neural-processes"
"google/jaxopt" -> "deepmind/optax"
"google/jaxopt" -> "patrick-kidger/diffrax"
"google/jaxopt" -> "n2cholas/awesome-jax"
"google/jaxopt" -> "patrick-kidger/equinox"
"google/jaxopt" -> "deepmind/chex"
"google/jaxopt" -> "deepmind/distrax"
"google/jaxopt" -> "google/jaxtyping"
"google/jaxopt" -> "google/tree-math"
"google/jaxopt" -> "mpi4jax/mpi4jax"
"google/jaxopt" -> "blackjax-devs/blackjax"
"google/jaxopt" -> "dfm/extending-jax"
"google/jaxopt" -> "deepmind/dm-haiku"
"google/jaxopt" -> "ott-jax/ott"
"google/jaxopt" -> "pyro-ppl/numpyro"
"google/jaxopt" -> "brentyi/jaxlie"
"silvandeleemput/memcnn" -> "jhjacobsen/pytorch-i-revnet"
"silvandeleemput/memcnn" -> "cetmann/iunets"
"silvandeleemput/memcnn" -> "tbung/pytorch-revnet"
"silvandeleemput/memcnn" -> "jhjacobsen/invertible-resnet"
"silvandeleemput/memcnn" -> "renmengye/revnet-public" ["e"=1]
"silvandeleemput/memcnn" -> "VLL-HD/FrEIA"
"silvandeleemput/memcnn" -> "robintibor/generative-reversible"
"phlippe/UvA_Summaries" -> "IntelligentRoboticsLab/robolabws"
"sinhrks/stan-statespace" -> "jeffalstott/pystan_time_series"
"sinhrks/stan-statespace" -> "jrnold/ssmodels-in-stan"
"sinhrks/stan-statespace" -> "hagijyun/Time_Series_Analysis_4SSM_R_Stan"
"sinhrks/stan-statespace" -> "bob-carpenter/prob-stats"
"nicola-decao/BNAF" -> "riannevdberg/sylvester-flows"
"nicola-decao/BNAF" -> "CW-Huang/NAF"
"nicola-decao/BNAF" -> "kamenbliznashki/normalizing_flows"
"nicola-decao/BNAF" -> "bayesiains/nsf"
"nicola-decao/BNAF" -> "LukasRinder/normalizing-flows"
"nicola-decao/BNAF" -> "CW-Huang/torchkit"
"nicola-decao/BNAF" -> "tonyduan/normalizing-flows"
"ICB-DCM/pyPESTO" -> "PEtab-dev/PEtab"
"ICB-DCM/pyPESTO" -> "ICB-DCM/pyABC"
"ICB-DCM/pyPESTO" -> "AMICI-dev/AMICI"
"ICB-DCM/pyPESTO" -> "PEtab-dev/libpetab-python"
"ICB-DCM/pyPESTO" -> "ICB-DCM/PEtab"
"ICB-DCM/pyPESTO" -> "ICB-DCM/parPE"
"ICB-DCM/pyPESTO" -> "Benchmarking-Initiative/Benchmark-Models-PEtab"
"ICB-DCM/pyPESTO" -> "fides-dev/fides"
"ICB-DCM/pyPESTO" -> "ICB-DCM/AMICI"
"ICB-DCM/pyPESTO" -> "ICB-DCM/PESTO"
"amirsaffari/online-multiclass-lpboost" -> "amirsaffari/online-random-forests"
"PolinaKirichenko/flows_ood" -> "boschresearch/hierarchical_anomaly_detection"
"gpapamak/maf" -> "CW-Huang/NAF"
"gpapamak/maf" -> "kamenbliznashki/normalizing_flows"
"gpapamak/maf" -> "mgermain/MADE"
"gpapamak/maf" -> "ericjang/normalizing-flows-tutorial"
"gpapamak/maf" -> "ikostrikov/pytorch-flows"
"gpapamak/maf" -> "ex4sperans/variational-inference-with-normalizing-flows"
"gpapamak/maf" -> "LukasRinder/normalizing-flows"
"gpapamak/maf" -> "bayesiains/nsf"
"gpapamak/maf" -> "tonyduan/normalizing-flows"
"gpapamak/maf" -> "aravindsrinivas/flowpp"
"gpapamak/maf" -> "didriknielsen/survae_flows"
"gpapamak/maf" -> "chrischute/real-nvp"
"gpapamak/maf" -> "karpathy/pytorch-made"
"gpapamak/maf" -> "nicola-decao/BNAF"
"gpapamak/maf" -> "harvardnlp/TextFlow"
"ericjang/normalizing-flows-tutorial" -> "abdulfatir/normalizing-flows"
"ericjang/normalizing-flows-tutorial" -> "ex4sperans/variational-inference-with-normalizing-flows"
"ericjang/normalizing-flows-tutorial" -> "gpapamak/maf"
"ericjang/normalizing-flows-tutorial" -> "tonyduan/normalizing-flows"
"ericjang/normalizing-flows-tutorial" -> "kamenbliznashki/normalizing_flows"
"ericjang/normalizing-flows-tutorial" -> "bayesiains/nsf"
"ericjang/normalizing-flows-tutorial" -> "ikostrikov/pytorch-flows"
"ericjang/normalizing-flows-tutorial" -> "riannevdberg/sylvester-flows"
"ericjang/normalizing-flows-tutorial" -> "openai/iaf" ["e"=1]
"ericjang/normalizing-flows-tutorial" -> "nicola-decao/BNAF"
"ericjang/normalizing-flows-tutorial" -> "LukasRinder/normalizing-flows"
"ericjang/normalizing-flows-tutorial" -> "karpathy/pytorch-normalizing-flows"
"ericjang/normalizing-flows-tutorial" -> "CW-Huang/NAF"
"ericjang/normalizing-flows-tutorial" -> "ericjang/nf-jax"
"ericjang/normalizing-flows-tutorial" -> "PolinaKirichenko/flows_ood"
"klemag/pydataLDN_2019-maintainable-code-for-data-science" -> "terfilip/DataAnalysisParallel-PyData"
"rmcelreath/causal_salad_2021" -> "LucyMcGowan/user2020-causal-inference"
"ColCarroll/imcmc" -> "rlouf/mcx"
"ColCarroll/imcmc" -> "pymc-devs/Theano-PyMC"
"locuslab/mdeq" -> "locuslab/deq"
"locuslab/mdeq" -> "locuslab/monotone_op_net"
"locuslab/mdeq" -> "akbir/deq-jax"
"junpenglao/advance-bayesian-modelling-with-PyMC3" -> "junpenglao/PrecisionWorkshop1_Prep"
"junpenglao/advance-bayesian-modelling-with-PyMC3" -> "junpenglao/All-that-likelihood-with-PyMC3"
"junpenglao/advance-bayesian-modelling-with-PyMC3" -> "aloctavodia/BAP"
"junpenglao/advance-bayesian-modelling-with-PyMC3" -> "fonnesbeck/PyMC3_DataScienceLA"
"junpenglao/advance-bayesian-modelling-with-PyMC3" -> "pymc-devs/resources"
"junpenglao/advance-bayesian-modelling-with-PyMC3" -> "ColCarroll/minimc"
"junpenglao/advance-bayesian-modelling-with-PyMC3" -> "ericmjl/bayesian-analysis-recipes"
"MIPT-Oulu/pytorch_bn_fusion" -> "alxmamaev/theloop"
"amirgholami/anode" -> "cfinlay/ffjord-rnode"
"deepmind/dm_pix" -> "google/CommonLoopUtils"
"deepmind/dm_pix" -> "deepmind/optax"
"deepmind/dm_pix" -> "deepmind/chex"
"deepmind/dm_pix" -> "deepmind/distrax"
"deepmind/dm_pix" -> "deepmind/kfac-jax"
"deepmind/dm_pix" -> "cgarciae/ciclo"
"deepmind/dm_pix" -> "yiyixuxu/denoising-diffusion-flax"
"deepmind/dm_pix" -> "google/objax"
"deepmind/dm_pix" -> "google/jaxopt"
"deepmind/dm_pix" -> "google/jaxtyping"
"deepmind/dm_pix" -> "poets-ai/elegy"
"deepmind/dm_pix" -> "deepmind/jmp"
"deepmind/dm_pix" -> "deepmind/haiku"
"deepmind/dm_pix" -> "n2cholas/awesome-jax"
"deepmind/dm_pix" -> "deepmind/jaxline"
"google/orbax" -> "google/grain"
"bhargavchippada/forceatlas2" -> "bosiakov/fa2l"
"dionhaefner/pyhpc-benchmarks" -> "mpi4jax/mpi4jax"
"elfi-dev/elfi" -> "justinalsing/pydelfi"
"elfi-dev/elfi" -> "mackelab/sbi"
"google/praxis" -> "google/paxml"
"ColCarroll/minimc" -> "rlouf/mcx"
"ColCarroll/minimc" -> "blackjax-devs/blackjax"
"ColCarroll/minimc" -> "eigenfoo/littlemcmc"
"ColCarroll/minimc" -> "matt-graham/mici"
"ColCarroll/minimc" -> "pymc-devs/Theano-PyMC"
"ColCarroll/minimc" -> "dfm/exoplanet" ["e"=1]
"brentyi/jax_dataclasses" -> "NeilGirdhar/tjax"
"cambridge-mlg/convcnp" -> "makora9143/pytorch-convcnp"
"cambridge-mlg/convcnp" -> "YannDubs/Neural-Process-Family"
"cambridge-mlg/convcnp" -> "EmilienDupont/neural-processes"
"cavaunpeu/statistical-rethinking" -> "jffist/statistical-rethinking-solutions"
"stan-dev/cmdstan" -> "stan-dev/cmdstanr"
"stan-dev/cmdstan" -> "stan-dev/cmdstanpy"
"stan-dev/cmdstan" -> "stan-dev/stanc3"
"stan-dev/cmdstan" -> "stan-dev/posterior"
"stan-dev/cmdstan" -> "stan-dev/httpstan"
"wesselb/stheno" -> "wesselb/lab"
"wesselb/stheno" -> "willtebbutt/Stheno.jl" ["e"=1]
"wesselb/stheno" -> "rlouf/mcx"
"wesselb/stheno" -> "thomaspinder/GPJax"
"facebookresearch/beanmachine" -> "facebookresearch/pplbench"
"facebookresearch/beanmachine" -> "facebookincubator/flowtorch"
"facebookresearch/beanmachine" -> "facebookresearch/diffkt"
"izmailovpavel/flowgmm" -> "PolinaKirichenko/flows_ood"
"Sea-Snell/JAXSeq" -> "salesforce/jaxformer" ["e"=1]
"Sea-Snell/JAXSeq" -> "Sea-Snell/JAX_llama"
"Sea-Snell/JAXSeq" -> "ayaka14732/jax-smi"
"Sea-Snell/JAXSeq" -> "huggingface/bloom-jax-inference"
"ayaka14732/jax-smi" -> "jax-ml/jax-triton"
"ayaka14732/jax-smi" -> "Sea-Snell/JAXSeq"
"lawmurray/Birch" -> "lawmurray/Birch.Standard"
"facebookresearch/torchdim" -> "hristo-vrigazov/mmap.ninja"
"facebookresearch/torchdim" -> "facebookresearch/optimizers"
"facebookresearch/torchdim" -> "lucidrains/Adan-pytorch" ["e"=1]
"skaug/tmb-case-studies" -> "mlysy/TMBtools"
"rjhogan/Adept" -> "rjhogan/Adept-2"
"geniki/neural-processes" -> "kasparmartens/NeuralProcesses"
"geniki/neural-processes" -> "EmilienDupont/neural-processes"
"geniki/neural-processes" -> "makora9143/pytorch-convcnp"
"deepmind/jmp" -> "deepmind/kfac-jax"
"makora9143/pytorch-convcnp" -> "cambridge-mlg/convcnp"
"JonathanWenger/itergp" -> "marvinpfoertner/linpde-gp"
"jffist/statistical-rethinking-solutions" -> "cavaunpeu/statistical-rethinking"
"aesara-devs/aehmc" -> "aesara-devs/aemcmc"
"mplex/multiplex" -> "mplex/multigraph"
"aesara-devs/aemcmc" -> "aesara-devs/aehmc"
"aesara-devs/aemcmc" -> "aesara-devs/aeppl"
"PEtab-dev/PEtab" -> "fides-dev/fides"
"AaltoML/BayesNewton" -> "thomaspinder/GPJax"
"AaltoML/BayesNewton" -> "marvinpfoertner/cholupdates"
"NeilGirdhar/tjax" -> "brentyi/jax_dataclasses"
"ICB-DCM/AMICI" -> "PEtab-dev/libpetab-python"
"ICB-DCM/AMICI" -> "ICB-DCM/PEtab"
"tgcsaba/GPSig" -> "tgcsaba/KSig"
"stan-dev/cmdstanpy" -> "stan-dev/cmdstan"
"stan-dev/cmdstanpy" -> "stan-dev/cmdstanr"
"stan-dev/cmdstanpy" -> "stan-dev/pystan-next"
"stan-dev/cmdstanpy" -> "stan-dev/stanc3"
"stan-dev/cmdstanpy" -> "stan-dev/httpstan"
"stan-dev/cmdstanpy" -> "stan-dev/posterior"
"stan-dev/cmdstanpy" -> "MansMeg/posteriordb"
"cambridgespark/pydata-testing-for-data-science" -> "terfilip/DataAnalysisParallel-PyData"
"pbs-assess/sdmTMB" -> "James-Thorson-NOAA/VAST"
"pbs-assess/sdmTMB" -> "kaskr/RTMB"
"pbs-assess/sdmTMB" -> "timjmiller/wham"
"pbs-assess/sdmTMB" -> "seananderson/glmmfields"
"google/paxml" -> "google/praxis"
"google/gin-config" ["l"="23.566,33.716"]
"google/flax" ["l"="23.509,33.746"]
"deepmind/rlax" ["l"="23.535,33.749"]
"IDSIA/sacred" ["l"="25.315,33.896"]
"facebookresearch/hydra" ["l"="34.182,35.879"]
"deepmind/optax" ["l"="23.497,33.767"]
"arogozhnikov/einops" ["l"="34.25,35.847"]
"facebookresearch/higher" ["l"="23.721,35.458"]
"facebookincubator/submitit" ["l"="34.272,35.942"]
"deepmind/dm-haiku" ["l"="23.513,33.768"]
"google/compare_gan" ["l"="33.609,32.756"]
"tensorflow/agents" ["l"="25.083,35.926"]
"google/trax" ["l"="30.039,32.448"]
"astooke/rlpyt" ["l"="25.174,35.911"]
"deepmind/chex" ["l"="23.486,33.757"]
"google/objax" ["l"="23.487,33.745"]
"google/tensorstore" ["l"="23.475,33.683"]
"facebookincubator/AITemplate" ["l"="27.609,31.05"]
"pytorch/torchdynamo" ["l"="27.777,35.578"]
"openxla/xla" ["l"="27.672,35.569"]
"ELS-RD/kernl" ["l"="27.589,31.086"]
"zarr-developers/zarr-python" ["l"="19.017,28.166"]
"facebookresearch/fairscale" ["l"="27.651,31.057"]
"google/neuroglancer" ["l"="16.264,37.543"]
"google/jaxopt" ["l"="23.475,33.765"]
"pytorch/tensorpipe" ["l"="27.868,35.498"]
"google/CommonLoopUtils" ["l"="23.465,33.729"]
"saalfeldlab/n5" ["l"="16.311,37.533"]
"facebookresearch/torcharrow" ["l"="23.415,33.613"]
"jg-you/noisy-networks-measurements" ["l"="24.19,34.123"]
"gstonge/SamplableSet" ["l"="24.163,34.124"]
"johnhw/pfilter" ["l"="23.543,33.959"]
"nchopin/particles" ["l"="23.551,33.929"]
"tingiskhan/pyfilter" ["l"="23.529,33.969"]
"ott-jax/ott" ["l"="23.415,33.77"]
"google-research/ott" ["l"="23.364,33.767"]
"google/sympy2jax" ["l"="23.399,33.76"]
"dfm/tinygp" ["l"="23.539,33.84"]
"jeanfeydy/geomloss" ["l"="22.724,33.847"]
"deepmind/kfac-jax" ["l"="23.443,33.701"]
"patrick-kidger/diffrax" ["l"="23.415,33.789"]
"google/tree-math" ["l"="23.416,33.739"]
"google/jaxtyping" ["l"="23.447,33.756"]
"jacobjinkelly/easy-neural-ode" ["l"="23.329,33.804"]
"vopani/datatableton" ["l"="23.347,33.673"]
"vopani/waveton" ["l"="23.353,33.693"]
"vopani/datasciencenightly" ["l"="23.312,33.644"]
"vopani/jaxton" ["l"="23.431,33.709"]
"vopani/fortyone" ["l"="23.305,33.661"]
"tunguz/ML_Resources" ["l"="23.793,30.245"]
"tmabraham/awesome-fastai" ["l"="22.706,28.993"]
"rmcelreath/stat_rethinking_2023" ["l"="23.814,33.755"]
"rmcelreath/stat_rethinking_2022" ["l"="23.796,33.775"]
"rmcelreath/rethinking" ["l"="23.844,33.81"]
"pymc-devs/pymc-resources" ["l"="23.737,33.785"]
"rmcelreath/stat_rethinking_2020" ["l"="23.843,33.766"]
"mcanouil/awesome-quarto" ["l"="20.215,43.376"]
"avehtari/BDA_course_Aalto" ["l"="23.819,33.807"]
"easystats/performance" ["l"="20.185,43.37"]
"vincentarelbundock/marginaleffects" ["l"="20.172,43.333"]
"erikgahner/awesome-ggplot2" ["l"="20.152,43.395"]
"ddsjoberg/gtsummary" ["l"="20.207,43.403"]
"rmcelreath/statrethinking_winter2019" ["l"="23.836,33.786"]
"paul-buerkner/brms" ["l"="23.866,33.796"]
"rstudio/gt" ["l"="20.232,43.463"]
"mjskay/ggdist" ["l"="20.166,43.39"]
"Nixtla/statsforecast" ["l"="22.493,36.026"]
"stan-dev/pystan" ["l"="23.815,33.831"]
"stan-dev/stan" ["l"="23.871,33.831"]
"arviz-devs/arviz" ["l"="23.708,33.835"]
"pymc-devs/pymc3" ["l"="25.457,33.585"]
"avehtari/BDA_py_demos" ["l"="23.8,33.857"]
"stan-dev/example-models" ["l"="23.897,33.832"]
"stan-dev/rstan" ["l"="23.901,33.815"]
"bambinos/bambi" ["l"="23.709,33.851"]
"stan-dev/cmdstanpy" ["l"="23.942,33.806"]
"blei-lab/edward" ["l"="25.451,33.61"]
"pymc-devs/pymc4" ["l"="23.689,33.858"]
"pyro-ppl/numpyro" ["l"="23.554,33.804"]
"pymc-devs/pymc" ["l"="25.455,33.519"]
"pydata/patsy" ["l"="21.71,28.766"]
"stan-dev/pystan-next" ["l"="23.894,33.802"]
"pyro-ppl/pyro" ["l"="25.499,33.587"]
"deepmind/mctx" ["l"="23.562,33.748"]
"YeWR/EfficientZero" ["l"="25.341,35.762"]
"werner-duvaud/muzero-general" ["l"="25.31,35.821"]
"RobertTLange/gymnax" ["l"="25.393,35.784"]
"google/brax" ["l"="25.366,35.816"]
"eloialonso/iris" ["l"="25.338,35.749"]
"deepmind/acme" ["l"="25.208,35.868"]
"sail-sg/envpool" ["l"="25.356,35.827"]
"vwxyzjn/cleanrl" ["l"="25.271,35.899"]
"deepmind/distrax" ["l"="23.491,33.798"]
"patrick-kidger/equinox" ["l"="23.462,33.775"]
"google/jax" ["l"="30.277,32.484"]
"n2cholas/awesome-jax" ["l"="23.466,33.755"]
"deepmind/jraph" ["l"="23.507,33.787"]
"openai/triton" ["l"="27.636,30.995"]
"google/neural-tangents" ["l"="23.427,33.808"]
"pytorch/functorch" ["l"="23.422,33.75"]
"JWarmenhoven/DBDA-python" ["l"="23.755,33.87"]
"aloctavodia/Doing_bayesian_data_analysis" ["l"="23.768,33.885"]
"aloctavodia/BAP" ["l"="23.74,33.88"]
"pymc-devs/resources" ["l"="23.76,33.842"]
"aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3" ["l"="23.776,33.869"]
"JWarmenhoven/ISLR-python" ["l"="23.373,30.804"]
"ericmjl/bayesian-stats-modelling-tutorial" ["l"="23.791,33.911"]
"ericmjl/bayesian-analysis-recipes" ["l"="23.764,33.904"]
"luke14free/pm-prophet" ["l"="23.717,33.884"]
"markdregan/Bayesian-Modelling-in-Python" ["l"="23.811,33.894"]
"PacktPublishing/Bayesian-Analysis-with-Python" ["l"="23.721,33.901"]
"LeiG/Applied-Predictive-Modeling-with-Python" ["l"="20.161,43.225"]
"CambridgeUniversityPress/FirstCourseNetworkScience" ["l"="23.935,34.039"]
"PacktPublishing/Network-Science-with-Python-and-NetworkX-Quick-Start-Guide" ["l"="23.956,34.06"]
"fonnesbeck/gp_regression" ["l"="23.692,33.945"]
"fonnesbeck/Bayes_Computing_Course" ["l"="23.72,33.937"]
"google-research/dex-lang" ["l"="23.482,33.812"]
"hasktorch/hasktorch" ["l"="-8.21,12.11"]
"diku-dk/futhark" ["l"="-9.244,13.566"]
"blackjax-devs/blackjax" ["l"="23.539,33.824"]
"granule-project/granule" ["l"="-9.218,13.487"]
"wsmoses/Enzyme" ["l"="17.203,39.086"]
"koka-lang/koka" ["l"="-9.278,13.56"]
"e3nn/e3nn-jax" ["l"="17.123,37.855"]
"SymJAX/SymJAX" ["l"="23.348,33.738"]
"cgarciae/simple-pytree" ["l"="23.394,33.746"]
"dfm/jpu" ["l"="23.363,33.747"]
"stan-dev/math" ["l"="23.946,33.786"]
"avehtari/BDA_R_demos" ["l"="23.878,33.809"]
"stan-dev/rstanarm" ["l"="23.93,33.819"]
"TuringLang/Turing.jl" ["l"="17.119,39.026"]
"tensorflow/probability" ["l"="25.501,33.707"]
"stan-dev/cmdstan" ["l"="23.966,33.795"]
"benmaier/netwulf" ["l"="24.133,34.138"]
"dblarremore/webweb" ["l"="24.166,34.166"]
"benmaier/tacoma" ["l"="24.172,34.136"]
"netsiphd/netrd" ["l"="24.17,34.108"]
"ulfaslak/network_styling_with_d3" ["l"="24.155,34.151"]
"cuinfoscience/INFO5613-Fall2021" ["l"="24.141,34.159"]
"google/vizier" ["l"="23.529,33.682"]
"google/learned_optimization" ["l"="23.497,33.689"]
"awslabs/fortuna" ["l"="25.821,34.138"]
"deepmind/xmanager" ["l"="23.519,33.724"]
"google/ml_collections" ["l"="23.511,33.709"]
"google/pyglove" ["l"="23.568,33.619"]
"nnaisense/evotorch" ["l"="25.45,35.739"]
"facebookresearch/rl" ["l"="25.37,35.775"]
"mosaicml/composer" ["l"="34.285,35.974"]
"awslabs/syne-tune" ["l"="25.903,34.164"]
"microsoft/LMOps" ["l"="27.367,31.189"]
"Sea-Snell/JAXSeq" ["l"="23.475,33.649"]
"pytorch/data" ["l"="23.396,33.65"]
"webdataset/webdataset" ["l"="31.786,34.83"]
"pytorch/torcharrow" ["l"="23.379,33.582"]
"PyTorchLightning/metrics" ["l"="34.217,35.952"]
"PyTorchLightning/lightning-flash" ["l"="34.241,35.954"]
"facebookresearch/torchdim" ["l"="23.358,33.627"]
"facebookresearch/multimodal" ["l"="31.721,34.785"]
"lucidrains/lion-pytorch" ["l"="27.542,31.011"]
"libffcv/ffcv" ["l"="34.343,35.921"]
"huggingface/evaluate" ["l"="27.597,31.133"]
"pytorch/torcheval" ["l"="23.379,33.608"]
"pytorch/torchx" ["l"="27.923,35.596"]
"huggingface/accelerate" ["l"="27.589,31.035"]
"SkBlaz/py3plex" ["l"="24.095,34.054"]
"nkoub/multinetx" ["l"="24.067,34.049"]
"google/fiddle" ["l"="23.543,33.657"]
"google-research/big_vision" ["l"="31.812,34.87"]
"patrick-kidger/torchtyping" ["l"="34.237,35.935"]
"deepmind/tree" ["l"="23.489,33.717"]
"deepmind/jaxline" ["l"="23.551,33.687"]
"keras-team/keras-cv" ["l"="22.659,29.627"]
"borgwang/tinynn" ["l"="23.636,33.537"]
"borgwang/tinynn-autograd" ["l"="23.66,33.522"]
"joelgrus/autograd" ["l"="23.596,33.628"]
"chaoming0625/NumpyDL" ["l"="23.63,33.51"]
"zc911/MatrixSlow" ["l"="23.654,33.501"]
"bayesiains/nflows" ["l"="23.293,33.912"]
"janosh/awesome-normalizing-flows" ["l"="23.281,33.901"]
"kamenbliznashki/normalizing_flows" ["l"="23.238,33.919"]
"bayesiains/nsf" ["l"="23.256,33.915"]
"karpathy/pytorch-normalizing-flows" ["l"="23.263,33.928"]
"VincentStimper/normalizing-flows" ["l"="23.296,33.934"]
"tonyduan/normalizing-flows" ["l"="23.254,33.942"]
"didriknielsen/survae_flows" ["l"="23.248,33.927"]
"mackelab/sbi" ["l"="23.416,33.887"]
"facebookincubator/flowtorch" ["l"="23.319,33.941"]
"johannbrehmer/manifold-flow" ["l"="23.335,33.887"]
"ikostrikov/pytorch-flows" ["l"="23.233,33.93"]
"LukasRinder/normalizing-flows" ["l"="23.273,33.942"]
"nicola-decao/BNAF" ["l"="23.257,33.952"]
"rosinality/glow-pytorch" ["l"="23.218,33.925"]
"jmtomczak/vae_vpflows" ["l"="23.208,34.002"]
"kefirski/bdir_vae" ["l"="23.192,34.007"]
"jmtomczak/vae_householder_flow" ["l"="23.194,34.043"]
"riannevdberg/sylvester-flows" ["l"="23.242,33.942"]
"ex4sperans/variational-inference-with-normalizing-flows" ["l"="23.222,33.96"]
"jmtomczak/vae_vampprior" ["l"="25.071,32.631"]
"CW-Huang/NAF" ["l"="23.217,33.947"]
"acids-ircam/pytorch_flows" ["l"="23.277,33.962"]
"abdulfatir/normalizing-flows" ["l"="23.254,33.972"]
"rtqichen/ffjord" ["l"="23.245,33.869"]
"ericjang/normalizing-flows-tutorial" ["l"="23.24,33.956"]
"karpathy/find-birds" ["l"="23.226,34.025"]
"karpathy/pytorch-made" ["l"="23.237,33.972"]
"mjskay/tidybayes" ["l"="23.893,33.787"]
"rmcelreath/causal_salad_2021" ["l"="23.898,33.691"]
"ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse_2_ed" ["l"="23.898,33.734"]
"ASKurz/Statistical_Rethinking_with_brms_ggplot2_and_the_tidyverse" ["l"="23.903,33.764"]
"malcolmbarrett/ggdag" ["l"="20.181,43.414"]
"thomasp85/patchwork" ["l"="20.208,43.497"]
"vincentarelbundock/modelsummary" ["l"="20.196,43.377"]
"cavaunpeu/statistical-rethinking" ["l"="23.858,33.688"]
"deepmind/dm_pix" ["l"="23.482,33.73"]
"srush/parallax" ["l"="23.379,33.719"]
"poets-ai/elegy" ["l"="23.467,33.74"]
"cgarciae/treex" ["l"="23.443,33.736"]
"ASKurz/Doing-Bayesian-Data-Analysis-in-brms-and-the-tidyverse" ["l"="23.922,33.734"]
"lindeloev/tests-as-linear" ["l"="20.196,43.416"]
"strengejacke/ggeffects" ["l"="20.168,43.374"]
"florianhartig/DHARMa" ["l"="24.055,33.683"]
"easystats/bayestestR" ["l"="20.173,43.349"]
"hrbrmstr/ggalt" ["l"="20.219,43.504"]
"noamross/gam-resources" ["l"="23.962,33.709"]
"ThinkR-open/remedy" ["l"="20.209,43.447"]
"stan-dev/bayesplot" ["l"="23.922,33.798"]
"lme4/lme4" ["l"="20.199,43.31"]
"IndrajeetPatil/ggstatsplot" ["l"="20.173,43.441"]
"BoltzmannEntropy/interviews.ai" ["l"="23.71,30.419"]
"allisonhorst/stats-illustrations" ["l"="20.13,43.473"]
"rougier/scientific-visualization-book" ["l"="23.371,30.474"]
"probml/pyprobml" ["l"="25.546,33.509"]
"rfordatascience/tidytuesday" ["l"="20.109,43.519"]
"deepmind/conditional-neural-process" ["l"="23.106,34.126"]
"kasparmartens/NeuralProcesses" ["l"="23.125,34.098"]
"geniki/neural-processes" ["l"="23.109,34.094"]
"MBrouns/timeseers" ["l"="23.681,33.888"]
"pymc-devs/pymc-examples" ["l"="23.66,33.844"]
"carlomazzaferro/scikit-hts" ["l"="22.564,36.028"]
"corriebar/Bayesian-Workflow-with-PyMC" ["l"="23.664,33.914"]
"pymc-labs/CausalPy" ["l"="23.857,33.168"]
"koaning/scikit-lego" ["l"="25.695,34.02"]
"uber/orbit" ["l"="22.507,36.013"]
"tblume1992/ThymeBoost" ["l"="25.813,34.004"]
"pyro-ppl/Pyro-M5-Starter-Kit" ["l"="22.487,35.841"]
"nasa/SMCPy" ["l"="23.562,33.972"]
"JTT94/filterflow" ["l"="23.569,33.954"]
"lawmurray/Birch" ["l"="23.545,33.99"]
"rlouf/mcx" ["l"="23.565,33.854"]
"dilinwang820/Stein-Variational-Gradient-Descent" ["l"="25.26,32.779"]
"jeremiecoullon/SGMCMCJax" ["l"="23.55,33.865"]
"matt-graham/mici" ["l"="23.574,33.902"]
"nchopin/py-smc2" ["l"="23.557,33.947"]
"pierrejacob/couplingsmontecarlo" ["l"="23.529,33.948"]
"AdamCobb/hamiltorch" ["l"="23.974,34.508"]
"deepmind/haiku" ["l"="23.543,33.776"]
"deepmind/bsuite" ["l"="25.188,35.838"]
"deepmind/dm_env" ["l"="23.578,33.67"]
"ikostrikov/jaxrl" ["l"="25.38,35.766"]
"deepmind/dqn_zoo" ["l"="25.273,35.804"]
"google-research/rliable" ["l"="25.349,35.776"]
"dfm/extending-jax" ["l"="23.43,33.729"]
"deepmind/reverb" ["l"="25.262,35.826"]
"deepmind/launchpad" ["l"="23.539,33.727"]
"deepmind/dm_env_rpc" ["l"="23.509,33.647"]
"ramonhagenaars/nptyping" ["l"="23.28,33.619"]
"numpy/numpy-stubs" ["l"="23.228,33.564"]
"ramonhagenaars/typish" ["l"="23.256,33.604"]
"mypyc/mypyc" ["l"="23.122,3.655"]
"MIPT-Oulu/solt" ["l"="23.448,34.062"]
"MIPT-Oulu/pytorch_bn_fusion" ["l"="23.44,34.114"]
"stanford-iprl-lab/torchfilter" ["l"="23.299,33.594"]
"brentyi/dfgo" ["l"="23.34,33.646"]
"brentyi/multimodalfilter" ["l"="23.284,33.57"]
"avehtari/BDA_m_demos" ["l"="23.85,33.854"]
"wiseodd/MCMC" ["l"="23.601,33.968"]
"wiseodd/probabilistic-models" ["l"="23.6,34.002"]
"Joseph94m/MCMC" ["l"="23.62,33.955"]
"chi-feng/mcmc-demo" ["l"="23.609,33.905"]
"fonnesbeck/mcmc_pydata_london_2019" ["l"="23.598,34.048"]
"sbi-benchmark/sbibm" ["l"="23.428,33.929"]
"undark-lab/swyft" ["l"="23.408,33.924"]
"mackelab/delfi" ["l"="23.402,33.938"]
"justinalsing/pydelfi" ["l"="23.386,33.916"]
"montefiore-ai/hypothesis" ["l"="23.427,33.915"]
"joshspeagle/dynesty" ["l"="17.028,36.659"]
"kazewong/flowMC" ["l"="23.366,33.924"]
"francois-rozet/lampe" ["l"="23.38,33.938"]
"elfi-dev/elfi" ["l"="23.403,33.907"]
"Joshuaalbert/jaxns" ["l"="17.05,36.69"]
"conormdurkan/lfi" ["l"="23.372,33.892"]
"gordicaleksa/get-started-with-JAX" ["l"="23.465,33.707"]
"jwkvam/celluloid" ["l"="23.4,33.837"]
"lukelbd/proplot" ["l"="18.843,28.176"]
"DiffEqML/torchdyn" ["l"="23.305,33.816"]
"google-research/torchsde" ["l"="23.327,33.819"]
"maxhumber/gif" ["l"="21.054,28.917"]
"google-research/arxiv-latex-cleaner" ["l"="27.669,30.103"]
"nschloe/tikzplotlib" ["l"="7.314,9.238"]
"facebookresearch/hiplot" ["l"="25.512,33.989"]
"johannesjmeyer/rsmf" ["l"="23.375,33.866"]
"gbosquechacon/statrethink_course_in_pymc3" ["l"="23.84,33.721"]
"jmschrei/pomegranate" ["l"="25.481,33.608"]
"rhiever/tpot" ["l"="25.564,33.773"]
"fonnesbeck/scipy2014_tutorial" ["l"="23.804,33.922"]
"google/skflow" ["l"="27.14,34.153"]
"bloomberg/bqplot" ["l"="21.442,28.848"]
"pgmpy/pgmpy" ["l"="25.432,33.539"]
"stitchfix/pyxley" ["l"="21.597,28.823"]
"deepmind/neural-processes" ["l"="23.133,34.044"]
"EmilienDupont/neural-processes" ["l"="23.105,34.074"]
"YannDubs/Neural-Process-Family" ["l"="23.09,34.066"]
"soobinseo/Attentive-Neural-Process" ["l"="23.103,34.052"]
"cambridge-mlg/convcnp" ["l"="23.085,34.079"]
"3springs/attentive-neural-processes" ["l"="23.086,34.052"]
"crisbodnar/ndp" ["l"="23.125,34.073"]
"wesselb/NeuralProcesses.jl" ["l"="23.091,34.038"]
"cornellius-gp/gpytorch" ["l"="25.517,33.619"]
"openai/ebm_code_release" ["l"="34.73,28.77"]
"AMLab-Amsterdam/FNP" ["l"="23.115,34.062"]
"ahmedmalaa/deep-learning-uncertainty" ["l"="23.938,34.59"]
"patrick-kidger/signatory" ["l"="23.229,33.739"]
"bottler/iisignature" ["l"="23.213,33.721"]
"patrick-kidger/Deep-Signature-Transforms" ["l"="23.202,33.699"]
"datasig-ac-uk/esig" ["l"="23.196,33.735"]
"patrick-kidger/torchcde" ["l"="23.297,33.789"]
"crispitagorico/sigkernel" ["l"="23.23,33.715"]
"tgcsaba/GPSig" ["l"="23.174,33.719"]
"patrick-kidger/NeuralCDE" ["l"="23.284,33.798"]
"kormilitzin/the-signature-method-in-machine-learning" ["l"="23.184,33.703"]
"SigCGANs/Conditional-Sig-Wasserstein-GANs" ["l"="22.798,35.365"]
"jambo6/generalised-signature-method" ["l"="23.194,33.72"]
"jambo6/neuralRDEs" ["l"="23.222,33.699"]
"google/maxtext" ["l"="23.439,33.86"]
"cgarciae/ciclo" ["l"="23.452,33.809"]
"PacktPublishing/Bayesian-Analysis-with-Python-Second-Edition" ["l"="23.725,33.92"]
"junpenglao/advance-bayesian-modelling-with-PyMC3" ["l"="23.739,33.905"]
"deepgenerativemodels/notes" ["l"="23.277,33.981"]
"ermongroup/cs228-notes" ["l"="25.499,33.524"]
"stan-dev/loo" ["l"="23.964,33.82"]
"stan-dev/rstantools" ["l"="23.978,33.828"]
"stan-dev/projpred" ["l"="23.996,33.811"]
"stan-dev/cmdstanr" ["l"="23.974,33.81"]
"stan-dev/stancon_talks" ["l"="23.931,33.838"]
"stan-dev/shinystan" ["l"="23.958,33.836"]
"xfim/ggmcmc" ["l"="23.988,33.856"]
"stan-dev/posterior" ["l"="23.958,33.807"]
"rtqichen/torchdiffeq" ["l"="23.281,33.842"]
"Zymrael/awesome-neural-ode" ["l"="23.283,33.819"]
"msurtsukov/neural-ode" ["l"="23.263,33.804"]
"EmilienDupont/augmented-neural-odes" ["l"="23.264,33.825"]
"YuliaRubanova/latent_ode" ["l"="23.256,33.816"]
"rusty1s/pytorch_geometric" ["l"="21.704,38.639"]
"kmkolasinski/deep-learning-notes" ["l"="23.233,33.839"]
"HIPS/autograd" ["l"="25.428,33.663"]
"mgermain/MADE" ["l"="23.232,33.999"]
"gpapamak/maf" ["l"="23.229,33.947"]
"jzbontar/pixelcnn-pytorch" ["l"="25.012,32.5"]
"karpathy/examples" ["l"="27.58,30.872"]
"ptrblck/prog_gans_pytorch_inference" ["l"="33.527,32.676"]
"Schlumberger/joint-vae" ["l"="25.056,32.623"]
"deepmind/jmp" ["l"="23.456,33.69"]
"deepmind/dks" ["l"="23.428,33.648"]
"chi-feng/gp-demo" ["l"="23.62,33.931"]
"ColCarroll/imcmc" ["l"="23.584,33.881"]
"mcleonard/sampyl" ["l"="23.641,34.005"]
"bob-carpenter/prob-stats" ["l"="23.887,33.879"]
"fehiepsi/rethinking-numpyro" ["l"="23.608,33.841"]
"ColCarroll/minimc" ["l"="23.606,33.879"]
"dfm/emcee" ["l"="-2.215,-29.162"]
"pyro-ppl/funsor" ["l"="23.609,33.77"]
"pyro-ppl/brmp" ["l"="23.642,33.744"]
"mattjj/autodidact" ["l"="23.482,33.785"]
"bgavran/autodiff" ["l"="23.395,33.801"]
"google/tangent" ["l"="25.389,33.627"]
"probabilistic-numerics/probnum" ["l"="23.511,33.834"]
"getkeops/keops" ["l"="22.661,33.825"]
"tancik/fourier-feature-networks" ["l"="33.298,43.151"]
"tomgoldstein/loss-landscape" ["l"="34.319,35.741"]
"brain-research/nngp" ["l"="25.62,33.322"]
"pytorch/botorch" ["l"="25.547,33.63"]
"cvxgrp/cvxpylayers" ["l"="27.867,42.073"]
"cgarciae/treeo" ["l"="23.392,33.73"]
"NeilGirdhar/tjax" ["l"="23.399,33.717"]
"PyCon/2017-slides" ["l"="23.911,33.973"]
"ikding/pycon_time_series" ["l"="23.95,33.986"]
"fonnesbeck/intro_stat_modeling_2017" ["l"="23.828,33.948"]
"PyCon/2015-slides" ["l"="23.087,30.552"]
"BayesianModelingandComputationInPython/BookCode_Edition1" ["l"="23.687,33.816"]
"ksachdeva/rethinking-tensorflow-probability" ["l"="23.68,33.837"]
"aesara-devs/aesara" ["l"="23.624,33.805"]
"aesara-devs/aeppl" ["l"="23.612,33.827"]
"blackjax-devs/sampling-book" ["l"="23.558,33.835"]
"aesara-devs/aehmc" ["l"="23.604,33.819"]
"pymc-devs/pytensor" ["l"="23.65,33.81"]
"ICB-DCM/pyABC" ["l"="23.723,33.642"]
"pydata/xarray" ["l"="18.95,28.186"]
"avehtari/ROS-Examples" ["l"="23.85,33.749"]
"fonnesbeck/bayes_course_july2020" ["l"="23.712,33.968"]
"JSeam2/Neural-Ordinary-Differential-Equations" ["l"="23.185,33.816"]
"mandubian/neural-ode" ["l"="23.173,33.827"]
"jason71995/Keras_ODENet" ["l"="23.151,33.816"]
"titu1994/tfdiffeq" ["l"="23.217,33.822"]
"rajatvd/NeuralODE" ["l"="23.137,33.802"]
"edebrouwer/gru_ode_bayes" ["l"="23.26,33.778"]
"locuslab/deq" ["l"="23.213,33.798"]
"patrick-kidger/FasterNeuralDiffEq" ["l"="23.287,33.777"]
"google/edward2" ["l"="23.574,33.82"]
"google/uncertainty-baselines" ["l"="23.938,34.575"]
"OATML/bdl-benchmarks" ["l"="23.995,34.6"]
"google-research/robustness_metrics" ["l"="23.917,34.575"]
"google/uncertainty-metrics" ["l"="23.94,34.539"]
"secondmind-labs/trieste" ["l"="25.638,33.493"]
"AakashKumarNain/TF_JAX_tutorials" ["l"="23.443,33.666"]
"wandb/Groundbreaking-Papers" ["l"="23.375,33.663"]
"yang-song/score_sde" ["l"="34.567,28.889"]
"yang-song/score_sde_pytorch" ["l"="34.552,28.886"]
"chrischute/glow" ["l"="23.181,33.932"]
"chrischute/real-nvp" ["l"="23.206,33.935"]
"thomaspinder/GPJax" ["l"="23.523,33.84"]
"ChrisWaites/jax-flows" ["l"="25.703,36.879"]
"jax-ml/oryx" ["l"="23.517,33.851"]
"taki0112/Tensorflow-Cookbook" ["l"="23.863,31.055"]
"insurgent92/CS231N_17_KOR_SUB" ["l"="44.622,-14.962"]
"openai/glow" ["l"="33.63,32.773"]
"hristo-vrigazov/mmap.ninja" ["l"="23.336,33.598"]
"AmazaspShumik/sklearn-bayes" ["l"="23.775,33.944"]
"JamesRitchie/scikit-rvm" ["l"="23.788,33.991"]
"scikit-learn-contrib/forest-confidence-interval" ["l"="25.79,33.883"]
"rsteca/sklearn-deap" ["l"="25.635,33.758"]
"TomAugspurger/engarde" ["l"="21.537,28.908"]
"RJT1990/pyflux" ["l"="22.429,36.087"]
"yandex/rep" ["l"="27.222,34.082"]
"ellisonbg/altair" ["l"="21.564,28.863"]
"tdhopper/notes-on-dirichlet-processes" ["l"="29.127,35.649"]
"scikit-garden/scikit-garden" ["l"="23.778,34.064"]
"pymc-learn/pymc-learn" ["l"="23.704,33.912"]
"parsing-science/pymc3_models" ["l"="23.735,33.941"]
"google/jax-md" ["l"="17.097,37.691"]
"snap-stanford/GraphGym" ["l"="21.899,38.561"]
"tensorflow/gnn" ["l"="21.864,38.577"]
"jhjacobsen/pytorch-i-revnet" ["l"="23.166,33.91"]
"renmengye/revnet-public" ["l"="28.219,32.684"]
"silvandeleemput/memcnn" ["l"="23.146,33.889"]
"jhjacobsen/invertible-resnet" ["l"="23.208,33.901"]
"tbung/pytorch-revnet" ["l"="23.117,33.897"]
"rtqichen/residual-flows" ["l"="23.221,33.911"]
"VLL-HD/FrEIA" ["l"="23.189,33.896"]
"jhjacobsen/fully-invertible-revnet" ["l"="23.117,33.918"]
"chaiyujin/glow-pytorch" ["l"="23.19,33.916"]
"bojone/flow" ["l"="23.198,33.971"]
"aravindsrinivas/flowpp" ["l"="23.201,33.946"]
"paultsw/nice_pytorch" ["l"="23.158,33.978"]
"sinhrks/stan-statespace" ["l"="23.933,33.894"]
"betanalpha/knitr_case_studies" ["l"="23.951,33.859"]
"TrentBrick/PyTorchDiscreteFlows" ["l"="23.185,33.987"]
"jax-ml/jax-triton" ["l"="23.439,33.688"]
"mpi4jax/mpi4jax" ["l"="23.443,33.722"]
"brentyi/jaxlie" ["l"="23.388,33.692"]
"brentyi/jaxfg" ["l"="23.368,33.681"]
"ayaka14732/jax-smi" ["l"="23.447,33.65"]
"hugobowne/deep-learning-from-scratch-pytorch" ["l"="21.208,29.066"]
"ericmjl/Network-Analysis-Made-Simple" ["l"="23.895,34.005"]
"canyon289/bayesian-model-evaluation" ["l"="23.848,33.936"]
"jupyter-widgets/tutorial" ["l"="21.211,28.954"]
"ericmjl/dl-workshop" ["l"="23.836,33.971"]
"easystats/modelbased" ["l"="20.19,43.345"]
"easystats/parameters" ["l"="20.207,43.364"]
"easystats/see" ["l"="20.193,43.394"]
"easystats/insight" ["l"="20.203,43.353"]
"easystats/effectsize" ["l"="20.192,43.358"]
"tidymodels/infer" ["l"="20.271,43.394"]
"easystats/correlation" ["l"="20.215,43.352"]
"locuslab/trellisnet" ["l"="23.138,33.758"]
"ofirpress/YouMayNotNeedAttention" ["l"="23.078,33.734"]
"locuslab/TCN" ["l"="30.177,32.496"]
"haohy/TCAN" ["l"="23.928,35.614"]
"2prime/ODE-DL" ["l"="23.198,33.834"]
"Zymrael/gde" ["l"="23.275,33.764"]
"tum-pbs/PhiFlow" ["l"="22.55,34.302"]
"strawlab/best" ["l"="23.753,33.812"]
"junpenglao/Bayesian-Cognitive-Modeling-in-Pymc3" ["l"="23.819,33.874"]
"erikson84/BayesDataAnalysisWithPyMC" ["l"="23.743,33.766"]
"amueller/COMS4995-s20" ["l"="23.949,34.172"]
"amueller/COMS4995-s19" ["l"="23.925,34.152"]
"y0ast/Glow-PyTorch" ["l"="23.204,33.922"]
"pclucas14/pytorch-glow" ["l"="23.119,33.94"]
"andreas128/SRFlow" ["l"="35.842,32.351"]
"corenel/pytorch-glow" ["l"="23.138,33.927"]
"balajiln/mondrianforest" ["l"="23.775,34.14"]
"amirsaffari/online-random-forests" ["l"="23.774,34.162"]
"nel215/mondrianforest" ["l"="23.792,34.161"]
"amirsaffari/online-multiclass-lpboost" ["l"="23.758,34.169"]
"PolinaKirichenko/flows_ood" ["l"="23.174,33.967"]
"harvardnlp/TextFlow" ["l"="23.192,33.96"]
"jonasrauber/eagerpy" ["l"="23.456,33.791"]
"bethgelab/foolbox" ["l"="21.489,14.07"]
"f-dangel/backpack" ["l"="23.916,34.427"]
"microsoft/robust-models-transfer" ["l"="21.393,14.038"]
"xl0/lovely-tensors" ["l"="34.197,35.994"]
"RobertTLange/evosax" ["l"="25.468,35.752"]
"run-ai/genv" ["l"="34.131,36.09"]
"kach/gradient-descent-the-ultimate-optimizer" ["l"="23.513,33.605"]
"HazyResearch/H3" ["l"="29.721,30.726"]
"WestHealth/pyvis" ["l"="24.067,34.125"]
"plotly/dash-cytoscape" ["l"="20.561,28.768"]
"imohitmayank/jaal" ["l"="24.061,34.16"]
"Zsailer/nx_altair" ["l"="24.083,34.176"]
"ericmjl/nxviz" ["l"="24.004,34.084"]
"jhwang1992/network-visualization" ["l"="24.092,34.145"]
"paulbrodersen/netgraph" ["l"="24.041,34.13"]
"sknetwork-team/scikit-network" ["l"="21.934,38.818"]
"GiulioRossetti/cdlib" ["l"="21.971,38.848"]
"erdogant/d3graph" ["l"="24.107,34.166"]
"ChrisChross/streamlit-agraph" ["l"="24.099,34.122"]
"holoviz/holoviews" ["l"="20.13,27.573"]
"benedekrozemberczki/karateclub" ["l"="21.902,38.755"]
"GiulioRossetti/ndlib" ["l"="24.012,34.061"]
"graphistry/pygraphistry" ["l"="21.892,38.841"]
"fmu2/realNVP" ["l"="23.164,33.934"]
"bolozna/Multilayer-networks-library" ["l"="24.1,34.043"]
"manlius/muxViz" ["l"="24.129,34.061"]
"SkBlaz/Py3plex" ["l"="24.046,34.073"]
"jkbren/matplotlib-multilayer-network" ["l"="24.088,34.023"]
"GiulioRossetti/dynetx" ["l"="24.038,34.046"]
"mplex/multiplex" ["l"="24.105,34.067"]
"deepgraph/deepgraph" ["l"="24.075,34.072"]
"joelgrus/joelnet" ["l"="23.621,33.598"]
"deepmind/dm_alchemy" ["l"="23.586,33.572"]
"dido1998/CausalMBRL" ["l"="23.586,33.515"]
"avehtari/modelselection" ["l"="23.881,33.752"]
"jhoupt/DBDA2Estan" ["l"="23.927,33.764"]
"NickCH-K/causalbook" ["l"="23.249,33.088"]
"behrman/ros" ["l"="23.871,33.712"]
"bambinos/Bambi_resources" ["l"="23.77,33.794"]
"avehtari/modelselection_tutorial" ["l"="23.918,33.875"]
"avehtari/RAOS-Examples" ["l"="23.902,33.91"]
"betanalpha/stan_intro" ["l"="23.938,33.876"]
"MansMeg/posteriordb" ["l"="23.927,33.857"]
"hammerlab/survivalstan" ["l"="23.925,33.92"]
"fehiepsi/rethinking-pyro" ["l"="23.629,33.865"]
"probml/dynamax" ["l"="23.522,33.815"]
"asuagar/statrethink-course-numpyro-2019" ["l"="23.634,33.849"]
"SciML/DiffEqFlux.jl" ["l"="17.239,39.114"]
"wesselb/neuralprocesses" ["l"="23.055,34.087"]
"makora9143/pytorch-convcnp" ["l"="23.086,34.092"]
"tung-nd/TNP-pytorch" ["l"="23.051,34.069"]
"amueller/ml-training-advanced" ["l"="23.911,34.186"]
"amueller/ml-training-intro" ["l"="23.89,34.176"]
"predictive-analytics-lab/data-science-types" ["l"="23.189,33.526"]
"RcppCore/Rcpp" ["l"="20.5,43.501"]
"HenrikBengtsson/future" ["l"="20.336,43.475"]
"rich-iannone/DiagrammeR" ["l"="20.289,43.55"]
"Rachnog/Neural-ODE-Experiments" ["l"="23.238,33.795"]
"rr-learning/CausalWorld" ["l"="23.588,33.471"]
"martius-lab/cid-in-rl" ["l"="23.59,33.447"]
"briatte/awesome-network-analysis" ["l"="27.308,-19.512"]
"amueller/ml-workshop-3-of-4" ["l"="23.918,34.101"]
"amueller/ml-workshop-4-of-4" ["l"="23.903,34.104"]
"MridulS/pydata-networkx" ["l"="23.898,34.034"]
"ericmjl/pyjanitor" ["l"="21.135,28.848"]
"AllenDowney/BayesMadeSimple" ["l"="22.884,30.891"]
"phlippe/uvadlc_notebooks" ["l"="23.446,33.827"]
"phlippe/UvA_Summaries" ["l"="23.447,33.88"]
"vahidk/EffectivePyTorch" ["l"="34.17,35.752"]
"learnables/learn2learn" ["l"="23.744,35.431"]
"NielsRogge/Transformers-Tutorials" ["l"="23.726,30.283"]
"e3nn/e3nn" ["l"="17.115,37.832"]
"benedekrozemberczki/pytorch_geometric_temporal" ["l"="21.849,38.562"]
"deepmind/educational" ["l"="23.69,30.289"]
"dair-ai/Transformers-Recipe" ["l"="23.664,30.29"]
"senya-ashukha/real-nvp-pytorch" ["l"="23.151,33.948"]
"Mind-the-Pineapple/sklearn-rvm" ["l"="23.796,34.017"]
"szymonmaszke/torchdata" ["l"="23.482,34.041"]
"szymonmaszke/torchfunc" ["l"="23.473,34.021"]
"Vermeille/Torchelie" ["l"="23.489,34.08"]
"fonnesbeck/Bios8366" ["l"="23.123,30.735"]
"fonnesbeck/statistical-analysis-python-tutorial" ["l"="23.198,30.684"]
"fonnesbeck/PyMC3_DataScienceLA" ["l"="23.767,33.929"]
"VLL-HD/analyzing_inverse_problems" ["l"="23.099,33.908"]
"VLL-HD/conditional_INNs" ["l"="23.135,33.905"]
"gudovskiy/cflow-ad" ["l"="22.691,34.928"]
"pkuxmq/Invertible-Image-Rescaling" ["l"="35.894,32.323"]
"marco-rudolph/differnet" ["l"="22.705,34.939"]
"autodiff/autodiff" ["l"="28.124,42.002"]
"stan-dev/stanc3" ["l"="23.982,33.777"]
"rjhogan/Adept-2" ["l"="24.025,33.758"]
"PatWie/CppNumericalSolvers" ["l"="28.136,42.016"]
"rjhogan/Adept" ["l"="24.004,33.756"]
"syclik/stan-algorithms" ["l"="23.964,33.759"]
"yixuan/LBFGSpp" ["l"="28.179,41.988"]
"stan-dev/design-docs" ["l"="23.978,33.755"]
"amueller/ml-workshop-2-of-4" ["l"="23.905,34.13"]
"amueller/COMS4995-s18" ["l"="23.933,34.196"]
"amueller/ml-workshop-1-of-4" ["l"="23.923,34.123"]
"arviz-devs/preliz" ["l"="23.673,33.795"]
"pymc-devs/pymc-bart" ["l"="23.695,33.786"]
"KatolaZ/multired" ["l"="24.153,34.067"]
"frankkramer-lab/mully" ["l"="24.163,34.044"]
"jdwilson4/MultilayerExtraction" ["l"="24.167,34.059"]
"jkbren/einet" ["l"="24.166,34.083"]
"KatolaZ/mammult" ["l"="24.144,34.042"]
"mapequation/infomap" ["l"="21.981,38.893"]
"thomasp85/tidygraph" ["l"="20.26,43.488"]
"amirgholami/anode" ["l"="23.268,33.865"]
"cfinlay/ffjord-rnode" ["l"="23.299,33.854"]
"juntang-zhuang/torch_ACA" ["l"="23.309,33.836"]
"locuslab/mdeq" ["l"="23.158,33.781"]
"locuslab/SATNet" ["l"="27.77,42.129"]
"locuslab/monotone_op_net" ["l"="23.178,33.775"]
"locuslab/optnet" ["l"="27.803,42.127"]
"HazyResearch/state-spaces" ["l"="29.672,30.74"]
"ermongroup/ncsn" ["l"="34.639,28.849"]
"ZichaoLong/PDE-Net" ["l"="22.467,34.332"]
"2prime/Paper-Reading" ["l"="23.135,33.83"]
"zhuohan123/macaron-net" ["l"="23.101,33.818"]
"a-norcliffe/sonode" ["l"="23.154,33.841"]
"gonglinyuan/StackingBERT" ["l"="23.052,33.811"]
"szymonmaszke/torchlayers" ["l"="23.474,33.972"]
"kwotsin/mimicry" ["l"="33.369,32.836"]
"PyTorchLightning/pytorch-lightning-bolts" ["l"="34.257,35.969"]
"google-research/flax" ["l"="23.483,33.84"]
"huggingface/pytorch_block_sparse" ["l"="29.652,30.79"]
"junpenglao/PrecisionWorkshop1_Prep" ["l"="23.749,33.928"]
"InvestmentSystems/static-frame" ["l"="23.145,33.502"]
"CedricFR/dataenforce" ["l"="23.181,33.492"]
"jg-you/plant-pollinator-inference" ["l"="24.194,34.099"]
"barahona-research-group/hcga" ["l"="24.202,34.11"]
"ericmjl/bayesian-deep-learning-demystified" ["l"="23.799,33.961"]
"ericmjl/bayesian-stats-talk" ["l"="23.8,33.945"]
"njtierney/naniar" ["l"="20.203,43.439"]
"datalorax/equatiomatic" ["l"="20.178,43.397"]
"easystats/easystats" ["l"="20.201,43.384"]
"sfirke/janitor" ["l"="20.237,43.476"]
"probml/sts-jax" ["l"="23.535,33.856"]
"parsing-science/pymc3_quickstart_guide" ["l"="23.78,33.97"]
"abdulfatir/planar-flow-pytorch" ["l"="23.265,34.003"]
"Chen-Cai-OSU/awesome-equivariant-network" ["l"="17.105,37.86"]
"machinalis/mypy-data" ["l"="23.218,33.537"]
"BachiLi/had" ["l"="24.057,33.748"]
"glmmTMB/glmmTMB" ["l"="24.125,33.648"]
"pbs-assess/sdmTMB" ["l"="24.188,33.641"]
"kaskr/adcomp" ["l"="24.167,33.618"]
"gavinsimpson/gratia" ["l"="19.78,43.387"]
"rvlenth/emmeans" ["l"="20.158,43.336"]
"bbolker/mixedmodels-misc" ["l"="24.12,33.622"]
"JuliusKunze/jaxnet" ["l"="23.471,33.897"]
"CollinRooney12/htsprophet" ["l"="22.564,35.994"]
"dafiti/causalimpact" ["l"="23.821,33.225"]
"AlexIoannides/pymc-example-project" ["l"="23.684,33.926"]
"instadeepai/Mava" ["l"="25.394,35.907"]
"ICB-DCM/pyPESTO" ["l"="23.74,33.618"]
"PEtab-dev/libpetab-python" ["l"="23.72,33.622"]
"AMICI-dev/AMICI" ["l"="23.753,33.61"]
"ICB-DCM/parPE" ["l"="23.731,33.629"]
"eth-cscs/abcpy" ["l"="23.717,33.595"]
"ICB-DCM/AMICI" ["l"="23.725,33.61"]
"Benchmarking-Initiative/Benchmark-Models-PEtab" ["l"="23.751,33.628"]
"ICB-DCM/PESTO" ["l"="23.747,33.639"]
"PEtab-dev/PEtab" ["l"="23.762,33.621"]
"PEtab-dev/petabvis" ["l"="23.707,33.63"]
"facebookresearch/pplbench" ["l"="23.471,33.929"]
"pymc-devs/Theano-PyMC" ["l"="23.608,33.864"]
"wesselb/stheno" ["l"="23.547,33.885"]
"Information-Fusion-Lab-Umass/NuX" ["l"="23.41,33.859"]
"pnnl/HyperNetX" ["l"="22.005,38.939"]
"bhargavchippada/forceatlas2" ["l"="24.038,34.185"]
"vtraag/leidenalg" ["l"="21.934,38.867"]
"francois-rozet/zuko" ["l"="23.343,33.956"]
"VincentStimper/resampled-base-flows" ["l"="23.32,33.969"]
"erdogant/hnet" ["l"="24.121,34.187"]
"CW-Huang/CP-Flow" ["l"="23.3,33.959"]
"izmailovpavel/flowgmm" ["l"="23.17,33.952"]
"dfm/george" ["l"="16.962,36.672"]
"bd-j/prospector" ["l"="17.006,36.638"]
"aesuli/ics" ["l"="24.028,34.07"]
"AmpersandTV/pymc3-hmm" ["l"="23.656,33.874"]
"pymc-devs/pymc.io" ["l"="23.659,33.827"]
"rasmusab/bayesian_first_aid" ["l"="24.002,33.84"]
"smbache/magrittr" ["l"="20.443,43.653"]
"dgrtwo/broom" ["l"="20.371,43.619"]
"rasmusab/distribution_diagrams" ["l"="24.03,33.835"]
"rmcelreath/glmer2stan" ["l"="24.044,33.859"]
"skaug/tmb-case-studies" ["l"="24.192,33.595"]
"admb-project/admb" ["l"="24.164,33.637"]
"kaskr/tmbstan" ["l"="24.149,33.602"]
"mlysy/TMBtools" ["l"="24.182,33.603"]
"kaskr/RTMB" ["l"="24.19,33.623"]
"nmfs-stock-synthesis/stock-synthesis" ["l"="24.163,33.593"]
"r4ss/r4ss" ["l"="24.202,33.608"]
"James-Thorson/2018_FSH556" ["l"="24.178,33.588"]
"mlech26l/ode-lstms" ["l"="23.253,33.738"]
"civisanalytics/civisml-extensions" ["l"="23.788,34.092"]
"dfagnan/QuantileRandomForestRegressor" ["l"="23.768,34.083"]
"fides-dev/fides" ["l"="23.766,33.604"]
"johannbrehmer/pointers" ["l"="23.336,33.909"]
"chrvt/denoising-normalizing-flow" ["l"="23.349,33.904"]
"dswah/pyGAM" ["l"="25.8,33.954"]
"btgraham/Batchwise-Dropout" ["l"="28.173,32.667"]
"prichemond/ds3" ["l"="28.173,32.662"]
"MadryLab/cox" ["l"="28.185,32.661"]
"anguyen8/sam" ["l"="28.183,32.681"]
"CW-Huang/torchkit" ["l"="23.22,33.981"]
"XuezheMax/macow" ["l"="28.07,33.948"]
"ehoogeboom/emerging" ["l"="-26.768,14.519"]
"gehring/fax" ["l"="23.315,33.76"]
"DifferentiableUniverseInitiative/jax_cosmo" ["l"="17.089,36.778"]
"ASEM000/kernex" ["l"="23.403,33.703"]
"dionhaefner/pyhpc-benchmarks" ["l"="23.412,33.686"]
"ucl-bug/jaxdf" ["l"="23.398,33.676"]
"phlippe/CategoricalNF" ["l"="23.157,34.013"]
"google/seqio" ["l"="27.668,31.197"]
"google-research/t5x" ["l"="27.576,31.154"]
"google/flaxformer" ["l"="27.777,31.195"]
"google/paxml" ["l"="23.541,33.632"]
"llSourcell/Neural_Differential_Equations" ["l"="23.221,33.77"]
"mfouesneau/NUTS" ["l"="23.646,34.047"]
"EliseJ/astroABC" ["l"="23.656,34.029"]
"minaskar/zeus" ["l"="17.077,36.701"]
"amueller/applied_ml_spring_2017" ["l"="-9.474,20.112"]
"AakashKumarNain/diffusion_models" ["l"="23.439,33.6"]
"kwartler/ODSC" ["l"="23.879,34.195"]
"tedwards2412/ripple" ["l"="23.418,33.955"]
"philipphennig/NumericsOfML" ["l"="23.498,33.888"]
"marvinpfoertner/cholupdates" ["l"="23.511,33.897"]
"marvinpfoertner/linpde-gp" ["l"="23.494,33.901"]
"cetmann/iunets" ["l"="23.101,33.882"]
"NeuroDiffGym/neurodiffeq" ["l"="22.525,34.353"]
"LostInBayes/Training-Intelligent-Game-Agents-with-Deep-Reinforcement-Learning" ["l"="23.597,34.068"]
"terfilip/DataAnalysisParallel-PyData" ["l"="23.6,34.089"]
"facebookresearch/torchrec" ["l"="23.411,33.561"]
"jeongwhanchoi/STG-NCDE" ["l"="21.541,35.912"]
"AustinRochford/webmc3" ["l"="23.725,33.987"]
"aseyboldt/nuts-rs" ["l"="23.725,34.009"]
"ferrine/gelato" ["l"="23.745,33.988"]
"lindermanlab/ssm" ["l"="28.332,37.558"]
"eigenfoo/littlemcmc" ["l"="23.592,33.918"]
"kingoflolz/swarm-jax" ["l"="23.42,33.667"]
"kingoflolz/CLIP_JAX" ["l"="34.116,28.909"]
"ponnhide/pyCircos" ["l"="21.553,34.852"]
"google/orbax" ["l"="23.462,33.638"]
"aesara-devs/aemcmc" ["l"="23.624,33.821"]
"rlouf/aex" ["l"="23.636,33.829"]
"tinu-schneider/DBDA_hierach_diagram" ["l"="24.069,33.825"]
"ropensci/rrrpkg" ["l"="20.057,43.527"]
"hrbrmstr/markdowntemplates" ["l"="20.375,43.553"]
"Statisticat/LaplacesDemon" ["l"="24.071,33.842"]
"jgabry/bayes-vis-paper" ["l"="23.974,33.87"]
"nathanaelbosch/ProbNumDiffEq.jl" ["l"="23.582,33.8"]
"pnkraemer/tueplots" ["l"="21.634,34.777"]
"JonathanWenger/itergp" ["l"="23.497,33.874"]
"probabilistic-numerics/probnum-spring-school" ["l"="23.493,33.86"]
"probml/ssm-jax" ["l"="23.525,33.892"]
"probml/JSL" ["l"="23.539,33.9"]
"jaekookang/invertible_neural_networks" ["l"="23.062,33.912"]
"juntang-zhuang/TorchDiffEqPack" ["l"="23.328,33.857"]
"facebookresearch/beanmachine" ["l"="23.375,33.969"]
"noegroup/stochastic_normalizing_flows" ["l"="22.829,34.306"]
"James-Thorson-NOAA/VAST" ["l"="24.215,33.633"]
"gavinsimpson/intro-gam-webinar-2020" ["l"="23.99,33.683"]
"brentyi/jax_dataclasses" ["l"="23.37,33.701"]
"AaltoML/BayesNewton" ["l"="23.518,33.875"]
"secondmind-labs/GPflux" ["l"="25.614,33.486"]
"bgroenks96/normalizing-flows" ["l"="23.3,33.979"]
"gpapamak/snl" ["l"="23.407,33.971"]
"robintibor/generative-reversible" ["l"="23.11,33.869"]
"IntelligentRoboticsLab/robolabws" ["l"="23.447,33.904"]
"jeffalstott/pystan_time_series" ["l"="23.957,33.918"]
"jrnold/ssmodels-in-stan" ["l"="23.976,33.91"]
"hagijyun/Time_Series_Analysis_4SSM_R_Stan" ["l"="23.958,33.904"]
"ICB-DCM/PEtab" ["l"="23.74,33.597"]
"boschresearch/hierarchical_anomaly_detection" ["l"="23.133,33.983"]
"openai/iaf" ["l"="33.825,32.526"]
"ericjang/nf-jax" ["l"="23.254,34.019"]
"klemag/pydataLDN_2019-maintainable-code-for-data-science" ["l"="23.609,34.113"]
"LucyMcGowan/user2020-causal-inference" ["l"="23.919,33.659"]
"akbir/deq-jax" ["l"="23.118,33.775"]
"junpenglao/All-that-likelihood-with-PyMC3" ["l"="23.741,33.959"]
"alxmamaev/theloop" ["l"="23.436,34.141"]
"yiyixuxu/denoising-diffusion-flax" ["l"="23.498,33.661"]
"google/grain" ["l"="23.459,33.608"]
"bosiakov/fa2l" ["l"="24.044,34.211"]
"google/praxis" ["l"="23.546,33.602"]
"dfm/exoplanet" ["l"="16.95,36.626"]
"jffist/statistical-rethinking-solutions" ["l"="23.865,33.663"]
"stan-dev/httpstan" ["l"="23.992,33.794"]
"wesselb/lab" ["l"="23.529,33.919"]
"willtebbutt/Stheno.jl" ["l"="17.079,39.105"]
"facebookresearch/diffkt" ["l"="23.376,34.005"]
"salesforce/jaxformer" ["l"="-17.519,-33.165"]
"Sea-Snell/JAX_llama" ["l"="23.477,33.599"]
"huggingface/bloom-jax-inference" ["l"="23.482,33.613"]
"lawmurray/Birch.Standard" ["l"="23.543,34.011"]
"facebookresearch/optimizers" ["l"="23.335,33.571"]
"lucidrains/Adan-pytorch" ["l"="31.848,35.063"]
"mplex/multigraph" ["l"="24.119,34.082"]
"tgcsaba/KSig" ["l"="23.151,33.706"]
"cambridgespark/pydata-testing-for-data-science" ["l"="23.589,34.108"]
"timjmiller/wham" ["l"="24.219,33.648"]
"seananderson/glmmfields" ["l"="24.206,33.66"]
}