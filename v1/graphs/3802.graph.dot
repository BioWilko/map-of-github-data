digraph G {
"CommissarMa/MCNN-pytorch" -> "CommissarMa/Crowd_counting_from_scratch"
"CommissarMa/MCNN-pytorch" -> "CommissarMa/CSRNet-pytorch"
"gjy3035/Awesome-Crowd-Counting" -> "gjy3035/C-3-Framework"
"gjy3035/Awesome-Crowd-Counting" -> "leeyeehoo/CSRNet-pytorch"
"gjy3035/Awesome-Crowd-Counting" -> "svishwa/crowdcount-mcnn"
"gjy3035/Awesome-Crowd-Counting" -> "ZhihengCV/Bayesian-Crowd-Counting"
"gjy3035/Awesome-Crowd-Counting" -> "weizheliu/Context-Aware-Crowd-Counting"
"gjy3035/Awesome-Crowd-Counting" -> "gjy3035/NWPU-Crowd-Sample-Code"
"gjy3035/Awesome-Crowd-Counting" -> "CommissarMa/Crowd_counting_from_scratch"
"gjy3035/Awesome-Crowd-Counting" -> "TencentYoutuResearch/CrowdCounting-P2PNet"
"gjy3035/Awesome-Crowd-Counting" -> "gjy3035/GCC-SFCN"
"gjy3035/Awesome-Crowd-Counting" -> "cvlab-stonybrook/DM-Count"
"gjy3035/Awesome-Crowd-Counting" -> "svishwa/crowdcount-cascaded-mtl"
"gjy3035/Awesome-Crowd-Counting" -> "val-iisc/lsc-cnn"
"gjy3035/Awesome-Crowd-Counting" -> "xhp-hust-2018-2011/S-DCNet"
"gjy3035/Awesome-Crowd-Counting" -> "amusi/awesome-object-detection" ["e"=1]
"gjy3035/Awesome-Crowd-Counting" -> "aditya-vora/FCHD-Fully-Convolutional-Head-Detector"
"svishwa/crowdcount-mcnn" -> "svishwa/crowdcount-cascaded-mtl"
"svishwa/crowdcount-mcnn" -> "val-iisc/crowd-counting-scnn"
"svishwa/crowdcount-mcnn" -> "davideverona/deep-crowd-counting_crowdnet"
"svishwa/crowdcount-mcnn" -> "leeyeehoo/CSRNet-pytorch"
"svishwa/crowdcount-mcnn" -> "gjy3035/C-3-Framework"
"svishwa/crowdcount-mcnn" -> "gjy3035/Awesome-Crowd-Counting"
"svishwa/crowdcount-mcnn" -> "Ling-Bao/mscnn"
"svishwa/crowdcount-mcnn" -> "CommissarMa/Crowd_counting_from_scratch"
"svishwa/crowdcount-mcnn" -> "miao0913/SaCNN-CrowdCounting-Tencent_Youtu"
"svishwa/crowdcount-mcnn" -> "gjy3035/NWPU-Crowd-Sample-Code"
"svishwa/crowdcount-mcnn" -> "ZhihengCV/Bayesian-Crowd-Counting"
"svishwa/crowdcount-mcnn" -> "gramuah/ccnn"
"svishwa/crowdcount-mcnn" -> "CommissarMa/MCNN-pytorch"
"svishwa/crowdcount-mcnn" -> "weizheliu/Context-Aware-Crowd-Counting"
"svishwa/crowdcount-mcnn" -> "gjy3035/GCC-SFCN"
"TencentYoutuResearch/CrowdCounting-P2PNet" -> "dk-liang/FIDTM"
"TencentYoutuResearch/CrowdCounting-P2PNet" -> "LoraLinH/Boosting-Crowd-Counting-via-Multifaceted-Attention"
"TencentYoutuResearch/CrowdCounting-P2PNet" -> "dk-liang/TransCrowd"
"TencentYoutuResearch/CrowdCounting-P2PNet" -> "cvlab-stonybrook/DM-Count"
"TencentYoutuResearch/CrowdCounting-P2PNet" -> "dk-liang/CLTR"
"TencentYoutuResearch/CrowdCounting-P2PNet" -> "gjy3035/NWPU-Crowd-Sample-Code"
"TencentYoutuResearch/CrowdCounting-P2PNet" -> "taohan10200/DRNet"
"TencentYoutuResearch/CrowdCounting-P2PNet" -> "Pongpisit-Thanasutives/Variations-of-SFANet-for-Crowd-Counting"
"TencentYoutuResearch/CrowdCounting-P2PNet" -> "flyinglynx/Bilinear-Matching-Network"
"TencentYoutuResearch/CrowdCounting-P2PNet" -> "ZhihengCV/Bayesian-Crowd-Counting"
"TencentYoutuResearch/CrowdCounting-P2PNet" -> "TencentYoutuResearch/CrowdCounting-SASNet"
"TencentYoutuResearch/CrowdCounting-P2PNet" -> "gjy3035/C-3-Framework"
"TencentYoutuResearch/CrowdCounting-P2PNet" -> "zhiqic/Rethinking-Counting"
"TencentYoutuResearch/CrowdCounting-P2PNet" -> "taohan10200/IIM"
"TencentYoutuResearch/CrowdCounting-P2PNet" -> "wfs123456/CCTrans"
"CommissarMa/Crowd_counting_from_scratch" -> "CommissarMa/MCNN-pytorch"
"CommissarMa/Crowd_counting_from_scratch" -> "gjy3035/NWPU-Crowd-Sample-Code"
"CommissarMa/Crowd_counting_from_scratch" -> "CommissarMa/Context-Aware_Crowd_Counting-pytorch"
"CommissarMa/Crowd_counting_from_scratch" -> "CommissarMa/CSRNet-pytorch"
"CommissarMa/Crowd_counting_from_scratch" -> "gjy3035/C-3-Framework"
"CommissarMa/Crowd_counting_from_scratch" -> "weizheliu/Context-Aware-Crowd-Counting"
"CommissarMa/Crowd_counting_from_scratch" -> "ZhihengCV/Bayesian-Crowd-Counting"
"CommissarMa/Crowd_counting_from_scratch" -> "leeyeehoo/CSRNet-pytorch"
"CommissarMa/Crowd_counting_from_scratch" -> "svishwa/crowdcount-mcnn"
"CommissarMa/Crowd_counting_from_scratch" -> "gaoguangshuai/survey-for-crowd-counting"
"CommissarMa/Crowd_counting_from_scratch" -> "Elin24/cclabeler"
"CommissarMa/Crowd_counting_from_scratch" -> "Legion56/Counting-ICCV-DSSINet"
"CommissarMa/Crowd_counting_from_scratch" -> "NeuroSYS-pl/objects_counting_dmap" ["e"=1]
"CommissarMa/Crowd_counting_from_scratch" -> "xhp-hust-2018-2011/S-DCNet"
"CommissarMa/Crowd_counting_from_scratch" -> "val-iisc/lsc-cnn"
"Elin24/cclabeler" -> "Elin24/DCL-CrowdCounting"
"Ling-Bao/mscnn" -> "svishwa/crowdcount-cascaded-mtl"
"Ling-Bao/mscnn" -> "svishwa/crowdcount-mcnn"
"Ling-Bao/mscnn" -> "aditya-vora/crowd_counting_tensorflow"
"Ling-Bao/mscnn" -> "val-iisc/crowd-counting-scnn"
"Ling-Bao/mscnn" -> "davideverona/deep-crowd-counting_crowdnet"
"ZhihengCV/Bayesian-Crowd-Counting" -> "cvlab-stonybrook/DM-Count"
"ZhihengCV/Bayesian-Crowd-Counting" -> "xhp-hust-2018-2011/S-DCNet"
"ZhihengCV/Bayesian-Crowd-Counting" -> "weizheliu/Context-Aware-Crowd-Counting"
"ZhihengCV/Bayesian-Crowd-Counting" -> "Legion56/Counting-ICCV-DSSINet"
"ZhihengCV/Bayesian-Crowd-Counting" -> "gjy3035/C-3-Framework"
"ZhihengCV/Bayesian-Crowd-Counting" -> "gjy3035/NWPU-Crowd-Sample-Code"
"ZhihengCV/Bayesian-Crowd-Counting" -> "leeyeehoo/CSRNet-pytorch"
"ZhihengCV/Bayesian-Crowd-Counting" -> "gjy3035/Awesome-Crowd-Counting"
"ZhihengCV/Bayesian-Crowd-Counting" -> "shizenglin/Counting-with-Focus-for-Free"
"ZhihengCV/Bayesian-Crowd-Counting" -> "CommissarMa/Crowd_counting_from_scratch"
"ZhihengCV/Bayesian-Crowd-Counting" -> "xhp-hust-2018-2011/SS-DCNet"
"ZhihengCV/Bayesian-Crowd-Counting" -> "val-iisc/lsc-cnn"
"ZhihengCV/Bayesian-Crowd-Counting" -> "gjy3035/PCC-Net"
"ZhihengCV/Bayesian-Crowd-Counting" -> "Pongpisit-Thanasutives/Variations-of-SFANet-for-Crowd-Counting"
"ZhihengCV/Bayesian-Crowd-Counting" -> "pxq0312/SFANet-crowd-counting"
"cvlab-stonybrook/DM-Count" -> "ZhihengCV/Bayesian-Crowd-Counting"
"cvlab-stonybrook/DM-Count" -> "weizheliu/Context-Aware-Crowd-Counting"
"cvlab-stonybrook/DM-Count" -> "LoraLinH/Boosting-Crowd-Counting-via-Multifaceted-Attention"
"cvlab-stonybrook/DM-Count" -> "TencentYoutuResearch/CrowdCounting-SASNet"
"cvlab-stonybrook/DM-Count" -> "xiyang1012/Local-Crowd-Counting"
"cvlab-stonybrook/DM-Count" -> "TencentYoutuResearch/CrowdCounting-P2PNet"
"cvlab-stonybrook/DM-Count" -> "Pongpisit-Thanasutives/Variations-of-SFANet-for-Crowd-Counting"
"cvlab-stonybrook/DM-Count" -> "gjy3035/NWPU-Crowd-Sample-Code"
"cvlab-stonybrook/DM-Count" -> "rongliangzi/MARUNet"
"cvlab-stonybrook/DM-Count" -> "Legion56/Counting-ICCV-DSSINet"
"cvlab-stonybrook/DM-Count" -> "HCPLab-SYSU/SKT"
"cvlab-stonybrook/DM-Count" -> "laridzhang/ASNet"
"cvlab-stonybrook/DM-Count" -> "dk-liang/TransCrowd"
"cvlab-stonybrook/DM-Count" -> "pxq0312/SFANet-crowd-counting"
"cvlab-stonybrook/DM-Count" -> "gjy3035/C-3-Framework"
"gjy3035/C-3-Framework" -> "gjy3035/Awesome-Crowd-Counting"
"gjy3035/C-3-Framework" -> "leeyeehoo/CSRNet-pytorch"
"gjy3035/C-3-Framework" -> "ZhihengCV/Bayesian-Crowd-Counting"
"gjy3035/C-3-Framework" -> "gjy3035/NWPU-Crowd-Sample-Code"
"gjy3035/C-3-Framework" -> "CommissarMa/Crowd_counting_from_scratch"
"gjy3035/C-3-Framework" -> "svishwa/crowdcount-mcnn"
"gjy3035/C-3-Framework" -> "weizheliu/Context-Aware-Crowd-Counting"
"gjy3035/C-3-Framework" -> "xhp-hust-2018-2011/S-DCNet"
"gjy3035/C-3-Framework" -> "gjy3035/GCC-SFCN"
"gjy3035/C-3-Framework" -> "val-iisc/lsc-cnn"
"gjy3035/C-3-Framework" -> "cvlab-stonybrook/DM-Count"
"gjy3035/C-3-Framework" -> "svishwa/crowdcount-cascaded-mtl"
"gjy3035/C-3-Framework" -> "gjy3035/PCC-Net"
"gjy3035/C-3-Framework" -> "TencentYoutuResearch/CrowdCounting-P2PNet"
"gjy3035/C-3-Framework" -> "dk-liang/FIDTM"
"leeyeehoo/CSRNet-pytorch" -> "gjy3035/C-3-Framework"
"leeyeehoo/CSRNet-pytorch" -> "gjy3035/Awesome-Crowd-Counting"
"leeyeehoo/CSRNet-pytorch" -> "svishwa/crowdcount-mcnn"
"leeyeehoo/CSRNet-pytorch" -> "weizheliu/Context-Aware-Crowd-Counting"
"leeyeehoo/CSRNet-pytorch" -> "ZhihengCV/Bayesian-Crowd-Counting"
"leeyeehoo/CSRNet-pytorch" -> "val-iisc/lsc-cnn"
"leeyeehoo/CSRNet-pytorch" -> "CommissarMa/Crowd_counting_from_scratch"
"leeyeehoo/CSRNet-pytorch" -> "svishwa/crowdcount-cascaded-mtl"
"leeyeehoo/CSRNet-pytorch" -> "gjy3035/GCC-SFCN"
"leeyeehoo/CSRNet-pytorch" -> "cvlab-stonybrook/DM-Count"
"leeyeehoo/CSRNet-pytorch" -> "gjy3035/NWPU-Crowd-Sample-Code"
"leeyeehoo/CSRNet-pytorch" -> "xhp-hust-2018-2011/S-DCNet"
"leeyeehoo/CSRNet-pytorch" -> "davideverona/deep-crowd-counting_crowdnet"
"leeyeehoo/CSRNet-pytorch" -> "xr0927/chapter5-learning_CSRNet"
"leeyeehoo/CSRNet-pytorch" -> "Neerajj9/CSRNet-keras"
"ElementAI/LCFCN" -> "IssamLaradji/affinity_lcfcn"
"ElementAI/LCFCN" -> "val-iisc/lsc-cnn"
"ElementAI/LCFCN" -> "GuoleiSun/CountSeg" ["e"=1]
"ElementAI/LCFCN" -> "xhp-hust-2018-2011/S-DCNet"
"ElementAI/LCFCN" -> "Legion56/Counting-ICCV-DSSINet"
"ElementAI/LCFCN" -> "ZhihengCV/Bayesian-Crowd-Counting"
"ElementAI/LCFCN" -> "alzayats/DeepFish"
"LoraLinH/Boosting-Crowd-Counting-via-Multifaceted-Attention" -> "wfs123456/CCTrans"
"LoraLinH/Boosting-Crowd-Counting-via-Multifaceted-Attention" -> "taohan10200/DRNet"
"LoraLinH/Boosting-Crowd-Counting-via-Multifaceted-Attention" -> "RCVLab-AiimLab/crowd_counting"
"LoraLinH/Boosting-Crowd-Counting-via-Multifaceted-Attention" -> "dk-liang/CLTR"
"LoraLinH/Boosting-Crowd-Counting-via-Multifaceted-Attention" -> "TencentYoutuResearch/CrowdCounting-P2PNet"
"dk-liang/FIDTM" -> "taohan10200/IIM"
"dk-liang/FIDTM" -> "dk-liang/CLTR"
"dk-liang/FIDTM" -> "TencentYoutuResearch/CrowdCounting-P2PNet"
"dk-liang/FIDTM" -> "weizheliu/Context-Aware-Crowd-Counting"
"dk-liang/FIDTM" -> "zhiyuanyou/SAFECount"
"dk-liang/FIDTM" -> "gjy3035/NWPU-Crowd-Sample-Code"
"dk-liang/FIDTM" -> "dk-liang/TransCrowd"
"dk-liang/FIDTM" -> "cvlab-stonybrook/DM-Count"
"dk-liang/FIDTM" -> "LoraLinH/Boosting-Crowd-Counting-via-Multifaceted-Attention"
"dk-liang/FIDTM" -> "gaoguangshuai/survey-for-crowd-counting"
"dk-liang/FIDTM" -> "flyinglynx/Bilinear-Matching-Network"
"gjy3035/NWPU-Crowd-Sample-Code" -> "weizheliu/Context-Aware-Crowd-Counting"
"gjy3035/NWPU-Crowd-Sample-Code" -> "CommissarMa/Crowd_counting_from_scratch"
"gjy3035/NWPU-Crowd-Sample-Code" -> "gjy3035/C-3-Framework"
"gjy3035/NWPU-Crowd-Sample-Code" -> "xhp-hust-2018-2011/S-DCNet"
"gjy3035/NWPU-Crowd-Sample-Code" -> "pxq0312/SFANet-crowd-counting"
"gjy3035/NWPU-Crowd-Sample-Code" -> "gjy3035/PCC-Net"
"gjy3035/NWPU-Crowd-Sample-Code" -> "dk-liang/TransCrowd"
"gjy3035/NWPU-Crowd-Sample-Code" -> "gaoguangshuai/survey-for-crowd-counting"
"gjy3035/NWPU-Crowd-Sample-Code" -> "ZhihengCV/Bayesian-Crowd-Counting"
"gjy3035/NWPU-Crowd-Sample-Code" -> "xiyang1012/Local-Crowd-Counting"
"gjy3035/NWPU-Crowd-Sample-Code" -> "cvlab-stonybrook/DM-Count"
"gjy3035/NWPU-Crowd-Sample-Code" -> "CommissarMa/MCNN-pytorch"
"gjy3035/NWPU-Crowd-Sample-Code" -> "dk-liang/FIDTM"
"gjy3035/NWPU-Crowd-Sample-Code" -> "Pongpisit-Thanasutives/Variations-of-SFANet-for-Crowd-Counting"
"gjy3035/NWPU-Crowd-Sample-Code" -> "taohan10200/IIM"
"val-iisc/lsc-cnn" -> "xhp-hust-2018-2011/S-DCNet"
"val-iisc/lsc-cnn" -> "gjy3035/PCC-Net"
"val-iisc/lsc-cnn" -> "weizheliu/Context-Aware-Crowd-Counting"
"val-iisc/lsc-cnn" -> "vlad3996/lsc-cnn"
"val-iisc/lsc-cnn" -> "Legion56/Counting-ICCV-DSSINet"
"val-iisc/lsc-cnn" -> "ZhihengCV/Bayesian-Crowd-Counting"
"val-iisc/lsc-cnn" -> "leeyeehoo/CSRNet-pytorch"
"val-iisc/lsc-cnn" -> "gjy3035/C-3-Framework"
"val-iisc/lsc-cnn" -> "svishwa/crowdcount-cascaded-mtl"
"val-iisc/lsc-cnn" -> "xhp-hust-2018-2011/SS-DCNet"
"val-iisc/lsc-cnn" -> "ElementAI/LCFCN"
"val-iisc/lsc-cnn" -> "gjy3035/NWPU-Crowd-Sample-Code"
"val-iisc/lsc-cnn" -> "pxq0312/SFANet-crowd-counting"
"val-iisc/lsc-cnn" -> "CommissarMa/Crowd_counting_from_scratch"
"val-iisc/lsc-cnn" -> "shizenglin/Counting-with-Focus-for-Free"
"wfs123456/CCTrans" -> "dk-liang/TransCrowd"
"wfs123456/CCTrans" -> "LoraLinH/Boosting-Crowd-Counting-via-Multifaceted-Attention"
"pranoyr/head-detection-using-yolo" -> "aditya-vora/FCHD-Fully-Convolutional-Head-Detector"
"pranoyr/head-detection-using-yolo" -> "HCIILAB/SCUT-HEAD-Dataset-Release"
"pranoyr/head-detection-using-yolo" -> "aosokin/cnn_head_detection"
"pranoyr/head-detection-using-yolo" -> "lincolnhard/mtcnn-head-detection"
"pranoyr/head-detection-using-yolo" -> "AVAuco/ssd_head_keras"
"pranoyr/head-detection-using-yolo" -> "wnov/Keras_Head_Detection_YoloV3"
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "HCIILAB/SCUT-HEAD-Dataset-Release"
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "pranoyr/head-detection-using-yolo"
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices" ["e"=1]
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "gjy3035/C-3-Framework"
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "liuwei16/CSP" ["e"=1]
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "val-iisc/lsc-cnn"
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "aosokin/cnn_head_detection"
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "TencentYoutuResearch/FaceDetection-DSFD" ["e"=1]
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "gjy3035/Awesome-Crowd-Counting"
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "svishwa/crowdcount-mcnn"
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "zuoqing1988/train-mtcnn-head"
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "natanielruiz/deep-head-pose" ["e"=1]
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "siyuhuang/crowdcount-stackpool"
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "leeyeehoo/CSRNet-pytorch"
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" -> "becauseofAI/MobileFace" ["e"=1]
"Pongpisit-Thanasutives/Variations-of-SFANet-for-Crowd-Counting" -> "pxq0312/SFANet-crowd-counting"
"Pongpisit-Thanasutives/Variations-of-SFANet-for-Crowd-Counting" -> "TencentYoutuResearch/CrowdCounting-SASNet"
"Pongpisit-Thanasutives/Variations-of-SFANet-for-Crowd-Counting" -> "weizheliu/Context-Aware-Crowd-Counting"
"Pongpisit-Thanasutives/Variations-of-SFANet-for-Crowd-Counting" -> "xhp-hust-2018-2011/SS-DCNet"
"Pongpisit-Thanasutives/Variations-of-SFANet-for-Crowd-Counting" -> "dk-liang/TransCrowd"
"Pongpisit-Thanasutives/Variations-of-SFANet-for-Crowd-Counting" -> "HCPLab-SYSU/SKT"
"Pongpisit-Thanasutives/Variations-of-SFANet-for-Crowd-Counting" -> "cvlab-stonybrook/DM-Count"
"TencentYoutuResearch/CrowdCounting-SASNet" -> "dk-liang/AutoScale"
"TencentYoutuResearch/CrowdCounting-SASNet" -> "Pongpisit-Thanasutives/Variations-of-SFANet-for-Crowd-Counting"
"ZhengPeng7/SANet-Keras" -> "gjy3035/SCAR"
"miao0913/SaCNN-CrowdCounting-Tencent_Youtu" -> "val-iisc/crowd-counting-scnn"
"miao0913/SaCNN-CrowdCounting-Tencent_Youtu" -> "hankong/crowd-counting"
"miao0913/SaCNN-CrowdCounting-Tencent_Youtu" -> "davideverona/deep-crowd-counting_crowdnet"
"miao0913/SaCNN-CrowdCounting-Tencent_Youtu" -> "xialeiliu/CrowdCountingCVPR18"
"miao0913/SaCNN-CrowdCounting-Tencent_Youtu" -> "svishwa/crowdcount-cascaded-mtl"
"miao0913/SaCNN-CrowdCounting-Tencent_Youtu" -> "miao0913/PACNN-PerspectiveAware-CrowdCounting"
"miao0913/SaCNN-CrowdCounting-Tencent_Youtu" -> "svishwa/crowdcount-mcnn"
"cvlab-stonybrook/LearningToCountEverything" -> "zhiyuanyou/SAFECount"
"cvlab-stonybrook/LearningToCountEverything" -> "erikalu/class-agnostic-counting"
"cvlab-stonybrook/LearningToCountEverything" -> "flyinglynx/Bilinear-Matching-Network"
"cvlab-stonybrook/LearningToCountEverything" -> "cvlab-stonybrook/DM-Count"
"cvlab-stonybrook/LearningToCountEverything" -> "dk-liang/FIDTM"
"cvlab-stonybrook/LearningToCountEverything" -> "weizheliu/Context-Aware-Crowd-Counting"
"cvlab-stonybrook/LearningToCountEverything" -> "TencentYoutuResearch/CrowdCounting-P2PNet"
"cvlab-stonybrook/LearningToCountEverything" -> "dk-liang/TransCrowd"
"val-iisc/crowd-counting-scnn" -> "davideverona/deep-crowd-counting_crowdnet"
"val-iisc/crowd-counting-scnn" -> "svishwa/crowdcount-mcnn"
"val-iisc/crowd-counting-scnn" -> "svishwa/crowdcount-cascaded-mtl"
"val-iisc/crowd-counting-scnn" -> "miao0913/SaCNN-CrowdCounting-Tencent_Youtu"
"val-iisc/crowd-counting-scnn" -> "gramuah/ccnn"
"val-iisc/crowd-counting-scnn" -> "xialeiliu/CrowdCountingCVPR18"
"val-iisc/crowd-counting-scnn" -> "Ling-Bao/mscnn"
"val-iisc/crowd-counting-scnn" -> "hankong/crowd-counting"
"val-iisc/crowd-counting-scnn" -> "Ling-Bao/ACSCP_cGAN"
"val-iisc/crowd-counting-scnn" -> "leeyeehoo/Reduplication-of-Single-Image-Crowd-Counting-via-MCNN-on-UCF-Dataset"
"val-iisc/crowd-counting-scnn" -> "leeyeehoo/CSRNet-pytorch"
"alzayats/DeepFish" -> "IssamLaradji/affinity_lcfcn"
"kwea123/fish_detection" -> "WHOIGit/FishDetector"
"kwea123/fish_detection" -> "rocapal/fish_detection"
"kwea123/fish_detection" -> "alzayats/DeepFish"
"HCIILAB/SCUT-HEAD-Dataset-Release" -> "aditya-vora/FCHD-Fully-Convolutional-Head-Detector"
"HCIILAB/SCUT-HEAD-Dataset-Release" -> "pranoyr/head-detection-using-yolo"
"HCIILAB/SCUT-HEAD-Dataset-Release" -> "aosokin/cnn_head_detection"
"HCIILAB/SCUT-HEAD-Dataset-Release" -> "njvisionpower/Safety-Helmet-Wearing-Dataset" ["e"=1]
"HCIILAB/SCUT-HEAD-Dataset-Release" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices" ["e"=1]
"HCIILAB/SCUT-HEAD-Dataset-Release" -> "becauseofAI/lffd-pytorch" ["e"=1]
"HCIILAB/SCUT-HEAD-Dataset-Release" -> "gjy3035/C-3-Framework"
"HCIILAB/SCUT-HEAD-Dataset-Release" -> "biubug6/Face-Detector-1MB-with-landmark" ["e"=1]
"HCIILAB/SCUT-HEAD-Dataset-Release" -> "Charrin/RetinaFace-Cpp" ["e"=1]
"HCIILAB/SCUT-HEAD-Dataset-Release" -> "Star-Clouds/centerface" ["e"=1]
"jia-wan/KDMG_Counting" -> "taohan10200/NLT"
"weizheliu/Context-Aware-Crowd-Counting" -> "CommissarMa/Context-Aware_Crowd_Counting-pytorch"
"weizheliu/Context-Aware-Crowd-Counting" -> "Legion56/Counting-ICCV-DSSINet"
"weizheliu/Context-Aware-Crowd-Counting" -> "gjy3035/NWPU-Crowd-Sample-Code"
"weizheliu/Context-Aware-Crowd-Counting" -> "ZhihengCV/Bayesian-Crowd-Counting"
"weizheliu/Context-Aware-Crowd-Counting" -> "shizenglin/Counting-with-Focus-for-Free"
"weizheliu/Context-Aware-Crowd-Counting" -> "xhp-hust-2018-2011/S-DCNet"
"weizheliu/Context-Aware-Crowd-Counting" -> "Pongpisit-Thanasutives/Variations-of-SFANet-for-Crowd-Counting"
"weizheliu/Context-Aware-Crowd-Counting" -> "cvlab-stonybrook/DM-Count"
"weizheliu/Context-Aware-Crowd-Counting" -> "pxq0312/SFANet-crowd-counting"
"weizheliu/Context-Aware-Crowd-Counting" -> "xiyang1012/Local-Crowd-Counting"
"weizheliu/Context-Aware-Crowd-Counting" -> "leeyeehoo/CSRNet-pytorch"
"weizheliu/Context-Aware-Crowd-Counting" -> "val-iisc/lsc-cnn"
"weizheliu/Context-Aware-Crowd-Counting" -> "CommissarMa/Crowd_counting_from_scratch"
"weizheliu/Context-Aware-Crowd-Counting" -> "gjy3035/C-3-Framework"
"weizheliu/Context-Aware-Crowd-Counting" -> "weizheliu/People-Flows"
"xhp-hust-2018-2011/S-DCNet" -> "xhp-hust-2018-2011/SS-DCNet"
"xhp-hust-2018-2011/S-DCNet" -> "ZhihengCV/Bayesian-Crowd-Counting"
"xhp-hust-2018-2011/S-DCNet" -> "Legion56/Counting-ICCV-DSSINet"
"xhp-hust-2018-2011/S-DCNet" -> "shizenglin/Counting-with-Focus-for-Free"
"xhp-hust-2018-2011/S-DCNet" -> "val-iisc/lsc-cnn"
"xhp-hust-2018-2011/S-DCNet" -> "weizheliu/Context-Aware-Crowd-Counting"
"xhp-hust-2018-2011/S-DCNet" -> "gjy3035/NWPU-Crowd-Sample-Code"
"xhp-hust-2018-2011/S-DCNet" -> "Willy0919/CODA"
"xhp-hust-2018-2011/S-DCNet" -> "xiyang1012/Local-Crowd-Counting"
"xhp-hust-2018-2011/S-DCNet" -> "gjy3035/C-3-Framework"
"xhp-hust-2018-2011/S-DCNet" -> "RQuispeC/pytorch-ACSCP"
"xhp-hust-2018-2011/S-DCNet" -> "dmburd/S-DCNet"
"xhp-hust-2018-2011/S-DCNet" -> "laridzhang/ASNet"
"xhp-hust-2018-2011/S-DCNet" -> "pxq0312/SFANet-crowd-counting"
"xhp-hust-2018-2011/S-DCNet" -> "TencentYoutuResearch/CrowdCounting-SASNet"
"svishwa/crowdcount-cascaded-mtl" -> "svishwa/crowdcount-mcnn"
"svishwa/crowdcount-cascaded-mtl" -> "val-iisc/crowd-counting-scnn"
"svishwa/crowdcount-cascaded-mtl" -> "davideverona/deep-crowd-counting_crowdnet"
"svishwa/crowdcount-cascaded-mtl" -> "Ling-Bao/mscnn"
"svishwa/crowdcount-cascaded-mtl" -> "xialeiliu/CrowdCountingCVPR18"
"svishwa/crowdcount-cascaded-mtl" -> "miao0913/SaCNN-CrowdCounting-Tencent_Youtu"
"svishwa/crowdcount-cascaded-mtl" -> "gjy3035/C-3-Framework"
"svishwa/crowdcount-cascaded-mtl" -> "val-iisc/lsc-cnn"
"svishwa/crowdcount-cascaded-mtl" -> "leeyeehoo/CSRNet-pytorch"
"svishwa/crowdcount-cascaded-mtl" -> "ZhihengCV/Bayesian-Crowd-Counting"
"svishwa/crowdcount-cascaded-mtl" -> "gramuah/ccnn"
"svishwa/crowdcount-cascaded-mtl" -> "weizheliu/Context-Aware-Crowd-Counting"
"svishwa/crowdcount-cascaded-mtl" -> "hankong/crowd-counting"
"svishwa/crowdcount-cascaded-mtl" -> "CommissarMa/Crowd_counting_from_scratch"
"svishwa/crowdcount-cascaded-mtl" -> "pxq0312/SFANet-crowd-counting"
"shizenglin/Counting-with-Focus-for-Free" -> "Legion56/Counting-ICCV-DSSINet"
"shizenglin/Counting-with-Focus-for-Free" -> "xhp-hust-2018-2011/S-DCNet"
"shizenglin/Counting-with-Focus-for-Free" -> "weizheliu/Context-Aware-Crowd-Counting"
"shizenglin/Counting-with-Focus-for-Free" -> "Willy0919/CODA"
"shizenglin/Counting-with-Focus-for-Free" -> "pxq0312/SFANet-crowd-counting"
"shizenglin/Counting-with-Focus-for-Free" -> "Zhaoyi-Yan/PGCNet"
"flyinglynx/Bilinear-Matching-Network" -> "zhiyuanyou/SAFECount"
"zhiyuanyou/SAFECount" -> "flyinglynx/Bilinear-Matching-Network"
"gjy3035/GCC-CL" -> "gjy3035/GCC-SFCN"
"gjy3035/GCC-CL" -> "taohan10200/IIM"
"gjy3035/GCC-CL" -> "umautobots/GTAVisionExport" ["e"=1]
"gjy3035/GCC-SFCN" -> "gjy3035/GCC-CL"
"gjy3035/GCC-SFCN" -> "Legion56/Counting-ICCV-DSSINet"
"gjy3035/GCC-SFCN" -> "gjy3035/PCC-Net"
"gjy3035/GCC-SFCN" -> "gjy3035/C-3-Framework"
"gjy3035/GCC-SFCN" -> "shizenglin/Counting-with-Focus-for-Free"
"gjy3035/GCC-SFCN" -> "xialeiliu/CrowdCountingCVPR18"
"gjy3035/GCC-SFCN" -> "leeyeehoo/CSRNet-pytorch"
"gjy3035/GCC-SFCN" -> "ZhihengCV/Bayesian-Crowd-Counting"
"gjy3035/GCC-SFCN" -> "taohan10200/NLT"
"gjy3035/GCC-SFCN" -> "jia-wan/ResidualRegression-pytorch"
"gjy3035/GCC-SFCN" -> "Ling-Bao/ACSCP_cGAN"
"gjy3035/GCC-SFCN" -> "gjy3035/NWPU-Crowd-Sample-Code"
"gjy3035/GCC-SFCN" -> "weizheliu/Context-Aware-Crowd-Counting"
"gjy3035/GCC-SFCN" -> "pxq0312/SFANet-crowd-counting"
"gjy3035/GCC-SFCN" -> "val-iisc/lsc-cnn"
"xialeiliu/CrowdCountingCVPR18" -> "Legion56/Counting-ICCV-DSSINet"
"xialeiliu/CrowdCountingCVPR18" -> "shizenglin/Deep-NCL"
"xialeiliu/CrowdCountingCVPR18" -> "svishwa/crowdcount-cascaded-mtl"
"xialeiliu/CrowdCountingCVPR18" -> "miao0913/SaCNN-CrowdCounting-Tencent_Youtu"
"xialeiliu/CrowdCountingCVPR18" -> "Ling-Bao/ACSCP_cGAN"
"gramuah/ccnn" -> "val-iisc/crowd-counting-scnn"
"gramuah/ccnn" -> "polltooh/traffic_video_analysis"
"gramuah/ccnn" -> "davideverona/deep-crowd-counting_crowdnet"
"gramuah/ccnn" -> "svishwa/crowdcount-cascaded-mtl"
"gramuah/ccnn" -> "svishwa/crowdcount-mcnn"
"davideverona/deep-crowd-counting_crowdnet" -> "val-iisc/crowd-counting-scnn"
"davideverona/deep-crowd-counting_crowdnet" -> "svishwa/crowdcount-mcnn"
"davideverona/deep-crowd-counting_crowdnet" -> "svishwa/crowdcount-cascaded-mtl"
"davideverona/deep-crowd-counting_crowdnet" -> "miao0913/SaCNN-CrowdCounting-Tencent_Youtu"
"davideverona/deep-crowd-counting_crowdnet" -> "gramuah/ccnn"
"davideverona/deep-crowd-counting_crowdnet" -> "wk910930/crowd_density_segmentation"
"davideverona/deep-crowd-counting_crowdnet" -> "Ling-Bao/mscnn"
"davideverona/deep-crowd-counting_crowdnet" -> "leeyeehoo/CSRNet-pytorch"
"davideverona/deep-crowd-counting_crowdnet" -> "hankong/crowd-counting"
"davideverona/deep-crowd-counting_crowdnet" -> "xialeiliu/CrowdCountingCVPR18"
"davideverona/deep-crowd-counting_crowdnet" -> "aditya-vora/crowd_counting_tensorflow"
"davideverona/deep-crowd-counting_crowdnet" -> "gjy3035/C-3-Framework"
"gjy3035/PCC-Net" -> "svip-lab/RGBD-Counting"
"gjy3035/PCC-Net" -> "Legion56/Counting-ICCV-DSSINet"
"gjy3035/PCC-Net" -> "pxq0312/SFANet-crowd-counting"
"taohan10200/IIM" -> "dk-liang/FIDTM"
"taohan10200/IIM" -> "taohan10200/DRNet"
"taohan10200/IIM" -> "taohan10200/Awesome-Crowd-Localization"
"taohan10200/IIM" -> "hustaia/Decoupled_Two-stage_Counting"
"Legion56/Counting-ICCV-DSSINet" -> "Zhaoyi-Yan/PGCNet"
"Legion56/Counting-ICCV-DSSINet" -> "pxq0312/SFANet-crowd-counting"
"Legion56/Counting-ICCV-DSSINet" -> "RQuispeC/pytorch-ACSCP"
"Legion56/Counting-ICCV-DSSINet" -> "weizheliu/Context-Aware-Crowd-Counting"
"Legion56/Counting-ICCV-DSSINet" -> "shizenglin/Counting-with-Focus-for-Free"
"Legion56/Counting-ICCV-DSSINet" -> "xhp-hust-2018-2011/S-DCNet"
"Legion56/Counting-ICCV-DSSINet" -> "xhp-hust-2018-2011/SS-DCNet"
"Legion56/Counting-ICCV-DSSINet" -> "CommissarMa/Context-Aware_Crowd_Counting-pytorch"
"Legion56/Counting-ICCV-DSSINet" -> "svip-lab/RGBD-Counting"
"Legion56/Counting-ICCV-DSSINet" -> "gjy3035/PCC-Net"
"Legion56/Counting-ICCV-DSSINet" -> "xr0927/chapter9-learnCVPR2019-Context-Aware_Crowd_Counting"
"Legion56/Counting-ICCV-DSSINet" -> "ZhihengCV/Bayesian-Crowd-Counting"
"Legion56/Counting-ICCV-DSSINet" -> "HCPLab-SYSU/SKT"
"dk-liang/TransCrowd" -> "wfs123456/CCTrans"
"dk-liang/TransCrowd" -> "dk-liang/CLTR"
"CommissarMa/Context-Aware_Crowd_Counting-pytorch" -> "weizheliu/Context-Aware-Crowd-Counting"
"CommissarMa/Context-Aware_Crowd_Counting-pytorch" -> "Legion56/Counting-ICCV-DSSINet"
"CommissarMa/Context-Aware_Crowd_Counting-pytorch" -> "CommissarMa/Crowd_counting_from_scratch"
"CommissarMa/Context-Aware_Crowd_Counting-pytorch" -> "svip-lab/RGBD-Counting"
"CommissarMa/Context-Aware_Crowd_Counting-pytorch" -> "pxq0312/SFANet-crowd-counting"
"SinicaGroup/Class-agnostic-Few-shot-Object-Counting" -> "flyinglynx/Bilinear-Matching-Network"
"VisDrone/DroneCrowd" -> "RCVLab-AiimLab/crowd_counting"
"VisDrone/DroneCrowd" -> "wbshu/Crowd_Counting_in_the_Frequency_Domain"
"VisDrone/DroneCrowd" -> "dk-liang/TransCrowd"
"aosokin/cnn_head_detection" -> "pranoyr/head-detection-using-yolo"
"aosokin/cnn_head_detection" -> "Russell91/ReInspect" ["e"=1]
"aosokin/cnn_head_detection" -> "HCIILAB/SCUT-HEAD-Dataset-Release"
"aosokin/cnn_head_detection" -> "yquemener/HeadCounter"
"aosokin/cnn_head_detection" -> "anson0910/CNN_face_detection" ["e"=1]
"aosokin/cnn_head_detection" -> "aditya-vora/FCHD-Fully-Convolutional-Head-Detector"
"aosokin/cnn_head_detection" -> "layumi/2015_Face_Detection" ["e"=1]
"Neerajj9/CSRNet-keras" -> "ZhengPeng7/CSRNet-Keras"
"Neerajj9/CSRNet-keras" -> "luckyluckydadada/CSRnet"
"Neerajj9/CSRNet-keras" -> "ZhengPeng7/SANet-Keras"
"Ling-Bao/ACSCP_cGAN" -> "RQuispeC/pytorch-ACSCP"
"laridzhang/ASNet" -> "HCPLab-SYSU/SKT"
"pxq0312/SFANet-crowd-counting" -> "pxq0312/ASD-crowd-counting"
"pxq0312/SFANet-crowd-counting" -> "Legion56/Counting-ICCV-DSSINet"
"pxq0312/SFANet-crowd-counting" -> "Pongpisit-Thanasutives/Variations-of-SFANet-for-Crowd-Counting"
"rongliangzi/MARUNet" -> "hustaia/Decoupled_Two-stage_Counting"
"xhp-hust-2018-2011/SS-DCNet" -> "xhp-hust-2018-2011/S-DCNet"
"xhp-hust-2018-2011/SS-DCNet" -> "Legion56/Counting-ICCV-DSSINet"
"xhp-hust-2018-2011/SS-DCNet" -> "xiyang1012/Local-Crowd-Counting"
"xhp-hust-2018-2011/SS-DCNet" -> "TencentYoutuResearch/CrowdCounting-SASNet"
"xhp-hust-2018-2011/SS-DCNet" -> "MohamedAliRashad/Crowd-DCNet"
"xhp-hust-2018-2011/SS-DCNet" -> "Pongpisit-Thanasutives/Variations-of-SFANet-for-Crowd-Counting"
"taohan10200/DRNet" -> "RCVLab-AiimLab/crowd_counting"
"taohan10200/DRNet" -> "taohan10200/NLT"
"xiyang1012/Local-Crowd-Counting" -> "rongliangzi/MARUNet"
"xiyang1012/Local-Crowd-Counting" -> "xhp-hust-2018-2011/SS-DCNet"
"xiyang1012/Local-Crowd-Counting" -> "taohan10200/NLT"
"xiyang1012/Local-Crowd-Counting" -> "Legion56/Counting-ICCV-DSSINet"
"xiyang1012/Local-Crowd-Counting" -> "TencentYoutuResearch/CrowdCounting-SASNet"
"xiyang1012/Local-Crowd-Counting" -> "poppinace/libranet"
"dk-liang/AutoScale" -> "dk-liang/AutoScale_regression"
"CommissarMa/MCNN-pytorch" ["l"="34.11,34.087"]
"CommissarMa/Crowd_counting_from_scratch" ["l"="34.104,34.105"]
"CommissarMa/CSRNet-pytorch" ["l"="34.132,34.073"]
"gjy3035/Awesome-Crowd-Counting" ["l"="34.048,34.122"]
"gjy3035/C-3-Framework" ["l"="34.072,34.125"]
"leeyeehoo/CSRNet-pytorch" ["l"="34.08,34.097"]
"svishwa/crowdcount-mcnn" ["l"="34.06,34.093"]
"ZhihengCV/Bayesian-Crowd-Counting" ["l"="34.091,34.12"]
"weizheliu/Context-Aware-Crowd-Counting" ["l"="34.102,34.129"]
"gjy3035/NWPU-Crowd-Sample-Code" ["l"="34.09,34.135"]
"TencentYoutuResearch/CrowdCounting-P2PNet" ["l"="34.082,34.167"]
"gjy3035/GCC-SFCN" ["l"="34.075,34.114"]
"cvlab-stonybrook/DM-Count" ["l"="34.092,34.148"]
"svishwa/crowdcount-cascaded-mtl" ["l"="34.074,34.084"]
"val-iisc/lsc-cnn" ["l"="34.094,34.107"]
"xhp-hust-2018-2011/S-DCNet" ["l"="34.104,34.118"]
"amusi/awesome-object-detection" ["l"="34.384,35.388"]
"aditya-vora/FCHD-Fully-Convolutional-Head-Detector" ["l"="34.007,34.116"]
"val-iisc/crowd-counting-scnn" ["l"="34.059,34.06"]
"davideverona/deep-crowd-counting_crowdnet" ["l"="34.07,34.068"]
"Ling-Bao/mscnn" ["l"="34.082,34.06"]
"miao0913/SaCNN-CrowdCounting-Tencent_Youtu" ["l"="34.047,34.059"]
"gramuah/ccnn" ["l"="34.036,34.069"]
"dk-liang/FIDTM" ["l"="34.096,34.17"]
"LoraLinH/Boosting-Crowd-Counting-via-Multifaceted-Attention" ["l"="34.082,34.186"]
"dk-liang/TransCrowd" ["l"="34.096,34.182"]
"dk-liang/CLTR" ["l"="34.082,34.197"]
"taohan10200/DRNet" ["l"="34.068,34.19"]
"Pongpisit-Thanasutives/Variations-of-SFANet-for-Crowd-Counting" ["l"="34.108,34.148"]
"flyinglynx/Bilinear-Matching-Network" ["l"="34.11,34.203"]
"TencentYoutuResearch/CrowdCounting-SASNet" ["l"="34.13,34.155"]
"zhiqic/Rethinking-Counting" ["l"="34.052,34.199"]
"taohan10200/IIM" ["l"="34.059,34.175"]
"wfs123456/CCTrans" ["l"="34.094,34.197"]
"CommissarMa/Context-Aware_Crowd_Counting-pytorch" ["l"="34.132,34.121"]
"gaoguangshuai/survey-for-crowd-counting" ["l"="34.118,34.159"]
"Elin24/cclabeler" ["l"="34.174,34.089"]
"Legion56/Counting-ICCV-DSSINet" ["l"="34.116,34.118"]
"NeuroSYS-pl/objects_counting_dmap" ["l"="15.95,37.121"]
"Elin24/DCL-CrowdCounting" ["l"="34.202,34.087"]
"aditya-vora/crowd_counting_tensorflow" ["l"="34.086,34.04"]
"shizenglin/Counting-with-Focus-for-Free" ["l"="34.127,34.11"]
"xhp-hust-2018-2011/SS-DCNet" ["l"="34.126,34.134"]
"gjy3035/PCC-Net" ["l"="34.114,34.109"]
"pxq0312/SFANet-crowd-counting" ["l"="34.114,34.127"]
"xiyang1012/Local-Crowd-Counting" ["l"="34.119,34.145"]
"rongliangzi/MARUNet" ["l"="34.067,34.162"]
"HCPLab-SYSU/SKT" ["l"="34.082,34.152"]
"laridzhang/ASNet" ["l"="34.068,34.147"]
"xr0927/chapter5-learning_CSRNet" ["l"="34.108,34.056"]
"Neerajj9/CSRNet-keras" ["l"="34.108,34.018"]
"ElementAI/LCFCN" ["l"="34.135,34.089"]
"IssamLaradji/affinity_lcfcn" ["l"="34.166,34.068"]
"GuoleiSun/CountSeg" ["l"="30.806,37.52"]
"alzayats/DeepFish" ["l"="34.187,34.058"]
"RCVLab-AiimLab/crowd_counting" ["l"="34.071,34.211"]
"zhiyuanyou/SAFECount" ["l"="34.124,34.201"]
"vlad3996/lsc-cnn" ["l"="34.116,34.07"]
"pranoyr/head-detection-using-yolo" ["l"="33.953,34.116"]
"HCIILAB/SCUT-HEAD-Dataset-Release" ["l"="33.98,34.115"]
"aosokin/cnn_head_detection" ["l"="33.963,34.098"]
"lincolnhard/mtcnn-head-detection" ["l"="33.913,34.124"]
"AVAuco/ssd_head_keras" ["l"="33.92,34.106"]
"wnov/Keras_Head_Detection_YoloV3" ["l"="33.93,34.128"]
"YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices" ["l"="35.023,33.305"]
"liuwei16/CSP" ["l"="34.678,36.477"]
"TencentYoutuResearch/FaceDetection-DSFD" ["l"="34.157,35.37"]
"zuoqing1988/train-mtcnn-head" ["l"="33.961,34.141"]
"natanielruiz/deep-head-pose" ["l"="34.86,33.259"]
"siyuhuang/crowdcount-stackpool" ["l"="33.981,34.149"]
"becauseofAI/MobileFace" ["l"="-33.616,-15.882"]
"dk-liang/AutoScale" ["l"="34.17,34.172"]
"ZhengPeng7/SANet-Keras" ["l"="34.118,33.983"]
"gjy3035/SCAR" ["l"="34.123,33.964"]
"hankong/crowd-counting" ["l"="34.063,34.047"]
"xialeiliu/CrowdCountingCVPR18" ["l"="34.055,34.076"]
"miao0913/PACNN-PerspectiveAware-CrowdCounting" ["l"="34.031,34.034"]
"cvlab-stonybrook/LearningToCountEverything" ["l"="34.119,34.182"]
"erikalu/class-agnostic-counting" ["l"="34.151,34.209"]
"Ling-Bao/ACSCP_cGAN" ["l"="34.045,34.086"]
"leeyeehoo/Reduplication-of-Single-Image-Crowd-Counting-via-MCNN-on-UCF-Dataset" ["l"="34.049,34.028"]
"kwea123/fish_detection" ["l"="34.227,34.037"]
"WHOIGit/FishDetector" ["l"="34.251,34.035"]
"rocapal/fish_detection" ["l"="34.241,34.019"]
"njvisionpower/Safety-Helmet-Wearing-Dataset" ["l"="31.95,36.307"]
"becauseofAI/lffd-pytorch" ["l"="35.008,33.258"]
"biubug6/Face-Detector-1MB-with-landmark" ["l"="35.032,33.323"]
"Charrin/RetinaFace-Cpp" ["l"="35.035,33.371"]
"Star-Clouds/centerface" ["l"="35.046,33.336"]
"jia-wan/KDMG_Counting" ["l"="34.14,34.181"]
"taohan10200/NLT" ["l"="34.104,34.162"]
"weizheliu/People-Flows" ["l"="34.159,34.144"]
"Willy0919/CODA" ["l"="34.144,34.103"]
"RQuispeC/pytorch-ACSCP" ["l"="34.096,34.089"]
"dmburd/S-DCNet" ["l"="34.06,34.107"]
"Zhaoyi-Yan/PGCNet" ["l"="34.159,34.107"]
"gjy3035/GCC-CL" ["l"="34.04,34.149"]
"umautobots/GTAVisionExport" ["l"="29.285,42.963"]
"jia-wan/ResidualRegression-pytorch" ["l"="34.032,34.1"]
"shizenglin/Deep-NCL" ["l"="34.019,34.046"]
"polltooh/traffic_video_analysis" ["l"="33.997,34.05"]
"wk910930/crowd_density_segmentation" ["l"="34.07,34.033"]
"svip-lab/RGBD-Counting" ["l"="34.148,34.116"]
"taohan10200/Awesome-Crowd-Localization" ["l"="34.029,34.196"]
"hustaia/Decoupled_Two-stage_Counting" ["l"="34.04,34.178"]
"xr0927/chapter9-learnCVPR2019-Context-Aware_Crowd_Counting" ["l"="34.166,34.122"]
"SinicaGroup/Class-agnostic-Few-shot-Object-Counting" ["l"="34.124,34.239"]
"VisDrone/DroneCrowd" ["l"="34.08,34.228"]
"wbshu/Crowd_Counting_in_the_Frequency_Domain" ["l"="34.075,34.249"]
"Russell91/ReInspect" ["l"="34.43,35.039"]
"yquemener/HeadCounter" ["l"="33.926,34.077"]
"anson0910/CNN_face_detection" ["l"="34.864,33.519"]
"layumi/2015_Face_Detection" ["l"="34.841,33.529"]
"ZhengPeng7/CSRNet-Keras" ["l"="34.127,34.002"]
"luckyluckydadada/CSRnet" ["l"="34.1,33.995"]
"pxq0312/ASD-crowd-counting" ["l"="34.15,34.134"]
"MohamedAliRashad/Crowd-DCNet" ["l"="34.148,34.147"]
"poppinace/libranet" ["l"="34.155,34.163"]
"dk-liang/AutoScale_regression" ["l"="34.191,34.18"]
}