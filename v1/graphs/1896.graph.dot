digraph G {
"eliangcs/pystock-crawler" -> "lukerosiak/pysec"
"eliangcs/pystock-crawler" -> "eliangcs/pystock-data"
"eliangcs/pystock-crawler" -> "andrewkittredge/financial_fundamentals"
"eliangcs/pystock-crawler" -> "datasets/edgar"
"eliangcs/pystock-crawler" -> "farhadab/sec-edgar-financials"
"eliangcs/pystock-crawler" -> "tooksoi/ScraXBRL"
"eliangcs/pystock-crawler" -> "edgarminers/python-edgar"
"eliangcs/pystock-crawler" -> "greedo/python-xbrl"
"eliangcs/pystock-crawler" -> "altova/sec-xbrl"
"ThuYShao/BERT-PLI-IJCAI2020" -> "Thesharing/LFESM"
"thunlp/LEVEN" -> "thunlp/LegalPLMs"
"thunlp/LEVEN" -> "myx666/LeCaRD"
"coyo8/sec-edgar" -> "edouardswiac/python-edgar"
"coyo8/sec-edgar" -> "lukerosiak/pysec"
"coyo8/sec-edgar" -> "tooksoi/ScraXBRL"
"thunlp/CAIL" -> "bamtercelboo/Awesome-Law-NLP-Research-Work"
"thunlp/CAIL" -> "renjunxiang/Competition_CAIL"
"thunlp/CAIL" -> "thunlp/CAIL2018"
"thunlp/CAIL" -> "shelleyHLX/cail"
"thunlp/CAIL" -> "china-ai-law-challenge/CAIL2019"
"thunlp/CAIL" -> "thunlp/attribute_charge"
"thunlp/CAIL" -> "thunlp/TopJudge"
"thunlp/CAIL" -> "brightmart/ai_law"
"thunlp/CAIL" -> "jingyihiter/mycail"
"thunlp/CAIL" -> "GuidoPaul/CAIL2019"
"thunlp/CAIL" -> "thunlp/LegalPapers"
"thunlp/CAIL" -> "thunlp/OpenCLaP" ["e"=1]
"thunlp/CAIL" -> "padeoe/cail2019"
"thunlp/CAIL" -> "HenryYuxuanWang/judicial_competition"
"thunlp/CAIL" -> "liuhuanyong/CrimeKgAssitant" ["e"=1]
"china-ai-law-challenge/CAIL2021" -> "myx666/LeCaRD"
"china-ai-law-challenge/CAIL2021" -> "thunlp/LegalPLMs"
"china-ai-law-challenge/CAIL2021" -> "china-ai-law-challenge/CAIL2020"
"china-ai-law-challenge/CAIL2021" -> "Executedone/CAIL2021_LAJS"
"china-ai-law-challenge/CAIL2021" -> "china-ai-law-challenge/CAIL2022"
"myx666/LeCaRD" -> "china-ai-law-challenge/CAIL2021"
"myx666/LeCaRD" -> "thunlp/LegalPLMs"
"myx666/LeCaRD" -> "Executedone/CAIL2021_LAJS"
"myx666/LeCaRD" -> "thunlp/LEVEN"
"myx666/LeCaRD" -> "china-ai-law-challenge/CAIL2022"
"myx666/LeCaRD" -> "Wenorm/BERT-PLI"
"myx666/LeCaRD" -> "ThuYShao/BERT-PLI-IJCAI2020"
"thunlp/CAIL2018" -> "shelleyHLX/cail"
"thunlp/CAIL2018" -> "thunlp/CAIL"
"thunlp/CAIL2018" -> "renjunxiang/Competition_CAIL"
"thunlp/CAIL2018" -> "brightmart/ai_law"
"thunlp/CAIL2018" -> "thunlp/attribute_charge"
"thunlp/CAIL2018" -> "thunlp/TopJudge"
"thunlp/CAIL2018" -> "jingyihiter/mycail"
"china-ai-law-challenge/CAIL2019" -> "NoneWait/cail2019"
"china-ai-law-challenge/CAIL2019" -> "bamtercelboo/Awesome-Law-NLP-Research-Work"
"china-ai-law-challenge/CAIL2019" -> "GuidoPaul/CAIL2019"
"china-ai-law-challenge/CAIL2019" -> "thunlp/CAIL"
"china-ai-law-challenge/CAIL2019" -> "thunlp/OpenCLaP" ["e"=1]
"china-ai-law-challenge/CAIL2019" -> "thunlp/LegalPapers"
"china-ai-law-challenge/CAIL2019" -> "padeoe/cail2019"
"china-ai-law-challenge/CAIL2019" -> "china-ai-law-challenge/CAIL2020"
"china-ai-law-challenge/CAIL2019" -> "huanghuidmml/cail2019_track2"
"china-ai-law-challenge/CAIL2019" -> "circlePi/2019Cail-A-Bert-Joint-Baseline-for-Machine-Comprehension"
"china-ai-law-challenge/CAIL2019" -> "china-ai-law-challenge/CAIL2018"
"china-ai-law-challenge/CAIL2019" -> "thunlp/TopJudge"
"china-ai-law-challenge/CAIL2019" -> "shelleyHLX/cail"
"china-ai-law-challenge/CAIL2019" -> "renjunxiang/Competition_CAIL"
"china-ai-law-challenge/CAIL2019" -> "thunlp/attribute_charge"
"jhpyle/docassemble" -> "LexPredict/lexpredict-lexnlp"
"jhpyle/docassemble" -> "LexPredict/lexpredict-legal-dictionary"
"jhpyle/docassemble" -> "SuffolkLITLab/docassemble-AssemblyLine"
"jhpyle/docassemble" -> "ICLRandD/Blackstone"
"jhpyle/docassemble" -> "Liquid-Legal-Institute/Legal-Text-Analytics"
"jhpyle/docassemble" -> "accordproject/cicero"
"jhpyle/docassemble" -> "medelman17/blackstone-api"
"jhpyle/docassemble" -> "SuffolkLITLab/docassemble-ALWeaver"
"jhpyle/docassemble" -> "ttamg/deploy-docassemble"
"jhpyle/docassemble" -> "Gauntlet173/docassemble-openlcbr"
"jhpyle/docassemble" -> "officeanddragons/awesome-lawtech"
"jhpyle/docassemble" -> "LexPredict/lexpredict-contraxsuite"
"bergant/finstr" -> "bergant/XBRLFiles"
"bergant/finstr" -> "sewardlee337/finreportr"
"bergant/finstr" -> "mwaldstein/edgarWebR"
"bergant/finstr" -> "bergant/xbrlus"
"bergant/finstr" -> "lukerosiak/pysec"
"sewardlee337/finreportr" -> "mwaldstein/edgarWebR"
"sewardlee337/finreportr" -> "bergant/XBRLFiles"
"sewardlee337/finreportr" -> "bergant/finstr"
"brightmart/ai_law" -> "thunlp/CAIL2018"
"brightmart/ai_law" -> "thunlp/CAIL"
"brightmart/ai_law" -> "thunlp/attribute_charge"
"brightmart/ai_law" -> "shelleyHLX/cail"
"brightmart/ai_law" -> "renjunxiang/Competition_CAIL"
"brightmart/ai_law" -> "jingyihiter/mycail"
"brightmart/ai_law" -> "bamtercelboo/Awesome-Law-NLP-Research-Work"
"brightmart/ai_law" -> "ShawnyXiao/2017-CCF-BDCI-AIJudge" ["e"=1]
"brightmart/ai_law" -> "liuhuanyong/LawCrimeMining" ["e"=1]
"prometheusXN/LADAN" -> "DQ0408/R-former"
"prometheusXN/LADAN" -> "thunlp/QAJudge"
"thunlp/LegalPLMs" -> "myx666/LeCaRD"
"thunlp/LegalPLMs" -> "thunlp/CLAIM"
"thunlp/LegalPLMs" -> "thunlp/QAJudge"
"thunlp/LegalPLMs" -> "china-ai-law-challenge/CAIL2021"
"thunlp/LegalPLMs" -> "thunlp/LEVEN"
"thunlp/LegalPLMs" -> "ruc-wjyu/IOT-Match"
"thunlp/TopJudge" -> "thunlp/attribute_charge"
"thunlp/TopJudge" -> "prometheusXN/LADAN"
"thunlp/TopJudge" -> "thunlp/QAJudge"
"thunlp/TopJudge" -> "bamtercelboo/Awesome-Law-NLP-Research-Work"
"thunlp/TopJudge" -> "WAPAY/EPM"
"thunlp/TopJudge" -> "thunlp/CLAIM"
"thunlp/TopJudge" -> "thunlp/CAIL"
"thunlp/TopJudge" -> "thunlp/CAIL2018"
"FanhuaandLuomu/pkulaw_spider" -> "FanhuaandLuomu/ParseLawDocuments"
"FanhuaandLuomu/pkulaw_spider" -> "FanhuaandLuomu/QQSpider"
"FanhuaandLuomu/pkulaw_spider" -> "FanhuaandLuomu/QQMusicSpider"
"thunlp/CLAIM" -> "thunlp/LegalPLMs"
"thunlp/CLAIM" -> "thunlp/LegalPapers"
"LexPredict/lexpredict-contraxsuite" -> "LexPredict/lexpredict-legal-dictionary"
"LexPredict/lexpredict-contraxsuite" -> "LexPredict/lexpredict-lexnlp"
"LexPredict/lexpredict-contraxsuite" -> "LexPredict/lexpredict-contraxsuite-samples"
"LexPredict/lexpredict-contraxsuite" -> "LexPredict/lexpredict-contraxsuite-deploy"
"LexPredict/lexpredict-lexnlp" -> "LexPredict/lexpredict-contraxsuite"
"LexPredict/lexpredict-lexnlp" -> "ICLRandD/Blackstone"
"LexPredict/lexpredict-lexnlp" -> "LexPredict/lexpredict-legal-dictionary"
"LexPredict/lexpredict-lexnlp" -> "Liquid-Legal-Institute/Legal-Text-Analytics"
"LexPredict/lexpredict-lexnlp" -> "LexPredict/openedgar"
"LexPredict/lexpredict-lexnlp" -> "TheAtticusProject/cuad"
"LexPredict/lexpredict-lexnlp" -> "jhpyle/docassemble"
"LexPredict/lexpredict-lexnlp" -> "thunlp/LegalPapers"
"LexPredict/lexpredict-lexnlp" -> "Law-AI/summarization"
"LexPredict/lexpredict-lexnlp" -> "accordproject/ergo"
"LexPredict/lexpredict-lexnlp" -> "freelawproject/eyecite" ["e"=1]
"LexPredict/lexpredict-lexnlp" -> "freelawproject/juriscraper" ["e"=1]
"LexPredict/lexpredict-lexnlp" -> "freelawproject/courtlistener" ["e"=1]
"LexPredict/lexpredict-lexnlp" -> "MaartenGr/PolyFuzz" ["e"=1]
"LexPredict/lexpredict-lexnlp" -> "davidawad/lobe"
"lukerosiak/pysec" -> "greedo/python-xbrl"
"lukerosiak/pysec" -> "altova/sec-xbrl"
"lukerosiak/pysec" -> "tooksoi/ScraXBRL"
"lukerosiak/pysec" -> "andrewkittredge/financial_fundamentals"
"lukerosiak/pysec" -> "datasets/edgar"
"lukerosiak/pysec" -> "chrisspen/django-sec"
"lukerosiak/pysec" -> "eliangcs/pystock-crawler"
"lukerosiak/pysec" -> "coyo8/sec-edgar"
"lukerosiak/pysec" -> "edouardswiac/python-edgar"
"lukerosiak/pysec" -> "rahulrrixe/sec-edgar"
"lukerosiak/pysec" -> "joeyism/py-edgar"
"lukerosiak/pysec" -> "Arelle/EdgarRenderer"
"lukerosiak/pysec" -> "computerpencils/ScraXBRL"
"lukerosiak/pysec" -> "Arelle/Arelle"
"lukerosiak/pysec" -> "rahulrrixe/SEC-Edgar"
"rahulrrixe/sec-edgar" -> "datasets/edgar"
"THU-KEG/OmniEvent" -> "THU-KEG/MAVEN-ERE"
"THU-KEG/OmniEvent" -> "thunlp/LEVEN"
"THU-KEG/OmniEvent" -> "luyaojie/Text2Event" ["e"=1]
"THU-KEG/OmniEvent" -> "taishan1994/chinese_information_extraction" ["e"=1]
"brightmart/multi-label_classification" -> "huanghuidmml/cail2019_track2"
"altova/SECDB" -> "altova/sec-xbrl"
"graphbrain/graphbrain" -> "msg-systems/holmes-extractor"
"graphbrain/graphbrain" -> "kevinlu1248/pyate"
"graphbrain/graphbrain" -> "erre-quadro/spikex" ["e"=1]
"graphbrain/graphbrain" -> "jenojp/negspacy" ["e"=1]
"graphbrain/graphbrain" -> "R1j1t/contextualSpellCheck" ["e"=1]
"graphbrain/graphbrain" -> "NIHOPA/NLPre"
"graphbrain/graphbrain" -> "WZBSocialScienceCenter/tmtoolkit" ["e"=1]
"graphbrain/graphbrain" -> "nipunsadvilkar/pySBD"
"graphbrain/graphbrain" -> "explosion/sense2vec" ["e"=1]
"graphbrain/graphbrain" -> "explosion/projects" ["e"=1]
"graphbrain/graphbrain" -> "NorskRegnesentral/skweak" ["e"=1]
"thunlp/attribute_charge" -> "thunlp/TopJudge"
"thunlp/attribute_charge" -> "bamtercelboo/Awesome-Law-NLP-Research-Work"
"thunlp/attribute_charge" -> "thunlp/CAIL"
"thunlp/attribute_charge" -> "thunlp/CAIL2018"
"thunlp/attribute_charge" -> "thunlp/CLAIM"
"thunlp/attribute_charge" -> "brightmart/ai_law"
"nickdavidhaynes/spacy-cld" -> "tokestermw/spacy_hunspell" ["e"=1]
"nipunsadvilkar/pySBD" -> "diasks2/pragmatic_segmenter"
"nipunsadvilkar/pySBD" -> "jenojp/negspacy" ["e"=1]
"nipunsadvilkar/pySBD" -> "kevinlu1248/pyate"
"nipunsadvilkar/pySBD" -> "bitextor/bitextor" ["e"=1]
"nipunsadvilkar/pySBD" -> "fnl/syntok" ["e"=1]
"nipunsadvilkar/pySBD" -> "baimingxuan/vue3-admin-design" ["e"=1]
"nipunsadvilkar/pySBD" -> "gandersen101/spaczz"
"nipunsadvilkar/pySBD" -> "sohutv/hotcaffeine" ["e"=1]
"nipunsadvilkar/pySBD" -> "NorskRegnesentral/skweak" ["e"=1]
"nipunsadvilkar/pySBD" -> "HandsomeLeft/Veaser" ["e"=1]
"nipunsadvilkar/pySBD" -> "jfilter/clean-text" ["e"=1]
"nipunsadvilkar/pySBD" -> "mediacloud/sentence-splitter"
"nipunsadvilkar/pySBD" -> "mpuig/spacy-lookup"
"nipunsadvilkar/pySBD" -> "MaartenGr/PolyFuzz" ["e"=1]
"nipunsadvilkar/pySBD" -> "KylinC/mmVital-Signs" ["e"=1]
"GuidoPaul/CAIL2019" -> "padeoe/cail2019"
"GuidoPaul/CAIL2019" -> "china-ai-law-challenge/CAIL2019"
"GuidoPaul/CAIL2019" -> "thunlp/OpenCLaP" ["e"=1]
"GuidoPaul/CAIL2019" -> "NoneWait/cail2019"
"GuidoPaul/CAIL2019" -> "bamtercelboo/Awesome-Law-NLP-Research-Work"
"GuidoPaul/CAIL2019" -> "huanghuidmml/cail2019_track2"
"GuidoPaul/CAIL2019" -> "thunlp/CAIL"
"GuidoPaul/CAIL2019" -> "renjunxiang/Competition_CAIL"
"GuidoPaul/CAIL2019" -> "ShenDezhou/CAIL"
"GuidoPaul/CAIL2019" -> "thunlp/LegalPapers"
"GuidoPaul/CAIL2019" -> "SunnyMarkLiu/lic2019-dureader2.0-rank2" ["e"=1]
"GuidoPaul/CAIL2019" -> "zhang17173/Event-Extraction" ["e"=1]
"GuidoPaul/CAIL2019" -> "brightmart/multi-label_classification"
"GuidoPaul/CAIL2019" -> "hecongqing/CAIL2019"
"GuidoPaul/CAIL2019" -> "shelleyHLX/cail"
"renjunxiang/Competition_CAIL" -> "shelleyHLX/cail"
"renjunxiang/Competition_CAIL" -> "jingyihiter/mycail"
"renjunxiang/Competition_CAIL" -> "thunlp/CAIL"
"renjunxiang/Competition_CAIL" -> "thunlp/CAIL2018"
"renjunxiang/Competition_CAIL" -> "bamtercelboo/Awesome-Law-NLP-Research-Work"
"renjunxiang/Competition_CAIL" -> "HenryYuxuanWang/judicial_competition"
"renjunxiang/Competition_CAIL" -> "ShenDezhou/CAIL"
"renjunxiang/Competition_CAIL" -> "GuidoPaul/CAIL2019"
"renjunxiang/Competition_CAIL" -> "FanhuaandLuomu/ParseLawDocuments"
"renjunxiang/Competition_CAIL" -> "brightmart/ai_law"
"renjunxiang/Competition_CAIL" -> "FengBli/CAIL2018-toy"
"renjunxiang/Competition_CAIL" -> "shelleyHLX/text-classification"
"renjunxiang/Competition_CAIL" -> "padeoe/cail2019"
"renjunxiang/Competition_CAIL" -> "china-ai-law-challenge/CAIL2019"
"renjunxiang/Competition_CAIL" -> "thunlp/LegalPLMs"
"altova/sec-xbrl" -> "lukerosiak/pysec"
"altova/sec-xbrl" -> "altova/SECDB"
"china-ai-law-challenge/CAIL2020" -> "china-ai-law-challenge/CAIL2021"
"china-ai-law-challenge/CAIL2020" -> "NoneWait/cail2019"
"china-ai-law-challenge/CAIL2020" -> "china-ai-law-challenge/CAIL2019"
"china-ai-law-challenge/CAIL2020" -> "circlePi/2019Cail-A-Bert-Joint-Baseline-for-Machine-Comprehension"
"china-ai-law-challenge/CAIL2020" -> "caldreaming/CAIL"
"china-ai-law-challenge/CAIL2020" -> "bamtercelboo/Awesome-Law-NLP-Research-Work"
"china-ai-law-challenge/CAIL2020" -> "padeoe/cail2019"
"china-ai-law-challenge/CAIL2020" -> "thunlp/LegalPapers"
"china-ai-law-challenge/CAIL2020" -> "ShenDezhou/CAIL"
"china-ai-law-challenge/CAIL2020" -> "bojone/SPACES" ["e"=1]
"Liquid-Legal-Institute/Legal-Text-Analytics" -> "ICLRandD/Blackstone"
"Liquid-Legal-Institute/Legal-Text-Analytics" -> "LexPredict/lexpredict-lexnlp"
"Liquid-Legal-Institute/Legal-Text-Analytics" -> "thunlp/LegalPapers"
"Liquid-Legal-Institute/Legal-Text-Analytics" -> "openlegaldata/awesome-legal-data"
"Liquid-Legal-Institute/Legal-Text-Analytics" -> "elenanereiss/Legal-Entity-Recognition"
"Liquid-Legal-Institute/Legal-Text-Analytics" -> "coastalcph/lex-glue"
"Liquid-Legal-Institute/Legal-Text-Analytics" -> "TheAtticusProject/cuad"
"Liquid-Legal-Institute/Legal-Text-Analytics" -> "Liquid-Legal-Institute/Legal-Ontologies"
"Liquid-Legal-Institute/Legal-Text-Analytics" -> "MaartenGr/PolyFuzz" ["e"=1]
"Liquid-Legal-Institute/Legal-Text-Analytics" -> "freelawproject/courtlistener" ["e"=1]
"Liquid-Legal-Institute/Legal-Text-Analytics" -> "ArturTan/transformers-for-lawyers"
"Liquid-Legal-Institute/Legal-Text-Analytics" -> "tecoholic/ner-annotator" ["e"=1]
"Liquid-Legal-Institute/Legal-Text-Analytics" -> "md-experiments/elastic_transformers" ["e"=1]
"Liquid-Legal-Institute/Legal-Text-Analytics" -> "vector-ai/vectorai" ["e"=1]
"Liquid-Legal-Institute/Legal-Text-Analytics" -> "harvard-lil/capstone" ["e"=1]
"tooksoi/ScraXBRL" -> "lukerosiak/pysec"
"tooksoi/ScraXBRL" -> "greedo/python-xbrl"
"tooksoi/ScraXBRL" -> "datasets/edgar"
"tooksoi/ScraXBRL" -> "janlukasschroeder/sec-api"
"tooksoi/ScraXBRL" -> "galibin24/SEC-EDGAR-python-scraper"
"tooksoi/ScraXBRL" -> "joeyism/py-edgar"
"tooksoi/ScraXBRL" -> "andrewkittredge/financial_fundamentals"
"tooksoi/ScraXBRL" -> "alions7000/SEC-EDGAR-text"
"tooksoi/ScraXBRL" -> "edgarminers/python-edgar"
"tooksoi/ScraXBRL" -> "coyo8/sec-edgar"
"tooksoi/ScraXBRL" -> "Arelle/EdgarRenderer"
"tooksoi/ScraXBRL" -> "altova/sec-xbrl"
"tooksoi/ScraXBRL" -> "edouardswiac/python-edgar"
"tooksoi/ScraXBRL" -> "farhadab/sec-edgar-financials"
"tooksoi/ScraXBRL" -> "LexPredict/openedgar"
"leoliu0/cik-cusip-mapping" -> "volkovacodes/Block_Codes"
"Law-AI/summarization" -> "Law-AI/DELSumm"
"greedo/python-xbrl" -> "lukerosiak/pysec"
"greedo/python-xbrl" -> "tooksoi/ScraXBRL"
"greedo/python-xbrl" -> "BuffetCode/edinet_xbrl"
"greedo/python-xbrl" -> "Arelle/Arelle"
"greedo/python-xbrl" -> "andrewkittredge/financial_fundamentals"
"greedo/python-xbrl" -> "altova/sec-xbrl"
"greedo/python-xbrl" -> "bergant/XBRLFiles"
"TheAtticusProject/cuad" -> "marshmellow77/cuad-demo"
"TheAtticusProject/cuad" -> "thunlp/CLAIM"
"TheAtticusProject/cuad" -> "Liquid-Legal-Institute/Legal-Text-Analytics"
"TheAtticusProject/cuad" -> "ICLRandD/Blackstone"
"TheAtticusProject/cuad" -> "LexPredict/lexpredict-lexnlp"
"diasks2/pragmatic_segmenter" -> "nipunsadvilkar/pySBD"
"diasks2/pragmatic_segmenter" -> "diasks2/word_count_analyzer"
"diasks2/pragmatic_segmenter" -> "diasks2/ruby-nlp" ["e"=1]
"diasks2/pragmatic_segmenter" -> "diasks2/pragmatic_tokenizer"
"diasks2/pragmatic_segmenter" -> "louismullie/treat" ["e"=1]
"diasks2/pragmatic_segmenter" -> "yohasebe/lemmatizer" ["e"=1]
"diasks2/pragmatic_segmenter" -> "UglyToad/PragmaticSegmenterNet"
"diasks2/pragmatic_segmenter" -> "louismullie/scalpel" ["e"=1]
"NoneWait/cail2019" -> "circlePi/2019Cail-A-Bert-Joint-Baseline-for-Machine-Comprehension"
"NoneWait/cail2019" -> "caldreaming/CAIL"
"NoneWait/cail2019" -> "china-ai-law-challenge/CAIL2019"
"NoneWait/cail2019" -> "padeoe/cail2019"
"NoneWait/cail2019" -> "caitian521/QADomain"
"NoneWait/cail2019" -> "basketballandlearn/Dureader-Bert" ["e"=1]
"NoneWait/cail2019" -> "GuidoPaul/CAIL2019"
"NoneWait/cail2019" -> "YingZiqiang/LES-MMRC-Summary" ["e"=1]
"NoneWait/cail2019" -> "ewrfcas/bert_cn_finetune" ["e"=1]
"NoneWait/cail2019" -> "china-ai-law-challenge/CAIL2020"
"NoneWait/cail2019" -> "SunnyMarkLiu/lic2019-dureader2.0-rank2" ["e"=1]
"NoneWait/cail2019" -> "HandsomeCao/BERT-Dureader" ["e"=1]
"NoneWait/cail2019" -> "huanghuidmml/cail2019_track2"
"caldreaming/CAIL" -> "circlePi/2019Cail-A-Bert-Joint-Baseline-for-Machine-Comprehension"
"caldreaming/CAIL" -> "caitian521/QADomain"
"circlePi/2019Cail-A-Bert-Joint-Baseline-for-Machine-Comprehension" -> "caitian521/QADomain"
"circlePi/2019Cail-A-Bert-Joint-Baseline-for-Machine-Comprehension" -> "caldreaming/CAIL"
"circlePi/2019Cail-A-Bert-Joint-Baseline-for-Machine-Comprehension" -> "NoneWait/cail2019"
"msg-systems/holmes-extractor" -> "graphbrain/graphbrain"
"msg-systems/holmes-extractor" -> "textpipe/textpipe"
"msg-systems/holmes-extractor" -> "msg-systems/coreferee" ["e"=1]
"msg-systems/holmes-extractor" -> "explosion/projects" ["e"=1]
"msg-systems/holmes-extractor" -> "jenojp/negspacy" ["e"=1]
"msg-systems/holmes-extractor" -> "ICLRandD/Blackstone"
"msg-systems/holmes-extractor" -> "explosion/spacy-experimental" ["e"=1]
"msg-systems/holmes-extractor" -> "microsoft/spacy-ann-linker" ["e"=1]
"msg-systems/holmes-extractor" -> "kevinlu1248/pyate"
"msg-systems/holmes-extractor" -> "gandersen101/spaczz"
"msg-systems/holmes-extractor" -> "recognai/spacy-wordnet" ["e"=1]
"datasets/edgar" -> "andrewkittredge/financial_fundamentals"
"datasets/edgar" -> "lukerosiak/pysec"
"datasets/edgar" -> "rahulrrixe/sec-edgar"
"datasets/edgar" -> "tooksoi/ScraXBRL"
"datasets/edgar" -> "alions7000/SEC-EDGAR-text"
"datasets/edgar" -> "computerpencils/ScraXBRL"
"datasets/edgar" -> "edouardswiac/python-edgar"
"datasets/edgar" -> "janlukasschroeder/sec-api"
"datasets/edgar" -> "rahulrrixe/SEC-Edgar"
"datasets/edgar" -> "altova/sec-xbrl"
"datasets/edgar" -> "Arelle/EdgarRenderer"
"datasets/edgar" -> "eliangcs/pystock-crawler"
"datasets/edgar" -> "LexPredict/openedgar"
"datasets/edgar" -> "sec-edgar/sec-edgar"
"datasets/edgar" -> "joeyism/py-edgar"
"HenryYuxuanWang/judicial_competition" -> "jingyihiter/mycail"
"bamtercelboo/Awesome-Law-NLP-Research-Work" -> "thunlp/LegalPapers"
"bamtercelboo/Awesome-Law-NLP-Research-Work" -> "thunlp/CAIL"
"bamtercelboo/Awesome-Law-NLP-Research-Work" -> "china-ai-law-challenge/CAIL2019"
"bamtercelboo/Awesome-Law-NLP-Research-Work" -> "thunlp/TopJudge"
"bamtercelboo/Awesome-Law-NLP-Research-Work" -> "thunlp/attribute_charge"
"bamtercelboo/Awesome-Law-NLP-Research-Work" -> "GuidoPaul/CAIL2019"
"bamtercelboo/Awesome-Law-NLP-Research-Work" -> "renjunxiang/Competition_CAIL"
"bamtercelboo/Awesome-Law-NLP-Research-Work" -> "thunlp/OpenCLaP" ["e"=1]
"bamtercelboo/Awesome-Law-NLP-Research-Work" -> "china-ai-law-challenge/CAIL2020"
"bamtercelboo/Awesome-Law-NLP-Research-Work" -> "thunlp/CLAIM"
"bamtercelboo/Awesome-Law-NLP-Research-Work" -> "shelleyHLX/cail"
"bamtercelboo/Awesome-Law-NLP-Research-Work" -> "huanghuidmml/cail2019_track2"
"bamtercelboo/Awesome-Law-NLP-Research-Work" -> "brightmart/ai_law"
"bamtercelboo/Awesome-Law-NLP-Research-Work" -> "padeoe/cail2019"
"bamtercelboo/Awesome-Law-NLP-Research-Work" -> "liuhuanyong/LawCrimeMining" ["e"=1]
"jingyihiter/mycail" -> "HenryYuxuanWang/judicial_competition"
"jingyihiter/mycail" -> "shelleyHLX/cail"
"jingyihiter/mycail" -> "renjunxiang/Competition_CAIL"
"shelleyHLX/cail" -> "renjunxiang/Competition_CAIL"
"shelleyHLX/cail" -> "shelleyHLX/text-classification"
"shelleyHLX/cail" -> "jingyihiter/mycail"
"shelleyHLX/cail" -> "HenryYuxuanWang/judicial_competition"
"shelleyHLX/cail" -> "thunlp/CAIL2018"
"shelleyHLX/cail" -> "thunlp/CAIL"
"textpipe/textpipe" -> "msg-systems/holmes-extractor"
"textpipe/textpipe" -> "kootenpv/spacy_api"
"textpipe/textpipe" -> "ecohealthalliance/EpiTator"
"edouardswiac/python-edgar" -> "joeyism/py-edgar"
"edouardswiac/python-edgar" -> "coyo8/sec-edgar"
"edouardswiac/python-edgar" -> "lukerosiak/pysec"
"edouardswiac/python-edgar" -> "datasets/edgar"
"edouardswiac/python-edgar" -> "tzuhsial/edgar-10k-mda"
"edouardswiac/python-edgar" -> "tooksoi/ScraXBRL"
"FanhuaandLuomu/QQSpider" -> "FanhuaandLuomu/QQMusicSpider"
"accordproject/cicero" -> "accordproject/ergo"
"accordproject/cicero" -> "accordproject/cicero-template-library"
"accordproject/cicero" -> "accordproject/concerto"
"accordproject/cicero" -> "accordproject/web-components"
"accordproject/cicero" -> "accordproject/models"
"accordproject/cicero" -> "accordproject/cicero-ui"
"accordproject/cicero" -> "accordproject/cicero-word-add-in"
"accordproject/cicero" -> "accordproject/techdocs"
"jadchaar/sec-edgar-downloader" -> "sec-edgar/sec-edgar"
"jadchaar/sec-edgar-downloader" -> "edgarminers/python-edgar"
"jadchaar/sec-edgar-downloader" -> "joeyism/py-edgar"
"jadchaar/sec-edgar-downloader" -> "farhadab/sec-edgar-financials"
"jadchaar/sec-edgar-downloader" -> "ryansmccoy/py-sec-edgar"
"jadchaar/sec-edgar-downloader" -> "tzuhsial/edgar-10k-mda"
"jadchaar/sec-edgar-downloader" -> "janlukasschroeder/sec-api"
"jadchaar/sec-edgar-downloader" -> "tooksoi/ScraXBRL"
"jadchaar/sec-edgar-downloader" -> "alions7000/SEC-EDGAR-text"
"jadchaar/sec-edgar-downloader" -> "edouardswiac/python-edgar"
"jadchaar/sec-edgar-downloader" -> "lukerosiak/pysec"
"jadchaar/sec-edgar-downloader" -> "leoliu0/cik-cusip-mapping"
"jadchaar/sec-edgar-downloader" -> "LexPredict/openedgar"
"jadchaar/sec-edgar-downloader" -> "coyo8/sec-edgar"
"jadchaar/sec-edgar-downloader" -> "datasets/edgar"
"FanhuaandLuomu/ParseLawDocuments" -> "FanhuaandLuomu/pkulaw_spider"
"FanhuaandLuomu/ParseLawDocuments" -> "renjunxiang/Competition_CAIL"
"FanhuaandLuomu/ParseLawDocuments" -> "liuhuanyong/LawCrimeMining" ["e"=1]
"ICLRandD/Blackstone" -> "LexPredict/lexpredict-lexnlp"
"ICLRandD/Blackstone" -> "Liquid-Legal-Institute/Legal-Text-Analytics"
"ICLRandD/Blackstone" -> "gandersen101/spaczz"
"ICLRandD/Blackstone" -> "allenai/scispacy" ["e"=1]
"ICLRandD/Blackstone" -> "msg-systems/holmes-extractor"
"ICLRandD/Blackstone" -> "thunlp/LegalPapers"
"ICLRandD/Blackstone" -> "TheAtticusProject/cuad"
"ICLRandD/Blackstone" -> "explosion/projects" ["e"=1]
"ICLRandD/Blackstone" -> "nipunsadvilkar/pySBD"
"ICLRandD/Blackstone" -> "jenojp/negspacy" ["e"=1]
"ICLRandD/Blackstone" -> "explosion/sense2vec" ["e"=1]
"ICLRandD/Blackstone" -> "mpuig/spacy-lookup"
"ICLRandD/Blackstone" -> "freelawproject/courtlistener" ["e"=1]
"ICLRandD/Blackstone" -> "LexPredict/lexpredict-contraxsuite"
"ICLRandD/Blackstone" -> "RTIInternational/gobbli"
"huanghuidmml/cail2019_track2" -> "padeoe/cail2019"
"huanghuidmml/cail2019_track2" -> "brightmart/multi-label_classification"
"huanghuidmml/cail2019_track2" -> "GuidoPaul/CAIL2019"
"huanghuidmml/cail2019_track2" -> "NoneWait/cail2019"
"huanghuidmml/cail2019_track2" -> "china-ai-law-challenge/CAIL2019"
"huanghuidmml/cail2019_track2" -> "huanghuidmml/tf1_transformers"
"china-ai-law-challenge/CAIL2022" -> "myx666/LeCaRD"
"china-ai-law-challenge/CAIL2022" -> "thunlp/LEVEN"
"padeoe/cail2019" -> "GuidoPaul/CAIL2019"
"padeoe/cail2019" -> "NoneWait/cail2019"
"padeoe/cail2019" -> "huanghuidmml/cail2019_track2"
"padeoe/cail2019" -> "china-ai-law-challenge/CAIL2019"
"padeoe/cail2019" -> "YingZiqiang/LES-MMRC-Summary" ["e"=1]
"padeoe/cail2019" -> "china-ai-law-challenge/CAIL2020"
"padeoe/cail2019" -> "thunlp/OpenCLaP" ["e"=1]
"padeoe/cail2019" -> "renjunxiang/Competition_CAIL"
"padeoe/cail2019" -> "china-ai-law-challenge/CAIL2021"
"LexPredict/openedgar" -> "tooksoi/ScraXBRL"
"LexPredict/openedgar" -> "LexPredict/lexpredict-lexnlp"
"LexPredict/openedgar" -> "sec-edgar/sec-edgar"
"LexPredict/openedgar" -> "joeyism/py-edgar"
"LexPredict/openedgar" -> "edgarminers/python-edgar"
"LexPredict/openedgar" -> "janlukasschroeder/sec-api"
"LexPredict/openedgar" -> "datasets/edgar"
"LexPredict/openedgar" -> "LexPredict/lexpredict-legal-dictionary"
"LexPredict/openedgar" -> "gaulinmp/pyedgar"
"LexPredict/openedgar" -> "jadchaar/sec-edgar-downloader"
"LexPredict/openedgar" -> "LexPredict/lexpredict-contraxsuite"
"LexPredict/openedgar" -> "mwaldstein/edgarWebR"
"LexPredict/openedgar" -> "Arelle/EdgarRenderer"
"LexPredict/openedgar" -> "alions7000/SEC-EDGAR-text"
"LexPredict/openedgar" -> "tzuhsial/edgar-10k-mda"
"thunlp/LegalPapers" -> "bamtercelboo/Awesome-Law-NLP-Research-Work"
"thunlp/LegalPapers" -> "thunlp/CLAIM"
"thunlp/LegalPapers" -> "china-ai-law-challenge/CAIL2019"
"thunlp/LegalPapers" -> "thunlp/OpenCLaP" ["e"=1]
"thunlp/LegalPapers" -> "china-ai-law-challenge/CAIL2020"
"thunlp/LegalPapers" -> "thunlp/CAIL"
"thunlp/LegalPapers" -> "thunlp/attribute_charge"
"thunlp/LegalPapers" -> "GuidoPaul/CAIL2019"
"thunlp/LegalPapers" -> "thunlp/TopJudge"
"thunlp/LegalPapers" -> "thunlp/LegalPLMs"
"thunlp/LegalPapers" -> "myx666/LeCaRD"
"thunlp/LegalPapers" -> "thunlp/CAIL2018"
"thunlp/LegalPapers" -> "padeoe/cail2019"
"thunlp/LegalPapers" -> "liuhuanyong/CrimeKgAssitant" ["e"=1]
"thunlp/LegalPapers" -> "Liquid-Legal-Institute/Legal-Text-Analytics"
"BuffetCode/edinet_xbrl" -> "teatime77/xbrl-reader"
"BuffetCode/edinet_xbrl" -> "greedo/python-xbrl"
"janlukasschroeder/sec-api" -> "janlukasschroeder/sec-api-python"
"janlukasschroeder/sec-api" -> "joeyism/py-edgar"
"janlukasschroeder/sec-api" -> "tooksoi/ScraXBRL"
"janlukasschroeder/sec-api" -> "sec-edgar/sec-edgar"
"janlukasschroeder/sec-api" -> "jadchaar/sec-edgar-downloader"
"janlukasschroeder/sec-api" -> "datasets/edgar"
"janlukasschroeder/sec-api" -> "xinyiy/EDGAR-SC13D-Info-Extraction"
"janlukasschroeder/sec-api" -> "leoliu0/cik-cusip-mapping"
"Arelle/Arelle" -> "greedo/python-xbrl"
"Arelle/Arelle" -> "Arelle/EdgarRenderer"
"Arelle/Arelle" -> "lukerosiak/pysec"
"Arelle/Arelle" -> "tooksoi/ScraXBRL"
"Arelle/Arelle" -> "bergant/XBRLFiles"
"Arelle/Arelle" -> "andrewkittredge/financial_fundamentals"
"Arelle/Arelle" -> "altova/sec-xbrl"
"Arelle/Arelle" -> "Workiva/ixbrl-viewer"
"Arelle/Arelle" -> "datasets/edgar"
"Arelle/Arelle" -> "sec-edgar/sec-edgar"
"Arelle/Arelle" -> "LexPredict/openedgar"
"Arelle/Arelle" -> "joeyism/py-edgar"
"Arelle/Arelle" -> "miya8/xbrl_parser"
"Arelle/Arelle" -> "bergant/finstr"
"Arelle/Arelle" -> "jadchaar/sec-edgar-downloader"
"sec-edgar/sec-edgar" -> "jadchaar/sec-edgar-downloader"
"sec-edgar/sec-edgar" -> "edgarminers/python-edgar"
"sec-edgar/sec-edgar" -> "joeyism/py-edgar"
"sec-edgar/sec-edgar" -> "janlukasschroeder/sec-api"
"sec-edgar/sec-edgar" -> "farhadab/sec-edgar-financials"
"sec-edgar/sec-edgar" -> "LexPredict/openedgar"
"sec-edgar/sec-edgar" -> "datasets/edgar"
"sec-edgar/sec-edgar" -> "alions7000/SEC-EDGAR-text"
"sec-edgar/sec-edgar" -> "tooksoi/ScraXBRL"
"sec-edgar/sec-edgar" -> "ryansmccoy/py-sec-edgar"
"sec-edgar/sec-edgar" -> "lukerosiak/pysec"
"sec-edgar/sec-edgar" -> "janlukasschroeder/sec-api-python"
"sec-edgar/sec-edgar" -> "JerBouma/FundamentalAnalysis" ["e"=1]
"sec-edgar/sec-edgar" -> "leoliu0/cik-cusip-mapping"
"sec-edgar/sec-edgar" -> "eliangcs/pystock-crawler"
"mmxgn/spacy-clausie" -> "mmxgn/miniepy" ["e"=1]
"kevinlu1248/pyate" -> "jenojp/negspacy" ["e"=1]
"kevinlu1248/pyate" -> "gandersen101/spaczz"
"kevinlu1248/pyate" -> "NIHOPA/NLPre"
"kevinlu1248/pyate" -> "graphbrain/graphbrain"
"kevinlu1248/pyate" -> "KennethEnevoldsen/augmenty" ["e"=1]
"kevinlu1248/pyate" -> "mmxgn/spacy-clausie"
"kevinlu1248/pyate" -> "nipunsadvilkar/pySBD"
"kevinlu1248/pyate" -> "HLasse/TextDescriptives" ["e"=1]
"eliangcs/pystock-data" -> "eliangcs/pystock-crawler"
"mpuig/spacy-lookup" -> "DeNeutoy/spacy-vis"
"mpuig/spacy-lookup" -> "nickdavidhaynes/spacy-cld"
"accordproject/web-components" -> "accordproject/markdown-transform"
"accordproject/web-components" -> "accordproject/cicero-word-add-in"
"accordproject/web-components" -> "accordproject/cicero-template-library"
"accordproject/web-components" -> "accordproject/cicero-ui"
"accordproject/web-components" -> "accordproject/ergo"
"accordproject/web-components" -> "accordproject/technical-steering-committee"
"accordproject/web-components" -> "accordproject/concerto"
"andrewkittredge/financial_fundamentals" -> "datasets/edgar"
"andrewkittredge/financial_fundamentals" -> "lukerosiak/pysec"
"andrewkittredge/financial_fundamentals" -> "rahulrrixe/SEC-Edgar"
"andrewkittredge/financial_fundamentals" -> "altova/SECDB"
"andrewkittredge/financial_fundamentals" -> "tooksoi/ScraXBRL"
"andrewkittredge/financial_fundamentals" -> "eliangcs/pystock-crawler"
"andrewkittredge/financial_fundamentals" -> "greedo/python-xbrl"
"edgarminers/python-edgar" -> "sec-edgar/sec-edgar"
"edgarminers/python-edgar" -> "jadchaar/sec-edgar-downloader"
"edgarminers/python-edgar" -> "joeyism/py-edgar"
"edgarminers/python-edgar" -> "gaulinmp/pyedgar"
"edgarminers/python-edgar" -> "farhadab/sec-edgar-financials"
"edgarminers/python-edgar" -> "alions7000/SEC-EDGAR-text"
"huanghuidmml/textToy" -> "huanghuidmml/tf1_transformers"
"mwaldstein/edgarWebR" -> "sewardlee337/finreportr"
"gandersen101/spaczz" -> "KennethEnevoldsen/augmenty" ["e"=1]
"gandersen101/spaczz" -> "kevinlu1248/pyate"
"gandersen101/spaczz" -> "doccano/doccano-transformer" ["e"=1]
"joeyism/py-edgar" -> "edouardswiac/python-edgar"
"joeyism/py-edgar" -> "edgarminers/python-edgar"
"joeyism/py-edgar" -> "jadchaar/sec-edgar-downloader"
"joeyism/py-edgar" -> "farhadab/sec-edgar-financials"
"joeyism/py-edgar" -> "janlukasschroeder/sec-api"
"joeyism/py-edgar" -> "sec-edgar/sec-edgar"
"joeyism/py-edgar" -> "tooksoi/ScraXBRL"
"joeyism/py-edgar" -> "alions7000/SEC-EDGAR-text"
"joeyism/py-edgar" -> "lukerosiak/pysec"
"joeyism/py-edgar" -> "coyo8/sec-edgar"
"joeyism/py-edgar" -> "ryansmccoy/py-sec-edgar"
"joeyism/py-edgar" -> "LexPredict/openedgar"
"joeyism/py-edgar" -> "gaulinmp/pyedgar"
"Arelle/EdgarRenderer" -> "lukerosiak/pysec"
"Arelle/EdgarRenderer" -> "Arelle/Arelle"
"Arelle/EdgarRenderer" -> "tooksoi/ScraXBRL"
"Arelle/EdgarRenderer" -> "datasets/edgar"
"Arelle/EdgarRenderer" -> "edouardswiac/python-edgar"
"accordproject/ergo" -> "accordproject/cicero"
"accordproject/ergo" -> "accordproject/cicero-template-library"
"accordproject/ergo" -> "accordproject/web-components"
"accordproject/ergo" -> "accordproject/models"
"accordproject/ergo" -> "accordproject/concerto"
"accordproject/ergo" -> "accordproject/template-studio"
"farhadab/sec-edgar-financials" -> "joeyism/py-edgar"
"farhadab/sec-edgar-financials" -> "jadchaar/sec-edgar-downloader"
"farhadab/sec-edgar-financials" -> "edgarminers/python-edgar"
"farhadab/sec-edgar-financials" -> "galibin24/SEC-EDGAR-python-scraper"
"LexPredict/lexpredict-legal-dictionary" -> "LexPredict/lexpredict-contraxsuite-deploy"
"LexPredict/lexpredict-legal-dictionary" -> "LexPredict/lexpredict-contraxsuite"
"bergant/XBRLFiles" -> "bergant/xbrlus"
"bergant/XBRLFiles" -> "bergant/finstr"
"bergant/XBRLFiles" -> "sewardlee337/finreportr"
"eliangcs/pystock-crawler" ["l"="29.556,29.009"]
"lukerosiak/pysec" ["l"="29.546,29.035"]
"eliangcs/pystock-data" ["l"="29.55,28.965"]
"andrewkittredge/financial_fundamentals" ["l"="29.538,29.022"]
"datasets/edgar" ["l"="29.566,29.029"]
"farhadab/sec-edgar-financials" ["l"="29.587,29.02"]
"tooksoi/ScraXBRL" ["l"="29.564,29.042"]
"edgarminers/python-edgar" ["l"="29.602,29.03"]
"greedo/python-xbrl" ["l"="29.516,29.036"]
"altova/sec-xbrl" ["l"="29.524,29.022"]
"ThuYShao/BERT-PLI-IJCAI2020" ["l"="29.689,29.373"]
"Thesharing/LFESM" ["l"="29.692,29.394"]
"thunlp/LEVEN" ["l"="29.694,29.352"]
"thunlp/LegalPLMs" ["l"="29.667,29.326"]
"myx666/LeCaRD" ["l"="29.678,29.337"]
"coyo8/sec-edgar" ["l"="29.555,29.069"]
"edouardswiac/python-edgar" ["l"="29.567,29.061"]
"thunlp/CAIL" ["l"="29.618,29.324"]
"bamtercelboo/Awesome-Law-NLP-Research-Work" ["l"="29.625,29.308"]
"renjunxiang/Competition_CAIL" ["l"="29.609,29.341"]
"thunlp/CAIL2018" ["l"="29.633,29.331"]
"shelleyHLX/cail" ["l"="29.599,29.336"]
"china-ai-law-challenge/CAIL2019" ["l"="29.603,29.313"]
"thunlp/attribute_charge" ["l"="29.641,29.32"]
"thunlp/TopJudge" ["l"="29.646,29.308"]
"brightmart/ai_law" ["l"="29.631,29.344"]
"jingyihiter/mycail" ["l"="29.614,29.356"]
"GuidoPaul/CAIL2019" ["l"="29.589,29.313"]
"thunlp/LegalPapers" ["l"="29.639,29.284"]
"thunlp/OpenCLaP" ["l"="32.206,30.223"]
"padeoe/cail2019" ["l"="29.602,29.301"]
"HenryYuxuanWang/judicial_competition" ["l"="29.598,29.354"]
"liuhuanyong/CrimeKgAssitant" ["l"="32.41,30.209"]
"china-ai-law-challenge/CAIL2021" ["l"="29.659,29.315"]
"china-ai-law-challenge/CAIL2020" ["l"="29.61,29.293"]
"Executedone/CAIL2021_LAJS" ["l"="29.692,29.323"]
"china-ai-law-challenge/CAIL2022" ["l"="29.698,29.337"]
"Wenorm/BERT-PLI" ["l"="29.679,29.362"]
"NoneWait/cail2019" ["l"="29.578,29.3"]
"huanghuidmml/cail2019_track2" ["l"="29.582,29.287"]
"circlePi/2019Cail-A-Bert-Joint-Baseline-for-Machine-Comprehension" ["l"="29.564,29.307"]
"china-ai-law-challenge/CAIL2018" ["l"="29.56,29.342"]
"jhpyle/docassemble" ["l"="29.698,29.149"]
"LexPredict/lexpredict-lexnlp" ["l"="29.67,29.169"]
"LexPredict/lexpredict-legal-dictionary" ["l"="29.646,29.131"]
"SuffolkLITLab/docassemble-AssemblyLine" ["l"="29.7,29.12"]
"ICLRandD/Blackstone" ["l"="29.722,29.207"]
"Liquid-Legal-Institute/Legal-Text-Analytics" ["l"="29.665,29.214"]
"accordproject/cicero" ["l"="29.75,29.091"]
"medelman17/blackstone-api" ["l"="29.734,29.146"]
"SuffolkLITLab/docassemble-ALWeaver" ["l"="29.709,29.131"]
"ttamg/deploy-docassemble" ["l"="29.69,29.131"]
"Gauntlet173/docassemble-openlcbr" ["l"="29.721,29.155"]
"officeanddragons/awesome-lawtech" ["l"="29.72,29.137"]
"LexPredict/lexpredict-contraxsuite" ["l"="29.662,29.142"]
"bergant/finstr" ["l"="29.5,29.07"]
"bergant/XBRLFiles" ["l"="29.488,29.059"]
"sewardlee337/finreportr" ["l"="29.488,29.085"]
"mwaldstein/edgarWebR" ["l"="29.518,29.09"]
"bergant/xbrlus" ["l"="29.471,29.068"]
"ShawnyXiao/2017-CCF-BDCI-AIJudge" ["l"="21.542,36.977"]
"liuhuanyong/LawCrimeMining" ["l"="32.456,30.106"]
"prometheusXN/LADAN" ["l"="29.694,29.303"]
"DQ0408/R-former" ["l"="29.717,29.306"]
"thunlp/QAJudge" ["l"="29.678,29.31"]
"thunlp/CLAIM" ["l"="29.661,29.291"]
"ruc-wjyu/IOT-Match" ["l"="29.667,29.352"]
"WAPAY/EPM" ["l"="29.677,29.293"]
"FanhuaandLuomu/pkulaw_spider" ["l"="29.571,29.415"]
"FanhuaandLuomu/ParseLawDocuments" ["l"="29.586,29.387"]
"FanhuaandLuomu/QQSpider" ["l"="29.554,29.434"]
"FanhuaandLuomu/QQMusicSpider" ["l"="29.568,29.436"]
"LexPredict/lexpredict-contraxsuite-samples" ["l"="29.67,29.123"]
"LexPredict/lexpredict-contraxsuite-deploy" ["l"="29.657,29.121"]
"LexPredict/openedgar" ["l"="29.597,29.077"]
"TheAtticusProject/cuad" ["l"="29.688,29.214"]
"Law-AI/summarization" ["l"="29.706,29.175"]
"accordproject/ergo" ["l"="29.744,29.107"]
"freelawproject/eyecite" ["l"="-1.37,-27.909"]
"freelawproject/juriscraper" ["l"="-1.358,-27.887"]
"freelawproject/courtlistener" ["l"="-1.366,-27.87"]
"MaartenGr/PolyFuzz" ["l"="29.497,32.56"]
"davidawad/lobe" ["l"="29.639,29.167"]
"chrisspen/django-sec" ["l"="29.515,28.996"]
"rahulrrixe/sec-edgar" ["l"="29.547,28.995"]
"joeyism/py-edgar" ["l"="29.58,29.048"]
"Arelle/EdgarRenderer" ["l"="29.552,29.054"]
"computerpencils/ScraXBRL" ["l"="29.57,28.994"]
"Arelle/Arelle" ["l"="29.535,29.055"]
"rahulrrixe/SEC-Edgar" ["l"="29.531,29.006"]
"THU-KEG/OmniEvent" ["l"="29.725,29.392"]
"THU-KEG/MAVEN-ERE" ["l"="29.74,29.414"]
"luyaojie/Text2Event" ["l"="32.582,30.118"]
"taishan1994/chinese_information_extraction" ["l"="32.538,30.19"]
"brightmart/multi-label_classification" ["l"="29.56,29.274"]
"altova/SECDB" ["l"="29.5,29.008"]
"graphbrain/graphbrain" ["l"="29.809,29.259"]
"msg-systems/holmes-extractor" ["l"="29.788,29.242"]
"kevinlu1248/pyate" ["l"="29.821,29.24"]
"erre-quadro/spikex" ["l"="29.456,32.568"]
"jenojp/negspacy" ["l"="29.016,30.655"]
"R1j1t/contextualSpellCheck" ["l"="31.579,28.476"]
"NIHOPA/NLPre" ["l"="29.824,29.281"]
"WZBSocialScienceCenter/tmtoolkit" ["l"="29.394,32.699"]
"nipunsadvilkar/pySBD" ["l"="29.825,29.211"]
"explosion/sense2vec" ["l"="29.674,32.675"]
"explosion/projects" ["l"="29.632,32.677"]
"NorskRegnesentral/skweak" ["l"="29.491,32.529"]
"nickdavidhaynes/spacy-cld" ["l"="29.828,29.162"]
"tokestermw/spacy_hunspell" ["l"="21.639,29.08"]
"diasks2/pragmatic_segmenter" ["l"="29.886,29.204"]
"bitextor/bitextor" ["l"="29.903,32.284"]
"fnl/syntok" ["l"="20.048,2.493"]
"baimingxuan/vue3-admin-design" ["l"="-24.832,23.116"]
"gandersen101/spaczz" ["l"="29.791,29.219"]
"sohutv/hotcaffeine" ["l"="-24.827,23.114"]
"HandsomeLeft/Veaser" ["l"="-24.84,23.117"]
"jfilter/clean-text" ["l"="29.556,32.554"]
"mediacloud/sentence-splitter" ["l"="29.853,29.189"]
"mpuig/spacy-lookup" ["l"="29.793,29.183"]
"KylinC/mmVital-Signs" ["l"="-24.835,23.122"]
"ShenDezhou/CAIL" ["l"="29.576,29.33"]
"SunnyMarkLiu/lic2019-dureader2.0-rank2" ["l"="26.075,30.14"]
"zhang17173/Event-Extraction" ["l"="32.509,30.139"]
"hecongqing/CAIL2019" ["l"="29.542,29.326"]
"FengBli/CAIL2018-toy" ["l"="29.61,29.373"]
"shelleyHLX/text-classification" ["l"="29.583,29.355"]
"caldreaming/CAIL" ["l"="29.56,29.293"]
"bojone/SPACES" ["l"="32.264,30.369"]
"openlegaldata/awesome-legal-data" ["l"="29.651,29.235"]
"elenanereiss/Legal-Entity-Recognition" ["l"="29.627,29.224"]
"coastalcph/lex-glue" ["l"="29.641,29.197"]
"Liquid-Legal-Institute/Legal-Ontologies" ["l"="29.674,29.237"]
"ArturTan/transformers-for-lawyers" ["l"="29.619,29.203"]
"tecoholic/ner-annotator" ["l"="29.353,32.584"]
"md-experiments/elastic_transformers" ["l"="29.6,32.655"]
"vector-ai/vectorai" ["l"="23.109,32.118"]
"harvard-lil/capstone" ["l"="-1.36,-27.838"]
"janlukasschroeder/sec-api" ["l"="29.605,29.041"]
"galibin24/SEC-EDGAR-python-scraper" ["l"="29.582,29.004"]
"alions7000/SEC-EDGAR-text" ["l"="29.605,29.054"]
"leoliu0/cik-cusip-mapping" ["l"="29.631,29.03"]
"volkovacodes/Block_Codes" ["l"="29.659,29.01"]
"Law-AI/DELSumm" ["l"="29.73,29.175"]
"BuffetCode/edinet_xbrl" ["l"="29.475,29.025"]
"marshmellow77/cuad-demo" ["l"="29.693,29.196"]
"diasks2/word_count_analyzer" ["l"="29.91,29.218"]
"diasks2/ruby-nlp" ["l"="9.034,-29.515"]
"diasks2/pragmatic_tokenizer" ["l"="29.919,29.183"]
"louismullie/treat" ["l"="9.057,-29.56"]
"yohasebe/lemmatizer" ["l"="9.06,-29.612"]
"UglyToad/PragmaticSegmenterNet" ["l"="29.918,29.204"]
"louismullie/scalpel" ["l"="9.128,-29.661"]
"caitian521/QADomain" ["l"="29.546,29.302"]
"basketballandlearn/Dureader-Bert" ["l"="26.036,30.158"]
"YingZiqiang/LES-MMRC-Summary" ["l"="26.096,30.12"]
"ewrfcas/bert_cn_finetune" ["l"="26.104,30.153"]
"HandsomeCao/BERT-Dureader" ["l"="26.052,30.161"]
"textpipe/textpipe" ["l"="29.845,29.256"]
"msg-systems/coreferee" ["l"="29.424,32.648"]
"explosion/spacy-experimental" ["l"="29.259,32.634"]
"microsoft/spacy-ann-linker" ["l"="25.54,29.315"]
"recognai/spacy-wordnet" ["l"="29.1,30.724"]
"sec-edgar/sec-edgar" ["l"="29.587,29.035"]
"kootenpv/spacy_api" ["l"="29.882,29.273"]
"ecohealthalliance/EpiTator" ["l"="29.877,29.254"]
"tzuhsial/edgar-10k-mda" ["l"="29.578,29.085"]
"accordproject/cicero-template-library" ["l"="29.741,29.076"]
"accordproject/concerto" ["l"="29.776,29.098"]
"accordproject/web-components" ["l"="29.769,29.079"]
"accordproject/models" ["l"="29.762,29.106"]
"accordproject/cicero-ui" ["l"="29.765,29.064"]
"accordproject/cicero-word-add-in" ["l"="29.788,29.082"]
"accordproject/techdocs" ["l"="29.748,29.055"]
"jadchaar/sec-edgar-downloader" ["l"="29.59,29.056"]
"ryansmccoy/py-sec-edgar" ["l"="29.623,29.049"]
"allenai/scispacy" ["l"="28.94,30.609"]
"RTIInternational/gobbli" ["l"="29.74,29.238"]
"huanghuidmml/tf1_transformers" ["l"="29.542,29.281"]
"gaulinmp/pyedgar" ["l"="29.615,29.064"]
"teatime77/xbrl-reader" ["l"="29.443,29.015"]
"janlukasschroeder/sec-api-python" ["l"="29.614,29.008"]
"xinyiy/EDGAR-SC13D-Info-Extraction" ["l"="29.627,29.018"]
"Workiva/ixbrl-viewer" ["l"="29.534,29.097"]
"miya8/xbrl_parser" ["l"="29.52,29.073"]
"JerBouma/FundamentalAnalysis" ["l"="21.911,32.666"]
"mmxgn/spacy-clausie" ["l"="29.856,29.28"]
"mmxgn/miniepy" ["l"="25.664,31.013"]
"KennethEnevoldsen/augmenty" ["l"="29.396,32.568"]
"HLasse/TextDescriptives" ["l"="29.398,32.517"]
"DeNeutoy/spacy-vis" ["l"="29.803,29.159"]
"accordproject/markdown-transform" ["l"="29.8,29.057"]
"accordproject/technical-steering-committee" ["l"="29.783,29.063"]
"huanghuidmml/textToy" ["l"="29.516,29.279"]
"doccano/doccano-transformer" ["l"="29.244,32.573"]
"accordproject/template-studio" ["l"="29.768,29.121"]
}