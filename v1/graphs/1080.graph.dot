digraph G {
"awesome-davian/Text2Colors" -> "b-z/photo_recoloring"
"awesome-davian/Text2Colors" -> "awesome-davian/pixelsne"
"hunkim/DeepLearningZeroToAll" -> "golbin/TensorFlow-Tutorials"
"hunkim/DeepLearningZeroToAll" -> "hunkim/PyTorchZeroToAll" ["e"=1]
"hunkim/DeepLearningZeroToAll" -> "WegraLee/deep-learning-from-scratch"
"hunkim/DeepLearningZeroToAll" -> "nlintz/TensorFlow-Tutorials" ["e"=1]
"hunkim/DeepLearningZeroToAll" -> "sjchoi86/Tensorflow-101" ["e"=1]
"hunkim/DeepLearningZeroToAll" -> "sarojaba/awesome-devblog" ["e"=1]
"hunkim/DeepLearningZeroToAll" -> "teddylee777/machine-learning"
"hunkim/DeepLearningZeroToAll" -> "GunhoChoi/PyTorch-FastCampus"
"hunkim/DeepLearningZeroToAll" -> "Team-Neighborhood/I-want-to-study-Data-Science"
"hunkim/DeepLearningZeroToAll" -> "sjchoi86/dl_tutorials_10weeks"
"hunkim/DeepLearningZeroToAll" -> "hwalsuklee/tensorflow-generative-model-collections" ["e"=1]
"hunkim/DeepLearningZeroToAll" -> "chiphuyen/stanford-tensorflow-tutorials" ["e"=1]
"hunkim/DeepLearningZeroToAll" -> "leriomaggio/deep-learning-keras-tensorflow" ["e"=1]
"hunkim/DeepLearningZeroToAll" -> "konlpy/konlpy"
"hunkim/DeepLearningZeroToAll" -> "terryum/awesome-deep-learning-papers" ["e"=1]
"CausalInferenceLab/Causal-Inference-with-Python" -> "sjchoi86/2022-1-deep-learning-applications"
"CausalInferenceLab/Causal-Inference-with-Python" -> "kakao/recoteam" ["e"=1]
"CausalInferenceLab/Causal-Inference-with-Python" -> "sooftware/Korean-PLM"
"CausalInferenceLab/Causal-Inference-with-Python" -> "songys/AwesomeKorean_Data"
"Team-Neighborhood/I-want-to-study-Data-Science" -> "zzsza/Datascience-Interview-Questions"
"Team-Neighborhood/I-want-to-study-Data-Science" -> "teddylee777/machine-learning"
"Team-Neighborhood/I-want-to-study-Data-Science" -> "boostcamp-ai-tech-4/ai-tech-interview"
"Team-Neighborhood/I-want-to-study-Data-Science" -> "zzsza/Kaggle-knowhow"
"Team-Neighborhood/I-want-to-study-Data-Science" -> "onlybooks/algorithm-interview" ["e"=1]
"Team-Neighborhood/I-want-to-study-Data-Science" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"Team-Neighborhood/I-want-to-study-Data-Science" -> "zzsza/Boostcamp-AI-Tech-Product-Serving"
"Team-Neighborhood/I-want-to-study-Data-Science" -> "WeareSoft/tech-interview" ["e"=1]
"Team-Neighborhood/I-want-to-study-Data-Science" -> "ndb796/python-for-coding-test" ["e"=1]
"Team-Neighborhood/I-want-to-study-Data-Science" -> "brave-people/brave-tech-interview" ["e"=1]
"Team-Neighborhood/I-want-to-study-Data-Science" -> "SKTBrain/KoBERT"
"Team-Neighborhood/I-want-to-study-Data-Science" -> "leehosung/awesome-devteam" ["e"=1]
"Team-Neighborhood/I-want-to-study-Data-Science" -> "jojoldu/junior-recruit-scheduler" ["e"=1]
"Team-Neighborhood/I-want-to-study-Data-Science" -> "sarojaba/awesome-devblog" ["e"=1]
"Team-Neighborhood/I-want-to-study-Data-Science" -> "gyoogle/tech-interview-for-developer" ["e"=1]
"boostcamp-ai-tech-4/ai-tech-interview" -> "zzsza/Boostcamp-AI-Tech-Product-Serving"
"boostcamp-ai-tech-4/ai-tech-interview" -> "teddylee777/machine-learning"
"boostcamp-ai-tech-4/ai-tech-interview" -> "zzsza/Datascience-Interview-Questions"
"boostcamp-ai-tech-4/ai-tech-interview" -> "Team-Neighborhood/I-want-to-study-Data-Science"
"boostcamp-ai-tech-4/ai-tech-interview" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"boostcamp-ai-tech-4/ai-tech-interview" -> "jungwoo-ha/WeeklyArxivTalk"
"boostcamp-ai-tech-4/ai-tech-interview" -> "songys/AwesomeKorean_Data"
"boostcamp-ai-tech-4/ai-tech-interview" -> "subinium/Misc-Cheatsheet"
"boostcamp-ai-tech-4/ai-tech-interview" -> "kakaobrain/kogpt"
"boostcamp-ai-tech-4/ai-tech-interview" -> "songys/Chatbot_data"
"boostcamp-ai-tech-4/ai-tech-interview" -> "KLUE-benchmark/KLUE"
"boostcamp-ai-tech-4/ai-tech-interview" -> "yukyunglee/Transformer_Survey_Study"
"boostcamp-ai-tech-4/ai-tech-interview" -> "onlybooks/algorithm-interview" ["e"=1]
"boostcamp-ai-tech-4/ai-tech-interview" -> "kakaobrain/pororo"
"boostcamp-ai-tech-4/ai-tech-interview" -> "sooftware/k-startups"
"kakaobrain/kogpt" -> "SKT-AI/KoGPT2"
"kakaobrain/kogpt" -> "monologg/KoELECTRA"
"kakaobrain/kogpt" -> "KLUE-benchmark/KLUE"
"kakaobrain/kogpt" -> "kakaobrain/pororo"
"kakaobrain/kogpt" -> "SKTBrain/KoBERT"
"kakaobrain/kogpt" -> "ko-nlp/Korpora"
"kakaobrain/kogpt" -> "songys/AwesomeKorean_Data"
"kakaobrain/kogpt" -> "kakaobrain/minDALL-E"
"kakaobrain/kogpt" -> "SKT-AI/KoBART"
"kakaobrain/kogpt" -> "Beomi/KoAlpaca"
"kakaobrain/kogpt" -> "monologg/KoBigBird"
"kakaobrain/kogpt" -> "jungwoo-ha/WeeklyArxivTalk"
"kakaobrain/kogpt" -> "smilegate-ai/korean_unsmile_dataset"
"kakaobrain/kogpt" -> "kiyoungkim1/LMkor"
"kakaobrain/kogpt" -> "Beomi/KcBERT"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "boostcamp-ai-tech-4/ai-tech-interview"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "teddylee777/machine-learning"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "zzsza/Datascience-Interview-Questions"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "zzsza/Boostcamp-AI-Tech-Product-Serving"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "heartcored98/Standalone-DeepLearning"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "jungwoo-ha/WeeklyArxivTalk"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "Team-Neighborhood/I-want-to-study-Data-Science"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "songys/AwesomeKorean_Data"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "SKTBrain/KoBERT"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "kakaobrain/kogpt"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "rickiepark/handson-ml2"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "zzsza/Kaggle-knowhow"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "kakaobrain/pororo"
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "onlybooks/algorithm-interview" ["e"=1]
"ndb796/Deep-Learning-Paper-Review-and-Practice" -> "ndb796/python-for-coding-test" ["e"=1]
"teddylee777/machine-learning" -> "Team-Neighborhood/I-want-to-study-Data-Science"
"teddylee777/machine-learning" -> "boostcamp-ai-tech-4/ai-tech-interview"
"teddylee777/machine-learning" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"teddylee777/machine-learning" -> "zzsza/Datascience-Interview-Questions"
"teddylee777/machine-learning" -> "onlybooks/algorithm-interview" ["e"=1]
"teddylee777/machine-learning" -> "brave-people/brave-tech-interview" ["e"=1]
"teddylee777/machine-learning" -> "ndb796/python-for-coding-test" ["e"=1]
"teddylee777/machine-learning" -> "brave-people/Dev-Event" ["e"=1]
"teddylee777/machine-learning" -> "tony9402/baekjoon" ["e"=1]
"teddylee777/machine-learning" -> "gyoogle/tech-interview-for-developer" ["e"=1]
"teddylee777/machine-learning" -> "zzsza/Kaggle-knowhow"
"teddylee777/machine-learning" -> "leehosung/awesome-devteam" ["e"=1]
"teddylee777/machine-learning" -> "subinium/Misc-Cheatsheet"
"teddylee777/machine-learning" -> "heartcored98/Standalone-DeepLearning"
"teddylee777/machine-learning" -> "jungwoo-ha/WeeklyArxivTalk"
"zzsza/Awesome-Mobility-Machine-Learning-Contents" -> "illidanlab/Simulator"
"zzsza/Awesome-Mobility-Machine-Learning-Contents" -> "mktal/kddcup-starting-kit"
"zzsza/Awesome-Mobility-Machine-Learning-Contents" -> "zzsza/kyle-school"
"zzsza/Awesome-Mobility-Machine-Learning-Contents" -> "liulingbo918/CSTN"
"zzsza/Awesome-Mobility-Machine-Learning-Contents" -> "zzsza/bigquery-tutorial"
"zzsza/Kaggle-knowhow" -> "zzsza/Datascience-Interview-Questions"
"zzsza/Kaggle-knowhow" -> "Team-Neighborhood/I-want-to-study-Data-Science"
"zzsza/Kaggle-knowhow" -> "zzsza/kyle-school"
"zzsza/Kaggle-knowhow" -> "corazzon/KaggleStruggle"
"zzsza/Kaggle-knowhow" -> "keon/3-min-pytorch"
"zzsza/Kaggle-knowhow" -> "insurgent92/CS231N_17_KOR_SUB"
"zzsza/Kaggle-knowhow" -> "Kyubyong/dl_career_faq"
"zzsza/Kaggle-knowhow" -> "ratsgo/embedding"
"zzsza/Kaggle-knowhow" -> "reinforcement-learning-kr/how_to_study_rl"
"zzsza/Kaggle-knowhow" -> "KaggleBreak/walkingkaggle"
"zzsza/Kaggle-knowhow" -> "boostcamp-ai-tech-4/ai-tech-interview"
"zzsza/Kaggle-knowhow" -> "GunhoChoi/PyTorch-FastCampus"
"zzsza/Kaggle-knowhow" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"zzsza/Kaggle-knowhow" -> "teddylee777/machine-learning"
"zzsza/Kaggle-knowhow" -> "WegraLee/deep-learning-from-scratch-2"
"Kyubyong/dl_career_faq" -> "naver/nlp-challenge"
"Kyubyong/dl_career_faq" -> "zzsza/Kaggle-knowhow"
"aikorea/cs231n" -> "nmhkahn/deep_learning_tutorial"
"aikorea/cs231n" -> "insurgent92/CS231N_17_KOR_SUB"
"datanada/Awesome-Korean-NLP" -> "konlpy/konlpy"
"datanada/Awesome-Korean-NLP" -> "lovit/soynlp"
"datanada/Awesome-Korean-NLP" -> "songys/AwesomeKorean_Data"
"datanada/Awesome-Korean-NLP" -> "e9t/nsmc"
"datanada/Awesome-Korean-NLP" -> "ko-nlp/Korpora"
"datanada/Awesome-Korean-NLP" -> "open-korean-text/open-korean-text"
"datanada/Awesome-Korean-NLP" -> "SKTBrain/KoBERT"
"datanada/Awesome-Korean-NLP" -> "monologg/KoELECTRA"
"datanada/Awesome-Korean-NLP" -> "papower1/Awesome-Korean-NLP-Papers"
"datanada/Awesome-Korean-NLP" -> "Beomi/KcBERT"
"datanada/Awesome-Korean-NLP" -> "kakao/khaiii"
"datanada/Awesome-Korean-NLP" -> "ratsgo/embedding"
"datanada/Awesome-Korean-NLP" -> "SKT-AI/KoBART"
"datanada/Awesome-Korean-NLP" -> "kocohub/korean-hate-speech"
"datanada/Awesome-Korean-NLP" -> "kakaobrain/KorNLUDatasets"
"lovit/soynlp" -> "lovit/KR-WordRank"
"lovit/soynlp" -> "SKTBrain/KoBERT"
"lovit/soynlp" -> "songys/AwesomeKorean_Data"
"lovit/soynlp" -> "kakao/khaiii"
"lovit/soynlp" -> "ko-nlp/Korpora"
"lovit/soynlp" -> "ratsgo/embedding"
"lovit/soynlp" -> "monologg/KoELECTRA"
"lovit/soynlp" -> "datanada/Awesome-Korean-NLP"
"lovit/soynlp" -> "Beomi/KcBERT"
"lovit/soynlp" -> "konlpy/konlpy"
"lovit/soynlp" -> "lovit/textmining-tutorial"
"lovit/soynlp" -> "haven-jeon/PyKoSpacing"
"lovit/soynlp" -> "e9t/nsmc"
"lovit/soynlp" -> "SKT-AI/KoGPT2"
"lovit/soynlp" -> "eagle705/pytorch-bert-crf-ner"
"twitter/twitter-korean-text" -> "open-korean-text/open-korean-text"
"twitter/twitter-korean-text" -> "konlpy/konlpy"
"twitter/twitter-korean-text" -> "datanada/Awesome-Korean-NLP"
"twitter/twitter-korean-text" -> "e9t/nsmc"
"twitter/twitter-korean-text" -> "seoul-opengov/opengov"
"twitter/twitter-korean-text" -> "kakao/khaiii"
"twitter/twitter-korean-text" -> "lovit/soynlp"
"twitter/twitter-korean-text" -> "shineware/komoran-2.0"
"twitter/twitter-korean-text" -> "shin285/KOMORAN"
"twitter/twitter-korean-text" -> "codeport/scala"
"twitter/twitter-korean-text" -> "southkorea/southkorea-maps"
"twitter/twitter-korean-text" -> "chanil1218/elasticsearch-analysis-korean"
"twitter/twitter-korean-text" -> "golbin/TensorFlow-Tutorials"
"twitter/twitter-korean-text" -> "haven-jeon/KoNLP"
"twitter/twitter-korean-text" -> "gureum/gureum" ["e"=1]
"kakao/khaiii" -> "lovit/soynlp"
"kakao/khaiii" -> "konlpy/konlpy"
"kakao/khaiii" -> "SKTBrain/KoBERT"
"kakao/khaiii" -> "e9t/nsmc"
"kakao/khaiii" -> "ko-nlp/Korpora"
"kakao/khaiii" -> "datanada/Awesome-Korean-NLP"
"kakao/khaiii" -> "monologg/KoELECTRA"
"kakao/khaiii" -> "SKT-AI/KoGPT2"
"kakao/khaiii" -> "kakaobrain/pororo"
"kakao/khaiii" -> "ratsgo/embedding"
"kakao/khaiii" -> "songys/AwesomeKorean_Data"
"kakao/khaiii" -> "open-korean-text/open-korean-text"
"kakao/khaiii" -> "kakaobrain/kogpt"
"kakao/khaiii" -> "eagle705/pytorch-bert-crf-ner"
"kakao/khaiii" -> "haven-jeon/PyKoSpacing"
"seoul-opengov/opengov" -> "twitter/twitter-korean-text"
"seoul-opengov/opengov" -> "southkorea/southkorea-maps"
"seoul-opengov/opengov" -> "nolboo/nolboo.github.io" ["e"=1]
"seoul-opengov/opengov" -> "milooy/hobbycoding"
"seoul-opengov/opengov" -> "jongman/algospot"
"seoul-opengov/opengov" -> "nhnent/fe.javascript" ["e"=1]
"seoul-opengov/opengov" -> "plusfriend/auto_reply"
"seoul-opengov/opengov" -> "tensorflowkorea/tensorflow-kr"
"seoul-opengov/opengov" -> "gureum/gureum" ["e"=1]
"seoul-opengov/opengov" -> "seogi1004/jui" ["e"=1]
"seoul-opengov/opengov" -> "codeport/scala"
"seoul-opengov/opengov" -> "southkorea/seoul-maps"
"seoul-opengov/opengov" -> "devsisters/multi-speaker-tacotron-tensorflow"
"seoul-opengov/opengov" -> "akic4op4/GNE"
"seoul-opengov/opengov" -> "konlpy/konlpy"
"ukairia777/tensorflow-nlp-tutorial" -> "KLUE-benchmark/KLUE"
"ukairia777/tensorflow-nlp-tutorial" -> "sooftware/Korean-PLM"
"ukairia777/tensorflow-nlp-tutorial" -> "ko-nlp/Korpora"
"ukairia777/tensorflow-nlp-tutorial" -> "ratsgo/embedding"
"ukairia777/tensorflow-nlp-tutorial" -> "songys/AwesomeKorean_Data"
"ukairia777/tensorflow-nlp-tutorial" -> "SKTBrain/KoBERT"
"ukairia777/tensorflow-nlp-tutorial" -> "kakaobrain/kogpt"
"ukairia777/tensorflow-nlp-tutorial" -> "jiphyeonjeon/season2"
"ukairia777/tensorflow-nlp-tutorial" -> "SKT-AI/KoGPT2"
"ukairia777/tensorflow-nlp-tutorial" -> "monologg/KoELECTRA"
"ukairia777/tensorflow-nlp-tutorial" -> "kocohub/korean-hate-speech"
"ukairia777/tensorflow-nlp-tutorial" -> "PyTorchKorea/tutorials-kr"
"ukairia777/tensorflow-nlp-tutorial" -> "eagle705/pytorch-bert-crf-ner"
"ukairia777/tensorflow-nlp-tutorial" -> "kakaobrain/pororo"
"ukairia777/tensorflow-nlp-tutorial" -> "WegraLee/deep-learning-from-scratch-2"
"veritas9872/PyTorch-Universal-Docker-Template" -> "jungwoo-ha/WeeklyArxivTalk"
"veritas9872/PyTorch-Universal-Docker-Template" -> "AminRezaei0x443/PyTorch-LIT"
"veritas9872/PyTorch-Universal-Docker-Template" -> "tunib-ai/large-scale-lm-tutorials"
"konlpy/konlpy" -> "kakao/khaiii"
"konlpy/konlpy" -> "datanada/Awesome-Korean-NLP"
"konlpy/konlpy" -> "twitter/twitter-korean-text"
"konlpy/konlpy" -> "lovit/soynlp"
"konlpy/konlpy" -> "e9t/nsmc"
"konlpy/konlpy" -> "open-korean-text/open-korean-text"
"konlpy/konlpy" -> "SKTBrain/KoBERT"
"konlpy/konlpy" -> "ko-nlp/Korpora"
"konlpy/konlpy" -> "ratsgo/embedding"
"konlpy/konlpy" -> "SKT-AI/KoGPT2"
"konlpy/konlpy" -> "golbin/TensorFlow-Tutorials"
"konlpy/konlpy" -> "haven-jeon/PyKoSpacing"
"konlpy/konlpy" -> "KLUE-benchmark/KLUE"
"konlpy/konlpy" -> "songys/AwesomeKorean_Data"
"konlpy/konlpy" -> "kakaobrain/pororo"
"rickiepark/handson-ml2" -> "rickiepark/handson-ml"
"rickiepark/handson-ml2" -> "WegraLee/deep-learning-from-scratch-2"
"rickiepark/handson-ml2" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"rickiepark/handson-ml2" -> "rickiepark/deep-learning-with-python-notebooks"
"rickiepark/handson-ml2" -> "teddylee777/machine-learning"
"rickiepark/handson-ml2" -> "WegraLee/deep-learning-from-scratch-3"
"rickiepark/handson-ml2" -> "NLP-kr/tensorflow-ml-nlp-tf2"
"rickiepark/handson-ml2" -> "Team-Neighborhood/I-want-to-study-Data-Science"
"rickiepark/handson-ml2" -> "jungwoo-ha/WeeklyArxivTalk"
"rickiepark/handson-ml2" -> "rickiepark/hg-mldl"
"rickiepark/handson-ml2" -> "SKTBrain/KoBERT"
"rickiepark/handson-ml2" -> "heartcored98/Standalone-DeepLearning"
"rickiepark/handson-ml2" -> "WegraLee/deep-learning-from-scratch"
"rickiepark/handson-ml2" -> "ko-nlp/Korpora"
"rickiepark/handson-ml2" -> "songys/AwesomeKorean_Data"
"WegraLee/deep-learning-from-scratch" -> "WegraLee/deep-learning-from-scratch-2"
"WegraLee/deep-learning-from-scratch" -> "WegraLee/deep-learning-from-scratch-3"
"WegraLee/deep-learning-from-scratch" -> "golbin/TensorFlow-Tutorials"
"WegraLee/deep-learning-from-scratch" -> "zzsza/Datascience-Interview-Questions"
"WegraLee/deep-learning-from-scratch" -> "boostcamp-ai-tech-4/ai-tech-interview"
"WegraLee/deep-learning-from-scratch" -> "teddylee777/machine-learning"
"WegraLee/deep-learning-from-scratch" -> "Team-Neighborhood/I-want-to-study-Data-Science"
"WegraLee/deep-learning-from-scratch" -> "hunkim/DeepLearningZeroToAll"
"WegraLee/deep-learning-from-scratch" -> "rickiepark/handson-ml"
"WegraLee/deep-learning-from-scratch" -> "rickiepark/handson-ml2"
"WegraLee/deep-learning-from-scratch" -> "zzsza/Kaggle-knowhow"
"WegraLee/deep-learning-from-scratch" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"WegraLee/deep-learning-from-scratch" -> "konlpy/konlpy"
"WegraLee/deep-learning-from-scratch" -> "rickiepark/introduction_to_ml_with_python"
"WegraLee/deep-learning-from-scratch" -> "kakao/khaiii"
"rickiepark/hg-mldl" -> "rickiepark/do-it-dl"
"tunz/transformer-pytorch" -> "hyunwoongko/transformer"
"Beomi/KoAlpaca" -> "kakaobrain/kogpt"
"Beomi/KoAlpaca" -> "SKT-AI/KoGPT2"
"Beomi/KoAlpaca" -> "monologg/KoELECTRA"
"Beomi/KoAlpaca" -> "KLUE-benchmark/KLUE"
"Beomi/KoAlpaca" -> "EleutherAI/polyglot"
"Beomi/KoAlpaca" -> "Beomi/KcBERT"
"Beomi/KoAlpaca" -> "airobotlab/KoChatGPT"
"Beomi/KoAlpaca" -> "songys/AwesomeKorean_Data"
"Beomi/KoAlpaca" -> "ko-nlp/Korpora"
"Beomi/KoAlpaca" -> "SKTBrain/KoBERT"
"Beomi/KoAlpaca" -> "kakaobrain/pororo"
"Beomi/KoAlpaca" -> "deep-diver/Alpaca-LoRA-Serve" ["e"=1]
"Beomi/KoAlpaca" -> "smilegate-ai/korean_unsmile_dataset"
"Beomi/KoAlpaca" -> "tunib-ai/large-scale-lm-tutorials"
"Beomi/KoAlpaca" -> "jungwoo-ha/WeeklyArxivTalk"
"Huffon/nlp-startups" -> "kakaobrain/KorNLUDatasets"
"Huffon/nlp-startups" -> "sooftware/Korean-PLM"
"Huffon/nlp-startups" -> "monologg/KoBigBird"
"Huffon/nlp-startups" -> "tunib-ai/tunib-electra"
"Huffon/nlp-startups" -> "monologg/KoBERT-Transformers"
"Huffon/nlp-startups" -> "sooftware/k-startups"
"Huffon/nlp-startups" -> "gyunggyung/Korea-Startups"
"Huffon/nlp-startups" -> "Huffon/klue-transformers-tutorial"
"Huffon/nlp-startups" -> "kocohub/korean-hate-speech"
"golbin/TensorFlow-Tutorials" -> "hunkim/DeepLearningZeroToAll"
"golbin/TensorFlow-Tutorials" -> "sarojaba/awesome-devblog" ["e"=1]
"golbin/TensorFlow-Tutorials" -> "GunhoChoi/PyTorch-FastCampus"
"golbin/TensorFlow-Tutorials" -> "kakao/khaiii"
"golbin/TensorFlow-Tutorials" -> "konlpy/konlpy"
"golbin/TensorFlow-Tutorials" -> "datanada/Awesome-Korean-NLP"
"golbin/TensorFlow-Tutorials" -> "WegraLee/deep-learning-from-scratch"
"golbin/TensorFlow-Tutorials" -> "mingrammer/git-tips" ["e"=1]
"golbin/TensorFlow-Tutorials" -> "sjchoi86/dl_tutorials_10weeks"
"golbin/TensorFlow-Tutorials" -> "lovit/soynlp"
"golbin/TensorFlow-Tutorials" -> "twitter/twitter-korean-text"
"golbin/TensorFlow-Tutorials" -> "nhnent/fe.javascript" ["e"=1]
"golbin/TensorFlow-Tutorials" -> "rlcode/reinforcement-learning-kr"
"golbin/TensorFlow-Tutorials" -> "tensorflowkorea/tensorflow-kr"
"golbin/TensorFlow-Tutorials" -> "golbin/TensorFlow-ML-Exercises"
"hubaimaster/aws-interface" -> "dbdydgur2244/GoodForHealth"
"hubaimaster/aws-interface" -> "taeseunglee/taeseung_vimrc"
"bluedisk/hangul-toolkit" -> "kaniblu/hangul-utils"
"bluedisk/hangul-toolkit" -> "coolengineer/sejong-corpus"
"bluedisk/hangul-toolkit" -> "naver/nlp-challenge"
"bluedisk/hangul-toolkit" -> "Beomi/KcBERT"
"bluedisk/hangul-toolkit" -> "lovit/soynlp"
"bluedisk/hangul-toolkit" -> "datanada/Awesome-Korean-NLP"
"bluedisk/hangul-toolkit" -> "naver/kor2vec"
"bluedisk/hangul-toolkit" -> "kocohub/korean-hate-speech"
"bluedisk/hangul-toolkit" -> "likejazz/korean-sentence-splitter"
"bluedisk/hangul-toolkit" -> "rhobot/Hangulpy"
"bluedisk/hangul-toolkit" -> "pingpong-ai/chatspace"
"bluedisk/hangul-toolkit" -> "ssut/py-hanspell"
"bluedisk/hangul-toolkit" -> "KLUE-benchmark/KLUE"
"bluedisk/hangul-toolkit" -> "kakaobrain/KorNLUDatasets"
"bluedisk/hangul-toolkit" -> "bluedisk/korean_char_rnn"
"jungwoo-ha/WeeklyArxivTalk" -> "KLUE-benchmark/KLUE"
"jungwoo-ha/WeeklyArxivTalk" -> "boostcamp-ai-tech-4/ai-tech-interview"
"jungwoo-ha/WeeklyArxivTalk" -> "kakaobrain/kogpt"
"jungwoo-ha/WeeklyArxivTalk" -> "kakaobrain/nlp-paper-reading"
"jungwoo-ha/WeeklyArxivTalk" -> "zzsza/Boostcamp-AI-Tech-Product-Serving"
"jungwoo-ha/WeeklyArxivTalk" -> "monologg/KoELECTRA"
"jungwoo-ha/WeeklyArxivTalk" -> "ko-nlp/Korpora"
"jungwoo-ha/WeeklyArxivTalk" -> "kakaobrain/pororo"
"jungwoo-ha/WeeklyArxivTalk" -> "songys/AwesomeKorean_Data"
"jungwoo-ha/WeeklyArxivTalk" -> "SKT-AI/KoGPT2"
"jungwoo-ha/WeeklyArxivTalk" -> "tunib-ai/large-scale-lm-tutorials"
"jungwoo-ha/WeeklyArxivTalk" -> "SKT-AI/KoBART"
"jungwoo-ha/WeeklyArxivTalk" -> "sjchoi86/2022-1-deep-learning-applications"
"jungwoo-ha/WeeklyArxivTalk" -> "clovaai/AdamP"
"jungwoo-ha/WeeklyArxivTalk" -> "SKTBrain/KoBERT"
"SKTBrain/KoBERT" -> "SKT-AI/KoGPT2"
"SKTBrain/KoBERT" -> "monologg/KoELECTRA"
"SKTBrain/KoBERT" -> "eagle705/pytorch-bert-crf-ner"
"SKTBrain/KoBERT" -> "songys/AwesomeKorean_Data"
"SKTBrain/KoBERT" -> "SKT-AI/KoBART"
"SKTBrain/KoBERT" -> "e9t/nsmc"
"SKTBrain/KoBERT" -> "lovit/soynlp"
"SKTBrain/KoBERT" -> "Beomi/KcBERT"
"SKTBrain/KoBERT" -> "kakaobrain/kogpt"
"SKTBrain/KoBERT" -> "KLUE-benchmark/KLUE"
"SKTBrain/KoBERT" -> "ratsgo/embedding"
"SKTBrain/KoBERT" -> "kakaobrain/pororo"
"SKTBrain/KoBERT" -> "ko-nlp/Korpora"
"SKTBrain/KoBERT" -> "kakao/khaiii"
"SKTBrain/KoBERT" -> "konlpy/konlpy"
"dhlee347/pytorchic-bert" -> "graykode/ALBERT-Pytorch"
"dhlee347/pytorchic-bert" -> "monologg/KoELECTRA"
"dhlee347/pytorchic-bert" -> "kakaobrain/KorNLUDatasets"
"dhlee347/pytorchic-bert" -> "SKT-AI/KoGPT2"
"dhlee347/pytorchic-bert" -> "ratsgo/embedding"
"dhlee347/pytorchic-bert" -> "eagle705/pytorch-bert-crf-ner"
"dhlee347/pytorchic-bert" -> "songys/AwesomeKorean_Data"
"dhlee347/pytorchic-bert" -> "datanada/Awesome-Korean-NLP"
"dhlee347/pytorchic-bert" -> "SKTBrain/KoBERT"
"dhlee347/pytorchic-bert" -> "Huffon/nlp-startups"
"dhlee347/pytorchic-bert" -> "naver/claf"
"dhlee347/pytorchic-bert" -> "naver/nlp-challenge"
"dhlee347/pytorchic-bert" -> "kocohub/korean-hate-speech"
"dhlee347/pytorchic-bert" -> "modulabs/NLP-bootcamp"
"dhlee347/pytorchic-bert" -> "codertimo/BERT-pytorch" ["e"=1]
"insurgent92/CS231N_17_KOR_SUB" -> "deep-diver/Machine-Learning-Yearning-Korean-Translation"
"insurgent92/CS231N_17_KOR_SUB" -> "Curt-Park/reinforcement_learning_an_introduction"
"insurgent92/CS231N_17_KOR_SUB" -> "GunhoChoi/PyTorch-FastCampus"
"insurgent92/CS231N_17_KOR_SUB" -> "zzsza/Kaggle-knowhow"
"insurgent92/CS231N_17_KOR_SUB" -> "rickiepark/handson-ml"
"insurgent92/CS231N_17_KOR_SUB" -> "YoongiKim/Walk-Assistant"
"insurgent92/CS231N_17_KOR_SUB" -> "aikorea/cs231n"
"insurgent92/CS231N_17_KOR_SUB" -> "keon/3-min-pytorch"
"insurgent92/CS231N_17_KOR_SUB" -> "deeplearningzerotoall/TensorFlow"
"insurgent92/CS231N_17_KOR_SUB" -> "datanada/Awesome-Korean-NLP"
"insurgent92/CS231N_17_KOR_SUB" -> "rickiepark/deep-learning-with-python-notebooks"
"insurgent92/CS231N_17_KOR_SUB" -> "JONGGON/Tensorflow_Advanced_Tutorials"
"insurgent92/CS231N_17_KOR_SUB" -> "Bricoler/nlp-tensorflow"
"insurgent92/CS231N_17_KOR_SUB" -> "zzsza/Datascience-Interview-Questions"
"insurgent92/CS231N_17_KOR_SUB" -> "sjchoi86/dl_tutorials_10weeks"
"sooftware/KoSpeech" -> "clovaai/ClovaCall"
"sooftware/KoSpeech" -> "sooftware/openspeech"
"sooftware/KoSpeech" -> "kakaobrain/pororo"
"sooftware/KoSpeech" -> "goodatlas/zeroth"
"sooftware/KoSpeech" -> "sooftware/ksponspeech"
"sooftware/KoSpeech" -> "sooftware/KsponSpeech-preprocess"
"sooftware/KoSpeech" -> "Kyubyong/g2pK"
"sooftware/KoSpeech" -> "fd873630/RNN-Transducer"
"sooftware/KoSpeech" -> "monologg/KoELECTRA"
"sooftware/KoSpeech" -> "sooftware/conformer" ["e"=1]
"sooftware/KoSpeech" -> "kakaobrain/nlp-paper-reading"
"sooftware/KoSpeech" -> "jiphyeonjeon/nlp-review"
"sooftware/KoSpeech" -> "hchung12/espnet-asr"
"sooftware/KoSpeech" -> "sooftware/Naver-AI-Hackathon-Speech"
"sooftware/deepspeech2" -> "sooftware/generate-sec-dataset"
"sooftware/pytorch-lr-scheduler" -> "sooftware/lasr"
"sooftware/pytorch-lr-scheduler" -> "sooftware/deepspeech2"
"sooftware/speech-transformer" -> "sooftware/lasr"
"ko-nlp/Korpora" -> "songys/AwesomeKorean_Data"
"ko-nlp/Korpora" -> "Beomi/KcBERT"
"ko-nlp/Korpora" -> "monologg/KoELECTRA"
"ko-nlp/Korpora" -> "KLUE-benchmark/KLUE"
"ko-nlp/Korpora" -> "SKT-AI/KoGPT2"
"ko-nlp/Korpora" -> "kakaobrain/KorNLUDatasets"
"ko-nlp/Korpora" -> "kocohub/korean-hate-speech"
"ko-nlp/Korpora" -> "SKT-AI/KoBART"
"ko-nlp/Korpora" -> "kakaobrain/pororo"
"ko-nlp/Korpora" -> "lovit/soynlp"
"ko-nlp/Korpora" -> "kakaobrain/kogpt"
"ko-nlp/Korpora" -> "hyunwoongko/kss"
"ko-nlp/Korpora" -> "SKTBrain/KoBERT"
"ko-nlp/Korpora" -> "Beomi/KcELECTRA"
"ko-nlp/Korpora" -> "songys/Chatbot_data"
"zzsza/Datascience-Interview-Questions" -> "Team-Neighborhood/I-want-to-study-Data-Science"
"zzsza/Datascience-Interview-Questions" -> "boostcamp-ai-tech-4/ai-tech-interview"
"zzsza/Datascience-Interview-Questions" -> "zzsza/Kaggle-knowhow"
"zzsza/Datascience-Interview-Questions" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"zzsza/Datascience-Interview-Questions" -> "teddylee777/machine-learning"
"zzsza/Datascience-Interview-Questions" -> "monologg/KoELECTRA"
"zzsza/Datascience-Interview-Questions" -> "zzsza/Boostcamp-AI-Tech-Product-Serving"
"zzsza/Datascience-Interview-Questions" -> "songys/AwesomeKorean_Data"
"zzsza/Datascience-Interview-Questions" -> "zzsza/kyle-school"
"zzsza/Datascience-Interview-Questions" -> "jungwoo-ha/WeeklyArxivTalk"
"zzsza/Datascience-Interview-Questions" -> "lovit/soynlp"
"zzsza/Datascience-Interview-Questions" -> "SKTBrain/KoBERT"
"zzsza/Datascience-Interview-Questions" -> "onlybooks/algorithm-interview" ["e"=1]
"zzsza/Datascience-Interview-Questions" -> "KLUE-benchmark/KLUE"
"zzsza/Datascience-Interview-Questions" -> "kakaobrain/kogpt"
"sjchoi86/dl_tutorials_10weeks" -> "sjchoi86/advanced-tensorflow"
"sjchoi86/dl_tutorials_10weeks" -> "nmhkahn/deep_learning_tutorial"
"sjchoi86/dl_tutorials_10weeks" -> "GunhoChoi/PyTorch-FastCampus"
"sjchoi86/dl_tutorials_10weeks" -> "hunkim/KaggleZeroToAll"
"sjchoi86/dl_tutorials_10weeks" -> "Curt-Park/cs231n_assignments"
"sjchoi86/dl_tutorials_10weeks" -> "devsisters/multi-speaker-tacotron-tensorflow"
"sjchoi86/dl_tutorials_10weeks" -> "TensorFlowKR/awesome_tensorflow_implementations"
"sjchoi86/dl_tutorials_10weeks" -> "sjchoi86/Tensorflow-101" ["e"=1]
"sjchoi86/dl_tutorials_10weeks" -> "golbin/TensorFlow-Tutorials"
"sjchoi86/dl_tutorials_10weeks" -> "FuZer/Study_TensorFlow"
"sjchoi86/dl_tutorials_10weeks" -> "TensorFlowKR/MLJejuCamp"
"sjchoi86/dl_tutorials_10weeks" -> "sjchoi86/Deep-Learning-101" ["e"=1]
"sjchoi86/dl_tutorials_10weeks" -> "GunhoChoi/Kind_PyTorch_Tutorial"
"sjchoi86/dl_tutorials_10weeks" -> "insurgent92/CS231N_17_KOR_SUB"
"sjchoi86/dl_tutorials_10weeks" -> "hunkim/effective_python_notebook"
"ssut/py-hanspell" -> "haven-jeon/PyKoSpacing"
"ssut/py-hanspell" -> "lovit/soyspacing"
"ssut/py-hanspell" -> "lovit/soynlp"
"ssut/py-hanspell" -> "hyunwoongko/kss"
"ssut/py-hanspell" -> "SKT-AI/KoBART"
"ssut/py-hanspell" -> "spellcheck-ko/hunspell-dict-ko"
"ssut/py-hanspell" -> "sooftware/Korean-PLM"
"ssut/py-hanspell" -> "songys/AwesomeKorean_Data"
"ssut/py-hanspell" -> "monologg/KoELECTRA"
"ssut/py-hanspell" -> "SKTBrain/KoBERT"
"ssut/py-hanspell" -> "bluedisk/hangul-toolkit"
"ssut/py-hanspell" -> "kocohub/korean-hate-speech"
"ssut/py-hanspell" -> "naver/kor2vec"
"ssut/py-hanspell" -> "lovit/KR-WordRank"
"ssut/py-hanspell" -> "kakaobrain/pororo"
"HowookJeong/elasticsearch-analysis-arirang" -> "korlucene/arirang-analyzer-es-plugin"
"KerasKorea/KEKOxTutorial" -> "KerasKorea/KerasObjectDetector"
"KerasKorea/KEKOxTutorial" -> "ratsgo/embedding"
"KerasKorea/KEKOxTutorial" -> "deep-diver/Machine-Learning-Yearning-Korean-Translation"
"KerasKorea/KEKOxTutorial" -> "zzsza/Kaggle-knowhow"
"KerasKorea/KEKOxTutorial" -> "songys/AwesomeKorean_Data"
"KerasKorea/KEKOxTutorial" -> "keras-team/keras-docs-ko"
"KerasKorea/KEKOxTutorial" -> "deeplearningzerotoall/TensorFlow"
"KerasKorea/KEKOxTutorial" -> "insurgent92/CS231N_17_KOR_SUB"
"KerasKorea/KEKOxTutorial" -> "SKTBrain/KoBERT"
"KerasKorea/KEKOxTutorial" -> "jskDr/keraspp"
"KerasKorea/KEKOxTutorial" -> "zzsza/kyle-school"
"KerasKorea/KEKOxTutorial" -> "jaimyoung/ipds-kr"
"KerasKorea/KEKOxTutorial" -> "KerasKorea/KerasKorea.github.io"
"KerasKorea/KEKOxTutorial" -> "rickiepark/deep-learning-with-python-notebooks"
"KerasKorea/KEKOxTutorial" -> "zzsza/Datascience-Interview-Questions"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "NLP-kr/tensorflow-ml-nlp"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "songys/AwesomeKorean_Data"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "ko-nlp/Korpora"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "haven-jeon/KoGPT2-chatbot"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "lovit/KR-WordRank"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "gyunggyung/KoGPT2-FineTuning"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "uoneway/Text-Summarization-Repo"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "Beomi/KcBERT"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "ratsgo/embedding"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "SKT-AI/KoGPT2"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "songys/Chatbot_data"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "KB-Bank-AI/KB-ALBERT-KO"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "lovit/soynlp"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "SKT-AI/KoBART"
"NLP-kr/tensorflow-ml-nlp-tf2" -> "monologg/KoELECTRA"
"rickiepark/deep-learning-with-python-notebooks" -> "gilbutITbook/006975"
"rickiepark/deep-learning-with-python-notebooks" -> "rickiepark/python-machine-learning-book-2nd-edition"
"rickiepark/deep-learning-with-python-notebooks" -> "rickiepark/handson-ml"
"rickiepark/deep-learning-with-python-notebooks" -> "rickiepark/do-it-dl"
"rickiepark/deep-learning-with-python-notebooks" -> "rickiepark/introduction_to_ml_with_python"
"rickiepark/deep-learning-with-python-notebooks" -> "rickiepark/handson-ml2"
"rickiepark/deep-learning-with-python-notebooks" -> "rickiepark/GDL_code"
"rickiepark/deep-learning-with-python-notebooks" -> "insurgent92/CS231N_17_KOR_SUB"
"GunhoChoi/Kind-PyTorch-Tutorial" -> "GunhoChoi/PyTorch-FastCampus"
"GunhoChoi/Kind-PyTorch-Tutorial" -> "GunhoChoi/Deep-Learning-For-Beginners" ["e"=1]
"KLUE-benchmark/KLUE" -> "monologg/KoELECTRA"
"KLUE-benchmark/KLUE" -> "ko-nlp/Korpora"
"KLUE-benchmark/KLUE" -> "monologg/KoBigBird"
"KLUE-benchmark/KLUE" -> "SKT-AI/KoBART"
"KLUE-benchmark/KLUE" -> "kakaobrain/KorNLUDatasets"
"KLUE-benchmark/KLUE" -> "songys/AwesomeKorean_Data"
"KLUE-benchmark/KLUE" -> "kakaobrain/pororo"
"KLUE-benchmark/KLUE" -> "kakaobrain/kogpt"
"KLUE-benchmark/KLUE" -> "SKT-AI/KoGPT2"
"KLUE-benchmark/KLUE" -> "KLUE-benchmark/KLUE-baseline"
"KLUE-benchmark/KLUE" -> "Beomi/KcELECTRA"
"KLUE-benchmark/KLUE" -> "SKTBrain/KoBERT"
"KLUE-benchmark/KLUE" -> "jungwoo-ha/WeeklyArxivTalk"
"KLUE-benchmark/KLUE" -> "kocohub/korean-hate-speech"
"KLUE-benchmark/KLUE" -> "tunib-ai/large-scale-lm-tutorials"
"GunhoChoi/PyTorch-FastCampus" -> "nmhkahn/deep_learning_tutorial"
"GunhoChoi/PyTorch-FastCampus" -> "keon/3-min-pytorch"
"GunhoChoi/PyTorch-FastCampus" -> "insurgent92/CS231N_17_KOR_SUB"
"GunhoChoi/PyTorch-FastCampus" -> "sjchoi86/dl_tutorials_10weeks"
"GunhoChoi/PyTorch-FastCampus" -> "datanada/Awesome-Korean-NLP"
"GunhoChoi/PyTorch-FastCampus" -> "golbin/TensorFlow-Tutorials"
"GunhoChoi/PyTorch-FastCampus" -> "zzsza/Kaggle-knowhow"
"GunhoChoi/PyTorch-FastCampus" -> "jskDr/keraspp"
"GunhoChoi/PyTorch-FastCampus" -> "deep-diver/Machine-Learning-Yearning-Korean-Translation"
"GunhoChoi/PyTorch-FastCampus" -> "sjchoi86/bayes-nn" ["e"=1]
"GunhoChoi/PyTorch-FastCampus" -> "GunhoChoi/Kind-PyTorch-Tutorial"
"GunhoChoi/PyTorch-FastCampus" -> "e9t/nsmc"
"GunhoChoi/PyTorch-FastCampus" -> "DSKSD/Pytorch_Fast_Campus_2018"
"GunhoChoi/PyTorch-FastCampus" -> "sjchoi86/advanced-tensorflow"
"GunhoChoi/PyTorch-FastCampus" -> "zzsza/Datascience-Interview-Questions"
"Beomi/KcBERT" -> "monologg/KoELECTRA"
"Beomi/KcBERT" -> "ko-nlp/Korpora"
"Beomi/KcBERT" -> "songys/AwesomeKorean_Data"
"Beomi/KcBERT" -> "Beomi/KcELECTRA"
"Beomi/KcBERT" -> "kocohub/korean-hate-speech"
"Beomi/KcBERT" -> "SKTBrain/KoBERT"
"Beomi/KcBERT" -> "kakaobrain/KorNLUDatasets"
"Beomi/KcBERT" -> "SKT-AI/KoGPT2"
"Beomi/KcBERT" -> "kakaobrain/nlp-paper-reading"
"Beomi/KcBERT" -> "SKT-AI/KoBART"
"Beomi/KcBERT" -> "KLUE-benchmark/KLUE"
"Beomi/KcBERT" -> "e9t/nsmc"
"Beomi/KcBERT" -> "eagle705/pytorch-bert-crf-ner"
"Beomi/KcBERT" -> "lovit/soynlp"
"Beomi/KcBERT" -> "monologg/DistilKoBERT"
"deeplearningzerotoall/TensorFlow" -> "deeplearningzerotoall/PyTorch"
"deeplearningzerotoall/TensorFlow" -> "deeplearningzerotoall/season2"
"deeplearningzerotoall/TensorFlow" -> "insurgent92/CS231N_17_KOR_SUB"
"deeplearningzerotoall/TensorFlow" -> "zzsza/Kaggle-knowhow"
"deeplearningzerotoall/TensorFlow" -> "KerasKorea/KEKOxTutorial"
"deeplearningzerotoall/TensorFlow" -> "d2l-ai/d2l-ko"
"deeplearningzerotoall/TensorFlow" -> "rickiepark/handson-ml"
"deeplearningzerotoall/TensorFlow" -> "NLP-kr/tensorflow-ml-nlp"
"hyunwoongko/transformer" -> "tunz/transformer-pytorch"
"hyunwoongko/transformer" -> "jayparks/transformer" ["e"=1]
"hyunwoongko/transformer" -> "paul-hyun/transformer-evolution"
"hyunwoongko/transformer" -> "SamLynnEvans/Transformer" ["e"=1]
"hyunwoongko/transformer" -> "maxjcohen/transformer" ["e"=1]
"hyunwoongko/transformer" -> "sooftware/attentions"
"hyunwoongko/transformer" -> "jiphyeonjeon/season2"
"hyunwoongko/transformer" -> "yukyunglee/Transformer_Survey_Study"
"hyunwoongko/transformer" -> "jungwoo-ha/WeeklyArxivTalk"
"hyunwoongko/transformer" -> "monologg/KoELECTRA"
"hyunwoongko/transformer" -> "boostcamp-ai-tech-4/ai-tech-interview"
"hyunwoongko/transformer" -> "kakaobrain/pororo"
"hyunwoongko/transformer" -> "hyunwoongko/kss"
"hyunwoongko/transformer" -> "sooftware/Korean-PLM"
"hyunwoongko/transformer" -> "jadore801120/attention-is-all-you-need-pytorch" ["e"=1]
"jaketae/storyteller" -> "tunib-ai/oslo"
"jaketae/storyteller" -> "lassl/lassl"
"hyunwoongko/kochat" -> "hyunwoongko/kocrawl"
"hyunwoongko/kochat" -> "haven-jeon/KoGPT2-chatbot"
"hyunwoongko/kochat" -> "hyunwoongko/kss"
"hyunwoongko/kochat" -> "ko-nlp/Korpora"
"hyunwoongko/kochat" -> "tunib-ai/oslo"
"hyunwoongko/kochat" -> "KLUE-benchmark/KLUE"
"hyunwoongko/kochat" -> "monologg/KoELECTRA"
"hyunwoongko/kochat" -> "kakaobrain/kogpt"
"hyunwoongko/kochat" -> "tunib-ai/tunib-electra"
"hyunwoongko/kochat" -> "hyunwoongko/kobart-transformers"
"hyunwoongko/kochat" -> "jiphyeonjeon/season2"
"hyunwoongko/kochat" -> "songys/AwesomeKorean_Data"
"hyunwoongko/kochat" -> "tunib-ai/large-scale-lm-tutorials"
"hyunwoongko/kochat" -> "SKT-AI/KoBART"
"hyunwoongko/kochat" -> "hyunwoongko/openchat"
"tunib-ai/parallelformers" -> "tunib-ai/oslo"
"tunib-ai/parallelformers" -> "tunib-ai/large-scale-lm-tutorials"
"tunib-ai/parallelformers" -> "tunib-ai/tunib-electra"
"tunib-ai/parallelformers" -> "jiphyeonjeon/season2"
"tunib-ai/parallelformers" -> "monologg/KoBigBird"
"tunib-ai/parallelformers" -> "KLUE-benchmark/KLUE"
"tunib-ai/parallelformers" -> "monologg/KoELECTRA"
"tunib-ai/parallelformers" -> "kakaobrain/kortok"
"tunib-ai/parallelformers" -> "kakaobrain/nlp-paper-reading"
"tunib-ai/parallelformers" -> "sooftware/Korean-PLM"
"tunib-ai/parallelformers" -> "lassl/lassl"
"tunib-ai/parallelformers" -> "KLUE-benchmark/KLUE-baseline"
"tunib-ai/parallelformers" -> "yukyunglee/Transformer_Survey_Study"
"tunib-ai/parallelformers" -> "songys/AwesomeKorean_Data"
"tunib-ai/parallelformers" -> "kakaobrain/pororo"
"kakaobrain/minDALL-E" -> "kakaobrain/kogpt"
"kakaobrain/minDALL-E" -> "tunib-ai/oslo"
"kakaobrain/minDALL-E" -> "monologg/KoBigBird"
"kakaobrain/minDALL-E" -> "kakaobrain/rq-vae-transformer" ["e"=1]
"kakaobrain/minDALL-E" -> "tunib-ai/large-scale-lm-tutorials"
"kakaobrain/minDALL-E" -> "kakaobrain/coyo-dataset" ["e"=1]
"kakaobrain/minDALL-E" -> "monologg/KoELECTRA"
"kakaobrain/minDALL-E" -> "sooftware/Korean-PLM"
"kakaobrain/minDALL-E" -> "KLUE-benchmark/KLUE"
"kakaobrain/minDALL-E" -> "jungwoo-ha/WeeklyArxivTalk"
"kakaobrain/minDALL-E" -> "ko-nlp/Korpora"
"kakaobrain/minDALL-E" -> "lassl/lassl"
"kakaobrain/minDALL-E" -> "smilegate-ai/korean_unsmile_dataset"
"kakaobrain/minDALL-E" -> "yukyunglee/Transformer_Survey_Study"
"kakaobrain/minDALL-E" -> "kakaobrain/pororo"
"plusfriend/auto_reply" -> "seoul-opengov/opengov"
"plusfriend/auto_reply" -> "JungWinter/yellowid-flask"
"plusfriend/auto_reply" -> "NAVER-CAMPUS-HACKDAY/common" ["e"=1]
"plusfriend/auto_reply" -> "nhnent/fe.javascript" ["e"=1]
"plusfriend/auto_reply" -> "mingrammer/git-tips" ["e"=1]
"plusfriend/auto_reply" -> "datanada/Awesome-Korean-NLP"
"plusfriend/auto_reply" -> "purpleworks/delibird" ["e"=1]
"plusfriend/auto_reply" -> "cheese10yun/KaKaoBot-Node"
"plusfriend/auto_reply" -> "golbin/TensorFlow-Tutorials"
"gyunggyung/KoGPT2-FineTuning" -> "haven-jeon/KoGPT2-chatbot"
"gyunggyung/KoGPT2-FineTuning" -> "shbictai/narrativeKoGPT2"
"gyunggyung/KoGPT2-FineTuning" -> "SKT-AI/KoGPT2"
"gyunggyung/KoGPT2-FineTuning" -> "songys/AwesomeKorean_Data"
"gyunggyung/KoGPT2-FineTuning" -> "SKT-AI/KoBART"
"gyunggyung/KoGPT2-FineTuning" -> "monologg/KoBigBird"
"gyunggyung/KoGPT2-FineTuning" -> "seujung/KoBART-summarization"
"gyunggyung/KoGPT2-FineTuning" -> "ko-nlp/Korpora"
"gyunggyung/KoGPT2-FineTuning" -> "monologg/KoELECTRA"
"gyunggyung/KoGPT2-FineTuning" -> "NLP-kr/tensorflow-ml-nlp-tf2"
"gyunggyung/KoGPT2-FineTuning" -> "KB-Bank-AI/KB-ALBERT-KO"
"gyunggyung/KoGPT2-FineTuning" -> "likejazz/korean-sentence-splitter"
"gyunggyung/KoGPT2-FineTuning" -> "MrBananaHuman/KorGPT2Tutorial"
"gyunggyung/KoGPT2-FineTuning" -> "sohyeon98720/KoGPT2-finetuning"
"gyunggyung/KoGPT2-FineTuning" -> "nawnoes/WellnessConversation-LanguageModel"
"rickiepark/first-steps-with-tensorflow" -> "jorditorresBCN/FirstContactWithTensorFlow"
"rickiepark/first-steps-with-tensorflow" -> "jorditorresBCN/FirstContactWithTensorFlow-2ndEdition"
"naver-ai/pit" -> "naver-ai/calm"
"naver-ai/pit" -> "naver-ai/PfLayer"
"naver-ai/pit" -> "naver-ai/pcme"
"naver-ai/pit" -> "naver-ai/eccv-caption"
"naver-ai/pit" -> "Andrew-Qibin/VisionPermutator" ["e"=1]
"naver-ai/pit" -> "coallaoh/Principles"
"jskDr/keraspp" -> "GunhoChoi/PyTorch-FastCampus"
"jskDr/keraspp" -> "rlcode/reinforcement-learning-kr"
"jskDr/keraspp" -> "nmhkahn/deep_learning_tutorial"
"rlcode/reinforcement-learning-kr" -> "reinforcement-learning-kr/how_to_study_rl"
"rlcode/reinforcement-learning-kr" -> "hunkim/ReinforcementZeroToAll"
"rlcode/reinforcement-learning-kr" -> "rlcode/reinforcement-learning-kr-v2"
"rlcode/reinforcement-learning-kr" -> "jskDr/keraspp"
"rlcode/reinforcement-learning-kr" -> "jcwleo/Reinforcement_Learning"
"rlcode/reinforcement-learning-kr" -> "golbin/TensorFlow-Tutorials"
"rlcode/reinforcement-learning-kr" -> "utilForever/rl-paper-study"
"rlcode/reinforcement-learning-kr" -> "reinforcement-learning-kr/pg_travel" ["e"=1]
"rlcode/reinforcement-learning-kr" -> "seungeunrho/RLfrombasics"
"rlcode/reinforcement-learning-kr" -> "insurgent92/CS231N_17_KOR_SUB"
"rlcode/reinforcement-learning-kr" -> "keon/3-min-pytorch"
"rlcode/reinforcement-learning-kr" -> "quantylab/rltrader" ["e"=1]
"rlcode/reinforcement-learning-kr" -> "GunhoChoi/PyTorch-FastCampus"
"rlcode/reinforcement-learning-kr" -> "zzsza/Datascience-Interview-Questions"
"rlcode/reinforcement-learning-kr" -> "medipixel/rl_algorithms" ["e"=1]
"deeplearningzerotoall/PyTorch" -> "deeplearningzerotoall/TensorFlow"
"deeplearningzerotoall/PyTorch" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"deeplearningzerotoall/PyTorch" -> "teddylee777/machine-learning"
"deeplearningzerotoall/PyTorch" -> "Team-Neighborhood/I-want-to-study-Data-Science"
"deeplearningzerotoall/PyTorch" -> "zzsza/Kaggle-knowhow"
"deeplearningzerotoall/PyTorch" -> "jungwoo-ha/WeeklyArxivTalk"
"deeplearningzerotoall/PyTorch" -> "boostcamp-ai-tech-4/ai-tech-interview"
"deeplearningzerotoall/PyTorch" -> "kakaobrain/pororo"
"deeplearningzerotoall/PyTorch" -> "rickiepark/handson-ml2"
"deeplearningzerotoall/PyTorch" -> "WegraLee/deep-learning-from-scratch"
"deeplearningzerotoall/PyTorch" -> "ratsgo/embedding"
"deeplearningzerotoall/PyTorch" -> "WegraLee/deep-learning-from-scratch-2"
"deeplearningzerotoall/PyTorch" -> "songys/AwesomeKorean_Data"
"deeplearningzerotoall/PyTorch" -> "deeplearningzerotoall/season2"
"deeplearningzerotoall/PyTorch" -> "ko-nlp/Korpora"
"southkorea/seoul-maps" -> "southkorea/southkorea-maps"
"southkorea/southkorea-maps" -> "southkorea/seoul-maps"
"southkorea/southkorea-maps" -> "vuski/admdongkor"
"southkorea/southkorea-maps" -> "seoul-opengov/opengov"
"southkorea/southkorea-maps" -> "twitter/twitter-korean-text"
"southkorea/southkorea-maps" -> "open-korean-text/open-korean-text"
"southkorea/southkorea-maps" -> "konlpy/konlpy"
"southkorea/southkorea-maps" -> "OhmyNews/12-14_kapf"
"southkorea/southkorea-maps" -> "teampopong/pokr.kr"
"southkorea/southkorea-maps" -> "kakao/khaiii"
"southkorea/southkorea-maps" -> "datanada/Awesome-Korean-NLP"
"southkorea/southkorea-maps" -> "codeport/scala"
"southkorea/southkorea-maps" -> "e9t/nsmc"
"southkorea/southkorea-maps" -> "deep-diver/Machine-Learning-Yearning-Korean-Translation"
"southkorea/southkorea-maps" -> "corazzon/OpenDataWrangling"
"southkorea/southkorea-maps" -> "PinkWink/DataScience"
"codeport/scala" -> "nforge/devnote"
"codeport/scala" -> "Kevin-Lee/modern-java-untold" ["e"=1]
"codeport/scala" -> "enshahar/BasicFPinScala" ["e"=1]
"codeport/scala" -> "nforge/yobi" ["e"=1]
"codeport/scala" -> "twitter/twitter-korean-text"
"codeport/scala" -> "loom/loom-core" ["e"=1]
"codeport/scala" -> "nolboo/nolboo.github.io" ["e"=1]
"codeport/scala" -> "hangum/TadpoleForDBTools" ["e"=1]
"corazzon/petitionWrangling" -> "corazzon/OpenDataWrangling"
"clovaai/ClovaCall" -> "sooftware/KoSpeech"
"clovaai/ClovaCall" -> "JoungheeKim/K-wav2vec"
"clovaai/ClovaCall" -> "KLUE-benchmark/KLUE-baseline"
"clovaai/ClovaCall" -> "Huffon/nlp-startups"
"clovaai/ClovaCall" -> "clovaai/AdamP"
"clovaai/ClovaCall" -> "songys/AwesomeKorean_Data"
"clovaai/ClovaCall" -> "kakaobrain/kortok"
"clovaai/ClovaCall" -> "ko-nlp/Korpora"
"clovaai/ClovaCall" -> "warnikchow/3i4k"
"clovaai/ClovaCall" -> "kakaobrain/KorNLUDatasets"
"goodatlas/zeroth" -> "clovaai/ClovaCall"
"goodatlas/zeroth" -> "sooftware/KoSpeech"
"goodatlas/zeroth" -> "Kyubyong/g2pK"
"goodatlas/zeroth" -> "scarletcho/KoG2P"
"goodatlas/zeroth" -> "datanada/Awesome-Korean-NLP"
"goodatlas/zeroth" -> "coolengineer/sejong-corpus"
"goodatlas/zeroth" -> "kakao/khaiii"
"goodatlas/zeroth" -> "songys/AwesomeKorean_Data"
"goodatlas/zeroth" -> "lovit/soynlp"
"goodatlas/zeroth" -> "monologg/KoELECTRA"
"goodatlas/zeroth" -> "likejazz/korean-sentence-splitter"
"goodatlas/zeroth" -> "SKTBrain/KoBERT"
"goodatlas/zeroth" -> "open-korean-text/open-korean-text"
"goodatlas/zeroth" -> "scarletcho/KoLM"
"goodatlas/zeroth" -> "ssut/py-hanspell"
"kakaobrain/pororo" -> "monologg/KoELECTRA"
"kakaobrain/pororo" -> "KLUE-benchmark/KLUE"
"kakaobrain/pororo" -> "ko-nlp/Korpora"
"kakaobrain/pororo" -> "kakaobrain/kogpt"
"kakaobrain/pororo" -> "songys/AwesomeKorean_Data"
"kakaobrain/pororo" -> "SKT-AI/KoGPT2"
"kakaobrain/pororo" -> "SKTBrain/KoBERT"
"kakaobrain/pororo" -> "SKT-AI/KoBART"
"kakaobrain/pororo" -> "kakaobrain/nlp-paper-reading"
"kakaobrain/pororo" -> "Beomi/KcBERT"
"kakaobrain/pororo" -> "hyunwoongko/kss"
"kakaobrain/pororo" -> "lovit/soynlp"
"kakaobrain/pororo" -> "kocohub/korean-hate-speech"
"kakaobrain/pororo" -> "jungwoo-ha/WeeklyArxivTalk"
"kakaobrain/pororo" -> "sooftware/KoSpeech"
"lucidrains/PaLM-pytorch" -> "lucidrains/PaLM-jax"
"lucidrains/PaLM-pytorch" -> "hpcaitech/PaLM-colossalai" ["e"=1]
"lucidrains/PaLM-pytorch" -> "bigscience-workshop/Megatron-DeepSpeed" ["e"=1]
"lucidrains/PaLM-pytorch" -> "lucidrains/flamingo-pytorch" ["e"=1]
"lucidrains/PaLM-pytorch" -> "google-research/FLAN" ["e"=1]
"lucidrains/PaLM-pytorch" -> "lucidrains/RETRO-pytorch" ["e"=1]
"lucidrains/PaLM-pytorch" -> "microsoft/DeepSpeed-MII" ["e"=1]
"lucidrains/PaLM-pytorch" -> "lassl/lassl"
"lucidrains/PaLM-pytorch" -> "monologg/KoBigBird"
"lucidrains/PaLM-pytorch" -> "tunib-ai/parallelformers"
"lucidrains/PaLM-pytorch" -> "google-research/longt5" ["e"=1]
"lucidrains/PaLM-pytorch" -> "google-research/t5x" ["e"=1]
"lucidrains/PaLM-pytorch" -> "tunib-ai/oslo"
"lucidrains/PaLM-pytorch" -> "lucidrains/CoCa-pytorch" ["e"=1]
"lucidrains/PaLM-pytorch" -> "EleutherAI/oslo"
"airobotlab/KoChatGPT" -> "tunib-ai/tunib-electra"
"airobotlab/KoChatGPT" -> "searle-j/KOTE"
"airobotlab/KoChatGPT" -> "lovit/huggingface_konlpy"
"airobotlab/KoChatGPT" -> "hyunwoongko/pecab"
"airobotlab/KoChatGPT" -> "EleutherAI/polyglot"
"spellcheck-ko/hunspell-dict-ko" -> "changwoo/hunspell-dict-ko"
"spellcheck-ko/hunspell-dict-ko" -> "ssut/py-hanspell"
"wookayin/tensorflow-talk-debugging" -> "wookayin/TensorFlowKR-2017-talk-bestpractice"
"wookayin/tensorflow-talk-debugging" -> "aicodes/tf-bestpractice"
"wookayin/tensorflow-talk-debugging" -> "tmulc18/Distributed-TensorFlow-Guide" ["e"=1]
"hyunjun/bookmarks" -> "datanada/Awesome-Korean-NLP"
"hyunjun/bookmarks" -> "eagle705/pytorch-bert-crf-ner"
"hyunjun/bookmarks" -> "SKTBrain/KoBERT"
"hyunjun/bookmarks" -> "songys/AwesomeKorean_Data"
"hyunjun/bookmarks" -> "e9t/nsmc"
"hyunjun/bookmarks" -> "kakao/khaiii"
"hyunjun/bookmarks" -> "naver/nlp-challenge"
"hyunjun/bookmarks" -> "lovit/soynlp"
"hyunjun/bookmarks" -> "monologg/KoELECTRA"
"hyunjun/bookmarks" -> "kakaobrain/nlp-paper-reading"
"hyunjun/bookmarks" -> "sarojaba/awesome-devblog" ["e"=1]
"hyunjun/bookmarks" -> "Beomi/KcBERT"
"hyunjun/bookmarks" -> "papower1/Awesome-Korean-NLP-Papers"
"hyunjun/bookmarks" -> "haven-jeon/PyKoSpacing"
"hyunjun/bookmarks" -> "kocohub/korean-hate-speech"
"naver-ai/relabel_imagenet" -> "naver-ai/calm"
"naver-ai/relabel_imagenet" -> "clovaai/rebias" ["e"=1]
"naver-ai/relabel_imagenet" -> "clovaai/AdamP"
"naver-ai/relabel_imagenet" -> "clovaai/rexnet"
"naver-ai/relabel_imagenet" -> "clovaai/wsolevaluation" ["e"=1]
"naver-ai/relabel_imagenet" -> "naver-ai/PfLayer"
"naver-ai/relabel_imagenet" -> "clovaai/tunit" ["e"=1]
"naver-ai/relabel_imagenet" -> "naver-ai/pit"
"naver-ai/relabel_imagenet" -> "Alibaba-MIIL/ASL" ["e"=1]
"naver-ai/relabel_imagenet" -> "clovaai/overhaul-distillation" ["e"=1]
"naver-ai/relabel_imagenet" -> "google-research/reassessed-imagenet" ["e"=1]
"songys/Chatbot_data" -> "songys/AwesomeKorean_Data"
"songys/Chatbot_data" -> "ko-nlp/Korpora"
"songys/Chatbot_data" -> "haven-jeon/KoGPT2-chatbot"
"songys/Chatbot_data" -> "monologg/KoELECTRA"
"songys/Chatbot_data" -> "nawnoes/WellnessConversation-LanguageModel"
"songys/Chatbot_data" -> "seujung/KoBART-summarization"
"songys/Chatbot_data" -> "Beomi/KcBERT"
"songys/Chatbot_data" -> "SKT-AI/KoGPT2"
"songys/Chatbot_data" -> "kocohub/korean-hate-speech"
"songys/Chatbot_data" -> "jiphyeonjeon/season2"
"songys/Chatbot_data" -> "zzsza/Boostcamp-AI-Tech-Product-Serving"
"songys/Chatbot_data" -> "SKT-AI/KoBART"
"songys/Chatbot_data" -> "Beomi/KcELECTRA"
"songys/Chatbot_data" -> "VumBleBot/odqa_baseline_code"
"songys/Chatbot_data" -> "KLUE-benchmark/KLUE"
"fuzzythecat/awesome-spacer" -> "taeseunglee/taeseung_vimrc"
"TensorFlowKR/awesome_tensorflow_implementations" -> "sjchoi86/dl_tutorials_10weeks"
"TensorFlowKR/awesome_tensorflow_implementations" -> "FuZer/Study_TensorFlow"
"TensorFlowKR/awesome_tensorflow_implementations" -> "carpedm20/MemN2N-tensorflow" ["e"=1]
"TensorFlowKR/awesome_tensorflow_implementations" -> "golbin/TensorFlow-Tutorials"
"TensorFlowKR/awesome_tensorflow_implementations" -> "hunkim/effective_python_notebook"
"TensorFlowKR/awesome_tensorflow_implementations" -> "aikorea/cs231n"
"TensorFlowKR/awesome_tensorflow_implementations" -> "jazzsaxmafia/show_attend_and_tell.tensorflow" ["e"=1]
"TensorFlowKR/awesome_tensorflow_implementations" -> "tensorflowkorea/tensorflow-kr"
"TensorFlowKR/awesome_tensorflow_implementations" -> "golbin/TensorFlow-ML-Exercises"
"TensorFlowKR/awesome_tensorflow_implementations" -> "jazzsaxmafia/show_and_tell.tensorflow" ["e"=1]
"TensorFlowKR/awesome_tensorflow_implementations" -> "TensorFlowKR/MLJejuCamp"
"TensorFlowKR/awesome_tensorflow_implementations" -> "google/prettytensor" ["e"=1]
"TensorFlowKR/awesome_tensorflow_implementations" -> "datanada/Awesome-Korean-NLP"
"TensorFlowKR/awesome_tensorflow_implementations" -> "nlintz/TensorFlow-Tutorials" ["e"=1]
"TensorFlowKR/awesome_tensorflow_implementations" -> "therne/dmn-tensorflow" ["e"=1]
"akic4op4/GNE" -> "devunt/10th-amendment"
"akic4op4/GNE" -> "perillamint/GNE"
"akic4op4/GNE" -> "theeluwin/textrankr"
"akic4op4/GNE" -> "devsisters/multi-speaker-tacotron-tensorflow"
"akic4op4/GNE" -> "xnuk/K-SSVM-node"
"hunkim/DeepLearningStars" -> "hunkim/KaggleZeroToAll"
"hunkim/DeepLearningStars" -> "hunkim/ReinforcementZeroToAll"
"hunkim/DeepLearningStars" -> "hunkim/effective_python_notebook"
"hunkim/DeepLearningStars" -> "TensorFlowKR/MLJejuCamp"
"hunkim/DeepLearningStars" -> "hunkim/ml"
"hunkim/DeepLearningStars" -> "nmhkahn/deep_learning_tutorial"
"hunkim/DeepLearningStars" -> "wookayin/TensorflowKR-2016-talk-debugging"
"hunkim/DeepLearningStars" -> "sjchoi86/dl_tutorials_10weeks"
"hunkim/DeepLearningStars" -> "golbin/TensorFlow-ML-Exercises"
"hunkim/DeepLearningStars" -> "hunkim/PythonZeroToAll"
"open-korean-text/open-korean-text" -> "twitter/twitter-korean-text"
"open-korean-text/open-korean-text" -> "konlpy/konlpy"
"open-korean-text/open-korean-text" -> "datanada/Awesome-Korean-NLP"
"open-korean-text/open-korean-text" -> "kakao/khaiii"
"open-korean-text/open-korean-text" -> "lovit/soynlp"
"open-korean-text/open-korean-text" -> "lovit/KR-WordRank"
"open-korean-text/open-korean-text" -> "open-korean-text/elasticsearch-analysis-openkoreantext"
"open-korean-text/open-korean-text" -> "e9t/nsmc"
"open-korean-text/open-korean-text" -> "HowookJeong/elasticsearch-analysis-arirang"
"open-korean-text/open-korean-text" -> "ko-nlp/Korpora"
"open-korean-text/open-korean-text" -> "lovit/customized_konlpy"
"open-korean-text/open-korean-text" -> "shin285/KOMORAN"
"open-korean-text/open-korean-text" -> "bab2min/Kiwi"
"open-korean-text/open-korean-text" -> "SKT-AI/KoGPT2"
"open-korean-text/open-korean-text" -> "southkorea/southkorea-maps"
"perillamint/GNE" -> "nunalang/nuna"
"clovaai/rexnet" -> "clovaai/AdamP"
"clovaai/rexnet" -> "naver-ai/PfLayer"
"clovaai/rexnet" -> "naver-ai/relabel_imagenet"
"clovaai/rexnet" -> "naver-ai/pit"
"clovaai/rexnet" -> "clovaai/overhaul-distillation" ["e"=1]
"clovaai/rexnet" -> "clovaai/dmfont" ["e"=1]
"clovaai/rexnet" -> "mrT23/TResNet" ["e"=1]
"clovaai/rexnet" -> "clovaai/rebias" ["e"=1]
"clovaai/rexnet" -> "clovaai/assembled-cnn" ["e"=1]
"clovaai/rexnet" -> "clovaai/tunit" ["e"=1]
"clovaai/rexnet" -> "clovaai/StatAssist-GradBoost"
"clovaai/rexnet" -> "implus/GFocalV2" ["e"=1]
"clovaai/rexnet" -> "naver-ai/calm"
"clovaai/rexnet" -> "szq0214/MEAL-V2" ["e"=1]
"clovaai/rexnet" -> "idstcv/GPU-Efficient-Networks"
"naver-ai/PfLayer" -> "naver-ai/coco-annotation-tool"
"naver-ai/PfLayer" -> "naver-ai/imagenet-annotation-tool"
"naver-ai/PfLayer" -> "naver-ai/NeglectedFreeLunch"
"clovaai/AdamP" -> "clovaai/rexnet"
"clovaai/AdamP" -> "kakaobrain/KorNLUDatasets"
"clovaai/AdamP" -> "kakaobrain/nlp-paper-reading"
"clovaai/AdamP" -> "clovaai/ClovaCall"
"clovaai/AdamP" -> "jungwoo-ha/WeeklyArxivTalk"
"clovaai/AdamP" -> "clovaai/dmfont" ["e"=1]
"clovaai/AdamP" -> "clovaai/generative-evaluation-prdc" ["e"=1]
"clovaai/AdamP" -> "clovaai/rebias" ["e"=1]
"clovaai/AdamP" -> "naver-ai/pit"
"clovaai/AdamP" -> "KLUE-benchmark/KLUE-baseline"
"clovaai/AdamP" -> "KLUE-benchmark/KLUE"
"clovaai/AdamP" -> "taki0112/AdamP-Tensorflow"
"clovaai/AdamP" -> "naver-ai/PfLayer"
"clovaai/AdamP" -> "monologg/KoELECTRA"
"clovaai/AdamP" -> "Beomi/KcBERT"
"sjhwang82/AdvancedML" -> "jungwoo-ha/WeeklyArxivTalk"
"sjhwang82/AdvancedML" -> "sjhwang82/DeepLearning"
"sjhwang82/AdvancedML" -> "seominjoon/kaist-ai605"
"sjhwang82/AdvancedML" -> "awesome-davian/Paper-study"
"sjhwang82/AdvancedML" -> "taeoh-kim/pr12" ["e"=1]
"sjhwang82/AdvancedML" -> "clovaai/AdamP"
"sjhwang82/AdvancedML" -> "haebeom-lee/l2b"
"sjhwang82/AdvancedML" -> "juho-lee/bnp" ["e"=1]
"sjhwang82/AdvancedML" -> "optimass/continual_learning_papers" ["e"=1]
"sjchoi86/advanced-tensorflow" -> "sjchoi86/dl_tutorials_10weeks"
"sjchoi86/advanced-tensorflow" -> "sjchoi86/Tensorflow-101" ["e"=1]
"sjchoi86/advanced-tensorflow" -> "TensorFlowKR/MLJejuCamp"
"sjchoi86/advanced-tensorflow" -> "nmhkahn/deep_learning_tutorial"
"sjchoi86/advanced-tensorflow" -> "hunkim/KaggleZeroToAll"
"sjchoi86/advanced-tensorflow" -> "sjchoi86/bayes-nn" ["e"=1]
"sjchoi86/advanced-tensorflow" -> "GunhoChoi/PyTorch-FastCampus"
"sjchoi86/advanced-tensorflow" -> "sjchoi86/Deep-Learning-101" ["e"=1]
"sjchoi86/advanced-tensorflow" -> "wookayin/TensorFlowKR-2017-talk-bestpractice"
"sjchoi86/advanced-tensorflow" -> "devsisters/multi-speaker-tacotron-tensorflow"
"sjchoi86/advanced-tensorflow" -> "hwalsuklee/awesome-deep-vision-web-demo" ["e"=1]
"sjchoi86/advanced-tensorflow" -> "sjchoi86/dl_tutorials" ["e"=1]
"sjchoi86/advanced-tensorflow" -> "golbin/TensorFlow-Tutorials"
"sjchoi86/advanced-tensorflow" -> "hunkim/ReinforcementZeroToAll"
"sjchoi86/advanced-tensorflow" -> "bi-lab/deeplearning_tutorial"
"bab2min/corpus" -> "KB-Bank-AI/KB-ALBERT-KO"
"bab2min/corpus" -> "ZIZUN/korean-malicious-comments-dataset"
"visionNoob/CS231N_17_KOR_SUB" -> "WegraLee/deep-learning-from-scratch-2"
"visionNoob/CS231N_17_KOR_SUB" -> "songys/CS224N_17_KOR_SUB"
"visionNoob/CS231N_17_KOR_SUB" -> "zzsza/Kaggle-knowhow"
"visionNoob/CS231N_17_KOR_SUB" -> "zzsza/Datascience-Interview-Questions"
"visionNoob/CS231N_17_KOR_SUB" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"visionNoob/CS231N_17_KOR_SUB" -> "sooftware/k-startups"
"thunlp/SOS4NLP" -> "kakaobrain/nlp-paper-reading"
"thunlp/SOS4NLP" -> "yukyunglee/Transformer_Survey_Study"
"thunlp/SOS4NLP" -> "hyunwoongko/pecab"
"thunlp/SOS4NLP" -> "tunib-ai/large-scale-lm-tutorials"
"thunlp/SOS4NLP" -> "Huffon/klue-transformers-tutorial"
"thunlp/SOS4NLP" -> "LG-NLP/KorWikiTableQuestions"
"thunlp/SOS4NLP" -> "lassl/lassl"
"thunlp/SOS4NLP" -> "KLUE-benchmark/KLUE"
"thunlp/SOS4NLP" -> "jiphyeonjeon/season2"
"thunlp/SOS4NLP" -> "monologg/KoELECTRA"
"thunlp/SOS4NLP" -> "songys/AwesomeKorean_Data"
"thunlp/SOS4NLP" -> "kakaobrain/KorNLUDatasets"
"thunlp/SOS4NLP" -> "ko-nlp/Korpora"
"thunlp/SOS4NLP" -> "uoneway/Text-Summarization-Repo"
"thunlp/SOS4NLP" -> "AIRC-KETI/ke-t5"
"kimwoonggon/publicservant_AI" -> "KB-Bank-AI/KB-ALBERT-KO"
"kimwoonggon/publicservant_AI" -> "songys/AwesomeKorean_Data"
"jcwleo/Reinforcement_Learning" -> "rlcode/paper-reviews"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "boostcamp-ai-tech-4/ai-tech-interview"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "yukyunglee/Transformer_Survey_Study"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "sjchoi86/upstage-basic-deeplearning"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "jinmang2/boostcamp_ai_tech_2"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "jungwoo-ha/WeeklyArxivTalk"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "thejungwon/Boostcamp-CV-Serving"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "toriving/KoEDA"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "boostcamp-AI-Tech-alumni/Events"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "songys/Chatbot_data"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "subinium/Misc-Cheatsheet"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "sooftware/Korean-PLM"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "tunib-ai/large-scale-lm-tutorials"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "Huffon/klue-transformers-tutorial"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "zzsza/Datascience-Interview-Questions"
"zzsza/Boostcamp-AI-Tech-Product-Serving" -> "songys/AwesomeKorean_Data"
"rickiepark/handson-ml" -> "rickiepark/introduction_to_ml_with_python"
"rickiepark/handson-ml" -> "rickiepark/deep-learning-with-python-notebooks"
"rickiepark/handson-ml" -> "rickiepark/handson-ml2"
"rickiepark/handson-ml" -> "insurgent92/CS231N_17_KOR_SUB"
"rickiepark/handson-ml" -> "wikibook/tf2"
"rickiepark/handson-ml" -> "WegraLee/deep-learning-from-scratch"
"rickiepark/handson-ml" -> "rickiepark/GDL_code"
"rickiepark/handson-ml" -> "deeplearningzerotoall/TensorFlow"
"rickiepark/handson-ml" -> "rickiepark/python-machine-learning-book-2nd-edition"
"rickiepark/handson-ml" -> "deeplearningzerotoall/season2"
"rickiepark/handson-ml" -> "zzsza/Datascience-Interview-Questions"
"rickiepark/handson-ml" -> "zzsza/Kaggle-knowhow"
"rickiepark/handson-ml" -> "Insight-book/data-science-from-scratch"
"rickiepark/handson-ml" -> "keon/3-min-pytorch"
"rickiepark/handson-ml" -> "corazzon/KaggleStruggle"
"zzsza/kyle-school" -> "zzsza/Kaggle-knowhow"
"zzsza/kyle-school" -> "zzsza/Datascience-Interview-Questions"
"zzsza/kyle-school" -> "zzsza/Perfect-Guide-about-Machine-Learning-Study"
"zzsza/kyle-school" -> "zzsza/Datascience_School"
"zzsza/kyle-school" -> "MLOpsKR/Awesome-MLOps-Contents" ["e"=1]
"zzsza/kyle-school" -> "zzsza/Boostcamp-AI-Tech-Product-Serving"
"keras-team/keras-docs-ko" -> "fuzzythecat/awesome-spacer"
"keras-team/keras-docs-ko" -> "KerasKorea/KerasKorea.github.io"
"keras-team/keras-docs-ko" -> "KerasKorea/KerasObjectDetector"
"ropas/pytea" -> "tunib-ai/oslo"
"ropas/pytea" -> "tunib-ai/tunib-electra"
"ropas/pytea" -> "seopbo/nlp_tutorials"
"heartcored98/Standalone-DeepLearning" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"heartcored98/Standalone-DeepLearning" -> "jungwoo-ha/WeeklyArxivTalk"
"heartcored98/Standalone-DeepLearning" -> "teddylee777/machine-learning"
"heartcored98/Standalone-DeepLearning" -> "boostcamp-ai-tech-4/ai-tech-interview"
"heartcored98/Standalone-DeepLearning" -> "zzsza/Kaggle-knowhow"
"heartcored98/Standalone-DeepLearning" -> "SKTBrain/KoBERT"
"heartcored98/Standalone-DeepLearning" -> "KLUE-benchmark/KLUE"
"heartcored98/Standalone-DeepLearning" -> "songys/AwesomeKorean_Data"
"heartcored98/Standalone-DeepLearning" -> "Lilcob/-DL_PaperReadingMeeting"
"heartcored98/Standalone-DeepLearning" -> "rickiepark/handson-ml2"
"heartcored98/Standalone-DeepLearning" -> "keon/3-min-pytorch"
"heartcored98/Standalone-DeepLearning" -> "subinium/Misc-Cheatsheet"
"heartcored98/Standalone-DeepLearning" -> "NLP-kr/tensorflow-ml-nlp"
"heartcored98/Standalone-DeepLearning" -> "kakaobrain/pororo"
"heartcored98/Standalone-DeepLearning" -> "kakaobrain/nlp-paper-reading"
"kjsman/stable-diffusion-pytorch" -> "EleutherAI/polyglot"
"kjsman/stable-diffusion-pytorch" -> "hyunwoongko/pecab"
"kjsman/stable-diffusion-pytorch" -> "lassl/lassl"
"kjsman/stable-diffusion-pytorch" -> "EleutherAI/oslo"
"kjsman/stable-diffusion-pytorch" -> "tunib-ai/large-scale-lm-tutorials"
"kjsman/stable-diffusion-pytorch" -> "sjchoi86/2022-1-deep-learning-applications"
"kjsman/stable-diffusion-pytorch" -> "eubinecto/the-clean-transformer"
"hunkim/deep_architecture_genealogy" -> "sjchoi86/dl_tutorials_10weeks"
"hunkim/deep_architecture_genealogy" -> "hwalsuklee/tensorflow-generative-model-collections" ["e"=1]
"hunkim/deep_architecture_genealogy" -> "mila-udem/welcome_tutorials" ["e"=1]
"hunkim/deep_architecture_genealogy" -> "devsisters/multi-speaker-tacotron-tensorflow"
"hunkim/deep_architecture_genealogy" -> "google/tangent" ["e"=1]
"hunkim/deep_architecture_genealogy" -> "kimhc6028/relational-networks" ["e"=1]
"hunkim/deep_architecture_genealogy" -> "RedditSota/state-of-the-art-result-for-machine-learning-problems" ["e"=1]
"hunkim/deep_architecture_genealogy" -> "hunkim/KaggleZeroToAll"
"hunkim/deep_architecture_genealogy" -> "yunjey/StarGAN" ["e"=1]
"hunkim/deep_architecture_genealogy" -> "TensorFlowKR/awesome_tensorflow_implementations"
"hunkim/deep_architecture_genealogy" -> "andrewgordonwilson/bayesgan" ["e"=1]
"hunkim/deep_architecture_genealogy" -> "Kyubyong/nlp_tasks" ["e"=1]
"hunkim/deep_architecture_genealogy" -> "golbin/TensorFlow-Tutorials"
"hunkim/deep_architecture_genealogy" -> "TensorFlowKR/MLJejuCamp"
"hunkim/deep_architecture_genealogy" -> "facebookresearch/clevr-iep" ["e"=1]
"deep-diver/CIFAR10-img-classification-tensorflow" -> "deep-diver/DeepModels"
"utilForever/rl-paper-study" -> "reinforcement-learning-kr/how_to_study_rl"
"utilForever/rl-paper-study" -> "reinforcement-learning-kr/2021_RLKR_Drone_Delivery_Challenge_with_Unity"
"utilForever/rl-paper-study" -> "utilForever/2021-KAIST-Include-AlphaZero"
"utilForever/rl-paper-study" -> "utilForever/2019-OSS-Summer-RL"
"utilForever/rl-paper-study" -> "kakaoenterprise/JORLDY"
"utilForever/rl-paper-study" -> "utilForever/RustyFlow"
"utilForever/rl-paper-study" -> "seungeunrho/RLfrombasics"
"utilForever/rl-paper-study" -> "Junyoungpark/ReinforcementLearningAtoZ"
"utilForever/rl-paper-study" -> "utilForever/2022-Korea-Rust-Backend" ["e"=1]
"awesome-davian/Paper-study" -> "psh01087/Paper-Study"
"awesome-davian/Paper-study" -> "awesome-davian/lecture-videos"
"awesome-davian/Paper-study" -> "awesome-davian/pixelsne"
"forkonlp/N2H4" -> "forkonlp/DNH4"
"forkonlp/N2H4" -> "haven-jeon/KoNLP"
"forkonlp/N2H4" -> "mrchypark/N2H4"
"forkonlp/N2H4" -> "datanada/Awesome-Korean-NLP"
"forkonlp/N2H4" -> "SungjoonPark/KoreanWordVectors"
"forkonlp/N2H4" -> "mrchypark/tqk"
"forkonlp/N2H4" -> "coolengineer/sejong-corpus"
"forkonlp/N2H4" -> "NamyounKim/NLP4kec"
"ndb796/Python-Data-Analysis-and-Image-Processing-Tutorial" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"ndb796/Python-Data-Analysis-and-Image-Processing-Tutorial" -> "ndb796/python-for-coding-test" ["e"=1]
"ndb796/Python-Data-Analysis-and-Image-Processing-Tutorial" -> "ndb796/Fast_Campus_Algorithm_Lecture_Notes" ["e"=1]
"ndb796/Python-Data-Analysis-and-Image-Processing-Tutorial" -> "teddylee777/machine-learning"
"ndb796/Python-Data-Analysis-and-Image-Processing-Tutorial" -> "Team-Neighborhood/I-want-to-study-Data-Science"
"ndb796/Python-Data-Analysis-and-Image-Processing-Tutorial" -> "rickiepark/handson-ml2"
"ndb796/Python-Data-Analysis-and-Image-Processing-Tutorial" -> "corazzon/OpenDataWrangling"
"ndb796/Python-Data-Analysis-and-Image-Processing-Tutorial" -> "yoonkt200/python-data-analysis"
"ndb796/Python-Data-Analysis-and-Image-Processing-Tutorial" -> "boostcamp-ai-tech-4/ai-tech-interview"
"gilbutITbook/007022" -> "rickiepark/python-machine-learning-book-2nd-edition"
"smilegate-ai/korean_unsmile_dataset" -> "smilegate-ai/HuLiC"
"smilegate-ai/korean_unsmile_dataset" -> "smilegate-ai/korean_smile_style_dataset"
"smilegate-ai/korean_unsmile_dataset" -> "jason9693/APEACH"
"smilegate-ai/korean_unsmile_dataset" -> "kocohub/korean-hate-speech"
"smilegate-ai/korean_unsmile_dataset" -> "monologg/KoELECTRA"
"smilegate-ai/korean_unsmile_dataset" -> "searle-j/KOTE"
"smilegate-ai/korean_unsmile_dataset" -> "tunib-ai/large-scale-lm-tutorials"
"smilegate-ai/korean_unsmile_dataset" -> "sooftware/Korean-PLM"
"smilegate-ai/korean_unsmile_dataset" -> "songys/AwesomeKorean_Data"
"smilegate-ai/korean_unsmile_dataset" -> "monologg/KoBigBird"
"smilegate-ai/korean_unsmile_dataset" -> "toriving/KoEDA"
"smilegate-ai/korean_unsmile_dataset" -> "ko-nlp/Korpora"
"smilegate-ai/korean_unsmile_dataset" -> "kakaobrain/kogpt"
"smilegate-ai/korean_unsmile_dataset" -> "tunib-ai/tunib-electra"
"smilegate-ai/korean_unsmile_dataset" -> "AIRC-KETI/ke-t5"
"tunib-ai/large-scale-lm-tutorials" -> "tunib-ai/oslo"
"tunib-ai/large-scale-lm-tutorials" -> "jiphyeonjeon/season2"
"tunib-ai/large-scale-lm-tutorials" -> "lassl/lassl"
"tunib-ai/large-scale-lm-tutorials" -> "yukyunglee/Transformer_Survey_Study"
"tunib-ai/large-scale-lm-tutorials" -> "hyunwoongko/pecab"
"tunib-ai/large-scale-lm-tutorials" -> "sooftware/Korean-PLM"
"tunib-ai/large-scale-lm-tutorials" -> "tunib-ai/parallelformers"
"tunib-ai/large-scale-lm-tutorials" -> "KLUE-benchmark/KLUE-baseline"
"tunib-ai/large-scale-lm-tutorials" -> "KLUE-benchmark/KLUE"
"tunib-ai/large-scale-lm-tutorials" -> "monologg/KoBigBird"
"tunib-ai/large-scale-lm-tutorials" -> "EleutherAI/oslo"
"tunib-ai/large-scale-lm-tutorials" -> "cosmoquester/2021-dialogue-summary-competition"
"tunib-ai/large-scale-lm-tutorials" -> "kakaobrain/kortok"
"tunib-ai/large-scale-lm-tutorials" -> "Huffon/klue-transformers-tutorial"
"tunib-ai/large-scale-lm-tutorials" -> "EleutherAI/multilingual-transfer"
"tunib-ai/oslo" -> "tunib-ai/large-scale-lm-tutorials"
"tunib-ai/oslo" -> "lassl/lassl"
"tunib-ai/oslo" -> "jiphyeonjeon/season2"
"tunib-ai/oslo" -> "tunib-ai/parallelformers"
"tunib-ai/oslo" -> "hyunwoongko/pecab"
"tunib-ai/oslo" -> "tunib-ai/tunib-electra"
"tunib-ai/oslo" -> "tunib-ai/DKTC"
"tunib-ai/oslo" -> "seopbo/nlp_tutorials"
"tunib-ai/oslo" -> "EleutherAI/multilingual-transfer"
"tunib-ai/oslo" -> "monologg/KoBigBird"
"tunib-ai/oslo" -> "KLUE-benchmark/KLUE-baseline"
"tunib-ai/oslo" -> "sooftware/Korean-PLM"
"tunib-ai/oslo" -> "tunib-ai/KMWP"
"tunib-ai/oslo" -> "sooftware/k-startups"
"tunib-ai/oslo" -> "EleutherAI/oslo"
"tunib-ai/tunib-electra" -> "tunib-ai/transformers"
"tunib-ai/tunib-electra" -> "tunib-ai/DKTC"
"tunib-ai/tunib-electra" -> "tunib-ai/KMWP"
"tunib-ai/tunib-electra" -> "hyunwoongko/pecab"
"google-aai/sc17" -> "nmhkahn/deep_learning_tutorial"
"lovit/KR-WordRank" -> "lovit/soynlp"
"lovit/KR-WordRank" -> "songys/AwesomeKorean_Data"
"lovit/KR-WordRank" -> "NLP-kr/tensorflow-ml-nlp-tf2"
"lovit/KR-WordRank" -> "lovit/soyspacing"
"lovit/KR-WordRank" -> "lovit/textmining-tutorial"
"lovit/KR-WordRank" -> "ko-nlp/Korpora"
"lovit/KR-WordRank" -> "lovit/textrank"
"lovit/KR-WordRank" -> "kocohub/korean-hate-speech"
"lovit/KR-WordRank" -> "Beomi/KcBERT"
"lovit/KR-WordRank" -> "datanada/Awesome-Korean-NLP"
"lovit/KR-WordRank" -> "eagle705/pytorch-bert-crf-ner"
"lovit/KR-WordRank" -> "SKT-AI/KoGPT2"
"lovit/KR-WordRank" -> "lovit/soykeyword"
"lovit/KR-WordRank" -> "seujung/KoBART-summarization"
"lovit/KR-WordRank" -> "SKT-AI/KoBART"
"seujung/KoBART-summarization" -> "SKT-AI/KoBART"
"seujung/KoBART-summarization" -> "uoneway/Text-Summarization-Repo"
"seujung/KoBART-summarization" -> "uoneway/KoBertSum"
"seujung/KoBART-summarization" -> "hyunwoongko/kobart-transformers"
"seujung/KoBART-summarization" -> "lassl/lassl"
"seujung/KoBART-summarization" -> "monologg/KoELECTRA"
"songys/AwesomeKorean_Data" -> "ko-nlp/Korpora"
"songys/AwesomeKorean_Data" -> "monologg/KoELECTRA"
"songys/AwesomeKorean_Data" -> "SKT-AI/KoGPT2"
"songys/AwesomeKorean_Data" -> "Beomi/KcBERT"
"songys/AwesomeKorean_Data" -> "kocohub/korean-hate-speech"
"songys/AwesomeKorean_Data" -> "SKTBrain/KoBERT"
"songys/AwesomeKorean_Data" -> "KLUE-benchmark/KLUE"
"songys/AwesomeKorean_Data" -> "SKT-AI/KoBART"
"songys/AwesomeKorean_Data" -> "eagle705/pytorch-bert-crf-ner"
"songys/AwesomeKorean_Data" -> "kakaobrain/KorNLUDatasets"
"songys/AwesomeKorean_Data" -> "uoneway/Text-Summarization-Repo"
"songys/AwesomeKorean_Data" -> "songys/Chatbot_data"
"songys/AwesomeKorean_Data" -> "lovit/soynlp"
"songys/AwesomeKorean_Data" -> "e9t/nsmc"
"songys/AwesomeKorean_Data" -> "kakaobrain/pororo"
"YBIGTA/DeepNLP-Study" -> "YBIGTA/Deep_learning"
"YBIGTA/DeepNLP-Study" -> "DSKSD/Pytorch_Fast_Campus_2018"
"YBIGTA/DeepNLP-Study" -> "papower1/Awesome-Korean-NLP-Papers"
"YBIGTA/DeepNLP-Study" -> "modulabs/NLP-bootcamp"
"BoostcampAITech/lecture-note-python-basics-for-ai" -> "sjchoi86/upstage-basic-deeplearning"
"Lilcob/-DL_PaperReadingMeeting" -> "sjchoi86/2022-1-deep-learning-applications"
"Lilcob/-DL_PaperReadingMeeting" -> "jiphyeonjeon/nlp-review"
"Lilcob/-DL_PaperReadingMeeting" -> "yukyunglee/Transformer_Survey_Study"
"WegraLee/deep-learning-from-scratch-3" -> "WegraLee/deep-learning-from-scratch-2"
"jiphyeonjeon/nlp-review" -> "modulabs/NLP-bootcamp"
"jiphyeonjeon/nlp-review" -> "yukyunglee/Transformer_Survey_Study"
"jiphyeonjeon/nlp-review" -> "jiphyeonjeon/season2"
"jiphyeonjeon/nlp-review" -> "hyunwoongko/kobart-transformers"
"jiphyeonjeon/nlp-review" -> "kakaobrain/nlp-paper-reading"
"jiphyeonjeon/nlp-review" -> "lovit/huggingface_konlpy"
"pilsung-kang/Text-Analytics" -> "uoneway/Text-Summarization-Repo"
"ratsgo/embedding" -> "SKTBrain/KoBERT"
"ratsgo/embedding" -> "lovit/soynlp"
"ratsgo/embedding" -> "songys/AwesomeKorean_Data"
"ratsgo/embedding" -> "eagle705/pytorch-bert-crf-ner"
"ratsgo/embedding" -> "ko-nlp/Korpora"
"ratsgo/embedding" -> "Beomi/KcBERT"
"ratsgo/embedding" -> "e9t/nsmc"
"ratsgo/embedding" -> "KLUE-benchmark/KLUE"
"ratsgo/embedding" -> "lovit/textmining-tutorial"
"ratsgo/embedding" -> "SKT-AI/KoGPT2"
"ratsgo/embedding" -> "SKT-AI/KoBART"
"ratsgo/embedding" -> "monologg/KoELECTRA"
"ratsgo/embedding" -> "datanada/Awesome-Korean-NLP"
"ratsgo/embedding" -> "kocohub/korean-hate-speech"
"ratsgo/embedding" -> "NLP-kr/tensorflow-ml-nlp-tf2"
"searle-j/KOTE" -> "smilegate-ai/korean_smile_style_dataset"
"searle-j/KOTE" -> "sooftware/Korean-PLM"
"sjchoi86/2022-1-deep-learning-applications" -> "Lilcob/-DL_PaperReadingMeeting"
"sjchoi86/2022-1-deep-learning-applications" -> "yukyunglee/Transformer_Survey_Study"
"sjchoi86/2022-1-deep-learning-applications" -> "sangyun884/Diffusion-Models-Seminar" ["e"=1]
"sjchoi86/2022-1-deep-learning-applications" -> "yukyunglee/transformers-resources"
"sjchoi86/2022-1-deep-learning-applications" -> "jungwoo-ha/WeeklyArxivTalk"
"sjchoi86/2022-1-deep-learning-applications" -> "searle-j/KOTE"
"sjchoi86/2022-1-deep-learning-applications" -> "kakaobrain/nlp-paper-reading"
"smilegate-ai/HuLiC" -> "smilegate-ai/korean_unsmile_dataset"
"yukyunglee/Transformer_Survey_Study" -> "jiphyeonjeon/season2"
"yukyunglee/Transformer_Survey_Study" -> "Huffon/klue-transformers-tutorial"
"yukyunglee/Transformer_Survey_Study" -> "KLUE-benchmark/KLUE-baseline"
"yukyunglee/Transformer_Survey_Study" -> "lassl/lassl"
"yukyunglee/Transformer_Survey_Study" -> "yukyunglee/transformers-resources"
"yukyunglee/Transformer_Survey_Study" -> "sooftware/Korean-PLM"
"yukyunglee/Transformer_Survey_Study" -> "zzsza/Boostcamp-AI-Tech-Product-Serving"
"yukyunglee/Transformer_Survey_Study" -> "tunib-ai/large-scale-lm-tutorials"
"yukyunglee/Transformer_Survey_Study" -> "monologg/KoBigBird"
"yukyunglee/Transformer_Survey_Study" -> "tunib-ai/tunib-electra"
"yukyunglee/Transformer_Survey_Study" -> "yukyunglee/Awesome-Dialogue-State-Tracking"
"yukyunglee/Transformer_Survey_Study" -> "jiphyeonjeon/nlp-review"
"yukyunglee/Transformer_Survey_Study" -> "hyunwoongko/pecab"
"yukyunglee/Transformer_Survey_Study" -> "kakaobrain/nlp-paper-reading"
"yukyunglee/Transformer_Survey_Study" -> "uoneway/Text-Summarization-Repo"
"monologg/KoELECTRA" -> "KLUE-benchmark/KLUE"
"monologg/KoELECTRA" -> "SKT-AI/KoBART"
"monologg/KoELECTRA" -> "Beomi/KcBERT"
"monologg/KoELECTRA" -> "ko-nlp/Korpora"
"monologg/KoELECTRA" -> "songys/AwesomeKorean_Data"
"monologg/KoELECTRA" -> "SKT-AI/KoGPT2"
"monologg/KoELECTRA" -> "SKTBrain/KoBERT"
"monologg/KoELECTRA" -> "eagle705/pytorch-bert-crf-ner"
"monologg/KoELECTRA" -> "kakaobrain/KorNLUDatasets"
"monologg/KoELECTRA" -> "kakaobrain/pororo"
"monologg/KoELECTRA" -> "monologg/DistilKoBERT"
"monologg/KoELECTRA" -> "kocohub/korean-hate-speech"
"monologg/KoELECTRA" -> "kakaobrain/kogpt"
"monologg/KoELECTRA" -> "monologg/KoBigBird"
"monologg/KoELECTRA" -> "kakaobrain/nlp-paper-reading"
"SKT-AI/KoBART" -> "seujung/KoBART-summarization"
"SKT-AI/KoBART" -> "SKT-AI/KoGPT2"
"SKT-AI/KoBART" -> "monologg/KoELECTRA"
"SKT-AI/KoBART" -> "uoneway/Text-Summarization-Repo"
"SKT-AI/KoBART" -> "KLUE-benchmark/KLUE"
"SKT-AI/KoBART" -> "songys/AwesomeKorean_Data"
"SKT-AI/KoBART" -> "SKTBrain/KoBERT"
"SKT-AI/KoBART" -> "ko-nlp/Korpora"
"SKT-AI/KoBART" -> "eagle705/pytorch-bert-crf-ner"
"SKT-AI/KoBART" -> "kakaobrain/KorNLUDatasets"
"SKT-AI/KoBART" -> "kakaobrain/nlp-paper-reading"
"SKT-AI/KoBART" -> "kocohub/korean-hate-speech"
"SKT-AI/KoBART" -> "hyunwoongko/kobart-transformers"
"SKT-AI/KoBART" -> "Beomi/KcELECTRA"
"SKT-AI/KoBART" -> "kakaobrain/pororo"
"keon/3-min-pytorch" -> "GunhoChoi/PyTorch-FastCampus"
"keon/3-min-pytorch" -> "zzsza/Kaggle-knowhow"
"keon/3-min-pytorch" -> "NLP-kr/tensorflow-ml-nlp"
"keon/3-min-pytorch" -> "coolengineer/sejong-corpus"
"keon/3-min-pytorch" -> "insurgent92/CS231N_17_KOR_SUB"
"keon/3-min-pytorch" -> "songys/CS224N_17_KOR_SUB"
"WegraLee/deep-learning-from-scratch-2" -> "WegraLee/deep-learning-from-scratch-3"
"WegraLee/deep-learning-from-scratch-2" -> "WegraLee/deep-learning-from-scratch"
"WegraLee/deep-learning-from-scratch-2" -> "ratsgo/embedding"
"WegraLee/deep-learning-from-scratch-2" -> "rickiepark/handson-ml2"
"WegraLee/deep-learning-from-scratch-2" -> "zzsza/Kaggle-knowhow"
"WegraLee/deep-learning-from-scratch-2" -> "ukairia777/tensorflow-nlp-tutorial"
"idstcv/GPU-Efficient-Networks" -> "idstcv/ZenNAS" ["e"=1]
"paul-hyun/transformer-evolution" -> "seopbo/nlp_tutorials"
"PinkWink/DataScience" -> "southkorea/southkorea-maps"
"PinkWink/DataScience" -> "PinkWink/playing_data"
"PinkWink/DataScience" -> "zzsza/Kaggle-knowhow"
"PinkWink/DataScience" -> "corazzon/petitionWrangling"
"PinkWink/DataScience" -> "corazzon/OpenDataWrangling"
"PinkWink/DataScience" -> "corazzon/KaggleStruggle"
"hyunwoongko/openchat" -> "hyunwoongko/kochat"
"hyunwoongko/openchat" -> "tunib-ai/large-scale-lm-tutorials"
"hyunwoongko/openchat" -> "haven-jeon/KoGPT2-chatbot"
"hyunwoongko/openchat" -> "tunib-ai/parallelformers"
"hyunwoongko/openchat" -> "kakaobrain/nlp-paper-reading"
"hyunwoongko/openchat" -> "seujung/KoBART-summarization"
"hyunwoongko/openchat" -> "jiphyeonjeon/season2"
"hyunwoongko/openchat" -> "kakaobrain/pororo"
"hyunwoongko/openchat" -> "kocohub/korean-hate-speech"
"hyunwoongko/openchat" -> "tunib-ai/oslo"
"hyunwoongko/openchat" -> "yukyunglee/Transformer_Survey_Study"
"hyunwoongko/openchat" -> "deepseasw/nlp_model_list"
"hunkim/effective_python_notebook" -> "hunkim/ml"
"hunkim/effective_python_notebook" -> "hunkim/DeepLearningStars"
"kaniblu/hangul-utils" -> "bluedisk/hangul-toolkit"
"kaniblu/hangul-utils" -> "jungyeul/korean-parallel-corpora"
"kaniblu/hangul-utils" -> "lassl/lassl"
"kaniblu/hangul-utils" -> "ko-nlp/Open-korean-corpora"
"kaniblu/hangul-utils" -> "kakaobrain/KorNLUDatasets"
"kaniblu/hangul-utils" -> "JDongian/python-jamo"
"kaniblu/hangul-utils" -> "kocohub/korean-hate-speech"
"kaniblu/hangul-utils" -> "kakaobrain/kortok"
"kaniblu/hangul-utils" -> "ZIZUN/korean-malicious-comments-dataset"
"kaniblu/hangul-utils" -> "ko-nlp/Korpora"
"kaniblu/hangul-utils" -> "koalanlp/koalanlp"
"rickiepark/introduction_to_ml_with_python" -> "rickiepark/handson-ml"
"rickiepark/introduction_to_ml_with_python" -> "rickiepark/first-steps-with-tensorflow"
"rickiepark/introduction_to_ml_with_python" -> "rickiepark/deep-learning-with-python-notebooks"
"rickiepark/introduction_to_ml_with_python" -> "rickiepark/machine-learning-with-python-cookbook"
"rickiepark/introduction_to_ml_with_python" -> "rickiepark/do-it-dl"
"rickiepark/introduction_to_ml_with_python" -> "zzsza/Kaggle-knowhow"
"rickiepark/introduction_to_ml_with_python" -> "corazzon/KaggleStruggle"
"scarletcho/KoG2P" -> "Kyubyong/g2pK"
"scarletcho/KoG2P" -> "scarletcho/KoLM"
"sooftware/kospeech" -> "openspeech-team/openspeech" ["e"=1]
"sooftware/kospeech" -> "JoungheeKim/K-wav2vec"
"sooftware/kospeech" -> "sooftware/Speech-Recognition-Tutorial"
"sooftware/kospeech" -> "sooftware/k-startups"
"sooftware/kospeech" -> "hchung12/espnet-asr"
"sooftware/kospeech" -> "alsrb0607/KoreanSTT"
"sooftware/kospeech" -> "sooftware/ksponspeech"
"sooftware/kospeech" -> "seujung/KoBART-summarization"
"corazzon/KaggleStruggle" -> "corazzon/OpenDataWrangling"
"corazzon/KaggleStruggle" -> "corazzon/petitionWrangling"
"corazzon/KaggleStruggle" -> "zzsza/Kaggle-knowhow"
"corazzon/KaggleStruggle" -> "amueller/odscon-2015"
"corazzon/KaggleStruggle" -> "rickiepark/introduction_to_ml_with_python"
"corazzon/KaggleStruggle" -> "e9t/nsmc"
"corazzon/KaggleStruggle" -> "zzsza/Datascience-Interview-Questions"
"corazzon/KaggleStruggle" -> "corazzon/open-data-analysis-basic"
"mktal/kddcup-starting-kit" -> "illidanlab/Simulator"
"uoneway/Text-Summarization-Repo" -> "seujung/KoBART-summarization"
"uoneway/Text-Summarization-Repo" -> "SKT-AI/KoBART"
"uoneway/Text-Summarization-Repo" -> "uoneway/KoBertSum"
"uoneway/Text-Summarization-Repo" -> "songys/AwesomeKorean_Data"
"uoneway/Text-Summarization-Repo" -> "cosmoquester/2021-dialogue-summary-competition"
"uoneway/Text-Summarization-Repo" -> "kakaobrain/nlp-paper-reading"
"uoneway/Text-Summarization-Repo" -> "monologg/KoELECTRA"
"uoneway/Text-Summarization-Repo" -> "yukyunglee/Transformer_Survey_Study"
"uoneway/Text-Summarization-Repo" -> "jiphyeonjeon/season2"
"uoneway/Text-Summarization-Repo" -> "KLUE-benchmark/KLUE"
"uoneway/Text-Summarization-Repo" -> "KB-Bank-AI/KB-ALBERT-KO"
"uoneway/Text-Summarization-Repo" -> "Huffon/nlp-startups"
"uoneway/Text-Summarization-Repo" -> "NLP-kr/tensorflow-ml-nlp-tf2"
"uoneway/Text-Summarization-Repo" -> "sooftware/Korean-PLM"
"uoneway/Text-Summarization-Repo" -> "Huffon/klue-transformers-tutorial"
"corazzon/OpenDataWrangling" -> "corazzon/petitionWrangling"
"corazzon/OpenDataWrangling" -> "corazzon/KaggleStruggle"
"corazzon/OpenDataWrangling" -> "corazzon/open-data-analysis-basic"
"tbai2019/HanBert-54k-N" -> "monologg/HanBert-Transformers"
"tbai2019/HanBert-54k-N" -> "monologg/DistilKoBERT"
"tbai2019/HanBert-54k-N" -> "naver/claf"
"tbai2019/HanBert-54k-N" -> "domyounglee/korbert-mecab-multigpu"
"j-marple-dev/model_compression" -> "aisolab/nlp_implementation"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "insurgent92/CS231N_17_KOR_SUB"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "deep-diver/fastai-course-korean"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "nmhkahn/deep_learning_tutorial"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "GunhoChoi/PyTorch-FastCampus"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "tensorflowkorea/tensorflow-kr"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "KerasKorea/KEKOxTutorial"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "deep-diver/DeepModels"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "jskDr/keraspp"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "zzsza/Kaggle-knowhow"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "YoongiKim/Walk-Assistant"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "aisolab/nlp_implementation"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "Curt-Park/reinforcement_learning_an_introduction"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "datanada/Awesome-Korean-NLP"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "kakaobrain/nlp-paper-reading"
"deep-diver/Machine-Learning-Yearning-Korean-Translation" -> "reinforcement-learning-kr/how_to_study_rl"
"reinforcement-learning-kr/how_to_study_rl" -> "utilForever/rl-paper-study"
"reinforcement-learning-kr/how_to_study_rl" -> "rlcode/reinforcement-learning-kr"
"reinforcement-learning-kr/how_to_study_rl" -> "seungeunrho/RLfrombasics"
"reinforcement-learning-kr/how_to_study_rl" -> "reinforcement-learning-kr/Unity_ML_Agents"
"reinforcement-learning-kr/how_to_study_rl" -> "zzsza/Kaggle-knowhow"
"reinforcement-learning-kr/how_to_study_rl" -> "dongminlee94/Samsung-DRL-Code"
"reinforcement-learning-kr/how_to_study_rl" -> "Junyoungpark/ReinforcementLearningAtoZ"
"reinforcement-learning-kr/how_to_study_rl" -> "kakaoenterprise/JORLDY"
"reinforcement-learning-kr/how_to_study_rl" -> "zzsza/Deep_Learning_starting_with_the_latest_papers"
"reinforcement-learning-kr/how_to_study_rl" -> "reinforcement-learning-kr/rl_bootcamp"
"reinforcement-learning-kr/how_to_study_rl" -> "taeoh-kim/pr12" ["e"=1]
"reinforcement-learning-kr/how_to_study_rl" -> "hunkim/ReinforcementZeroToAll"
"reinforcement-learning-kr/how_to_study_rl" -> "kakao/buffalo" ["e"=1]
"tensorflowkorea/tensorflow-kr" -> "rickiepark/first-steps-with-tensorflow"
"tensorflowkorea/tensorflow-kr" -> "FuZer/Study_TensorFlow"
"tensorflowkorea/tensorflow-kr" -> "deep-diver/Machine-Learning-Yearning-Korean-Translation"
"tensorflowkorea/tensorflow-kr" -> "golbin/TensorFlow-Tutorials"
"tensorflowkorea/tensorflow-kr" -> "seoul-opengov/opengov"
"tensorflowkorea/tensorflow-kr" -> "zzsza/Kaggle-knowhow"
"tensorflowkorea/tensorflow-kr" -> "hunkim/KaggleZeroToAll"
"tensorflowkorea/tensorflow-kr" -> "aikorea/cs231n"
"eagle705/pytorch-bert-crf-ner" -> "monologg/KoELECTRA"
"eagle705/pytorch-bert-crf-ner" -> "SKTBrain/KoBERT"
"eagle705/pytorch-bert-crf-ner" -> "songys/AwesomeKorean_Data"
"eagle705/pytorch-bert-crf-ner" -> "SKT-AI/KoBART"
"eagle705/pytorch-bert-crf-ner" -> "SKT-AI/KoGPT2"
"eagle705/pytorch-bert-crf-ner" -> "Beomi/KcBERT"
"eagle705/pytorch-bert-crf-ner" -> "ratsgo/embedding"
"eagle705/pytorch-bert-crf-ner" -> "KLUE-benchmark/KLUE"
"eagle705/pytorch-bert-crf-ner" -> "monologg/DistilKoBERT"
"eagle705/pytorch-bert-crf-ner" -> "ko-nlp/Korpora"
"eagle705/pytorch-bert-crf-ner" -> "lovit/soynlp"
"eagle705/pytorch-bert-crf-ner" -> "kakaobrain/nlp-paper-reading"
"eagle705/pytorch-bert-crf-ner" -> "monologg/KoBERT-Transformers"
"eagle705/pytorch-bert-crf-ner" -> "kmounlp/NER"
"eagle705/pytorch-bert-crf-ner" -> "KB-Bank-AI/KB-ALBERT-KO"
"graykode/commit-autosuggestions" -> "kocohub/korean-hate-speech"
"graykode/commit-autosuggestions" -> "kakaobrain/KorNLUDatasets"
"graykode/commit-autosuggestions" -> "monologg/KoELECTRA"
"graykode/commit-autosuggestions" -> "jason9693/Soongsil-BERT"
"graykode/commit-autosuggestions" -> "graykode/toeicbert"
"graykode/commit-autosuggestions" -> "graykode/matorage"
"graykode/commit-autosuggestions" -> "kakaobrain/nlp-paper-reading"
"graykode/commit-autosuggestions" -> "stevejhkang/kubernetes-tutorial"
"graykode/commit-autosuggestions" -> "Beomi/KcBERT"
"graykode/commit-autosuggestions" -> "kiyoungkim1/LM-kor"
"graykode/commit-autosuggestions" -> "Huffon/klue-transformers-tutorial"
"graykode/commit-autosuggestions" -> "Huffon/nlp-startups"
"graykode/commit-autosuggestions" -> "MrBananaHuman/KorNlpTutorial"
"graykode/commit-autosuggestions" -> "KLUE-benchmark/KLUE"
"graykode/commit-autosuggestions" -> "ko-nlp/Korpora"
"subinium/Misc-Cheatsheet" -> "boostcamp-ai-tech-4/ai-tech-interview"
"subinium/Misc-Cheatsheet" -> "zzsza/Boostcamp-AI-Tech-Product-Serving"
"subinium/Misc-Cheatsheet" -> "yukyunglee/Transformer_Survey_Study"
"subinium/Misc-Cheatsheet" -> "jungwoo-ha/WeeklyArxivTalk"
"subinium/Misc-Cheatsheet" -> "monologg/KoBigBird"
"subinium/Misc-Cheatsheet" -> "uoneway/Text-Summarization-Repo"
"subinium/Misc-Cheatsheet" -> "tunib-ai/large-scale-lm-tutorials"
"subinium/Misc-Cheatsheet" -> "SKT-AI/KoBART"
"subinium/Misc-Cheatsheet" -> "teddylee777/machine-learning"
"subinium/Misc-Cheatsheet" -> "rickiepark/nlp-with-pytorch"
"subinium/Misc-Cheatsheet" -> "sooftware/Korean-PLM"
"subinium/Misc-Cheatsheet" -> "subinium/Problem-Solving"
"subinium/Misc-Cheatsheet" -> "Huffon/klue-transformers-tutorial"
"subinium/Misc-Cheatsheet" -> "ndb796/Deep-Learning-Paper-Review-and-Practice"
"subinium/Misc-Cheatsheet" -> "rkm0959/Number_Theory_in_CP_PS" ["e"=1]
"vuski/admdongkor" -> "southkorea/southkorea-maps"
"EleutherAI/polyglot" -> "airobotlab/KoChatGPT"
"EleutherAI/polyglot" -> "LG-NLP/KorWikiTableQuestions"
"EleutherAI/polyglot" -> "sooftware/Korean-PLM"
"EleutherAI/polyglot" -> "tunib-ai/tunib-electra"
"EleutherAI/polyglot" -> "tunib-ai/large-scale-lm-tutorials"
"EleutherAI/polyglot" -> "EleutherAI/oslo"
"EleutherAI/polyglot" -> "monologg/KoBigBird"
"EleutherAI/polyglot" -> "smilegate-ai/korean_unsmile_dataset"
"EleutherAI/polyglot" -> "KLUE-benchmark/KLUE"
"EleutherAI/polyglot" -> "AIRC-KETI/ke-t5"
"EleutherAI/polyglot" -> "hyunwoongko/pecab"
"EleutherAI/polyglot" -> "lassl/lassl"
"EleutherAI/polyglot" -> "songys/AwesomeKorean_Data"
"EleutherAI/polyglot" -> "deepseasw/nlp_model_list"
"EleutherAI/polyglot" -> "Beomi/KoAlpaca"
"bab2min/kiwipiepy" -> "bab2min/Kiwi"
"bab2min/kiwipiepy" -> "lassl/lassl"
"naver-ai/NeglectedFreeLunch" -> "naver-ai/imagenet-annotation-tool"
"naver-ai/c3-gan" -> "naver-ai/PfLayer"
"naver-ai/calm" -> "naver-ai/imagenet-annotation-tool"
"naver-ai/calm" -> "naver-ai/w-ood" ["e"=1]
"naver-ai/carecall-corpus" -> "naver-ai/carecall-memory"
"naver-ai/coco-annotation-tool" -> "naver-ai/imagenet-annotation-tool"
"naver-ai/eccv-caption" -> "naver-ai/imagenet-annotation-tool"
"naver-ai/eccv-caption" -> "naver-ai/pcme"
"naver-ai/pcme" -> "naver-ai/eccv-caption"
"naver-ai/pcme" -> "naver-ai/calm"
"naver-ai/pcme" -> "naver-ai/imagenet-annotation-tool"
"utilForever/cpp-developer-roadmap" -> "utilForever/RustyFlow"
"kakaoenterprise/JORLDY" -> "utilForever/rl-paper-study"
"kakaoenterprise/JORLDY" -> "reinforcement-learning-kr/2021_RLKR_Drone_Delivery_Challenge_with_Unity"
"kakaoenterprise/JORLDY" -> "kakaobrain/brain_agent"
"kakaoenterprise/JORLDY" -> "reinforcement-learning-kr/how_to_study_rl"
"kakaoenterprise/JORLDY" -> "sail-sg/envpool" ["e"=1]
"kakaoenterprise/JORLDY" -> "reinforcement-learning-kr/Unity_ML_Agents_2.0"
"kakaoenterprise/JORLDY" -> "medipixel/rl_algorithms" ["e"=1]
"kakaoenterprise/JORLDY" -> "chagmgang/distributed_reinforcement_learning" ["e"=1]
"kakaoenterprise/JORLDY" -> "reinforcement-learning-kr/rl_bootcamp"
"kakaoenterprise/JORLDY" -> "dongminlee94/Samsung-DRL-Code"
"kakaoenterprise/JORLDY" -> "twni2016/pomdp-baselines" ["e"=1]
"2runo/Curse-detection-data" -> "kocohub/korean-hate-speech"
"2runo/Curse-detection-data" -> "ZIZUN/korean-malicious-comments-dataset"
"Kyubyong/g2pK" -> "scarletcho/KoG2P"
"Kyubyong/g2pK" -> "HGU-DLLAB/Korean-FastSpeech2-Pytorch" ["e"=1]
"Kyubyong/g2pK" -> "JoungheeKim/K-wav2vec"
"Kyubyong/g2pK" -> "likejazz/korean-sentence-splitter"
"Kyubyong/g2pK" -> "Kyubyong/paradigm"
"haven-jeon/KoGPT2-chatbot" -> "gyunggyung/KoGPT2-FineTuning"
"haven-jeon/KoGPT2-chatbot" -> "SKT-AI/KoGPT2"
"haven-jeon/KoGPT2-chatbot" -> "nawnoes/WellnessConversation-LanguageModel"
"haven-jeon/KoGPT2-chatbot" -> "songys/Chatbot_data"
"haven-jeon/KoGPT2-chatbot" -> "monologg/KoBERT-Transformers"
"haven-jeon/KoGPT2-chatbot" -> "deepseasw/nlp_model_list"
"haven-jeon/KoGPT2-chatbot" -> "gusdnd852/kochat"
"haven-jeon/KoGPT2-chatbot" -> "SKT-AI/KoBART"
"haven-jeon/PyKoSpacing" -> "ssut/py-hanspell"
"haven-jeon/PyKoSpacing" -> "hyunwoongko/kss"
"haven-jeon/PyKoSpacing" -> "songys/AwesomeKorean_Data"
"haven-jeon/PyKoSpacing" -> "lovit/soyspacing"
"haven-jeon/PyKoSpacing" -> "lovit/soynlp"
"haven-jeon/PyKoSpacing" -> "kocohub/korean-hate-speech"
"haven-jeon/PyKoSpacing" -> "ko-nlp/Korpora"
"haven-jeon/PyKoSpacing" -> "SKT-AI/KoBART"
"haven-jeon/PyKoSpacing" -> "Beomi/KcBERT"
"haven-jeon/PyKoSpacing" -> "monologg/KoELECTRA"
"haven-jeon/PyKoSpacing" -> "likejazz/korean-sentence-splitter"
"haven-jeon/PyKoSpacing" -> "eagle705/pytorch-bert-crf-ner"
"haven-jeon/PyKoSpacing" -> "SKTBrain/KoBERT"
"haven-jeon/PyKoSpacing" -> "haven-jeon/KoSpacing"
"haven-jeon/PyKoSpacing" -> "KLUE-benchmark/KLUE"
"likejazz/korean-sentence-splitter" -> "coolengineer/sejong-corpus"
"likejazz/korean-sentence-splitter" -> "koalanlp/koalanlp"
"likejazz/korean-sentence-splitter" -> "monologg/KoELECTRA"
"likejazz/korean-sentence-splitter" -> "jeongukjae/korean-spacing-model"
"likejazz/korean-sentence-splitter" -> "hyunwoongko/kss"
"likejazz/korean-sentence-splitter" -> "papower1/Awesome-Korean-NLP-Papers"
"likejazz/korean-sentence-splitter" -> "monologg/DistilKoBERT"
"likejazz/korean-sentence-splitter" -> "KB-Bank-AI/KB-ALBERT-KO"
"likejazz/korean-sentence-splitter" -> "emorynlp/ud-korean"
"likejazz/korean-sentence-splitter" -> "ko-nlp/Korpora"
"likejazz/korean-sentence-splitter" -> "kakaobrain/KorNLUDatasets"
"likejazz/korean-sentence-splitter" -> "jungyeul/korean-parallel-corpora"
"warnikchow/dlk2nlp" -> "warnikchow/3i4k"
"SKT-AI/KoGPT2" -> "SKT-AI/KoBART"
"SKT-AI/KoGPT2" -> "SKTBrain/KoBERT"
"SKT-AI/KoGPT2" -> "kakaobrain/kogpt"
"SKT-AI/KoGPT2" -> "songys/AwesomeKorean_Data"
"SKT-AI/KoGPT2" -> "ko-nlp/Korpora"
"SKT-AI/KoGPT2" -> "monologg/KoELECTRA"
"SKT-AI/KoGPT2" -> "haven-jeon/KoGPT2-chatbot"
"SKT-AI/KoGPT2" -> "gyunggyung/KoGPT2-FineTuning"
"SKT-AI/KoGPT2" -> "KLUE-benchmark/KLUE"
"SKT-AI/KoGPT2" -> "Beomi/KcBERT"
"SKT-AI/KoGPT2" -> "kakaobrain/pororo"
"SKT-AI/KoGPT2" -> "eagle705/pytorch-bert-crf-ner"
"SKT-AI/KoGPT2" -> "kakaobrain/nlp-paper-reading"
"SKT-AI/KoGPT2" -> "kakaobrain/KorNLUDatasets"
"SKT-AI/KoGPT2" -> "lovit/soynlp"
"hyunwoongko/kss" -> "hyunwoongko/pecab"
"hyunwoongko/kss" -> "monologg/KoBigBird"
"hyunwoongko/kss" -> "ko-nlp/Korpora"
"hyunwoongko/kss" -> "haven-jeon/PyKoSpacing"
"hyunwoongko/kss" -> "kakaobrain/KorNLUDatasets"
"hyunwoongko/kss" -> "likejazz/korean-sentence-splitter"
"hyunwoongko/kss" -> "kiyoungkim1/LMkor"
"hyunwoongko/kss" -> "hyunwoongko/kobart-transformers"
"hyunwoongko/kss" -> "KLUE-benchmark/KLUE"
"hyunwoongko/kss" -> "Beomi/KcELECTRA"
"hyunwoongko/kss" -> "kocohub/korean-hate-speech"
"hyunwoongko/kss" -> "tunib-ai/large-scale-lm-tutorials"
"hyunwoongko/kss" -> "songys/AwesomeKorean_Data"
"hyunwoongko/kss" -> "kakaobrain/pororo"
"hyunwoongko/kss" -> "KLUE-benchmark/KLUE-baseline"
"lqez/awesome-hangul" -> "kaniblu/hangul-utils"
"lqez/awesome-hangul" -> "disjukr/just-news"
"kakaobrain/KorNLUDatasets" -> "monologg/KoELECTRA"
"kakaobrain/KorNLUDatasets" -> "ko-nlp/Korpora"
"kakaobrain/KorNLUDatasets" -> "KLUE-benchmark/KLUE"
"kakaobrain/KorNLUDatasets" -> "Huffon/nlp-startups"
"kakaobrain/KorNLUDatasets" -> "monologg/DistilKoBERT"
"kakaobrain/KorNLUDatasets" -> "ko-nlp/Open-korean-corpora"
"kakaobrain/KorNLUDatasets" -> "kocohub/korean-hate-speech"
"kakaobrain/KorNLUDatasets" -> "songys/AwesomeKorean_Data"
"kakaobrain/KorNLUDatasets" -> "kakaobrain/nlp-paper-reading"
"kakaobrain/KorNLUDatasets" -> "SKT-AI/KoBART"
"kakaobrain/KorNLUDatasets" -> "warnikchow/paraKQC"
"kakaobrain/KorNLUDatasets" -> "Beomi/KcBERT"
"kakaobrain/KorNLUDatasets" -> "snunlp/KR-BERT"
"kakaobrain/KorNLUDatasets" -> "monologg/KoBERT-Transformers"
"kakaobrain/KorNLUDatasets" -> "hyunwoongko/kss"
"kakaobrain/nlp-paper-reading" -> "kakaobrain/KorNLUDatasets"
"kakaobrain/nlp-paper-reading" -> "monologg/KoELECTRA"
"kakaobrain/nlp-paper-reading" -> "SKT-AI/KoBART"
"kakaobrain/nlp-paper-reading" -> "kocohub/korean-hate-speech"
"kakaobrain/nlp-paper-reading" -> "Beomi/KcBERT"
"kakaobrain/nlp-paper-reading" -> "uoneway/Text-Summarization-Repo"
"kakaobrain/nlp-paper-reading" -> "songys/AwesomeKorean_Data"
"kakaobrain/nlp-paper-reading" -> "KLUE-benchmark/KLUE"
"kakaobrain/nlp-paper-reading" -> "yukyunglee/Transformer_Survey_Study"
"kakaobrain/nlp-paper-reading" -> "ko-nlp/Korpora"
"kakaobrain/nlp-paper-reading" -> "KB-Bank-AI/KB-ALBERT-KO"
"kakaobrain/nlp-paper-reading" -> "SKT-AI/KoGPT2"
"kakaobrain/nlp-paper-reading" -> "kakaobrain/pororo"
"kakaobrain/nlp-paper-reading" -> "jungwoo-ha/WeeklyArxivTalk"
"kakaobrain/nlp-paper-reading" -> "jiphyeonjeon/nlp-review"
"lumyjuwon/KoreaNewsCrawler" -> "songys/AwesomeKorean_Data"
"lumyjuwon/KoreaNewsCrawler" -> "lovit/soyspacing"
"lumyjuwon/KoreaNewsCrawler" -> "ko-nlp/Korpora"
"lumyjuwon/KoreaNewsCrawler" -> "KB-Bank-AI/KB-ALBERT-KO"
"TensorFlowKR/MLJejuCamp" -> "wookayin/TensorFlowKR-2017-talk-bestpractice"
"TensorFlowKR/MLJejuCamp" -> "devsisters/multi-speaker-tacotron-tensorflow"
"TensorFlowKR/MLJejuCamp" -> "GunhoChoi/Kind_PyTorch_Tutorial"
"TensorFlowKR/MLJejuCamp" -> "sjchoi86/dl_tutorials_10weeks"
"TensorFlowKR/MLJejuCamp" -> "sjchoi86/advanced-tensorflow"
"TensorFlowKR/MLJejuCamp" -> "hunkim/DeepLearningStars"
"TensorFlowKR/MLJejuCamp" -> "nmhkahn/deep_learning_tutorial"
"TensorFlowKR/MLJejuCamp" -> "hunkim/KaggleZeroToAll"
"TensorFlowKR/MLJejuCamp" -> "hunkim/effective_python_notebook"
"TensorFlowKR/MLJejuCamp" -> "leechanwoo/Tensorflow-projects"
"TensorFlowKR/MLJejuCamp" -> "datitran/Object-Detector-App"
"TensorFlowKR/MLJejuCamp" -> "Curt-Park/cs231n_assignments"
"lucidrains/PaLM-jax" -> "lucidrains/PaLM-pytorch"
"monologg/KoBigBird" -> "KLUE-benchmark/KLUE"
"monologg/KoBigBird" -> "lassl/lassl"
"monologg/KoBigBird" -> "KLUE-benchmark/KLUE-baseline"
"monologg/KoBigBird" -> "sooftware/Korean-PLM"
"monologg/KoBigBird" -> "AIRC-KETI/ke-t5"
"monologg/KoBigBird" -> "monologg/KoELECTRA"
"monologg/KoBigBird" -> "hyunwoongko/kss"
"monologg/KoBigBird" -> "hyunwoongko/pecab"
"monologg/KoBigBird" -> "toriving/KoEDA"
"monologg/KoBigBird" -> "yukyunglee/Transformer_Survey_Study"
"monologg/KoBigBird" -> "tunib-ai/tunib-electra"
"monologg/KoBigBird" -> "tunib-ai/large-scale-lm-tutorials"
"monologg/KoBigBird" -> "monologg/KoBERT-Transformers"
"monologg/KoBigBird" -> "Huffon/klue-transformers-tutorial"
"monologg/KoBigBird" -> "SKT-AI/KoBART"
"YBIGTA/Deep_learning" -> "YBIGTA/data-science-2018"
"YBIGTA/Deep_learning" -> "YBIGTA/DeepNLP-Study"
"cosmoquester/2021-dialogue-summary-competition" -> "toriving/KoEDA"
"cosmoquester/2021-dialogue-summary-competition" -> "seopbo/nlp_tutorials"
"cosmoquester/2021-dialogue-summary-competition" -> "Huffon/klue-transformers-tutorial"
"cosmoquester/2021-dialogue-summary-competition" -> "uoneway/Text-Summarization-Repo"
"cosmoquester/2021-dialogue-summary-competition" -> "hyunwoongko/pecab"
"cosmoquester/2021-dialogue-summary-competition" -> "tunib-ai/DKTC"
"monologg/DistilKoBERT" -> "monologg/HanBert-Transformers"
"monologg/DistilKoBERT" -> "monologg/KoELECTRA"
"monologg/DistilKoBERT" -> "kakaobrain/KorNLUDatasets"
"monologg/DistilKoBERT" -> "snunlp/KR-BERT"
"monologg/DistilKoBERT" -> "monologg/KoBERT-Transformers"
"monologg/DistilKoBERT" -> "KB-Bank-AI/KB-ALBERT-KO"
"monologg/DistilKoBERT" -> "monologg/KoBERT-nsmc"
"monologg/DistilKoBERT" -> "pingpong-ai/chatspace"
"monologg/DistilKoBERT" -> "songys/AwesomeKorean_Data"
"monologg/DistilKoBERT" -> "kakaobrain/kortok"
"monologg/DistilKoBERT" -> "Beomi/KcELECTRA"
"monologg/DistilKoBERT" -> "aisolab/nlp_classification"
"mrlee23/KoreanSentimentAnalyzer" -> "park1200656/KnuSentiLex"
"devsisters/multi-speaker-tacotron-tensorflow" -> "TensorFlowKR/MLJejuCamp"
"devsisters/multi-speaker-tacotron-tensorflow" -> "sjchoi86/dl_tutorials_10weeks"
"devsisters/multi-speaker-tacotron-tensorflow" -> "akic4op4/GNE"
"devsisters/multi-speaker-tacotron-tensorflow" -> "nmhkahn/deep_learning_tutorial"
"devsisters/multi-speaker-tacotron-tensorflow" -> "carpedm20/multi-speaker-tacotron-tensorflow" ["e"=1]
"devsisters/multi-speaker-tacotron-tensorflow" -> "Kyubyong/deepvoice3" ["e"=1]
"devsisters/multi-speaker-tacotron-tensorflow" -> "kastnerkyle/multi-speaker-tacotron-tensorflow" ["e"=1]
"devsisters/multi-speaker-tacotron-tensorflow" -> "golbin/TensorFlow-Tutorials"
"devsisters/multi-speaker-tacotron-tensorflow" -> "chris-chris/mario-rl-tutorial"
"devsisters/multi-speaker-tacotron-tensorflow" -> "hunkim/KaggleZeroToAll"
"devsisters/multi-speaker-tacotron-tensorflow" -> "sjchoi86/advanced-tensorflow"
"devsisters/multi-speaker-tacotron-tensorflow" -> "GSByeon/multi-speaker-tacotron-tensorflow" ["e"=1]
"Huffon/klue-transformers-tutorial" -> "KLUE-benchmark/KLUE-baseline"
"Huffon/klue-transformers-tutorial" -> "yukyunglee/Transformer_Survey_Study"
"Huffon/klue-transformers-tutorial" -> "toriving/KoEDA"
"Huffon/klue-transformers-tutorial" -> "seopbo/nlp_tutorials"
"Huffon/klue-transformers-tutorial" -> "cosmoquester/2021-dialogue-summary-competition"
"Huffon/NLP101" -> "kakaobrain/nlp-paper-reading"
"Huffon/NLP101" -> "ko-nlp/Korpora"
"Huffon/NLP101" -> "songys/AwesomeKorean_Data"
"Huffon/NLP101" -> "monologg/KoELECTRA"
"Huffon/NLP101" -> "Huffon/nlp-startups"
"Huffon/NLP101" -> "jiphyeonjeon/nlp-review"
"Huffon/NLP101" -> "SKT-AI/KoBART"
"Huffon/NLP101" -> "kakaobrain/KorNLUDatasets"
"Huffon/NLP101" -> "uoneway/Text-Summarization-Repo"
"Huffon/NLP101" -> "naver/kor2vec"
"Huffon/NLP101" -> "KLUE-benchmark/KLUE"
"Huffon/NLP101" -> "datanada/Awesome-Korean-NLP"
"Huffon/NLP101" -> "Huffon/nlp-various-tutorials"
"Huffon/NLP101" -> "likejazz/korean-sentence-splitter"
"Huffon/NLP101" -> "kocohub/korean-hate-speech"
"e9t/nsmc" -> "SKTBrain/KoBERT"
"e9t/nsmc" -> "songys/AwesomeKorean_Data"
"e9t/nsmc" -> "Beomi/KcBERT"
"e9t/nsmc" -> "ko-nlp/Korpora"
"e9t/nsmc" -> "datanada/Awesome-Korean-NLP"
"e9t/nsmc" -> "konlpy/konlpy"
"e9t/nsmc" -> "lovit/soynlp"
"e9t/nsmc" -> "kocohub/korean-hate-speech"
"e9t/nsmc" -> "ratsgo/embedding"
"e9t/nsmc" -> "monologg/KoELECTRA"
"e9t/nsmc" -> "KLUE-benchmark/KLUE"
"e9t/nsmc" -> "kakaobrain/KorNLUDatasets"
"e9t/nsmc" -> "kakao/khaiii"
"e9t/nsmc" -> "SKT-AI/KoBART"
"e9t/nsmc" -> "monologg/DistilKoBERT"
"park1200656/KnuSentiLex" -> "mrlee23/KoreanSentimentAnalyzer"
"park1200656/KnuSentiLex" -> "coolengineer/sejong-corpus"
"park1200656/KnuSentiLex" -> "koshort/pyeunjeon"
"pingpong-ai/dialogue-generation-models" -> "kakaobrain/kortok"
"pingpong-ai/dialogue-generation-models" -> "pingpong-ai/chatspace"
"smilegate-ai/korean_smile_style_dataset" -> "searle-j/KOTE"
"smilegate-ai/korean_smile_style_dataset" -> "smilegate-ai/HuLiC"
"tunib-ai/DKTC" -> "tunib-ai/KMWP"
"monologg/KoBERT-nsmc" -> "monologg/KoBERT-NER"
"monologg/KoBERT-nsmc" -> "monologg/DistilKoBERT"
"hunkim/ReinforcementZeroToAll" -> "rlcode/reinforcement-learning-kr"
"hunkim/ReinforcementZeroToAll" -> "hunkim/KaggleZeroToAll"
"hunkim/ReinforcementZeroToAll" -> "hunkim/DeepRL-Agents"
"hunkim/ReinforcementZeroToAll" -> "Junyoungpark/ReinforcementLearningAtoZ"
"hunkim/ReinforcementZeroToAll" -> "reinforcement-learning-kr/how_to_study_rl"
"hunkim/ReinforcementZeroToAll" -> "hunkim/DeepLearningStars"
"hunkim/ReinforcementZeroToAll" -> "jcwleo/Reinforcement_Learning"
"illidanlab/Simulator" -> "mktal/kddcup-starting-kit"
"illidanlab/Simulator" -> "szlhl1040/Vehicles-Dispatch-Simulator"
"illidanlab/Simulator" -> "Jinjiarui/CoRide"
"illidanlab/Simulator" -> "hitsuji5/fleet-sim"
"illidanlab/Simulator" -> "zzsza/Awesome-Mobility-Machine-Learning-Contents"
"bab2min/Kiwi" -> "bab2min/kiwipiepy"
"bab2min/Kiwi" -> "hyunwoongko/kss"
"bab2min/Kiwi" -> "lovit/soyspacing"
"bab2min/Kiwi" -> "lovit/soynlp"
"bab2min/Kiwi" -> "ko-nlp/Korpora"
"bab2min/Kiwi" -> "koalanlp/koalanlp"
"bab2min/Kiwi" -> "Beomi/KcELECTRA"
"bab2min/Kiwi" -> "haven-jeon/PyKoSpacing"
"bab2min/Kiwi" -> "monologg/KoBigBird"
"bab2min/Kiwi" -> "kmounlp/NER"
"bab2min/Kiwi" -> "kakao/khaiii"
"bab2min/Kiwi" -> "KLUE-benchmark/KLUE"
"SungjoonPark/KoreanWordVectors" -> "coolengineer/sejong-corpus"
"SungjoonPark/KoreanWordVectors" -> "naver/claf"
"SungjoonPark/KoreanWordVectors" -> "papower1/Awesome-Korean-NLP-Papers"
"SungjoonPark/KoreanWordVectors" -> "naver/kor2vec"
"lovit/textmining-tutorial" -> "lovit/python_ml4nlp"
"lovit/textmining-tutorial" -> "lovit/soynlp"
"lovit/textmining-tutorial" -> "lovit/textmining_dataset"
"lovit/textmining-tutorial" -> "ratsgo/embedding"
"lovit/textmining-tutorial" -> "aisolab/nlp_implementation"
"lovit/textmining-tutorial" -> "lovit/KR-WordRank"
"lovit/textmining-tutorial" -> "ko-nlp/Korpora"
"lovit/textmining-tutorial" -> "modulabs/NLP-bootcamp"
"lovit/textmining-tutorial" -> "lovit/fastcampus_textml_blogs"
"lovit/textmining-tutorial" -> "lovit/customized_konlpy"
"lovit/textmining-tutorial" -> "lovit/soyspacing"
"lovit/textmining-tutorial" -> "kocohub/korean-hate-speech"
"lovit/textmining-tutorial" -> "MrBananaHuman/KorNlpTutorial"
"gusdnd852/kocrawl" -> "gusdnd852/kochat"
"golbin/TensorFlow-ML-Exercises" -> "FuZer/Study_TensorFlow"
"golbin/TensorFlow-ML-Exercises" -> "sjchoi86/dl_tutorials_4th"
"golbin/TensorFlow-ML-Exercises" -> "FuZer/StudyTensorFlow"
"golbin/TensorFlow-ML-Exercises" -> "golbin/TensorFlow-MNIST"
"jaketae/koclip" -> "KLUE-benchmark/KLUE-baseline"
"catSirup/KorEDA" -> "jucho2725/ktextaug"
"catSirup/KorEDA" -> "toriving/KoEDA"
"kiyoungkim1/LMkor" -> "monologg/KoELECTRA"
"kiyoungkim1/LMkor" -> "SKT-AI/KoBART"
"kiyoungkim1/LMkor" -> "hyunwoongko/kss"
"kiyoungkim1/LMkor" -> "KLUE-benchmark/KLUE"
"kiyoungkim1/LMkor" -> "ko-nlp/Korpora"
"kiyoungkim1/LMkor" -> "monologg/KoBigBird"
"kiyoungkim1/LMkor" -> "AIRC-KETI/ke-t5"
"kiyoungkim1/LMkor" -> "kakaobrain/kogpt"
"kiyoungkim1/LMkor" -> "haven-jeon/KoGPT2-chatbot"
"kiyoungkim1/LMkor" -> "SKT-AI/KoGPT2"
"kiyoungkim1/LMkor" -> "Beomi/KcBERT"
"kiyoungkim1/LMkor" -> "Beomi/KcELECTRA"
"kiyoungkim1/LMkor" -> "sooftware/Korean-PLM"
"kiyoungkim1/LMkor" -> "songys/AwesomeKorean_Data"
"kiyoungkim1/LMkor" -> "hyunwoongko/pecab"
"EleutherAI/oslo" -> "jason9693/oslo-kogpt-finetunig"
"EleutherAI/oslo" -> "lassl/lassl"
"EleutherAI/oslo" -> "EleutherAI/dps"
"EleutherAI/oslo" -> "hyunwoongko/pecab"
"EleutherAI/oslo" -> "sooftware/Korean-PLM"
"EleutherAI/oslo" -> "hyunwoongko/python-mecab-kor"
"EleutherAI/oslo" -> "EleutherAI/multilingual-transfer"
"EleutherAI/oslo" -> "lassl/kolmev"
"EleutherAI/oslo" -> "tunib-ai/large-scale-lm-tutorials"
"sooftware/openspeech" -> "sooftware/lasr"
"sooftware/openspeech" -> "sooftware/luna-transformer"
"sooftware/openspeech" -> "sooftware/KoSpeech"
"sooftware/openspeech" -> "tunib-ai/transformers"
"wookayin/TensorFlowKR-2017-talk-bestpractice" -> "TensorFlowKR/MLJejuCamp"
"KLUE-benchmark/KLUE-baseline" -> "toriving/KoEDA"
"KLUE-benchmark/KLUE-baseline" -> "jiphyeonjeon/season2"
"KLUE-benchmark/KLUE-baseline" -> "tunib-ai/tunib-electra"
"sooftware/attentions" -> "sooftware/conformer" ["e"=1]
"sooftware/attentions" -> "sooftware/RNN-Transducer" ["e"=1]
"sooftware/attentions" -> "sooftware/Fairseq-Listen-Attend-Spell"
"sooftware/attentions" -> "tunib-ai/tunib-electra"
"sooftware/attentions" -> "sooftware/transformer"
"dongminlee94/Samsung-DRL-Code" -> "chagmgang/pytorch_ppo_rl" ["e"=1]
"hwk0702/keras2torch" -> "yukyunglee/transformers-resources"
"9bow/PyTorch-tutorials-kr" -> "Beomi/KcBERT"
"9bow/PyTorch-tutorials-kr" -> "kakaobrain/nlp-paper-reading"
"9bow/PyTorch-tutorials-kr" -> "papower1/Awesome-Korean-NLP-Papers"
"9bow/PyTorch-tutorials-kr" -> "zzsza/Kaggle-knowhow"
"9bow/PyTorch-tutorials-kr" -> "NLP-kr/tensorflow-ml-nlp"
"9bow/PyTorch-tutorials-kr" -> "SKT-AI/KoGPT2"
"9bow/PyTorch-tutorials-kr" -> "ratsgo/embedding"
"9bow/PyTorch-tutorials-kr" -> "KLUE-benchmark/KLUE"
"ayaka14732/tpu-starter" -> "ayaka14732/jax-smi" ["e"=1]
"ayaka14732/tpu-starter" -> "matthias-wright/flaxmodels"
"ayaka14732/tpu-starter" -> "tunib-ai/large-scale-lm-tutorials"
"ayaka14732/tpu-starter" -> "hyunwoongko/python-mecab-kor"
"taki0112/Tensorflow2-Cookbook" -> "marload/deep-rl-tf2"
"taki0112/Tensorflow2-Cookbook" -> "chris-chris/mlops-example" ["e"=1]
"taki0112/Tensorflow2-Cookbook" -> "aisolab/nlp_implementation"
"taki0112/Tensorflow2-Cookbook" -> "j-marple-dev/model_compression"
"gilbutITbook/006975" -> "rickiepark/deep-learning-with-python-notebooks"
"emorynlp/ud-korean" -> "UniversalDependencies/UD_Korean-Kaist"
"naver/claf" -> "naver/nlp-challenge"
"naver/claf" -> "SungjoonPark/KoreanWordVectors"
"naver/claf" -> "naver/kor2vec"
"naver/claf" -> "coolengineer/sejong-corpus"
"naver/claf" -> "uwnlp/piqa" ["e"=1]
"naver/claf" -> "tbai2019/HanBert-54k-N"
"naver/claf" -> "monologg/DistilKoBERT"
"naver/claf" -> "kakaobrain/KorNLUDatasets"
"naver/claf" -> "emorynlp/ud-korean"
"naver/claf" -> "kakaobrain/kortok"
"naver/claf" -> "likejazz/korean-sentence-splitter"
"naver/nlp-challenge" -> "naver/claf"
"naver/nlp-challenge" -> "coolengineer/sejong-corpus"
"naver/nlp-challenge" -> "warnikchow/3i4k"
"naver/nlp-challenge" -> "monologg/KoELECTRA"
"naver/nlp-challenge" -> "likejazz/korean-sentence-splitter"
"naver/nlp-challenge" -> "kakaobrain/KorNLUDatasets"
"naver/nlp-challenge" -> "kmounlp/NER"
"papower1/Awesome-Korean-NLP-Papers" -> "likejazz/korean-sentence-splitter"
"papower1/Awesome-Korean-NLP-Papers" -> "SungjoonPark/KoreanWordVectors"
"papower1/Awesome-Korean-NLP-Papers" -> "monologg/DistilKoBERT"
"papower1/Awesome-Korean-NLP-Papers" -> "datanada/Awesome-Korean-NLP"
"papower1/Awesome-Korean-NLP-Papers" -> "lovit/huggingface_konlpy"
"papower1/Awesome-Korean-NLP-Papers" -> "naver/nlp-challenge"
"papower1/Awesome-Korean-NLP-Papers" -> "lovit/soyspacing"
"papower1/Awesome-Korean-NLP-Papers" -> "aisolab/nlp_classification"
"papower1/Awesome-Korean-NLP-Papers" -> "warnikchow/dlk2nlp"
"nforge/devnote" -> "nforge/nforge4"
"nforge/devnote" -> "nforge/hive"
"VumBleBot/odqa_baseline_code" -> "VumBleBot/Group-Activity"
"VumBleBot/odqa_baseline_code" -> "TEAM-IKYO/Open-Domain-Question-Answering"
"marload/deep-rl-tf2" -> "marload/dist-rl-tf2"
"jongman/algospot" -> "smartstudy/smartstudy-home"
"jongman/algospot" -> "akngs/ecogwiki" ["e"=1]
"Bricoler/nlp-tensorflow" -> "Bricoler/chatbot-seminar"
"ajinkyakulkarni14/TED-Multilingual-Parallel-Corpus" -> "ajinkyakulkarni14/How-I-Extracted-TED-talks-for-parallel-Corpus-"
"ajinkyakulkarni14/TED-Multilingual-Parallel-Corpus" -> "jungyeul/korean-parallel-corpora"
"ajinkyakulkarni14/TED-Multilingual-Parallel-Corpus" -> "neulab/word-embeddings-for-nmt"
"haebeom-lee/l2b" -> "haebeom-lee/metadrop"
"monologg/KoBERT-NER" -> "monologg/KoBERT-nsmc"
"puzzlet/constitution-kr" -> "devunt/10th-amendment"
"hyunwoongko/python-mecab-kor" -> "jason9693/oslo-kogpt-finetunig"
"toriving/KoEDA" -> "KLUE-benchmark/KLUE-baseline"
"yukyunglee/Awesome-Dialogue-State-Tracking" -> "clovaai/som-dst" ["e"=1]
"yukyunglee/Awesome-Dialogue-State-Tracking" -> "jiphyeonjeon/season2"
"yukyunglee/Awesome-Dialogue-State-Tracking" -> "yukyunglee/Transformer_Survey_Study"
"yukyunglee/Awesome-Dialogue-State-Tracking" -> "KLUE-benchmark/KLUE-baseline"
"yukyunglee/Awesome-Dialogue-State-Tracking" -> "DSBA-Lab/CodeLab"
"yukyunglee/Awesome-Dialogue-State-Tracking" -> "salesforce/coco-dst" ["e"=1]
"graykode/ALBERT-Pytorch" -> "dhlee347/pytorchic-bert"
"graykode/ALBERT-Pytorch" -> "lonePatient/albert_pytorch" ["e"=1]
"sooftware/k-startups" -> "tunib-ai/tunib-electra"
"sooftware/k-startups" -> "Huffon/nlp-startups"
"sooftware/k-startups" -> "tunib-ai/KMWP"
"sooftware/k-startups" -> "tunib-ai/oslo"
"sooftware/k-startups" -> "tunib-ai/DKTC"
"sooftware/k-startups" -> "sooftware/Korean-PLM"
"sooftware/k-startups" -> "sooftware/nlp-tasks"
"sooftware/k-startups" -> "toriving/KoEDA"
"sooftware/k-startups" -> "jiphyeonjeon/season2"
"sooftware/k-startups" -> "uoneway/Text-Summarization-Repo"
"sooftware/k-startups" -> "cosmoquester/2021-dialogue-summary-competition"
"sooftware/k-startups" -> "jiphyeonjeon/season1"
"sooftware/k-startups" -> "smilegate-ai/korean_unsmile_dataset"
"sooftware/k-startups" -> "monologg/KoELECTRA"
"shin285/KOMORAN" -> "shineware/komoran-2.0"
"shin285/KOMORAN" -> "shineware/PyKOMORAN"
"shin285/KOMORAN" -> "coolengineer/sejong-corpus"
"coolengineer/sejong-corpus" -> "SungjoonPark/KoreanWordVectors"
"coolengineer/sejong-corpus" -> "likejazz/korean-sentence-splitter"
"coolengineer/sejong-corpus" -> "jungyeul/korean-parallel-corpora"
"coolengineer/sejong-corpus" -> "naver/nlp-challenge"
"coolengineer/sejong-corpus" -> "naver/claf"
"coolengineer/sejong-corpus" -> "naver/kor2vec"
"coolengineer/sejong-corpus" -> "pingpong-ai/chatspace"
"coolengineer/sejong-corpus" -> "bluedisk/hangul-toolkit"
"jungyeul/korean-parallel-corpora" -> "coolengineer/sejong-corpus"
"jungyeul/korean-parallel-corpora" -> "likejazz/korean-sentence-splitter"
"jungyeul/korean-parallel-corpora" -> "kaniblu/hangul-utils"
"koalanlp/koalanlp" -> "likejazz/korean-sentence-splitter"
"koalanlp/koalanlp" -> "koshort/pyeunjeon"
"koalanlp/koalanlp" -> "lovit/soyspacing"
"kocohub/korean-hate-speech" -> "songys/AwesomeKorean_Data"
"kocohub/korean-hate-speech" -> "ko-nlp/Korpora"
"kocohub/korean-hate-speech" -> "monologg/KoELECTRA"
"kocohub/korean-hate-speech" -> "kakaobrain/KorNLUDatasets"
"kocohub/korean-hate-speech" -> "Beomi/KcBERT"
"kocohub/korean-hate-speech" -> "kakaobrain/nlp-paper-reading"
"kocohub/korean-hate-speech" -> "SKT-AI/KoBART"
"kocohub/korean-hate-speech" -> "KLUE-benchmark/KLUE"
"kocohub/korean-hate-speech" -> "smilegate-ai/korean_unsmile_dataset"
"kocohub/korean-hate-speech" -> "Beomi/KcELECTRA"
"kocohub/korean-hate-speech" -> "haven-jeon/PyKoSpacing"
"kocohub/korean-hate-speech" -> "e9t/nsmc"
"kocohub/korean-hate-speech" -> "jason9693/APEACH"
"kocohub/korean-hate-speech" -> "likejazz/korean-sentence-splitter"
"kocohub/korean-hate-speech" -> "hyunwoongko/kss"
"haven-jeon/KoNLP" -> "haven-jeon/KoSpacing"
"haven-jeon/KoNLP" -> "e9t/konlpy"
"sooftware/luna-transformer" -> "sooftware/lasr"
"AIRC-KETI/ke-t5" -> "monologg/KoBigBird"
"AIRC-KETI/ke-t5" -> "toriving/KoEDA"
"AIRC-KETI/ke-t5" -> "monologg/KoELECTRA"
"AIRC-KETI/ke-t5" -> "KLUE-benchmark/KLUE"
"AIRC-KETI/ke-t5" -> "naver-ai/carecall-corpus"
"AIRC-KETI/ke-t5" -> "SKT-AI/KoBART"
"AIRC-KETI/ke-t5" -> "KLUE-benchmark/KLUE-baseline"
"AIRC-KETI/ke-t5" -> "sooftware/Korean-PLM"
"AIRC-KETI/ke-t5" -> "seujung/KoBART-summarization"
"AIRC-KETI/ke-t5" -> "kiyoungkim1/LMkor"
"AIRC-KETI/ke-t5" -> "boychaboy/KOLD"
"AIRC-KETI/ke-t5" -> "smilegate-ai/HuLiC"
"AIRC-KETI/ke-t5" -> "paust-team/pko-t5"
"AIRC-KETI/ke-t5" -> "kakaobrain/KorNLUDatasets"
"AIRC-KETI/ke-t5" -> "smilegate-ai/korean_unsmile_dataset"
"lovit/customized_konlpy" -> "lovit/soyspacing"
"rickiepark/python-machine-learning-book-2nd-edition" -> "gilbutITbook/007022"
"naver/kor2vec" -> "naver/claf"
"naver/kor2vec" -> "coolengineer/sejong-corpus"
"naver/kor2vec" -> "monologg/DistilKoBERT"
"naver/kor2vec" -> "SungjoonPark/KoreanWordVectors"
"naver/kor2vec" -> "likejazz/korean-sentence-splitter"
"naver/kor2vec" -> "dongjun-Lee/kor2vec"
"naver/kor2vec" -> "monologg/KoELECTRA"
"Beomi/KcELECTRA" -> "Beomi/KcBERT"
"Beomi/KcELECTRA" -> "monologg/KoELECTRA"
"Beomi/KcELECTRA" -> "KLUE-benchmark/KLUE"
"Beomi/KcELECTRA" -> "SKT-AI/KoBART"
"Beomi/KcELECTRA" -> "ko-nlp/Korpora"
"Beomi/KcELECTRA" -> "monologg/DistilKoBERT"
"Beomi/KcELECTRA" -> "kocohub/korean-hate-speech"
"Beomi/KcELECTRA" -> "songys/AwesomeKorean_Data"
"Beomi/KcELECTRA" -> "KB-Bank-AI/KB-ALBERT-KO"
"Beomi/KcELECTRA" -> "hyunwoongko/kss"
"Beomi/KcELECTRA" -> "kakaobrain/KorNLUDatasets"
"Beomi/KcELECTRA" -> "monologg/KoBigBird"
"Beomi/KcELECTRA" -> "tunib-ai/tunib-electra"
"Beomi/KcELECTRA" -> "haven-jeon/LegalQA"
"Beomi/KcELECTRA" -> "monologg/KoBERT-Transformers"
"Huffon/nlp-various-tutorials" -> "hyunwoongko/kobart-transformers"
"hyunwoongko/pecab" -> "lassl/lassl"
"hyunwoongko/pecab" -> "sooftware/Korean-PLM"
"hyunwoongko/pecab" -> "seopbo/nlp_tutorials"
"hyunwoongko/pecab" -> "tunib-ai/tunib-electra"
"hyunwoongko/pecab" -> "LG-NLP/KorWikiTableQuestions"
"hyunwoongko/pecab" -> "hyunwoongko/python-mecab-kor"
"jason9693/APEACH" -> "tunib-ai/DKTC"
"jason9693/APEACH" -> "jinmang2/DOOLY"
"jiphyeonjeon/season1" -> "jiphyeonjeon/season2"
"jiphyeonjeon/season1" -> "jiphyeonjeon/season3"
"jiphyeonjeon/season2" -> "jiphyeonjeon/season1"
"jiphyeonjeon/season2" -> "jiphyeonjeon/season3"
"jiphyeonjeon/season2" -> "KLUE-benchmark/KLUE-baseline"
"jiphyeonjeon/season2" -> "yukyunglee/Transformer_Survey_Study"
"jiphyeonjeon/season2" -> "tunib-ai/oslo"
"jiphyeonjeon/season2" -> "tunib-ai/large-scale-lm-tutorials"
"jiphyeonjeon/season2" -> "tunib-ai/tunib-electra"
"lassl/lassl" -> "hyunwoongko/pecab"
"lassl/lassl" -> "seopbo/nlp_tutorials"
"lassl/lassl" -> "tunib-ai/oslo"
"lassl/lassl" -> "sooftware/Korean-PLM"
"lassl/lassl" -> "monologg/KoBigBird"
"lassl/lassl" -> "EleutherAI/oslo"
"lassl/lassl" -> "tunib-ai/large-scale-lm-tutorials"
"lassl/lassl" -> "EleutherAI/multilingual-transfer"
"lassl/lassl" -> "hyunwoongko/python-mecab-kor"
"lassl/lassl" -> "hyunwoongko/kobart-transformers"
"lassl/lassl" -> "KLUE-benchmark/KLUE-baseline"
"lassl/lassl" -> "haven-jeon/LegalQA"
"sooftware/Korean-PLM" -> "hyunwoongko/pecab"
"sooftware/Korean-PLM" -> "lassl/lassl"
"sooftware/Korean-PLM" -> "searle-j/KOTE"
"sooftware/Korean-PLM" -> "monologg/KoBigBird"
"sooftware/Korean-PLM" -> "tunib-ai/tunib-electra"
"sooftware/Korean-PLM" -> "smilegate-ai/korean_smile_style_dataset"
"sooftware/Korean-PLM" -> "yukyunglee/Transformer_Survey_Study"
"sooftware/Korean-PLM" -> "sooftware/nlp-tasks"
"sooftware/Korean-PLM" -> "jason9693/APEACH"
"sooftware/Korean-PLM" -> "EleutherAI/oslo"
"sooftware/Korean-PLM" -> "deepseasw/nlp_model_list"
"sooftware/Korean-PLM" -> "toriving/KoEDA"
"sooftware/Korean-PLM" -> "tunib-ai/large-scale-lm-tutorials"
"sooftware/Korean-PLM" -> "jiphyeonjeon/season2"
"sooftware/Korean-PLM" -> "EleutherAI/multilingual-transfer"
"KB-Bank-AI/KB-ALBERT-KO" -> "monologg/DistilKoBERT"
"KB-Bank-AI/KB-ALBERT-KO" -> "monologg/KoELECTRA"
"KB-Bank-AI/KB-ALBERT-KO" -> "bab2min/corpus"
"KB-Bank-AI/KB-ALBERT-KO" -> "ko-nlp/Korpora"
"KB-Bank-AI/KB-ALBERT-KO" -> "SKT-AI/KoBART"
"KB-Bank-AI/KB-ALBERT-KO" -> "kakaobrain/nlp-paper-reading"
"KB-Bank-AI/KB-ALBERT-KO" -> "likejazz/korean-sentence-splitter"
"KB-Bank-AI/KB-ALBERT-KO" -> "Beomi/KcELECTRA"
"KB-Bank-AI/KB-ALBERT-KO" -> "hyunwoongko/kobart-transformers"
"KB-Bank-AI/KB-ALBERT-KO" -> "seujung/KoBART-summarization"
"KB-Bank-AI/KB-ALBERT-KO" -> "Beomi/KcBERT"
"KB-Bank-AI/KB-ALBERT-KO" -> "songys/AwesomeKorean_Data"
"KB-Bank-AI/KB-ALBERT-KO" -> "modulabs/beyondBERT"
"KB-Bank-AI/KB-ALBERT-KO" -> "kimwoonggon/publicservant_AI"
"nawnoes/WellnessConversation-LanguageModel" -> "haven-jeon/KoGPT2-chatbot"
"nawnoes/WellnessConversation-LanguageModel" -> "songys/Chatbot_data"
"tunib-ai/KMWP" -> "tunib-ai/DKTC"
"theeluwin/lexrankr" -> "theeluwin/textrankr"
"theeluwin/textrankr" -> "theeluwin/lexrankr"
"theeluwin/textrankr" -> "what-studio/tossi" ["e"=1]
"pingpong-ai/chatspace" -> "pingpong-ai/dialogue-generation-models"
"pingpong-ai/chatspace" -> "lovit/soyspacing"
"pingpong-ai/chatspace" -> "monologg/DistilKoBERT"
"pingpong-ai/chatspace" -> "coolengineer/sejong-corpus"
"pingpong-ai/chatspace" -> "pingpong-ai/kg-cvae-generator"
"pingpong-ai/chatspace" -> "kakaobrain/kortok"
"sgunderscore/hatescore-korean-hate-speech" -> "smilegate-ai/korean_unsmile_dataset"
"NLP-kr/tensorflow-ml-nlp" -> "NLP-kr/tensorflow-ml-nlp-tf2"
"NLP-kr/tensorflow-ml-nlp" -> "e9t/nsmc"
"NLP-kr/tensorflow-ml-nlp" -> "modulabs/NLP-bootcamp"
"NLP-kr/tensorflow-ml-nlp" -> "ratsgo/embedding"
"NLP-kr/tensorflow-ml-nlp" -> "pingpong-ai/chatspace"
"NLP-kr/tensorflow-ml-nlp" -> "SKT-AI/KoBART"
"NLP-kr/tensorflow-ml-nlp" -> "aisolab/nlp_implementation"
"NLP-kr/tensorflow-ml-nlp" -> "lovit/KR-WordRank"
"NLP-kr/tensorflow-ml-nlp" -> "lovit/soynlp"
"aisolab/nlp_implementation" -> "modulabs/NLP-bootcamp"
"aisolab/nlp_implementation" -> "lovit/textmining-tutorial"
"aisolab/nlp_implementation" -> "SungjoonPark/KoreanWordVectors"
"aisolab/nlp_implementation" -> "monologg/DistilKoBERT"
"aisolab/nlp_implementation" -> "papower1/Awesome-Korean-NLP-Papers"
"lovit/fastcampus_textml_blogs" -> "lovit/python_ml4nlp"
"modulabs/NLP-bootcamp" -> "aisolab/nlp_implementation"
"modulabs/NLP-bootcamp" -> "lovit/fastcampus_textml_blogs"
"modulabs/NLP-bootcamp" -> "jiphyeonjeon/nlp-review"
"jiphyeonjeon/season3" -> "jiphyeonjeon/season2"
"jiphyeonjeon/season3" -> "jiphyeonjeon/season1"
"laxatives/rl" -> "maybeluo/KDDCup2020-RL-1st-solution"
"maybeluo/KDDCup2020-RL-1st-solution" -> "laxatives/rl"
"maybeluo/KDDCup2020-RL-1st-solution" -> "szlhl1040/Vehicles-Dispatch-Simulator"
"gusdnd852/kochat" -> "gusdnd852/kocrawl"
"monologg/KoBERT-Transformers" -> "kmounlp/NER"
"monologg/KoBERT-Transformers" -> "monologg/DistilKoBERT"
"monologg/KoBERT-Transformers" -> "monologg/KoELECTRA"
"monologg/KoBERT-Transformers" -> "monologg/HanBert-Transformers"
"monologg/KoBERT-Transformers" -> "kakaobrain/KorNLUDatasets"
"monologg/KoBERT-Transformers" -> "tunib-ai/tunib-electra"
"monologg/KoBERT-Transformers" -> "monologg/KoBigBird"
"monologg/KoBERT-Transformers" -> "songys/AwesomeKorean_Data"
"monologg/KoBERT-Transformers" -> "haven-jeon/KoGPT2-chatbot"
"monologg/KoBERT-Transformers" -> "Huffon/nlp-startups"
"monologg/KoBERT-Transformers" -> "snunlp/KR-BERT"
"monologg/KoBERT-Transformers" -> "Huffon/klue-transformers-tutorial"
"monologg/KoBERT-Transformers" -> "monologg/KoELECTRA-Pipeline"
"monologg/KoBERT-Transformers" -> "SKT-AI/KoBART"
"monologg/KoBERT-Transformers" -> "ko-nlp/Korpora"
"kakaobrain/kortok" -> "pingpong-ai/dialogue-generation-models"
"Bricoler/chatbot-seminar" -> "Bricoler/time-series-analysis"
"Bricoler/chatbot-seminar" -> "Bricoler/simplex-method-matlab"
"rickiepark/nlp-with-pytorch" -> "rickiepark/nlp-with-transformers"
"monologg/HanBert-Transformers" -> "tbai2019/HanBert-54k-N"
"monologg/HanBert-Transformers" -> "monologg/DistilKoBERT"
"monologg/HanBert-Transformers" -> "monologg/KoBERT-Transformers"
"matthias-wright/flaxmodels" -> "n2cholas/jax-resnet"
"lovit/soyspacing" -> "jeongukjae/korean-spacing-model"
"lovit/soyspacing" -> "pingpong-ai/chatspace"
"lovit/soyspacing" -> "haven-jeon/PyKoSpacing"
"kmounlp/NER" -> "machinereading/KoreanNERCorpus"
"kmounlp/NER" -> "monologg/KoBERT-Transformers"
"jorditorresBCN/FirstContactWithTensorFlow" -> "rickiepark/first-steps-with-tensorflow"
"FuZer/Study_TensorFlow" -> "golbin/TensorFlow-ML-Exercises"
"FuZer/Study_TensorFlow" -> "tensorflowkorea/tensorflow-kr"
"FuZer/Study_TensorFlow" -> "nmhkahn/deep_learning_tutorial"
"FuZer/Study_TensorFlow" -> "NoNamedSelfDriveing/Segway"
"nmhkahn/deep_learning_tutorial" -> "sjchoi86/dl_tutorials_10weeks"
"nmhkahn/deep_learning_tutorial" -> "GunhoChoi/PyTorch-FastCampus"
"nmhkahn/deep_learning_tutorial" -> "aikorea/cs231n"
"nmhkahn/deep_learning_tutorial" -> "rudvlf0413/Dataset"
"nmhkahn/deep_learning_tutorial" -> "GunhoChoi/Kind_PyTorch_Tutorial"
"deep-diver/fastai-course-korean" -> "deep-diver/DeepModels"
"shbictai/narrativeKoGPT2" -> "gyunggyung/KoGPT2-FineTuning"
"snunlp/KR-BERT" -> "monologg/DistilKoBERT"
"snunlp/KR-BERT" -> "kakaobrain/KorNLUDatasets"
"snunlp/KR-BERT" -> "monologg/KoBERT-Transformers"
"snunlp/KR-BERT" -> "warnikchow/paraKQC"
"snunlp/KR-BERT" -> "ko-nlp/Korpora"
"snunlp/KR-BERT" -> "monologg/KoBERT-nsmc"
"snunlp/KR-BERT" -> "likejazz/korean-sentence-splitter"
"snunlp/KR-BERT" -> "SKT-AI/KoBART"
"snunlp/KR-BERT" -> "monologg/KoELECTRA"
"snunlp/KR-BERT" -> "Beomi/KcELECTRA"
"snunlp/KR-BERT" -> "koshort/pyeunjeon"
"lovit/textmining_dataset" -> "lovit/python_ml4nlp"
"hunkim/KaggleZeroToAll" -> "hunkim/PythonZeroToAll"
"hunkim/KaggleZeroToAll" -> "hunkim/ReinforcementZeroToAll"
"hunkim/KaggleZeroToAll" -> "sjchoi86/dl_tutorials_10weeks"
"shineware/KOMORAN" -> "shineware/PyKOMORAN"
"lovit/python_ml4nlp" -> "lovit/textmining_dataset"
"seopbo/nlp_tutorials" -> "lassl/lassl"
"devunt/10th-amendment" -> "puzzlet/constitution-kr"
"sooftware/lasr" -> "sooftware/generate-sec-dataset"
"stevejhkang/kubernetes-tutorial" -> "Dcom-KHU/Physics_Helper"
"ko-nlp/Open-korean-corpora" -> "kakaobrain/KorNLUDatasets"
"ko-nlp/Open-korean-corpora" -> "pingpong-ai/dialogue-generation-models"
"warnikchow/3i4k" -> "warnikchow/dlk2nlp"
"awesome-davian/lecture-videos" -> "awesome-davian/lab.home"
"TEAM-IKYO/Open-Domain-Question-Answering" -> "MINIONS-KR/Legal-Document-Summarization-Competition"
"MINIONS-KR/Legal-Document-Summarization-Competition" -> "TEAM-IKYO/Open-Domain-Question-Answering"
"awesome-davian/pixelsne" -> "awesome-davian/lab.home"
"awesome-davian/pixelsne" -> "awesome-davian/lecture-videos"
"awesome-davian/Text2Colors" ["l"="44.207,-15.409"]
"b-z/photo_recoloring" ["l"="44.191,-15.432"]
"awesome-davian/pixelsne" ["l"="44.234,-15.372"]
"hunkim/DeepLearningZeroToAll" ["l"="44.662,-14.978"]
"golbin/TensorFlow-Tutorials" ["l"="44.629,-14.923"]
"hunkim/PyTorchZeroToAll" ["l"="23.912,30.925"]
"WegraLee/deep-learning-from-scratch" ["l"="44.604,-15.015"]
"nlintz/TensorFlow-Tutorials" ["l"="23.401,31.096"]
"sjchoi86/Tensorflow-101" ["l"="23.551,31.106"]
"sarojaba/awesome-devblog" ["l"="44.918,-16.683"]
"teddylee777/machine-learning" ["l"="44.59,-15.079"]
"GunhoChoi/PyTorch-FastCampus" ["l"="44.612,-14.936"]
"Team-Neighborhood/I-want-to-study-Data-Science" ["l"="44.6,-15.055"]
"sjchoi86/dl_tutorials_10weeks" ["l"="44.689,-14.887"]
"hwalsuklee/tensorflow-generative-model-collections" ["l"="33.712,32.687"]
"chiphuyen/stanford-tensorflow-tutorials" ["l"="23.642,31.063"]
"leriomaggio/deep-learning-keras-tensorflow" ["l"="23.456,31.037"]
"konlpy/konlpy" ["l"="44.535,-14.986"]
"terryum/awesome-deep-learning-papers" ["l"="23.54,30.955"]
"CausalInferenceLab/Causal-Inference-with-Python" ["l"="44.534,-15.152"]
"sjchoi86/2022-1-deep-learning-applications" ["l"="44.507,-15.155"]
"kakao/recoteam" ["l"="23.066,36.895"]
"sooftware/Korean-PLM" ["l"="44.472,-15.147"]
"songys/AwesomeKorean_Data" ["l"="44.476,-15.059"]
"zzsza/Datascience-Interview-Questions" ["l"="44.559,-15.027"]
"boostcamp-ai-tech-4/ai-tech-interview" ["l"="44.542,-15.089"]
"zzsza/Kaggle-knowhow" ["l"="44.582,-14.996"]
"onlybooks/algorithm-interview" ["l"="44.815,-16.796"]
"ndb796/Deep-Learning-Paper-Review-and-Practice" ["l"="44.56,-15.067"]
"zzsza/Boostcamp-AI-Tech-Product-Serving" ["l"="44.527,-15.104"]
"WeareSoft/tech-interview" ["l"="44.853,-16.739"]
"ndb796/python-for-coding-test" ["l"="44.811,-16.82"]
"brave-people/brave-tech-interview" ["l"="44.873,-16.75"]
"SKTBrain/KoBERT" ["l"="44.503,-15.041"]
"leehosung/awesome-devteam" ["l"="44.89,-16.716"]
"jojoldu/junior-recruit-scheduler" ["l"="44.936,-16.777"]
"gyoogle/tech-interview-for-developer" ["l"="44.893,-16.809"]
"jungwoo-ha/WeeklyArxivTalk" ["l"="44.487,-15.102"]
"subinium/Misc-Cheatsheet" ["l"="44.53,-15.122"]
"kakaobrain/kogpt" ["l"="44.501,-15.081"]
"songys/Chatbot_data" ["l"="44.455,-15.095"]
"KLUE-benchmark/KLUE" ["l"="44.471,-15.08"]
"yukyunglee/Transformer_Survey_Study" ["l"="44.465,-15.132"]
"kakaobrain/pororo" ["l"="44.484,-15.075"]
"sooftware/k-startups" ["l"="44.448,-15.147"]
"SKT-AI/KoGPT2" ["l"="44.483,-15.048"]
"monologg/KoELECTRA" ["l"="44.459,-15.067"]
"ko-nlp/Korpora" ["l"="44.465,-15.054"]
"kakaobrain/minDALL-E" ["l"="44.483,-15.121"]
"SKT-AI/KoBART" ["l"="44.448,-15.066"]
"Beomi/KoAlpaca" ["l"="44.504,-15.101"]
"monologg/KoBigBird" ["l"="44.453,-15.12"]
"smilegate-ai/korean_unsmile_dataset" ["l"="44.495,-15.134"]
"kiyoungkim1/LMkor" ["l"="44.468,-15.098"]
"Beomi/KcBERT" ["l"="44.456,-15.044"]
"heartcored98/Standalone-DeepLearning" ["l"="44.536,-15.06"]
"rickiepark/handson-ml2" ["l"="44.579,-15.051"]
"brave-people/Dev-Event" ["l"="44.894,-16.768"]
"tony9402/baekjoon" ["l"="44.855,-16.802"]
"zzsza/Awesome-Mobility-Machine-Learning-Contents" ["l"="44.46,-14.74"]
"illidanlab/Simulator" ["l"="44.435,-14.68"]
"mktal/kddcup-starting-kit" ["l"="44.437,-14.701"]
"zzsza/kyle-school" ["l"="44.539,-14.952"]
"liulingbo918/CSTN" ["l"="44.435,-14.723"]
"zzsza/bigquery-tutorial" ["l"="44.469,-14.696"]
"corazzon/KaggleStruggle" ["l"="44.633,-15.028"]
"keon/3-min-pytorch" ["l"="44.575,-14.971"]
"insurgent92/CS231N_17_KOR_SUB" ["l"="44.622,-14.962"]
"Kyubyong/dl_career_faq" ["l"="44.52,-14.956"]
"ratsgo/embedding" ["l"="44.503,-15.024"]
"reinforcement-learning-kr/how_to_study_rl" ["l"="44.608,-14.83"]
"KaggleBreak/walkingkaggle" ["l"="44.603,-14.97"]
"WegraLee/deep-learning-from-scratch-2" ["l"="44.579,-15.035"]
"naver/nlp-challenge" ["l"="44.424,-14.992"]
"aikorea/cs231n" ["l"="44.675,-14.926"]
"nmhkahn/deep_learning_tutorial" ["l"="44.683,-14.9"]
"datanada/Awesome-Korean-NLP" ["l"="44.503,-14.983"]
"lovit/soynlp" ["l"="44.481,-15.008"]
"e9t/nsmc" ["l"="44.499,-15.01"]
"open-korean-text/open-korean-text" ["l"="44.493,-14.96"]
"papower1/Awesome-Korean-NLP-Papers" ["l"="44.424,-14.974"]
"kakao/khaiii" ["l"="44.513,-15.002"]
"kocohub/korean-hate-speech" ["l"="44.445,-15.053"]
"kakaobrain/KorNLUDatasets" ["l"="44.431,-15.055"]
"lovit/KR-WordRank" ["l"="44.448,-15.004"]
"lovit/textmining-tutorial" ["l"="44.453,-14.97"]
"haven-jeon/PyKoSpacing" ["l"="44.449,-15.022"]
"eagle705/pytorch-bert-crf-ner" ["l"="44.463,-15.031"]
"twitter/twitter-korean-text" ["l"="44.538,-14.921"]
"seoul-opengov/opengov" ["l"="44.626,-14.892"]
"shineware/komoran-2.0" ["l"="44.499,-14.88"]
"shin285/KOMORAN" ["l"="44.465,-14.895"]
"codeport/scala" ["l"="44.586,-14.865"]
"southkorea/southkorea-maps" ["l"="44.566,-14.936"]
"chanil1218/elasticsearch-analysis-korean" ["l"="44.509,-14.854"]
"haven-jeon/KoNLP" ["l"="44.455,-14.86"]
"gureum/gureum" ["l"="45.078,-16.773"]
"nolboo/nolboo.github.io" ["l"="45.003,-16.633"]
"milooy/hobbycoding" ["l"="44.63,-14.849"]
"jongman/algospot" ["l"="44.736,-14.939"]
"nhnent/fe.javascript" ["l"="44.969,-16.602"]
"plusfriend/auto_reply" ["l"="44.653,-14.934"]
"tensorflowkorea/tensorflow-kr" ["l"="44.655,-14.908"]
"seogi1004/jui" ["l"="43.817,-16.282"]
"southkorea/seoul-maps" ["l"="44.582,-14.895"]
"devsisters/multi-speaker-tacotron-tensorflow" ["l"="44.697,-14.839"]
"akic4op4/GNE" ["l"="44.723,-14.77"]
"ukairia777/tensorflow-nlp-tutorial" ["l"="44.512,-15.067"]
"jiphyeonjeon/season2" ["l"="44.435,-15.146"]
"PyTorchKorea/tutorials-kr" ["l"="44.592,-15.122"]
"veritas9872/PyTorch-Universal-Docker-Template" ["l"="44.396,-15.213"]
"AminRezaei0x443/PyTorch-LIT" ["l"="44.354,-15.281"]
"tunib-ai/large-scale-lm-tutorials" ["l"="44.459,-15.148"]
"rickiepark/handson-ml" ["l"="44.637,-15.011"]
"rickiepark/deep-learning-with-python-notebooks" ["l"="44.658,-15.02"]
"WegraLee/deep-learning-from-scratch-3" ["l"="44.624,-15.057"]
"NLP-kr/tensorflow-ml-nlp-tf2" ["l"="44.469,-15.041"]
"rickiepark/hg-mldl" ["l"="44.674,-15.094"]
"rickiepark/introduction_to_ml_with_python" ["l"="44.665,-15.005"]
"rickiepark/do-it-dl" ["l"="44.693,-15.051"]
"tunz/transformer-pytorch" ["l"="44.372,-15.235"]
"hyunwoongko/transformer" ["l"="44.424,-15.175"]
"EleutherAI/polyglot" ["l"="44.484,-15.152"]
"airobotlab/KoChatGPT" ["l"="44.473,-15.173"]
"deep-diver/Alpaca-LoRA-Serve" ["l"="27.307,31.173"]
"Huffon/nlp-startups" ["l"="44.432,-15.101"]
"tunib-ai/tunib-electra" ["l"="44.431,-15.157"]
"monologg/KoBERT-Transformers" ["l"="44.416,-15.068"]
"gyunggyung/Korea-Startups" ["l"="44.357,-15.147"]
"Huffon/klue-transformers-tutorial" ["l"="44.455,-15.135"]
"mingrammer/git-tips" ["l"="44.944,-16.656"]
"rlcode/reinforcement-learning-kr" ["l"="44.622,-14.87"]
"golbin/TensorFlow-ML-Exercises" ["l"="44.76,-14.9"]
"hubaimaster/aws-interface" ["l"="44.517,-14.671"]
"dbdydgur2244/GoodForHealth" ["l"="44.517,-14.648"]
"taeseunglee/taeseung_vimrc" ["l"="44.517,-14.714"]
"bluedisk/hangul-toolkit" ["l"="44.409,-15.004"]
"kaniblu/hangul-utils" ["l"="44.36,-15.033"]
"coolengineer/sejong-corpus" ["l"="44.401,-14.967"]
"naver/kor2vec" ["l"="44.397,-14.986"]
"likejazz/korean-sentence-splitter" ["l"="44.397,-15.017"]
"rhobot/Hangulpy" ["l"="44.364,-14.965"]
"pingpong-ai/chatspace" ["l"="44.386,-15.001"]
"ssut/py-hanspell" ["l"="44.433,-15.022"]
"bluedisk/korean_char_rnn" ["l"="44.362,-14.952"]
"kakaobrain/nlp-paper-reading" ["l"="44.455,-15.08"]
"clovaai/AdamP" ["l"="44.357,-15.12"]
"dhlee347/pytorchic-bert" ["l"="44.464,-15.013"]
"graykode/ALBERT-Pytorch" ["l"="44.536,-15.009"]
"naver/claf" ["l"="44.384,-14.988"]
"modulabs/NLP-bootcamp" ["l"="44.439,-14.974"]
"codertimo/BERT-pytorch" ["l"="30.004,32.522"]
"deep-diver/Machine-Learning-Yearning-Korean-Translation" ["l"="44.582,-14.927"]
"Curt-Park/reinforcement_learning_an_introduction" ["l"="44.596,-14.947"]
"YoongiKim/Walk-Assistant" ["l"="44.596,-14.912"]
"deeplearningzerotoall/TensorFlow" ["l"="44.599,-14.996"]
"JONGGON/Tensorflow_Advanced_Tutorials" ["l"="44.694,-14.969"]
"Bricoler/nlp-tensorflow" ["l"="44.737,-14.983"]
"sooftware/KoSpeech" ["l"="44.37,-15.09"]
"clovaai/ClovaCall" ["l"="44.386,-15.077"]
"sooftware/openspeech" ["l"="44.306,-15.164"]
"goodatlas/zeroth" ["l"="44.416,-15.02"]
"sooftware/ksponspeech" ["l"="44.311,-15.12"]
"sooftware/KsponSpeech-preprocess" ["l"="44.317,-15.104"]
"Kyubyong/g2pK" ["l"="44.322,-15.042"]
"fd873630/RNN-Transducer" ["l"="44.298,-15.097"]
"sooftware/conformer" ["l"="0.41,39.823"]
"jiphyeonjeon/nlp-review" ["l"="44.428,-15.084"]
"hchung12/espnet-asr" ["l"="44.325,-15.121"]
"sooftware/Naver-AI-Hackathon-Speech" ["l"="44.327,-15.093"]
"sooftware/deepspeech2" ["l"="44.195,-15.261"]
"sooftware/generate-sec-dataset" ["l"="44.218,-15.241"]
"sooftware/pytorch-lr-scheduler" ["l"="44.206,-15.245"]
"sooftware/lasr" ["l"="44.243,-15.222"]
"sooftware/speech-transformer" ["l"="44.23,-15.253"]
"hyunwoongko/kss" ["l"="44.441,-15.082"]
"Beomi/KcELECTRA" ["l"="44.432,-15.071"]
"sjchoi86/advanced-tensorflow" ["l"="44.683,-14.863"]
"hunkim/KaggleZeroToAll" ["l"="44.705,-14.854"]
"Curt-Park/cs231n_assignments" ["l"="44.721,-14.832"]
"TensorFlowKR/awesome_tensorflow_implementations" ["l"="44.699,-14.909"]
"FuZer/Study_TensorFlow" ["l"="44.722,-14.908"]
"TensorFlowKR/MLJejuCamp" ["l"="44.727,-14.85"]
"sjchoi86/Deep-Learning-101" ["l"="23.549,31.24"]
"GunhoChoi/Kind_PyTorch_Tutorial" ["l"="44.711,-14.873"]
"hunkim/effective_python_notebook" ["l"="44.764,-14.867"]
"lovit/soyspacing" ["l"="44.414,-14.984"]
"spellcheck-ko/hunspell-dict-ko" ["l"="44.374,-14.942"]
"HowookJeong/elasticsearch-analysis-arirang" ["l"="44.477,-14.872"]
"korlucene/arirang-analyzer-es-plugin" ["l"="44.473,-14.837"]
"KerasKorea/KEKOxTutorial" ["l"="44.563,-14.96"]
"KerasKorea/KerasObjectDetector" ["l"="44.532,-14.877"]
"keras-team/keras-docs-ko" ["l"="44.535,-14.85"]
"jskDr/keraspp" ["l"="44.608,-14.9"]
"jaimyoung/ipds-kr" ["l"="44.56,-14.911"]
"KerasKorea/KerasKorea.github.io" ["l"="44.546,-14.898"]
"NLP-kr/tensorflow-ml-nlp" ["l"="44.484,-14.992"]
"haven-jeon/KoGPT2-chatbot" ["l"="44.42,-15.094"]
"gyunggyung/KoGPT2-FineTuning" ["l"="44.41,-15.079"]
"uoneway/Text-Summarization-Repo" ["l"="44.444,-15.107"]
"KB-Bank-AI/KB-ALBERT-KO" ["l"="44.408,-15.058"]
"gilbutITbook/006975" ["l"="44.722,-15.041"]
"rickiepark/python-machine-learning-book-2nd-edition" ["l"="44.707,-15.028"]
"rickiepark/GDL_code" ["l"="44.687,-15.026"]
"GunhoChoi/Kind-PyTorch-Tutorial" ["l"="44.678,-14.945"]
"GunhoChoi/Deep-Learning-For-Beginners" ["l"="28.177,32.618"]
"KLUE-benchmark/KLUE-baseline" ["l"="44.424,-15.141"]
"sjchoi86/bayes-nn" ["l"="24.051,34.614"]
"DSKSD/Pytorch_Fast_Campus_2018" ["l"="44.521,-14.894"]
"monologg/DistilKoBERT" ["l"="44.406,-15.029"]
"deeplearningzerotoall/PyTorch" ["l"="44.556,-15.045"]
"deeplearningzerotoall/season2" ["l"="44.616,-15.032"]
"d2l-ai/d2l-ko" ["l"="44.663,-15.067"]
"jayparks/transformer" ["l"="30.153,32.421"]
"paul-hyun/transformer-evolution" ["l"="44.405,-15.237"]
"SamLynnEvans/Transformer" ["l"="30.016,32.466"]
"maxjcohen/transformer" ["l"="22.329,35.932"]
"sooftware/attentions" ["l"="44.394,-15.262"]
"jadore801120/attention-is-all-you-need-pytorch" ["l"="30.059,32.495"]
"jaketae/storyteller" ["l"="44.449,-15.25"]
"tunib-ai/oslo" ["l"="44.443,-15.175"]
"lassl/lassl" ["l"="44.443,-15.159"]
"hyunwoongko/kochat" ["l"="44.432,-15.113"]
"hyunwoongko/kocrawl" ["l"="44.377,-15.152"]
"hyunwoongko/kobart-transformers" ["l"="44.404,-15.098"]
"hyunwoongko/openchat" ["l"="44.416,-15.128"]
"tunib-ai/parallelformers" ["l"="44.437,-15.132"]
"kakaobrain/kortok" ["l"="44.381,-15.051"]
"kakaobrain/rq-vae-transformer" ["l"="34.477,28.967"]
"kakaobrain/coyo-dataset" ["l"="31.781,34.814"]
"JungWinter/yellowid-flask" ["l"="44.706,-14.939"]
"NAVER-CAMPUS-HACKDAY/common" ["l"="44.855,-16.598"]
"purpleworks/delibird" ["l"="45.293,-16.809"]
"cheese10yun/KaKaoBot-Node" ["l"="44.709,-14.953"]
"shbictai/narrativeKoGPT2" ["l"="44.353,-15.095"]
"seujung/KoBART-summarization" ["l"="44.414,-15.104"]
"MrBananaHuman/KorGPT2Tutorial" ["l"="44.337,-15.103"]
"sohyeon98720/KoGPT2-finetuning" ["l"="44.372,-15.107"]
"nawnoes/WellnessConversation-LanguageModel" ["l"="44.398,-15.113"]
"rickiepark/first-steps-with-tensorflow" ["l"="44.666,-14.89"]
"jorditorresBCN/FirstContactWithTensorFlow" ["l"="44.659,-14.854"]
"jorditorresBCN/FirstContactWithTensorFlow-2ndEdition" ["l"="44.697,-14.873"]
"naver-ai/pit" ["l"="44.22,-15.128"]
"naver-ai/calm" ["l"="44.206,-15.144"]
"naver-ai/PfLayer" ["l"="44.223,-15.153"]
"naver-ai/pcme" ["l"="44.174,-15.141"]
"naver-ai/eccv-caption" ["l"="44.183,-15.128"]
"Andrew-Qibin/VisionPermutator" ["l"="34.701,36.01"]
"coallaoh/Principles" ["l"="44.183,-15.108"]
"hunkim/ReinforcementZeroToAll" ["l"="44.67,-14.83"]
"rlcode/reinforcement-learning-kr-v2" ["l"="44.637,-14.821"]
"jcwleo/Reinforcement_Learning" ["l"="44.663,-14.802"]
"utilForever/rl-paper-study" ["l"="44.622,-14.772"]
"reinforcement-learning-kr/pg_travel" ["l"="25.099,35.983"]
"seungeunrho/RLfrombasics" ["l"="44.616,-14.807"]
"quantylab/rltrader" ["l"="33.483,-28.527"]
"medipixel/rl_algorithms" ["l"="25.172,35.931"]
"vuski/admdongkor" ["l"="44.555,-14.87"]
"OhmyNews/12-14_kapf" ["l"="44.559,-14.89"]
"teampopong/pokr.kr" ["l"="44.634,-14.949"]
"corazzon/OpenDataWrangling" ["l"="44.649,-15.039"]
"PinkWink/DataScience" ["l"="44.629,-14.989"]
"nforge/devnote" ["l"="44.645,-14.768"]
"Kevin-Lee/modern-java-untold" ["l"="44.702,-16.592"]
"enshahar/BasicFPinScala" ["l"="44.552,-16.561"]
"nforge/yobi" ["l"="43.846,-16.264"]
"loom/loom-core" ["l"="43.958,-16.26"]
"hangum/TadpoleForDBTools" ["l"="43.853,-16.237"]
"corazzon/petitionWrangling" ["l"="44.671,-15.036"]
"JoungheeKim/K-wav2vec" ["l"="44.313,-15.088"]
"warnikchow/3i4k" ["l"="44.361,-14.984"]
"scarletcho/KoG2P" ["l"="44.313,-15.018"]
"scarletcho/KoLM" ["l"="44.326,-15.001"]
"lucidrains/PaLM-pytorch" ["l"="44.445,-15.224"]
"lucidrains/PaLM-jax" ["l"="44.445,-15.281"]
"hpcaitech/PaLM-colossalai" ["l"="27.742,31.14"]
"bigscience-workshop/Megatron-DeepSpeed" ["l"="27.564,31.169"]
"lucidrains/flamingo-pytorch" ["l"="31.729,34.772"]
"google-research/FLAN" ["l"="27.563,31.22"]
"lucidrains/RETRO-pytorch" ["l"="25.886,29.303"]
"microsoft/DeepSpeed-MII" ["l"="27.621,31.119"]
"google-research/longt5" ["l"="27.873,31.197"]
"google-research/t5x" ["l"="27.576,31.154"]
"lucidrains/CoCa-pytorch" ["l"="31.746,34.796"]
"EleutherAI/oslo" ["l"="44.469,-15.195"]
"searle-j/KOTE" ["l"="44.503,-15.178"]
"lovit/huggingface_konlpy" ["l"="44.401,-15.085"]
"hyunwoongko/pecab" ["l"="44.461,-15.165"]
"changwoo/hunspell-dict-ko" ["l"="44.322,-14.898"]
"wookayin/tensorflow-talk-debugging" ["l"="44.861,-14.762"]
"wookayin/TensorFlowKR-2017-talk-bestpractice" ["l"="44.766,-14.814"]
"aicodes/tf-bestpractice" ["l"="44.911,-14.736"]
"tmulc18/Distributed-TensorFlow-Guide" ["l"="27.836,35.223"]
"hyunjun/bookmarks" ["l"="44.463,-14.993"]
"naver-ai/relabel_imagenet" ["l"="44.246,-15.134"]
"clovaai/rebias" ["l"="30.345,35.041"]
"clovaai/rexnet" ["l"="44.249,-15.159"]
"clovaai/wsolevaluation" ["l"="30.683,37.534"]
"clovaai/tunit" ["l"="33.246,32.84"]
"Alibaba-MIIL/ASL" ["l"="33.632,36.523"]
"clovaai/overhaul-distillation" ["l"="30.855,35.461"]
"google-research/reassessed-imagenet" ["l"="24.119,34.387"]
"VumBleBot/odqa_baseline_code" ["l"="44.426,-15.249"]
"fuzzythecat/awesome-spacer" ["l"="44.519,-14.768"]
"carpedm20/MemN2N-tensorflow" ["l"="27.156,34.371"]
"jazzsaxmafia/show_attend_and_tell.tensorflow" ["l"="31.5,34.5"]
"jazzsaxmafia/show_and_tell.tensorflow" ["l"="31.539,34.48"]
"google/prettytensor" ["l"="27.107,34.226"]
"therne/dmn-tensorflow" ["l"="27.2,34.384"]
"devunt/10th-amendment" ["l"="44.765,-14.695"]
"perillamint/GNE" ["l"="44.733,-14.705"]
"theeluwin/textrankr" ["l"="44.785,-14.723"]
"xnuk/K-SSVM-node" ["l"="44.738,-14.745"]
"hunkim/DeepLearningStars" ["l"="44.748,-14.847"]
"hunkim/ml" ["l"="44.798,-14.85"]
"wookayin/TensorflowKR-2016-talk-debugging" ["l"="44.822,-14.827"]
"hunkim/PythonZeroToAll" ["l"="44.74,-14.825"]
"open-korean-text/elasticsearch-analysis-openkoreantext" ["l"="44.485,-14.9"]
"lovit/customized_konlpy" ["l"="44.455,-14.936"]
"bab2min/Kiwi" ["l"="44.431,-15.037"]
"nunalang/nuna" ["l"="44.737,-14.669"]
"clovaai/dmfont" ["l"="33.242,32.347"]
"mrT23/TResNet" ["l"="33.772,36.527"]
"clovaai/assembled-cnn" ["l"="33.843,36.58"]
"clovaai/StatAssist-GradBoost" ["l"="44.218,-15.19"]
"implus/GFocalV2" ["l"="34.785,35.593"]
"szq0214/MEAL-V2" ["l"="30.884,35.455"]
"idstcv/GPU-Efficient-Networks" ["l"="44.19,-15.201"]
"naver-ai/coco-annotation-tool" ["l"="44.199,-15.166"]
"naver-ai/imagenet-annotation-tool" ["l"="44.19,-15.15"]
"naver-ai/NeglectedFreeLunch" ["l"="44.188,-15.165"]
"clovaai/generative-evaluation-prdc" ["l"="28.211,32.707"]
"taki0112/AdamP-Tensorflow" ["l"="44.295,-15.133"]
"sjhwang82/AdvancedML" ["l"="44.325,-15.235"]
"sjhwang82/DeepLearning" ["l"="44.295,-15.255"]
"seominjoon/kaist-ai605" ["l"="44.309,-15.268"]
"awesome-davian/Paper-study" ["l"="44.267,-15.329"]
"taeoh-kim/pr12" ["l"="31.993,32.981"]
"haebeom-lee/l2b" ["l"="44.282,-15.284"]
"juho-lee/bnp" ["l"="31.237,32.915"]
"optimass/continual_learning_papers" ["l"="30.079,35.857"]
"hwalsuklee/awesome-deep-vision-web-demo" ["l"="33.127,32.379"]
"sjchoi86/dl_tutorials" ["l"="23.447,31.132"]
"bi-lab/deeplearning_tutorial" ["l"="44.705,-14.807"]
"bab2min/corpus" ["l"="44.337,-15.062"]
"ZIZUN/korean-malicious-comments-dataset" ["l"="44.305,-15.048"]
"visionNoob/CS231N_17_KOR_SUB" ["l"="44.568,-15.084"]
"songys/CS224N_17_KOR_SUB" ["l"="44.58,-15.018"]
"thunlp/SOS4NLP" ["l"="44.464,-15.115"]
"LG-NLP/KorWikiTableQuestions" ["l"="44.487,-15.184"]
"AIRC-KETI/ke-t5" ["l"="44.479,-15.135"]
"kimwoonggon/publicservant_AI" ["l"="44.378,-15.064"]
"rlcode/paper-reviews" ["l"="44.681,-14.767"]
"sjchoi86/upstage-basic-deeplearning" ["l"="44.61,-15.164"]
"jinmang2/boostcamp_ai_tech_2" ["l"="44.584,-15.142"]
"thejungwon/Boostcamp-CV-Serving" ["l"="44.56,-15.134"]
"toriving/KoEDA" ["l"="44.475,-15.161"]
"boostcamp-AI-Tech-alumni/Events" ["l"="44.572,-15.132"]
"wikibook/tf2" ["l"="44.701,-15.009"]
"Insight-book/data-science-from-scratch" ["l"="44.718,-15.064"]
"zzsza/Perfect-Guide-about-Machine-Learning-Study" ["l"="44.512,-14.905"]
"zzsza/Datascience_School" ["l"="44.509,-14.921"]
"MLOpsKR/Awesome-MLOps-Contents" ["l"="24.085,30.363"]
"ropas/pytea" ["l"="44.418,-15.222"]
"seopbo/nlp_tutorials" ["l"="44.436,-15.195"]
"Lilcob/-DL_PaperReadingMeeting" ["l"="44.517,-15.138"]
"kjsman/stable-diffusion-pytorch" ["l"="44.488,-15.205"]
"eubinecto/the-clean-transformer" ["l"="44.507,-15.266"]
"hunkim/deep_architecture_genealogy" ["l"="44.733,-14.878"]
"mila-udem/welcome_tutorials" ["l"="30.137,32.518"]
"google/tangent" ["l"="25.389,33.627"]
"kimhc6028/relational-networks" ["l"="31.732,34.429"]
"RedditSota/state-of-the-art-result-for-machine-learning-problems" ["l"="23.542,31.075"]
"yunjey/StarGAN" ["l"="33.625,32.692"]
"andrewgordonwilson/bayesgan" ["l"="25.373,33.55"]
"Kyubyong/nlp_tasks" ["l"="29.995,32.685"]
"facebookresearch/clevr-iep" ["l"="31.613,34.404"]
"deep-diver/CIFAR10-img-classification-tensorflow" ["l"="44.539,-14.786"]
"deep-diver/DeepModels" ["l"="44.56,-14.839"]
"reinforcement-learning-kr/2021_RLKR_Drone_Delivery_Challenge_with_Unity" ["l"="44.611,-14.732"]
"utilForever/2021-KAIST-Include-AlphaZero" ["l"="44.639,-14.74"]
"utilForever/2019-OSS-Summer-RL" ["l"="44.631,-14.724"]
"kakaoenterprise/JORLDY" ["l"="44.602,-14.755"]
"utilForever/RustyFlow" ["l"="44.634,-14.705"]
"Junyoungpark/ReinforcementLearningAtoZ" ["l"="44.641,-14.795"]
"utilForever/2022-Korea-Rust-Backend" ["l"="-35.372,-16.71"]
"psh01087/Paper-Study" ["l"="44.266,-15.355"]
"awesome-davian/lecture-videos" ["l"="44.249,-15.357"]
"forkonlp/N2H4" ["l"="44.405,-14.886"]
"forkonlp/DNH4" ["l"="44.394,-14.851"]
"mrchypark/N2H4" ["l"="44.382,-14.829"]
"SungjoonPark/KoreanWordVectors" ["l"="44.398,-14.949"]
"mrchypark/tqk" ["l"="44.369,-14.843"]
"NamyounKim/NLP4kec" ["l"="44.382,-14.86"]
"ndb796/Python-Data-Analysis-and-Image-Processing-Tutorial" ["l"="44.629,-15.097"]
"ndb796/Fast_Campus_Algorithm_Lecture_Notes" ["l"="44.754,-16.837"]
"yoonkt200/python-data-analysis" ["l"="44.682,-15.139"]
"gilbutITbook/007022" ["l"="44.748,-15.039"]
"smilegate-ai/HuLiC" ["l"="44.521,-15.168"]
"smilegate-ai/korean_smile_style_dataset" ["l"="44.52,-15.184"]
"jason9693/APEACH" ["l"="44.489,-15.169"]
"cosmoquester/2021-dialogue-summary-competition" ["l"="44.451,-15.166"]
"EleutherAI/multilingual-transfer" ["l"="44.461,-15.184"]
"tunib-ai/DKTC" ["l"="44.448,-15.192"]
"tunib-ai/KMWP" ["l"="44.424,-15.195"]
"tunib-ai/transformers" ["l"="44.349,-15.179"]
"google-aai/sc17" ["l"="44.78,-14.926"]
"lovit/textrank" ["l"="44.398,-14.927"]
"lovit/soykeyword" ["l"="44.421,-14.952"]
"uoneway/KoBertSum" ["l"="44.385,-15.128"]
"YBIGTA/DeepNLP-Study" ["l"="44.439,-14.891"]
"YBIGTA/Deep_learning" ["l"="44.421,-14.846"]
"BoostcampAITech/lecture-note-python-basics-for-ai" ["l"="44.65,-15.195"]
"pilsung-kang/Text-Analytics" ["l"="44.366,-15.173"]
"sangyun884/Diffusion-Models-Seminar" ["l"="34.84,28.854"]
"yukyunglee/transformers-resources" ["l"="44.511,-15.193"]
"yukyunglee/Awesome-Dialogue-State-Tracking" ["l"="44.404,-15.164"]
"idstcv/ZenNAS" ["l"="28.499,34.388"]
"PinkWink/playing_data" ["l"="44.679,-14.997"]
"deepseasw/nlp_model_list" ["l"="44.416,-15.151"]
"jungyeul/korean-parallel-corpora" ["l"="44.342,-14.986"]
"ko-nlp/Open-korean-corpora" ["l"="44.366,-15.046"]
"JDongian/python-jamo" ["l"="44.282,-15.024"]
"koalanlp/koalanlp" ["l"="44.368,-15.004"]
"rickiepark/machine-learning-with-python-cookbook" ["l"="44.729,-15.011"]
"sooftware/kospeech" ["l"="44.33,-15.141"]
"openspeech-team/openspeech" ["l"="0.493,39.794"]
"sooftware/Speech-Recognition-Tutorial" ["l"="44.285,-15.174"]
"alsrb0607/KoreanSTT" ["l"="44.293,-15.151"]
"amueller/odscon-2015" ["l"="44.697,-15.077"]
"corazzon/open-data-analysis-basic" ["l"="44.674,-15.054"]
"tbai2019/HanBert-54k-N" ["l"="44.348,-15"]
"monologg/HanBert-Transformers" ["l"="44.374,-15.027"]
"domyounglee/korbert-mecab-multigpu" ["l"="44.295,-14.978"]
"j-marple-dev/model_compression" ["l"="44.358,-14.874"]
"aisolab/nlp_implementation" ["l"="44.433,-14.939"]
"deep-diver/fastai-course-korean" ["l"="44.57,-14.856"]
"reinforcement-learning-kr/Unity_ML_Agents" ["l"="44.594,-14.797"]
"dongminlee94/Samsung-DRL-Code" ["l"="44.58,-14.768"]
"zzsza/Deep_Learning_starting_with_the_latest_papers" ["l"="44.574,-14.794"]
"reinforcement-learning-kr/rl_bootcamp" ["l"="44.603,-14.783"]
"kakao/buffalo" ["l"="28.627,31.455"]
"kmounlp/NER" ["l"="44.39,-15.032"]
"graykode/commit-autosuggestions" ["l"="44.505,-15.115"]
"jason9693/Soongsil-BERT" ["l"="44.559,-15.153"]
"graykode/toeicbert" ["l"="44.583,-15.183"]
"graykode/matorage" ["l"="44.568,-15.17"]
"stevejhkang/kubernetes-tutorial" ["l"="44.548,-15.166"]
"kiyoungkim1/LM-kor" ["l"="44.554,-15.183"]
"MrBananaHuman/KorNlpTutorial" ["l"="44.476,-14.975"]
"rickiepark/nlp-with-pytorch" ["l"="44.607,-15.205"]
"subinium/Problem-Solving" ["l"="44.579,-15.156"]
"rkm0959/Number_Theory_in_CP_PS" ["l"="44.999,-17.016"]
"bab2min/kiwipiepy" ["l"="44.386,-15.099"]
"naver-ai/c3-gan" ["l"="44.162,-15.172"]
"naver-ai/w-ood" ["l"="30.744,37.648"]
"naver-ai/carecall-corpus" ["l"="44.532,-15.221"]
"naver-ai/carecall-memory" ["l"="44.558,-15.254"]
"utilForever/cpp-developer-roadmap" ["l"="44.641,-14.661"]
"kakaobrain/brain_agent" ["l"="44.596,-14.702"]
"sail-sg/envpool" ["l"="25.356,35.827"]
"reinforcement-learning-kr/Unity_ML_Agents_2.0" ["l"="44.584,-14.722"]
"chagmgang/distributed_reinforcement_learning" ["l"="25.202,35.91"]
"twni2016/pomdp-baselines" ["l"="25.351,35.748"]
"2runo/Curse-detection-data" ["l"="44.34,-15.045"]
"HGU-DLLAB/Korean-FastSpeech2-Pytorch" ["l"="0.152,40.053"]
"Kyubyong/paradigm" ["l"="44.274,-15.048"]
"gusdnd852/kochat" ["l"="44.33,-15.17"]
"haven-jeon/KoSpacing" ["l"="44.453,-14.916"]
"jeongukjae/korean-spacing-model" ["l"="44.381,-14.96"]
"emorynlp/ud-korean" ["l"="44.338,-14.971"]
"warnikchow/dlk2nlp" ["l"="44.346,-14.952"]
"lqez/awesome-hangul" ["l"="44.231,-15.013"]
"disjukr/just-news" ["l"="44.178,-15.005"]
"warnikchow/paraKQC" ["l"="44.361,-15.059"]
"snunlp/KR-BERT" ["l"="44.396,-15.045"]
"lumyjuwon/KoreaNewsCrawler" ["l"="44.426,-15.006"]
"leechanwoo/Tensorflow-projects" ["l"="44.777,-14.832"]
"datitran/Object-Detector-App" ["l"="44.796,-14.794"]
"YBIGTA/data-science-2018" ["l"="44.405,-14.812"]
"monologg/KoBERT-nsmc" ["l"="44.341,-15.018"]
"aisolab/nlp_classification" ["l"="44.378,-14.971"]
"mrlee23/KoreanSentimentAnalyzer" ["l"="44.273,-14.911"]
"park1200656/KnuSentiLex" ["l"="44.305,-14.933"]
"carpedm20/multi-speaker-tacotron-tensorflow" ["l"="0.64,40.179"]
"Kyubyong/deepvoice3" ["l"="0.553,40.158"]
"kastnerkyle/multi-speaker-tacotron-tensorflow" ["l"="0.767,40.246"]
"chris-chris/mario-rl-tutorial" ["l"="44.733,-14.795"]
"GSByeon/multi-speaker-tacotron-tensorflow" ["l"="0.724,40.217"]
"Huffon/NLP101" ["l"="44.42,-15.048"]
"Huffon/nlp-various-tutorials" ["l"="44.358,-15.076"]
"koshort/pyeunjeon" ["l"="44.323,-14.98"]
"pingpong-ai/dialogue-generation-models" ["l"="44.356,-15.018"]
"monologg/KoBERT-NER" ["l"="44.294,-15.002"]
"hunkim/DeepRL-Agents" ["l"="44.685,-14.799"]
"szlhl1040/Vehicles-Dispatch-Simulator" ["l"="44.418,-14.63"]
"Jinjiarui/CoRide" ["l"="44.41,-14.654"]
"hitsuji5/fleet-sim" ["l"="44.435,-14.654"]
"lovit/python_ml4nlp" ["l"="44.421,-14.912"]
"lovit/textmining_dataset" ["l"="44.436,-14.917"]
"lovit/fastcampus_textml_blogs" ["l"="44.42,-14.93"]
"gusdnd852/kocrawl" ["l"="44.307,-15.193"]
"sjchoi86/dl_tutorials_4th" ["l"="44.828,-14.899"]
"FuZer/StudyTensorFlow" ["l"="44.798,-14.891"]
"golbin/TensorFlow-MNIST" ["l"="44.804,-14.909"]
"jaketae/koclip" ["l"="44.356,-15.203"]
"catSirup/KorEDA" ["l"="44.524,-15.255"]
"jucho2725/ktextaug" ["l"="44.544,-15.295"]
"jason9693/oslo-kogpt-finetunig" ["l"="44.476,-15.243"]
"EleutherAI/dps" ["l"="44.491,-15.249"]
"hyunwoongko/python-mecab-kor" ["l"="44.471,-15.223"]
"lassl/kolmev" ["l"="44.488,-15.232"]
"sooftware/luna-transformer" ["l"="44.266,-15.201"]
"sooftware/RNN-Transducer" ["l"="0.628,39.71"]
"sooftware/Fairseq-Listen-Attend-Spell" ["l"="44.39,-15.294"]
"sooftware/transformer" ["l"="44.378,-15.302"]
"chagmgang/pytorch_ppo_rl" ["l"="24.966,35.955"]
"hwk0702/keras2torch" ["l"="44.543,-15.24"]
"9bow/PyTorch-tutorials-kr" ["l"="44.487,-15.024"]
"ayaka14732/tpu-starter" ["l"="44.483,-15.283"]
"ayaka14732/jax-smi" ["l"="23.447,33.65"]
"matthias-wright/flaxmodels" ["l"="44.495,-15.36"]
"taki0112/Tensorflow2-Cookbook" ["l"="44.337,-14.85"]
"marload/deep-rl-tf2" ["l"="44.294,-14.807"]
"chris-chris/mlops-example" ["l"="24.003,30.402"]
"UniversalDependencies/UD_Korean-Kaist" ["l"="44.301,-14.956"]
"uwnlp/piqa" ["l"="26.017,30.318"]
"nforge/nforge4" ["l"="44.669,-14.74"]
"nforge/hive" ["l"="44.658,-14.727"]
"VumBleBot/Group-Activity" ["l"="44.42,-15.283"]
"TEAM-IKYO/Open-Domain-Question-Answering" ["l"="44.418,-15.311"]
"marload/dist-rl-tf2" ["l"="44.277,-14.79"]
"smartstudy/smartstudy-home" ["l"="44.774,-14.953"]
"akngs/ecogwiki" ["l"="43.841,-16.133"]
"Bricoler/chatbot-seminar" ["l"="44.784,-14.995"]
"ajinkyakulkarni14/TED-Multilingual-Parallel-Corpus" ["l"="44.23,-14.935"]
"ajinkyakulkarni14/How-I-Extracted-TED-talks-for-parallel-Corpus-" ["l"="44.198,-14.929"]
"neulab/word-embeddings-for-nmt" ["l"="44.186,-14.908"]
"haebeom-lee/metadrop" ["l"="44.259,-15.303"]
"puzzlet/constitution-kr" ["l"="44.782,-14.666"]
"clovaai/som-dst" ["l"="28.211,28.907"]
"DSBA-Lab/CodeLab" ["l"="44.374,-15.195"]
"salesforce/coco-dst" ["l"="28.223,28.888"]
"lonePatient/albert_pytorch" ["l"="32.186,30.217"]
"sooftware/nlp-tasks" ["l"="44.457,-15.203"]
"jiphyeonjeon/season1" ["l"="44.406,-15.181"]
"shineware/PyKOMORAN" ["l"="44.429,-14.821"]
"e9t/konlpy" ["l"="44.447,-14.805"]
"boychaboy/KOLD" ["l"="44.513,-15.21"]
"paust-team/pko-t5" ["l"="44.531,-15.196"]
"dongjun-Lee/kor2vec" ["l"="44.345,-14.929"]
"haven-jeon/LegalQA" ["l"="44.393,-15.143"]
"jinmang2/DOOLY" ["l"="44.511,-15.228"]
"jiphyeonjeon/season3" ["l"="44.393,-15.174"]
"modulabs/beyondBERT" ["l"="44.319,-15.067"]
"theeluwin/lexrankr" ["l"="44.808,-14.706"]
"what-studio/tossi" ["l"="-29.779,-19.547"]
"pingpong-ai/kg-cvae-generator" ["l"="44.35,-14.97"]
"sgunderscore/hatescore-korean-hate-speech" ["l"="44.556,-15.212"]
"laxatives/rl" ["l"="44.4,-14.575"]
"maybeluo/KDDCup2020-RL-1st-solution" ["l"="44.406,-14.595"]
"monologg/KoELECTRA-Pipeline" ["l"="44.342,-15.08"]
"Bricoler/time-series-analysis" ["l"="44.802,-15.005"]
"Bricoler/simplex-method-matlab" ["l"="44.808,-14.996"]
"rickiepark/nlp-with-transformers" ["l"="44.638,-15.241"]
"n2cholas/jax-resnet" ["l"="44.501,-15.4"]
"machinereading/KoreanNERCorpus" ["l"="44.329,-15.024"]
"NoNamedSelfDriveing/Segway" ["l"="44.754,-14.92"]
"rudvlf0413/Dataset" ["l"="44.741,-14.918"]
"shineware/KOMORAN" ["l"="44.404,-14.773"]
"Dcom-KHU/Physics_Helper" ["l"="44.568,-15.195"]
"awesome-davian/lab.home" ["l"="44.247,-15.377"]
"MINIONS-KR/Legal-Document-Summarization-Competition" ["l"="44.414,-15.335"]
}