digraph G {
"gboeing/osmnx" -> "gboeing/osmnx-examples"
"gboeing/osmnx" -> "geopandas/geopandas"
"gboeing/osmnx" -> "gboeing/urban-data-science"
"gboeing/osmnx" -> "python-visualization/folium"
"gboeing/osmnx" -> "anitagraser/movingpandas"
"gboeing/osmnx" -> "sacridini/Awesome-Geospatial"
"gboeing/osmnx" -> "pysal/pysal"
"gboeing/osmnx" -> "Toblerity/Shapely"
"gboeing/osmnx" -> "keplergl/kepler.gl" ["e"=1]
"gboeing/osmnx" -> "cyang-kth/fmm" ["e"=1]
"gboeing/osmnx" -> "HTenkanen/pyrosm"
"gboeing/osmnx" -> "scikit-mobility/scikit-mobility"
"gboeing/osmnx" -> "Project-OSRM/osrm-backend" ["e"=1]
"gboeing/osmnx" -> "UDST/pandana"
"gboeing/osmnx" -> "valhalla/valhalla" ["e"=1]
"gboeing/osmnx-examples" -> "gboeing/osmnx"
"gboeing/osmnx-examples" -> "gboeing/urban-data-science"
"gboeing/osmnx-examples" -> "scikit-mobility/scikit-mobility"
"gboeing/osmnx-examples" -> "anitagraser/movingpandas"
"gboeing/osmnx-examples" -> "UDST/pandana"
"gboeing/osmnx-examples" -> "waddell/urban-informatics-and-visualization"
"gboeing/osmnx-examples" -> "HTenkanen/pyrosm"
"gboeing/osmnx-examples" -> "geopandas/geopandas"
"gboeing/osmnx-examples" -> "mocnik-science/osm-python-tools" ["e"=1]
"gboeing/osmnx-examples" -> "martinfleis/momepy"
"gboeing/osmnx-examples" -> "pysal/pysal"
"gboeing/osmnx-examples" -> "UDST/urbanaccess"
"gboeing/osmnx-examples" -> "cyang-kth/fmm" ["e"=1]
"gboeing/osmnx-examples" -> "OpenGeoscience/geonotebook"
"gboeing/osmnx-examples" -> "mszell/geospatialdatascience"
"mapbox/rasterio" -> "Toblerity/Fiona"
"mapbox/rasterio" -> "Toblerity/Shapely"
"mapbox/rasterio" -> "geopandas/geopandas"
"mapbox/rasterio" -> "perrygeo/python-rasterstats"
"mapbox/rasterio" -> "corteva/rioxarray"
"mapbox/rasterio" -> "OSGeo/gdal" ["e"=1]
"mapbox/rasterio" -> "developmentseed/landsat-util"
"mapbox/rasterio" -> "dwtkns/gdal-cheat-sheet" ["e"=1]
"mapbox/rasterio" -> "radiantearth/stac-spec"
"mapbox/rasterio" -> "azavea/raster-vision"
"mapbox/rasterio" -> "sentinelsat/sentinelsat"
"mapbox/rasterio" -> "cogeotiff/rio-tiler"
"mapbox/rasterio" -> "mapbox/tippecanoe" ["e"=1]
"mapbox/rasterio" -> "mapbox/robosat"
"mapbox/rasterio" -> "makepath/xarray-spatial"
"geopy/geopy" -> "DenisCarriere/geocoder"
"geopy/geopy" -> "geopandas/geopandas"
"geopy/geopy" -> "python-visualization/folium"
"geopy/geopy" -> "googlemaps/google-maps-services-python"
"geopy/geopy" -> "Toblerity/Shapely"
"geopy/geopy" -> "gboeing/osmnx"
"geopy/geopy" -> "Toblerity/Fiona"
"geopy/geopy" -> "daviddrysdale/python-phonenumbers" ["e"=1]
"geopy/geopy" -> "thampiman/reverse-geocoder"
"geopy/geopy" -> "mapbox/rasterio"
"geopy/geopy" -> "pysal/pysal"
"geopy/geopy" -> "SciTools/cartopy" ["e"=1]
"geopy/geopy" -> "seatgeek/fuzzywuzzy" ["e"=1]
"geopy/geopy" -> "sacridini/Awesome-Geospatial"
"geopy/geopy" -> "sdispater/pendulum" ["e"=1]
"gboeing/data-visualization" -> "gboeing/urban-data-science"
"gboeing/data-visualization" -> "waddell/urban-informatics-and-visualization"
"gboeing/data-visualization" -> "gboeing/2014-summer-travels"
"gboeing/data-visualization" -> "rhiever/python-data-visualization-course"
"gboeing/data-visualization" -> "benfoxall/lastfm-to-csv" ["e"=1]
"gboeing/data-visualization" -> "pylast/pylast" ["e"=1]
"gboeing/data-visualization" -> "gboeing/osmnx-examples"
"gboeing/data-visualization" -> "scikit-mobility/scikit-mobility"
"MinZHANG-WHU/Change-Detection-Review" -> "wenhwu/awesome-remote-sensing-change-detection"
"MinZHANG-WHU/Change-Detection-Review" -> "justchenhao/STANet"
"MinZHANG-WHU/Change-Detection-Review" -> "LiheYoung/SenseEarth2020-ChangeDetection"
"MinZHANG-WHU/Change-Detection-Review" -> "I-Hope-Peace/ChangeDetectionRepository" ["e"=1]
"MinZHANG-WHU/Change-Detection-Review" -> "justchenhao/BIT_CD"
"MinZHANG-WHU/Change-Detection-Review" -> "GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images"
"MinZHANG-WHU/Change-Detection-Review" -> "Bobholamovic/ChangeDetectionToolbox"
"MinZHANG-WHU/Change-Detection-Review" -> "rcdaudt/fully_convolutional_change_detection"
"MinZHANG-WHU/Change-Detection-Review" -> "wgcban/ChangeFormer"
"MinZHANG-WHU/Change-Detection-Review" -> "Z-Zheng/ChangeStar"
"MinZHANG-WHU/Change-Detection-Review" -> "likyoo/Siam-NestedUNet"
"MinZHANG-WHU/Change-Detection-Review" -> "likyoo/change_detection.pytorch"
"MinZHANG-WHU/Change-Detection-Review" -> "Bobholamovic/CDLab"
"MinZHANG-WHU/Change-Detection-Review" -> "gmayday1997/SceneChangeDet"
"MinZHANG-WHU/Change-Detection-Review" -> "lehaifeng/DASNet"
"wenhwu/awesome-remote-sensing-change-detection" -> "MinZHANG-WHU/Change-Detection-Review"
"wenhwu/awesome-remote-sensing-change-detection" -> "justchenhao/STANet"
"wenhwu/awesome-remote-sensing-change-detection" -> "LiheYoung/SenseEarth2020-ChangeDetection"
"wenhwu/awesome-remote-sensing-change-detection" -> "GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images"
"wenhwu/awesome-remote-sensing-change-detection" -> "chrieke/awesome-satellite-imagery-datasets"
"wenhwu/awesome-remote-sensing-change-detection" -> "I-Hope-Peace/ChangeDetectionRepository" ["e"=1]
"wenhwu/awesome-remote-sensing-change-detection" -> "likyoo/change_detection.pytorch"
"wenhwu/awesome-remote-sensing-change-detection" -> "justchenhao/BIT_CD"
"wenhwu/awesome-remote-sensing-change-detection" -> "rcdaudt/fully_convolutional_change_detection"
"wenhwu/awesome-remote-sensing-change-detection" -> "Bobholamovic/ChangeDetectionToolbox"
"wenhwu/awesome-remote-sensing-change-detection" -> "wgcban/ChangeFormer"
"wenhwu/awesome-remote-sensing-change-detection" -> "gmayday1997/SceneChangeDet"
"wenhwu/awesome-remote-sensing-change-detection" -> "shinianzhihou/ChangeDetection"
"wenhwu/awesome-remote-sensing-change-detection" -> "rulixiang/DSFANet"
"wenhwu/awesome-remote-sensing-change-detection" -> "likyoo/Siam-NestedUNet"
"Microsoft/USBuildingFootprints" -> "mapbox/robosat"
"Microsoft/USBuildingFootprints" -> "dwtkns/gdal-cheat-sheet" ["e"=1]
"Microsoft/USBuildingFootprints" -> "azavea/raster-vision"
"Microsoft/USBuildingFootprints" -> "mapbox/mapboxgl-jupyter"
"Microsoft/USBuildingFootprints" -> "trailbehind/DeepOSM"
"Microsoft/USBuildingFootprints" -> "mapbox/tippecanoe" ["e"=1]
"Microsoft/USBuildingFootprints" -> "developmentseed/label-maker"
"Microsoft/USBuildingFootprints" -> "opencitymodel/opencitymodel" ["e"=1]
"Microsoft/USBuildingFootprints" -> "Microsoft/CanadianBuildingFootprints"
"Microsoft/USBuildingFootprints" -> "pysal/pysal"
"Microsoft/USBuildingFootprints" -> "mapbox/rasterio"
"Microsoft/USBuildingFootprints" -> "SpaceNetChallenge/BuildingDetectors"
"Microsoft/USBuildingFootprints" -> "Esri/esri-leaflet" ["e"=1]
"Microsoft/USBuildingFootprints" -> "gboeing/osmnx"
"Microsoft/USBuildingFootprints" -> "gboeing/urban-data-science"
"holoviz/panel" -> "holoviz/holoviews"
"holoviz/panel" -> "holoviz/hvplot"
"holoviz/panel" -> "voila-dashboards/voila" ["e"=1]
"holoviz/panel" -> "MarcSkovMadsen/awesome-panel"
"holoviz/panel" -> "holoviz/datashader"
"holoviz/panel" -> "mljar/mercury" ["e"=1]
"holoviz/panel" -> "holoviz/holoviz"
"holoviz/panel" -> "holoviz/param"
"holoviz/panel" -> "lux-org/lux" ["e"=1]
"holoviz/panel" -> "ploomber/ploomber" ["e"=1]
"holoviz/panel" -> "orchest/orchest" ["e"=1]
"holoviz/panel" -> "vizzuhq/ipyvizzu" ["e"=1]
"holoviz/panel" -> "MAIF/shapash" ["e"=1]
"holoviz/panel" -> "oegedijk/explainerdashboard" ["e"=1]
"holoviz/panel" -> "uber/orbit" ["e"=1]
"bopen/xarray-sentinel" -> "bopen/sarsen"
"bopen/xarray-sentinel" -> "sertit/eoreader"
"bopen/xarray-sentinel" -> "johntruckenbrodt/pyroSAR"
"bopen/xarray-sentinel" -> "gjoseph92/stackstac"
"bopen/xarray-sentinel" -> "ESA-PhiLab/OpenSarToolkit"
"bopen/xarray-sentinel" -> "insarlab/MintPy"
"bopen/xarray-sentinel" -> "scottyhq/dinosar"
"giswqs/leafmap" -> "giswqs/geemap"
"giswqs/leafmap" -> "giswqs/streamlit-geospatial"
"giswqs/leafmap" -> "acgeospatial/awesome-earthobservation-code"
"giswqs/leafmap" -> "makepath/xarray-spatial"
"giswqs/leafmap" -> "jblindsay/whitebox-tools"
"giswqs/leafmap" -> "microsoft/torchgeo"
"giswqs/leafmap" -> "giswqs/earthengine-py-notebooks"
"giswqs/leafmap" -> "giswqs/python-geospatial"
"giswqs/leafmap" -> "sacridini/Awesome-Geospatial"
"giswqs/leafmap" -> "giswqs/qgis-earthengine-examples"
"giswqs/leafmap" -> "opengeospatial/geoparquet"
"giswqs/leafmap" -> "samapriya/awesome-gee-community-datasets"
"giswqs/leafmap" -> "radiantearth/stac-spec"
"giswqs/leafmap" -> "geopandas/geopandas"
"giswqs/leafmap" -> "anitagraser/movingpandas"
"sentinel-hub/eo-learn" -> "sentinel-hub/sentinelhub-py"
"sentinel-hub/eo-learn" -> "sentinel-hub/sentinel2-cloud-detector"
"sentinel-hub/eo-learn" -> "sentinel-hub/custom-scripts"
"sentinel-hub/eo-learn" -> "sentinelsat/sentinelsat"
"sentinel-hub/eo-learn" -> "acgeospatial/awesome-earthobservation-code"
"sentinel-hub/eo-learn" -> "azavea/raster-vision"
"sentinel-hub/eo-learn" -> "johntruckenbrodt/pyroSAR"
"sentinel-hub/eo-learn" -> "Fernerkundung/awesome-sentinel"
"sentinel-hub/eo-learn" -> "chrieke/awesome-satellite-imagery-datasets"
"sentinel-hub/eo-learn" -> "radiantearth/stac-spec"
"sentinel-hub/eo-learn" -> "makepath/xarray-spatial"
"sentinel-hub/eo-learn" -> "giswqs/Awesome-GEE"
"sentinel-hub/eo-learn" -> "planetlabs/notebooks"
"sentinel-hub/eo-learn" -> "opendatacube/datacube-core"
"sentinel-hub/eo-learn" -> "giswqs/qgis-earthengine-examples"
"geopandas/geopandas" -> "mapbox/rasterio"
"geopandas/geopandas" -> "Toblerity/Shapely"
"geopandas/geopandas" -> "Toblerity/Fiona"
"geopandas/geopandas" -> "python-visualization/folium"
"geopandas/geopandas" -> "gboeing/osmnx"
"geopandas/geopandas" -> "pysal/pysal"
"geopandas/geopandas" -> "pydata/xarray" ["e"=1]
"geopandas/geopandas" -> "SciTools/cartopy" ["e"=1]
"geopandas/geopandas" -> "OSGeo/gdal" ["e"=1]
"geopandas/geopandas" -> "anitagraser/movingpandas"
"geopandas/geopandas" -> "sacridini/Awesome-Geospatial"
"geopandas/geopandas" -> "geopy/geopy"
"geopandas/geopandas" -> "qgis/QGIS" ["e"=1]
"geopandas/geopandas" -> "ResidentMario/geoplot"
"geopandas/geopandas" -> "makepath/xarray-spatial"
"1044197988/TF.Keras-Commonly-used-models" -> "1044197988/Semantic-segmentation-of-remote-sensing-images"
"1044197988/TF.Keras-Commonly-used-models" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"1044197988/TF.Keras-Commonly-used-models" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"1044197988/TF.Keras-Commonly-used-models" -> "YudeWang/UNet-Satellite-Image-Segmentation"
"1044197988/TF.Keras-Commonly-used-models" -> "AstarLight/Satellite-Segmentation"
"1044197988/TF.Keras-Commonly-used-models" -> "rmkemker/EarthMapper"
"1044197988/TF.Keras-Commonly-used-models" -> "BBuf/Keras-Semantic-Segmentation"
"1044197988/TF.Keras-Commonly-used-models" -> "lcylmhlcy/Semantic-segmentation"
"1044197988/TF.Keras-Commonly-used-models" -> "WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class"
"1044197988/TF.Keras-Commonly-used-models" -> "luyanger1799/Amazing-Semantic-Segmentation"
"holoviz/datashader" -> "holoviz/holoviews"
"holoviz/datashader" -> "holoviz/hvplot"
"holoviz/datashader" -> "makepath/xarray-spatial"
"holoviz/datashader" -> "holoviz/geoviews"
"holoviz/datashader" -> "holoviz/spatialpandas"
"holoviz/datashader" -> "holoviz/holoviz"
"holoviz/datashader" -> "holoviz/param"
"holoviz/datashader" -> "holoviz/panel"
"holoviz/datashader" -> "geopandas/dask-geopandas"
"holoviz/datashader" -> "anitagraser/movingpandas"
"holoviz/datashader" -> "holoviz/colorcet"
"holoviz/datashader" -> "greppo-io/greppo"
"holoviz/datashader" -> "corteva/rioxarray"
"holoviz/datashader" -> "earthlab/earthpy"
"holoviz/datashader" -> "opendatacube/datacube-core"
"holoviz/holoviz" -> "holoviz/hvplot"
"holoviz/holoviz" -> "holoviz/param"
"holoviz/holoviz" -> "holoviz/geoviews"
"holoviz/holoviz" -> "holoviz/datashader"
"holoviz/holoviz" -> "holoviz/holoviews"
"holoviz/holoviz" -> "holoviz/spatialpandas"
"holoviz/holoviz" -> "holoviz/lumen"
"holoviz/holoviz" -> "holoviz/panel"
"holoviz/holoviz" -> "pyviz/pyviz.org"
"sacridini/Awesome-Geospatial" -> "sshuair/awesome-gis" ["e"=1]
"sacridini/Awesome-Geospatial" -> "acgeospatial/awesome-earthobservation-code"
"sacridini/Awesome-Geospatial" -> "azavea/raster-vision"
"sacridini/Awesome-Geospatial" -> "robmarkcole/satellite-image-deep-learning"
"sacridini/Awesome-Geospatial" -> "giswqs/python-geospatial"
"sacridini/Awesome-Geospatial" -> "giswqs/geemap"
"sacridini/Awesome-Geospatial" -> "geopandas/geopandas"
"sacridini/Awesome-Geospatial" -> "OSGeo/gdal" ["e"=1]
"sacridini/Awesome-Geospatial" -> "dwtkns/gdal-cheat-sheet" ["e"=1]
"sacridini/Awesome-Geospatial" -> "chrieke/awesome-satellite-imagery-datasets"
"sacridini/Awesome-Geospatial" -> "giswqs/qgis-earthengine-examples"
"sacridini/Awesome-Geospatial" -> "mapbox/awesome-vector-tiles" ["e"=1]
"sacridini/Awesome-Geospatial" -> "giswqs/earthengine-py-notebooks"
"sacridini/Awesome-Geospatial" -> "microsoft/torchgeo"
"sacridini/Awesome-Geospatial" -> "makepath/xarray-spatial"
"robmarkcole/satellite-image-deep-learning" -> "chrieke/awesome-satellite-imagery-datasets"
"robmarkcole/satellite-image-deep-learning" -> "microsoft/torchgeo"
"robmarkcole/satellite-image-deep-learning" -> "azavea/raster-vision"
"robmarkcole/satellite-image-deep-learning" -> "acgeospatial/awesome-earthobservation-code"
"robmarkcole/satellite-image-deep-learning" -> "giswqs/geemap"
"robmarkcole/satellite-image-deep-learning" -> "sacridini/Awesome-Geospatial"
"robmarkcole/satellite-image-deep-learning" -> "wenhwu/awesome-remote-sensing-change-detection"
"robmarkcole/satellite-image-deep-learning" -> "sentinel-hub/eo-learn"
"robmarkcole/satellite-image-deep-learning" -> "mapbox/robosat"
"robmarkcole/satellite-image-deep-learning" -> "google/earthengine-api"
"robmarkcole/satellite-image-deep-learning" -> "giswqs/Awesome-GEE"
"robmarkcole/satellite-image-deep-learning" -> "giswqs/earthengine-py-notebooks"
"robmarkcole/satellite-image-deep-learning" -> "deepVector/geospatial-machine-learning"
"robmarkcole/satellite-image-deep-learning" -> "sentinelsat/sentinelsat"
"robmarkcole/satellite-image-deep-learning" -> "sentinel-hub/custom-scripts"
"google/earthengine-api" -> "giswqs/geemap"
"google/earthengine-api" -> "gee-community/gee_tools"
"google/earthengine-api" -> "giswqs/earthengine-py-notebooks"
"google/earthengine-api" -> "giswqs/Awesome-GEE"
"google/earthengine-api" -> "giswqs/qgis-earthengine-examples"
"google/earthengine-api" -> "google/earthengine-community"
"google/earthengine-api" -> "gee-community/qgis-earthengine-plugin"
"google/earthengine-api" -> "fitoprincipe/geetools-code-editor"
"google/earthengine-api" -> "sentinel-hub/custom-scripts"
"google/earthengine-api" -> "robmarkcole/satellite-image-deep-learning"
"google/earthengine-api" -> "gee-community/ee-palettes"
"google/earthengine-api" -> "sentinel-hub/eo-learn"
"google/earthengine-api" -> "renelikestacos/Google-Earth-Engine-Python-Examples"
"google/earthengine-api" -> "acgeospatial/awesome-earthobservation-code"
"google/earthengine-api" -> "sentinel-hub/sentinelhub-py"
"neptune-ml/open-solution-mapping-challenge" -> "crowdAI/crowdai-mapping-challenge-mask-rcnn"
"neptune-ml/open-solution-mapping-challenge" -> "SpaceNetChallenge/SpaceNet_Off_Nadir_Solutions"
"microsoft/torchgeo" -> "azavea/raster-vision"
"microsoft/torchgeo" -> "robmarkcole/satellite-image-deep-learning"
"microsoft/torchgeo" -> "isaaccorley/torchrs"
"microsoft/torchgeo" -> "chrieke/awesome-satellite-imagery-datasets"
"microsoft/torchgeo" -> "acgeospatial/awesome-earthobservation-code"
"microsoft/torchgeo" -> "makepath/xarray-spatial"
"microsoft/torchgeo" -> "sentinel-hub/eo-learn"
"microsoft/torchgeo" -> "wenhwu/awesome-remote-sensing-change-detection"
"microsoft/torchgeo" -> "corteva/rioxarray"
"microsoft/torchgeo" -> "CosmiQ/solaris"
"microsoft/torchgeo" -> "samapriya/awesome-gee-community-datasets"
"microsoft/torchgeo" -> "DataSystemsLab/GeoTorch"
"microsoft/torchgeo" -> "microsoft/satellite-imagery-labeling-tool"
"microsoft/torchgeo" -> "opengeospatial/geoparquet"
"microsoft/torchgeo" -> "sacridini/Awesome-Geospatial"
"insarlab/MintPy" -> "isce-framework/isce2"
"insarlab/MintPy" -> "yumorishita/LiCSBAS"
"insarlab/MintPy" -> "GeoscienceAustralia/PyRate"
"insarlab/MintPy" -> "insarlab/MintPy-tutorial"
"insarlab/MintPy" -> "isce-framework/isce2-docs"
"insarlab/MintPy" -> "dbekaert/StaMPS"
"insarlab/MintPy" -> "aria-tools/ARIA-tools"
"insarlab/MintPy" -> "gmtsar/gmtsar"
"insarlab/MintPy" -> "RadarCODE/awesome-sar"
"insarlab/MintPy" -> "isce-framework/fringe"
"insarlab/MintPy" -> "isce-framework/isce3"
"insarlab/MintPy" -> "scottyhq/dinosar"
"insarlab/MintPy" -> "insarlab/MiaplPy"
"insarlab/MintPy" -> "dbekaert/TRAIN"
"insarlab/MintPy" -> "pyrocko/kite"
"insarlab/MintPy-tutorial" -> "aria-tools/ARIA-tools"
"insarlab/MintPy-tutorial" -> "pyrocko/kite"
"insarlab/MintPy-tutorial" -> "isce-framework/isce2-docs"
"AndreaCodegoni/Tiny_model_4_CD" -> "likyoo/open-cd"
"AndreaCodegoni/Tiny_model_4_CD" -> "liumency/CropLand-CD"
"AndreaCodegoni/Tiny_model_4_CD" -> "wgcban/SemiCD"
"Bobholamovic/CDLab" -> "likyoo/open-cd"
"Bobholamovic/CDLab" -> "likyoo/Siam-NestedUNet"
"Bobholamovic/CDLab" -> "likyoo/change_detection.pytorch"
"Bobholamovic/CDLab" -> "rcdaudt/fully_convolutional_change_detection"
"Bobholamovic/CDLab" -> "cyx669521/self-supervised_change_detetction"
"Bobholamovic/CDLab" -> "Z-Zheng/ChangeStar"
"CarryHJR/remote-sense-quickstart" -> "whut2962575697/image_seg"
"CarryHJR/remote-sense-quickstart" -> "CarnoZhao/RSIPAC_Track2"
"CarryHJR/remote-sense-quickstart" -> "neverstoplearn/remote_sensing_change_detection"
"CarryHJR/remote-sense-quickstart" -> "daifeng2016/End-to-end-CD-for-VHR-satellite-image"
"CarryHJR/remote-sense-quickstart" -> "fitzpchao/DTCDSCN"
"CarryHJR/remote-sense-quickstart" -> "Molly6/segmentation_shengteng2021"
"CarryHJR/remote-sense-quickstart" -> "LiheYoung/SenseEarth2020-ChangeDetection"
"CarryHJR/remote-sense-quickstart" -> "JasmineRain/NAIC_AI-RS"
"CarryHJR/remote-sense-quickstart" -> "LiuDongjing/BuildingChangeDetector"
"CarryHJR/remote-sense-quickstart" -> "wylqq312715289/CDGAN"
"CarryHJR/remote-sense-quickstart" -> "shinianzhihou/ChangeDetection"
"ggsDing/Bi-SRNet" -> "daifeng2016/Semantic-Change-Detection"
"likyoo/open-cd" -> "AndreaCodegoni/Tiny_model_4_CD"
"likyoo/open-cd" -> "Bobholamovic/CDLab"
"likyoo/open-cd" -> "likyoo/change_detection.pytorch"
"likyoo/open-cd" -> "ggsDing/Bi-SRNet"
"likyoo/open-cd" -> "likyoo/Siam-NestedUNet"
"likyoo/open-cd" -> "businiaoo/PRCV2021-Change-Detection-Contest-2nd-place-Solution"
"likyoo/open-cd" -> "wgcban/SemiCD"
"likyoo/open-cd" -> "justchenhao/SaDL_CD"
"likyoo/open-cd" -> "seominseok0429/Self-Pair-for-Change-Detection"
"likyoo/open-cd" -> "shinianzhihou/ChangeDetection"
"shinianzhihou/ChangeDetection" -> "kyoukuntaro/FCSN_for_ChangeDetection_IGARSS2018"
"shinianzhihou/ChangeDetection" -> "likyoo/change_detection.pytorch"
"shinianzhihou/ChangeDetection" -> "vbhavank/Siamese-neural-network-for-change-detection"
"shinianzhihou/ChangeDetection" -> "likyoo/open-cd"
"shinianzhihou/ChangeDetection" -> "businiaoo/PRCV2021-Change-Detection-Contest-2nd-place-Solution"
"shinianzhihou/ChangeDetection" -> "gmayday1997/SceneChangeDet"
"shinianzhihou/ChangeDetection" -> "Bobholamovic/ChangeDetectionToolbox"
"shinianzhihou/ChangeDetection" -> "likyoo/Siam-NestedUNet"
"shinianzhihou/ChangeDetection" -> "CarnoZhao/RSIPAC_Track2"
"shinianzhihou/ChangeDetection" -> "likyoo/PRCV2021_ChangeDetection_Top3"
"shinianzhihou/ChangeDetection" -> "rcdaudt/fully_convolutional_change_detection"
"shinianzhihou/ChangeDetection" -> "LiheYoung/SenseEarth2020-ChangeDetection"
"shinianzhihou/ChangeDetection" -> "wangle53/CSA-CDGAN"
"shinianzhihou/ChangeDetection" -> "daifeng2016/End-to-end-CD-for-VHR-satellite-image"
"wgcban/SemiCD" -> "wgcban/ChangeFormer"
"wgcban/SemiCD" -> "wgcban/ddpm-cd"
"wgcban/ddpm-cd" -> "wgcban/SemiCD"
"wgcban/ddpm-cd" -> "Z-Zheng/ChangeStar"
"wgcban/ddpm-cd" -> "wgcban/ChangeFormer"
"wgcban/ddpm-cd" -> "likyoo/open-cd"
"wgcban/ddpm-cd" -> "PatrickTUM/multimodalCD_ISPRS21"
"wgcban/ddpm-cd" -> "justchenhao/BIT_CD"
"wgcban/ddpm-cd" -> "Bobholamovic/CDLab"
"wgcban/ddpm-cd" -> "liumency/CropLand-CD"
"wgcban/ddpm-cd" -> "justchenhao/SaDL_CD"
"wgcban/ddpm-cd" -> "ggsDing/Bi-SRNet"
"abhijeet3922/Change-Detection-in-Satellite-Imagery" -> "vbhavank/Unstructured-change-detection-using-CNN"
"abhijeet3922/Change-Detection-in-Satellite-Imagery" -> "vbhavank/Siamese-neural-network-for-change-detection"
"abhijeet3922/Change-Detection-in-Satellite-Imagery" -> "rulixiang/ChangeDetectionPCAKmeans"
"abhijeet3922/Change-Detection-in-Satellite-Imagery" -> "Bobholamovic/ChangeDetectionToolbox"
"abhijeet3922/Change-Detection-in-Satellite-Imagery" -> "rulixiang/DSFANet"
"abhijeet3922/Change-Detection-in-Satellite-Imagery" -> "kyoukuntaro/FCSN_for_ChangeDetection_IGARSS2018"
"abhijeet3922/Change-Detection-in-Satellite-Imagery" -> "MinZHANG-WHU/FDCNN"
"abhijeet3922/Change-Detection-in-Satellite-Imagery" -> "shinianzhihou/ChangeDetection"
"abhijeet3922/Change-Detection-in-Satellite-Imagery" -> "rcdaudt/fully_convolutional_change_detection"
"abhijeet3922/Change-Detection-in-Satellite-Imagery" -> "fouronnes/SAR-change-detection"
"abhijeet3922/Change-Detection-in-Satellite-Imagery" -> "gmayday1997/SceneChangeDet"
"abhijeet3922/Change-Detection-in-Satellite-Imagery" -> "mortcanty/CRCPython"
"abhijeet3922/Change-Detection-in-Satellite-Imagery" -> "wenhwu/awesome-remote-sensing-change-detection"
"GeospatialPython/pyshp" -> "Toblerity/Fiona"
"GeospatialPython/pyshp" -> "mapbox/rasterio"
"GeospatialPython/pyshp" -> "Toblerity/Shapely"
"GeospatialPython/pyshp" -> "geopandas/geopandas"
"GeospatialPython/pyshp" -> "jswhit/pyproj" ["e"=1]
"GeospatialPython/pyshp" -> "pysal/pysal"
"GeospatialPython/pyshp" -> "pyproj4/pyproj"
"GeospatialPython/pyshp" -> "SciTools/cartopy" ["e"=1]
"GeospatialPython/pyshp" -> "dwtkns/gdal-cheat-sheet" ["e"=1]
"GeospatialPython/pyshp" -> "perrygeo/python-rasterstats"
"GeospatialPython/pyshp" -> "Unidata/netcdf4-python" ["e"=1]
"GeospatialPython/pyshp" -> "ResidentMario/geoplot"
"GeospatialPython/pyshp" -> "geoalchemy/geoalchemy2"
"GeospatialPython/pyshp" -> "geopy/geopy"
"GeospatialPython/pyshp" -> "ozak/georasters"
"GERSL/Fmask" -> "sentinel-hub/sentinel2-cloud-detector"
"GERSL/Fmask" -> "JacobJeppesen/RS-Net"
"GERSL/Fmask" -> "ubarsc/python-fmask"
"GERSL/Fmask" -> "IPL-UV/ee_ipl_uv"
"GERSL/Fmask" -> "SorourMo/Cloud-Net-A-semantic-segmentation-CNN-for-cloud-detection"
"GERSL/Fmask" -> "CNES/Start-MAJA"
"astro-ck/Road-Extraction" -> "mj129/CoANet"
"jeffwen/road_building_extraction" -> "jiankang1991/road_extraction_remote_sensing"
"VSainteuf/pytorch-psetae" -> "VSainteuf/lightweight-temporal-attention-pytorch"
"VSainteuf/pytorch-psetae" -> "MarcCoru/crop-type-mapping"
"VSainteuf/pytorch-psetae" -> "dl4sits/BreizhCrops"
"VSainteuf/pytorch-psetae" -> "roserustowicz/crop-type-mapping"
"VSainteuf/pytorch-psetae" -> "VSainteuf/pastis-benchmark"
"VSainteuf/pytorch-psetae" -> "VSainteuf/utae-paps"
"VSainteuf/pytorch-psetae" -> "charlotte-pel/temporalCNN"
"VSainteuf/utae-paps" -> "VSainteuf/pastis-benchmark"
"VSainteuf/utae-paps" -> "VSainteuf/lightweight-temporal-attention-pytorch"
"chrieke/awesome-satellite-imagery-datasets" -> "robmarkcole/satellite-image-deep-learning"
"chrieke/awesome-satellite-imagery-datasets" -> "wenhwu/awesome-remote-sensing-change-detection"
"chrieke/awesome-satellite-imagery-datasets" -> "azavea/raster-vision"
"chrieke/awesome-satellite-imagery-datasets" -> "mapbox/robosat"
"chrieke/awesome-satellite-imagery-datasets" -> "acgeospatial/awesome-earthobservation-code"
"chrieke/awesome-satellite-imagery-datasets" -> "sentinel-hub/eo-learn"
"chrieke/awesome-satellite-imagery-datasets" -> "microsoft/torchgeo"
"chrieke/awesome-satellite-imagery-datasets" -> "sentinelsat/sentinelsat"
"chrieke/awesome-satellite-imagery-datasets" -> "sacridini/Awesome-Geospatial"
"chrieke/awesome-satellite-imagery-datasets" -> "sshuair/torchsat"
"chrieke/awesome-satellite-imagery-datasets" -> "giswqs/geemap"
"chrieke/awesome-satellite-imagery-datasets" -> "nshaud/DeepNetsForEO"
"chrieke/awesome-satellite-imagery-datasets" -> "MinZHANG-WHU/Change-Detection-Review"
"chrieke/awesome-satellite-imagery-datasets" -> "Fernerkundung/awesome-sentinel"
"chrieke/awesome-satellite-imagery-datasets" -> "sentinel-hub/sentinelhub-py"
"google/earthengine-community" -> "giswqs/Awesome-GEE"
"google/earthengine-community" -> "gee-community/gee_tools"
"google/earthengine-community" -> "gee-community/qgis-earthengine-plugin"
"google/earthengine-community" -> "samapriya/awesome-gee-community-datasets"
"google/earthengine-community" -> "Fernerkundung/EarthEngine_scripts"
"google/earthengine-community" -> "gee-community/ee-palettes"
"google/earthengine-community" -> "google/earthengine-api"
"google/earthengine-community" -> "giswqs/earthengine-py-notebooks"
"google/earthengine-community" -> "davemlz/eemont"
"google/earthengine-community" -> "sentinel-hub/custom-scripts"
"google/earthengine-community" -> "giswqs/qgis-earthengine-examples"
"google/earthengine-community" -> "davemlz/awesome-spectral-indices"
"google/earthengine-community" -> "renelikestacos/Google-Earth-Engine-Python-Examples"
"google/earthengine-community" -> "fitoprincipe/geetools-code-editor"
"google/earthengine-community" -> "r-spatial/rgee" ["e"=1]
"thampiman/reverse-geocoder" -> "DenisCarriere/geocoder"
"thampiman/reverse-geocoder" -> "geopy/geopy"
"thampiman/reverse-geocoder" -> "mahmoud/boltons" ["e"=1]
"thampiman/reverse-geocoder" -> "stitchfix/pyxley" ["e"=1]
"thampiman/reverse-geocoder" -> "delight-im/FreeGeoDB" ["e"=1]
"thampiman/reverse-geocoder" -> "honnibal/spaCy" ["e"=1]
"thampiman/reverse-geocoder" -> "madisonmay/Tomorrow" ["e"=1]
"thampiman/reverse-geocoder" -> "what-studio/profiling" ["e"=1]
"thampiman/reverse-geocoder" -> "centaurean/density" ["e"=1]
"thampiman/reverse-geocoder" -> "jonathanslenders/python-prompt-toolkit" ["e"=1]
"thampiman/reverse-geocoder" -> "redodo/tortilla" ["e"=1]
"thampiman/reverse-geocoder" -> "oliver006/elasticsearch-gmail" ["e"=1]
"thampiman/reverse-geocoder" -> "crsmithdev/arrow" ["e"=1]
"thampiman/reverse-geocoder" -> "yhat/db.py" ["e"=1]
"thampiman/reverse-geocoder" -> "ContinuumIO/bokeh" ["e"=1]
"SocialDataSci/Geospatial_Data_with_Python" -> "geopandas/scipy2018-geospatial-data"
"geopandas/scipy2018-geospatial-data" -> "jorisvandenbossche/geopandas-tutorial"
"geopandas/scipy2018-geospatial-data" -> "SocialDataSci/Geospatial_Data_with_Python"
"geopandas/scipy2018-geospatial-data" -> "pysal/scipy2019-intermediate-gds"
"geopandas/scipy2018-geospatial-data" -> "pysal/esda"
"geopandas/scipy2018-geospatial-data" -> "darribas/gds18"
"geopandas/scipy2018-geospatial-data" -> "ljwolf/geopython"
"geopandas/scipy2018-geospatial-data" -> "SciTools/cartopy-tutorial" ["e"=1]
"geopandas/scipy2018-geospatial-data" -> "pysal/giddy"
"geopandas/scipy2018-geospatial-data" -> "ozak/georasters"
"geopandas/scipy2018-geospatial-data" -> "gdsbook/book"
"geopandas/scipy2018-geospatial-data" -> "darribas/contextily"
"geopandas/scipy2018-geospatial-data" -> "halfdanrump/geoviz"
"geopandas/scipy2018-geospatial-data" -> "pysal/mgwr"
"geopandas/scipy2018-geospatial-data" -> "SpatialPython/spatial_python"
"planetlabs/notebooks" -> "planetlabs/planet-client-python"
"planetlabs/notebooks" -> "acgeospatial/awesome-earthobservation-code"
"planetlabs/notebooks" -> "sentinel-hub/custom-scripts"
"planetlabs/notebooks" -> "sentinel-hub/eo-learn"
"planetlabs/notebooks" -> "kscottz/PythonFromSpace"
"planetlabs/notebooks" -> "azavea/raster-vision-examples"
"planetlabs/notebooks" -> "azavea/raster-vision"
"planetlabs/notebooks" -> "gee-community/gee_tools"
"planetlabs/notebooks" -> "deepVector/geospatial-machine-learning"
"planetlabs/notebooks" -> "sentinelsat/sentinelsat"
"planetlabs/notebooks" -> "sentinel-hub/sentinelhub-py"
"planetlabs/notebooks" -> "radiantearth/stac-spec"
"planetlabs/notebooks" -> "nshaud/DeepNetsForEO"
"planetlabs/notebooks" -> "johntruckenbrodt/pyroSAR"
"planetlabs/notebooks" -> "giswqs/earthengine-py-notebooks"
"jazzband/geojson" -> "pyproj4/pyproj"
"jazzband/geojson" -> "Toblerity/Fiona"
"python-visualization/folium" -> "geopandas/geopandas"
"python-visualization/folium" -> "gboeing/osmnx"
"python-visualization/folium" -> "geopy/geopy"
"python-visualization/folium" -> "altair-viz/altair" ["e"=1]
"python-visualization/folium" -> "bokeh/bokeh" ["e"=1]
"python-visualization/folium" -> "plotly/plotly.py" ["e"=1]
"python-visualization/folium" -> "mwaskom/seaborn" ["e"=1]
"python-visualization/folium" -> "Toblerity/Shapely"
"python-visualization/folium" -> "plotly/dash" ["e"=1]
"python-visualization/folium" -> "ResidentMario/missingno" ["e"=1]
"python-visualization/folium" -> "andrea-cuttone/geoplotlib"
"python-visualization/folium" -> "jupyter-widgets/ipyleaflet" ["e"=1]
"python-visualization/folium" -> "keplergl/kepler.gl" ["e"=1]
"python-visualization/folium" -> "pandas-profiling/pandas-profiling" ["e"=1]
"python-visualization/folium" -> "mapbox/rasterio"
"DenisCarriere/geocoder" -> "geopy/geopy"
"DenisCarriere/geocoder" -> "thampiman/reverse-geocoder"
"DenisCarriere/geocoder" -> "python-visualization/folium"
"DenisCarriere/geocoder" -> "googlemaps/google-maps-services-python"
"DenisCarriere/geocoder" -> "pysal/pysal"
"DenisCarriere/geocoder" -> "andrea-cuttone/geoplotlib"
"DenisCarriere/geocoder" -> "geopandas/geopandas"
"DenisCarriere/geocoder" -> "makinacorpus/django-leaflet" ["e"=1]
"DenisCarriere/geocoder" -> "openvenues/pypostal" ["e"=1]
"DenisCarriere/geocoder" -> "geoalchemy/geoalchemy2"
"DenisCarriere/geocoder" -> "tomchristie/apistar" ["e"=1]
"DenisCarriere/geocoder" -> "daviddrysdale/python-phonenumbers" ["e"=1]
"DenisCarriere/geocoder" -> "pelias/pelias" ["e"=1]
"DenisCarriere/geocoder" -> "mapbox/rasterio"
"DenisCarriere/geocoder" -> "redodo/tortilla" ["e"=1]
"frewsxcv/python-geojson" -> "jwass/geojsonio.py"
"googlemaps/google-maps-services-python" -> "geopy/geopy"
"googlemaps/google-maps-services-python" -> "python-visualization/folium"
"googlemaps/google-maps-services-python" -> "geopandas/geopandas"
"googlemaps/google-maps-services-python" -> "vgm64/gmplot" ["e"=1]
"googlemaps/google-maps-services-python" -> "pbugnion/gmaps" ["e"=1]
"googlemaps/google-maps-services-python" -> "DenisCarriere/geocoder"
"googlemaps/google-maps-services-python" -> "gboeing/osmnx"
"googlemaps/google-maps-services-python" -> "googleapis/google-api-python-client" ["e"=1]
"googlemaps/google-maps-services-python" -> "slimkrazy/python-google-places" ["e"=1]
"googlemaps/google-maps-services-python" -> "googlemaps/google-maps-services-java" ["e"=1]
"googlemaps/google-maps-services-python" -> "googlemaps/google-maps-services-js" ["e"=1]
"googlemaps/google-maps-services-python" -> "seatgeek/fuzzywuzzy" ["e"=1]
"googlemaps/google-maps-services-python" -> "burnash/gspread" ["e"=1]
"googlemaps/google-maps-services-python" -> "pydanny/cookiecutter-django" ["e"=1]
"googlemaps/google-maps-services-python" -> "django-extensions/django-extensions" ["e"=1]
"holoviz/holoviews" -> "holoviz/hvplot"
"holoviz/holoviews" -> "holoviz/datashader"
"holoviz/holoviews" -> "holoviz/panel"
"holoviz/holoviews" -> "holoviz/geoviews"
"holoviz/holoviews" -> "holoviz/param"
"holoviz/holoviews" -> "holoviz/holoviz"
"holoviz/holoviews" -> "holoviz/spatialpandas"
"holoviz/holoviews" -> "pydata/xarray" ["e"=1]
"holoviz/holoviews" -> "bqplot/bqplot" ["e"=1]
"holoviz/holoviews" -> "makepath/xarray-spatial"
"holoviz/holoviews" -> "anitagraser/movingpandas"
"holoviz/holoviews" -> "voila-dashboards/voila" ["e"=1]
"holoviz/holoviews" -> "sfu-db/dataprep" ["e"=1]
"holoviz/holoviews" -> "altair-viz/altair" ["e"=1]
"holoviz/holoviews" -> "AutoViML/AutoViz" ["e"=1]
"DHI-GRAS/terracotta" -> "developmentseed/titiler"
"DHI-GRAS/terracotta" -> "cogeotiff/rio-tiler"
"DHI-GRAS/terracotta" -> "cogeotiff/rio-cogeo"
"DHI-GRAS/terracotta" -> "banesullivan/localtileserver"
"DHI-GRAS/terracotta" -> "radiantearth/stac-spec"
"DHI-GRAS/terracotta" -> "mojodna/marblecutter"
"DHI-GRAS/terracotta" -> "Fernerkundung/awesome-sentinel"
"DHI-GRAS/terracotta" -> "developmentseed/timvt"
"DHI-GRAS/terracotta" -> "developmentseed/geolambda"
"DHI-GRAS/terracotta" -> "developmentseed/rio-viz"
"DHI-GRAS/terracotta" -> "ungarj/mapchete"
"DHI-GRAS/terracotta" -> "corteva/rioxarray"
"DHI-GRAS/terracotta" -> "CrunchyData/pg_tileserv" ["e"=1]
"DHI-GRAS/terracotta" -> "makepath/xarray-spatial"
"DHI-GRAS/terracotta" -> "radiantearth/stac-api-spec"
"PaddlePaddle/PaddleRS" -> "PaddleCV-SIG/PaddleRS"
"PaddlePaddle/PaddleRS" -> "PaddleCV-SIG/GeoView"
"PaddlePaddle/PaddleRS" -> "PaddlePaddle/Paddle3D" ["e"=1]
"PaddlePaddle/PaddleRS" -> "likyoo/open-cd"
"PaddlePaddle/PaddleRS" -> "WHULuoJiaTeam/luojianet"
"PaddlePaddle/PaddleRS" -> "PaddleCV-SIG/PaddleLabel"
"PaddlePaddle/PaddleRS" -> "geoyee/PdRSCD"
"PaddlePaddle/PaddleRS" -> "wgcban/ChangeFormer"
"PaddlePaddle/PaddleRS" -> "PaddlePaddle/paddle2onnx" ["e"=1]
"PaddlePaddle/PaddleRS" -> "likyoo/Siam-NestedUNet"
"PaddlePaddle/PaddleRS" -> "geoyee/LabCD"
"WangLibo1995/GeoSeg" -> "Junjue-Wang/LoveDA"
"WangLibo1995/GeoSeg" -> "ViTAE-Transformer/ViTAE-Transformer-Remote-Sensing" ["e"=1]
"WangLibo1995/GeoSeg" -> "lironui/Multi-Attention-Network"
"WangLibo1995/GeoSeg" -> "lironui/MACU-Net"
"WangLibo1995/GeoSeg" -> "ggsDing/LANet"
"WangLibo1995/GeoSeg" -> "wgcban/ddpm-cd"
"WangLibo1995/GeoSeg" -> "ViTAE-Transformer/Remote-Sensing-RVSA" ["e"=1]
"WangLibo1995/GeoSeg" -> "VIROBO-15/Transformer-in-Remote-Sensing"
"WangLibo1995/GeoSeg" -> "facebookresearch/HRViT" ["e"=1]
"WangLibo1995/GeoSeg" -> "WangLibo1995/BuildFormer"
"WangLibo1995/GeoSeg" -> "Levantespot/UDA_for_RS"
"avanetten/cresi" -> "CosmiQ/cresi"
"greppo-io/greppo" -> "raphaelquast/EOmaps"
"greppo-io/greppo" -> "opengeospatial/geoparquet"
"greppo-io/greppo" -> "stac-utils/pystac"
"greppo-io/greppo" -> "DahnJ/H3-Pandas" ["e"=1]
"greppo-io/greppo" -> "stac-utils/pystac-client"
"greppo-io/greppo" -> "giswqs/aws-open-data-geo"
"greppo-io/greppo" -> "nasaharvest/crop-mask"
"greppo-io/greppo" -> "corteva/geocube"
"greppo-io/greppo" -> "r5py/r5py" ["e"=1]
"greppo-io/greppo" -> "mszell/geospatialdatascience"
"pygeos/pygeos" -> "holoviz/spatialpandas"
"pygeos/pygeos" -> "jsignell/dask-geopandas"
"pygeos/pygeos" -> "geopandas/dask-geopandas"
"pygeos/pygeos" -> "martinfleis/momepy"
"pygeos/pygeos" -> "HTenkanen/pyrosm"
"pygeos/pygeos" -> "corteva/rioxarray"
"pygeos/pygeos" -> "makepath/xarray-spatial"
"pygeos/pygeos" -> "pysal/spopt"
"pygeos/pygeos" -> "fatiando/verde" ["e"=1]
"pygeos/pygeos" -> "geopandas/geo-arrow-spec"
"pygeos/pygeos" -> "corteva/geocube"
"pygeos/pygeos" -> "Toblerity/Fiona"
"pygeos/pygeos" -> "Toblerity/rtree" ["e"=1]
"pygeos/pygeos" -> "anitagraser/movingpandas"
"pygeos/pygeos" -> "pysal/mapclassify"
"mikonvergence/DiffusionFastForward" -> "worldstrat/worldstrat"
"mikonvergence/DiffusionFastForward" -> "cidcom/SatelliteCloudGenerator"
"isaaccorley/torchrs" -> "microsoft/torchgeo"
"isaaccorley/torchrs" -> "ElementAI/seasonal-contrast"
"isaaccorley/torchrs" -> "zhangbin0917/Awesome-Remote-Sensing-Dataset"
"isaaccorley/torchrs" -> "PatrickTUM/multimodalCD_ISPRS21"
"isaaccorley/torchrs" -> "justchenhao/STANet"
"isaaccorley/torchrs" -> "likyoo/change_detection.pytorch"
"isaaccorley/torchrs" -> "Seyed-Ali-Ahmadi/Awesome_Satellite_Benchmark_Datasets"
"isaaccorley/torchrs" -> "schmitt-muc/SEN12MS"
"isaaccorley/torchrs" -> "sshuair/torchsat"
"isaaccorley/torchrs" -> "microsoft/satellite-imagery-labeling-tool"
"isaaccorley/torchrs" -> "isaaccorley/pytorch-enhance"
"isaaccorley/torchrs" -> "wenhwu/awesome-remote-sensing-change-detection"
"isaaccorley/torchrs" -> "VSainteuf/pytorch-psetae"
"isaaccorley/torchrs" -> "blutjens/awesome-forests" ["e"=1]
"isaaccorley/torchrs" -> "MinZHANG-WHU/Change-Detection-Review"
"plant99/felicette" -> "karanpratapsingh/fullstack-starterkit"
"plant99/felicette" -> "doersino/aerialbot"
"plant99/felicette" -> "surya-veer/movement-tracking"
"plant99/felicette" -> "sentinelsat/sentinelsat"
"plant99/felicette" -> "vinayak-mehta/present" ["e"=1]
"plant99/felicette" -> "mrdbourke/machine-learning-roadmap" ["e"=1]
"plant99/felicette" -> "sentinel-hub/sentinelhub-py"
"plant99/felicette" -> "kautukkundan/Awesome-Profile-README-templates" ["e"=1]
"plant99/felicette" -> "hedythedev/starcli"
"plant99/felicette" -> "a327ex/BYTEPATH" ["e"=1]
"plant99/felicette" -> "liljencrantz/crush" ["e"=1]
"plant99/felicette" -> "erebe/personal-server" ["e"=1]
"plant99/felicette" -> "rossumur/espflix" ["e"=1]
"plant99/felicette" -> "tradytics/eiten" ["e"=1]
"plant99/felicette" -> "azavea/raster-vision"
"LiuDongjing/BuildingChangeDetector" -> "Jiangfeng-Xiong/satellite_seg"
"LiuDongjing/BuildingChangeDetector" -> "CarryHJR/remote-sense-quickstart"
"LiuDongjing/BuildingChangeDetector" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"LiuDongjing/BuildingChangeDetector" -> "kyoukuntaro/FCSN_for_ChangeDetection_IGARSS2018"
"LiuDongjing/BuildingChangeDetector" -> "MinZHANG-WHU/FDCNN"
"LiuDongjing/BuildingChangeDetector" -> "daifeng2016/End-to-end-CD-for-VHR-satellite-image"
"LiuDongjing/BuildingChangeDetector" -> "LiheYoung/SenseEarth2020-ChangeDetection"
"LiuDongjing/BuildingChangeDetector" -> "shinianzhihou/ChangeDetection"
"LiuDongjing/BuildingChangeDetector" -> "granularai/fabric"
"LiuDongjing/BuildingChangeDetector" -> "wylqq312715289/CDGAN"
"LiuDongjing/BuildingChangeDetector" -> "mvkolos/siamese-change-detection"
"LiuDongjing/BuildingChangeDetector" -> "rcdaudt/fully_convolutional_change_detection"
"LiuDongjing/BuildingChangeDetector" -> "gmayday1997/SceneChangeDet"
"LiuDongjing/BuildingChangeDetector" -> "gg-lige/tianchi"
"LiuDongjing/BuildingChangeDetector" -> "vbhavank/Siamese-neural-network-for-change-detection"
"giswqs/Awesome-GEE" -> "giswqs/earthengine-py-notebooks"
"giswqs/Awesome-GEE" -> "giswqs/qgis-earthengine-examples"
"giswqs/Awesome-GEE" -> "samapriya/awesome-gee-community-datasets"
"giswqs/Awesome-GEE" -> "giswqs/geemap"
"giswqs/Awesome-GEE" -> "gee-community/gee_tools"
"giswqs/Awesome-GEE" -> "acgeospatial/awesome-earthobservation-code"
"giswqs/Awesome-GEE" -> "davemlz/eemont"
"giswqs/Awesome-GEE" -> "google/earthengine-community"
"giswqs/Awesome-GEE" -> "sentinel-hub/custom-scripts"
"giswqs/Awesome-GEE" -> "gee-community/qgis-earthengine-plugin"
"giswqs/Awesome-GEE" -> "google/earthengine-api"
"giswqs/Awesome-GEE" -> "gee-community/ee-palettes"
"giswqs/Awesome-GEE" -> "renelikestacos/Google-Earth-Engine-Python-Examples"
"giswqs/Awesome-GEE" -> "sacridini/GEET"
"giswqs/Awesome-GEE" -> "Fernerkundung/EarthEngine_scripts"
"m-wrzr/populartimes" -> "philshem/gmaps_popular_times_scraper"
"m-wrzr/populartimes" -> "rak-trzustki/busy-hours"
"m-wrzr/populartimes" -> "gboeing/osmnx-examples"
"m-wrzr/populartimes" -> "GrocerCheck/LivePopularTimes"
"m-wrzr/populartimes" -> "ActiveConclusion/COVID19_mobility" ["e"=1]
"m-wrzr/populartimes" -> "googlemaps/google-maps-services-python"
"anitagraser/movingpandas-examples" -> "anitagraser/movingpandas"
"geopandas/contextily" -> "corteva/rioxarray"
"geopandas/contextily" -> "HTenkanen/pyrosm"
"geopandas/contextily" -> "geopandas/dask-geopandas"
"geopandas/contextily" -> "mattijn/topojson"
"geopandas/contextily" -> "makepath/xarray-spatial"
"geopandas/contextily" -> "pysal/libpysal"
"geopandas/contextily" -> "holoviz/geoviews"
"geopandas/contextily" -> "holoviz/spatialpandas"
"geopandas/contextily" -> "corteva/geocube"
"kylebarron/parquet-wasm" -> "geoarrow/geoarrow"
"ossimlabs/ossim" -> "orfeotoolbox/OTB"
"ossimlabs/ossim" -> "tqjxlm/Atlas" ["e"=1]
"ossimlabs/ossim" -> "bjornblissing/osg-3rdparty-cmake" ["e"=1]
"ossimlabs/ossim" -> "ossimlabs/ossim-plugins"
"ossimlabs/ossim" -> "openscenegraph/VirtualPlanetBuilder" ["e"=1]
"karanpratapsingh/fullstack-starterkit" -> "plant99/felicette"
"karanpratapsingh/fullstack-starterkit" -> "mrdbourke/machine-learning-roadmap" ["e"=1]
"karanpratapsingh/fullstack-starterkit" -> "surya-veer/movement-tracking"
"karanpratapsingh/fullstack-starterkit" -> "NoQuarterTeam/boilerplate" ["e"=1]
"karanpratapsingh/fullstack-starterkit" -> "karanpratapsingh/portfolio"
"karanpratapsingh/fullstack-starterkit" -> "graphql-boilerplates/react-fullstack-graphql" ["e"=1]
"karanpratapsingh/fullstack-starterkit" -> "gokcan/react-shimmer" ["e"=1]
"karanpratapsingh/fullstack-starterkit" -> "mdevils/typescript-exercises" ["e"=1]
"karanpratapsingh/fullstack-starterkit" -> "olafsulich/fullstack-nextjs-ecommerce" ["e"=1]
"karanpratapsingh/fullstack-starterkit" -> "TowhidKashem/snapchat-clone" ["e"=1]
"karanpratapsingh/fullstack-starterkit" -> "prisma/prisma-examples" ["e"=1]
"karanpratapsingh/fullstack-starterkit" -> "wellyshen/use-web-animations" ["e"=1]
"karanpratapsingh/fullstack-starterkit" -> "bring-shrubbery/use-cookie-consent" ["e"=1]
"karanpratapsingh/fullstack-starterkit" -> "tannerlinsley/react-virtual" ["e"=1]
"karanpratapsingh/fullstack-starterkit" -> "react-boilerplate/react-boilerplate-cra-template" ["e"=1]
"EO-College/tomography_tutorial" -> "noobmartin/Open-source-SAR-simulator"
"EO-College/tomography_tutorial" -> "EO-College/sarbian"
"awslabs/open-data-registry" -> "radiantearth/stac-spec"
"awslabs/open-data-registry" -> "developmentseed/geolambda"
"awslabs/open-data-registry" -> "johntruckenbrodt/pyroSAR"
"awslabs/open-data-registry" -> "awslabs/aws-well-architected-labs" ["e"=1]
"awslabs/open-data-registry" -> "awslabs/aws-data-wrangler" ["e"=1]
"awslabs/open-data-registry" -> "Fernerkundung/awesome-sentinel"
"awslabs/open-data-registry" -> "stac-utils/pystac"
"awslabs/open-data-registry" -> "aws/sagemaker-containers" ["e"=1]
"awslabs/open-data-registry" -> "stac-utils/pystac-client"
"awslabs/open-data-registry" -> "gjoseph92/stackstac"
"awslabs/open-data-registry" -> "aws/sagemaker-python-sdk" ["e"=1]
"awslabs/open-data-registry" -> "sat-utils/sat-search"
"awslabs/open-data-registry" -> "awslabs/amazon-sagemaker-examples" ["e"=1]
"awslabs/open-data-registry" -> "awslabs/aws-serverless-data-lake-framework" ["e"=1]
"awslabs/open-data-registry" -> "aws-samples/amazon-sagemaker-architecting-for-ml" ["e"=1]
"surya-veer/movement-tracking" -> "gnana1997/Gesture-Gaming-using-OpenCV" ["e"=1]
"surya-veer/movement-tracking" -> "KartikChugh/Otto" ["e"=1]
"surya-veer/movement-tracking" -> "Delta2Force/MCVmComputers"
"satellite-image-deep-learning/techniques" -> "Seyed-Ali-Ahmadi/Awesome_Satellite_Benchmark_Datasets"
"satellite-image-deep-learning/techniques" -> "satellite-image-deep-learning/datasets"
"satellite-image-deep-learning/techniques" -> "microsoft/torchgeo"
"satellite-image-deep-learning/techniques" -> "chrieke/awesome-satellite-imagery-datasets"
"satellite-image-deep-learning/techniques" -> "wenhwu/awesome-remote-sensing-change-detection"
"satellite-image-deep-learning/techniques" -> "aliaksandr960/segment-anything-eo"
"satellite-image-deep-learning/techniques" -> "syamkakarla98/Satellite_Imagery_Analysis" ["e"=1]
"satellite-image-deep-learning/techniques" -> "MinZHANG-WHU/Change-Detection-Review"
"holoviz/hvplot" -> "holoviz/holoviews"
"holoviz/hvplot" -> "holoviz/geoviews"
"holoviz/hvplot" -> "holoviz/holoviz"
"holoviz/hvplot" -> "holoviz/datashader"
"holoviz/hvplot" -> "holoviz/spatialpandas"
"holoviz/hvplot" -> "holoviz/panel"
"holoviz/hvplot" -> "holoviz/param"
"holoviz/hvplot" -> "makepath/xarray-spatial"
"holoviz/hvplot" -> "Ouranosinc/xclim" ["e"=1]
"holoviz/hvplot" -> "corteva/rioxarray"
"holoviz/hvplot" -> "pydata/xarray" ["e"=1]
"holoviz/hvplot" -> "ecmwf/climetlab" ["e"=1]
"holoviz/hvplot" -> "pangeo-data/xESMF" ["e"=1]
"holoviz/hvplot" -> "intake/intake" ["e"=1]
"holoviz/hvplot" -> "corteva/geocube"
"acgeospatial/awesome-earthobservation-code" -> "giswqs/Awesome-GEE"
"acgeospatial/awesome-earthobservation-code" -> "giswqs/earthengine-py-notebooks"
"acgeospatial/awesome-earthobservation-code" -> "sentinel-hub/eo-learn"
"acgeospatial/awesome-earthobservation-code" -> "davemlz/eemont"
"acgeospatial/awesome-earthobservation-code" -> "sentinel-hub/custom-scripts"
"acgeospatial/awesome-earthobservation-code" -> "giswqs/qgis-earthengine-examples"
"acgeospatial/awesome-earthobservation-code" -> "samapriya/awesome-gee-community-datasets"
"acgeospatial/awesome-earthobservation-code" -> "robmarkcole/satellite-image-deep-learning"
"acgeospatial/awesome-earthobservation-code" -> "sacridini/Awesome-Geospatial"
"acgeospatial/awesome-earthobservation-code" -> "chrieke/awesome-satellite-imagery-datasets"
"acgeospatial/awesome-earthobservation-code" -> "planetlabs/notebooks"
"acgeospatial/awesome-earthobservation-code" -> "Fernerkundung/awesome-sentinel"
"acgeospatial/awesome-earthobservation-code" -> "azavea/raster-vision"
"acgeospatial/awesome-earthobservation-code" -> "chrieke/awesome-geospatial-companies"
"acgeospatial/awesome-earthobservation-code" -> "johntruckenbrodt/pyroSAR"
"tjukanovt/30DayMapChallenge" -> "hn303/30DayMapChallenge-Bot"
"tjukanovt/30DayMapChallenge" -> "tjukanovt/qgis_styles"
"tjukanovt/30DayMapChallenge" -> "jwoLondon/30dayMapChallenge"
"tjukanovt/30DayMapChallenge" -> "MapPromptMonday/MapPromptMonday"
"tjukanovt/30DayMapChallenge" -> "Z3tt/30DayMapChallenge"
"tjukanovt/30DayMapChallenge" -> "acgeospatial/awesome-earthobservation-code"
"tjukanovt/30DayMapChallenge" -> "sentinel-hub/custom-scripts"
"tjukanovt/30DayMapChallenge" -> "samapriya/awesome-gee-community-datasets"
"tjukanovt/30DayMapChallenge" -> "gkaramanis/30DayMapChallenge"
"tjukanovt/30DayMapChallenge" -> "luukvdmeer/sfnetworks" ["e"=1]
"tjukanovt/30DayMapChallenge" -> "Pecners/rayshader_portraits" ["e"=1]
"tjukanovt/30DayMapChallenge" -> "davemlz/eemont"
"tjukanovt/30DayMapChallenge" -> "sacridini/Awesome-Geospatial"
"tjukanovt/30DayMapChallenge" -> "mszell/geospatialdatascience"
"tjukanovt/30DayMapChallenge" -> "giswqs/python-geospatial"
"gabrieltseng/pycrop-yield-prediction" -> "JiaxuanYou/crop_yield_prediction"
"gabrieltseng/pycrop-yield-prediction" -> "cleipski/CropPredict"
"gabrieltseng/pycrop-yield-prediction" -> "saeedkhaki92/Yield-Prediction-DNN"
"gabrieltseng/pycrop-yield-prediction" -> "brad-ross/crop-yield-prediction-project"
"gabrieltseng/pycrop-yield-prediction" -> "AnnaXWang/deep-transfer-learning-crop-prediction"
"mapbox/robosat" -> "azavea/raster-vision"
"mapbox/robosat" -> "chrieke/awesome-satellite-imagery-datasets"
"mapbox/robosat" -> "developmentseed/label-maker"
"mapbox/robosat" -> "sentinel-hub/eo-learn"
"mapbox/robosat" -> "mapbox/rasterio"
"mapbox/robosat" -> "trailbehind/DeepOSM"
"mapbox/robosat" -> "CosmiQ/solaris"
"mapbox/robosat" -> "sentinelsat/sentinelsat"
"mapbox/robosat" -> "reachsumit/deep-unet-for-satellite-image-segmentation"
"mapbox/robosat" -> "robmarkcole/satellite-image-deep-learning"
"mapbox/robosat" -> "sacridini/Awesome-Geospatial"
"mapbox/robosat" -> "sshuair/torchsat"
"mapbox/robosat" -> "mapbox/tippecanoe" ["e"=1]
"mapbox/robosat" -> "nshaud/DeepNetsForEO"
"mapbox/robosat" -> "Microsoft/USBuildingFootprints"
"MarcCoru/crop-type-mapping" -> "VSainteuf/pytorch-psetae"
"MarcCoru/crop-type-mapping" -> "dl4sits/BreizhCrops"
"MarcCoru/crop-type-mapping" -> "roserustowicz/crop-type-mapping"
"MarcCoru/crop-type-mapping" -> "sentinel-hub/eo-flow"
"giswqs/earthengine-py-notebooks" -> "giswqs/qgis-earthengine-examples"
"giswqs/earthengine-py-notebooks" -> "giswqs/Awesome-GEE"
"giswqs/earthengine-py-notebooks" -> "giswqs/geemap"
"giswqs/earthengine-py-notebooks" -> "acgeospatial/awesome-earthobservation-code"
"giswqs/earthengine-py-notebooks" -> "gee-community/gee_tools"
"giswqs/earthengine-py-notebooks" -> "google/earthengine-api"
"giswqs/earthengine-py-notebooks" -> "renelikestacos/Google-Earth-Engine-Python-Examples"
"giswqs/earthengine-py-notebooks" -> "gee-community/qgis-earthengine-plugin"
"giswqs/earthengine-py-notebooks" -> "davemlz/eemont"
"giswqs/earthengine-py-notebooks" -> "sentinel-hub/custom-scripts"
"giswqs/earthengine-py-notebooks" -> "samapriya/awesome-gee-community-datasets"
"giswqs/earthengine-py-notebooks" -> "google/earthengine-community"
"giswqs/earthengine-py-notebooks" -> "sentinel-hub/eo-learn"
"giswqs/earthengine-py-notebooks" -> "patrickcgray/open-geo-tutorial"
"giswqs/earthengine-py-notebooks" -> "csaybar/EEwPython"
"TUM-LMF/fieldRNN" -> "TUM-LMF/MTLCC"
"VSainteuf/lightweight-temporal-attention-pytorch" -> "VSainteuf/pytorch-psetae"
"mapbox/mapbox-sdk-py" -> "mapbox/mapbox-cli-py"
"mapbox/mapbox-sdk-py" -> "mapbox/mapboxgl-jupyter"
"CreativeInquiry/terrapattern" -> "trailbehind/DeepOSM"
"CreativeInquiry/terrapattern" -> "CreativeInquiry/terrapattern-website"
"CreativeInquiry/terrapattern" -> "developmentseed/skynet-data"
"CreativeInquiry/terrapattern" -> "BradNeuberg/cloudless"
"CreativeInquiry/terrapattern" -> "mitmul/ssai-cnn"
"CreativeInquiry/terrapattern" -> "developmentseed/skynet-train"
"CreativeInquiry/terrapattern" -> "orfeotoolbox/OTB"
"CreativeInquiry/terrapattern" -> "nealjean/predicting-poverty"
"CreativeInquiry/terrapattern" -> "nshaud/DeepNetsForEO"
"CreativeInquiry/terrapattern" -> "developmentseed/label-maker"
"CreativeInquiry/terrapattern" -> "ngageoint/mrgeo" ["e"=1]
"microsoft/USBuildingFootprints" -> "microsoft/GlobalMLBuildingFootprints"
"microsoft/USBuildingFootprints" -> "microsoft/CanadianBuildingFootprints"
"microsoft/USBuildingFootprints" -> "opencitymodel/opencitymodel" ["e"=1]
"microsoft/USBuildingFootprints" -> "microsoft/torchgeo"
"microsoft/USBuildingFootprints" -> "microsoft/Uganda-Tanzania-Building-Footprints"
"microsoft/USBuildingFootprints" -> "microsoft/AustraliaBuildingFootprints"
"microsoft/USBuildingFootprints" -> "azavea/raster-vision"
"microsoft/USBuildingFootprints" -> "giswqs/earthengine-py-notebooks"
"microsoft/USBuildingFootprints" -> "chrieke/awesome-satellite-imagery-datasets"
"microsoft/USBuildingFootprints" -> "giswqs/qgis-earthengine-examples"
"microsoft/USBuildingFootprints" -> "gee-community/qgis-earthengine-plugin"
"microsoft/USBuildingFootprints" -> "CosmiQ/solaris"
"microsoft/USBuildingFootprints" -> "microsoft/KenyaNigeriaBuildingFootprints"
"microsoft/USBuildingFootprints" -> "microsoft/SouthAmericaBuildingFootprints"
"microsoft/USBuildingFootprints" -> "isaaccorley/torchrs"
"Toblerity/Shapely" -> "Toblerity/Fiona"
"Toblerity/Shapely" -> "mapbox/rasterio"
"Toblerity/Shapely" -> "geopandas/geopandas"
"Toblerity/Shapely" -> "Toblerity/rtree" ["e"=1]
"Toblerity/Shapely" -> "pygeos/pygeos"
"Toblerity/Shapely" -> "GeospatialPython/pyshp"
"Toblerity/Shapely" -> "OSGeo/gdal" ["e"=1]
"Toblerity/Shapely" -> "gboeing/osmnx"
"Toblerity/Shapely" -> "jswhit/pyproj" ["e"=1]
"Toblerity/Shapely" -> "pysal/pysal"
"Toblerity/Shapely" -> "geopy/geopy"
"Toblerity/Shapely" -> "SciTools/cartopy" ["e"=1]
"Toblerity/Shapely" -> "python-visualization/folium"
"Toblerity/Shapely" -> "pyproj4/pyproj"
"Toblerity/Shapely" -> "mapbox/tippecanoe" ["e"=1]
"yannforget/landsatxplore" -> "yannforget/pylandsat"
"yannforget/landsatxplore" -> "dgketchum/Landsat578"
"yannforget/landsatxplore" -> "olivierhagolle/LANDSAT-Download"
"yannforget/landsatxplore" -> "remicres/sr4rs"
"AstarLight/Satellite-Segmentation" -> "Jiangfeng-Xiong/satellite_seg"
"AstarLight/Satellite-Segmentation" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"AstarLight/Satellite-Segmentation" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"AstarLight/Satellite-Segmentation" -> "zlkanata/DeepGlobe-Road-Extraction-Challenge"
"AstarLight/Satellite-Segmentation" -> "1044197988/Semantic-segmentation-of-remote-sensing-images"
"AstarLight/Satellite-Segmentation" -> "ximimiao/deeplabv3-Tensorflow"
"AstarLight/Satellite-Segmentation" -> "milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch"
"AstarLight/Satellite-Segmentation" -> "lsh1994/keras-segmentation"
"AstarLight/Satellite-Segmentation" -> "LiuDongjing/BuildingChangeDetector"
"AstarLight/Satellite-Segmentation" -> "nshaud/DeepNetsForEO"
"AstarLight/Satellite-Segmentation" -> "YudeWang/UNet-Satellite-Image-Segmentation"
"AstarLight/Satellite-Segmentation" -> "wenhwu/awesome-remote-sensing-change-detection"
"AstarLight/Satellite-Segmentation" -> "reachsumit/deep-unet-for-satellite-image-segmentation"
"AstarLight/Satellite-Segmentation" -> "cuilunan/Unet-of-remote-sensing-image"
"AstarLight/Satellite-Segmentation" -> "manideep2510/eye-in-the-sky"
"jblindsay/whitebox-tools" -> "giswqs/whitebox-python"
"jblindsay/whitebox-tools" -> "jblindsay/whitebox-geospatial-analysis-tools"
"jblindsay/whitebox-tools" -> "giswqs/WhiteboxTools-ArcGIS"
"jblindsay/whitebox-tools" -> "mdbartos/pysheds" ["e"=1]
"jblindsay/whitebox-tools" -> "r-barnes/richdem" ["e"=1]
"jblindsay/whitebox-tools" -> "corteva/rioxarray"
"jblindsay/whitebox-tools" -> "giswqs/qgis-earthengine-examples"
"jblindsay/whitebox-tools" -> "dtarb/TauDEM" ["e"=1]
"jblindsay/whitebox-tools" -> "giswqs/leafmap"
"jblindsay/whitebox-tools" -> "acgeospatial/awesome-earthobservation-code"
"jblindsay/whitebox-tools" -> "makepath/xarray-spatial"
"jblindsay/whitebox-tools" -> "earthlab/earthpy"
"jblindsay/whitebox-tools" -> "opendatacube/datacube-core"
"jblindsay/whitebox-tools" -> "giswqs/lidar"
"jblindsay/whitebox-tools" -> "pygeos/pygeos"
"giswqs/qgis-earthengine-examples" -> "giswqs/earthengine-py-notebooks"
"giswqs/qgis-earthengine-examples" -> "gee-community/qgis-earthengine-plugin"
"giswqs/qgis-earthengine-examples" -> "giswqs/Awesome-GEE"
"giswqs/qgis-earthengine-examples" -> "giswqs/geemap"
"giswqs/qgis-earthengine-examples" -> "gee-community/gee_tools"
"giswqs/qgis-earthengine-examples" -> "acgeospatial/awesome-earthobservation-code"
"giswqs/qgis-earthengine-examples" -> "sentinel-hub/custom-scripts"
"giswqs/qgis-earthengine-examples" -> "google/earthengine-api"
"giswqs/qgis-earthengine-examples" -> "sentinel-hub/eo-learn"
"giswqs/qgis-earthengine-examples" -> "davemlz/eemont"
"giswqs/qgis-earthengine-examples" -> "csaybar/EEwPython"
"giswqs/qgis-earthengine-examples" -> "renelikestacos/Google-Earth-Engine-Python-Examples"
"giswqs/qgis-earthengine-examples" -> "jblindsay/whitebox-tools"
"giswqs/qgis-earthengine-examples" -> "samapriya/awesome-gee-community-datasets"
"giswqs/qgis-earthengine-examples" -> "google/earthengine-community"
"aria-tools/ARIA-tools" -> "dbekaert/RAiDER"
"aria-tools/ARIA-tools" -> "aria-tools/ARIA-tools-docs"
"aria-tools/ARIA-tools" -> "isce-framework/fringe"
"dbekaert/TRAIN" -> "dbekaert/StaMPS"
"dbekaert/TRAIN" -> "GeoscienceAustralia/PyRate"
"dbekaert/TRAIN" -> "TUDelftGeodesy/Doris"
"dbekaert/TRAIN" -> "pyrocko/kite"
"gmtsar/gmtsar" -> "dbekaert/StaMPS"
"gmtsar/gmtsar" -> "isce-framework/isce2"
"gmtsar/gmtsar" -> "yumorishita/LiCSBAS"
"gmtsar/gmtsar" -> "isce-framework/isce3"
"gmtsar/gmtsar" -> "GeoscienceAustralia/PyRate"
"gmtsar/gmtsar" -> "dbekaert/TRAIN"
"gmtsar/gmtsar" -> "isce-framework/isce2-docs"
"gmtsar/gmtsar" -> "insarlab/MintPy"
"gmtsar/gmtsar" -> "TUDelftGeodesy/Doris"
"gmtsar/gmtsar" -> "scottyhq/dinosar"
"gmtsar/gmtsar" -> "pyrocko/kite"
"gmtsar/gmtsar" -> "mdelgadoblasco/snap2stamps"
"gmtsar/gmtsar" -> "insarlab/MiaplPy"
"isce-framework/isce2" -> "insarlab/MintPy"
"isce-framework/isce2" -> "isce-framework/isce2-docs"
"isce-framework/isce2" -> "dbekaert/StaMPS"
"isce-framework/isce2" -> "isce-framework/isce3"
"isce-framework/isce2" -> "yumorishita/LiCSBAS"
"isce-framework/isce2" -> "GeoscienceAustralia/PyRate"
"isce-framework/isce2" -> "gmtsar/gmtsar"
"isce-framework/isce2" -> "RadarCODE/awesome-sar"
"isce-framework/isce2" -> "isce-framework/fringe"
"isce-framework/isce2" -> "dbekaert/TRAIN"
"isce-framework/isce2" -> "aria-tools/ARIA-tools"
"isce-framework/isce2" -> "scottyhq/isce_notes"
"isce-framework/isce2" -> "insarlab/MintPy-tutorial"
"isce-framework/isce2" -> "johntruckenbrodt/pyroSAR"
"isce-framework/isce2" -> "TUDelftGeodesy/Doris"
"isce-framework/isce2-docs" -> "isce-framework/isce2"
"isce-framework/isce2-docs" -> "parosen/Geo-SInC"
"isce-framework/isce2-docs" -> "dbekaert/StaMPS"
"isce-framework/isce2-docs" -> "isce-framework/fringe"
"isce-framework/isce2-docs" -> "scottyhq/isce_notes"
"isce-framework/isce2-docs" -> "insarlab/MintPy-tutorial"
"isce-framework/isce2-docs" -> "dbekaert/TRAIN"
"isce-framework/isce2-docs" -> "insarlab/MintPy"
"isce-framework/isce2-docs" -> "isce-framework/isce3"
"parosen/Geo-SInC" -> "isce-framework/isce2-docs"
"ChienWong/ResUnet-a" -> "feevos/resuneta"
"ChienWong/ResUnet-a" -> "ashishpatel26/Satelight-Image-Semantic-Segmentation-Unet-Tensorflow-keras"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "1044197988/TF.Keras-Commonly-used-models"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "fuweifu-vtoo/Semantic-segmentation"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "cuilunan/Unet-of-remote-sensing-image"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "AstarLight/Satellite-Segmentation"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "anxiangsir/deeplabv3-Tensorflow"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "ChienWong/ResUnet-a"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "lcylmhlcy/Semantic-segmentation"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "YudeWang/UNet-Satellite-Image-Segmentation"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "lehaifeng/SCAttNet"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "xungeer29/Remote-Sensing-Image-Classification"
"1044197988/Semantic-segmentation-of-remote-sensing-images" -> "AI-Chen/Deeplab-v3-Plus-pytorch-"
"SorourMo/38-Cloud-A-Cloud-Segmentation-Dataset" -> "SorourMo/Cloud-Net-A-semantic-segmentation-CNN-for-cloud-detection"
"SorourMo/38-Cloud-A-Cloud-Segmentation-Dataset" -> "SorourMo/95-Cloud-An-Extension-to-38-Cloud-Dataset"
"SorourMo/38-Cloud-A-Cloud-Segmentation-Dataset" -> "JacobJeppesen/RS-Net"
"TachibanaYoshino/Remote-sensing-image-semantic-segmentation" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"TachibanaYoshino/Remote-sensing-image-semantic-segmentation" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation-tf2"
"TachibanaYoshino/Remote-sensing-image-semantic-segmentation" -> "scrssys/semantic_segment_RSImage"
"TachibanaYoshino/Remote-sensing-image-semantic-segmentation" -> "lehaifeng/SCAttNet"
"TachibanaYoshino/Remote-sensing-image-semantic-segmentation" -> "lcylmhlcy/Semantic-segmentation"
"TachibanaYoshino/Remote-sensing-image-semantic-segmentation" -> "ChienWong/ResUnet-a"
"JiaxuanLiu/BPA-SAR-simulation" -> "likemoongg/SARbackprojection"
"denkywu/SAR-Synthetic-Aperture-Radar" -> "denkywu/Simulation-of-SAR-Imaging-Algorithm"
"denkywu/SAR-Synthetic-Aperture-Radar" -> "joeyos/SAR-imaging"
"denkywu/SAR-Synthetic-Aperture-Radar" -> "ngageoint/MATLAB_SAR"
"denkywu/SAR-Synthetic-Aperture-Radar" -> "denkywu/InSAR-Simulation-and-Studies"
"denkywu/SAR-Synthetic-Aperture-Radar" -> "RadarCODE/awesome-sar"
"denkywu/SAR-Synthetic-Aperture-Radar" -> "dm6718/RITSAR"
"denkywu/SAR-Synthetic-Aperture-Radar" -> "nnaka/sar"
"denkywu/SAR-Synthetic-Aperture-Radar" -> "denkywu/PolSAR-Calibration"
"denkywu/SAR-Synthetic-Aperture-Radar" -> "liuxinyu123/Matlab"
"denkywu/SAR-Synthetic-Aperture-Radar" -> "lwh521jll/Radar-SAR-simu"
"denkywu/SAR-Synthetic-Aperture-Radar" -> "likemoongg/SARbackprojection"
"denkywu/SAR-Synthetic-Aperture-Radar" -> "birgander2/PyRAT"
"denkywu/SAR-Synthetic-Aperture-Radar" -> "StefanJAuer/RaySAR"
"denkywu/SAR-Synthetic-Aperture-Radar" -> "wanghs008/SAR-SignalProcessing"
"denkywu/SAR-Synthetic-Aperture-Radar" -> "johntruckenbrodt/pyroSAR"
"denkywu/Simulation-of-SAR-Imaging-Algorithm" -> "denkywu/InSAR-Simulation-and-Studies"
"denkywu/Simulation-of-SAR-Imaging-Algorithm" -> "denkywu/PolSAR-Calibration"
"denkywu/Simulation-of-SAR-Imaging-Algorithm" -> "likemoongg/SARbackprojection"
"denkywu/Simulation-of-SAR-Imaging-Algorithm" -> "joeyos/SAR-imaging"
"denkywu/Simulation-of-SAR-Imaging-Algorithm" -> "nnaka/sar"
"denkywu/Simulation-of-SAR-Imaging-Algorithm" -> "denkywu/SAR-Synthetic-Aperture-Radar"
"BBuf/Keras-Semantic-Segmentation" -> "luyanger1799/Amazing-Semantic-Segmentation"
"BBuf/Keras-Semantic-Segmentation" -> "lsh1994/keras-segmentation"
"BBuf/Keras-Semantic-Segmentation" -> "jayboxyz/image_segmentation_dl"
"BBuf/Keras-Semantic-Segmentation" -> "niecongchong/HRNet-keras-semantic-segmentation"
"BBuf/Keras-Semantic-Segmentation" -> "1044197988/TF.Keras-Commonly-used-models"
"BBuf/Keras-Semantic-Segmentation" -> "bubbliiiing/Semantic-Segmentation" ["e"=1]
"BBuf/Keras-Semantic-Segmentation" -> "1044197988/Semantic-segmentation-of-remote-sensing-images"
"BBuf/Keras-Semantic-Segmentation" -> "kirilcvetkov92/Semantic-Segmentation-BiSeNet" ["e"=1]
"BBuf/Keras-Semantic-Segmentation" -> "msnh2012/Msnhnet" ["e"=1]
"BBuf/Keras-Semantic-Segmentation" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"BBuf/Keras-Semantic-Segmentation" -> "junyuchen245/SPECT-CT-Seg-ResUNet-Keras"
"BBuf/Keras-Semantic-Segmentation" -> "divamgupta/image-segmentation-keras" ["e"=1]
"robintw/Py6S" -> "samsammurphy/6S_emulator"
"robintw/Py6S" -> "samsammurphy/gee-atmcorr-S2"
"robintw/Py6S" -> "Zhaoguanhua/AtmosphericCorrection"
"robintw/Py6S" -> "jgomezdans/prosail"
"robintw/Py6S" -> "USGS-EROS/espa-surface-reflectance"
"crowdAI/crowdai-mapping-challenge-mask-rcnn" -> "neptune-ml/open-solution-mapping-challenge"
"crowdAI/crowdai-mapping-challenge-mask-rcnn" -> "neptune-ai/open-solution-mapping-challenge"
"crowdAI/crowdai-mapping-challenge-mask-rcnn" -> "jremillard/images-to-osm"
"crowdAI/crowdai-mapping-challenge-mask-rcnn" -> "ctu-geoforall-lab/i.ann.maskrcnn"
"crowdAI/crowdai-mapping-challenge-mask-rcnn" -> "SpaceNetChallenge/BuildingDetectors_Round2"
"crowdAI/crowdai-mapping-challenge-mask-rcnn" -> "crowdAI/mapping-challenge-round2-starter-kit"
"crowdAI/crowdai-mapping-challenge-mask-rcnn" -> "zlkanata/DeepGlobe-Road-Extraction-Challenge"
"crowdAI/crowdai-mapping-challenge-mask-rcnn" -> "motokimura/spacenet_building_detection"
"crowdAI/crowdai-mapping-challenge-mask-rcnn" -> "SpaceNetChallenge/BuildingDetectors"
"crowdAI/crowdai-mapping-challenge-mask-rcnn" -> "crowdAI/mapping-challenge-starter-kit"
"crowdAI/crowdai-mapping-challenge-mask-rcnn" -> "SpaceNetChallenge/utilities"
"crowdAI/crowdai-mapping-challenge-mask-rcnn" -> "azavea/raster-vision-examples"
"crowdAI/crowdai-mapping-challenge-mask-rcnn" -> "huster-wgm/geoseg"
"jremillard/images-to-osm" -> "crowdAI/crowdai-mapping-challenge-mask-rcnn"
"jremillard/images-to-osm" -> "trailbehind/DeepOSM"
"jremillard/images-to-osm" -> "mitmul/ssai-cnn"
"jremillard/images-to-osm" -> "developmentseed/skynet-data"
"jremillard/images-to-osm" -> "developmentseed/label-maker"
"jremillard/images-to-osm" -> "ctu-geoforall-lab/i.ann.maskrcnn"
"jremillard/images-to-osm" -> "nshaud/DeepNetsForEO"
"jremillard/images-to-osm" -> "SpaceNetChallenge/utilities"
"jremillard/images-to-osm" -> "mapbox/robosat"
"jremillard/images-to-osm" -> "azavea/raster-vision"
"jremillard/images-to-osm" -> "neptune-ai/open-solution-mapping-challenge"
"jremillard/images-to-osm" -> "CosmiQ/solaris"
"jremillard/images-to-osm" -> "Geoyi/pixel-decoder"
"jremillard/images-to-osm" -> "sentinel-hub/eo-learn"
"lsh1994/keras-segmentation" -> "ykamikawa/tf-keras-SegNet"
"lsh1994/keras-segmentation" -> "BBuf/Keras-Semantic-Segmentation"
"lsh1994/keras-segmentation" -> "AstarLight/Satellite-Segmentation"
"lsh1994/keras-segmentation" -> "luyanger1799/Amazing-Semantic-Segmentation"
"lsh1994/keras-segmentation" -> "Gurupradeep/FCN-for-Semantic-Segmentation" ["e"=1]
"gboeing/ppd599" -> "gboeing/ppd534"
"giswqs/geemap" -> "giswqs/earthengine-py-notebooks"
"giswqs/geemap" -> "giswqs/Awesome-GEE"
"giswqs/geemap" -> "google/earthengine-api"
"giswqs/geemap" -> "giswqs/leafmap"
"giswqs/geemap" -> "giswqs/qgis-earthengine-examples"
"giswqs/geemap" -> "robmarkcole/satellite-image-deep-learning"
"giswqs/geemap" -> "acgeospatial/awesome-earthobservation-code"
"giswqs/geemap" -> "gee-community/gee_tools"
"giswqs/geemap" -> "davemlz/eemont"
"giswqs/geemap" -> "gee-community/qgis-earthengine-plugin"
"giswqs/geemap" -> "sentinel-hub/custom-scripts"
"giswqs/geemap" -> "samapriya/awesome-gee-community-datasets"
"giswqs/geemap" -> "sacridini/Awesome-Geospatial"
"giswqs/geemap" -> "sentinel-hub/eo-learn"
"giswqs/geemap" -> "google/earthengine-community"
"ResidentMario/geoplot" -> "pysal/pysal"
"ResidentMario/geoplot" -> "makepath/xarray-spatial"
"ResidentMario/geoplot" -> "fatiando/verde" ["e"=1]
"ResidentMario/geoplot" -> "geopandas/geopandas"
"ResidentMario/geoplot" -> "anitagraser/movingpandas"
"ResidentMario/geoplot" -> "jorisvandenbossche/geopandas-tutorial"
"ResidentMario/geoplot" -> "SciTools/cartopy" ["e"=1]
"ResidentMario/geoplot" -> "andrea-cuttone/geoplotlib"
"ResidentMario/geoplot" -> "pytroll/satpy" ["e"=1]
"ResidentMario/geoplot" -> "GeoStat-Framework/GSTools" ["e"=1]
"ResidentMario/geoplot" -> "corteva/geocube"
"ResidentMario/geoplot" -> "corteva/rioxarray"
"ResidentMario/geoplot" -> "perrygeo/python-rasterstats"
"ResidentMario/geoplot" -> "earthlab/earthpy"
"ResidentMario/geoplot" -> "mdbartos/pysheds" ["e"=1]
"yumorishita/LiCSBAS" -> "dbekaert/StaMPS"
"yumorishita/LiCSBAS" -> "GeoscienceAustralia/PyRate"
"yumorishita/LiCSBAS" -> "insarlab/MintPy"
"yumorishita/LiCSBAS" -> "isce-framework/isce2"
"yumorishita/LiCSBAS" -> "isce-framework/isce3"
"yumorishita/LiCSBAS" -> "scottyhq/dinosar"
"yumorishita/LiCSBAS" -> "gmtsar/gmtsar"
"yumorishita/LiCSBAS" -> "levuvietphong/InSARFlow"
"yumorishita/LiCSBAS" -> "dbekaert/TRAIN"
"yumorishita/LiCSBAS" -> "aria-tools/ARIA-tools"
"yumorishita/LiCSBAS" -> "isce-framework/isce2-docs"
"yumorishita/LiCSBAS" -> "isce-framework/fringe"
"yumorishita/LiCSBAS" -> "pyrocko/kite"
"yumorishita/LiCSBAS" -> "insarlab/MiaplPy"
"yumorishita/LiCSBAS" -> "insarlab/MintPy-tutorial"
"geopolars/geopolars" -> "geopandas/geo-arrow-spec"
"geopolars/geopolars" -> "opengeospatial/geoparquet"
"geopolars/geopolars" -> "handstuyennn/geo"
"geopolars/geopolars" -> "geoarrow/geoarrow"
"geopolars/geopolars" -> "kylebarron/parquet-wasm"
"geopolars/geopolars" -> "flatgeobuf/flatgeobuf" ["e"=1]
"geopolars/geopolars" -> "geopandas/dask-geopandas"
"geopolars/geopolars" -> "stac-utils/pystac"
"geopolars/geopolars" -> "gjoseph92/stackstac"
"planetlabs/planet-client-python" -> "planetlabs/notebooks"
"planetlabs/planet-client-python" -> "planetlabs/qgis-planet-plugin"
"planetlabs/planet-client-python" -> "olivierhagolle/Sentinel-download"
"petedannemann/gis-programming-roadmap" -> "gboeing/ppd599"
"petedannemann/gis-programming-roadmap" -> "greppo-io/greppo"
"petedannemann/gis-programming-roadmap" -> "giswqs/python-geospatial"
"petedannemann/gis-programming-roadmap" -> "giswqs/qgis-earthengine-examples"
"petedannemann/gis-programming-roadmap" -> "Automating-GIS-processes/site"
"petedannemann/gis-programming-roadmap" -> "dwtkns/gdal-cheat-sheet" ["e"=1]
"BUPTLdy/MARTA-GAN" -> "BUPTLdy/Land_Use_CNN"
"BUPTLdy/MARTA-GAN" -> "rmkemker/EarthMapper"
"joeyos/SAR-imaging" -> "liuxinyu123/Matlab"
"joeyos/SAR-imaging" -> "zhaofei2048/sim_sar_img"
"joeyos/SAR-imaging" -> "likemoongg/SARbackprojection"
"joeyos/SAR-imaging" -> "denkywu/Simulation-of-SAR-Imaging-Algorithm"
"joeyos/SAR-imaging" -> "nnaka/sar"
"joeyos/SAR-imaging" -> "lwh521jll/Radar-SAR-simu"
"joeyos/SAR-imaging" -> "ngageoint/MATLAB_SAR"
"ceholden/TSTools" -> "ceholden/yatsm"
"GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus" -> "zlkanata/DeepGlobe-Road-Extraction-Challenge"
"GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus" -> "milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch"
"GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus" -> "fuweifu-vtoo/Semantic-segmentation"
"GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus" -> "WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class"
"GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"anxiangsir/deeplabv3-Tensorflow" -> "milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch"
"anxiangsir/deeplabv3-Tensorflow" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"anxiangsir/deeplabv3-Tensorflow" -> "WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class"
"anxiangsir/deeplabv3-Tensorflow" -> "wangye707/ICNet-paddlepaddle"
"luyanger1799/Amazing-Semantic-Segmentation" -> "BBuf/Keras-Semantic-Segmentation"
"luyanger1799/Amazing-Semantic-Segmentation" -> "lsh1994/keras-segmentation"
"luyanger1799/Amazing-Semantic-Segmentation" -> "divamgupta/image-segmentation-keras" ["e"=1]
"luyanger1799/Amazing-Semantic-Segmentation" -> "advaitsave/Multiclass-Semantic-Segmentation-CamVid"
"luyanger1799/Amazing-Semantic-Segmentation" -> "niecongchong/HRNet-keras-semantic-segmentation"
"luyanger1799/Amazing-Semantic-Segmentation" -> "bonlime/keras-deeplab-v3-plus" ["e"=1]
"luyanger1799/Amazing-Semantic-Segmentation" -> "jeffery-zhougang/DeeplabV3Plus-Keras-Retraining"
"luyanger1799/Amazing-Semantic-Segmentation" -> "MoleImg/Attention_UNet" ["e"=1]
"luyanger1799/Amazing-Semantic-Segmentation" -> "yingkaisha/keras-unet-collection" ["e"=1]
"luyanger1799/Amazing-Semantic-Segmentation" -> "DebeshJha/2020-CBMS-DoubleU-Net" ["e"=1]
"luyanger1799/Amazing-Semantic-Segmentation" -> "nabsabraham/focal-tversky-unet" ["e"=1]
"luyanger1799/Amazing-Semantic-Segmentation" -> "bubbliiiing/Semantic-Segmentation" ["e"=1]
"luyanger1799/Amazing-Semantic-Segmentation" -> "1044197988/TF.Keras-Commonly-used-models"
"luyanger1799/Amazing-Semantic-Segmentation" -> "ykamikawa/tf-keras-SegNet"
"luyanger1799/Amazing-Semantic-Segmentation" -> "nibtehaz/MultiResUNet" ["e"=1]
"SpaceGroupUCL/depthmapX" -> "varoudis/depthmapX"
"SpaceGroupUCL/depthmapX" -> "SpaceGroupUCL/qgisSpaceSyntaxToolkit"
"SpaceGroupUCL/depthmapX" -> "SMoG-Chalmers/PST"
"SpaceGroupUCL/depthmapX" -> "SpaceGroupUCL/Depthmap"
"dgrtwo/gleam" -> "andrea-cuttone/geoplotlib"
"gboeing/urban-data-science" -> "waddell/urban-informatics-and-visualization"
"gboeing/urban-data-science" -> "gboeing/osmnx"
"gboeing/urban-data-science" -> "gboeing/data-visualization"
"gboeing/urban-data-science" -> "UDST/pandana"
"gboeing/urban-data-science" -> "gboeing/osmnx-examples"
"gboeing/urban-data-science" -> "UDST/urbanaccess"
"gboeing/urban-data-science" -> "UDST/urbansim"
"gboeing/urban-data-science" -> "scikit-mobility/scikit-mobility"
"gboeing/urban-data-science" -> "pysal/pysal"
"gboeing/urban-data-science" -> "anitagraser/movingpandas"
"gboeing/urban-data-science" -> "mapbox/mapboxgl-jupyter"
"gboeing/urban-data-science" -> "OpenGeoscience/geonotebook"
"gboeing/urban-data-science" -> "martinfleis/momepy"
"gboeing/urban-data-science" -> "ResidentMario/geoplot"
"gboeing/urban-data-science" -> "geopandas/geopandas"
"Lydorn/Polygonization-by-Frame-Field-Learning" -> "zorzi-s/PolyWorldPretrainedNetwork"
"Lydorn/Polygonization-by-Frame-Field-Learning" -> "niecongchong/RS-building-regularization"
"Lydorn/Polygonization-by-Frame-Field-Learning" -> "fuzailpalnak/building-footprint-segmentation"
"Lydorn/Polygonization-by-Frame-Field-Learning" -> "SarahwXU/HiSup"
"Lydorn/Polygonization-by-Frame-Field-Learning" -> "Lydorn/mapalignment"
"Lydorn/Polygonization-by-Frame-Field-Learning" -> "chenzhaiyu/awesome-building-detection"
"Lydorn/Polygonization-by-Frame-Field-Learning" -> "songtaohe/Sat2Graph"
"Lydorn/Polygonization-by-Frame-Field-Learning" -> "neptune-ai/open-solution-mapping-challenge"
"Lydorn/Polygonization-by-Frame-Field-Learning" -> "pubgeo/monocular-geocentric-pose"
"Lydorn/Polygonization-by-Frame-Field-Learning" -> "tansor/VecRoad"
"Lydorn/Polygonization-by-Frame-Field-Learning" -> "zorzi-s/projectRegularization"
"GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images" -> "justchenhao/STANet"
"GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images" -> "likyoo/Siam-NestedUNet"
"GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images" -> "neverstoplearn/remote_sensing_change_detection"
"GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images" -> "rcdaudt/fully_convolutional_change_detection"
"GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images" -> "lehaifeng/DASNet"
"GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images" -> "daifeng2016/End-to-end-CD-for-VHR-satellite-image"
"GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images" -> "justchenhao/BIT_CD"
"GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images" -> "MinZHANG-WHU/FDCNN"
"GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images" -> "rulixiang/DSFANet"
"GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images" -> "feevos/ceecnet"
"GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images" -> "LiheYoung/SenseEarth2020-ChangeDetection"
"GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images" -> "wgcban/ChangeFormer"
"GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images" -> "wenhwu/awesome-remote-sensing-change-detection"
"GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images" -> "MinZHANG-WHU/Change-Detection-Review"
"GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images" -> "liumency/DSAMNet"
"PaddleCV-SIG/PaddleLabel" -> "nemonameless/PaddleDetection_YOLOSeries" ["e"=1]
"acgeospatial/Satellite_Imagery_Python" -> "acgeospatial/Geospatial_Python_CourseV1"
"acgeospatial/Satellite_Imagery_Python" -> "patrickcgray/open-geo-tutorial"
"acgeospatial/Satellite_Imagery_Python" -> "ceholden/open-geo-tutorial"
"Parker-Lyu/rscup2019_classifier" -> "fortitude94deng/baidu-remote-sensing"
"justchenhao/BIT_CD" -> "wgcban/ChangeFormer"
"justchenhao/BIT_CD" -> "Z-Zheng/ChangeStar"
"justchenhao/BIT_CD" -> "likyoo/change_detection.pytorch"
"justchenhao/BIT_CD" -> "justchenhao/STANet"
"justchenhao/BIT_CD" -> "likyoo/Siam-NestedUNet"
"justchenhao/BIT_CD" -> "rcdaudt/fully_convolutional_change_detection"
"justchenhao/BIT_CD" -> "GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images"
"justchenhao/BIT_CD" -> "LiheYoung/SenseEarth2020-ChangeDetection"
"justchenhao/BIT_CD" -> "MinZHANG-WHU/Change-Detection-Review"
"justchenhao/BIT_CD" -> "wgcban/ddpm-cd"
"justchenhao/BIT_CD" -> "justchenhao/IAug_CDNet"
"justchenhao/BIT_CD" -> "liumency/DSAMNet"
"justchenhao/BIT_CD" -> "likyoo/open-cd"
"justchenhao/BIT_CD" -> "shinianzhihou/ChangeDetection"
"justchenhao/BIT_CD" -> "wenhwu/awesome-remote-sensing-change-detection"
"giswqs/WhiteboxTools-ArcGIS" -> "giswqs/whitebox-python"
"giswqs/WhiteboxTools-ArcGIS" -> "jblindsay/whitebox-tools"
"giswqs/WhiteboxTools-ArcGIS" -> "giswqs/whiteboxgui"
"giswqs/WhiteboxTools-ArcGIS" -> "Esri/deep-learning-frameworks" ["e"=1]
"VIROBO-15/Transformer-in-Remote-Sensing" -> "ViTAE-Transformer/Remote-Sensing-RVSA" ["e"=1]
"VIROBO-15/Transformer-in-Remote-Sensing" -> "danfenghong/IEEE_TGRS_SpectralFormer" ["e"=1]
"VIROBO-15/Transformer-in-Remote-Sensing" -> "likyoo/open-cd"
"VIROBO-15/Transformer-in-Remote-Sensing" -> "likyoo/change_detection.pytorch"
"VIROBO-15/Transformer-in-Remote-Sensing" -> "WangLibo1995/GeoSeg"
"LiheYoung/SenseEarth2020-ChangeDetection" -> "Z-Zheng/ChangeStar"
"LiheYoung/SenseEarth2020-ChangeDetection" -> "likyoo/change_detection.pytorch"
"LiheYoung/SenseEarth2020-ChangeDetection" -> "justchenhao/STANet"
"LiheYoung/SenseEarth2020-ChangeDetection" -> "businiaoo/PRCV2021-Change-Detection-Contest-2nd-place-Solution"
"LiheYoung/SenseEarth2020-ChangeDetection" -> "likyoo/Siam-NestedUNet"
"LiheYoung/SenseEarth2020-ChangeDetection" -> "justchenhao/BIT_CD"
"LiheYoung/SenseEarth2020-ChangeDetection" -> "justchenhao/IAug_CDNet"
"LiheYoung/SenseEarth2020-ChangeDetection" -> "MinZHANG-WHU/Change-Detection-Review"
"LiheYoung/SenseEarth2020-ChangeDetection" -> "wenhwu/awesome-remote-sensing-change-detection"
"LiheYoung/SenseEarth2020-ChangeDetection" -> "GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images"
"LiheYoung/SenseEarth2020-ChangeDetection" -> "wgcban/ChangeFormer"
"LiheYoung/SenseEarth2020-ChangeDetection" -> "shinianzhihou/ChangeDetection"
"LiheYoung/SenseEarth2020-ChangeDetection" -> "likyoo/open-cd"
"LiheYoung/SenseEarth2020-ChangeDetection" -> "rcdaudt/fully_convolutional_change_detection"
"LiheYoung/SenseEarth2020-ChangeDetection" -> "chenpan0615/FCCDN_pytorch"
"feevos/ceecnet" -> "neverstoplearn/remote_sensing_change_detection"
"justchenhao/IAug_CDNet" -> "Z-Zheng/ChangeStar"
"lehaifeng/DASNet" -> "rcdaudt/fully_convolutional_change_detection"
"lehaifeng/DASNet" -> "neverstoplearn/remote_sensing_change_detection"
"lehaifeng/DASNet" -> "GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images"
"lehaifeng/DASNet" -> "likyoo/Siam-NestedUNet"
"lehaifeng/DASNet" -> "liumency/DSAMNet"
"lehaifeng/DASNet" -> "justchenhao/STANet"
"lehaifeng/DASNet" -> "feevos/ceecnet"
"lehaifeng/DASNet" -> "justchenhao/IAug_CDNet"
"lehaifeng/DASNet" -> "Z-Zheng/ChangeStar"
"lehaifeng/DASNet" -> "daifeng2016/End-to-end-CD-for-VHR-satellite-image"
"microsoft/GlobalMLBuildingFootprints" -> "microsoft/USBuildingFootprints"
"microsoft/GlobalMLBuildingFootprints" -> "microsoft/RoadDetections"
"microsoft/GlobalMLBuildingFootprints" -> "microsoft/torchgeo"
"microsoft/GlobalMLBuildingFootprints" -> "mszell/geospatialdatascience"
"microsoft/GlobalMLBuildingFootprints" -> "microsoft/satellite-imagery-labeling-tool"
"microsoft/GlobalMLBuildingFootprints" -> "giswqs/qgis-earthengine-examples"
"microsoft/GlobalMLBuildingFootprints" -> "giswqs/Awesome-GEE"
"microsoft/GlobalMLBuildingFootprints" -> "samapriya/awesome-gee-community-datasets"
"microsoft/GlobalMLBuildingFootprints" -> "giswqs/geemap"
"microsoft/GlobalMLBuildingFootprints" -> "robmarkcole/satellite-image-deep-learning"
"microsoft/GlobalMLBuildingFootprints" -> "opengeospatial/geoparquet"
"microsoft/GlobalMLBuildingFootprints" -> "acgeospatial/awesome-earthobservation-code"
"microsoft/GlobalMLBuildingFootprints" -> "giswqs/geospatial-data-catalogs"
"microsoft/GlobalMLBuildingFootprints" -> "Lydorn/Polygonization-by-Frame-Field-Learning"
"microsoft/GlobalMLBuildingFootprints" -> "gee-community/qgis-earthengine-plugin"
"rulixiang/DSFANet" -> "llu025/Heterogeneous_CD"
"rulixiang/DSFANet" -> "sudipansaha/dcvaVHROptical"
"rulixiang/DSFANet" -> "Bobholamovic/ChangeDetectionToolbox"
"rulixiang/DSFANet" -> "daifeng2016/End-to-end-CD-for-VHR-satellite-image"
"rulixiang/DSFANet" -> "granularai/fabric"
"rulixiang/DSFANet" -> "MinZHANG-WHU/FDCNN"
"rulixiang/DSFANet" -> "vbhavank/Siamese-neural-network-for-change-detection"
"rulixiang/DSFANet" -> "rcdaudt/fully_convolutional_change_detection"
"rulixiang/DSFANet" -> "rulixiang/ChangeDetectionPCAKmeans"
"rulixiang/DSFANet" -> "GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images"
"rulixiang/DSFANet" -> "mvkolos/siamese-change-detection"
"sentinel-hub/custom-scripts" -> "sentinel-hub/sentinelhub-py"
"sentinel-hub/custom-scripts" -> "sentinel-hub/eo-learn"
"sentinel-hub/custom-scripts" -> "Fernerkundung/awesome-sentinel"
"sentinel-hub/custom-scripts" -> "giswqs/Awesome-GEE"
"sentinel-hub/custom-scripts" -> "acgeospatial/awesome-earthobservation-code"
"sentinel-hub/custom-scripts" -> "sentinel-hub/sentinel2-cloud-detector"
"sentinel-hub/custom-scripts" -> "giswqs/qgis-earthengine-examples"
"sentinel-hub/custom-scripts" -> "planetlabs/notebooks"
"sentinel-hub/custom-scripts" -> "giswqs/earthengine-py-notebooks"
"sentinel-hub/custom-scripts" -> "davemlz/eemont"
"sentinel-hub/custom-scripts" -> "gee-community/gee_tools"
"sentinel-hub/custom-scripts" -> "sentinelsat/sentinelsat"
"sentinel-hub/custom-scripts" -> "google/earthengine-community"
"sentinel-hub/custom-scripts" -> "giswqs/geemap"
"sentinel-hub/custom-scripts" -> "johntruckenbrodt/pyroSAR"
"sat-utils/sat-api" -> "sat-utils/sat-stac"
"sat-utils/sat-api" -> "sat-utils/sat-search"
"sat-utils/sat-api" -> "mapbox/landsat-tiler"
"sat-utils/sat-api" -> "radiantearth/stac-spec"
"sat-utils/sat-api" -> "radiantearth/stac-browser"
"sat-utils/sat-api" -> "RemotePixel/remotepixel-api"
"sat-utils/sat-api" -> "mapbox/rio-tiler"
"sat-utils/sat-api" -> "developmentseed/landsat-api"
"sat-utils/sat-api" -> "developmentseed/geolambda"
"sat-utils/sat-api" -> "sat-utils/sat-download"
"sat-utils/sat-api" -> "RemotePixel/remotepixel-tiler"
"sat-utils/sat-api" -> "mapbox/sentinel-tiler"
"BUPTLdy/Land_Use_CNN" -> "yangxue0827/CNN_UCMerced-LandUse_Caffe"
"BUPTLdy/Land_Use_CNN" -> "BUPTLdy/MARTA-GAN"
"BUPTLdy/Land_Use_CNN" -> "mortcanty/CRCPython"
"shapely/shapely" -> "rasterio/rasterio"
"shapely/shapely" -> "libgeos/geos" ["e"=1]
"shapely/shapely" -> "geopandas/geopandas"
"shapely/shapely" -> "Toblerity/Fiona"
"shapely/shapely" -> "geopandas/dask-geopandas"
"shapely/shapely" -> "makepath/xarray-spatial"
"shapely/shapely" -> "scikit-geometry/scikit-geometry" ["e"=1]
"shapely/shapely" -> "pygeos/pygeos"
"shapely/shapely" -> "pyproj4/pyproj"
"shapely/shapely" -> "stac-utils/pystac"
"shapely/shapely" -> "geopandas/contextily"
"shapely/shapely" -> "geoalchemy/geoalchemy2"
"shapely/shapely" -> "corteva/rioxarray"
"shapely/shapely" -> "banesullivan/localtileserver"
"shapely/shapely" -> "jazzband/geojson"
"pysal/pysal" -> "makepath/xarray-spatial"
"pysal/pysal" -> "pysal/libpysal"
"pysal/pysal" -> "geopandas/geopandas"
"pysal/pysal" -> "ResidentMario/geoplot"
"pysal/pysal" -> "anitagraser/movingpandas"
"pysal/pysal" -> "Toblerity/Fiona"
"pysal/pysal" -> "pysal/spopt"
"pysal/pysal" -> "gdsbook/book"
"pysal/pysal" -> "scikit-mobility/scikit-mobility"
"pysal/pysal" -> "pysal/esda"
"pysal/pysal" -> "GeoDaCenter/geoda"
"pysal/pysal" -> "sacridini/Awesome-Geospatial"
"pysal/pysal" -> "mapbox/rasterio"
"pysal/pysal" -> "pysal/mgwr"
"pysal/pysal" -> "corteva/rioxarray"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "fuweifu-vtoo/Semantic-segmentation"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "milleniums/underwater-object-detection-mmdetection" ["e"=1]
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "1044197988/Semantic-segmentation-of-remote-sensing-images"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "lcylmhlcy/Semantic-segmentation"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "anxiangsir/deeplabv3-Tensorflow"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "cuilunan/Unet-of-remote-sensing-image"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "AI-Chen/Deeplab-v3-Plus-pytorch-"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "wenhwu/awesome-remote-sensing-change-detection"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "CarryHJR/remote-sense-quickstart"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "LiheYoung/SenseEarth2020-ChangeDetection"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class"
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" -> "lin-honghui/tianchi_CountyAgriculturalBrain_top1" ["e"=1]
"makepath/xarray-spatial" -> "corteva/rioxarray"
"makepath/xarray-spatial" -> "geopandas/dask-geopandas"
"makepath/xarray-spatial" -> "corteva/geocube"
"makepath/xarray-spatial" -> "holoviz/spatialpandas"
"makepath/xarray-spatial" -> "fatiando/verde" ["e"=1]
"makepath/xarray-spatial" -> "gjoseph92/stackstac"
"makepath/xarray-spatial" -> "earthlab/earthpy"
"makepath/xarray-spatial" -> "mdbartos/pysheds" ["e"=1]
"makepath/xarray-spatial" -> "pytroll/pyresample" ["e"=1]
"makepath/xarray-spatial" -> "anitagraser/movingpandas"
"makepath/xarray-spatial" -> "GeoscienceAustralia/dea-notebooks"
"makepath/xarray-spatial" -> "microsoft/PlanetaryComputerExamples"
"makepath/xarray-spatial" -> "Ouranosinc/xclim" ["e"=1]
"makepath/xarray-spatial" -> "opengeospatial/geoparquet"
"makepath/xarray-spatial" -> "sentinel-hub/eo-learn"
"eMapR/LT-GEE" -> "gee-community/ee-palettes"
"eMapR/LT-GEE" -> "jldowns/google_earth_engine_notebook"
"eMapR/LT-GEE" -> "sacridini/GEET"
"eMapR/LT-GEE" -> "gee-community/gee_tools"
"eMapR/LT-GEE" -> "Fernerkundung/EarthEngine_scripts"
"eMapR/LT-GEE" -> "mortcanty/earthengine"
"eMapR/LT-GEE" -> "fitoprincipe/geetools-code-editor"
"eMapR/LT-GEE" -> "brmagnuson/LandFallowingInEarthEngine"
"eMapR/LT-GEE" -> "eMapR/TimeSync-Legacy"
"eMapR/LT-GEE" -> "gee-community/ee-jupyter-contrib"
"eMapR/LT-GEE" -> "tracek/gee_asset_manager"
"eMapR/LT-GEE" -> "fitoprincipe/geebap"
"timothyb0912/pylogit" -> "UDST/choicemodels"
"timothyb0912/pylogit" -> "michelbierlaire/biogeme"
"timothyb0912/pylogit" -> "ferasz/LCCM"
"ESA-PhiLab/OpenSarToolkit" -> "johntruckenbrodt/pyroSAR"
"ESA-PhiLab/OpenSarToolkit" -> "bopen/xarray-sentinel"
"ESA-PhiLab/OpenSarToolkit" -> "ESA-PhiLab/OST_Notebooks"
"ESA-PhiLab/OpenSarToolkit" -> "birgander2/PyRAT"
"ESA-PhiLab/OpenSarToolkit" -> "bopen/sarsen"
"ESA-PhiLab/OpenSarToolkit" -> "scottyhq/dinosar"
"ESA-PhiLab/OpenSarToolkit" -> "ngageoint/sarpy"
"ESA-PhiLab/OpenSarToolkit" -> "senbox-org/s1tbx"
"birgander2/PyRAT" -> "GeoscienceAustralia/PyRate"
"birgander2/PyRAT" -> "EO-College/tomography_tutorial"
"birgander2/PyRAT" -> "ngageoint/sarpy"
"birgander2/PyRAT" -> "johntruckenbrodt/pyroSAR"
"birgander2/PyRAT" -> "dm6718/RITSAR"
"birgander2/PyRAT" -> "ngageoint/MATLAB_SAR"
"birgander2/PyRAT" -> "birgander2/RAT"
"birgander2/PyRAT" -> "senbox-org/s1tbx"
"birgander2/PyRAT" -> "scottyhq/dinosar"
"birgander2/PyRAT" -> "hfattahi/PySAR"
"birgander2/PyRAT" -> "isce-framework/isce3"
"birgander2/PyRAT" -> "noobmartin/Open-source-SAR-simulator"
"birgander2/PyRAT" -> "RadarCODE/awesome-sar"
"johntruckenbrodt/pyroSAR" -> "ESA-PhiLab/OpenSarToolkit"
"johntruckenbrodt/pyroSAR" -> "GeoscienceAustralia/PyRate"
"johntruckenbrodt/pyroSAR" -> "RadarCODE/awesome-sar"
"johntruckenbrodt/pyroSAR" -> "bopen/sarsen"
"johntruckenbrodt/pyroSAR" -> "isce-framework/isce2"
"johntruckenbrodt/pyroSAR" -> "ngageoint/sarpy"
"johntruckenbrodt/pyroSAR" -> "birgander2/PyRAT"
"johntruckenbrodt/pyroSAR" -> "bopen/xarray-sentinel"
"johntruckenbrodt/pyroSAR" -> "ngageoint/MATLAB_SAR"
"johntruckenbrodt/pyroSAR" -> "senbox-org/s1tbx"
"johntruckenbrodt/pyroSAR" -> "sentinelsat/sentinelsat"
"johntruckenbrodt/pyroSAR" -> "sentinel-hub/sentinel2-cloud-detector"
"johntruckenbrodt/pyroSAR" -> "corteva/rioxarray"
"johntruckenbrodt/pyroSAR" -> "insarlab/MintPy"
"johntruckenbrodt/pyroSAR" -> "Fernerkundung/awesome-sentinel"
"ngageoint/MATLAB_SAR" -> "ngageoint/sarpy"
"ngageoint/MATLAB_SAR" -> "dm6718/RITSAR"
"ngageoint/MATLAB_SAR" -> "nnaka/sar"
"ngageoint/MATLAB_SAR" -> "ngageoint/six-library"
"ngageoint/MATLAB_SAR" -> "liuxinyu123/Matlab"
"ngageoint/MATLAB_SAR" -> "joeyos/SAR-imaging"
"ngageoint/MATLAB_SAR" -> "EO-College/tomography_tutorial"
"ngageoint/MATLAB_SAR" -> "likemoongg/SARbackprojection"
"ngageoint/MATLAB_SAR" -> "birgander2/PyRAT"
"ngageoint/MATLAB_SAR" -> "denkywu/SAR-Synthetic-Aperture-Radar"
"ngageoint/MATLAB_SAR" -> "johntruckenbrodt/pyroSAR"
"ngageoint/MATLAB_SAR" -> "StefanJAuer/RaySAR"
"ngageoint/MATLAB_SAR" -> "denkywu/InSAR-Simulation-and-Studies"
"ngageoint/MATLAB_SAR" -> "denkywu/Simulation-of-SAR-Imaging-Algorithm"
"pytroll/tutorial-satpy-half-day" -> "pysal/scipy2019-intermediate-gds"
"WHULuoJiaTeam/luojianet" -> "niecongchong/RS-building-regularization"
"WHULuoJiaTeam/luojianet" -> "PaddlePaddle/PaddleRS"
"WHULuoJiaTeam/luojianet" -> "ViTAE-Transformer/ViTAE-Transformer-Remote-Sensing" ["e"=1]
"Bobholamovic/ChangeDetectionToolbox" -> "rulixiang/DSFANet"
"Bobholamovic/ChangeDetectionToolbox" -> "shinianzhihou/ChangeDetection"
"Bobholamovic/ChangeDetectionToolbox" -> "rulixiang/ChangeDetectionPCAKmeans"
"Bobholamovic/ChangeDetectionToolbox" -> "llu025/Heterogeneous_CD"
"Bobholamovic/ChangeDetectionToolbox" -> "daifeng2016/End-to-end-CD-for-VHR-satellite-image"
"Bobholamovic/ChangeDetectionToolbox" -> "MinZHANG-WHU/Change-Detection-Review"
"Bobholamovic/ChangeDetectionToolbox" -> "abhijeet3922/Change-Detection-in-Satellite-Imagery"
"Bobholamovic/ChangeDetectionToolbox" -> "Bobholamovic/CDLab"
"Bobholamovic/ChangeDetectionToolbox" -> "GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images"
"Bobholamovic/ChangeDetectionToolbox" -> "LiheYoung/SenseEarth2020-ChangeDetection"
"Bobholamovic/ChangeDetectionToolbox" -> "kyoukuntaro/FCSN_for_ChangeDetection_IGARSS2018"
"Bobholamovic/ChangeDetectionToolbox" -> "wenhwu/awesome-remote-sensing-change-detection"
"Bobholamovic/ChangeDetectionToolbox" -> "gmayday1997/SceneChangeDet"
"Bobholamovic/ChangeDetectionToolbox" -> "likyoo/change_detection.pytorch"
"Bobholamovic/ChangeDetectionToolbox" -> "wangle53/CSA-CDGAN"
"cuilunan/Unet-of-remote-sensing-image" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"cuilunan/Unet-of-remote-sensing-image" -> "YudeWang/UNet-Satellite-Image-Segmentation"
"cuilunan/Unet-of-remote-sensing-image" -> "unlimblue/u_net"
"cuilunan/Unet-of-remote-sensing-image" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"cuilunan/Unet-of-remote-sensing-image" -> "xungeer29/Remote-Sensing-Image-Classification"
"cuilunan/Unet-of-remote-sensing-image" -> "milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch"
"cuilunan/Unet-of-remote-sensing-image" -> "ChienWong/ResUnet-a"
"cuilunan/Unet-of-remote-sensing-image" -> "BUPTLdy/Land_Use_CNN"
"gmayday1997/SceneChangeDet" -> "rcdaudt/fully_convolutional_change_detection"
"gmayday1997/SceneChangeDet" -> "leonardoaraujosantos/ChangeNet"
"gmayday1997/SceneChangeDet" -> "shinianzhihou/ChangeDetection"
"gmayday1997/SceneChangeDet" -> "kensakurada/sscdnet"
"gmayday1997/SceneChangeDet" -> "vbhavank/Siamese-neural-network-for-change-detection"
"gmayday1997/SceneChangeDet" -> "lehaifeng/DASNet"
"gmayday1997/SceneChangeDet" -> "rulixiang/DSFANet"
"gmayday1997/SceneChangeDet" -> "kyoukuntaro/FCSN_for_ChangeDetection_IGARSS2018"
"gmayday1997/SceneChangeDet" -> "Bobholamovic/ChangeDetectionToolbox"
"gmayday1997/SceneChangeDet" -> "daifeng2016/End-to-end-CD-for-VHR-satellite-image"
"gmayday1997/SceneChangeDet" -> "xdspacelab/sscdnet"
"gmayday1997/SceneChangeDet" -> "wenhwu/awesome-remote-sensing-change-detection"
"gmayday1997/SceneChangeDet" -> "MinZHANG-WHU/Change-Detection-Review"
"gmayday1997/SceneChangeDet" -> "Bobholamovic/FCN-CD-PyTorch"
"gmayday1997/SceneChangeDet" -> "abhijeet3922/Change-Detection-in-Satellite-Imagery"
"kyoukuntaro/FCSN_for_ChangeDetection_IGARSS2018" -> "rcdaudt/fully_convolutional_change_detection"
"kyoukuntaro/FCSN_for_ChangeDetection_IGARSS2018" -> "geekysethi/Urbanization-change-detection"
"rcdaudt/fully_convolutional_change_detection" -> "kyoukuntaro/FCSN_for_ChangeDetection_IGARSS2018"
"rcdaudt/fully_convolutional_change_detection" -> "rcdaudt/patch_based_change_detection"
"rcdaudt/fully_convolutional_change_detection" -> "gmayday1997/SceneChangeDet"
"rcdaudt/fully_convolutional_change_detection" -> "daifeng2016/End-to-end-CD-for-VHR-satellite-image"
"rcdaudt/fully_convolutional_change_detection" -> "GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images"
"rcdaudt/fully_convolutional_change_detection" -> "lehaifeng/DASNet"
"rcdaudt/fully_convolutional_change_detection" -> "likyoo/Siam-NestedUNet"
"rcdaudt/fully_convolutional_change_detection" -> "neverstoplearn/remote_sensing_change_detection"
"rcdaudt/fully_convolutional_change_detection" -> "justchenhao/BIT_CD"
"rcdaudt/fully_convolutional_change_detection" -> "rulixiang/DSFANet"
"rcdaudt/fully_convolutional_change_detection" -> "granularai/fabric"
"rcdaudt/fully_convolutional_change_detection" -> "Bobholamovic/CDLab"
"rcdaudt/fully_convolutional_change_detection" -> "llu025/Heterogeneous_CD"
"rcdaudt/fully_convolutional_change_detection" -> "justchenhao/STANet"
"rcdaudt/fully_convolutional_change_detection" -> "MinZHANG-WHU/FDCNN"
"davemlz/eemont" -> "davemlz/awesome-spectral-indices"
"davemlz/eemont" -> "samapriya/awesome-gee-community-datasets"
"davemlz/eemont" -> "gee-community/gee_tools"
"davemlz/eemont" -> "aazuspan/wxee"
"davemlz/eemont" -> "gee-community/ee-palettes"
"davemlz/eemont" -> "giswqs/Awesome-GEE"
"davemlz/eemont" -> "adugnag/gee_s1_ard"
"davemlz/eemont" -> "acgeospatial/awesome-earthobservation-code"
"davemlz/eemont" -> "gee-community/qgis-earthengine-plugin"
"davemlz/eemont" -> "csaybar/EEwPython"
"davemlz/eemont" -> "awesome-spectral-indices/awesome-spectral-indices"
"davemlz/eemont" -> "davemlz/cubo"
"davemlz/eemont" -> "philippgaertner/awesome-earth-engine-apps"
"davemlz/eemont" -> "giswqs/earthengine-py-notebooks"
"davemlz/eemont" -> "r-earthengine/ee_extra"
"mj129/CoANet" -> "tansor/VecRoad"
"mj129/CoANet" -> "astro-ck/Road-Extraction"
"mj129/CoANet" -> "songtaohe/Sat2Graph"
"mj129/CoANet" -> "TonyXuQAQ/RNGDetPlusPlus"
"RadarCODE/awesome-sar" -> "isce-framework/isce2"
"RadarCODE/awesome-sar" -> "insarlab/MintPy"
"RadarCODE/awesome-sar" -> "johntruckenbrodt/pyroSAR"
"RadarCODE/awesome-sar" -> "GeoscienceAustralia/PyRate"
"RadarCODE/awesome-sar" -> "dbekaert/StaMPS"
"RadarCODE/awesome-sar" -> "bopen/xarray-sentinel"
"RadarCODE/awesome-sar" -> "birgander2/PyRAT"
"RadarCODE/awesome-sar" -> "senbox-org/s1tbx"
"RadarCODE/awesome-sar" -> "dm6718/RITSAR"
"RadarCODE/awesome-sar" -> "bopen/sarsen"
"RadarCODE/awesome-sar" -> "isce-framework/isce2-docs"
"RadarCODE/awesome-sar" -> "yumorishita/LiCSBAS"
"RadarCODE/awesome-sar" -> "hfattahi/PySAR"
"RadarCODE/awesome-sar" -> "StefanJAuer/RaySAR"
"RadarCODE/awesome-sar" -> "denkywu/SAR-Synthetic-Aperture-Radar"
"USGS-EROS/espa-api" -> "USGS-EROS/espa-bulk-downloader"
"USGS-EROS/espa-api" -> "USGS-EROS/espa-cloud-masking"
"aazuspan/wxee" -> "davemlz/eemont"
"aazuspan/wxee" -> "Servir-Mekong/hydra-floods" ["e"=1]
"aazuspan/wxee" -> "corteva/geocube"
"gee-community/ee-palettes" -> "gee-community/gee_tools"
"gee-community/ee-palettes" -> "eMapR/LT-GEE"
"gee-community/ee-palettes" -> "fitoprincipe/geetools-code-editor"
"gee-community/ee-palettes" -> "samapriya/awesome-gee-community-datasets"
"gee-community/ee-palettes" -> "samapriya/geeup"
"gee-community/ee-palettes" -> "davemlz/eemont"
"gee-community/ee-palettes" -> "gee-community/awesome-google-earth-engine"
"gee-community/ee-palettes" -> "gee-community/example-scripts"
"gee-community/ee-palettes" -> "Fernerkundung/EarthEngine_scripts"
"gee-community/ee-palettes" -> "tracek/gee_asset_manager"
"gee-community/ee-palettes" -> "mortcanty/earthengine"
"gee-community/ee-palettes" -> "sacridini/GEET"
"gee-community/ee-palettes" -> "csaybar/EEwPython"
"gee-community/ee-palettes" -> "giswqs/Awesome-GEE"
"gee-community/ee-palettes" -> "gee-community/ee-jupyter-contrib"
"opendatacube/datacube-core" -> "corteva/rioxarray"
"opendatacube/datacube-core" -> "GeoscienceAustralia/dea-notebooks"
"opendatacube/datacube-core" -> "opendatacube/odc-stac"
"opendatacube/datacube-core" -> "digitalearthafrica/deafrica-sandbox-notebooks"
"opendatacube/datacube-core" -> "johntruckenbrodt/pyroSAR"
"opendatacube/datacube-core" -> "radiantearth/stac-spec"
"opendatacube/datacube-core" -> "opendatacube/cube-in-a-box"
"opendatacube/datacube-core" -> "opendatacube/datacube-ows"
"opendatacube/datacube-core" -> "sentinel-hub/eo-learn"
"opendatacube/datacube-core" -> "opendatacube/odc-tools"
"opendatacube/datacube-core" -> "dymaxionlabs/dask-rasterio" ["e"=1]
"opendatacube/datacube-core" -> "gjoseph92/stackstac"
"opendatacube/datacube-core" -> "stac-utils/pystac"
"opendatacube/datacube-core" -> "Fernerkundung/awesome-sentinel"
"opendatacube/datacube-core" -> "developmentseed/titiler"
"urschrei/Geopython" -> "jorisvandenbossche/geopandas-tutorial"
"Fernerkundung/awesome-sentinel" -> "sentinelsat/sentinelsat"
"Fernerkundung/awesome-sentinel" -> "sentinel-hub/sentinelhub-py"
"Fernerkundung/awesome-sentinel" -> "sentinel-hub/sentinel2-cloud-detector"
"Fernerkundung/awesome-sentinel" -> "olivierhagolle/Sentinel-download"
"Fernerkundung/awesome-sentinel" -> "sentinel-hub/custom-scripts"
"Fernerkundung/awesome-sentinel" -> "johntruckenbrodt/pyroSAR"
"Fernerkundung/awesome-sentinel" -> "sentinel-hub/eo-learn"
"Fernerkundung/awesome-sentinel" -> "acgeospatial/awesome-earthobservation-code"
"Fernerkundung/awesome-sentinel" -> "corteva/rioxarray"
"Fernerkundung/awesome-sentinel" -> "radiantearth/stac-spec"
"Fernerkundung/awesome-sentinel" -> "pytroll/satpy" ["e"=1]
"Fernerkundung/awesome-sentinel" -> "opendatacube/datacube-core"
"Fernerkundung/awesome-sentinel" -> "lanha/DSen2"
"Fernerkundung/awesome-sentinel" -> "deepVector/geospatial-machine-learning"
"Fernerkundung/awesome-sentinel" -> "developmentseed/label-maker"
"deepVector/geospatial-machine-learning" -> "sshuair/torchsat"
"deepVector/geospatial-machine-learning" -> "giswqs/python-geospatial"
"deepVector/geospatial-machine-learning" -> "acgeospatial/awesome-earthobservation-code"
"deepVector/geospatial-machine-learning" -> "sentinel-hub/eo-learn"
"deepVector/geospatial-machine-learning" -> "developmentseed/label-maker"
"deepVector/geospatial-machine-learning" -> "Fernerkundung/awesome-sentinel"
"deepVector/geospatial-machine-learning" -> "azavea/raster-vision"
"deepVector/geospatial-machine-learning" -> "planetlabs/notebooks"
"deepVector/geospatial-machine-learning" -> "chrieke/awesome-geospatial-companies"
"deepVector/geospatial-machine-learning" -> "nshaud/DeepNetsForEO"
"deepVector/geospatial-machine-learning" -> "patrickcgray/open-geo-tutorial"
"deepVector/geospatial-machine-learning" -> "corteva/geocube"
"deepVector/geospatial-machine-learning" -> "jensleitloff/CNN-Sentinel"
"deepVector/geospatial-machine-learning" -> "sentinel-hub/sentinel2-cloud-detector"
"deepVector/geospatial-machine-learning" -> "Esri/raster-deep-learning" ["e"=1]
"azavea/raster-vision" -> "mapbox/robosat"
"azavea/raster-vision" -> "chrieke/awesome-satellite-imagery-datasets"
"azavea/raster-vision" -> "sentinel-hub/eo-learn"
"azavea/raster-vision" -> "microsoft/torchgeo"
"azavea/raster-vision" -> "robmarkcole/satellite-image-deep-learning"
"azavea/raster-vision" -> "acgeospatial/awesome-earthobservation-code"
"azavea/raster-vision" -> "sentinelsat/sentinelsat"
"azavea/raster-vision" -> "sacridini/Awesome-Geospatial"
"azavea/raster-vision" -> "developmentseed/label-maker"
"azavea/raster-vision" -> "nshaud/DeepNetsForEO"
"azavea/raster-vision" -> "mapbox/rasterio"
"azavea/raster-vision" -> "CosmiQ/solaris"
"azavea/raster-vision" -> "azavea/raster-vision-examples"
"azavea/raster-vision" -> "sshuair/torchsat"
"azavea/raster-vision" -> "radiantearth/stac-spec"
"ceholden/open-geo-tutorial" -> "patrickcgray/open-geo-tutorial"
"ceholden/open-geo-tutorial" -> "ceholden/landsat_preprocess"
"ceholden/open-geo-tutorial" -> "acgeospatial/Satellite_Imagery_Python"
"ceholden/open-geo-tutorial" -> "beeoda/tutorials"
"ceholden/open-geo-tutorial" -> "sarasafavi/remote-sensing-with-python"
"ceholden/open-geo-tutorial" -> "bleutner/RStoolbox" ["e"=1]
"ceholden/open-geo-tutorial" -> "ceholden/yatsm"
"jiankang1991/road_extraction_remote_sensing" -> "zetrun-liu/FCNs-for-road-extraction-keras"
"zlkanata/DeepGlobe-Road-Extraction-Challenge" -> "GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus"
"zlkanata/DeepGlobe-Road-Extraction-Challenge" -> "AstarLight/Satellite-Segmentation"
"zlkanata/DeepGlobe-Road-Extraction-Challenge" -> "SpaceNetChallenge/RoadDetector"
"zlkanata/DeepGlobe-Road-Extraction-Challenge" -> "mitroadmaps/roadtracer"
"zlkanata/DeepGlobe-Road-Extraction-Challenge" -> "crowdAI/crowdai-mapping-challenge-mask-rcnn"
"zlkanata/DeepGlobe-Road-Extraction-Challenge" -> "anilbatra2185/road_connectivity"
"zlkanata/DeepGlobe-Road-Extraction-Challenge" -> "jiankang1991/road_extraction_remote_sensing"
"zlkanata/DeepGlobe-Road-Extraction-Challenge" -> "snakers4/spacenet-three"
"zlkanata/DeepGlobe-Road-Extraction-Challenge" -> "LiuDongjing/BuildingChangeDetector"
"zlkanata/DeepGlobe-Road-Extraction-Challenge" -> "DuFanXin/deep_residual_unet"
"zlkanata/DeepGlobe-Road-Extraction-Challenge" -> "neptune-ml/open-solution-mapping-challenge"
"zlkanata/DeepGlobe-Road-Extraction-Challenge" -> "openseg-group/openseg.pytorch" ["e"=1]
"zlkanata/DeepGlobe-Road-Extraction-Challenge" -> "SpaceNetChallenge/BuildingDetectors_Round2"
"zlkanata/DeepGlobe-Road-Extraction-Challenge" -> "ximimiao/deeplabv3-Tensorflow"
"zlkanata/DeepGlobe-Road-Extraction-Challenge" -> "liaopeiyuan/ml-arsenal-public" ["e"=1]
"fuweifu-vtoo/Semantic-segmentation" -> "milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch"
"fuweifu-vtoo/Semantic-segmentation" -> "lcylmhlcy/Semantic-segmentation"
"fuweifu-vtoo/Semantic-segmentation" -> "AI-Chen/Deeplab-v3-Plus-pytorch-"
"fuweifu-vtoo/Semantic-segmentation" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"fuweifu-vtoo/Semantic-segmentation" -> "1044197988/Semantic-segmentation-of-remote-sensing-images"
"fuweifu-vtoo/Semantic-segmentation" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"fuweifu-vtoo/Semantic-segmentation" -> "GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus"
"fuweifu-vtoo/Semantic-segmentation" -> "cuilunan/Unet-of-remote-sensing-image"
"fuweifu-vtoo/Semantic-segmentation" -> "guanfuchen/semseg" ["e"=1]
"fuweifu-vtoo/Semantic-segmentation" -> "anxiangsir/deeplabv3-Tensorflow"
"fuweifu-vtoo/Semantic-segmentation" -> "lehaifeng/SCAttNet"
"fuweifu-vtoo/Semantic-segmentation" -> "jayboxyz/image_segmentation_dl"
"fuweifu-vtoo/Semantic-segmentation" -> "gengyanlei/segmentation_pytorch" ["e"=1]
"motokimura/spacenet_building_detection" -> "SpaceNetChallenge/BuildingDetectors_Round2"
"motokimura/spacenet_building_detection" -> "YuansongFeng/satellite_building_detection.pytorch"
"motokimura/spacenet_building_detection" -> "neptune-ai/open-solution-mapping-challenge"
"motokimura/spacenet_building_detection" -> "DIUx-xView/xview2-baseline"
"motokimura/spacenet_building_detection" -> "gistairc/ABCDdataset"
"motokimura/spacenet_building_detection" -> "EL-BID/Building-Detection"
"motokimura/spacenet_building_detection" -> "rodekruis/automated-building-detection"
"DataXujing/CNN-paper2" -> "jayboxyz/image_segmentation_dl"
"StefanJAuer/RaySAR" -> "noobmartin/Open-source-SAR-simulator"
"StefanJAuer/RaySAR" -> "EO-College/tomography_tutorial"
"StefanJAuer/RaySAR" -> "DinhHoTongMinh/TomoSAR"
"StefanJAuer/RaySAR" -> "dbekaert/TRAIN"
"StefanJAuer/RaySAR" -> "ngageoint/MATLAB_SAR"
"StefanJAuer/RaySAR" -> "nnaka/sar"
"StefanJAuer/RaySAR" -> "hfattahi/PySAR"
"StefanJAuer/RaySAR" -> "dm6718/RITSAR"
"StefanJAuer/RaySAR" -> "TUDelftGeodesy/Doris"
"StefanJAuer/RaySAR" -> "scottyhq/dinosar"
"StefanJAuer/RaySAR" -> "isce-framework/isce3"
"anitagraser/movingpandas" -> "scikit-mobility/scikit-mobility"
"anitagraser/movingpandas" -> "makepath/xarray-spatial"
"anitagraser/movingpandas" -> "anitagraser/movingpandas-examples"
"anitagraser/movingpandas" -> "geopandas/dask-geopandas"
"anitagraser/movingpandas" -> "holoviz/spatialpandas"
"anitagraser/movingpandas" -> "HTenkanen/pyrosm"
"anitagraser/movingpandas" -> "UDST/pandana"
"anitagraser/movingpandas" -> "martinfleis/momepy"
"anitagraser/movingpandas" -> "pysal/pysal"
"anitagraser/movingpandas" -> "geopandas/geopandas"
"anitagraser/movingpandas" -> "pygeos/pygeos"
"anitagraser/movingpandas" -> "ResidentMario/geoplot"
"anitagraser/movingpandas" -> "opengeospatial/geoparquet"
"anitagraser/movingpandas" -> "uber/h3-py" ["e"=1]
"anitagraser/movingpandas" -> "holoviz/geoviews"
"MinZHANG-WHU/FDCNN" -> "daifeng2016/End-to-end-CD-for-VHR-satellite-image"
"feevos/resuneta" -> "ChienWong/ResUnet-a"
"feevos/resuneta" -> "feevos/ceecnet"
"feevos/resuneta" -> "sentinel-hub/field_delineation"
"feevos/resuneta" -> "waldnerf/decode"
"granularai/fabric" -> "mvkolos/siamese-change-detection"
"llu025/Heterogeneous_CD" -> "yulisun/INLPG"
"llu025/Heterogeneous_CD" -> "cyx669521/self-supervised_change_detetction"
"llu025/Heterogeneous_CD" -> "rulixiang/DSFANet"
"chrieke/awesome-geospatial-companies" -> "acgeospatial/awesome-earthobservation-code"
"chrieke/awesome-geospatial-companies" -> "stac-utils/pystac"
"chrieke/awesome-geospatial-companies" -> "stac-utils/pystac-client"
"chrieke/awesome-geospatial-companies" -> "gjoseph92/stackstac"
"chrieke/awesome-geospatial-companies" -> "microsoft/PlanetaryComputer"
"chrieke/awesome-geospatial-companies" -> "samapriya/awesome-gee-community-datasets"
"chrieke/awesome-geospatial-companies" -> "deepVector/geospatial-machine-learning"
"chrieke/awesome-geospatial-companies" -> "radiantearth/stac-browser"
"chrieke/awesome-geospatial-companies" -> "giswqs/Awesome-GEE"
"chrieke/awesome-geospatial-companies" -> "johntruckenbrodt/pyroSAR"
"chrieke/awesome-geospatial-companies" -> "sacridini/Awesome-Geospatial"
"chrieke/awesome-geospatial-companies" -> "sentinel-hub/eo-learn"
"chrieke/awesome-geospatial-companies" -> "bleutner/RStoolbox" ["e"=1]
"chrieke/awesome-geospatial-companies" -> "bopen/xarray-sentinel"
"chrieke/awesome-geospatial-companies" -> "microsoft/torchgeo"
"BradNeuberg/cloudless" -> "developmentseed/skynet-data"
"BradNeuberg/cloudless" -> "mitmul/ssai-cnn"
"BradNeuberg/cloudless" -> "developmentseed/skynet-train"
"BradNeuberg/cloudless" -> "trailbehind/DeepOSM"
"BradNeuberg/cloudless" -> "prs021/fmask"
"BradNeuberg/cloudless" -> "sat-utils/sat-api"
"orfeotoolbox/OTB" -> "remicres/otbtf"
"orfeotoolbox/OTB" -> "johntruckenbrodt/pyroSAR"
"orfeotoolbox/OTB" -> "ossimlabs/ossim"
"orfeotoolbox/OTB" -> "birgander2/PyRAT"
"orfeotoolbox/OTB" -> "corteva/rioxarray"
"orfeotoolbox/OTB" -> "Kitware/maptk" ["e"=1]
"orfeotoolbox/OTB" -> "Fernerkundung/awesome-sentinel"
"orfeotoolbox/OTB" -> "jblindsay/whitebox-tools"
"orfeotoolbox/OTB" -> "mortcanty/CRCPython"
"orfeotoolbox/OTB" -> "senbox-org/s1tbx"
"orfeotoolbox/OTB" -> "isce-framework/isce2"
"orfeotoolbox/OTB" -> "dtarb/TauDEM" ["e"=1]
"orfeotoolbox/OTB" -> "NeoGeographyToolkit/StereoPipeline" ["e"=1]
"orfeotoolbox/OTB" -> "bopen/sarsen"
"orfeotoolbox/OTB" -> "RadarCODE/awesome-sar"
"worldbank/ML-classification-algorithms-poverty" -> "drivendataorg/pover-t-tests"
"xungeer29/Remote-Sensing-Image-Classification" -> "cuilunan/Unet-of-remote-sensing-image"
"xungeer29/Remote-Sensing-Image-Classification" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"xungeer29/Remote-Sensing-Image-Classification" -> "BUPTLdy/Land_Use_CNN"
"xungeer29/Remote-Sensing-Image-Classification" -> "527760681/Keras-Remote-sensing-image-retrieval"
"xungeer29/Remote-Sensing-Image-Classification" -> "milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch"
"xungeer29/Remote-Sensing-Image-Classification" -> "lcylmhlcy/Semantic-segmentation"
"xungeer29/Remote-Sensing-Image-Classification" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"GeoDaCenter/geoda" -> "pysal/pysal"
"GeoDaCenter/geoda" -> "GeoDaCenter/GeoDaSpace"
"GeoDaCenter/geoda" -> "jblindsay/whitebox-tools"
"GeoDaCenter/geoda" -> "OSGeo/grass" ["e"=1]
"GeoDaCenter/geoda" -> "pysal/mgwr"
"GeoDaCenter/geoda" -> "giswqs/qgis-earthengine-examples"
"GeoDaCenter/geoda" -> "opengeospatial/geopackage" ["e"=1]
"GeoDaCenter/geoda" -> "lixun910/geoda"
"GeoDaCenter/geoda" -> "Esri/arcgis-osm-editor" ["e"=1]
"GeoDaCenter/geoda" -> "r-spatial/stars" ["e"=1]
"GeoDaCenter/geoda" -> "orfeotoolbox/OTB"
"GeoDaCenter/geoda" -> "martinfleis/momepy"
"GeoDaCenter/geoda" -> "gee-community/qgis-earthengine-plugin"
"GeoDaCenter/geoda" -> "varoudis/depthmapX"
"GeoDaCenter/geoda" -> "spatstat/spatstat"
"puke3615/SceneClassify" -> "fangfchen/AIChallenger_SceneClassification_ZJUGIVE"
"puke3615/SceneClassify" -> "foamliu/Scene-Classification"
"puke3615/SceneClassify" -> "chenyuntc/scene-baseline"
"puke3615/SceneClassify" -> "niecongchong/RS-Scene-Classification"
"developmentseed/titiler" -> "cogeotiff/rio-tiler"
"developmentseed/titiler" -> "cogeotiff/rio-cogeo"
"developmentseed/titiler" -> "developmentseed/rio-viz"
"developmentseed/titiler" -> "radiantearth/stac-spec"
"developmentseed/titiler" -> "DHI-GRAS/terracotta"
"developmentseed/titiler" -> "developmentseed/morecantile"
"developmentseed/titiler" -> "developmentseed/cogeo-mosaic"
"developmentseed/titiler" -> "stac-utils/pystac"
"developmentseed/titiler" -> "developmentseed/timvt"
"developmentseed/titiler" -> "gjoseph92/stackstac"
"developmentseed/titiler" -> "developmentseed/geolambda"
"developmentseed/titiler" -> "radiantearth/stac-browser"
"developmentseed/titiler" -> "rouault/cogserver"
"developmentseed/titiler" -> "radiantearth/stac-api-spec"
"developmentseed/titiler" -> "opengeospatial/geoparquet"
"pysal/esda" -> "pysal/libpysal"
"pysal/esda" -> "pysal/spaghetti"
"pysal/esda" -> "pysal/mapclassify"
"pysal/esda" -> "pysal/segregation"
"pysal/esda" -> "pysal/splot"
"pysal/esda" -> "martinfleis/momepy"
"hectornieto/pyTSEB" -> "hectornieto/pyMETRIC"
"hectornieto/pyTSEB" -> "hectornieto/pyPro4Sail"
"hectornieto/pyTSEB" -> "NASA-DEVELOP/METRIC"
"hectornieto/pyTSEB" -> "radosuav/pyDMS"
"hectornieto/pyTSEB" -> "Open-ET/openet-ssebop-beta"
"hectornieto/pyTSEB" -> "WSWUP/pymetric"
"senbox-org/s1tbx" -> "senbox-org/snap-engine"
"senbox-org/s1tbx" -> "GeoscienceAustralia/PyRate"
"senbox-org/s1tbx" -> "senbox-org/snap-desktop"
"senbox-org/s1tbx" -> "isce-framework/isce2"
"senbox-org/s1tbx" -> "dbekaert/StaMPS"
"senbox-org/s1tbx" -> "gmtsar/gmtsar"
"senbox-org/s1tbx" -> "yumorishita/LiCSBAS"
"senbox-org/s1tbx" -> "senbox-org/s2tbx"
"senbox-org/s1tbx" -> "birgander2/PyRAT"
"senbox-org/s1tbx" -> "johntruckenbrodt/pyroSAR"
"senbox-org/s1tbx" -> "mdelgadoblasco/snap2stamps"
"senbox-org/s1tbx" -> "TUDelftGeodesy/Doris"
"senbox-org/s1tbx" -> "scottyhq/dinosar"
"senbox-org/s1tbx" -> "dbekaert/TRAIN"
"senbox-org/s1tbx" -> "senbox-org/snap-examples"
"USGS-EROS/espa-bulk-downloader" -> "USGS-EROS/espa-api"
"USGS-EROS/espa-bulk-downloader" -> "USGS-EROS/espa-cloud-masking"
"USGS-EROS/espa-bulk-downloader" -> "prs021/fmask"
"USGS-EROS/espa-bulk-downloader" -> "USGS-EROS/espa-surface-reflectance"
"USGS-EROS/espa-bulk-downloader" -> "olivierhagolle/LANDSAT-Download"
"fouronnes/SAR-change-detection" -> "ekoshelev/REU-AcceleratedChangeDetectioninSARImages"
"likyoo/Siam-NestedUNet" -> "wgcban/ChangeFormer"
"likyoo/Siam-NestedUNet" -> "justchenhao/STANet"
"likyoo/Siam-NestedUNet" -> "likyoo/change_detection.pytorch"
"likyoo/Siam-NestedUNet" -> "GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images"
"likyoo/Siam-NestedUNet" -> "Z-Zheng/ChangeStar"
"likyoo/Siam-NestedUNet" -> "Bobholamovic/CDLab"
"likyoo/Siam-NestedUNet" -> "likyoo/open-cd"
"likyoo/Siam-NestedUNet" -> "rcdaudt/fully_convolutional_change_detection"
"likyoo/Siam-NestedUNet" -> "justchenhao/IAug_CDNet"
"likyoo/Siam-NestedUNet" -> "lehaifeng/DASNet"
"likyoo/Siam-NestedUNet" -> "justchenhao/BIT_CD"
"likyoo/Siam-NestedUNet" -> "LiheYoung/SenseEarth2020-ChangeDetection"
"likyoo/Siam-NestedUNet" -> "shinianzhihou/ChangeDetection"
"likyoo/Siam-NestedUNet" -> "liumency/SRCDNet"
"likyoo/Siam-NestedUNet" -> "wgcban/SemiCD"
"likyoo/change_detection.pytorch" -> "likyoo/Siam-NestedUNet"
"likyoo/change_detection.pytorch" -> "justchenhao/BIT_CD"
"likyoo/change_detection.pytorch" -> "likyoo/open-cd"
"likyoo/change_detection.pytorch" -> "LiheYoung/SenseEarth2020-ChangeDetection"
"likyoo/change_detection.pytorch" -> "shinianzhihou/ChangeDetection"
"likyoo/change_detection.pytorch" -> "wgcban/ChangeFormer"
"likyoo/change_detection.pytorch" -> "Bobholamovic/CDLab"
"likyoo/change_detection.pytorch" -> "justchenhao/STANet"
"likyoo/change_detection.pytorch" -> "Z-Zheng/ChangeStar"
"likyoo/change_detection.pytorch" -> "businiaoo/PRCV2021-Change-Detection-Contest-2nd-place-Solution"
"likyoo/change_detection.pytorch" -> "rcdaudt/fully_convolutional_change_detection"
"likyoo/change_detection.pytorch" -> "wenhwu/awesome-remote-sensing-change-detection"
"likyoo/change_detection.pytorch" -> "GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images"
"likyoo/change_detection.pytorch" -> "Bobholamovic/ChangeDetectionToolbox"
"likyoo/change_detection.pytorch" -> "likyoo/PRCV2021_ChangeDetection_Top3"
"mortcanty/CRCPython" -> "mortcanty/CRC4Docker"
"mortcanty/CRCPython" -> "mortcanty/earthengine"
"mortcanty/CRCPython" -> "BUPTLdy/Land_Use_CNN"
"mortcanty/CRCPython" -> "abhijeet3922/Change-Detection-in-Satellite-Imagery"
"wgcban/ChangeFormer" -> "justchenhao/BIT_CD"
"wgcban/ChangeFormer" -> "likyoo/Siam-NestedUNet"
"wgcban/ChangeFormer" -> "wgcban/SemiCD"
"wgcban/ChangeFormer" -> "Z-Zheng/ChangeStar"
"wgcban/ChangeFormer" -> "likyoo/change_detection.pytorch"
"wgcban/ChangeFormer" -> "wgcban/ddpm-cd"
"wgcban/ChangeFormer" -> "likyoo/open-cd"
"wgcban/ChangeFormer" -> "justchenhao/STANet"
"wgcban/ChangeFormer" -> "LiheYoung/SenseEarth2020-ChangeDetection"
"wgcban/ChangeFormer" -> "GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images"
"wgcban/ChangeFormer" -> "Bobholamovic/CDLab"
"wgcban/ChangeFormer" -> "rcdaudt/fully_convolutional_change_detection"
"wgcban/ChangeFormer" -> "AndreaCodegoni/Tiny_model_4_CD"
"wgcban/ChangeFormer" -> "chenpan0615/FCCDN_pytorch"
"wgcban/ChangeFormer" -> "MinZHANG-WHU/Change-Detection-Review"
"Jiangfeng-Xiong/satellite_seg" -> "LiuDongjing/BuildingChangeDetector"
"Jiangfeng-Xiong/satellite_seg" -> "AstarLight/Satellite-Segmentation"
"Jiangfeng-Xiong/satellite_seg" -> "anxiangSir/deeplab_v3"
"Jiangfeng-Xiong/satellite_seg" -> "ximimiao/deeplabv3-Tensorflow"
"Jiangfeng-Xiong/satellite_seg" -> "jiye-ML/Satellite-image-segment"
"Jiangfeng-Xiong/satellite_seg" -> "cuilunan/Unet-of-remote-sensing-image"
"Jiangfeng-Xiong/satellite_seg" -> "mvkolos/siamese-change-detection"
"Jiangfeng-Xiong/satellite_seg" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"WangZhenqing-RS/2021Tianchi_RS" -> "JasmineRain/NAIC_AI-RS"
"WangZhenqing-RS/2021Tianchi_RS" -> "WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class"
"HTenkanen/pyrosm" -> "UDST/pandana"
"HTenkanen/pyrosm" -> "pysal/spopt"
"HTenkanen/pyrosm" -> "geopandas/contextily"
"HTenkanen/pyrosm" -> "martinfleis/momepy"
"HTenkanen/pyrosm" -> "pysal/tobler"
"HTenkanen/pyrosm" -> "pygeos/pygeos"
"HTenkanen/pyrosm" -> "holoviz/spatialpandas"
"HTenkanen/pyrosm" -> "anitagraser/movingpandas"
"HTenkanen/pyrosm" -> "benchmark-urbanism/cityseer-api"
"HTenkanen/pyrosm" -> "mattijn/topojson"
"HTenkanen/pyrosm" -> "makepath/xarray-spatial"
"HTenkanen/pyrosm" -> "geopolars/geopolars"
"HTenkanen/pyrosm" -> "geopandas/dask-geopandas"
"HTenkanen/pyrosm" -> "spatialucr/geosnap"
"HTenkanen/pyrosm" -> "DahnJ/H3-Pandas" ["e"=1]
"sentinel-hub/sentinel2-cloud-detector" -> "sentinel-hub/sentinelhub-py"
"sentinel-hub/sentinel2-cloud-detector" -> "sentinel-hub/eo-learn"
"sentinel-hub/sentinel2-cloud-detector" -> "GERSL/Fmask"
"sentinel-hub/sentinel2-cloud-detector" -> "Fernerkundung/awesome-sentinel"
"sentinel-hub/sentinel2-cloud-detector" -> "johntruckenbrodt/pyroSAR"
"sentinel-hub/sentinel2-cloud-detector" -> "sentinelsat/sentinelsat"
"sentinel-hub/sentinel2-cloud-detector" -> "olivierhagolle/Sentinel-download"
"sentinel-hub/sentinel2-cloud-detector" -> "lanha/DSen2"
"sentinel-hub/sentinel2-cloud-detector" -> "sentinel-hub/custom-scripts"
"sentinel-hub/sentinel2-cloud-detector" -> "bopen/xarray-sentinel"
"sentinel-hub/sentinel2-cloud-detector" -> "CNES/Start-MAJA"
"sentinel-hub/sentinel2-cloud-detector" -> "e-sensing/sits" ["e"=1]
"sentinel-hub/sentinel2-cloud-detector" -> "sentinel-hub/time-lapse"
"sentinel-hub/sentinel2-cloud-detector" -> "sentinel-hub/eo-flow"
"sentinel-hub/sentinel2-cloud-detector" -> "ubarsc/python-fmask"
"sentinelsat/sentinelsat" -> "Fernerkundung/awesome-sentinel"
"sentinelsat/sentinelsat" -> "sentinel-hub/sentinelhub-py"
"sentinelsat/sentinelsat" -> "sentinel-hub/eo-learn"
"sentinelsat/sentinelsat" -> "johntruckenbrodt/pyroSAR"
"sentinelsat/sentinelsat" -> "sentinel-hub/sentinel2-cloud-detector"
"sentinelsat/sentinelsat" -> "azavea/raster-vision"
"sentinelsat/sentinelsat" -> "acgeospatial/awesome-earthobservation-code"
"sentinelsat/sentinelsat" -> "olivierhagolle/Sentinel-download"
"sentinelsat/sentinelsat" -> "sentinel-hub/custom-scripts"
"sentinelsat/sentinelsat" -> "mapbox/rasterio"
"sentinelsat/sentinelsat" -> "developmentseed/label-maker"
"sentinelsat/sentinelsat" -> "RadarCODE/awesome-sar"
"sentinelsat/sentinelsat" -> "corteva/rioxarray"
"sentinelsat/sentinelsat" -> "radiantearth/stac-spec"
"sentinelsat/sentinelsat" -> "chrieke/awesome-satellite-imagery-datasets"
"PaddleCV-SIG/PaddleRS" -> "PaddlePaddle/PaddleRS"
"PaddleCV-SIG/PaddleRS" -> "geoyee/PdRSCD"
"PaddleCV-SIG/PaddleRS" -> "businiaoo/PRCV2021-Change-Detection-Contest-2nd-place-Solution"
"PaddleCV-SIG/PaddleRS" -> "3SPP/PdRSCD"
"PaddleCV-SIG/PaddleRS" -> "3SPP/SS-Models"
"PaddleCV-SIG/PaddleRS" -> "geoyee/LabCD"
"PaddleCV-SIG/PaddleRS" -> "likyoo/open-cd"
"PaddleCV-SIG/PaddleRS" -> "likyoo/change_detection.pytorch"
"olivierhagolle/LANDSAT-Download" -> "olivierhagolle/Sentinel-download"
"olivierhagolle/LANDSAT-Download" -> "developmentseed/landsat-util"
"olivierhagolle/LANDSAT-Download" -> "USGS-EROS/espa-bulk-downloader"
"olivierhagolle/LANDSAT-Download" -> "olivierhagolle/peps_download"
"olivierhagolle/LANDSAT-Download" -> "yannforget/landsatxplore"
"olivierhagolle/LANDSAT-Download" -> "USGS-EROS/espa-surface-reflectance"
"olivierhagolle/LANDSAT-Download" -> "USGS-EROS/espa-api"
"olivierhagolle/LANDSAT-Download" -> "USGS-EROS/espa-cloud-masking"
"olivierhagolle/LANDSAT-Download" -> "olivierhagolle/theia_download"
"olivierhagolle/LANDSAT-Download" -> "ibamacsr/sentinelsat"
"olivierhagolle/LANDSAT-Download" -> "ceholden/yatsm"
"olivierhagolle/Sentinel-download" -> "olivierhagolle/LANDSAT-Download"
"olivierhagolle/Sentinel-download" -> "olivierhagolle/peps_download"
"olivierhagolle/Sentinel-download" -> "Fernerkundung/awesome-sentinel"
"olivierhagolle/Sentinel-download" -> "sentinel-hub/sentinel2-cloud-detector"
"olivierhagolle/Sentinel-download" -> "sentinel-hub/sentinelhub-py"
"olivierhagolle/Sentinel-download" -> "ibamacsr/sentinelsat"
"olivierhagolle/Sentinel-download" -> "USGS-EROS/espa-surface-reflectance"
"olivierhagolle/Sentinel-download" -> "sentinelsat/sentinelsat"
"olivierhagolle/peps_download" -> "olivierhagolle/Sentinel-download"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "cuilunan/Unet-of-remote-sensing-image"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "lcylmhlcy/Semantic-segmentation"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "1044197988/Semantic-segmentation-of-remote-sensing-images"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "ximimiao/deeplabv3-Tensorflow"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "YudeWang/UNet-Satellite-Image-Segmentation"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "fuweifu-vtoo/Semantic-segmentation"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "ChienWong/ResUnet-a"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "scrssys/semantic_segment_RSImage"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "anxiangsir/deeplabv3-Tensorflow"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "vicwer/sense_classification"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "lehaifeng/SCAttNet"
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" -> "AstarLight/Satellite-Segmentation"
"awesome-spectral-indices/awesome-spectral-indices" -> "awesome-spectral-indices/spyndex"
"awesome-spectral-indices/awesome-spectral-indices" -> "davemlz/eemont"
"awesome-spectral-indices/awesome-spectral-indices" -> "awesome-spectral-indices/spectral"
"awesome-spectral-indices/awesome-spectral-indices" -> "samapriya/awesome-gee-community-datasets"
"awesome-spectral-indices/awesome-spectral-indices" -> "mobigroup/gmtsar"
"awesome-spectral-indices/awesome-spectral-indices" -> "sertit/eoreader"
"awesome-spectral-indices/awesome-spectral-indices" -> "acgeospatial/awesome-earthobservation-code"
"awesome-spectral-indices/awesome-spectral-indices" -> "remotesensinglab/raster4ml"
"awesome-spectral-indices/awesome-spectral-indices" -> "DahnJ/Awesome-DEM"
"awesome-spectral-indices/awesome-spectral-indices" -> "giswqs/Awesome-GEE"
"awesome-spectral-indices/awesome-spectral-indices" -> "giswqs/geospatial"
"awesome-spectral-indices/awesome-spectral-indices" -> "Seyed-Ali-Ahmadi/Awesome_Satellite_Benchmark_Datasets"
"awesome-spectral-indices/awesome-spectral-indices" -> "kleok/FLOODPY"
"kscottz/PythonFromSpace" -> "planetlabs/notebooks"
"kscottz/PythonFromSpace" -> "sarasafavi/remote-sensing-with-python"
"kscottz/PythonFromSpace" -> "mortcanty/CRCPython"
"kscottz/PythonFromSpace" -> "ceholden/open-geo-tutorial"
"kscottz/PythonFromSpace" -> "olivierhagolle/Sentinel-download"
"kscottz/PythonFromSpace" -> "acgeospatial/Satellite_Imagery_Python"
"kscottz/PythonFromSpace" -> "sentinel-hub/eo-learn"
"kscottz/PythonFromSpace" -> "wenhwu/awesome-remote-sensing-change-detection"
"kscottz/PythonFromSpace" -> "cuilunan/Unet-of-remote-sensing-image"
"kscottz/PythonFromSpace" -> "Fernerkundung/awesome-sentinel"
"kscottz/PythonFromSpace" -> "developmentseed/label-maker"
"kscottz/PythonFromSpace" -> "sentinelsat/sentinelsat"
"kscottz/PythonFromSpace" -> "sentinel-hub/custom-scripts"
"kscottz/PythonFromSpace" -> "acgeospatial/awesome-earthobservation-code"
"kscottz/PythonFromSpace" -> "bleutner/RStoolbox" ["e"=1]
"manideep2510/eye-in-the-sky" -> "reachsumit/deep-unet-for-satellite-image-segmentation"
"manideep2510/eye-in-the-sky" -> "YudeWang/UNet-Satellite-Image-Segmentation"
"manideep2510/eye-in-the-sky" -> "cuilunan/Unet-of-remote-sensing-image"
"manideep2510/eye-in-the-sky" -> "GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus"
"manideep2510/eye-in-the-sky" -> "datasciencecampus/laika"
"manideep2510/eye-in-the-sky" -> "rogerxujiang/dstl_unet"
"manideep2510/eye-in-the-sky" -> "sshuair/torchsat"
"manideep2510/eye-in-the-sky" -> "neptune-ai/open-solution-mapping-challenge"
"manideep2510/eye-in-the-sky" -> "rmkemker/EarthMapper"
"manideep2510/eye-in-the-sky" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"manideep2510/eye-in-the-sky" -> "chrieke/InstanceSegmentation_Sentinel2"
"manideep2510/eye-in-the-sky" -> "deepVector/geospatial-machine-learning"
"manideep2510/eye-in-the-sky" -> "nshaud/DeepNetsForEO"
"manideep2510/eye-in-the-sky" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"radiantearth/stac-browser" -> "stac-utils/pystac-client"
"radiantearth/stac-browser" -> "radiantearth/stac-spec"
"radiantearth/stac-browser" -> "sat-utils/sat-stac"
"radiantearth/stac-browser" -> "stac-utils/pystac"
"radiantearth/stac-browser" -> "stac-utils/stac-fastapi"
"radiantearth/stac-browser" -> "gjoseph92/stackstac"
"radiantearth/stac-browser" -> "developmentseed/rio-stac"
"radiantearth/stac-browser" -> "stac-utils/pgstac"
"radiantearth/stac-browser" -> "cogeotiff/rio-cogeo"
"radiantearth/stac-browser" -> "sat-utils/sat-api"
"radiantearth/stac-browser" -> "stac-utils/stactools"
"radiantearth/stac-browser" -> "intake/intake-stac"
"radiantearth/stac-browser" -> "developmentseed/rio-viz"
"radiantearth/stac-browser" -> "azavea/franklin"
"radiantearth/stac-browser" -> "developmentseed/labs-gpt-stac"
"radiantearth/stac-spec" -> "radiantearth/stac-api-spec"
"radiantearth/stac-spec" -> "radiantearth/stac-browser"
"radiantearth/stac-spec" -> "developmentseed/titiler"
"radiantearth/stac-spec" -> "sat-utils/sat-api"
"radiantearth/stac-spec" -> "stac-utils/pystac"
"radiantearth/stac-spec" -> "cogeotiff/rio-tiler"
"radiantearth/stac-spec" -> "gjoseph92/stackstac"
"radiantearth/stac-spec" -> "sat-utils/sat-search"
"radiantearth/stac-spec" -> "stac-utils/pystac-client"
"radiantearth/stac-spec" -> "developmentseed/geolambda"
"radiantearth/stac-spec" -> "sentinel-hub/eo-learn"
"radiantearth/stac-spec" -> "opendatacube/datacube-core"
"radiantearth/stac-spec" -> "opengeospatial/geoparquet"
"radiantearth/stac-spec" -> "Fernerkundung/awesome-sentinel"
"radiantearth/stac-spec" -> "acgeospatial/awesome-earthobservation-code"
"mapbox/mapbox-cli-py" -> "mapbox/mapbox-upload"
"kvos/CoastSat" -> "kvos/CoastSat.slope"
"kvos/CoastSat" -> "chrisleaman/awesome-coastal"
"kvos/CoastSat" -> "giswqs/Awesome-GEE"
"kvos/CoastSat" -> "gee-community/gee_tools"
"kvos/CoastSat" -> "acgeospatial/awesome-earthobservation-code"
"kvos/CoastSat" -> "giswqs/earthengine-py-notebooks"
"kvos/CoastSat" -> "fitoprincipe/geetools-code-editor"
"kvos/CoastSat" -> "sacridini/GEET"
"kvos/CoastSat" -> "giswqs/qgis-earthengine-examples"
"kvos/CoastSat" -> "sentinel-hub/custom-scripts"
"kvos/CoastSat" -> "giswqs/geemap"
"kvos/CoastSat" -> "gee-community/qgis-earthengine-plugin"
"kvos/CoastSat" -> "ydoherty/CoastSat.PlanetScope"
"kvos/CoastSat" -> "sentinel-hub/eo-learn"
"kvos/CoastSat" -> "sentinel-hub/sentinel2-cloud-detector"
"csaybar/EEwPython" -> "renelikestacos/Google-Earth-Engine-Python-Examples"
"csaybar/EEwPython" -> "sacridini/GEET"
"csaybar/EEwPython" -> "gee-community/gee_tools"
"csaybar/EEwPython" -> "gee-community/ee-tensorflow-notebooks"
"csaybar/EEwPython" -> "davemlz/eemont"
"csaybar/EEwPython" -> "eMapR/LT-GEE"
"csaybar/EEwPython" -> "jldowns/google_earth_engine_notebook"
"csaybar/EEwPython" -> "mortcanty/earthengine"
"csaybar/EEwPython" -> "gee-community/ee-palettes"
"csaybar/EEwPython" -> "adugnag/gee_s1_ard"
"csaybar/EEwPython" -> "csaybar/EarthEngineMasterGIS"
"csaybar/EEwPython" -> "giswqs/qgis-earthengine-examples"
"csaybar/EEwPython" -> "acgeospatial/awesome-earthobservation-code"
"csaybar/EEwPython" -> "fitoprincipe/geetools-code-editor"
"csaybar/EEwPython" -> "samapriya/awesome-gee-community-datasets"
"giswqs/whitebox-python" -> "giswqs/WhiteboxTools-ArcGIS"
"giswqs/whitebox-python" -> "jblindsay/whitebox-tools"
"giswqs/whitebox-python" -> "giswqs/lidar"
"giswqs/whitebox-python" -> "giswqs/whiteboxgui"
"justchenhao/STANet" -> "GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images"
"justchenhao/STANet" -> "likyoo/Siam-NestedUNet"
"justchenhao/STANet" -> "wenhwu/awesome-remote-sensing-change-detection"
"justchenhao/STANet" -> "justchenhao/BIT_CD"
"justchenhao/STANet" -> "MinZHANG-WHU/Change-Detection-Review"
"justchenhao/STANet" -> "LiheYoung/SenseEarth2020-ChangeDetection"
"justchenhao/STANet" -> "lehaifeng/DASNet"
"justchenhao/STANet" -> "likyoo/change_detection.pytorch"
"justchenhao/STANet" -> "wgcban/ChangeFormer"
"justchenhao/STANet" -> "rcdaudt/fully_convolutional_change_detection"
"justchenhao/STANet" -> "Z-Zheng/ChangeStar"
"justchenhao/STANet" -> "neverstoplearn/remote_sensing_change_detection"
"justchenhao/STANet" -> "MinZHANG-WHU/FDCNN"
"justchenhao/STANet" -> "I-Hope-Peace/ChangeDetectionRepository" ["e"=1]
"justchenhao/STANet" -> "Bobholamovic/ChangeDetectionToolbox"
"TUDelftGeodesy/Doris" -> "dbekaert/StaMPS"
"TUDelftGeodesy/Doris" -> "dbekaert/TRAIN"
"TUDelftGeodesy/Doris" -> "mdelgadoblasco/snap2stamps"
"TUDelftGeodesy/Doris" -> "xitong123/gmtsar2stamps"
"TUDelftGeodesy/Doris" -> "GeoscienceAustralia/PyRate"
"TUDelftGeodesy/Doris" -> "pyrocko/kite"
"Vooban/Smoothly-Blend-Image-Patches" -> "ternaus/kaggle_dstl_submission"
"Vooban/Smoothly-Blend-Image-Patches" -> "reachsumit/deep-unet-for-satellite-image-segmentation"
"Vooban/Smoothly-Blend-Image-Patches" -> "YudeWang/UNet-Satellite-Image-Segmentation"
"Vooban/Smoothly-Blend-Image-Patches" -> "nshaud/DeepNetsForEO"
"Vooban/Smoothly-Blend-Image-Patches" -> "jensleitloff/CNN-Sentinel"
"Vooban/Smoothly-Blend-Image-Patches" -> "rogerxujiang/dstl_unet"
"Vooban/Smoothly-Blend-Image-Patches" -> "dovahcrow/patchify.py"
"Vooban/Smoothly-Blend-Image-Patches" -> "shakasom/Deep-Learning-for-Satellite-Imagery"
"Vooban/Smoothly-Blend-Image-Patches" -> "manideep2510/eye-in-the-sky"
"YuansongFeng/satellite_building_detection.pytorch" -> "EL-BID/Building-Detection"
"YudeWang/UNet-Satellite-Image-Segmentation" -> "cuilunan/Unet-of-remote-sensing-image"
"YudeWang/UNet-Satellite-Image-Segmentation" -> "reachsumit/deep-unet-for-satellite-image-segmentation"
"YudeWang/UNet-Satellite-Image-Segmentation" -> "manideep2510/eye-in-the-sky"
"YudeWang/UNet-Satellite-Image-Segmentation" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"daifeng2016/End-to-end-CD-for-VHR-satellite-image" -> "rcdaudt/guided_anisotropic_diffusion"
"daifeng2016/End-to-end-CD-for-VHR-satellite-image" -> "granularai/fabric"
"dm6718/RITSAR" -> "noobmartin/Open-source-SAR-simulator"
"dm6718/RITSAR" -> "ngageoint/MATLAB_SAR"
"dm6718/RITSAR" -> "birgander2/PyRAT"
"dm6718/RITSAR" -> "liuxinyu123/Matlab"
"dm6718/RITSAR" -> "ngageoint/sarpy"
"dm6718/RITSAR" -> "joeyos/SAR-imaging"
"dm6718/RITSAR" -> "nnaka/sar"
"dm6718/RITSAR" -> "Jach/radar_sar_rma"
"dm6718/RITSAR" -> "hfattahi/PySAR"
"dm6718/RITSAR" -> "StefanJAuer/RaySAR"
"dm6718/RITSAR" -> "openforis/opensarkit"
"dm6718/RITSAR" -> "dbekaert/TRAIN"
"hfattahi/PySAR" -> "bakerunavco/pygmtsar"
"hfattahi/PySAR" -> "GeoscienceAustralia/PyRate"
"hfattahi/PySAR" -> "yunjunz/PySAR"
"hfattahi/PySAR" -> "bakerunavco/SSARA"
"hfattahi/PySAR" -> "pyrocko/kite"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "manideep2510/eye-in-the-sky"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "YudeWang/UNet-Satellite-Image-Segmentation"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "rogerxujiang/dstl_unet"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "Vooban/Smoothly-Blend-Image-Patches"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "neptune-ai/open-solution-mapping-challenge"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "radiantearth/mlhub-tutorials"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "cuilunan/Unet-of-remote-sensing-image"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "nshaud/DeepNetsForEO"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "mapbox/robosat"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "chrieke/InstanceSegmentation_Sentinel2"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "sshuair/torchsat"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "sentinel-hub/eo-learn"
"reachsumit/deep-unet-for-satellite-image-segmentation" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"rogerxujiang/dstl_unet" -> "reachsumit/deep-unet-for-satellite-image-segmentation"
"rogerxujiang/dstl_unet" -> "ternaus/kaggle_dstl_submission"
"rogerxujiang/dstl_unet" -> "YudeWang/UNet-Satellite-Image-Segmentation"
"sshuair/torchsat" -> "deepVector/geospatial-machine-learning"
"sshuair/torchsat" -> "CosmiQ/solaris"
"sshuair/torchsat" -> "nshaud/DeepNetsForEO"
"sshuair/torchsat" -> "sentinel-hub/eo-flow"
"sshuair/torchsat" -> "azavea/raster-vision"
"sshuair/torchsat" -> "johntruckenbrodt/pyroSAR"
"sshuair/torchsat" -> "acgeospatial/awesome-earthobservation-code"
"sshuair/torchsat" -> "developmentseed/label-maker"
"sshuair/torchsat" -> "acgeospatial/Satellite_Imagery_Python"
"sshuair/torchsat" -> "radiantearth/mlhub-tutorials"
"sshuair/torchsat" -> "azavea/raster-vision-examples"
"sshuair/torchsat" -> "datasciencecampus/laika"
"sshuair/torchsat" -> "wenhwu/awesome-remote-sensing-change-detection"
"sshuair/torchsat" -> "isaaccorley/torchrs"
"sshuair/torchsat" -> "manideep2510/eye-in-the-sky"
"trailbehind/DeepOSM" -> "mitmul/ssai-cnn"
"trailbehind/DeepOSM" -> "developmentseed/skynet-data"
"trailbehind/DeepOSM" -> "CreativeInquiry/terrapattern"
"trailbehind/DeepOSM" -> "mapbox/robosat"
"trailbehind/DeepOSM" -> "nshaud/DeepNetsForEO"
"trailbehind/DeepOSM" -> "jremillard/images-to-osm"
"trailbehind/DeepOSM" -> "azavea/raster-vision"
"trailbehind/DeepOSM" -> "BradNeuberg/cloudless"
"trailbehind/DeepOSM" -> "geometalab/OSMDeepOD"
"trailbehind/DeepOSM" -> "developmentseed/skynet-train"
"trailbehind/DeepOSM" -> "developmentseed/label-maker"
"trailbehind/DeepOSM" -> "OpenGeoscience/geonotebook"
"trailbehind/DeepOSM" -> "developmentseed/landsat-util"
"trailbehind/DeepOSM" -> "treigerm/WaterNet"
"trailbehind/DeepOSM" -> "orfeotoolbox/OTB"
"vbhavank/Unstructured-change-detection-using-CNN" -> "vbhavank/Siamese-neural-network-for-change-detection"
"ximimiao/deeplabv3-Tensorflow" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"ximimiao/deeplabv3-Tensorflow" -> "scrssys/semantic_segment_RSImage"
"ximimiao/deeplabv3-Tensorflow" -> "Jiangfeng-Xiong/satellite_seg"
"yangxue0827/CNN_UCMerced-LandUse_Caffe" -> "BUPTLdy/Land_Use_CNN"
"zlckanata/DeepGlobe-Road-Extraction-Challenge" -> "mj129/CoANet"
"zlckanata/DeepGlobe-Road-Extraction-Challenge" -> "astro-ck/Road-Extraction"
"zlckanata/DeepGlobe-Road-Extraction-Challenge" -> "mitroadmaps/roadtracer"
"zlckanata/DeepGlobe-Road-Extraction-Challenge" -> "songtaohe/Sat2Graph"
"zlckanata/DeepGlobe-Road-Extraction-Challenge" -> "wgcban/SPIN_RoadMapper"
"SorourMo/Cloud-Net-A-semantic-segmentation-CNN-for-cloud-detection" -> "SorourMo/38-Cloud-A-Cloud-Segmentation-Dataset"
"SorourMo/Cloud-Net-A-semantic-segmentation-CNN-for-cloud-detection" -> "JacobJeppesen/RS-Net"
"SorourMo/Cloud-Net-A-semantic-segmentation-CNN-for-cloud-detection" -> "IPL-UV/pvl8dagans"
"nealjean/predicting-poverty" -> "jmather625/predicting-poverty-replication"
"nealjean/predicting-poverty" -> "sustainlab-group/africa_poverty"
"nealjean/predicting-poverty" -> "developmentseed/skynet-data"
"nealjean/predicting-poverty" -> "developmentseed/skynet-train"
"nealjean/predicting-poverty" -> "worldbank/ML-classification-algorithms-poverty"
"nealjean/predicting-poverty" -> "developmentseed/label-maker"
"nealjean/predicting-poverty" -> "trailbehind/DeepOSM"
"nealjean/predicting-poverty" -> "kscottz/PythonFromSpace"
"nealjean/predicting-poverty" -> "adrianalbert/urban-environments"
"nealjean/predicting-poverty" -> "ermongroup/tile2vec"
"nealjean/predicting-poverty" -> "gsbDBI/ExperimentData" ["e"=1]
"nealjean/predicting-poverty" -> "planetlabs/notebooks"
"nealjean/predicting-poverty" -> "JiaxuanYou/crop_yield_prediction"
"ngageoint/sarpy" -> "ngageoint/MATLAB_SAR"
"ngageoint/sarpy" -> "ngageoint/six-library"
"ngageoint/sarpy" -> "johntruckenbrodt/pyroSAR"
"ngageoint/sarpy" -> "birgander2/PyRAT"
"ngageoint/sarpy" -> "dm6718/RITSAR"
"ngageoint/sarpy" -> "GeoscienceAustralia/PyRate"
"ngageoint/sarpy" -> "ymcmrs/PyINT"
"ngageoint/sarpy" -> "ESA-PhiLab/OpenSarToolkit"
"ngageoint/sarpy" -> "senbox-org/s1tbx"
"ngageoint/sarpy" -> "scottyhq/dinosar"
"ngageoint/sarpy" -> "isce-framework/isce3"
"ngageoint/sarpy" -> "isce-framework/fringe"
"alexsingleton/urban_analytics" -> "waddell/urban-informatics-and-visualization"
"alexsingleton/urban_analytics" -> "GDSL-UL/Teaching_Links"
"SpaceNetChallenge/RoadDetector" -> "SpaceNetChallenge/BuildingDetectors_Round2"
"SpaceNetChallenge/RoadDetector" -> "CosmiQ/apls"
"SpaceNetChallenge/RoadDetector" -> "SpaceNetChallenge/BuildingDetectors"
"SpaceNetChallenge/RoadDetector" -> "mitroadmaps/roadtracer"
"SpaceNetChallenge/RoadDetector" -> "CosmiQ/cresi"
"SpaceNetChallenge/RoadDetector" -> "zlkanata/DeepGlobe-Road-Extraction-Challenge"
"SpaceNetChallenge/RoadDetector" -> "mj129/CoANet"
"SpaceNetChallenge/RoadDetector" -> "avanetten/cresi"
"geoyee/PdRSCD" -> "JiehangXie/Landscape-Heath-Score" ["e"=1]
"remicres/sr4rs" -> "remicres/otbtf"
"remicres/sr4rs" -> "CNES/decloud"
"Delta2Force/MCVmComputers" -> "surya-veer/movement-tracking"
"Delta2Force/MCVmComputers" -> "montoyo/mcef"
"Delta2Force/MCVmComputers" -> "fnuecke/oc2" ["e"=1]
"Delta2Force/MCVmComputers" -> "SpongePowered/Mixin" ["e"=1]
"Delta2Force/MCVmComputers" -> "IgorTimofeev/MineOS" ["e"=1]
"Delta2Force/MCVmComputers" -> "FabricMC/fabric" ["e"=1]
"Delta2Force/MCVmComputers" -> "jellysquid3/phosphor-fabric" ["e"=1]
"karanpratapsingh/portfolio" -> "w-smesnoj/portfolio-template"
"mojodna/marblecutter" -> "mojodna/marblecutter-virtual"
"mojodna/marblecutter" -> "radiantearth/tiles.rdnt.io"
"mojodna/marblecutter-virtual" -> "mojodna/marblecutter"
"Toblerity/Fiona" -> "mapbox/rasterio"
"Toblerity/Fiona" -> "Toblerity/Shapely"
"Toblerity/Fiona" -> "Toblerity/rtree" ["e"=1]
"Toblerity/Fiona" -> "geopandas/geopandas"
"Toblerity/Fiona" -> "GeospatialPython/pyshp"
"Toblerity/Fiona" -> "OSGeo/gdal" ["e"=1]
"Toblerity/Fiona" -> "perrygeo/python-rasterstats"
"Toblerity/Fiona" -> "pysal/pysal"
"Toblerity/Fiona" -> "corteva/rioxarray"
"Toblerity/Fiona" -> "pyproj4/pyproj"
"Toblerity/Fiona" -> "makepath/xarray-spatial"
"Toblerity/Fiona" -> "pygeos/pygeos"
"Toblerity/Fiona" -> "SciTools/cartopy" ["e"=1]
"Toblerity/Fiona" -> "jswhit/pyproj" ["e"=1]
"Toblerity/Fiona" -> "geoalchemy/geoalchemy2"
"adugnag/gee_s1_ard" -> "shijuanchen/forest_degradation_georgia"
"adugnag/gee_s1_ard" -> "ESA-PhiLab/radiometric-slope-correction"
"adugnag/gee_s1_ard" -> "parevalo/gee-ccdc-tools"
"adugnag/gee_s1_ard" -> "davemlz/eemont"
"chenyuntc/scene-baseline" -> "buptchan/scene-classification"
"chenyuntc/scene-baseline" -> "fangfchen/AIChallenger_SceneClassification_ZJUGIVE"
"chenyuntc/scene-baseline" -> "yya007/SceneClassification"
"geoalchemy/geoalchemy2" -> "geoalchemy/geoalchemy"
"geoalchemy/geoalchemy2" -> "Toblerity/Fiona"
"geoalchemy/geoalchemy2" -> "geopython/OWSLib"
"geoalchemy/geoalchemy2" -> "geopython/pygeoapi"
"geoalchemy/geoalchemy2" -> "CrunchyData/pg_featureserv" ["e"=1]
"geoalchemy/geoalchemy2" -> "mapbox/rasterio"
"geoalchemy/geoalchemy2" -> "developmentseed/geojson-pydantic"
"geoalchemy/geoalchemy2" -> "kvesteri/sqlalchemy-utils" ["e"=1]
"geoalchemy/geoalchemy2" -> "postgis/postgis" ["e"=1]
"geoalchemy/geoalchemy2" -> "frewsxcv/python-geojson"
"geoalchemy/geoalchemy2" -> "anitagraser/movingpandas"
"geoalchemy/geoalchemy2" -> "pgpointcloud/pointcloud" ["e"=1]
"geoalchemy/geoalchemy2" -> "ungarj/mapchete"
"geoalchemy/geoalchemy2" -> "holoviz/spatialpandas"
"geoalchemy/geoalchemy2" -> "mattijn/topojson"
"cogeotiff/rio-cogeo" -> "cogeotiff/rio-tiler"
"cogeotiff/rio-cogeo" -> "developmentseed/rio-viz"
"cogeotiff/rio-cogeo" -> "developmentseed/titiler"
"cogeotiff/rio-cogeo" -> "stac-utils/pystac"
"cogeotiff/rio-cogeo" -> "radiantearth/stac-browser"
"cogeotiff/rio-cogeo" -> "developmentseed/cogeo-mosaic"
"cogeotiff/rio-cogeo" -> "rouault/cogserver"
"cogeotiff/rio-cogeo" -> "cogeotiff/cog-spec"
"cogeotiff/rio-cogeo" -> "radiantearth/stac-api-spec"
"cogeotiff/rio-cogeo" -> "lambgeo/docker-lambda"
"cogeotiff/rio-cogeo" -> "dymaxionlabs/dask-rasterio" ["e"=1]
"cogeotiff/rio-cogeo" -> "mapbox/rio-glui"
"cogeotiff/rio-cogeo" -> "stac-utils/stactools"
"JacobJeppesen/RS-Net" -> "SorourMo/38-Cloud-A-Cloud-Segmentation-Dataset"
"JacobJeppesen/RS-Net" -> "SorourMo/Cloud-Net-A-semantic-segmentation-CNN-for-cloud-detection"
"JacobJeppesen/RS-Net" -> "savasozkan/cloud_detection"
"OpenGeoscience/geonotebook" -> "OpenGeoscience/geojs" ["e"=1]
"OpenGeoscience/geonotebook" -> "locationtech-labs/geopyspark" ["e"=1]
"OpenGeoscience/geonotebook" -> "radiantearth/stac-spec"
"OpenGeoscience/geonotebook" -> "mapbox/rasterio"
"OpenGeoscience/geonotebook" -> "dwtkns/gdal-cheat-sheet" ["e"=1]
"OpenGeoscience/geonotebook" -> "azavea/raster-vision"
"OpenGeoscience/geonotebook" -> "locationtech/geotrellis" ["e"=1]
"OpenGeoscience/geonotebook" -> "trailbehind/DeepOSM"
"OpenGeoscience/geonotebook" -> "mapbox/mapboxgl-jupyter"
"OpenGeoscience/geonotebook" -> "mapbox/robosat"
"OpenGeoscience/geonotebook" -> "gboeing/urban-data-science"
"OpenGeoscience/geonotebook" -> "pytroll/pyresample" ["e"=1]
"OpenGeoscience/geonotebook" -> "ellisonbg/ipyleaflet" ["e"=1]
"OpenGeoscience/geonotebook" -> "developmentseed/label-maker"
"OpenGeoscience/geonotebook" -> "earthlab/earthpy"
"nshaud/DeepNetsForEO" -> "nshaud/DeepHyperX" ["e"=1]
"nshaud/DeepNetsForEO" -> "sshuair/torchsat"
"nshaud/DeepNetsForEO" -> "azavea/raster-vision"
"nshaud/DeepNetsForEO" -> "sentinel-hub/eo-learn"
"nshaud/DeepNetsForEO" -> "chrieke/InstanceSegmentation_Sentinel2"
"nshaud/DeepNetsForEO" -> "developmentseed/label-maker"
"nshaud/DeepNetsForEO" -> "mitmul/ssai-cnn"
"nshaud/DeepNetsForEO" -> "SpaceNetChallenge/BuildingDetectors"
"nshaud/DeepNetsForEO" -> "trailbehind/DeepOSM"
"nshaud/DeepNetsForEO" -> "jensleitloff/CNN-Sentinel"
"nshaud/DeepNetsForEO" -> "reachsumit/deep-unet-for-satellite-image-segmentation"
"nshaud/DeepNetsForEO" -> "deepVector/geospatial-machine-learning"
"nshaud/DeepNetsForEO" -> "planetlabs/notebooks"
"nshaud/DeepNetsForEO" -> "rmkemker/EarthMapper"
"nshaud/DeepNetsForEO" -> "chrieke/awesome-satellite-imagery-datasets"
"jensleitloff/CNN-Sentinel" -> "shakasom/Deep-Learning-for-Satellite-Imagery"
"jensleitloff/CNN-Sentinel" -> "mortcanty/CRC4Docker"
"jensleitloff/CNN-Sentinel" -> "chrieke/InstanceSegmentation_Sentinel2"
"jensleitloff/CNN-Sentinel" -> "lanha/DSen2"
"jensleitloff/CNN-Sentinel" -> "phelber/EuroSAT"
"jensleitloff/CNN-Sentinel" -> "sentinel-hub/eo-flow"
"azavea/raster-vision-examples" -> "azavea/raster-vision-qgis"
"azavea/raster-vision-examples" -> "raster-foundry/raster-foundry" ["e"=1]
"developmentseed/skynet-data" -> "developmentseed/skynet-train"
"developmentseed/skynet-data" -> "developmentseed/spacenet-data"
"developmentseed/skynet-data" -> "mitmul/ssai-cnn"
"developmentseed/skynet-data" -> "larsroemheld/OSM-HOT-ConvNet"
"developmentseed/skynet-data" -> "BradNeuberg/cloudless"
"developmentseed/skynet-data" -> "developmentseed/label-maker"
"gee-community/gee_tools" -> "fitoprincipe/geetools-code-editor"
"gee-community/gee_tools" -> "renelikestacos/Google-Earth-Engine-Python-Examples"
"gee-community/gee_tools" -> "Fernerkundung/EarthEngine_scripts"
"gee-community/gee_tools" -> "gee-community/ee-palettes"
"gee-community/gee_tools" -> "gee-community/qgis-earthengine-plugin"
"gee-community/gee_tools" -> "davemlz/eemont"
"gee-community/gee_tools" -> "eMapR/LT-GEE"
"gee-community/gee_tools" -> "giswqs/Awesome-GEE"
"gee-community/gee_tools" -> "sacridini/GEET"
"gee-community/gee_tools" -> "samapriya/awesome-gee-community-datasets"
"gee-community/gee_tools" -> "fitoprincipe/geebap"
"gee-community/gee_tools" -> "mortcanty/earthengine"
"gee-community/gee_tools" -> "google/earthengine-community"
"gee-community/gee_tools" -> "giswqs/qgis-earthengine-examples"
"gee-community/gee_tools" -> "google/earthengine-api"
"geopython/pygeoapi" -> "geopython/OWSLib"
"geopython/pygeoapi" -> "opengeospatial/ogcapi-features"
"geopython/pygeoapi" -> "geopython/pywps"
"geopython/pygeoapi" -> "developmentseed/titiler"
"geopython/pygeoapi" -> "radiantearth/stac-spec"
"geopython/pygeoapi" -> "CrunchyData/pg_featureserv" ["e"=1]
"geopython/pygeoapi" -> "developmentseed/timvt"
"geopython/pygeoapi" -> "developmentseed/morecantile"
"geopython/pygeoapi" -> "geopandas/pyogrio"
"geopython/pygeoapi" -> "stac-utils/pystac"
"geopython/pygeoapi" -> "makepath/xarray-spatial"
"geopython/pygeoapi" -> "geopython/pycsw"
"geopython/pygeoapi" -> "radiantearth/stac-api-spec"
"geopython/pygeoapi" -> "azavea/pystac"
"geopython/pygeoapi" -> "CrunchyData/pg_tileserv" ["e"=1]
"jldowns/google_earth_engine_notebook" -> "mortcanty/earthengine"
"jldowns/google_earth_engine_notebook" -> "g07kore/Google-Earth-Engine-Python-Examples"
"jldowns/google_earth_engine_notebook" -> "tylere/ee-jupyter-examples"
"jldowns/google_earth_engine_notebook" -> "gee-community/awesome-google-earth-engine"
"jldowns/google_earth_engine_notebook" -> "eMapR/LT-GEE"
"vicwer/sense_classification" -> "fortitude94deng/huawei_remote-sensing"
"vicwer/sense_classification" -> "Parker-Lyu/rscup2019_classifier"
"vicwer/sense_classification" -> "fortitude94deng/baidu-remote-sensing"
"vicwer/sense_classification" -> "niecongchong/RS-Scene-Classification"
"Christiaanvandertol/SCOPE" -> "Christiaanvandertol/Fluspect"
"calebrob6/land-cover" -> "microsoft/landcover"
"phelber/EuroSAT" -> "jensleitloff/CNN-Sentinel"
"phelber/EuroSAT" -> "raoofnaushad/Land-Cover-Classification-using-Sentinel-2-Dataset"
"phelber/EuroSAT" -> "shakasom/Deep-Learning-for-Satellite-Imagery"
"phelber/EuroSAT" -> "TachibanaYoshino/Remote-sensing-image-semantic-segmentation"
"phelber/EuroSAT" -> "calebrob6/land-cover"
"phelber/EuroSAT" -> "sentinel-hub/eo-flow"
"phelber/EuroSAT" -> "sentinelsat/sentinelsat"
"phelber/EuroSAT" -> "sshuair/torchsat"
"UDST/urbanaccess" -> "UDST/pandana"
"UDST/urbanaccess" -> "kuanb/peartree" ["e"=1]
"UDST/urbanaccess" -> "UDST/osmnet"
"UDST/urbanaccess" -> "spatialucr/geosnap"
"UDST/urbanaccess" -> "UDST/urbansim"
"UDST/urbanaccess" -> "remix/partridge" ["e"=1]
"UDST/urbanaccess" -> "conveyal/r5" ["e"=1]
"UDST/urbanaccess" -> "Esri/public-transit-tools" ["e"=1]
"UDST/urbanaccess" -> "waddell/urban-informatics-and-visualization"
"UDST/urbanaccess" -> "martinfleis/momepy"
"UDST/urbanaccess" -> "ipeaGIT/r5r" ["e"=1]
"UDST/urbanaccess" -> "CxAalto/gtfspy" ["e"=1]
"UDST/urbanaccess" -> "UDST/choicemodels"
"UDST/urbanaccess" -> "r-transit/tidytransit" ["e"=1]
"dingmyu/Pytorch-Topology-Aware-Delineation" -> "Tong-ZHAO/topology_aware_delineation"
"Junjue-Wang/LoveDA" -> "WangLibo1995/GeoSeg"
"Junjue-Wang/LoveDA" -> "Junjue-Wang/LoveCS"
"Junjue-Wang/LoveDA" -> "Luffy03/DCA"
"Junjue-Wang/LoveDA" -> "Z-Zheng/ChangeStar"
"Junjue-Wang/LoveDA" -> "likyoo/change_detection.pytorch"
"WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class" -> "WangZhenqing-RS/2021Tianchi_RS"
"WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class" -> "Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images"
"WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class" -> "1044197988/Semantic-segmentation-of-remote-sensing-images"
"WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class" -> "anxiangsir/deeplabv3-Tensorflow"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "gee-community/gee_tools"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "Fernerkundung/EarthEngine_scripts"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "sacridini/GEET"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "csaybar/EEwPython"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "gee-community/ee-tensorflow-notebooks"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "renelikestacos/Google-Earth-Engine-JavaScript-Examples"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "jldowns/google_earth_engine_notebook"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "giswqs/earthengine-py-notebooks"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "fitoprincipe/ipygee"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "giswqs/Awesome-GEE"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "gee-community/qgis-earthengine-plugin"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "mortcanty/earthengine"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "fitoprincipe/geetools-code-editor"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "geohackweek/GoogleEarthEngine"
"renelikestacos/Google-Earth-Engine-Python-Examples" -> "giswqs/qgis-earthengine-examples"
"samsammurphy/gee-atmcorr-S2" -> "samsammurphy/ee-atmcorr-timeseries"
"samsammurphy/gee-atmcorr-S2" -> "robintw/Py6S"
"samsammurphy/gee-atmcorr-S2" -> "MarcYin/SIAC_GEE"
"samsammurphy/gee-atmcorr-S2" -> "ndminhhus/geeguide"
"samsammurphy/gee-atmcorr-S2" -> "fitoprincipe/geebap"
"umwilm/SEN2COR" -> "umwilm/SEN2THREE"
"scikit-image/skimage-tutorials" -> "jorisvandenbossche/geopandas-tutorial"
"scikit-image/skimage-tutorials" -> "pytroll/tutorial-satpy-half-day"
"scikit-image/skimage-tutorials" -> "ericmjl/dl-workshop" ["e"=1]
"scikit-image/skimage-tutorials" -> "scikit-image/scikit-image" ["e"=1]
"scikit-image/skimage-tutorials" -> "patrickcgray/open-geo-tutorial"
"scikit-image/skimage-tutorials" -> "sarasafavi/remote-sensing-with-python"
"lopuhin/kaggle-dstl" -> "toshi-k/kaggle-satellite-imagery-feature-detection"
"lopuhin/kaggle-dstl" -> "ternaus/kaggle_dstl_submission"
"lopuhin/kaggle-dstl" -> "rogerxujiang/dstl_unet"
"lopuhin/kaggle-dstl" -> "DeepVoltaire/Dstl-Satellite-Imagery-Feature-Detection"
"senbox-org/snap-desktop" -> "senbox-org/snap-engine"
"senbox-org/snap-desktop" -> "senbox-org/s1tbx"
"senbox-org/snap-desktop" -> "senbox-org/s3tbx"
"banesullivan/localtileserver" -> "geopandas/xyzservices"
"cogeotiff/rio-tiler" -> "developmentseed/titiler"
"cogeotiff/rio-tiler" -> "cogeotiff/rio-cogeo"
"cogeotiff/rio-tiler" -> "developmentseed/rio-viz"
"cogeotiff/rio-tiler" -> "sat-utils/sat-search"
"cogeotiff/rio-tiler" -> "DHI-GRAS/terracotta"
"cogeotiff/rio-tiler" -> "radiantearth/stac-spec"
"cogeotiff/rio-tiler" -> "sat-utils/sat-stac"
"cogeotiff/rio-tiler" -> "gjoseph92/stackstac"
"cogeotiff/rio-tiler" -> "corteva/rioxarray"
"cogeotiff/rio-tiler" -> "developmentseed/rio-stac"
"cogeotiff/rio-tiler" -> "stac-utils/pystac"
"cogeotiff/rio-tiler" -> "mojodna/marblecutter"
"cogeotiff/rio-tiler" -> "stac-utils/pystac-client"
"cogeotiff/rio-tiler" -> "developmentseed/geolambda"
"cogeotiff/rio-tiler" -> "geospatial-jeff/aiocogeo"
"giswqs/streamlit-geospatial" -> "giswqs/leafmap"
"giswqs/streamlit-geospatial" -> "randyzwitch/streamlit-folium" ["e"=1]
"giswqs/streamlit-geospatial" -> "giswqs/geospatial"
"giswqs/streamlit-geospatial" -> "banesullivan/localtileserver"
"giswqs/streamlit-geospatial" -> "giswqs/aws-open-data-geo"
"giswqs/streamlit-geospatial" -> "opengeospatial/geoparquet"
"giswqs/streamlit-geospatial" -> "giswqs/Awesome-GEE"
"giswqs/streamlit-geospatial" -> "greppo-io/greppo"
"giswqs/streamlit-geospatial" -> "samapriya/awesome-gee-community-datasets"
"giswqs/streamlit-geospatial" -> "giswqs/geemap"
"giswqs/streamlit-geospatial" -> "DahnJ/Awesome-DEM"
"giswqs/streamlit-geospatial" -> "microsoft/satellite-imagery-labeling-tool"
"giswqs/streamlit-geospatial" -> "giswqs/qgis-earthengine-examples"
"giswqs/streamlit-geospatial" -> "davemlz/awesome-spectral-indices"
"giswqs/streamlit-geospatial" -> "jrieke/best-of-streamlit" ["e"=1]
"kvos/CoastSat.slope" -> "mcuttler/CoastSat.islands"
"radiantearth/mlhub-tutorials" -> "radiantearth/radiant-mlhub"
"radiantearth/mlhub-tutorials" -> "radiantearth/geo-ml-model-catalog"
"montoyo/mcef" -> "montoyo/webdisplays"
"montoyo/mcef" -> "ds58/mcef"
"duckdblabs/duckdb_spatial" -> "handstuyennn/geo"
"duckdblabs/duckdb_spatial" -> "isaacbrodsky/h3-duckdb"
"handstuyennn/geo" -> "duckdblabs/duckdb_spatial"
"handstuyennn/geo" -> "isaacbrodsky/h3-duckdb"
"handstuyennn/geo" -> "tschaub/gpq"
"DahnJ/Awesome-DEM" -> "klarrieu/RiverREM"
"DahnJ/Awesome-DEM" -> "davemlz/awesome-spectral-indices"
"DahnJ/Awesome-DEM" -> "bopen/xarray-sentinel"
"DahnJ/Awesome-DEM" -> "aliaksandr960/segment-anything-eo"
"DahnJ/Awesome-DEM" -> "bopen/sarsen"
"DahnJ/Awesome-DEM" -> "DahnJ/EO-jobs"
"DahnJ/Awesome-DEM" -> "kleok/FLOODPY"
"DahnJ/Awesome-DEM" -> "radiantearth/stac-browser"
"DahnJ/Awesome-DEM" -> "giswqs/python-geospatial"
"DahnJ/Awesome-DEM" -> "samapriya/awesome-gee-community-datasets"
"DahnJ/Awesome-DEM" -> "mszell/geospatialdatascience"
"DahnJ/Awesome-DEM" -> "awesome-spectral-indices/awesome-spectral-indices"
"Fernerkundung/EarthEngine_scripts" -> "gee-community/gee_tools"
"Fernerkundung/EarthEngine_scripts" -> "renelikestacos/Google-Earth-Engine-Python-Examples"
"Fernerkundung/EarthEngine_scripts" -> "sacridini/GEET"
"Fernerkundung/EarthEngine_scripts" -> "renelikestacos/Google-Earth-Engine-JavaScript-Examples"
"Fernerkundung/EarthEngine_scripts" -> "eMapR/LT-GEE"
"Fernerkundung/EarthEngine_scripts" -> "jldowns/google_earth_engine_notebook"
"Fernerkundung/EarthEngine_scripts" -> "brmagnuson/LandFallowingInEarthEngine"
"Fernerkundung/EarthEngine_scripts" -> "geohackweek/GoogleEarthEngine"
"Fernerkundung/EarthEngine_scripts" -> "gee-community/ee-palettes"
"Fernerkundung/EarthEngine_scripts" -> "fitoprincipe/geetools-code-editor"
"Fernerkundung/EarthEngine_scripts" -> "mortcanty/earthengine"
"Fernerkundung/EarthEngine_scripts" -> "giswqs/Awesome-GEE"
"Fernerkundung/EarthEngine_scripts" -> "google/earthengine-community"
"CosmiQ/solaris" -> "sshuair/torchsat"
"CosmiQ/solaris" -> "SpaceNetChallenge/utilities"
"CosmiQ/solaris" -> "CosmiQ/solaris_tutorials"
"CosmiQ/solaris" -> "azavea/raster-vision"
"CosmiQ/solaris" -> "SpaceNetChallenge/SpaceNet_Off_Nadir_Solutions"
"CosmiQ/solaris" -> "radiantearth/stac-spec"
"CosmiQ/solaris" -> "sentinel-hub/eo-learn"
"CosmiQ/solaris" -> "developmentseed/label-maker"
"CosmiQ/solaris" -> "motokimura/spacenet_building_detection"
"CosmiQ/solaris" -> "microsoft/torchgeo"
"CosmiQ/solaris" -> "CosmiQ/simrdwn" ["e"=1]
"CosmiQ/solaris" -> "SpaceNetChallenge/BuildingDetectors_Round2"
"CosmiQ/solaris" -> "mapbox/robosat"
"CosmiQ/solaris" -> "azavea/raster-vision-examples"
"CosmiQ/solaris" -> "CosmiQ/apls"
"mapbox/mapboxgl-jupyter" -> "OpenGeoscience/geonotebook"
"mapbox/mapboxgl-jupyter" -> "CartoDB/cartoframes" ["e"=1]
"mapbox/mapboxgl-jupyter" -> "mapbox/robosat"
"mapbox/mapboxgl-jupyter" -> "mapbox/mbview" ["e"=1]
"mapbox/mapboxgl-jupyter" -> "gboeing/urban-data-science"
"mapbox/mapboxgl-jupyter" -> "ellisonbg/ipyleaflet" ["e"=1]
"mapbox/mapboxgl-jupyter" -> "transitland/transitland-processing-animation" ["e"=1]
"mapbox/mapboxgl-jupyter" -> "mapbox/mapbox-cli-py"
"mapbox/mapboxgl-jupyter" -> "ResidentMario/geoplot"
"mapbox/mapboxgl-jupyter" -> "jupyter-widgets/ipyleaflet" ["e"=1]
"mapbox/mapboxgl-jupyter" -> "mapbox/mapbox-sdk-py"
"mapbox/mapboxgl-jupyter" -> "mapbox/mapbox-isochrone"
"mapbox/mapboxgl-jupyter" -> "Microsoft/USBuildingFootprints"
"mapbox/mapboxgl-jupyter" -> "UDST/pandana"
"mapbox/mapboxgl-jupyter" -> "mapbox/tippecanoe" ["e"=1]
"scikit-mobility/scikit-mobility" -> "anitagraser/movingpandas"
"scikit-mobility/scikit-mobility" -> "scikit-mobility/tutorials"
"scikit-mobility/scikit-mobility" -> "scikit-mobility/DeepLearning4HumanMobility"
"scikit-mobility/scikit-mobility" -> "UDST/pandana"
"scikit-mobility/scikit-mobility" -> "martinfleis/momepy"
"scikit-mobility/scikit-mobility" -> "pysal/pysal"
"scikit-mobility/scikit-mobility" -> "pysal/spaghetti"
"scikit-mobility/scikit-mobility" -> "lalessan/scales_human_mobility"
"scikit-mobility/scikit-mobility" -> "scikit-mobility/DeepGravity"
"scikit-mobility/scikit-mobility" -> "gboeing/urban-data-science"
"scikit-mobility/scikit-mobility" -> "mszell/geospatialdatascience"
"scikit-mobility/scikit-mobility" -> "holoviz/spatialpandas"
"scikit-mobility/scikit-mobility" -> "pysal/mgwr"
"scikit-mobility/scikit-mobility" -> "anitagraser/movement-analysis-tools"
"scikit-mobility/scikit-mobility" -> "pysal/spopt"
"waddell/urban-informatics-and-visualization" -> "gboeing/urban-data-science"
"waddell/urban-informatics-and-visualization" -> "UDST/urbanaccess"
"waddell/urban-informatics-and-visualization" -> "alexsingleton/urban_analytics"
"waddell/urban-informatics-and-visualization" -> "UDST/pandana"
"waddell/urban-informatics-and-visualization" -> "UDST/urbansim"
"waddell/urban-informatics-and-visualization" -> "waddell/CP255"
"waddell/urban-informatics-and-visualization" -> "kuanb/peartree" ["e"=1]
"microsoft/farmvibes-ai" -> "remotesensinglab/raster4ml"
"microsoft/farmvibes-ai" -> "microsoft/torchgeo"
"microsoft/farmvibes-ai" -> "samapriya/awesome-gee-community-datasets"
"microsoft/farmvibes-ai" -> "Project-AgML/AgML"
"microsoft/farmvibes-ai" -> "Agri-Hub/Callisto-Dataset-Collection"
"microsoft/farmvibes-ai" -> "gjoseph92/stackstac"
"microsoft/farmvibes-ai" -> "google-research/arco-era5"
"microsoft/farmvibes-ai" -> "Seyed-Ali-Ahmadi/Awesome_Satellite_Benchmark_Datasets"
"Zhaoguanhua/AtmosphericCorrection" -> "robintw/Py6S"
"Zhaoguanhua/AtmosphericCorrection" -> "samsammurphy/6S_emulator"
"Zhaoguanhua/AtmosphericCorrection" -> "WangZhenqing-RS/GF2Preprocess"
"rasterio/rasterio" -> "shapely/shapely"
"rasterio/rasterio" -> "corteva/rioxarray"
"rasterio/rasterio" -> "makepath/xarray-spatial"
"rasterio/rasterio" -> "stac-utils/pystac-client"
"rasterio/rasterio" -> "perrygeo/python-rasterstats"
"rasterio/rasterio" -> "microsoft/PlanetaryComputer"
"rasterio/rasterio" -> "holoviz/spatialpandas"
"rasterio/rasterio" -> "giswqs/lidar"
"rasterio/rasterio" -> "giswqs/geospatial-ml"
"rasterio/rasterio" -> "stac-utils/pystac"
"rasterio/rasterio" -> "microsoft/torchgeo"
"rasterio/rasterio" -> "Toblerity/Fiona"
"rasterio/rasterio" -> "davemlz/awesome-spectral-indices"
"rasterio/rasterio" -> "geopandas/dask-geopandas"
"rasterio/rasterio" -> "chrieke/awesome-geospatial-companies"
"pyproj4/pyproj" -> "OSGeo/PROJ" ["e"=1]
"pyproj4/pyproj" -> "Toblerity/Fiona"
"pyproj4/pyproj" -> "SciTools/cartopy" ["e"=1]
"pyproj4/pyproj" -> "fatiando/verde" ["e"=1]
"pyproj4/pyproj" -> "corteva/rioxarray"
"pyproj4/pyproj" -> "geopandas/geopandas"
"pyproj4/pyproj" -> "Turbo87/utm"
"pyproj4/pyproj" -> "jazzband/geojson"
"pyproj4/pyproj" -> "Toblerity/Shapely"
"pyproj4/pyproj" -> "makepath/xarray-spatial"
"pyproj4/pyproj" -> "earthlab/earthpy"
"pyproj4/pyproj" -> "geopandas/dask-geopandas"
"pyproj4/pyproj" -> "mapbox/rasterio"
"pyproj4/pyproj" -> "geopandas/pyogrio"
"pyproj4/pyproj" -> "GenericMappingTools/pygmt" ["e"=1]
"gdsbook/book" -> "martinfleis/momepy"
"gdsbook/book" -> "pysal/spopt"
"gdsbook/book" -> "pysal/libpysal"
"gdsbook/book" -> "pysal/tobler"
"gdsbook/book" -> "pysal/pysal"
"gdsbook/book" -> "GDSL-UL/Teaching_Links"
"gdsbook/book" -> "pysal/esda"
"gdsbook/book" -> "spatialucr/geosnap"
"gdsbook/book" -> "CartoDB/research-public"
"gdsbook/book" -> "HTenkanen/pyrosm"
"perrygeo/python-rasterstats" -> "corteva/rioxarray"
"perrygeo/python-rasterstats" -> "corteva/geocube"
"perrygeo/python-rasterstats" -> "mapbox/rasterio"
"perrygeo/python-rasterstats" -> "makepath/xarray-spatial"
"perrygeo/python-rasterstats" -> "pytroll/pyresample" ["e"=1]
"perrygeo/python-rasterstats" -> "sentinel-hub/sentinel2-cloud-detector"
"perrygeo/python-rasterstats" -> "earthlab/earthpy"
"perrygeo/python-rasterstats" -> "mdbartos/pysheds" ["e"=1]
"perrygeo/python-rasterstats" -> "Toblerity/Fiona"
"perrygeo/python-rasterstats" -> "johntruckenbrodt/pyroSAR"
"perrygeo/python-rasterstats" -> "ozak/georasters"
"perrygeo/python-rasterstats" -> "sentinel-hub/eo-learn"
"perrygeo/python-rasterstats" -> "Fernerkundung/awesome-sentinel"
"perrygeo/python-rasterstats" -> "fatiando/verde" ["e"=1]
"perrygeo/python-rasterstats" -> "holoviz/spatialpandas"
"timwis/csv-schema" -> "pascal-schetelat/Slope"
"timwis/csv-schema" -> "HHammond/PrettyPandas" ["e"=1]
"UDST/urbansim" -> "UDST/pandana"
"UDST/urbansim" -> "UDST/urbanaccess"
"UDST/urbansim" -> "UDST/sanfran_urbansim"
"UDST/urbansim" -> "UDST/synthpop"
"UDST/urbansim" -> "waddell/urban-informatics-and-visualization"
"UDST/urbansim" -> "gboeing/urban-data-science"
"UDST/urbansim" -> "UDST/osmnet"
"UDST/urbansim" -> "UDST/activitysim"
"UDST/urbansim" -> "ActivitySim/activitysim" ["e"=1]
"UDST/urbansim" -> "abmgis/abmgis" ["e"=1]
"UDST/urbansim" -> "UDST/spandex"
"UDST/urbansim" -> "UDST/choicemodels"
"UDST/urbansim" -> "sidewalklabs/doppelganger"
"UDST/urbansim" -> "UDST/urbansim_templates"
"UDST/urbansim" -> "marcusyoung/otp-tutorial"
"darribas/contextily" -> "darribas/gds_env"
"microsoft/PlanetaryComputerExamples" -> "microsoft/PlanetaryComputer"
"microsoft/PlanetaryComputerExamples" -> "microsoft/planetary-computer-apis"
"microsoft/PlanetaryComputerExamples" -> "microsoft/planetary-computer-sdk-for-python"
"microsoft/PlanetaryComputerExamples" -> "gjoseph92/stackstac"
"microsoft/PlanetaryComputerExamples" -> "stac-utils/pystac"
"microsoft/PlanetaryComputerExamples" -> "microsoft/AIforEarthDataSets"
"microsoft/PlanetaryComputerExamples" -> "makepath/xarray-spatial"
"microsoft/PlanetaryComputerExamples" -> "microsoft/planetary-computer-containers"
"microsoft/PlanetaryComputerExamples" -> "stac-utils/stactools"
"microsoft/PlanetaryComputerExamples" -> "corteva/geocube"
"microsoft/PlanetaryComputerExamples" -> "intake/intake-stac"
"microsoft/PlanetaryComputerExamples" -> "corteva/rioxarray"
"microsoft/PlanetaryComputerExamples" -> "microsoft/planetary-computer-hub"
"microsoft/PlanetaryComputerExamples" -> "sat-utils/sat-search"
"TUM-LMF/MTLCC" -> "TUM-LMF/BreizhCrops"
"TUM-LMF/MTLCC" -> "TUM-LMF/fieldRNN"
"TUM-LMF/MTLCC" -> "TUM-LMF/MTLCC-pytorch"
"fitoprincipe/geetools-code-editor" -> "gee-community/gee_tools"
"fitoprincipe/geetools-code-editor" -> "gee-community/ee-palettes"
"fitoprincipe/geetools-code-editor" -> "eMapR/LT-GEE"
"fitoprincipe/geetools-code-editor" -> "sacridini/GEET"
"fitoprincipe/geetools-code-editor" -> "Fernerkundung/EarthEngine_scripts"
"fitoprincipe/geetools-code-editor" -> "fitoprincipe/geebap"
"fitoprincipe/geetools-code-editor" -> "samapriya/awesome-gee-community-datasets"
"fitoprincipe/geetools-code-editor" -> "samsammurphy/gee-atmcorr-S2"
"fitoprincipe/geetools-code-editor" -> "gee-community/qgis-earthengine-plugin"
"fitoprincipe/geetools-code-editor" -> "giswqs/Awesome-GEE"
"fitoprincipe/geetools-code-editor" -> "renelikestacos/Google-Earth-Engine-Python-Examples"
"fitoprincipe/geetools-code-editor" -> "gee-community/awesome-google-earth-engine"
"fitoprincipe/geetools-code-editor" -> "gee-community/ee-tensorflow-notebooks"
"fitoprincipe/geetools-code-editor" -> "SERVIR/water-quality-gee"
"fitoprincipe/geetools-code-editor" -> "csaybar/EEwPython"
"rulixiang/ChangeDetectionPCAKmeans" -> "abhijeet3922/Change-Detection-in-Satellite-Imagery"
"charlotte-pel/temporalCNN" -> "charlotte-pel/igarss2019-dl4sits"
"charlotte-pel/temporalCNN" -> "VSainteuf/pytorch-psetae"
"charlotte-pel/temporalCNN" -> "dl4sits/BreizhCrops"
"charlotte-pel/temporalCNN" -> "TUM-LMF/MTLCC"
"charlotte-pel/temporalCNN" -> "TUM-LMF/fieldRNN"
"pysal/spopt" -> "pysal/libpysal"
"pysal/spopt" -> "HTenkanen/pyrosm"
"pysal/spopt" -> "pysal/spaghetti"
"pysal/spopt" -> "spatialucr/geosnap"
"pysal/spopt" -> "pysal/momepy"
"pysal/spopt" -> "pysal/segregation"
"pysal/spopt" -> "pysal/splot"
"pysal/spopt" -> "UDST/pandana"
"pysal/spopt" -> "martinfleis/momepy"
"pysal/spopt" -> "pysal/tobler"
"pysal/spopt" -> "pysal/esda"
"pysal/spopt" -> "pysal/mapclassify"
"raphaelquast/EOmaps" -> "sertit/eoreader"
"raphaelquast/EOmaps" -> "microsoft/satellite-imagery-labeling-tool"
"raphaelquast/EOmaps" -> "greppo-io/greppo"
"microsoft/AustraliaBuildingFootprints" -> "microsoft/Uganda-Tanzania-Building-Footprints"
"microsoft/AustraliaBuildingFootprints" -> "microsoft/KenyaNigeriaBuildingFootprints"
"developmentseed/landsat-util" -> "olivierhagolle/LANDSAT-Download"
"developmentseed/landsat-util" -> "developmentseed/label-maker"
"developmentseed/landsat-util" -> "dwtkns/gdal-cheat-sheet" ["e"=1]
"developmentseed/landsat-util" -> "mapbox/rasterio"
"developmentseed/landsat-util" -> "developmentseed/landsat-api"
"developmentseed/landsat-util" -> "sat-utils/sat-api"
"developmentseed/landsat-util" -> "landsat-pds/landsat_ingestor"
"developmentseed/landsat-util" -> "sentinelsat/sentinelsat"
"developmentseed/landsat-util" -> "gipit/gippy"
"developmentseed/landsat-util" -> "USGS-EROS/espa-api"
"developmentseed/landsat-util" -> "radiantearth/stac-spec"
"developmentseed/landsat-util" -> "sentinel-hub/sentinelhub-py"
"developmentseed/landsat-util" -> "developmentseed/skynet-train"
"developmentseed/landsat-util" -> "developmentseed/skynet-data"
"developmentseed/landsat-util" -> "Fernerkundung/awesome-sentinel"
"jwass/mplleaflet" -> "andrea-cuttone/geoplotlib"
"jwass/mplleaflet" -> "HHammond/PrettyPandas" ["e"=1]
"jwass/mplleaflet" -> "rossant/smopy"
"jwass/mplleaflet" -> "kjordahl/geopandas" ["e"=1]
"jwass/mplleaflet" -> "pascal-schetelat/Slope"
"jwass/mplleaflet" -> "ellisonbg/ipyleaflet" ["e"=1]
"jwass/mplleaflet" -> "timwis/csv-schema"
"jwass/mplleaflet" -> "perrygeo/python-raster-stats" ["e"=1]
"jwass/mplleaflet" -> "JosPolfliet/pandas-profiling" ["e"=1]
"jwass/mplleaflet" -> "jakevdp/mpld3" ["e"=1]
"jwass/mplleaflet" -> "SpatialPython/spatial_python"
"jwass/mplleaflet" -> "ResidentMario/geoplot"
"jwass/mplleaflet" -> "ozak/georasters"
"jwass/mplleaflet" -> "SciTools/cartopy" ["e"=1]
"jwass/mplleaflet" -> "python-visualization/folium"
"stac-utils/pystac" -> "stac-utils/pystac-client"
"stac-utils/pystac" -> "stac-utils/stac-fastapi"
"stac-utils/pystac" -> "stac-utils/stactools"
"stac-utils/pystac" -> "gjoseph92/stackstac"
"stac-utils/pystac" -> "radiantearth/stac-api-spec"
"stac-utils/pystac" -> "radiantearth/stac-browser"
"stac-utils/pystac" -> "intake/intake-stac"
"stac-utils/pystac" -> "microsoft/planetary-computer-apis"
"stac-utils/pystac" -> "cogeotiff/rio-cogeo"
"stac-utils/pystac" -> "developmentseed/titiler"
"stac-utils/pystac" -> "developmentseed/rio-viz"
"stac-utils/pystac" -> "radiantearth/stac-spec"
"stac-utils/pystac" -> "corteva/geocube"
"stac-utils/pystac" -> "developmentseed/rio-stac"
"stac-utils/pystac" -> "opendatacube/odc-stac"
"pysal/tobler" -> "spatialucr/geosnap"
"pysal/tobler" -> "pysal/mapclassify"
"pysal/tobler" -> "pysal/segregation"
"pysal/tobler" -> "pysal/splot"
"giswqs/geospatial-data-catalogs" -> "microsoft/RoadDetections"
"giswqs/geospatial-data-catalogs" -> "giswqs/aws-open-data-geo"
"giswqs/geospatial-data-catalogs" -> "samapriya/awesome-gee-community-datasets"
"giswqs/geospatial-data-catalogs" -> "opengeospatial/geoparquet"
"giswqs/geospatial-data-catalogs" -> "stac-utils/pystac"
"giswqs/geospatial-data-catalogs" -> "giswqs/geospatial"
"giswqs/geospatial-data-catalogs" -> "corteva/rioxarray"
"giswqs/geospatial-data-catalogs" -> "microsoft/PlanetaryComputer"
"giswqs/geospatial-data-catalogs" -> "bopen/xarray-sentinel"
"giswqs/geospatial-data-catalogs" -> "geopandas/dask-geopandas"
"giswqs/geospatial-data-catalogs" -> "radiantearth/stac-spec"
"giswqs/geospatial-data-catalogs" -> "acgeospatial/awesome-earthobservation-code"
"giswqs/geospatial-data-catalogs" -> "giswqs/lidar"
"giswqs/geospatial-data-catalogs" -> "bopen/sarsen"
"giswqs/geospatial-data-catalogs" -> "opendatacube/odc-stac"
"SpatialPython/spatial_python" -> "carsonfarmer/python_geospatial"
"SpatialPython/spatial_python" -> "ljwolf/cenpy" ["e"=1]
"montoyo/webdisplays" -> "montoyo/mcef"
"businiaoo/PRCV2021-Change-Detection-Contest-2nd-place-Solution" -> "WangZhenqing-RS/2021rsipac_changeDetection_TOP4"
"businiaoo/PRCV2021-Change-Detection-Contest-2nd-place-Solution" -> "likyoo/PRCV2021_ChangeDetection_Top3"
"businiaoo/PRCV2021-Change-Detection-Contest-2nd-place-Solution" -> "78666621/2021rsipac_changeDetection_TOP5"
"businiaoo/PRCV2021-Change-Detection-Contest-2nd-place-Solution" -> "CarnoZhao/RSIPAC_Track2"
"businiaoo/PRCV2021-Change-Detection-Contest-2nd-place-Solution" -> "Molly6/segmentation_shengteng2021"
"yulisun/INLPG" -> "yulisun/NPSG"
"yulisun/INLPG" -> "yulisun/IRG-McS"
"yulisun/NPSG" -> "yulisun/INLPG"
"SarahwXU/HiSup" -> "zorzi-s/PolyWorldPretrainedNetwork"
"SarahwXU/HiSup" -> "jwwangchn/BONAI"
"jorisvandenbossche/geopandas-tutorial" -> "geopandas/scipy2018-geospatial-data"
"jorisvandenbossche/geopandas-tutorial" -> "ceholden/open-geo-tutorial"
"jorisvandenbossche/geopandas-tutorial" -> "ResidentMario/geoplot"
"jorisvandenbossche/geopandas-tutorial" -> "urschrei/Geopython"
"jorisvandenbossche/geopandas-tutorial" -> "darribas/contextily"
"jorisvandenbossche/geopandas-tutorial" -> "giswqs/whitebox-python"
"jorisvandenbossche/geopandas-tutorial" -> "anitagraser/movingpandas"
"jorisvandenbossche/geopandas-tutorial" -> "ozak/georasters"
"jorisvandenbossche/geopandas-tutorial" -> "pysal/scipy2019-intermediate-gds"
"jorisvandenbossche/geopandas-tutorial" -> "corteva/geocube"
"jorisvandenbossche/geopandas-tutorial" -> "koldunovn/python_for_geosciences" ["e"=1]
"jorisvandenbossche/geopandas-tutorial" -> "patrickcgray/open-geo-tutorial"
"jorisvandenbossche/geopandas-tutorial" -> "ljwolf/geopython"
"jorisvandenbossche/geopandas-tutorial" -> "geopandas/geopandas"
"jorisvandenbossche/geopandas-tutorial" -> "uwcartlab/webmapping" ["e"=1]
"michelbierlaire/biogeme" -> "mncosta/biogeme_tutorial"
"mitroadmaps/roadtracer" -> "tansor/VecRoad"
"mitroadmaps/roadtracer" -> "songtaohe/Sat2Graph"
"mitroadmaps/roadtracer" -> "anilbatra2185/road_connectivity"
"mitroadmaps/roadtracer" -> "TonyXuQAQ/RNGDetPlusPlus"
"mitroadmaps/roadtracer" -> "dingmyu/Pytorch-Topology-Aware-Delineation"
"mitroadmaps/roadtracer" -> "mj129/CoANet"
"mitroadmaps/roadtracer" -> "carlesventura/iterative-deep-learning"
"mitroadmaps/roadtracer" -> "SpaceNetChallenge/RoadDetector"
"mitroadmaps/roadtracer" -> "astro-ck/Road-Extraction"
"mitroadmaps/roadtracer" -> "CosmiQ/apls"
"mitroadmaps/roadtracer" -> "zlckanata/DeepGlobe-Road-Extraction-Challenge"
"mitroadmaps/roadtracer" -> "CosmiQ/cresi"
"mitroadmaps/roadtracer" -> "mitroadmaps/gomapinfer"
"mitroadmaps/roadtracer" -> "zlkanata/DeepGlobe-Road-Extraction-Challenge"
"mitroadmaps/roadtracer" -> "mitroadmaps/roadtagger"
"geopython/pycsw" -> "geopython/OWSLib"
"geopython/pycsw" -> "geopython/pywps"
"geopython/pycsw" -> "geopython/pygeometa"
"geopython/pycsw" -> "geopython/PyWPS"
"geopython/pycsw" -> "tomkralidis/csw4js"
"geopython/pycsw" -> "OSGeo/Cat-Interop"
"samapriya/awesome-gee-community-datasets" -> "davemlz/eemont"
"samapriya/awesome-gee-community-datasets" -> "giswqs/Awesome-GEE"
"samapriya/awesome-gee-community-datasets" -> "gee-community/ee-palettes"
"samapriya/awesome-gee-community-datasets" -> "gee-community/gee_tools"
"samapriya/awesome-gee-community-datasets" -> "gee-community/qgis-earthengine-plugin"
"samapriya/awesome-gee-community-datasets" -> "acgeospatial/awesome-earthobservation-code"
"samapriya/awesome-gee-community-datasets" -> "fitoprincipe/geetools-code-editor"
"samapriya/awesome-gee-community-datasets" -> "google/earthengine-community"
"samapriya/awesome-gee-community-datasets" -> "davemlz/awesome-spectral-indices"
"samapriya/awesome-gee-community-datasets" -> "sacridini/GEET"
"samapriya/awesome-gee-community-datasets" -> "makepath/xarray-spatial"
"samapriya/awesome-gee-community-datasets" -> "awesome-spectral-indices/awesome-spectral-indices"
"samapriya/awesome-gee-community-datasets" -> "samapriya/geeup"
"samapriya/awesome-gee-community-datasets" -> "adugnag/gee_s1_ard"
"samapriya/awesome-gee-community-datasets" -> "giswqs/geospatial-data-catalogs"
"Automating-GIS-processes/site" -> "geo-python/site"
"Automating-GIS-processes/site" -> "DahnJ/H3-Pandas" ["e"=1]
"Automating-GIS-processes/site" -> "sarasafavi/remote-sensing-with-python"
"Azure/pixel_level_land_classification" -> "Esri/raster-deep-learning" ["e"=1]
"Azure/pixel_level_land_classification" -> "KGPML/Hyperspectral" ["e"=1]
"Azure/pixel_level_land_classification" -> "tropicalmentat/land-cover-to-land-use-classification"
"Azure/pixel_level_land_classification" -> "chrieke/InstanceSegmentation_Sentinel2"
"Azure/pixel_level_land_classification" -> "microsoft/landcover"
"Azure/pixel_level_land_classification" -> "GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus"
"Azure/pixel_level_land_classification" -> "sentinel-hub/eo-learn"
"Azure/pixel_level_land_classification" -> "azavea/raster-vision-examples"
"Azure/pixel_level_land_classification" -> "manideep2510/eye-in-the-sky"
"Azure/pixel_level_land_classification" -> "developmentseed/label-maker"
"Azure/pixel_level_land_classification" -> "azavea/raster-vision"
"Azure/pixel_level_land_classification" -> "CosmiQ/solaris"
"corteva/geocube" -> "corteva/rioxarray"
"corteva/geocube" -> "makepath/xarray-spatial"
"corteva/geocube" -> "stac-utils/pystac"
"corteva/geocube" -> "pangeo-data/rechunker" ["e"=1]
"corteva/geocube" -> "geopandas/dask-geopandas"
"corteva/geocube" -> "gjoseph92/stackstac"
"corteva/geocube" -> "davidbrochart/xarray_leaflet"
"corteva/geocube" -> "aazuspan/wxee"
"corteva/geocube" -> "fmaussion/salem" ["e"=1]
"corteva/geocube" -> "holoviz/spatialpandas"
"corteva/geocube" -> "jsignell/dask-geopandas"
"corteva/geocube" -> "stac-utils/pystac-client"
"corteva/geocube" -> "xarray-contrib/datatree" ["e"=1]
"giswqs/python-geospatial" -> "deepVector/geospatial-machine-learning"
"giswqs/python-geospatial" -> "sacridini/Awesome-Geospatial"
"giswqs/python-geospatial" -> "acgeospatial/awesome-earthobservation-code"
"giswqs/python-geospatial" -> "DahnJ/Awesome-DEM"
"giswqs/python-geospatial" -> "giswqs/qgis-earthengine-examples"
"giswqs/python-geospatial" -> "makepath/xarray-spatial"
"giswqs/python-geospatial" -> "samapriya/awesome-gee-community-datasets"
"giswqs/python-geospatial" -> "earthlab/earthpy"
"giswqs/python-geospatial" -> "ceholden/open-geo-tutorial"
"giswqs/python-geospatial" -> "giswqs/earthengine-py-notebooks"
"giswqs/python-geospatial" -> "giswqs/Awesome-GEE"
"giswqs/python-geospatial" -> "microsoft/torchgeo"
"giswqs/python-geospatial" -> "sentinel-hub/eo-learn"
"giswqs/python-geospatial" -> "giswqs/leafmap"
"giswqs/python-geospatial" -> "johntruckenbrodt/pyroSAR"
"nasaharvest/cropharvest" -> "nasaharvest/crop-mask"
"nasaharvest/cropharvest" -> "ellaampy/CropTypeMapping"
"patrickcgray/open-geo-tutorial" -> "ceholden/open-geo-tutorial"
"patrickcgray/open-geo-tutorial" -> "acgeospatial/Satellite_Imagery_Python"
"patrickcgray/open-geo-tutorial" -> "acgeospatial/awesome-earthobservation-code"
"patrickcgray/open-geo-tutorial" -> "davemlz/eemont"
"patrickcgray/open-geo-tutorial" -> "giswqs/earthengine-py-notebooks"
"patrickcgray/open-geo-tutorial" -> "csaybar/EEwPython"
"patrickcgray/open-geo-tutorial" -> "sentinel-hub/eo-learn"
"patrickcgray/open-geo-tutorial" -> "sarasafavi/remote-sensing-with-python"
"patrickcgray/open-geo-tutorial" -> "jensleitloff/CNN-Sentinel"
"patrickcgray/open-geo-tutorial" -> "deepVector/geospatial-machine-learning"
"patrickcgray/open-geo-tutorial" -> "sentinel-hub/custom-scripts"
"patrickcgray/open-geo-tutorial" -> "earthlab/earthpy"
"pysal/splot" -> "pysal/giddy"
"leonardoaraujosantos/ChangeNet" -> "gmayday1997/SceneChangeDet"
"leonardoaraujosantos/ChangeNet" -> "xdspacelab/sscdnet"
"dbekaert/StaMPS" -> "mdelgadoblasco/snap2stamps"
"dbekaert/StaMPS" -> "dbekaert/TRAIN"
"dbekaert/StaMPS" -> "yumorishita/LiCSBAS"
"dbekaert/StaMPS" -> "isce-framework/isce2"
"dbekaert/StaMPS" -> "isce-framework/isce2-docs"
"dbekaert/StaMPS" -> "GeoscienceAustralia/PyRate"
"dbekaert/StaMPS" -> "TUDelftGeodesy/Doris"
"dbekaert/StaMPS" -> "gmtsar/gmtsar"
"dbekaert/StaMPS" -> "thho/StaMPS_Visualizer"
"dbekaert/StaMPS" -> "pyrocko/kite"
"dbekaert/StaMPS" -> "insarlab/MintPy"
"dbekaert/StaMPS" -> "isce-framework/isce3"
"dbekaert/StaMPS" -> "scottyhq/dinosar"
"dbekaert/StaMPS" -> "isce-framework/fringe"
"earthlab/earthpy" -> "corteva/rioxarray"
"earthlab/earthpy" -> "makepath/xarray-spatial"
"earthlab/earthpy" -> "corteva/geocube"
"earthlab/earthpy" -> "earthlab/earthlab.github.io"
"earthlab/earthpy" -> "holoviz/geoviews"
"earthlab/earthpy" -> "fatiando/verde" ["e"=1]
"earthlab/earthpy" -> "GeoscienceAustralia/dea-notebooks"
"earthlab/earthpy" -> "pysal/esda"
"earthlab/earthpy" -> "gee-community/qgis-earthengine-plugin"
"earthlab/earthpy" -> "mdbartos/pysheds" ["e"=1]
"earthlab/earthpy" -> "cgre-aachen/gemgis" ["e"=1]
"earthlab/earthpy" -> "giswqs/lidar"
"earthlab/earthpy" -> "pytroll/satpy" ["e"=1]
"earthlab/earthpy" -> "perrygeo/python-rasterstats"
"earthlab/earthpy" -> "acgeospatial/awesome-earthobservation-code"
"microsoft/PlanetaryComputer" -> "stac-utils/pystac-client"
"microsoft/PlanetaryComputer" -> "microsoft/PlanetaryComputerExamples"
"microsoft/PlanetaryComputer" -> "gjoseph92/stackstac"
"microsoft/PlanetaryComputer" -> "stac-utils/stactools"
"microsoft/PlanetaryComputer" -> "opendatacube/odc-stac"
"andrea-cuttone/geoplotlib" -> "dgrtwo/gleam"
"andrea-cuttone/geoplotlib" -> "jwass/mplleaflet"
"andrea-cuttone/geoplotlib" -> "ResidentMario/geoplot"
"andrea-cuttone/geoplotlib" -> "JosPolfliet/pandas-profiling" ["e"=1]
"andrea-cuttone/geoplotlib" -> "ResidentMario/missingno" ["e"=1]
"andrea-cuttone/geoplotlib" -> "HHammond/PrettyPandas" ["e"=1]
"andrea-cuttone/geoplotlib" -> "python-visualization/folium"
"andrea-cuttone/geoplotlib" -> "timwis/csv-schema"
"andrea-cuttone/geoplotlib" -> "wrobstory/vincent" ["e"=1]
"andrea-cuttone/geoplotlib" -> "geopandas/geopandas"
"andrea-cuttone/geoplotlib" -> "yhat/ggplot" ["e"=1]
"andrea-cuttone/geoplotlib" -> "SciTools/cartopy" ["e"=1]
"andrea-cuttone/geoplotlib" -> "ellisonbg/altair" ["e"=1]
"andrea-cuttone/geoplotlib" -> "ellisonbg/ipyleaflet" ["e"=1]
"andrea-cuttone/geoplotlib" -> "iamaziz/PyDataset" ["e"=1]
"likyoo/PRCV2021_ChangeDetection_Top3" -> "businiaoo/PRCV2021-Change-Detection-Contest-2nd-place-Solution"
"vbhavank/Siamese-neural-network-for-change-detection" -> "vbhavank/Unstructured-change-detection-using-CNN"
"vbhavank/Siamese-neural-network-for-change-detection" -> "kyoukuntaro/FCSN_for_ChangeDetection_IGARSS2018"
"vbhavank/Siamese-neural-network-for-change-detection" -> "mvkolos/siamese-change-detection"
"vbhavank/Siamese-neural-network-for-change-detection" -> "daifeng2016/End-to-end-CD-for-VHR-satellite-image"
"vbhavank/Siamese-neural-network-for-change-detection" -> "rcdaudt/patch_based_change_detection"
"vbhavank/Siamese-neural-network-for-change-detection" -> "abhijeet3922/Change-Detection-in-Satellite-Imagery"
"vbhavank/Siamese-neural-network-for-change-detection" -> "rulixiang/DSFANet"
"vbhavank/Siamese-neural-network-for-change-detection" -> "shinianzhihou/ChangeDetection"
"anilbatra2185/road_connectivity" -> "tansor/VecRoad"
"anilbatra2185/road_connectivity" -> "songtaohe/Sat2Graph"
"anilbatra2185/road_connectivity" -> "antran89/road_visualizer"
"anilbatra2185/road_connectivity" -> "dingmyu/Pytorch-Topology-Aware-Delineation"
"anilbatra2185/road_connectivity" -> "mitroadmaps/roadtracer"
"anilbatra2185/road_connectivity" -> "CosmiQ/apls"
"anilbatra2185/road_connectivity" -> "carlesventura/iterative-deep-learning"
"tansor/VecRoad" -> "mj129/CoANet"
"tansor/VecRoad" -> "anilbatra2185/road_connectivity"
"tansor/VecRoad" -> "songtaohe/Sat2Graph"
"78666621/2021rsipac_changeDetection_TOP5" -> "businiaoo/PRCV2021-Change-Detection-Contest-2nd-place-Solution"
"78666621/2021rsipac_changeDetection_TOP5" -> "WangZhenqing-RS/2021rsipac_changeDetection_TOP4"
"zorzi-s/PolyWorldPretrainedNetwork" -> "SarahwXU/HiSup"
"zorzi-s/PolyWorldPretrainedNetwork" -> "Lydorn/Polygonization-by-Frame-Field-Learning"
"zorzi-s/PolyWorldPretrainedNetwork" -> "niecongchong/RS-building-regularization"
"zorzi-s/PolyWorldPretrainedNetwork" -> "xzq-njust/CVNet"
"zorzi-s/PolyWorldPretrainedNetwork" -> "zorzi-s/projectRegularization"
"zorzi-s/PolyWorldPretrainedNetwork" -> "jwwangchn/BONAI"
"karolzak/keras-unet" -> "neptune-ai/open-solution-mapping-challenge"
"karolzak/keras-unet" -> "yingkaisha/keras-unet-collection" ["e"=1]
"karolzak/keras-unet" -> "Vooban/Smoothly-Blend-Image-Patches"
"karolzak/keras-unet" -> "advaitsave/Multiclass-Semantic-Segmentation-CamVid"
"karolzak/keras-unet" -> "datasciencecampus/laika"
"karolzak/keras-unet" -> "reachsumit/deep-unet-for-satellite-image-segmentation"
"karolzak/keras-unet" -> "zizhaozhang/unet-tensorflow-keras"
"corteva/rioxarray" -> "makepath/xarray-spatial"
"corteva/rioxarray" -> "corteva/geocube"
"corteva/rioxarray" -> "geopandas/dask-geopandas"
"corteva/rioxarray" -> "opendatacube/odc-stac"
"corteva/rioxarray" -> "Ouranosinc/xclim" ["e"=1]
"corteva/rioxarray" -> "fatiando/verde" ["e"=1]
"corteva/rioxarray" -> "earthlab/earthpy"
"corteva/rioxarray" -> "stac-utils/pystac-client"
"corteva/rioxarray" -> "opendatacube/datacube-core"
"corteva/rioxarray" -> "davidbrochart/xarray_leaflet"
"corteva/rioxarray" -> "gjoseph92/stackstac"
"corteva/rioxarray" -> "johntruckenbrodt/pyroSAR"
"corteva/rioxarray" -> "fmaussion/salem" ["e"=1]
"corteva/rioxarray" -> "geopandas/pyogrio"
"corteva/rioxarray" -> "cogeotiff/rio-tiler"
"developmentseed/morecantile" -> "stac-utils/pgstac"
"digitalearthafrica/deafrica-sandbox-notebooks" -> "opendatacube/cube-in-a-box"
"sentinel-hub/sentinelhub-py" -> "sentinel-hub/eo-learn"
"sentinel-hub/sentinelhub-py" -> "sentinel-hub/sentinel2-cloud-detector"
"sentinel-hub/sentinelhub-py" -> "sentinelsat/sentinelsat"
"sentinel-hub/sentinelhub-py" -> "sentinel-hub/custom-scripts"
"sentinel-hub/sentinelhub-py" -> "Fernerkundung/awesome-sentinel"
"sentinel-hub/sentinelhub-py" -> "olivierhagolle/Sentinel-download"
"sentinel-hub/sentinelhub-py" -> "johntruckenbrodt/pyroSAR"
"sentinel-hub/sentinelhub-py" -> "azavea/raster-vision"
"sentinel-hub/sentinelhub-py" -> "lanha/DSen2"
"sentinel-hub/sentinelhub-py" -> "mapbox/rasterio"
"sentinel-hub/sentinelhub-py" -> "senbox-org/s1tbx"
"sentinel-hub/sentinelhub-py" -> "corteva/rioxarray"
"sentinel-hub/sentinelhub-py" -> "planetlabs/notebooks"
"sentinel-hub/sentinelhub-py" -> "radiantearth/stac-spec"
"sentinel-hub/sentinelhub-py" -> "GERSL/Fmask"
"DIUx-xView/xview2-baseline" -> "DIUx-xView/xview2-scoring"
"neptune-ai/open-solution-mapping-challenge" -> "crowdAI/crowdai-mapping-challenge-mask-rcnn"
"neptune-ai/open-solution-mapping-challenge" -> "motokimura/spacenet_building_detection"
"neptune-ai/open-solution-mapping-challenge" -> "reachsumit/deep-unet-for-satellite-image-segmentation"
"neptune-ai/open-solution-mapping-challenge" -> "Lydorn/Polygonization-by-Frame-Field-Learning"
"TonyXuQAQ/RNGDetPlusPlus" -> "songtaohe/Sat2Graph"
"yulisun/SCASC" -> "yulisun/IRG-McS"
"Z-Zheng/ChangeStar" -> "chenpan0615/FCCDN_pytorch"
"Z-Zheng/ChangeStar" -> "justchenhao/BIT_CD"
"Z-Zheng/ChangeStar" -> "justchenhao/IAug_CDNet"
"Z-Zheng/ChangeStar" -> "LiheYoung/SenseEarth2020-ChangeDetection"
"Z-Zheng/ChangeStar" -> "likyoo/Siam-NestedUNet"
"Z-Zheng/ChangeStar" -> "wgcban/ChangeFormer"
"Z-Zheng/ChangeStar" -> "wgcban/SemiCD"
"Z-Zheng/ChangeStar" -> "wgcban/ddpm-cd"
"Z-Zheng/ChangeStar" -> "ShaoRuizhe/SUNet-change_detection"
"Z-Zheng/ChangeStar" -> "likyoo/change_detection.pytorch"
"Z-Zheng/ChangeStar" -> "daifeng2016/Change-Detection-Dataset-for-High-Resolution-Satellite-Imagery"
"Z-Zheng/ChangeStar" -> "justchenhao/STANet"
"Z-Zheng/ChangeStar" -> "Bobholamovic/CDLab"
"UDST/pandana" -> "UDST/urbanaccess"
"UDST/pandana" -> "UDST/osmnet"
"UDST/pandana" -> "UDST/urbansim"
"UDST/pandana" -> "HTenkanen/pyrosm"
"UDST/pandana" -> "spatialucr/geosnap"
"UDST/pandana" -> "martinfleis/momepy"
"UDST/pandana" -> "kuanb/peartree" ["e"=1]
"UDST/pandana" -> "pysal/spopt"
"UDST/pandana" -> "scikit-mobility/scikit-mobility"
"UDST/pandana" -> "waddell/urban-informatics-and-visualization"
"UDST/pandana" -> "pysal/tobler"
"UDST/pandana" -> "pysal/giddy"
"UDST/pandana" -> "anitagraser/movingpandas"
"UDST/pandana" -> "UDST/choicemodels"
"UDST/pandana" -> "ipeaGIT/r5r" ["e"=1]
"microsoft/landcover" -> "calebrob6/land-cover"
"microsoft/landcover" -> "microsoft/AIforEarthDataSets"
"geonetwork/core-geonetwork" -> "geopython/pycsw"
"geonetwork/core-geonetwork" -> "geonetwork/docker-geonetwork"
"geonetwork/core-geonetwork" -> "geopython/pygeometa"
"geonetwork/core-geonetwork" -> "geosolutions-it/MapStore2" ["e"=1]
"geonetwork/core-geonetwork" -> "geopython/OWSLib"
"geonetwork/core-geonetwork" -> "inspire-eu-validation/community"
"geonetwork/core-geonetwork" -> "boundlessgeo/gsconfig" ["e"=1]
"geonetwork/core-geonetwork" -> "geopython/pywps"
"geonetwork/core-geonetwork" -> "locationtech/geogig" ["e"=1]
"geonetwork/core-geonetwork" -> "TerriaJS/TerriaMap" ["e"=1]
"geonetwork/core-geonetwork" -> "geonetwork/doc"
"geonetwork/core-geonetwork" -> "opengeospatial/WFS_FES"
"opengeospatial/geoparquet" -> "geopandas/geo-arrow-spec"
"opengeospatial/geoparquet" -> "developmentseed/titiler"
"opengeospatial/geoparquet" -> "geopolars/geopolars"
"opengeospatial/geoparquet" -> "geopandas/dask-geopandas"
"opengeospatial/geoparquet" -> "makepath/xarray-spatial"
"opengeospatial/geoparquet" -> "radiantearth/stac-spec"
"opengeospatial/geoparquet" -> "flatgeobuf/flatgeobuf" ["e"=1]
"opengeospatial/geoparquet" -> "gjoseph92/stackstac"
"opengeospatial/geoparquet" -> "stac-utils/pystac"
"opengeospatial/geoparquet" -> "radiantearth/stac-browser"
"opengeospatial/geoparquet" -> "stac-utils/pystac-client"
"opengeospatial/geoparquet" -> "holoviz/spatialpandas"
"opengeospatial/geoparquet" -> "giswqs/geospatial-data-catalogs"
"opengeospatial/geoparquet" -> "duckdblabs/duckdb_spatial"
"opengeospatial/geoparquet" -> "greppo-io/greppo"
"ykamikawa/tf-keras-SegNet" -> "lsh1994/keras-segmentation"
"niecongchong/HRNet-keras-semantic-segmentation" -> "soyan1999/segmentation_hrnet_keras"
"niecongchong/HRNet-keras-semantic-segmentation" -> "niecongchong/DANet-keras" ["e"=1]
"niecongchong/HRNet-keras-semantic-segmentation" -> "yuanyuanli85/tf-hrnet"
"yuanyuanli85/tf-hrnet" -> "niecongchong/HRNet-keras-semantic-segmentation"
"yuanyuanli85/tf-hrnet" -> "VXallset/deep-high-resolution-net.TensorFlow"
"yuanyuanli85/tf-hrnet" -> "AI-Chen/HRNet-V2"
"sertit/eoreader" -> "bopen/xarray-sentinel"
"sertit/eoreader" -> "bopen/sarsen"
"sertit/eoreader" -> "CS-SI/eodag"
"sertit/eoreader" -> "stac-utils/qgis-stac-plugin"
"JiaxuanYou/crop_yield_prediction" -> "gabrieltseng/pycrop-yield-prediction"
"JiaxuanYou/crop_yield_prediction" -> "cleipski/CropPredict"
"JiaxuanYou/crop_yield_prediction" -> "saeedkhaki92/Yield-Prediction-DNN"
"JiaxuanYou/crop_yield_prediction" -> "saeedkhaki92/CNN-RNN-Yield-Prediction"
"JiaxuanYou/crop_yield_prediction" -> "AnnaXWang/deep-transfer-learning-crop-prediction"
"JiaxuanYou/crop_yield_prediction" -> "meet-sapu/Crop-Yield-Prediction-Using-Satellite-Imagery"
"JiaxuanYou/crop_yield_prediction" -> "brad-ross/crop-yield-prediction-project"
"JiaxuanYou/crop_yield_prediction" -> "renelikestacos/Google-Earth-Engine-Python-Examples"
"JiaxuanYou/crop_yield_prediction" -> "chrieke/InstanceSegmentation_Sentinel2"
"dl4sits/BreizhCrops" -> "MarcCoru/crop-type-mapping"
"dl4sits/BreizhCrops" -> "VSainteuf/pastis-benchmark"
"dl4sits/BreizhCrops" -> "VSainteuf/pytorch-psetae"
"dl4sits/BreizhCrops" -> "roserustowicz/crop-type-mapping"
"microsoft/planetary-computer-apis" -> "microsoft/PlanetaryComputerDataCatalog"
"microsoft/planetary-computer-apis" -> "microsoft/planetary-computer-hub"
"microsoft/planetary-computer-apis" -> "microsoft/planetary-computer-sdk-for-python"
"radiantearth/stac-api-spec" -> "radiantearth/stac-spec"
"radiantearth/stac-api-spec" -> "stac-utils/pystac"
"radiantearth/stac-api-spec" -> "stac-utils/pystac-client"
"radiantearth/stac-api-spec" -> "stac-utils/stac-fastapi"
"radiantearth/stac-api-spec" -> "stac-utils/stactools"
"radiantearth/stac-api-spec" -> "stac-utils/pgstac"
"radiantearth/stac-api-spec" -> "stac-utils/stac-server"
"radiantearth/stac-api-spec" -> "azavea/franklin"
"radiantearth/stac-api-spec" -> "stac-utils/titiler-pgstac"
"gee-community/qgis-earthengine-plugin" -> "giswqs/qgis-earthengine-examples"
"gee-community/qgis-earthengine-plugin" -> "gee-community/gee_tools"
"gee-community/qgis-earthengine-plugin" -> "davemlz/eemont"
"gee-community/qgis-earthengine-plugin" -> "giswqs/Awesome-GEE"
"gee-community/qgis-earthengine-plugin" -> "samapriya/awesome-gee-community-datasets"
"gee-community/qgis-earthengine-plugin" -> "gee-community/awesome-google-earth-engine"
"gee-community/qgis-earthengine-plugin" -> "google/earthengine-community"
"gee-community/qgis-earthengine-plugin" -> "giswqs/earthengine-py-notebooks"
"gee-community/qgis-earthengine-plugin" -> "renelikestacos/Google-Earth-Engine-Python-Examples"
"gee-community/qgis-earthengine-plugin" -> "fitoprincipe/geetools-code-editor"
"gee-community/qgis-earthengine-plugin" -> "gee-community/ee-palettes"
"gee-community/qgis-earthengine-plugin" -> "sacridini/GEET"
"gee-community/qgis-earthengine-plugin" -> "mortcanty/earthengine"
"gee-community/qgis-earthengine-plugin" -> "earthlab/earthpy"
"gee-community/qgis-earthengine-plugin" -> "giswqs/geemap"
"jblindsay/whitebox-geospatial-analysis-tools" -> "jblindsay/whitebox-tools"
"bair-climate-initiative/metaearth" -> "stac-utils/pystac-client"
"andrea-ballatore/open-geo-data-education" -> "andrea-ballatore/teaching-programming-for-gis"
"gee-community/example-scripts" -> "gee-community/awesome-google-earth-engine"
"gee-community/example-scripts" -> "gee-community/ee-jupyter-contrib"
"kjordahl/SciPy-Tutorial-2015" -> "carsonfarmer/python_geospatial"
"jfilter/split-folders" -> "dovahcrow/patchify.py"
"spatstat/spatstat" -> "edzer/sp"
"giswqs/aws-open-data-geo" -> "giswqs/geospatial-data-catalogs"
"giswqs/aws-open-data-geo" -> "giswqs/aws-open-data-stac"
"giswqs/aws-open-data-geo" -> "giswqs/maxar-open-data"
"varoudis/depthmapX" -> "SpaceGroupUCL/depthmapX"
"varoudis/depthmapX" -> "SpaceGroupUCL/qgisSpaceSyntaxToolkit"
"Turbo87/utm" -> "pyproj4/pyproj"
"Turbo87/utm" -> "jswhit/pyproj" ["e"=1]
"CosmiQ/apls" -> "mj129/CoANet"
"CosmiQ/apls" -> "anilbatra2185/road_connectivity"
"CosmiQ/apls" -> "SpaceNetChallenge/RoadDetector"
"gee-community/ee-jupyter-contrib" -> "tylere/ee-jupyter-examples"
"gee-community/ee-jupyter-contrib" -> "mccarthyryanc/folium_gee"
"tylere/ee-jupyter-examples" -> "gee-community/ee-jupyter-contrib"
"tylere/ee-jupyter-examples" -> "jldowns/google_earth_engine_notebook"
"tylere/ee-jupyter-examples" -> "tylere/AGU2017"
"Agri-Hub/Callisto-Dataset-Collection" -> "gyrrei/ReforesTree"
"Agri-Hub/Callisto-Dataset-Collection" -> "Orion-AI-Lab/S4A"
"SpaceGroupUCL/qgisSpaceSyntaxToolkit" -> "SpaceGroupUCL/depthmapX"
"SpaceGroupUCL/qgisSpaceSyntaxToolkit" -> "varoudis/depthmapX"
"holoviz/param" -> "pyviz/pyviz.org"
"senbox-org/snap-engine" -> "senbox-org/snap-desktop"
"senbox-org/snap-engine" -> "senbox-org/s1tbx"
"senbox-org/snap-engine" -> "bcdev/beam"
"senbox-org/snap-engine" -> "senbox-org/s2tbx"
"senbox-org/snap-engine" -> "senbox-org/snap-examples"
"Molly6/segmentation_shengteng2021" -> "businiaoo/PRCV2021-Change-Detection-Contest-2nd-place-Solution"
"Molly6/segmentation_shengteng2021" -> "CarnoZhao/RSIPAC_Track2"
"toshi-k/kaggle-satellite-imagery-feature-detection" -> "DeepVoltaire/Dstl-Satellite-Imagery-Feature-Detection"
"toshi-k/kaggle-satellite-imagery-feature-detection" -> "lopuhin/kaggle-dstl"
"developmentseed/skynet-train" -> "developmentseed/skynet-data"
"developmentseed/skynet-train" -> "developmentseed/spacenet-data"
"developmentseed/skynet-train" -> "developmentseed/label-maker"
"philippgaertner/awesome-earth-engine-apps" -> "jdbcode/ee-rgb-timeseries"
"developmentseed/geolambda" -> "lambgeo/docker-lambda"
"developmentseed/geolambda" -> "developmentseed/titiler"
"developmentseed/geolambda" -> "radiantearth/stac-browser"
"developmentseed/geolambda" -> "sat-utils/sat-api"
"developmentseed/geolambda" -> "developmentseed/rio-viz"
"developmentseed/geolambda" -> "RemotePixel/remotepixel-api"
"developmentseed/geolambda" -> "mapbox/landsat-tiler"
"developmentseed/geolambda" -> "cogeotiff/rio-tiler"
"developmentseed/geolambda" -> "radiantearth/stac-spec"
"developmentseed/geolambda" -> "gjoseph92/stackstac"
"developmentseed/geolambda" -> "cogeotiff/rio-cogeo"
"developmentseed/geolambda" -> "RemotePixel/amazonlinux-gdal"
"developmentseed/geolambda" -> "vincentsarago/lambda-tiler"
"developmentseed/geolambda" -> "developmentseed/rio-stac"
"developmentseed/geolambda" -> "developmentseed/cogeo-mosaic"
"SpaceNetChallenge/SpaceNet_Off_Nadir_Solutions" -> "CosmiQ/solaris_tutorials"
"samapriya/geeup" -> "samapriya/gee_asset_manager_addon"
"samapriya/geeup" -> "tracek/gee_asset_manager"
"mszell/geospatialdatascience" -> "DahnJ/Awesome-DEM"
"mszell/geospatialdatascience" -> "benchmark-urbanism/cityseer-api"
"mszell/geospatialdatascience" -> "Nowosad/OGH_summer_school_2022"
"mszell/geospatialdatascience" -> "microsoft/GlobalMLBuildingFootprints"
"mszell/geospatialdatascience" -> "scikit-mobility/scikit-mobility"
"mszell/geospatialdatascience" -> "r5py/r5py" ["e"=1]
"mszell/geospatialdatascience" -> "andrea-ballatore/open-geo-data-education"
"mszell/geospatialdatascience" -> "greppo-io/greppo"
"mszell/geospatialdatascience" -> "mszell/bikenwgrowth"
"mszell/geospatialdatascience" -> "geocompr/py"
"ternaus/kaggle_dstl_submission" -> "DeepVoltaire/Dstl-Satellite-Imagery-Feature-Detection"
"ternaus/kaggle_dstl_submission" -> "lopuhin/kaggle-dstl"
"ternaus/kaggle_dstl_submission" -> "Vooban/Smoothly-Blend-Image-Patches"
"ternaus/kaggle_dstl_submission" -> "rogerxujiang/dstl_unet"
"ternaus/kaggle_dstl_submission" -> "ternaus/TernausNetV2" ["e"=1]
"ternaus/kaggle_dstl_submission" -> "jiangxu87/dstl_unet"
"microsoft/AIforEarthDataSets" -> "microsoft/PlanetaryComputerExamples"
"microsoft/AIforEarthDataSets" -> "stac-utils/pystac"
"microsoft/AIforEarthDataSets" -> "microsoft/landcover"
"microsoft/AIforEarthDataSets" -> "stac-utils/pystac-client"
"microsoft/AIforEarthDataSets" -> "microsoft/PlanetaryComputer"
"microsoft/AIforEarthDataSets" -> "bopen/xarray-sentinel"
"GeoscienceAustralia/dea-notebooks" -> "opendatacube/datacube-core"
"GeoscienceAustralia/dea-notebooks" -> "makepath/xarray-spatial"
"GeoscienceAustralia/dea-notebooks" -> "digitalearthafrica/deafrica-sandbox-notebooks"
"GeoscienceAustralia/dea-notebooks" -> "acgeospatial/awesome-earthobservation-code"
"GeoscienceAustralia/dea-notebooks" -> "sentinel-hub/eo-learn"
"GeoscienceAustralia/dea-notebooks" -> "earthlab/earthpy"
"GeoscienceAustralia/dea-notebooks" -> "geopandas/dask-geopandas"
"GeoscienceAustralia/dea-notebooks" -> "corteva/rioxarray"
"GeoscienceAustralia/dea-notebooks" -> "corteva/geocube"
"GeoscienceAustralia/dea-notebooks" -> "pytroll/pyresample" ["e"=1]
"GeoscienceAustralia/dea-notebooks" -> "cogeotiff/rio-cogeo"
"GeoscienceAustralia/dea-notebooks" -> "gjoseph92/stackstac"
"GeoscienceAustralia/dea-notebooks" -> "microsoft/PlanetaryComputerExamples"
"GeoscienceAustralia/dea-notebooks" -> "gee-community/gee_tools"
"GeoscienceAustralia/dea-notebooks" -> "dymaxionlabs/dask-rasterio" ["e"=1]
"EL-BID/Building-Detection" -> "YuansongFeng/satellite_building_detection.pytorch"
"geohackweek/GoogleEarthEngine" -> "renelikestacos/Google-Earth-Engine-JavaScript-Examples"
"geopython/pywps" -> "geopython/pycsw"
"geopython/pywps" -> "geopython/OWSLib"
"mdelgadoblasco/snap2stamps" -> "dbekaert/StaMPS"
"mdelgadoblasco/snap2stamps" -> "thho/StaMPS_Visualizer"
"mdelgadoblasco/snap2stamps" -> "TUDelftGeodesy/Doris"
"DataSystemsLab/GeoTorch" -> "davemlz/cubo"
"DataSystemsLab/GeoTorch" -> "microsoft/torchgeo"
"DataSystemsLab/GeoTorch" -> "samapriya/awesome-gee-community-datasets"
"chrieke/InstanceSegmentation_Sentinel2" -> "jensleitloff/CNN-Sentinel"
"chrieke/InstanceSegmentation_Sentinel2" -> "bhavesh907/Crop-Classification"
"chrieke/InstanceSegmentation_Sentinel2" -> "sentinel-hub/sentinel2-cloud-detector"
"chrieke/InstanceSegmentation_Sentinel2" -> "nshaud/DeepNetsForEO"
"chrieke/InstanceSegmentation_Sentinel2" -> "lanha/DSen2"
"chrieke/InstanceSegmentation_Sentinel2" -> "sentinel-hub/eo-learn"
"chrieke/InstanceSegmentation_Sentinel2" -> "VSainteuf/pytorch-psetae"
"chrieke/InstanceSegmentation_Sentinel2" -> "sentinelsat/sentinelsat"
"chrieke/InstanceSegmentation_Sentinel2" -> "feevos/resuneta"
"chrieke/InstanceSegmentation_Sentinel2" -> "sacridini/GEET"
"chrieke/InstanceSegmentation_Sentinel2" -> "sentinel-hub/field-delineation"
"chrieke/InstanceSegmentation_Sentinel2" -> "simongrest/farm-pin-crop-detection-challenge"
"chrieke/InstanceSegmentation_Sentinel2" -> "sshuair/torchsat"
"chrieke/InstanceSegmentation_Sentinel2" -> "manideep2510/eye-in-the-sky"
"chrieke/InstanceSegmentation_Sentinel2" -> "datasciencecampus/laika"
"rodekruis/automated-building-detection" -> "EL-BID/Building-Detection"
"mortcanty/earthengine" -> "jldowns/google_earth_engine_notebook"
"mortcanty/earthengine" -> "mortcanty/CRC4Docker"
"mortcanty/earthengine" -> "gee-community/ee-tensorflow-notebooks"
"mortcanty/earthengine" -> "eMapR/LT-GEE"
"mortcanty/earthengine" -> "sacridini/GEET"
"schmitt-muc/SEN12MS" -> "lukasliebel/dfc2020_baseline"
"yulisun/IRG-McS" -> "yulisun/SCASC"
"jgomezdans/prosail" -> "robintw/PyProSAIL"
"jgomezdans/prosail" -> "Christiaanvandertol/SCOPE"
"jgomezdans/prosail" -> "hectornieto/pyPro4Sail"
"treigerm/WaterNet" -> "developmentseed/skynet-train"
"zizhaozhang/unet-tensorflow-keras" -> "pietz/unet-keras"
"zizhaozhang/unet-tensorflow-keras" -> "ankurhanda/tf-unet"
"zizhaozhang/unet-tensorflow-keras" -> "Kaido0/Brain-Tissue-Segment-Keras"
"zizhaozhang/unet-tensorflow-keras" -> "ZFTurbo/ZF_UNET_224_Pretrained_Model" ["e"=1]
"developmentseed/label-maker" -> "developmentseed/skynet-train"
"developmentseed/label-maker" -> "developmentseed/skynet-data"
"developmentseed/label-maker" -> "developmentseed/landsat-util"
"developmentseed/label-maker" -> "azavea/raster-vision"
"developmentseed/label-maker" -> "mapbox/robosat"
"developmentseed/label-maker" -> "Geoyi/pixel-decoder"
"developmentseed/label-maker" -> "sentinelsat/sentinelsat"
"developmentseed/label-maker" -> "deepVector/geospatial-machine-learning"
"developmentseed/label-maker" -> "nshaud/DeepNetsForEO"
"developmentseed/label-maker" -> "sshuair/torchsat"
"developmentseed/label-maker" -> "Fernerkundung/awesome-sentinel"
"developmentseed/label-maker" -> "CosmiQ/solaris"
"developmentseed/label-maker" -> "sentinel-hub/eo-learn"
"developmentseed/label-maker" -> "azavea/raster-vision-examples"
"developmentseed/label-maker" -> "developmentseed/geolambda"
"mobigroup/gmtsar" -> "bopen/xarray-sentinel"
"mobigroup/gmtsar" -> "gmtsar/gmtsar"
"mobigroup/gmtsar" -> "bopen/sarsen"
"songtaohe/Sat2Graph" -> "TonyXuQAQ/RNGDetPlusPlus"
"songtaohe/Sat2Graph" -> "tansor/VecRoad"
"songtaohe/Sat2Graph" -> "anilbatra2185/road_connectivity"
"songtaohe/Sat2Graph" -> "mj129/CoANet"
"songtaohe/Sat2Graph" -> "mitroadmaps/roadtracer"
"songtaohe/Sat2Graph" -> "wgcban/SPIN_RoadMapper"
"songtaohe/Sat2Graph" -> "TonyXuQAQ/Topo-boundary"
"songtaohe/Sat2Graph" -> "ErenTuring/SIINet"
"songtaohe/Sat2Graph" -> "astro-ck/Road-Extraction"
"songtaohe/Sat2Graph" -> "zorzi-s/PolyWorldPretrainedNetwork"
"songtaohe/Sat2Graph" -> "antran89/road_visualizer"
"sidewalklabs/doppelganger" -> "UDST/synthpop"
"chrieke/prettymapp" -> "giswqs/streamlit-geospatial"
"pascal-schetelat/Slope" -> "concutere/sg"
"pysal/mgwr" -> "Ziqi-Li/FastGWR"
"pysal/mgwr" -> "spatialucr/geosnap"
"pysal/mgwr" -> "pysal/spreg"
"pysal/mgwr" -> "pysal/segregation"
"pysal/mgwr" -> "pysal/tobler"
"pysal/mgwr" -> "pysal/giddy"
"pysal/mgwr" -> "pysal/spopt"
"pysal/mgwr" -> "thengl/GeoMLA" ["e"=1]
"pysal/mgwr" -> "martinfleis/momepy"
"pysal/mgwr" -> "pysal/pysal"
"pysal/mgwr" -> "pysal/splot"
"pysal/mgwr" -> "scikit-mobility/scikit-mobility"
"worldstrat/worldstrat" -> "microsoft/satellite-imagery-labeling-tool"
"gee-community/awesome-google-earth-engine" -> "gee-community/example-scripts"
"gee-community/awesome-google-earth-engine" -> "jldowns/google_earth_engine_notebook"
"bopen/elevation" -> "bopen/xarray-sentinel"
"bopen/elevation" -> "bopen/sarsen"
"bopen/elevation" -> "tkrajina/srtm.py" ["e"=1]
"SpaceNetChallenge/BuildingDetectors" -> "SpaceNetChallenge/BuildingDetectors_Round2"
"SpaceNetChallenge/BuildingDetectors" -> "SpaceNetChallenge/utilities"
"SpaceNetChallenge/BuildingDetectors" -> "SpaceNetChallenge/RoadDetector"
"bhavesh907/Crop-Classification" -> "meet-sapu/Crop-Yield-Prediction-Using-Satellite-Imagery"
"datasciencecampus/laika" -> "osin-vladimir/kaggle-satellite-imagery-feature-detection"
"simongrest/farm-pin-crop-detection-challenge" -> "sentinel-hub/eo-flow"
"giswqs/geospatial" -> "giswqs/lidar"
"giswqs/geospatial" -> "giswqs/geospatial-ml"
"geo-python/site" -> "Automating-GIS-processes/site"
"marcusyoung/otp-tutorial" -> "marcusyoung/otpr"
"sacridini/GEET" -> "eMapR/LT-GEE"
"sacridini/GEET" -> "Fernerkundung/EarthEngine_scripts"
"sacridini/GEET" -> "gee-community/gee_tools"
"sacridini/GEET" -> "fitoprincipe/geetools-code-editor"
"sacridini/GEET" -> "SERVIR/water-quality-gee"
"sacridini/GEET" -> "renelikestacos/Google-Earth-Engine-Python-Examples"
"sacridini/GEET" -> "mortcanty/earthengine"
"sacridini/GEET" -> "zecojls/tagee"
"sacridini/GEET" -> "csaybar/EEwPython"
"holoviz/geoviews" -> "holoviz/spatialpandas"
"holoviz/geoviews" -> "holoviz/hvplot"
"holoviz/geoviews" -> "corteva/rioxarray"
"holoviz/geoviews" -> "pytroll/pyresample" ["e"=1]
"holoviz/geoviews" -> "holoviz/param"
"holoviz/geoviews" -> "geopandas/dask-geopandas"
"holoviz/geoviews" -> "davidbrochart/xarray_leaflet"
"holoviz/geoviews" -> "corteva/geocube"
"holoviz/geoviews" -> "holoviz/datashader"
"holoviz/geoviews" -> "makepath/xarray-spatial"
"holoviz/geoviews" -> "earthlab/earthpy"
"holoviz/geoviews" -> "holoviz/colorcet"
"holoviz/geoviews" -> "holoviz/holoviews"
"mitmul/ssai-cnn" -> "developmentseed/skynet-data"
"mitmul/ssai-cnn" -> "trailbehind/DeepOSM"
"mitmul/ssai-cnn" -> "mitmul/ssai"
"mitmul/ssai-cnn" -> "BradNeuberg/cloudless"
"mitmul/ssai-cnn" -> "nshaud/DeepNetsForEO"
"mitmul/ssai-cnn" -> "developmentseed/skynet-train"
"mitmul/ssai-cnn" -> "treigerm/WaterNet"
"mitmul/ssai-cnn" -> "mahmoudmohsen213/airs"
"mitmul/ssai-cnn" -> "jremillard/images-to-osm"
"mitmul/ssai-cnn" -> "geometalab/OSMDeepOD"
"mitmul/ssai-cnn" -> "larsroemheld/OSM-HOT-ConvNet"
"mitmul/ssai-cnn" -> "SpaceNetChallenge/utilities"
"mitmul/ssai-cnn" -> "mathildor/TF-SegNet" ["e"=1]
"mitmul/ssai-cnn" -> "aurotripathy/ssd-spacenet"
"Open-ET/openet-ssebop-beta" -> "WSWUP/pymetric"
"WSWUP/pymetric" -> "Open-ET/openet-ssebop-beta"
"martinfleis/momepy" -> "spatialucr/geosnap"
"martinfleis/momepy" -> "UDST/pandana"
"martinfleis/momepy" -> "pysal/esda"
"martinfleis/momepy" -> "pysal/segregation"
"martinfleis/momepy" -> "kuanb/peartree" ["e"=1]
"martinfleis/momepy" -> "HTenkanen/pyrosm"
"martinfleis/momepy" -> "pygeos/pygeos"
"martinfleis/momepy" -> "pysal/tobler"
"martinfleis/momepy" -> "pysal/spaghetti"
"martinfleis/momepy" -> "pysal/spopt"
"martinfleis/momepy" -> "pysal/libpysal"
"martinfleis/momepy" -> "UDST/urbanaccess"
"martinfleis/momepy" -> "jsignell/dask-geopandas"
"martinfleis/momepy" -> "pysal/mapclassify"
"martinfleis/momepy" -> "scikit-mobility/scikit-mobility"
"mapnificent/mapnificent" -> "mapnificent/mapnificent_cities"
"mapnificent/mapnificent" -> "UDST/urbanaccess"
"mapnificent/mapnificent" -> "CxAalto/gtfspy" ["e"=1]
"mapnificent/mapnificent" -> "CommuteStream/tflgtfs"
"advaitsave/Multiclass-Semantic-Segmentation-CamVid" -> "srihari-humbarwadi/cityscapes-segmentation-with-Unet"
"GDSL-UL/Teaching_Links" -> "andrea-ballatore/open-geo-data-education"
"lanha/DSen2" -> "up42/s2-superresolution"
"lanha/DSen2" -> "remicres/sr4rs"
"lanha/DSen2" -> "sentinel-hub/sentinel2-cloud-detector"
"lanha/DSen2" -> "jensleitloff/CNN-Sentinel"
"sat-utils/sat-download" -> "sat-utils/sat-process"
"sat-utils/sat-search" -> "sat-utils/sat-stac"
"sat-utils/sat-search" -> "geospatial-jeff/aiocogeo"
"sat-utils/sat-search" -> "sat-utils/sat-api"
"sat-utils/sat-search" -> "cogeotiff/rio-tiler"
"sat-utils/sat-search" -> "gjoseph92/stackstac"
"sat-utils/sat-search" -> "stac-utils/stactools"
"sat-utils/sat-search" -> "developmentseed/rio-stac"
"sat-utils/sat-search" -> "stac-utils/pystac-client"
"sat-utils/sat-search" -> "radiantearth/stac-spec"
"PatrickTUM/multimodalCD_ISPRS21" -> "Lihy256/MSCDUnet"
"Seyed-Ali-Ahmadi/Awesome_Satellite_Benchmark_Datasets" -> "gyrrei/ReforesTree"
"davemlz/awesome-spectral-indices" -> "davemlz/eemont"
"davemlz/awesome-spectral-indices" -> "davemlz/spyndex"
"davemlz/awesome-spectral-indices" -> "davemlz/spectral"
"davemlz/awesome-spectral-indices" -> "bopen/sarsen"
"davemlz/awesome-spectral-indices" -> "samapriya/awesome-gee-community-datasets"
"davemlz/awesome-spectral-indices" -> "giswqs/Awesome-GEE"
"davemlz/awesome-spectral-indices" -> "DahnJ/Awesome-DEM"
"davemlz/awesome-spectral-indices" -> "acgeospatial/awesome-earthobservation-code"
"giswqs/geospatial-ml" -> "giswqs/GEE-Courses"
"giswqs/lidar" -> "giswqs/whitebox-python"
"giswqs/lidar" -> "corteva/rioxarray"
"giswqs/lidar" -> "giswqs/geospatial"
"zorzi-s/projectRegularization" -> "niecongchong/RS-building-regularization"
"ajwdewit/pcse" -> "ajwdewit/pcse_notebooks"
"ajwdewit/pcse" -> "ajwdewit/WOFOST_crop_parameters"
"ajwdewit/pcse" -> "ajwdewit/WOFOST"
"ajwdewit/pcse" -> "jgomezdans/prosail"
"ajwdewit/pcse" -> "APSIMInitiative/ApsimX"
"ajwdewit/pcse" -> "DSSAT/dssat-csm-os"
"remicres/otbtf" -> "remicres/sr4rs"
"remicres/otbtf" -> "CNES/decloud"
"samapriya/gee_asset_manager_addon" -> "samapriya/geeup"
"TonyXuQAQ/Topo-boundary" -> "songtaohe/Sat2Graph"
"geopandas/geo-arrow-spec" -> "opengeospatial/geoparquet"
"geopandas/geo-arrow-spec" -> "geopolars/geopolars"
"holoviz/spatialpandas" -> "geopandas/dask-geopandas"
"holoviz/spatialpandas" -> "holoviz/geoviews"
"holoviz/spatialpandas" -> "makepath/xarray-spatial"
"holoviz/spatialpandas" -> "pygeos/pygeos"
"holoviz/spatialpandas" -> "jsignell/dask-geopandas"
"holoviz/spatialpandas" -> "corteva/rioxarray"
"holoviz/spatialpandas" -> "corteva/geocube"
"holoviz/spatialpandas" -> "gjoseph92/stackstac"
"holoviz/spatialpandas" -> "pysal/spaghetti"
"holoviz/spatialpandas" -> "holoviz/hvplot"
"holoviz/spatialpandas" -> "anitagraser/movingpandas"
"holoviz/spatialpandas" -> "opengeospatial/geoparquet"
"holoviz/spatialpandas" -> "HTenkanen/pyrosm"
"holoviz/spatialpandas" -> "pangeo-data/pangeo-docker-images"
"holoviz/spatialpandas" -> "banesullivan/localtileserver"
"pysal/spaghetti" -> "pysal/esda"
"pysal/spaghetti" -> "pysal/libpysal"
"pysal/spaghetti" -> "spatialucr/geosnap"
"pysal/spaghetti" -> "pysal/spopt"
"pysal/spaghetti" -> "pysal/segregation"
"pysal/spaghetti" -> "pysal/splot"
"pysal/spaghetti" -> "martinfleis/momepy"
"pysal/spaghetti" -> "holoviz/spatialpandas"
"pysal/spaghetti" -> "andrea-ballatore/open-geo-data-education"
"pysal/spaghetti" -> "pysal/momepy"
"pysal/spaghetti" -> "geopandas/dask-geopandas"
"pysal/spaghetti" -> "kuanb/peartree" ["e"=1]
"spatialucr/geosnap" -> "pysal/tobler"
"spatialucr/geosnap" -> "pysal/segregation"
"spatialucr/geosnap" -> "UDST/urbanaccess"
"spatialucr/geosnap" -> "martinfleis/momepy"
"spatialucr/geosnap" -> "ljwolf/cenpy" ["e"=1]
"spatialucr/geosnap" -> "UDST/pandana"
"spatialucr/geosnap" -> "pysal/spaghetti"
"spatialucr/geosnap" -> "pysal/spopt"
"spatialucr/geosnap" -> "cenpy-devs/cenpy" ["e"=1]
"CS-SI/eodag" -> "sertit/eoreader"
"CS-SI/eodag" -> "stac-utils/pystac"
"CS-SI/eodag" -> "CS-SI/eodag-sentinelsat"
"CS-SI/eodag" -> "developmentseed/rio-stac"
"CS-SI/eodag" -> "johntruckenbrodt/pyroSAR"
"CS-SI/eodag" -> "gjoseph92/stackstac"
"CS-SI/eodag" -> "bopen/xarray-sentinel"
"CS-SI/eodag" -> "sat-utils/sat-search"
"CS-SI/eodag" -> "developmentseed/titiler"
"CS-SI/eodag" -> "cogeotiff/rio-cogeo"
"CS-SI/eodag" -> "corteva/rioxarray"
"airbusgeo/cogger" -> "stac-utils/pgstac"
"microsoft/CanadianBuildingFootprints" -> "microsoft/Uganda-Tanzania-Building-Footprints"
"SpaceNetChallenge/utilities" -> "SpaceNetChallenge/BuildingDetectors"
"SpaceNetChallenge/utilities" -> "SpaceNetChallenge/BuildingDetectors_Round2"
"SpaceNetChallenge/utilities" -> "CosmiQ/solaris"
"SpaceNetChallenge/utilities" -> "CosmiQ/apls"
"SpaceNetChallenge/utilities" -> "avanetten/spacenet_buildings_exploration"
"SpaceNetChallenge/utilities" -> "SpaceNetChallenge/BuildingDetectorVisualizer"
"SpaceNetChallenge/utilities" -> "developmentseed/skynet-train"
"SpaceNetChallenge/utilities" -> "SpaceNetChallenge/SpaceNet_Off_Nadir_Solutions"
"SpaceNetChallenge/utilities" -> "SpaceNetChallenge/RoadDetector"
"SpaceNetChallenge/utilities" -> "yangsiyu007/SpaceNetExploration"
"pysal/mapclassify" -> "pysal/segregation"
"pysal/mapclassify" -> "pysal/tobler"
"NRCan/geo-deep-learning" -> "azavea/pystac"
"geopandas/dask-geopandas" -> "makepath/xarray-spatial"
"geopandas/dask-geopandas" -> "holoviz/spatialpandas"
"geopandas/dask-geopandas" -> "geopandas/pyogrio"
"geopandas/dask-geopandas" -> "corteva/rioxarray"
"geopandas/dask-geopandas" -> "DahnJ/H3-Pandas" ["e"=1]
"geopandas/dask-geopandas" -> "stac-utils/pystac"
"geopandas/dask-geopandas" -> "stac-utils/stactools"
"geopandas/dask-geopandas" -> "stac-utils/pystac-client"
"geopandas/dask-geopandas" -> "corteva/geocube"
"geopandas/dask-geopandas" -> "opengeospatial/geoparquet"
"geopandas/dask-geopandas" -> "pysal/momepy"
"geopandas/dask-geopandas" -> "pygeos/pygeos"
"geopandas/dask-geopandas" -> "bopen/xarray-sentinel"
"geopandas/dask-geopandas" -> "holoviz/geoviews"
"geopandas/dask-geopandas" -> "geopandas/contextily"
"geopython/OWSLib" -> "geopython/pycsw"
"geopython/OWSLib" -> "geopython/pygeoapi"
"geopython/OWSLib" -> "geopython/pywps"
"geopython/OWSLib" -> "geopython/PyWPS"
"geopython/OWSLib" -> "cogeotiff/rio-cogeo"
"geopython/OWSLib" -> "mapproxy/mapproxy" ["e"=1]
"geopython/OWSLib" -> "geopython/GeoHealthCheck" ["e"=1]
"geopython/OWSLib" -> "radiantearth/stac-spec"
"geopython/OWSLib" -> "ungarj/mapchete"
"geopython/OWSLib" -> "geopython/pygeometa"
"geopython/OWSLib" -> "opengeo/GeoGit" ["e"=1]
"geopython/OWSLib" -> "nvkelso/geo-how-to" ["e"=1]
"geopython/OWSLib" -> "stac-utils/pystac"
"scikit-mobility/DeepLearning4HumanMobility" -> "FIBLAB/MoveSim"
"scikit-mobility/DeepLearning4HumanMobility" -> "scikit-mobility/DeepGravity"
"MarcSkovMadsen/awesome-panel" -> "MarcSkovMadsen/awesome-panel-extensions"
"MarcSkovMadsen/awesome-panel" -> "MarcSkovMadsen/panel-highcharts"
"MarcSkovMadsen/awesome-panel" -> "pyviz/panel" ["e"=1]
"MarcSkovMadsen/awesome-panel" -> "LeonvanKouwen/elvis"
"MarcSkovMadsen/awesome-panel" -> "holoviz/panel"
"MarcSkovMadsen/awesome-panel" -> "jmosbacher/pydantic-panel"
"MarcSkovMadsen/awesome-panel" -> "Hoxbro/panel-multi"
"mattijn/topojson" -> "geopandas/pyogrio"
"microsoft/RoadDetections" -> "giswqs/geospatial-data-catalogs"
"microsoft/RoadDetections" -> "microsoft/GlobalMLBuildingFootprints"
"microsoft/RoadDetections" -> "opengeospatial/geoparquet"
"microsoft/RoadDetections" -> "microsoft/satellite-imagery-labeling-tool"
"microsoft/RoadDetections" -> "felt/tippecanoe" ["e"=1]
"microsoft/RoadDetections" -> "DahnJ/Awesome-DEM"
"microsoft/RoadDetections" -> "mszell/geospatialdatascience"
"microsoft/RoadDetections" -> "gjoseph92/stackstac"
"microsoft/RoadDetections" -> "microsoft/torchgeo"
"microsoft/RoadDetections" -> "radiantearth/stac-browser"
"microsoft/RoadDetections" -> "samapriya/awesome-gee-community-datasets"
"microsoft/RoadDetections" -> "microsoft/PlanetaryComputerExamples"
"microsoft/RoadDetections" -> "davemlz/eemont"
"microsoft/RoadDetections" -> "microsoft/PlanetaryComputer"
"microsoft/RoadDetections" -> "jblindsay/whitebox-tools"
"sustainlab-group/africa_poverty" -> "chrisyeh96/africa_poverty_clean"
"ozak/georasters" -> "perrygeo/python-raster-stats" ["e"=1]
"bopen/sarsen" -> "bopen/xarray-sentinel"
"bopen/sarsen" -> "johntruckenbrodt/pyroSAR"
"bopen/sarsen" -> "sertit/eoreader"
"bopen/sarsen" -> "scottyhq/dinosar"
"bopen/sarsen" -> "insarlab/MintPy"
"bopen/sarsen" -> "ESA-PhiLab/OpenSarToolkit"
"prs021/fmask" -> "USGS-EROS/espa-cloud-masking"
"GeoscienceAustralia/PyRate" -> "pyrocko/kite"
"GeoscienceAustralia/PyRate" -> "dbekaert/TRAIN"
"GeoscienceAustralia/PyRate" -> "yumorishita/LiCSBAS"
"GeoscienceAustralia/PyRate" -> "dbekaert/StaMPS"
"GeoscienceAustralia/PyRate" -> "scottyhq/dinosar"
"GeoscienceAustralia/PyRate" -> "isce-framework/isce2"
"GeoscienceAustralia/PyRate" -> "insarlab/MintPy"
"GeoscienceAustralia/PyRate" -> "hfattahi/PySAR"
"GeoscienceAustralia/PyRate" -> "gmtsar/gmtsar"
"GeoscienceAustralia/PyRate" -> "ymcmrs/PyINT"
"GeoscienceAustralia/PyRate" -> "bakerunavco/pygmtsar"
"GeoscienceAustralia/PyRate" -> "TUDelftGeodesy/Doris"
"GeoscienceAustralia/PyRate" -> "isce-framework/isce3"
"GeoscienceAustralia/PyRate" -> "isce-framework/fringe"
"GeoscienceAustralia/PyRate" -> "insarlab/MiaplPy"
"RaphaelGrandin/ROI_PAC-Sentinel1" -> "bakerunavco/pygmtsar"
"RaphaelGrandin/ROI_PAC-Sentinel1" -> "xitong123/gmtsar2stamps"
"cryotools/osaris" -> "bakerunavco/pygmtsar"
"denkywu/InSAR-Simulation-and-Studies" -> "denkywu/Simulation-of-SAR-Imaging-Algorithm"
"denkywu/InSAR-Simulation-and-Studies" -> "denkywu/PolSAR-Calibration"
"insarlab/MiaplPy" -> "isce-framework/fringe"
"isce-framework/fringe" -> "insarlab/MiaplPy"
"isce-framework/fringe" -> "dbekaert/RAiDER"
"isce-framework/fringe" -> "isce-framework/isce3"
"scottyhq/dinosar" -> "dbekaert/RAiDER"
"ymcmrs/PyINT" -> "simondaout/PyGdalSAR"
"mortcanty/CRC4Docker" -> "mortcanty/CRCPython"
"mortcanty/CRC4Docker" -> "mortcanty/earthengine"
"gjoseph92/geogif" -> "martinfleis/xvec"
"gjoseph92/stackstac" -> "stac-utils/pystac-client"
"gjoseph92/stackstac" -> "gjoseph92/geogif"
"gjoseph92/stackstac" -> "opendatacube/odc-stac"
"gjoseph92/stackstac" -> "stac-utils/pystac"
"gjoseph92/stackstac" -> "developmentseed/rio-stac"
"gjoseph92/stackstac" -> "developmentseed/rio-viz"
"gjoseph92/stackstac" -> "stac-utils/stactools"
"gjoseph92/stackstac" -> "microsoft/PlanetaryComputer"
"gjoseph92/stackstac" -> "pangeo-data/cog-best-practices"
"gjoseph92/stackstac" -> "pangeo-data/pangeo-docker-images"
"developmentseed/timvt" -> "developmentseed/tifeatures"
"developmentseed/timvt" -> "developmentseed/morecantile"
"developmentseed/timvt" -> "developmentseed/titiler"
"saeedkhaki92/CNN-RNN-Yield-Prediction" -> "saeedkhaki92/Yield-Prediction-DNN"
"saeedkhaki92/CNN-RNN-Yield-Prediction" -> "cleipski/CropPredict"
"davidbrochart/xarray_leaflet" -> "davidbrochart/xtrude"
"davidbrochart/xarray_leaflet" -> "geopandas/xyzservices"
"developmentseed/rio-viz" -> "cogeotiff/rio-cogeo"
"developmentseed/rio-viz" -> "geospatial-jeff/aiocogeo"
"developmentseed/rio-viz" -> "gjoseph92/stackstac"
"developmentseed/rio-viz" -> "developmentseed/morecantile"
"developmentseed/rio-viz" -> "developmentseed/cogeo-mosaic"
"developmentseed/rio-viz" -> "developmentseed/titiler"
"developmentseed/rio-viz" -> "cogeotiff/rio-tiler"
"microsoft/satellite-imagery-labeling-tool" -> "worldstrat/worldstrat"
"SpaceNetChallenge/BuildingDetectors_Round2" -> "SpaceNetChallenge/BuildingDetectors"
"SpaceNetChallenge/BuildingDetectors_Round2" -> "SpaceNetChallenge/utilities"
"SpaceNetChallenge/BuildingDetectors_Round2" -> "SpaceNetChallenge/RoadDetector"
"SpaceNetChallenge/BuildingDetectors_Round2" -> "motokimura/spacenet_building_detection"
"SpaceNetChallenge/BuildingDetectors_Round2" -> "yangsiyu007/SpaceNetExploration"
"SpaceNetChallenge/BuildingDetectors_Round2" -> "crowdAI/crowdai-mapping-challenge-mask-rcnn"
"SpaceNetChallenge/BuildingDetectors_Round2" -> "SpaceNetChallenge/BuildingDetectorVisualizer"
"opengeospatial/ogcapi-features" -> "opengeospatial/ogcapi-records"
"opengeospatial/ogcapi-features" -> "geopython/pygeoapi"
"samsammurphy/6S_emulator" -> "robintw/Py6S"
"stac-utils/pgstac" -> "stac-utils/titiler-pgstac"
"stac-utils/pgstac" -> "developmentseed/rio-stac"
"tjukanovt/qgis_styles" -> "GispoCoding/GlobeBuilder"
"DSSAT/dssat-csm-os" -> "XiaogangHe/pyDSSAT"
"DSSAT/dssat-csm-os" -> "ajwdewit/pcse"
"APSIMInitiative/ApsimX" -> "APSIMInitiative/APSIMClassic"
"APSIMInitiative/ApsimX" -> "femiguez/apsimx"
"APSIMInitiative/ApsimX" -> "ajwdewit/pcse"
"APSIMInitiative/ApsimX" -> "XiaogangHe/pyDSSAT"
"APSIMInitiative/ApsimX" -> "RDCEP/psims"
"wangle53/TransCD" -> "wangle53/CSA-CDGAN"
"Luffy03/DCA" -> "Luffy03/DBFNet"
"isce-framework/isce3" -> "isce-framework/fringe"
"isce-framework/isce3" -> "insarlab/MiaplPy"
"isce-framework/isce3" -> "isce-framework/isce2"
"geopandas/pyogrio" -> "geopandas/dask-geopandas"
"geopandas/pyogrio" -> "mattijn/topojson"
"opendatacube/odc-stac" -> "opendatacube/odc-geo"
"opengeospatial/WFS_FES" -> "opengeospatial/oapi_common"
"opengeospatial/WFS_FES" -> "opengeospatial/OGC-Technology-Trends"
"pysal/libpysal" -> "pysal/esda"
"pysal/libpysal" -> "pysal/spaghetti"
"pysal/libpysal" -> "pysal/mapclassify"
"pysal/libpysal" -> "pysal/spopt"
"pysal/libpysal" -> "pysal/splot"
"pysal/libpysal" -> "pysal/segregation"
"pysal/libpysal" -> "martinfleis/momepy"
"pysal/libpysal" -> "pysal/giddy"
"pysal/segregation" -> "pysal/giddy"
"pysal/segregation" -> "pysal/splot"
"pysal/segregation" -> "pysal/mapclassify"
"pysal/segregation" -> "spatialucr/geosnap"
"pysal/segregation" -> "pysal/tobler"
"pysal/segregation" -> "pysal/inequality"
"ajwdewit/pcse_notebooks" -> "ajwdewit/WOFOST_crop_parameters"
"ajwdewit/pcse_notebooks" -> "ajwdewit/pcse"
"microsoft/Uganda-Tanzania-Building-Footprints" -> "microsoft/KenyaNigeriaBuildingFootprints"
"davemlz/spectral" -> "davemlz/awesome-ee-spectral-indices"
"holoviz/colorcet" -> "holoviz/geoviews"
"holoviz/colorcet" -> "holoviz/param"
"pysal/scipy2019-intermediate-gds" -> "pytroll/tutorial-satpy-half-day"
"niecongchong/RS-building-regularization" -> "zorzi-s/projectRegularization"
"buptchan/scene-classification" -> "chenyuntc/scene-baseline"
"buptchan/scene-classification" -> "yya007/SceneClassification"
"buptchan/scene-classification" -> "yongyehuang/ocean-of-knowledge"
"ngageoint/six-library" -> "ngageoint/sarpy"
"Andy1621/seg-for-fun" -> "whut2962575697/image_seg"
"OpenTopography/RiverREM" -> "klarrieu/RiverREM"
"MarcSkovMadsen/panel-highcharts" -> "MarcSkovMadsen/awesome-panel-extensions"
"MarcSkovMadsen/panel-highcharts" -> "MarcSkovMadsen/awesome-panel"
"rmkemker/EarthMapper" -> "susurrant/rs-img-classification"
"descarteslabs/descarteslabs-python" -> "stac-utils/pystac-client"
"developmentseed/labs-gpt-stac" -> "stac-extensions/classification"
"developmentseed/rio-stac" -> "stac-utils/titiler-pgstac"
"pangeo-data/pangeo-docker-images" -> "microsoft/planetary-computer-containers"
"sat-utils/sat-stac" -> "developmentseed/rio-stac"
"stac-utils/pystac-client" -> "stac-utils/pystac"
"stac-utils/pystac-client" -> "stac-utils/stactools"
"stac-utils/pystac-client" -> "gjoseph92/stackstac"
"stac-utils/pystac-client" -> "microsoft/PlanetaryComputer"
"stac-utils/pystac-client" -> "intake/intake-stac"
"chrisleaman/awesome-coastal" -> "georgebv/coastlib"
"chrisleaman/awesome-coastal" -> "chrisleaman/py-wave-runup"
"chrisleaman/awesome-coastal" -> "kvos/CoastSat.slope"
"chrisleaman/awesome-coastal" -> "conlin-matt/SurfRCaT"
"ibamacsr/sentinelsat" -> "umwilm/SEN2COR"
"ibamacsr/sentinelsat" -> "fpl/scihub"
"holoviz/lumen" -> "LeonvanKouwen/elvis"
"WangZhenqing-RS/2021rsipac_changeDetection_TOP4" -> "businiaoo/PRCV2021-Change-Detection-Contest-2nd-place-Solution"
"WangZhenqing-RS/2021rsipac_changeDetection_TOP4" -> "78666621/2021rsipac_changeDetection_TOP5"
"AnnaXWang/deep-transfer-learning-crop-prediction" -> "brad-ross/crop-yield-prediction-project"
"DinhHoTongMinh/TomoSAR" -> "insarlab/MiaplPy"
"DinhHoTongMinh/TomoSAR" -> "scottyhq/dinosar"
"saeedkhaki92/Yield-Prediction-DNN" -> "saeedkhaki92/CNN-RNN-Yield-Prediction"
"stac-utils/titiler-pgstac" -> "developmentseed/rio-stac"
"stac-utils/stactools" -> "stac-utils/stac-pydantic"
"stac-utils/stactools" -> "stac-utils/pystac-client"
"stac-utils/stactools" -> "darrenwiens/stac-nb"
"stac-utils/stactools" -> "developmentseed/rio-stac"
"carpentries-incubator/geospatial-python" -> "opendatacube/odc-stac"
"edzer/sp" -> "edzer/gstat"
"edzer/sp" -> "yihui/mime" ["e"=1]
"fitoprincipe/geebap" -> "samsammurphy/ee-atmcorr-timeseries"
"samsammurphy/ee-atmcorr-timeseries" -> "samsammurphy/gee-atmcorr-S2"
"developmentseed/cogeo-mosaic" -> "developmentseed/tilebench"
"developmentseed/cogeo-mosaic" -> "cogeotiff/rio-tiler-mosaic"
"Luffy03/CISC-R" -> "Luffy03/DBFNet"
"VSainteuf/pastis-benchmark" -> "VSainteuf/utae-paps"
"VSainteuf/pastis-benchmark" -> "michaeltrs/DeepSatModels"
"VSainteuf/pastis-benchmark" -> "dl4sits/BreizhCrops"
"VSainteuf/pastis-benchmark" -> "Orion-AI-Lab/S4A"
"Jhsmit/PyHDX" -> "jmosbacher/pydantic-panel"
"ajwdewit/WOFOST_crop_parameters" -> "ajwdewit/pcse_notebooks"
"geopython/PyWPS" -> "jachym/pywps-4"
"USGS-EROS/espa-cloud-masking" -> "USGS-EROS/espa-surface-reflectance"
"USGS-EROS/espa-cloud-masking" -> "USGS-EROS/espa-land-surface-temperature"
"dedetmix/gmt5sar2stamps_sbas" -> "xitong123/gmtsar2stamps"
"liuxinyu123/Matlab" -> "nnaka/sar"
"liuxinyu123/Matlab" -> "joeyos/SAR-imaging"
"nnaka/sar" -> "liuxinyu123/Matlab"
"DIUx-xView/xview2-scoring" -> "DIUx-xView/xview2-baseline"
"mapbox/landsat-tiler" -> "mapbox/rio-tiler"
"mapbox/landsat-tiler" -> "RemotePixel/remotepixel-tiler"
"mapbox/landsat-tiler" -> "sat-utils/sat-api"
"mapbox/landsat-tiler" -> "mapbox/sentinel-tiler"
"mapbox/landsat-tiler" -> "RemotePixel/remotepixel-api"
"jmather625/predicting-poverty-replication" -> "nealjean/predicting-poverty"
"sat-utils/sat-process" -> "sat-utils/sat-download"
"mapbox/sentinel-tiler" -> "mapbox/rio-tiler"
"mapbox/sentinel-tiler" -> "RemotePixel/viewer.remotepixel.ca"
"ceholden/yatsm" -> "ceholden/TSTools"
"USGS-EROS/espa-surface-reflectance" -> "USGS-EROS/espa-cloud-masking"
"USGS-EROS/espa-surface-reflectance" -> "USGS-EROS/espa-product-formatter"
"mapbox/rio-tiler" -> "mapbox/landsat-tiler"
"mapbox/rio-tiler" -> "mapbox/sentinel-tiler"
"gipit/gippy" -> "gipit/gips"
"senbox-org/s2tbx" -> "senbox-org/s3tbx"
"senbox-org/s2tbx" -> "senbox-org/s1tbx"
"geoblacklight/geoblacklight" -> "OSGeo/Cat-Interop"
"geoblacklight/geoblacklight" -> "OpenGeoMetadata/metadatarepository"
"geoblacklight/geoblacklight" -> "geoblacklight/geoblacklight-schema"
"developmentseed/geojson-pydantic" -> "developmentseed/morecantile"
"stac-utils/stac-fastapi" -> "stac-utils/pystac"
"stac-utils/stac-fastapi" -> "stac-utils/pgstac"
"stac-utils/stac-fastapi" -> "stac-utils/stactools"
"stac-utils/stac-fastapi" -> "stac-utils/titiler-pgstac"
"stac-utils/stac-fastapi" -> "stac-utils/pystac-client"
"stac-utils/stac-fastapi" -> "radiantearth/stac-api-spec"
"stac-utils/stac-fastapi" -> "microsoft/planetary-computer-apis"
"stac-utils/stac-fastapi" -> "radiantearth/stac-browser"
"LeonvanKouwen/elvis" -> "jmosbacher/pydantic-panel"
"inspire-eu-validation/community" -> "INSPIRE-MIF/gp-ogc-api-features"
"inspire-eu-validation/community" -> "etf-validator/etf-webapp"
"microsoft/KenyaNigeriaBuildingFootprints" -> "microsoft/SouthAmericaBuildingFootprints"
"noobmartin/Open-source-SAR-simulator" -> "adamoferro/dsarsim"
"opendatacube/odc-geo" -> "opendatacube/odc-stac"
"microsoft/SouthAmericaBuildingFootprints" -> "microsoft/KenyaNigeriaBuildingFootprints"
"gboeing/osmnx" ["l"="20.245,27.538"]
"gboeing/osmnx-examples" ["l"="20.194,27.585"]
"geopandas/geopandas" ["l"="20.239,27.499"]
"gboeing/urban-data-science" ["l"="20.181,27.56"]
"python-visualization/folium" ["l"="20.322,27.532"]
"anitagraser/movingpandas" ["l"="20.181,27.526"]
"sacridini/Awesome-Geospatial" ["l"="20.082,27.386"]
"pysal/pysal" ["l"="20.203,27.521"]
"Toblerity/Shapely" ["l"="20.27,27.486"]
"keplergl/kepler.gl" ["l"="18.808,24.865"]
"cyang-kth/fmm" ["l"="18.439,24.816"]
"HTenkanen/pyrosm" ["l"="20.181,27.544"]
"scikit-mobility/scikit-mobility" ["l"="20.171,27.584"]
"Project-OSRM/osrm-backend" ["l"="18.51,24.643"]
"UDST/pandana" ["l"="20.195,27.603"]
"valhalla/valhalla" ["l"="18.544,24.65"]
"waddell/urban-informatics-and-visualization" ["l"="20.191,27.636"]
"mocnik-science/osm-python-tools" ["l"="18.417,24.429"]
"martinfleis/momepy" ["l"="20.197,27.572"]
"UDST/urbanaccess" ["l"="20.207,27.631"]
"OpenGeoscience/geonotebook" ["l"="20.096,27.43"]
"mszell/geospatialdatascience" ["l"="20.062,27.509"]
"mapbox/rasterio" ["l"="20.183,27.418"]
"Toblerity/Fiona" ["l"="20.219,27.465"]
"perrygeo/python-rasterstats" ["l"="20.157,27.443"]
"corteva/rioxarray" ["l"="20.128,27.448"]
"OSGeo/gdal" ["l"="18.784,24.772"]
"developmentseed/landsat-util" ["l"="20.116,27.299"]
"dwtkns/gdal-cheat-sheet" ["l"="18.598,24.687"]
"radiantearth/stac-spec" ["l"="20.134,27.373"]
"azavea/raster-vision" ["l"="20.071,27.309"]
"sentinelsat/sentinelsat" ["l"="20.072,27.334"]
"cogeotiff/rio-tiler" ["l"="20.173,27.389"]
"mapbox/tippecanoe" ["l"="18.675,24.728"]
"mapbox/robosat" ["l"="20.052,27.304"]
"makepath/xarray-spatial" ["l"="20.14,27.459"]
"geopy/geopy" ["l"="20.308,27.495"]
"DenisCarriere/geocoder" ["l"="20.342,27.497"]
"googlemaps/google-maps-services-python" ["l"="20.348,27.572"]
"daviddrysdale/python-phonenumbers" ["l"="25.748,1.152"]
"thampiman/reverse-geocoder" ["l"="20.404,27.49"]
"SciTools/cartopy" ["l"="18.912,28.202"]
"seatgeek/fuzzywuzzy" ["l"="29.592,32.784"]
"sdispater/pendulum" ["l"="22.853,3.966"]
"gboeing/data-visualization" ["l"="20.233,27.646"]
"gboeing/2014-summer-travels" ["l"="20.26,27.693"]
"rhiever/python-data-visualization-course" ["l"="20.285,27.703"]
"benfoxall/lastfm-to-csv" ["l"="-33.625,-26.46"]
"pylast/pylast" ["l"="-33.657,-26.442"]
"MinZHANG-WHU/Change-Detection-Review" ["l"="20.084,27.077"]
"wenhwu/awesome-remote-sensing-change-detection" ["l"="20.062,27.106"]
"justchenhao/STANet" ["l"="20.09,27.06"]
"LiheYoung/SenseEarth2020-ChangeDetection" ["l"="20.078,27.038"]
"I-Hope-Peace/ChangeDetectionRepository" ["l"="-27.624,19.113"]
"justchenhao/BIT_CD" ["l"="20.1,27.046"]
"GeoZcx/A-deeply-supervised-image-fusion-network-for-change-detection-in-remote-sensing-images" ["l"="20.075,27.054"]
"Bobholamovic/ChangeDetectionToolbox" ["l"="20.063,27.047"]
"rcdaudt/fully_convolutional_change_detection" ["l"="20.064,27.036"]
"wgcban/ChangeFormer" ["l"="20.106,27.033"]
"Z-Zheng/ChangeStar" ["l"="20.118,27.025"]
"likyoo/Siam-NestedUNet" ["l"="20.087,27.023"]
"likyoo/change_detection.pytorch" ["l"="20.094,27.031"]
"Bobholamovic/CDLab" ["l"="20.095,27.013"]
"gmayday1997/SceneChangeDet" ["l"="20.048,27.044"]
"lehaifeng/DASNet" ["l"="20.087,27.044"]
"chrieke/awesome-satellite-imagery-datasets" ["l"="20.064,27.278"]
"shinianzhihou/ChangeDetection" ["l"="20.064,27.022"]
"rulixiang/DSFANet" ["l"="20.044,27.033"]
"Microsoft/USBuildingFootprints" ["l"="20.112,27.383"]
"mapbox/mapboxgl-jupyter" ["l"="20.162,27.48"]
"trailbehind/DeepOSM" ["l"="19.992,27.3"]
"developmentseed/label-maker" ["l"="20.031,27.294"]
"opencitymodel/opencitymodel" ["l"="18.57,26.689"]
"Microsoft/CanadianBuildingFootprints" ["l"="20.082,27.438"]
"SpaceNetChallenge/BuildingDetectors" ["l"="19.917,27.229"]
"Esri/esri-leaflet" ["l"="19.722,25.468"]
"holoviz/panel" ["l"="20.099,27.623"]
"holoviz/holoviews" ["l"="20.13,27.573"]
"holoviz/hvplot" ["l"="20.131,27.551"]
"voila-dashboards/voila" ["l"="21.239,28.84"]
"MarcSkovMadsen/awesome-panel" ["l"="20.064,27.704"]
"holoviz/datashader" ["l"="20.115,27.537"]
"mljar/mercury" ["l"="25.517,34.169"]
"holoviz/holoviz" ["l"="20.12,27.594"]
"holoviz/param" ["l"="20.104,27.592"]
"lux-org/lux" ["l"="25.508,34.062"]
"ploomber/ploomber" ["l"="25.441,34.185"]
"orchest/orchest" ["l"="25.487,34.162"]
"vizzuhq/ipyvizzu" ["l"="25.58,34.174"]
"MAIF/shapash" ["l"="25.584,34.068"]
"oegedijk/explainerdashboard" ["l"="25.614,34.072"]
"uber/orbit" ["l"="22.507,36.013"]
"bopen/xarray-sentinel" ["l"="20.004,27.457"]
"bopen/sarsen" ["l"="19.973,27.473"]
"sertit/eoreader" ["l"="20.013,27.467"]
"johntruckenbrodt/pyroSAR" ["l"="19.999,27.441"]
"gjoseph92/stackstac" ["l"="20.127,27.412"]
"ESA-PhiLab/OpenSarToolkit" ["l"="19.952,27.489"]
"insarlab/MintPy" ["l"="19.897,27.515"]
"scottyhq/dinosar" ["l"="19.91,27.516"]
"giswqs/leafmap" ["l"="20.066,27.423"]
"giswqs/geemap" ["l"="20.009,27.376"]
"giswqs/streamlit-geospatial" ["l"="20.024,27.442"]
"acgeospatial/awesome-earthobservation-code" ["l"="20.035,27.369"]
"jblindsay/whitebox-tools" ["l"="20.062,27.467"]
"microsoft/torchgeo" ["l"="20.04,27.336"]
"giswqs/earthengine-py-notebooks" ["l"="19.995,27.363"]
"giswqs/python-geospatial" ["l"="20.037,27.403"]
"giswqs/qgis-earthengine-examples" ["l"="20.001,27.397"]
"opengeospatial/geoparquet" ["l"="20.11,27.449"]
"samapriya/awesome-gee-community-datasets" ["l"="19.983,27.399"]
"sentinel-hub/eo-learn" ["l"="20.052,27.347"]
"sentinel-hub/sentinelhub-py" ["l"="20.091,27.337"]
"sentinel-hub/sentinel2-cloud-detector" ["l"="20.084,27.322"]
"sentinel-hub/custom-scripts" ["l"="20.021,27.355"]
"Fernerkundung/awesome-sentinel" ["l"="20.08,27.353"]
"giswqs/Awesome-GEE" ["l"="19.976,27.373"]
"planetlabs/notebooks" ["l"="20.033,27.316"]
"opendatacube/datacube-core" ["l"="20.114,27.399"]
"pydata/xarray" ["l"="18.95,28.186"]
"qgis/QGIS" ["l"="18.858,24.68"]
"ResidentMario/geoplot" ["l"="20.215,27.507"]
"1044197988/TF.Keras-Commonly-used-models" ["l"="19.902,27.068"]
"1044197988/Semantic-segmentation-of-remote-sensing-images" ["l"="19.929,27.078"]
"TachibanaYoshino/Remote-sensing-image-semantic-segmentation" ["l"="19.942,27.097"]
"Epsilon123/Semantic-Segmentation-of-Remote-Sensing-Images" ["l"="19.942,27.083"]
"YudeWang/UNet-Satellite-Image-Segmentation" ["l"="19.944,27.128"]
"AstarLight/Satellite-Segmentation" ["l"="19.932,27.104"]
"rmkemker/EarthMapper" ["l"="19.952,27.148"]
"BBuf/Keras-Semantic-Segmentation" ["l"="19.876,27.03"]
"lcylmhlcy/Semantic-segmentation" ["l"="19.941,27.068"]
"WangZhenqing-RS/Unet_RSimage_Multi-band_Multi-class" ["l"="19.933,27.056"]
"luyanger1799/Amazing-Semantic-Segmentation" ["l"="19.856,27.016"]
"holoviz/geoviews" ["l"="20.13,27.525"]
"holoviz/spatialpandas" ["l"="20.151,27.505"]
"geopandas/dask-geopandas" ["l"="20.144,27.482"]
"holoviz/colorcet" ["l"="20.099,27.572"]
"greppo-io/greppo" ["l"="20.066,27.488"]
"earthlab/earthpy" ["l"="20.107,27.463"]
"holoviz/lumen" ["l"="20.096,27.68"]
"pyviz/pyviz.org" ["l"="20.106,27.646"]
"sshuair/awesome-gis" ["l"="18.166,26.621"]
"robmarkcole/satellite-image-deep-learning" ["l"="20.015,27.326"]
"mapbox/awesome-vector-tiles" ["l"="18.656,24.719"]
"google/earthengine-api" ["l"="19.971,27.35"]
"deepVector/geospatial-machine-learning" ["l"="20.049,27.322"]
"gee-community/gee_tools" ["l"="19.953,27.366"]
"google/earthengine-community" ["l"="19.957,27.38"]
"gee-community/qgis-earthengine-plugin" ["l"="19.98,27.386"]
"fitoprincipe/geetools-code-editor" ["l"="19.921,27.367"]
"gee-community/ee-palettes" ["l"="19.922,27.382"]
"renelikestacos/Google-Earth-Engine-Python-Examples" ["l"="19.932,27.36"]
"neptune-ml/open-solution-mapping-challenge" ["l"="19.876,27.167"]
"crowdAI/crowdai-mapping-challenge-mask-rcnn" ["l"="19.892,27.192"]
"SpaceNetChallenge/SpaceNet_Off_Nadir_Solutions" ["l"="19.909,27.209"]
"isaaccorley/torchrs" ["l"="20.056,27.174"]
"CosmiQ/solaris" ["l"="19.987,27.267"]
"DataSystemsLab/GeoTorch" ["l"="19.959,27.331"]
"microsoft/satellite-imagery-labeling-tool" ["l"="19.968,27.388"]
"isce-framework/isce2" ["l"="19.889,27.502"]
"yumorishita/LiCSBAS" ["l"="19.872,27.522"]
"GeoscienceAustralia/PyRate" ["l"="19.885,27.526"]
"insarlab/MintPy-tutorial" ["l"="19.841,27.526"]
"isce-framework/isce2-docs" ["l"="19.861,27.528"]
"dbekaert/StaMPS" ["l"="19.865,27.512"]
"aria-tools/ARIA-tools" ["l"="19.843,27.543"]
"gmtsar/gmtsar" ["l"="19.877,27.511"]
"RadarCODE/awesome-sar" ["l"="19.926,27.502"]
"isce-framework/fringe" ["l"="19.881,27.541"]
"isce-framework/isce3" ["l"="19.893,27.534"]
"insarlab/MiaplPy" ["l"="19.87,27.545"]
"dbekaert/TRAIN" ["l"="19.873,27.533"]
"pyrocko/kite" ["l"="19.857,27.538"]
"AndreaCodegoni/Tiny_model_4_CD" ["l"="20.138,26.996"]
"likyoo/open-cd" ["l"="20.107,26.998"]
"liumency/CropLand-CD" ["l"="20.167,26.994"]
"wgcban/SemiCD" ["l"="20.123,27.006"]
"cyx669521/self-supervised_change_detetction" ["l"="20.076,26.981"]
"CarryHJR/remote-sense-quickstart" ["l"="20.02,27.004"]
"whut2962575697/image_seg" ["l"="20.005,26.93"]
"CarnoZhao/RSIPAC_Track2" ["l"="20.056,26.982"]
"neverstoplearn/remote_sensing_change_detection" ["l"="20.059,27.056"]
"daifeng2016/End-to-end-CD-for-VHR-satellite-image" ["l"="20.047,27.022"]
"fitzpchao/DTCDSCN" ["l"="20.012,26.962"]
"Molly6/segmentation_shengteng2021" ["l"="20.059,26.968"]
"JasmineRain/NAIC_AI-RS" ["l"="19.973,26.986"]
"LiuDongjing/BuildingChangeDetector" ["l"="20.001,27.043"]
"wylqq312715289/CDGAN" ["l"="19.995,27.002"]
"ggsDing/Bi-SRNet" ["l"="20.158,26.984"]
"daifeng2016/Semantic-Change-Detection" ["l"="20.191,26.968"]
"businiaoo/PRCV2021-Change-Detection-Contest-2nd-place-Solution" ["l"="20.088,26.981"]
"justchenhao/SaDL_CD" ["l"="20.134,26.984"]
"seominseok0429/Self-Pair-for-Change-Detection" ["l"="20.126,26.963"]
"kyoukuntaro/FCSN_for_ChangeDetection_IGARSS2018" ["l"="20.036,27.025"]
"vbhavank/Siamese-neural-network-for-change-detection" ["l"="20.027,27.033"]
"likyoo/PRCV2021_ChangeDetection_Top3" ["l"="20.088,26.996"]
"wangle53/CSA-CDGAN" ["l"="20.074,26.996"]
"wgcban/ddpm-cd" ["l"="20.136,27.013"]
"PatrickTUM/multimodalCD_ISPRS21" ["l"="20.123,27.091"]
"abhijeet3922/Change-Detection-in-Satellite-Imagery" ["l"="20.028,27.066"]
"vbhavank/Unstructured-change-detection-using-CNN" ["l"="20.009,27.025"]
"rulixiang/ChangeDetectionPCAKmeans" ["l"="20.025,27.048"]
"MinZHANG-WHU/FDCNN" ["l"="20.041,27.052"]
"fouronnes/SAR-change-detection" ["l"="20.003,26.986"]
"mortcanty/CRCPython" ["l"="19.979,27.209"]
"GeospatialPython/pyshp" ["l"="20.257,27.467"]
"jswhit/pyproj" ["l"="18.76,25.02"]
"pyproj4/pyproj" ["l"="20.23,27.449"]
"Unidata/netcdf4-python" ["l"="18.89,28.214"]
"geoalchemy/geoalchemy2" ["l"="20.278,27.445"]
"ozak/georasters" ["l"="20.278,27.514"]
"GERSL/Fmask" ["l"="20.183,27.275"]
"JacobJeppesen/RS-Net" ["l"="20.29,27.242"]
"ubarsc/python-fmask" ["l"="20.151,27.29"]
"IPL-UV/ee_ipl_uv" ["l"="20.233,27.247"]
"SorourMo/Cloud-Net-A-semantic-segmentation-CNN-for-cloud-detection" ["l"="20.282,27.23"]
"CNES/Start-MAJA" ["l"="20.152,27.277"]
"astro-ck/Road-Extraction" ["l"="19.746,27.148"]
"mj129/CoANet" ["l"="19.765,27.149"]
"jeffwen/road_building_extraction" ["l"="19.724,27.037"]
"jiankang1991/road_extraction_remote_sensing" ["l"="19.775,27.063"]
"VSainteuf/pytorch-psetae" ["l"="19.961,27.033"]
"VSainteuf/lightweight-temporal-attention-pytorch" ["l"="19.953,26.993"]
"MarcCoru/crop-type-mapping" ["l"="19.975,27.047"]
"dl4sits/BreizhCrops" ["l"="19.949,27.007"]
"roserustowicz/crop-type-mapping" ["l"="19.968,27.01"]
"VSainteuf/pastis-benchmark" ["l"="19.921,27.005"]
"VSainteuf/utae-paps" ["l"="19.933,26.987"]
"charlotte-pel/temporalCNN" ["l"="19.928,26.962"]
"sshuair/torchsat" ["l"="20.028,27.246"]
"nshaud/DeepNetsForEO" ["l"="20.003,27.253"]
"Fernerkundung/EarthEngine_scripts" ["l"="19.912,27.36"]
"davemlz/eemont" ["l"="19.963,27.399"]
"davemlz/awesome-spectral-indices" ["l"="19.975,27.427"]
"r-spatial/rgee" ["l"="19.369,43.526"]
"mahmoud/boltons" ["l"="22.738,3.989"]
"stitchfix/pyxley" ["l"="21.597,28.823"]
"delight-im/FreeGeoDB" ["l"="28.066,-18.887"]
"honnibal/spaCy" ["l"="21.733,28.836"]
"madisonmay/Tomorrow" ["l"="22.523,3.981"]
"what-studio/profiling" ["l"="22.621,3.942"]
"centaurean/density" ["l"="-14.752,22.101"]
"jonathanslenders/python-prompt-toolkit" ["l"="22.626,3.97"]
"redodo/tortilla" ["l"="22.542,3.907"]
"oliver006/elasticsearch-gmail" ["l"="-12.277,-20.206"]
"crsmithdev/arrow" ["l"="22.661,4.029"]
"yhat/db.py" ["l"="21.663,28.84"]
"ContinuumIO/bokeh" ["l"="21.762,28.79"]
"SocialDataSci/Geospatial_Data_with_Python" ["l"="20.337,27.61"]
"geopandas/scipy2018-geospatial-data" ["l"="20.296,27.567"]
"jorisvandenbossche/geopandas-tutorial" ["l"="20.23,27.483"]
"pysal/scipy2019-intermediate-gds" ["l"="20.305,27.473"]
"pysal/esda" ["l"="20.222,27.558"]
"darribas/gds18" ["l"="20.317,27.616"]
"ljwolf/geopython" ["l"="20.28,27.55"]
"SciTools/cartopy-tutorial" ["l"="18.989,28.251"]
"pysal/giddy" ["l"="20.257,27.601"]
"gdsbook/book" ["l"="20.245,27.579"]
"darribas/contextily" ["l"="20.364,27.519"]
"halfdanrump/geoviz" ["l"="20.316,27.599"]
"pysal/mgwr" ["l"="20.218,27.589"]
"SpatialPython/spatial_python" ["l"="20.4,27.615"]
"planetlabs/planet-client-python" ["l"="20.102,27.256"]
"kscottz/PythonFromSpace" ["l"="20.043,27.278"]
"azavea/raster-vision-examples" ["l"="19.988,27.252"]
"jazzband/geojson" ["l"="20.258,27.43"]
"altair-viz/altair" ["l"="23.228,4.592"]
"bokeh/bokeh" ["l"="23.15,4.588"]
"plotly/plotly.py" ["l"="23.176,4.62"]
"mwaskom/seaborn" ["l"="23.082,4.604"]
"plotly/dash" ["l"="23.181,4.489"]
"ResidentMario/missingno" ["l"="25.548,33.908"]
"andrea-cuttone/geoplotlib" ["l"="20.363,27.539"]
"jupyter-widgets/ipyleaflet" ["l"="21.246,28.889"]
"pandas-profiling/pandas-profiling" ["l"="25.461,33.929"]
"makinacorpus/django-leaflet" ["l"="25.996,1.199"]
"openvenues/pypostal" ["l"="25.291,29.897"]
"tomchristie/apistar" ["l"="22.785,3.997"]
"pelias/pelias" ["l"="18.568,24.619"]
"frewsxcv/python-geojson" ["l"="20.427,27.437"]
"jwass/geojsonio.py" ["l"="20.484,27.438"]
"vgm64/gmplot" ["l"="21.391,29.051"]
"pbugnion/gmaps" ["l"="21.323,28.922"]
"googleapis/google-api-python-client" ["l"="-7.471,-0.517"]
"slimkrazy/python-google-places" ["l"="-24.83,23.148"]
"googlemaps/google-maps-services-java" ["l"="48.538,0.195"]
"googlemaps/google-maps-services-js" ["l"="25.395,-28.597"]
"burnash/gspread" ["l"="22.897,4.314"]
"pydanny/cookiecutter-django" ["l"="25.639,1.289"]
"django-extensions/django-extensions" ["l"="25.738,1.194"]
"bqplot/bqplot" ["l"="21.203,28.908"]
"sfu-db/dataprep" ["l"="25.529,34.071"]
"AutoViML/AutoViz" ["l"="25.576,34.03"]
"DHI-GRAS/terracotta" ["l"="20.206,27.395"]
"developmentseed/titiler" ["l"="20.187,27.385"]
"cogeotiff/rio-cogeo" ["l"="20.198,27.37"]
"banesullivan/localtileserver" ["l"="20.157,27.464"]
"mojodna/marblecutter" ["l"="20.278,27.349"]
"developmentseed/timvt" ["l"="20.253,27.369"]
"developmentseed/geolambda" ["l"="20.179,27.345"]
"developmentseed/rio-viz" ["l"="20.185,27.372"]
"ungarj/mapchete" ["l"="20.297,27.399"]
"CrunchyData/pg_tileserv" ["l"="18.775,24.694"]
"radiantearth/stac-api-spec" ["l"="20.202,27.382"]
"PaddlePaddle/PaddleRS" ["l"="20.063,26.949"]
"PaddleCV-SIG/PaddleRS" ["l"="20.094,26.945"]
"PaddleCV-SIG/GeoView" ["l"="20.059,26.912"]
"PaddlePaddle/Paddle3D" ["l"="34.175,35.84"]
"WHULuoJiaTeam/luojianet" ["l"="19.977,26.966"]
"PaddleCV-SIG/PaddleLabel" ["l"="20.071,26.888"]
"geoyee/PdRSCD" ["l"="20.088,26.916"]
"PaddlePaddle/paddle2onnx" ["l"="33.985,35.881"]
"geoyee/LabCD" ["l"="20.075,26.924"]
"WangLibo1995/GeoSeg" ["l"="20.185,26.937"]
"Junjue-Wang/LoveDA" ["l"="20.152,26.945"]
"ViTAE-Transformer/ViTAE-Transformer-Remote-Sensing" ["l"="33.903,33.315"]
"lironui/Multi-Attention-Network" ["l"="20.201,26.899"]
"lironui/MACU-Net" ["l"="20.222,26.905"]
"ggsDing/LANet" ["l"="20.221,26.926"]
"ViTAE-Transformer/Remote-Sensing-RVSA" ["l"="33.906,33.284"]
"VIROBO-15/Transformer-in-Remote-Sensing" ["l"="20.155,26.966"]
"facebookresearch/HRViT" ["l"="-26.87,19.582"]
"WangLibo1995/BuildFormer" ["l"="20.191,26.913"]
"Levantespot/UDA_for_RS" ["l"="20.206,26.919"]
"avanetten/cresi" ["l"="19.765,27.186"]
"CosmiQ/cresi" ["l"="19.785,27.175"]
"raphaelquast/EOmaps" ["l"="20.001,27.478"]
"stac-utils/pystac" ["l"="20.154,27.412"]
"DahnJ/H3-Pandas" ["l"="18.944,25.012"]
"stac-utils/pystac-client" ["l"="20.135,27.422"]
"giswqs/aws-open-data-geo" ["l"="20.027,27.49"]
"nasaharvest/crop-mask" ["l"="20.009,27.601"]
"corteva/geocube" ["l"="20.13,27.47"]
"r5py/r5py" ["l"="19.264,43.638"]
"pygeos/pygeos" ["l"="20.174,27.511"]
"jsignell/dask-geopandas" ["l"="20.158,27.533"]
"pysal/spopt" ["l"="20.211,27.573"]
"fatiando/verde" ["l"="19.713,28.295"]
"geopandas/geo-arrow-spec" ["l"="20.124,27.494"]
"Toblerity/rtree" ["l"="18.742,25.118"]
"pysal/mapclassify" ["l"="20.229,27.579"]
"mikonvergence/DiffusionFastForward" ["l"="19.743,27.414"]
"worldstrat/worldstrat" ["l"="19.858,27.404"]
"cidcom/SatelliteCloudGenerator" ["l"="19.699,27.422"]
"ElementAI/seasonal-contrast" ["l"="20.098,27.15"]
"zhangbin0917/Awesome-Remote-Sensing-Dataset" ["l"="20.104,27.131"]
"Seyed-Ali-Ahmadi/Awesome_Satellite_Benchmark_Datasets" ["l"="19.98,27.241"]
"schmitt-muc/SEN12MS" ["l"="20.134,27.129"]
"isaaccorley/pytorch-enhance" ["l"="20.079,27.146"]
"blutjens/awesome-forests" ["l"="19.459,26.568"]
"plant99/felicette" ["l"="20.262,27.197"]
"karanpratapsingh/fullstack-starterkit" ["l"="20.363,27.141"]
"doersino/aerialbot" ["l"="20.3,27.146"]
"surya-veer/movement-tracking" ["l"="20.388,27.105"]
"vinayak-mehta/present" ["l"="-12.133,-18.093"]
"mrdbourke/machine-learning-roadmap" ["l"="23.589,30.592"]
"kautukkundan/Awesome-Profile-README-templates" ["l"="24.297,-21.883"]
"hedythedev/starcli" ["l"="20.328,27.167"]
"a327ex/BYTEPATH" ["l"="-13.639,23.337"]
"liljencrantz/crush" ["l"="-12.199,-18.076"]
"erebe/personal-server" ["l"="-10.469,0.154"]
"rossumur/espflix" ["l"="-37.6,41.449"]
"tradytics/eiten" ["l"="21.847,32.645"]
"Jiangfeng-Xiong/satellite_seg" ["l"="19.953,27.059"]
"granularai/fabric" ["l"="20.023,27.019"]
"mvkolos/siamese-change-detection" ["l"="19.999,27.03"]
"gg-lige/tianchi" ["l"="19.988,27.017"]
"sacridini/GEET" ["l"="19.932,27.345"]
"m-wrzr/populartimes" ["l"="20.342,27.662"]
"philshem/gmaps_popular_times_scraper" ["l"="20.375,27.7"]
"rak-trzustki/busy-hours" ["l"="20.377,27.681"]
"GrocerCheck/LivePopularTimes" ["l"="20.357,27.688"]
"ActiveConclusion/COVID19_mobility" ["l"="18.573,42.825"]
"anitagraser/movingpandas-examples" ["l"="20.214,27.543"]
"geopandas/contextily" ["l"="20.167,27.497"]
"mattijn/topojson" ["l"="20.211,27.484"]
"pysal/libpysal" ["l"="20.23,27.567"]
"kylebarron/parquet-wasm" ["l"="20.075,27.589"]
"geoarrow/geoarrow" ["l"="20.074,27.571"]
"ossimlabs/ossim" ["l"="19.925,27.456"]
"orfeotoolbox/OTB" ["l"="19.988,27.424"]
"tqjxlm/Atlas" ["l"="18.137,26.212"]
"bjornblissing/osg-3rdparty-cmake" ["l"="18.217,26.351"]
"ossimlabs/ossim-plugins" ["l"="19.897,27.467"]
"openscenegraph/VirtualPlanetBuilder" ["l"="18.214,26.336"]
"NoQuarterTeam/boilerplate" ["l"="29.751,-27.107"]
"karanpratapsingh/portfolio" ["l"="20.437,27.118"]
"graphql-boilerplates/react-fullstack-graphql" ["l"="31.016,-33.932"]
"gokcan/react-shimmer" ["l"="25.611,-25.93"]
"mdevils/typescript-exercises" ["l"="26.022,-25.875"]
"olafsulich/fullstack-nextjs-ecommerce" ["l"="29.959,-27.103"]
"TowhidKashem/snapchat-clone" ["l"="24.035,-26.314"]
"prisma/prisma-examples" ["l"="30.901,-33.78"]
"wellyshen/use-web-animations" ["l"="25.658,-25.935"]
"bring-shrubbery/use-cookie-consent" ["l"="29.113,-26.849"]
"tannerlinsley/react-virtual" ["l"="25.838,-25.966"]
"react-boilerplate/react-boilerplate-cra-template" ["l"="26.014,-26.419"]
"EO-College/tomography_tutorial" ["l"="19.884,27.586"]
"noobmartin/Open-source-SAR-simulator" ["l"="19.869,27.584"]
"EO-College/sarbian" ["l"="19.856,27.629"]
"awslabs/open-data-registry" ["l"="20.127,27.356"]
"awslabs/aws-well-architected-labs" ["l"="-9.01,-1.3"]
"awslabs/aws-data-wrangler" ["l"="-10.359,-1.593"]
"aws/sagemaker-containers" ["l"="-10.497,-1.701"]
"aws/sagemaker-python-sdk" ["l"="-10.457,-1.666"]
"sat-utils/sat-search" ["l"="20.158,27.373"]
"awslabs/amazon-sagemaker-examples" ["l"="-10.488,-1.606"]
"awslabs/aws-serverless-data-lake-framework" ["l"="-10.333,-1.494"]
"aws-samples/amazon-sagemaker-architecting-for-ml" ["l"="-10.527,-1.602"]
"gnana1997/Gesture-Gaming-using-OpenCV" ["l"="24.013,-26.259"]
"KartikChugh/Otto" ["l"="-9.335,-18.67"]
"Delta2Force/MCVmComputers" ["l"="20.441,27.062"]
"satellite-image-deep-learning/techniques" ["l"="20.07,27.191"]
"satellite-image-deep-learning/datasets" ["l"="20.127,27.155"]
"aliaksandr960/segment-anything-eo" ["l"="20.047,27.258"]
"syamkakarla98/Satellite_Imagery_Analysis" ["l"="19.937,26.379"]
"Ouranosinc/xclim" ["l"="18.898,28.113"]
"ecmwf/climetlab" ["l"="18.839,28.15"]
"pangeo-data/xESMF" ["l"="18.899,28.089"]
"intake/intake" ["l"="18.967,28.142"]
"chrieke/awesome-geospatial-companies" ["l"="20.06,27.392"]
"tjukanovt/30DayMapChallenge" ["l"="19.938,27.427"]
"hn303/30DayMapChallenge-Bot" ["l"="19.868,27.432"]
"tjukanovt/qgis_styles" ["l"="19.805,27.442"]
"jwoLondon/30dayMapChallenge" ["l"="19.9,27.45"]
"MapPromptMonday/MapPromptMonday" ["l"="19.884,27.438"]
"Z3tt/30DayMapChallenge" ["l"="19.843,27.446"]
"gkaramanis/30DayMapChallenge" ["l"="19.885,27.454"]
"luukvdmeer/sfnetworks" ["l"="19.341,43.588"]
"Pecners/rayshader_portraits" ["l"="19.875,43.217"]
"gabrieltseng/pycrop-yield-prediction" ["l"="19.781,27.273"]
"JiaxuanYou/crop_yield_prediction" ["l"="19.819,27.277"]
"cleipski/CropPredict" ["l"="19.762,27.272"]
"saeedkhaki92/Yield-Prediction-DNN" ["l"="19.774,27.288"]
"brad-ross/crop-yield-prediction-project" ["l"="19.787,27.26"]
"AnnaXWang/deep-transfer-learning-crop-prediction" ["l"="19.77,27.259"]
"reachsumit/deep-unet-for-satellite-image-segmentation" ["l"="19.968,27.181"]
"sentinel-hub/eo-flow" ["l"="20.028,27.194"]
"patrickcgray/open-geo-tutorial" ["l"="20.07,27.363"]
"csaybar/EEwPython" ["l"="19.94,27.376"]
"TUM-LMF/fieldRNN" ["l"="19.897,26.923"]
"TUM-LMF/MTLCC" ["l"="19.886,26.905"]
"mapbox/mapbox-sdk-py" ["l"="20.195,27.482"]
"mapbox/mapbox-cli-py" ["l"="20.25,27.445"]
"CreativeInquiry/terrapattern" ["l"="19.955,27.294"]
"CreativeInquiry/terrapattern-website" ["l"="19.906,27.302"]
"developmentseed/skynet-data" ["l"="19.979,27.281"]
"BradNeuberg/cloudless" ["l"="20.004,27.273"]
"mitmul/ssai-cnn" ["l"="19.945,27.265"]
"developmentseed/skynet-train" ["l"="19.965,27.275"]
"nealjean/predicting-poverty" ["l"="19.916,27.286"]
"ngageoint/mrgeo" ["l"="18.495,25.053"]
"microsoft/USBuildingFootprints" ["l"="20.023,27.281"]
"microsoft/GlobalMLBuildingFootprints" ["l"="20.021,27.389"]
"microsoft/CanadianBuildingFootprints" ["l"="20.051,27.209"]
"microsoft/Uganda-Tanzania-Building-Footprints" ["l"="20.051,27.224"]
"microsoft/AustraliaBuildingFootprints" ["l"="20.067,27.229"]
"microsoft/KenyaNigeriaBuildingFootprints" ["l"="20.053,27.24"]
"microsoft/SouthAmericaBuildingFootprints" ["l"="20.04,27.235"]
"yannforget/landsatxplore" ["l"="20.187,27.196"]
"yannforget/pylandsat" ["l"="20.223,27.172"]
"dgketchum/Landsat578" ["l"="20.227,27.156"]
"olivierhagolle/LANDSAT-Download" ["l"="20.134,27.23"]
"remicres/sr4rs" ["l"="20.15,27.242"]
"zlkanata/DeepGlobe-Road-Extraction-Challenge" ["l"="19.862,27.133"]
"ximimiao/deeplabv3-Tensorflow" ["l"="19.91,27.084"]
"milleniums/High-Resolution-Remote-Sensing-Semantic-Segmentation-PyTorch" ["l"="19.963,27.073"]
"lsh1994/keras-segmentation" ["l"="19.865,27.044"]
"cuilunan/Unet-of-remote-sensing-image" ["l"="19.961,27.114"]
"manideep2510/eye-in-the-sky" ["l"="19.968,27.169"]
"giswqs/whitebox-python" ["l"="20.084,27.506"]
"jblindsay/whitebox-geospatial-analysis-tools" ["l"="20.035,27.511"]
"giswqs/WhiteboxTools-ArcGIS" ["l"="20.048,27.522"]
"mdbartos/pysheds" ["l"="20.217,28.156"]
"r-barnes/richdem" ["l"="20.188,28.14"]
"dtarb/TauDEM" ["l"="20.174,28.158"]
"giswqs/lidar" ["l"="20.083,27.47"]
"dbekaert/RAiDER" ["l"="19.853,27.556"]
"aria-tools/ARIA-tools-docs" ["l"="19.803,27.564"]
"TUDelftGeodesy/Doris" ["l"="19.851,27.521"]
"mdelgadoblasco/snap2stamps" ["l"="19.841,27.511"]
"scottyhq/isce_notes" ["l"="19.823,27.53"]
"parosen/Geo-SInC" ["l"="19.818,27.552"]
"ChienWong/ResUnet-a" ["l"="19.977,27.093"]
"feevos/resuneta" ["l"="20.012,27.114"]
"ashishpatel26/Satelight-Image-Semantic-Segmentation-Unet-Tensorflow-keras" ["l"="19.996,27.075"]
"fuweifu-vtoo/Semantic-segmentation" ["l"="19.922,27.066"]
"anxiangsir/deeplabv3-Tensorflow" ["l"="19.937,27.043"]
"lehaifeng/SCAttNet" ["l"="19.909,27.055"]
"xungeer29/Remote-Sensing-Image-Classification" ["l"="19.963,27.092"]
"AI-Chen/Deeplab-v3-Plus-pytorch-" ["l"="19.921,27.046"]
"SorourMo/38-Cloud-A-Cloud-Segmentation-Dataset" ["l"="20.318,27.224"]
"SorourMo/95-Cloud-An-Extension-to-38-Cloud-Dataset" ["l"="20.356,27.212"]
"TachibanaYoshino/Remote-sensing-image-semantic-segmentation-tf2" ["l"="19.882,27.069"]
"scrssys/semantic_segment_RSImage" ["l"="19.912,27.097"]
"JiaxuanLiu/BPA-SAR-simulation" ["l"="19.889,27.659"]
"likemoongg/SARbackprojection" ["l"="19.908,27.616"]
"denkywu/SAR-Synthetic-Aperture-Radar" ["l"="19.924,27.575"]
"denkywu/Simulation-of-SAR-Imaging-Algorithm" ["l"="19.92,27.602"]
"joeyos/SAR-imaging" ["l"="19.902,27.601"]
"ngageoint/MATLAB_SAR" ["l"="19.922,27.557"]
"denkywu/InSAR-Simulation-and-Studies" ["l"="19.934,27.602"]
"dm6718/RITSAR" ["l"="19.901,27.565"]
"nnaka/sar" ["l"="19.91,27.586"]
"denkywu/PolSAR-Calibration" ["l"="19.928,27.617"]
"liuxinyu123/Matlab" ["l"="19.898,27.586"]
"lwh521jll/Radar-SAR-simu" ["l"="19.893,27.618"]
"birgander2/PyRAT" ["l"="19.917,27.527"]
"StefanJAuer/RaySAR" ["l"="19.892,27.556"]
"wanghs008/SAR-SignalProcessing" ["l"="19.917,27.628"]
"jayboxyz/image_segmentation_dl" ["l"="19.869,26.993"]
"niecongchong/HRNet-keras-semantic-segmentation" ["l"="19.814,26.969"]
"bubbliiiing/Semantic-Segmentation" ["l"="29.665,35.297"]
"kirilcvetkov92/Semantic-Segmentation-BiSeNet" ["l"="31.97,37.101"]
"msnh2012/Msnhnet" ["l"="27.766,35.384"]
"junyuchen245/SPECT-CT-Seg-ResUNet-Keras" ["l"="19.842,27.027"]
"divamgupta/image-segmentation-keras" ["l"="29.095,36.56"]
"robintw/Py6S" ["l"="19.73,27.278"]
"samsammurphy/6S_emulator" ["l"="19.699,27.271"]
"samsammurphy/gee-atmcorr-S2" ["l"="19.771,27.326"]
"Zhaoguanhua/AtmosphericCorrection" ["l"="19.683,27.279"]
"jgomezdans/prosail" ["l"="19.522,27.259"]
"USGS-EROS/espa-surface-reflectance" ["l"="20.035,27.221"]
"neptune-ai/open-solution-mapping-challenge" ["l"="19.904,27.172"]
"jremillard/images-to-osm" ["l"="19.964,27.253"]
"ctu-geoforall-lab/i.ann.maskrcnn" ["l"="19.925,27.212"]
"SpaceNetChallenge/BuildingDetectors_Round2" ["l"="19.877,27.205"]
"crowdAI/mapping-challenge-round2-starter-kit" ["l"="19.857,27.169"]
"motokimura/spacenet_building_detection" ["l"="19.849,27.204"]
"crowdAI/mapping-challenge-starter-kit" ["l"="19.86,27.184"]
"SpaceNetChallenge/utilities" ["l"="19.898,27.227"]
"huster-wgm/geoseg" ["l"="19.839,27.159"]
"Geoyi/pixel-decoder" ["l"="19.967,27.233"]
"ykamikawa/tf-keras-SegNet" ["l"="19.829,27.017"]
"Gurupradeep/FCN-for-Semantic-Segmentation" ["l"="31.444,36.741"]
"gboeing/ppd599" ["l"="19.972,27.599"]
"gboeing/ppd534" ["l"="19.96,27.637"]
"pytroll/satpy" ["l"="18.914,28.178"]
"GeoStat-Framework/GSTools" ["l"="19.715,28.31"]
"levuvietphong/InSARFlow" ["l"="19.806,27.539"]
"geopolars/geopolars" ["l"="20.108,27.507"]
"handstuyennn/geo" ["l"="20.047,27.589"]
"flatgeobuf/flatgeobuf" ["l"="18.818,24.659"]
"planetlabs/qgis-planet-plugin" ["l"="20.139,27.211"]
"olivierhagolle/Sentinel-download" ["l"="20.1,27.281"]
"petedannemann/gis-programming-roadmap" ["l"="20,27.496"]
"Automating-GIS-processes/site" ["l"="20.013,27.513"]
"BUPTLdy/MARTA-GAN" ["l"="19.965,27.133"]
"BUPTLdy/Land_Use_CNN" ["l"="19.977,27.146"]
"zhaofei2048/sim_sar_img" ["l"="19.882,27.637"]
"ceholden/TSTools" ["l"="20.205,27.225"]
"ceholden/yatsm" ["l"="20.178,27.25"]
"GeneralLi95/deepglobe_land_cover_classification_with_deeplabv3plus" ["l"="19.93,27.119"]
"wangye707/ICNet-paddlepaddle" ["l"="19.908,26.991"]
"advaitsave/Multiclass-Semantic-Segmentation-CamVid" ["l"="19.902,27.031"]
"bonlime/keras-deeplab-v3-plus" ["l"="31.547,36.877"]
"jeffery-zhougang/DeeplabV3Plus-Keras-Retraining" ["l"="19.829,26.987"]
"MoleImg/Attention_UNet" ["l"="29.301,36.466"]
"yingkaisha/keras-unet-collection" ["l"="29.293,36.452"]
"DebeshJha/2020-CBMS-DoubleU-Net" ["l"="29.324,36.458"]
"nabsabraham/focal-tversky-unet" ["l"="29.305,36.523"]
"nibtehaz/MultiResUNet" ["l"="29.266,36.506"]
"SpaceGroupUCL/depthmapX" ["l"="20.087,27.782"]
"varoudis/depthmapX" ["l"="20.09,27.731"]
"SpaceGroupUCL/qgisSpaceSyntaxToolkit" ["l"="20.091,27.763"]
"SMoG-Chalmers/PST" ["l"="20.074,27.81"]
"SpaceGroupUCL/Depthmap" ["l"="20.092,27.82"]
"dgrtwo/gleam" ["l"="20.423,27.55"]
"UDST/urbansim" ["l"="20.197,27.669"]
"Lydorn/Polygonization-by-Frame-Field-Learning" ["l"="19.821,27.136"]
"zorzi-s/PolyWorldPretrainedNetwork" ["l"="19.786,27.092"]
"niecongchong/RS-building-regularization" ["l"="19.841,27.061"]
"fuzailpalnak/building-footprint-segmentation" ["l"="19.793,27.125"]
"SarahwXU/HiSup" ["l"="19.767,27.09"]
"Lydorn/mapalignment" ["l"="19.762,27.108"]
"chenzhaiyu/awesome-building-detection" ["l"="19.778,27.111"]
"songtaohe/Sat2Graph" ["l"="19.754,27.128"]
"pubgeo/monocular-geocentric-pose" ["l"="19.797,27.11"]
"tansor/VecRoad" ["l"="19.773,27.134"]
"zorzi-s/projectRegularization" ["l"="19.811,27.08"]
"feevos/ceecnet" ["l"="20.058,27.075"]
"liumency/DSAMNet" ["l"="20.119,27.055"]
"nemonameless/PaddleDetection_YOLOSeries" ["l"="34.426,35.843"]
"acgeospatial/Satellite_Imagery_Python" ["l"="20.096,27.302"]
"acgeospatial/Geospatial_Python_CourseV1" ["l"="20.144,27.26"]
"ceholden/open-geo-tutorial" ["l"="20.124,27.331"]
"Parker-Lyu/rscup2019_classifier" ["l"="19.91,26.87"]
"fortitude94deng/baidu-remote-sensing" ["l"="19.92,26.882"]
"justchenhao/IAug_CDNet" ["l"="20.108,27.017"]
"giswqs/whiteboxgui" ["l"="20.044,27.548"]
"Esri/deep-learning-frameworks" ["l"="19.843,25.485"]
"danfenghong/IEEE_TGRS_SpectralFormer" ["l"="19.848,26.397"]
"chenpan0615/FCCDN_pytorch" ["l"="20.131,27.035"]
"microsoft/RoadDetections" ["l"="20.047,27.423"]
"giswqs/geospatial-data-catalogs" ["l"="20.06,27.443"]
"llu025/Heterogeneous_CD" ["l"="20.053,26.993"]
"sudipansaha/dcvaVHROptical" ["l"="20.025,26.975"]
"sat-utils/sat-api" ["l"="20.177,27.322"]
"sat-utils/sat-stac" ["l"="20.183,27.357"]
"mapbox/landsat-tiler" ["l"="20.214,27.298"]
"radiantearth/stac-browser" ["l"="20.157,27.387"]
"RemotePixel/remotepixel-api" ["l"="20.203,27.312"]
"mapbox/rio-tiler" ["l"="20.231,27.288"]
"developmentseed/landsat-api" ["l"="20.171,27.288"]
"sat-utils/sat-download" ["l"="20.26,27.286"]
"RemotePixel/remotepixel-tiler" ["l"="20.213,27.281"]
"mapbox/sentinel-tiler" ["l"="20.241,27.277"]
"yangxue0827/CNN_UCMerced-LandUse_Caffe" ["l"="19.996,27.134"]
"shapely/shapely" ["l"="20.189,27.461"]
"rasterio/rasterio" ["l"="20.126,27.436"]
"libgeos/geos" ["l"="18.806,24.787"]
"scikit-geometry/scikit-geometry" ["l"="21.858,34.696"]
"GeoDaCenter/geoda" ["l"="20.082,27.548"]
"milleniums/underwater-object-detection-mmdetection" ["l"="22.059,35.408"]
"lin-honghui/tianchi_CountyAgriculturalBrain_top1" ["l"="29.297,35.888"]
"pytroll/pyresample" ["l"="18.879,28.194"]
"GeoscienceAustralia/dea-notebooks" ["l"="20.111,27.416"]
"microsoft/PlanetaryComputerExamples" ["l"="20.146,27.427"]
"eMapR/LT-GEE" ["l"="19.894,27.361"]
"jldowns/google_earth_engine_notebook" ["l"="19.876,27.356"]
"mortcanty/earthengine" ["l"="19.92,27.329"]
"brmagnuson/LandFallowingInEarthEngine" ["l"="19.86,27.345"]
"eMapR/TimeSync-Legacy" ["l"="19.837,27.36"]
"gee-community/ee-jupyter-contrib" ["l"="19.841,27.375"]
"tracek/gee_asset_manager" ["l"="19.873,27.391"]
"fitoprincipe/geebap" ["l"="19.845,27.348"]
"timothyb0912/pylogit" ["l"="20.246,27.787"]
"UDST/choicemodels" ["l"="20.221,27.69"]
"michelbierlaire/biogeme" ["l"="20.262,27.83"]
"ferasz/LCCM" ["l"="20.251,27.81"]
"ESA-PhiLab/OST_Notebooks" ["l"="19.918,27.486"]
"ngageoint/sarpy" ["l"="19.929,27.527"]
"senbox-org/s1tbx" ["l"="19.896,27.487"]
"birgander2/RAT" ["l"="19.889,27.57"]
"hfattahi/PySAR" ["l"="19.868,27.557"]
"ngageoint/six-library" ["l"="19.941,27.556"]
"pytroll/tutorial-satpy-half-day" ["l"="20.302,27.441"]
"unlimblue/u_net" ["l"="19.993,27.092"]
"leonardoaraujosantos/ChangeNet" ["l"="20.037,27.009"]
"kensakurada/sscdnet" ["l"="20.064,27.004"]
"xdspacelab/sscdnet" ["l"="20.036,26.993"]
"Bobholamovic/FCN-CD-PyTorch" ["l"="20.045,27.068"]
"geekysethi/Urbanization-change-detection" ["l"="20.023,26.99"]
"rcdaudt/patch_based_change_detection" ["l"="20.051,27.009"]
"aazuspan/wxee" ["l"="20.033,27.458"]
"adugnag/gee_s1_ard" ["l"="19.893,27.401"]
"awesome-spectral-indices/awesome-spectral-indices" ["l"="19.963,27.416"]
"davemlz/cubo" ["l"="19.913,27.343"]
"philippgaertner/awesome-earth-engine-apps" ["l"="19.826,27.42"]
"r-earthengine/ee_extra" ["l"="19.914,27.416"]
"TonyXuQAQ/RNGDetPlusPlus" ["l"="19.742,27.136"]
"USGS-EROS/espa-api" ["l"="20.119,27.224"]
"USGS-EROS/espa-bulk-downloader" ["l"="20.108,27.209"]
"USGS-EROS/espa-cloud-masking" ["l"="20.09,27.205"]
"Servir-Mekong/hydra-floods" ["l"="20.145,28.099"]
"samapriya/geeup" ["l"="19.881,27.412"]
"gee-community/awesome-google-earth-engine" ["l"="19.889,27.379"]
"gee-community/example-scripts" ["l"="19.862,27.383"]
"opendatacube/odc-stac" ["l"="20.094,27.454"]
"digitalearthafrica/deafrica-sandbox-notebooks" ["l"="20.147,27.363"]
"opendatacube/cube-in-a-box" ["l"="20.144,27.343"]
"opendatacube/datacube-ows" ["l"="20.158,27.336"]
"opendatacube/odc-tools" ["l"="20.155,27.35"]
"dymaxionlabs/dask-rasterio" ["l"="25.119,33.862"]
"urschrei/Geopython" ["l"="20.284,27.532"]
"lanha/DSen2" ["l"="20.08,27.263"]
"jensleitloff/CNN-Sentinel" ["l"="20.019,27.231"]
"Esri/raster-deep-learning" ["l"="19.855,25.453"]
"ceholden/landsat_preprocess" ["l"="20.181,27.302"]
"beeoda/tutorials" ["l"="20.162,27.305"]
"sarasafavi/remote-sensing-with-python" ["l"="20.102,27.368"]
"bleutner/RStoolbox" ["l"="19.351,43.529"]
"zetrun-liu/FCNs-for-road-extraction-keras" ["l"="19.751,27.043"]
"SpaceNetChallenge/RoadDetector" ["l"="19.835,27.18"]
"mitroadmaps/roadtracer" ["l"="19.777,27.155"]
"anilbatra2185/road_connectivity" ["l"="19.783,27.144"]
"snakers4/spacenet-three" ["l"="19.821,27.115"]
"DuFanXin/deep_residual_unet" ["l"="19.819,27.097"]
"openseg-group/openseg.pytorch" ["l"="31.729,37.032"]
"liaopeiyuan/ml-arsenal-public" ["l"="29.434,35.888"]
"guanfuchen/semseg" ["l"="31.732,36.966"]
"gengyanlei/segmentation_pytorch" ["l"="31.856,37.128"]
"YuansongFeng/satellite_building_detection.pytorch" ["l"="19.814,27.213"]
"DIUx-xView/xview2-baseline" ["l"="19.762,27.21"]
"gistairc/ABCDdataset" ["l"="19.791,27.215"]
"EL-BID/Building-Detection" ["l"="19.814,27.2"]
"rodekruis/automated-building-detection" ["l"="19.798,27.196"]
"DataXujing/CNN-paper2" ["l"="19.839,26.944"]
"DinhHoTongMinh/TomoSAR" ["l"="19.873,27.569"]
"uber/h3-py" ["l"="18.87,24.936"]
"sentinel-hub/field_delineation" ["l"="20.015,27.09"]
"waldnerf/decode" ["l"="20.029,27.098"]
"yulisun/INLPG" ["l"="20.04,26.916"]
"microsoft/PlanetaryComputer" ["l"="20.112,27.427"]
"prs021/fmask" ["l"="20.071,27.215"]
"remicres/otbtf" ["l"="20.13,27.284"]
"Kitware/maptk" ["l"="28.411,36.398"]
"NeoGeographyToolkit/StereoPipeline" ["l"="30.165,42.755"]
"worldbank/ML-classification-algorithms-poverty" ["l"="19.83,27.299"]
"drivendataorg/pover-t-tests" ["l"="19.793,27.305"]
"527760681/Keras-Remote-sensing-image-retrieval" ["l"="19.984,27.065"]
"GeoDaCenter/GeoDaSpace" ["l"="20.059,27.605"]
"OSGeo/grass" ["l"="18.897,24.706"]
"opengeospatial/geopackage" ["l"="18.326,25.297"]
"lixun910/geoda" ["l"="20.06,27.584"]
"Esri/arcgis-osm-editor" ["l"="19.804,25.438"]
"r-spatial/stars" ["l"="19.347,43.554"]
"spatstat/spatstat" ["l"="20.024,27.671"]
"puke3615/SceneClassify" ["l"="19.86,26.74"]
"fangfchen/AIChallenger_SceneClassification_ZJUGIVE" ["l"="19.858,26.714"]
"foamliu/Scene-Classification" ["l"="19.835,26.725"]
"chenyuntc/scene-baseline" ["l"="19.851,26.694"]
"niecongchong/RS-Scene-Classification" ["l"="19.885,26.818"]
"developmentseed/morecantile" ["l"="20.25,27.382"]
"developmentseed/cogeo-mosaic" ["l"="20.226,27.341"]
"rouault/cogserver" ["l"="20.237,27.351"]
"pysal/spaghetti" ["l"="20.201,27.56"]
"pysal/segregation" ["l"="20.234,27.596"]
"pysal/splot" ["l"="20.246,27.592"]
"hectornieto/pyTSEB" ["l"="19.395,27.193"]
"hectornieto/pyMETRIC" ["l"="19.375,27.19"]
"hectornieto/pyPro4Sail" ["l"="19.455,27.224"]
"NASA-DEVELOP/METRIC" ["l"="19.361,27.183"]
"radosuav/pyDMS" ["l"="19.373,27.205"]
"Open-ET/openet-ssebop-beta" ["l"="19.381,27.173"]
"WSWUP/pymetric" ["l"="19.395,27.172"]
"senbox-org/snap-engine" ["l"="19.818,27.496"]
"senbox-org/snap-desktop" ["l"="19.826,27.481"]
"senbox-org/s2tbx" ["l"="19.838,27.493"]
"senbox-org/snap-examples" ["l"="19.846,27.482"]
"ekoshelev/REU-AcceleratedChangeDetectioninSARImages" ["l"="19.995,26.95"]
"liumency/SRCDNet" ["l"="20.114,26.978"]
"mortcanty/CRC4Docker" ["l"="19.945,27.249"]
"anxiangSir/deeplab_v3" ["l"="19.918,27.021"]
"jiye-ML/Satellite-image-segment" ["l"="19.945,27.031"]
"WangZhenqing-RS/2021Tianchi_RS" ["l"="19.938,27.017"]
"pysal/tobler" ["l"="20.226,27.603"]
"benchmark-urbanism/cityseer-api" ["l"="20.102,27.551"]
"spatialucr/geosnap" ["l"="20.211,27.599"]
"e-sensing/sits" ["l"="19.359,43.515"]
"sentinel-hub/time-lapse" ["l"="20.122,27.271"]
"3SPP/PdRSCD" ["l"="20.111,26.905"]
"3SPP/SS-Models" ["l"="20.11,26.922"]
"olivierhagolle/peps_download" ["l"="20.127,27.25"]
"olivierhagolle/theia_download" ["l"="20.159,27.183"]
"ibamacsr/sentinelsat" ["l"="20.166,27.2"]
"vicwer/sense_classification" ["l"="19.913,26.909"]
"awesome-spectral-indices/spyndex" ["l"="19.9,27.426"]
"awesome-spectral-indices/spectral" ["l"="19.91,27.438"]
"mobigroup/gmtsar" ["l"="19.937,27.474"]
"remotesensinglab/raster4ml" ["l"="19.905,27.383"]
"DahnJ/Awesome-DEM" ["l"="20.007,27.429"]
"giswqs/geospatial" ["l"="20.047,27.452"]
"kleok/FLOODPY" ["l"="19.959,27.446"]
"datasciencecampus/laika" ["l"="19.999,27.173"]
"rogerxujiang/dstl_unet" ["l"="19.92,27.146"]
"chrieke/InstanceSegmentation_Sentinel2" ["l"="19.991,27.219"]
"stac-utils/stac-fastapi" ["l"="20.187,27.399"]
"developmentseed/rio-stac" ["l"="20.171,27.378"]
"stac-utils/pgstac" ["l"="20.222,27.363"]
"stac-utils/stactools" ["l"="20.167,27.407"]
"intake/intake-stac" ["l"="20.165,27.423"]
"azavea/franklin" ["l"="20.227,27.376"]
"developmentseed/labs-gpt-stac" ["l"="20.237,27.364"]
"mapbox/mapbox-upload" ["l"="20.304,27.424"]
"kvos/CoastSat" ["l"="19.992,27.336"]
"kvos/CoastSat.slope" ["l"="20.066,27.249"]
"chrisleaman/awesome-coastal" ["l"="20.086,27.23"]
"ydoherty/CoastSat.PlanetScope" ["l"="19.959,27.316"]
"gee-community/ee-tensorflow-notebooks" ["l"="19.9,27.347"]
"csaybar/EarthEngineMasterGIS" ["l"="19.909,27.401"]
"xitong123/gmtsar2stamps" ["l"="19.787,27.557"]
"Vooban/Smoothly-Blend-Image-Patches" ["l"="19.938,27.159"]
"ternaus/kaggle_dstl_submission" ["l"="19.889,27.125"]
"dovahcrow/patchify.py" ["l"="19.817,27.058"]
"shakasom/Deep-Learning-for-Satellite-Imagery" ["l"="19.989,27.187"]
"rcdaudt/guided_anisotropic_diffusion" ["l"="20.041,26.974"]
"Jach/radar_sar_rma" ["l"="19.872,27.614"]
"openforis/opensarkit" ["l"="19.857,27.607"]
"bakerunavco/pygmtsar" ["l"="19.822,27.57"]
"yunjunz/PySAR" ["l"="19.837,27.595"]
"bakerunavco/SSARA" ["l"="19.823,27.585"]
"radiantearth/mlhub-tutorials" ["l"="20.028,27.159"]
"geometalab/OSMDeepOD" ["l"="19.905,27.272"]
"treigerm/WaterNet" ["l"="19.922,27.262"]
"zlckanata/DeepGlobe-Road-Extraction-Challenge" ["l"="19.728,27.141"]
"wgcban/SPIN_RoadMapper" ["l"="19.704,27.128"]
"IPL-UV/pvl8dagans" ["l"="20.308,27.209"]
"jmather625/predicting-poverty-replication" ["l"="19.877,27.281"]
"sustainlab-group/africa_poverty" ["l"="19.837,27.26"]
"adrianalbert/urban-environments" ["l"="19.847,27.286"]
"ermongroup/tile2vec" ["l"="19.856,27.267"]
"gsbDBI/ExperimentData" ["l"="23.726,33.283"]
"ymcmrs/PyINT" ["l"="19.854,27.57"]
"alexsingleton/urban_analytics" ["l"="20.219,27.673"]
"GDSL-UL/Teaching_Links" ["l"="20.209,27.648"]
"CosmiQ/apls" ["l"="19.822,27.183"]
"JiehangXie/Landscape-Heath-Score" ["l"="-0.304,39.444"]
"CNES/decloud" ["l"="20.162,27.255"]
"montoyo/mcef" ["l"="20.499,27.023"]
"fnuecke/oc2" ["l"="-43.779,9.933"]
"SpongePowered/Mixin" ["l"="-43.639,9.803"]
"IgorTimofeev/MineOS" ["l"="-43.762,9.981"]
"FabricMC/fabric" ["l"="-43.74,9.776"]
"jellysquid3/phosphor-fabric" ["l"="-43.815,9.81"]
"w-smesnoj/portfolio-template" ["l"="20.474,27.108"]
"mojodna/marblecutter-virtual" ["l"="20.309,27.332"]
"radiantearth/tiles.rdnt.io" ["l"="20.326,27.319"]
"shijuanchen/forest_degradation_georgia" ["l"="19.834,27.395"]
"ESA-PhiLab/radiometric-slope-correction" ["l"="19.839,27.408"]
"parevalo/gee-ccdc-tools" ["l"="19.818,27.401"]
"buptchan/scene-classification" ["l"="19.85,26.67"]
"yya007/SceneClassification" ["l"="19.834,26.677"]
"geoalchemy/geoalchemy" ["l"="20.361,27.433"]
"geopython/OWSLib" ["l"="20.312,27.374"]
"geopython/pygeoapi" ["l"="20.272,27.388"]
"CrunchyData/pg_featureserv" ["l"="18.817,24.676"]
"developmentseed/geojson-pydantic" ["l"="20.32,27.405"]
"kvesteri/sqlalchemy-utils" ["l"="22.924,3.5"]
"postgis/postgis" ["l"="18.74,24.755"]
"pgpointcloud/pointcloud" ["l"="19.578,26.349"]
"cogeotiff/cog-spec" ["l"="20.268,27.331"]
"lambgeo/docker-lambda" ["l"="20.219,27.329"]
"mapbox/rio-glui" ["l"="20.249,27.335"]
"savasozkan/cloud_detection" ["l"="20.328,27.241"]
"OpenGeoscience/geojs" ["l"="28.377,36.352"]
"locationtech-labs/geopyspark" ["l"="18.649,25.029"]
"locationtech/geotrellis" ["l"="18.669,24.932"]
"ellisonbg/ipyleaflet" ["l"="21.428,28.895"]
"nshaud/DeepHyperX" ["l"="19.864,26.43"]
"phelber/EuroSAT" ["l"="20.015,27.205"]
"azavea/raster-vision-qgis" ["l"="19.956,27.219"]
"raster-foundry/raster-foundry" ["l"="18.705,25"]
"developmentseed/spacenet-data" ["l"="19.937,27.279"]
"larsroemheld/OSM-HOT-ConvNet" ["l"="19.929,27.247"]
"opengeospatial/ogcapi-features" ["l"="20.33,27.355"]
"geopython/pywps" ["l"="20.355,27.368"]
"geopandas/pyogrio" ["l"="20.202,27.451"]
"geopython/pycsw" ["l"="20.373,27.356"]
"azavea/pystac" ["l"="20.375,27.391"]
"g07kore/Google-Earth-Engine-Python-Examples" ["l"="19.822,27.344"]
"tylere/ee-jupyter-examples" ["l"="19.819,27.366"]
"fortitude94deng/huawei_remote-sensing" ["l"="19.901,26.885"]
"Christiaanvandertol/SCOPE" ["l"="19.489,27.253"]
"Christiaanvandertol/Fluspect" ["l"="19.468,27.253"]
"calebrob6/land-cover" ["l"="20.02,27.259"]
"microsoft/landcover" ["l"="20.019,27.303"]
"raoofnaushad/Land-Cover-Classification-using-Sentinel-2-Dataset" ["l"="20.036,27.172"]
"kuanb/peartree" ["l"="19.855,25.992"]
"UDST/osmnet" ["l"="20.187,27.654"]
"remix/partridge" ["l"="19.878,26.001"]
"conveyal/r5" ["l"="19.838,26.04"]
"Esri/public-transit-tools" ["l"="19.834,26.056"]
"ipeaGIT/r5r" ["l"="19.281,43.611"]
"CxAalto/gtfspy" ["l"="19.868,25.984"]
"r-transit/tidytransit" ["l"="19.262,43.611"]
"dingmyu/Pytorch-Topology-Aware-Delineation" ["l"="19.732,27.158"]
"Tong-ZHAO/topology_aware_delineation" ["l"="19.694,27.154"]
"Junjue-Wang/LoveCS" ["l"="20.161,26.913"]
"Luffy03/DCA" ["l"="20.173,26.889"]
"renelikestacos/Google-Earth-Engine-JavaScript-Examples" ["l"="19.874,27.367"]
"fitoprincipe/ipygee" ["l"="19.856,27.363"]
"geohackweek/GoogleEarthEngine" ["l"="19.88,27.344"]
"samsammurphy/ee-atmcorr-timeseries" ["l"="19.786,27.341"]
"MarcYin/SIAC_GEE" ["l"="19.731,27.334"]
"ndminhhus/geeguide" ["l"="19.708,27.334"]
"umwilm/SEN2COR" ["l"="20.205,27.15"]
"umwilm/SEN2THREE" ["l"="20.225,27.13"]
"scikit-image/skimage-tutorials" ["l"="20.233,27.403"]
"ericmjl/dl-workshop" ["l"="23.836,33.971"]
"scikit-image/scikit-image" ["l"="23.029,4.468"]
"lopuhin/kaggle-dstl" ["l"="19.866,27.103"]
"toshi-k/kaggle-satellite-imagery-feature-detection" ["l"="19.841,27.081"]
"DeepVoltaire/Dstl-Satellite-Imagery-Feature-Detection" ["l"="19.853,27.093"]
"senbox-org/s3tbx" ["l"="19.794,27.495"]
"geopandas/xyzservices" ["l"="20.144,27.519"]
"geospatial-jeff/aiocogeo" ["l"="20.202,27.355"]
"randyzwitch/streamlit-folium" ["l"="22.933,32.092"]
"jrieke/best-of-streamlit" ["l"="22.954,32.091"]
"mcuttler/CoastSat.islands" ["l"="20.092,27.218"]
"radiantearth/radiant-mlhub" ["l"="20.039,27.131"]
"radiantearth/geo-ml-model-catalog" ["l"="20.056,27.137"]
"montoyo/webdisplays" ["l"="20.524,27.015"]
"ds58/mcef" ["l"="20.51,26.999"]
"duckdblabs/duckdb_spatial" ["l"="20.053,27.566"]
"isaacbrodsky/h3-duckdb" ["l"="20.035,27.604"]
"tschaub/gpq" ["l"="20.029,27.628"]
"klarrieu/RiverREM" ["l"="19.868,27.465"]
"DahnJ/EO-jobs" ["l"="19.963,27.462"]
"CosmiQ/solaris_tutorials" ["l"="19.94,27.228"]
"CosmiQ/simrdwn" ["l"="34.908,36.797"]
"CartoDB/cartoframes" ["l"="18.748,24.192"]
"mapbox/mbview" ["l"="18.677,24.681"]
"transitland/transitland-processing-animation" ["l"="19.827,26.021"]
"mapbox/mapbox-isochrone" ["l"="20.114,27.557"]
"scikit-mobility/tutorials" ["l"="20.15,27.631"]
"scikit-mobility/DeepLearning4HumanMobility" ["l"="20.151,27.671"]
"lalessan/scales_human_mobility" ["l"="20.225,27.627"]
"scikit-mobility/DeepGravity" ["l"="20.157,27.65"]
"anitagraser/movement-analysis-tools" ["l"="20.166,27.635"]
"waddell/CP255" ["l"="20.177,27.677"]
"microsoft/farmvibes-ai" ["l"="19.94,27.316"]
"Project-AgML/AgML" ["l"="19.881,27.305"]
"Agri-Hub/Callisto-Dataset-Collection" ["l"="19.916,27.191"]
"google-research/arco-era5" ["l"="19.86,27.306"]
"WangZhenqing-RS/GF2Preprocess" ["l"="19.655,27.278"]
"giswqs/geospatial-ml" ["l"="20.14,27.399"]
"OSGeo/PROJ" ["l"="18.847,24.774"]
"Turbo87/utm" ["l"="20.324,27.437"]
"GenericMappingTools/pygmt" ["l"="19.711,28.165"]
"CartoDB/research-public" ["l"="20.285,27.618"]
"timwis/csv-schema" ["l"="20.432,27.584"]
"pascal-schetelat/Slope" ["l"="20.458,27.603"]
"HHammond/PrettyPandas" ["l"="21.547,28.923"]
"UDST/sanfran_urbansim" ["l"="20.185,27.71"]
"UDST/synthpop" ["l"="20.201,27.725"]
"UDST/activitysim" ["l"="20.218,27.71"]
"ActivitySim/activitysim" ["l"="29.972,44.972"]
"abmgis/abmgis" ["l"="17.098,39.399"]
"UDST/spandex" ["l"="20.202,27.703"]
"sidewalklabs/doppelganger" ["l"="20.221,27.735"]
"UDST/urbansim_templates" ["l"="20.186,27.698"]
"marcusyoung/otp-tutorial" ["l"="20.191,27.748"]
"darribas/gds_env" ["l"="20.437,27.522"]
"microsoft/planetary-computer-apis" ["l"="20.209,27.417"]
"microsoft/planetary-computer-sdk-for-python" ["l"="20.215,27.43"]
"microsoft/AIforEarthDataSets" ["l"="20.084,27.403"]
"microsoft/planetary-computer-containers" ["l"="20.182,27.441"]
"microsoft/planetary-computer-hub" ["l"="20.201,27.432"]
"TUM-LMF/BreizhCrops" ["l"="19.86,26.881"]
"TUM-LMF/MTLCC-pytorch" ["l"="19.876,26.87"]
"SERVIR/water-quality-gee" ["l"="19.89,27.334"]
"charlotte-pel/igarss2019-dl4sits" ["l"="19.922,26.932"]
"pysal/momepy" ["l"="20.198,27.543"]
"landsat-pds/landsat_ingestor" ["l"="20.174,27.235"]
"gipit/gippy" ["l"="20.201,27.247"]
"jwass/mplleaflet" ["l"="20.387,27.565"]
"rossant/smopy" ["l"="20.467,27.576"]
"kjordahl/geopandas" ["l"="21.762,28.739"]
"perrygeo/python-raster-stats" ["l"="21.798,28.699"]
"JosPolfliet/pandas-profiling" ["l"="21.564,28.899"]
"jakevdp/mpld3" ["l"="21.644,28.797"]
"carsonfarmer/python_geospatial" ["l"="20.462,27.66"]
"ljwolf/cenpy" ["l"="-1.5,-27.921"]
"WangZhenqing-RS/2021rsipac_changeDetection_TOP4" ["l"="20.096,26.961"]
"78666621/2021rsipac_changeDetection_TOP5" ["l"="20.108,26.957"]
"yulisun/NPSG" ["l"="20.035,26.895"]
"yulisun/IRG-McS" ["l"="20.039,26.875"]
"jwwangchn/BONAI" ["l"="19.746,27.077"]
"koldunovn/python_for_geosciences" ["l"="19.755,28.349"]
"uwcartlab/webmapping" ["l"="-12.671,-17.989"]
"mncosta/biogeme_tutorial" ["l"="20.269,27.853"]
"carlesventura/iterative-deep-learning" ["l"="19.752,27.16"]
"mitroadmaps/gomapinfer" ["l"="19.744,27.169"]
"mitroadmaps/roadtagger" ["l"="19.715,27.166"]
"geopython/pygeometa" ["l"="20.395,27.363"]
"geopython/PyWPS" ["l"="20.371,27.34"]
"tomkralidis/csw4js" ["l"="20.403,27.341"]
"OSGeo/Cat-Interop" ["l"="20.456,27.318"]
"geo-python/site" ["l"="19.992,27.56"]
"Azure/pixel_level_land_classification" ["l"="20,27.235"]
"KGPML/Hyperspectral" ["l"="19.89,26.462"]
"tropicalmentat/land-cover-to-land-use-classification" ["l"="19.957,27.2"]
"pangeo-data/rechunker" ["l"="19.013,28.102"]
"davidbrochart/xarray_leaflet" ["l"="20.126,27.509"]
"fmaussion/salem" ["l"="18.874,28.155"]
"xarray-contrib/datatree" ["l"="18.995,28.093"]
"nasaharvest/cropharvest" ["l"="19.977,27.668"]
"ellaampy/CropTypeMapping" ["l"="19.961,27.695"]
"thho/StaMPS_Visualizer" ["l"="19.814,27.518"]
"earthlab/earthlab.github.io" ["l"="20.08,27.524"]
"cgre-aachen/gemgis" ["l"="19.729,28.321"]
"wrobstory/vincent" ["l"="21.703,28.799"]
"yhat/ggplot" ["l"="21.672,28.804"]
"ellisonbg/altair" ["l"="21.564,28.863"]
"iamaziz/PyDataset" ["l"="21.572,28.883"]
"antran89/road_visualizer" ["l"="19.744,27.118"]
"xzq-njust/CVNet" ["l"="19.758,27.068"]
"karolzak/keras-unet" ["l"="19.987,27.117"]
"zizhaozhang/unet-tensorflow-keras" ["l"="20.159,27.059"]
"DIUx-xView/xview2-scoring" ["l"="19.735,27.211"]
"yulisun/SCASC" ["l"="20.039,26.857"]
"ShaoRuizhe/SUNet-change_detection" ["l"="20.165,27.009"]
"daifeng2016/Change-Detection-Dataset-for-High-Resolution-Satellite-Imagery" ["l"="20.162,27.022"]
"geonetwork/core-geonetwork" ["l"="20.429,27.354"]
"geonetwork/docker-geonetwork" ["l"="20.464,27.35"]
"geosolutions-it/MapStore2" ["l"="18.843,24.795"]
"inspire-eu-validation/community" ["l"="20.488,27.36"]
"boundlessgeo/gsconfig" ["l"="18.633,24.909"]
"locationtech/geogig" ["l"="18.64,24.787"]
"TerriaJS/TerriaMap" ["l"="18.535,26.52"]
"geonetwork/doc" ["l"="20.454,27.34"]
"opengeospatial/WFS_FES" ["l"="20.512,27.337"]
"soyan1999/segmentation_hrnet_keras" ["l"="19.79,26.953"]
"niecongchong/DANet-keras" ["l"="31.769,37.345"]
"yuanyuanli85/tf-hrnet" ["l"="19.783,26.934"]
"VXallset/deep-high-resolution-net.TensorFlow" ["l"="19.755,26.916"]
"AI-Chen/HRNet-V2" ["l"="19.771,26.905"]
"CS-SI/eodag" ["l"="20.098,27.413"]
"stac-utils/qgis-stac-plugin" ["l"="19.987,27.514"]
"saeedkhaki92/CNN-RNN-Yield-Prediction" ["l"="19.757,27.288"]
"meet-sapu/Crop-Yield-Prediction-Using-Satellite-Imagery" ["l"="19.823,27.243"]
"microsoft/PlanetaryComputerDataCatalog" ["l"="20.261,27.406"]
"stac-utils/stac-server" ["l"="20.257,27.353"]
"stac-utils/titiler-pgstac" ["l"="20.213,27.373"]
"bair-climate-initiative/metaearth" ["l"="20.114,27.48"]
"andrea-ballatore/open-geo-data-education" ["l"="20.148,27.607"]
"andrea-ballatore/teaching-programming-for-gis" ["l"="20.136,27.646"]
"kjordahl/SciPy-Tutorial-2015" ["l"="20.5,27.686"]
"jfilter/split-folders" ["l"="19.75,27.003"]
"edzer/sp" ["l"="19.989,27.738"]
"giswqs/aws-open-data-stac" ["l"="20.003,27.522"]
"giswqs/maxar-open-data" ["l"="20,27.54"]
"mccarthyryanc/folium_gee" ["l"="19.795,27.38"]
"tylere/AGU2017" ["l"="19.775,27.368"]
"gyrrei/ReforesTree" ["l"="19.937,27.204"]
"Orion-AI-Lab/S4A" ["l"="19.893,27.094"]
"bcdev/beam" ["l"="19.763,27.512"]
"jdbcode/ee-rgb-timeseries" ["l"="19.775,27.424"]
"RemotePixel/amazonlinux-gdal" ["l"="20.225,27.313"]
"vincentsarago/lambda-tiler" ["l"="20.239,27.313"]
"samapriya/gee_asset_manager_addon" ["l"="19.846,27.424"]
"Nowosad/OGH_summer_school_2022" ["l"="20.023,27.552"]
"mszell/bikenwgrowth" ["l"="20.033,27.564"]
"geocompr/py" ["l"="20.02,27.572"]
"ternaus/TernausNetV2" ["l"="29.367,35.805"]
"jiangxu87/dstl_unet" ["l"="19.847,27.112"]
"bhavesh907/Crop-Classification" ["l"="19.878,27.229"]
"sentinel-hub/field-delineation" ["l"="19.997,27.159"]
"simongrest/farm-pin-crop-detection-challenge" ["l"="20.016,27.178"]
"lukasliebel/dfc2020_baseline" ["l"="20.173,27.109"]
"robintw/PyProSAIL" ["l"="19.504,27.271"]
"pietz/unet-keras" ["l"="20.218,27.033"]
"ankurhanda/tf-unet" ["l"="20.197,27.053"]
"Kaido0/Brain-Tissue-Segment-Keras" ["l"="20.193,27.036"]
"ZFTurbo/ZF_UNET_224_Pretrained_Model" ["l"="29.392,35.977"]
"TonyXuQAQ/Topo-boundary" ["l"="19.719,27.104"]
"ErenTuring/SIINet" ["l"="19.718,27.118"]
"chrieke/prettymapp" ["l"="19.972,27.538"]
"concutere/sg" ["l"="20.494,27.618"]
"Ziqi-Li/FastGWR" ["l"="20.253,27.626"]
"pysal/spreg" ["l"="20.265,27.64"]
"thengl/GeoMLA" ["l"="19.344,43.497"]
"bopen/elevation" ["l"="19.965,27.509"]
"tkrajina/srtm.py" ["l"="-25.637,-23.293"]
"osin-vladimir/kaggle-satellite-imagery-feature-detection" ["l"="20.012,27.143"]
"marcusyoung/otpr" ["l"="20.19,27.781"]
"zecojls/tagee" ["l"="19.865,27.326"]
"mitmul/ssai" ["l"="19.901,27.249"]
"mahmoudmohsen213/airs" ["l"="19.889,27.261"]
"mathildor/TF-SegNet" ["l"="31.553,36.754"]
"aurotripathy/ssd-spacenet" ["l"="19.878,27.25"]
"mapnificent/mapnificent" ["l"="20.276,27.74"]
"mapnificent/mapnificent_cities" ["l"="20.305,27.769"]
"CommuteStream/tflgtfs" ["l"="20.286,27.774"]
"srihari-humbarwadi/cityscapes-segmentation-with-Unet" ["l"="19.886,26.996"]
"up42/s2-superresolution" ["l"="20.106,27.233"]
"sat-utils/sat-process" ["l"="20.288,27.274"]
"Lihy256/MSCDUnet" ["l"="20.151,27.085"]
"davemlz/spyndex" ["l"="19.944,27.455"]
"davemlz/spectral" ["l"="19.864,27.451"]
"giswqs/GEE-Courses" ["l"="20.199,27.337"]
"ajwdewit/pcse" ["l"="19.405,27.272"]
"ajwdewit/pcse_notebooks" ["l"="19.397,27.254"]
"ajwdewit/WOFOST_crop_parameters" ["l"="19.382,27.259"]
"ajwdewit/WOFOST" ["l"="19.406,27.296"]
"APSIMInitiative/ApsimX" ["l"="19.359,27.274"]
"DSSAT/dssat-csm-os" ["l"="19.383,27.287"]
"pangeo-data/pangeo-docker-images" ["l"="20.171,27.455"]
"cenpy-devs/cenpy" ["l"="-1.57,-27.926"]
"CS-SI/eodag-sentinelsat" ["l"="20.13,27.398"]
"airbusgeo/cogger" ["l"="20.29,27.324"]
"avanetten/spacenet_buildings_exploration" ["l"="19.861,27.233"]
"SpaceNetChallenge/BuildingDetectorVisualizer" ["l"="19.864,27.218"]
"yangsiyu007/SpaceNetExploration" ["l"="19.845,27.221"]
"NRCan/geo-deep-learning" ["l"="20.439,27.389"]
"mapproxy/mapproxy" ["l"="18.726,24.667"]
"geopython/GeoHealthCheck" ["l"="18.851,24.627"]
"opengeo/GeoGit" ["l"="18.695,24.463"]
"nvkelso/geo-how-to" ["l"="18.667,24.507"]
"FIBLAB/MoveSim" ["l"="20.146,27.709"]
"MarcSkovMadsen/awesome-panel-extensions" ["l"="20.048,27.745"]
"MarcSkovMadsen/panel-highcharts" ["l"="20.041,27.73"]
"pyviz/panel" ["l"="21.287,28.749"]
"LeonvanKouwen/elvis" ["l"="20.08,27.716"]
"jmosbacher/pydantic-panel" ["l"="20.066,27.738"]
"Hoxbro/panel-multi" ["l"="20.059,27.724"]
"felt/tippecanoe" ["l"="18.833,24.633"]
"chrisyeh96/africa_poverty_clean" ["l"="19.805,27.252"]
"RaphaelGrandin/ROI_PAC-Sentinel1" ["l"="19.778,27.579"]
"cryotools/osaris" ["l"="19.783,27.603"]
"simondaout/PyGdalSAR" ["l"="19.818,27.603"]
"gjoseph92/geogif" ["l"="20.049,27.489"]
"martinfleis/xvec" ["l"="20.021,27.534"]
"pangeo-data/cog-best-practices" ["l"="20.167,27.359"]
"developmentseed/tifeatures" ["l"="20.304,27.349"]
"davidbrochart/xtrude" ["l"="20.095,27.533"]
"opengeospatial/ogcapi-records" ["l"="20.364,27.324"]
"GispoCoding/GlobeBuilder" ["l"="19.754,27.452"]
"XiaogangHe/pyDSSAT" ["l"="19.359,27.294"]
"APSIMInitiative/APSIMClassic" ["l"="19.334,27.29"]
"femiguez/apsimx" ["l"="19.336,27.259"]
"RDCEP/psims" ["l"="19.328,27.274"]
"wangle53/TransCD" ["l"="20.08,26.96"]
"Luffy03/DBFNet" ["l"="20.187,26.856"]
"opendatacube/odc-geo" ["l"="20.084,27.484"]
"opengeospatial/oapi_common" ["l"="20.539,27.341"]
"opengeospatial/OGC-Technology-Trends" ["l"="20.553,27.329"]
"pysal/inequality" ["l"="20.266,27.621"]
"davemlz/awesome-ee-spectral-indices" ["l"="19.809,27.461"]
"yongyehuang/ocean-of-knowledge" ["l"="19.847,26.649"]
"Andy1621/seg-for-fun" ["l"="19.996,26.889"]
"OpenTopography/RiverREM" ["l"="19.786,27.475"]
"susurrant/rs-img-classification" ["l"="19.93,27.137"]
"descarteslabs/descarteslabs-python" ["l"="20.102,27.489"]
"stac-extensions/classification" ["l"="20.273,27.362"]
"georgebv/coastlib" ["l"="20.114,27.19"]
"chrisleaman/py-wave-runup" ["l"="20.124,27.197"]
"conlin-matt/SurfRCaT" ["l"="20.1,27.194"]
"fpl/scihub" ["l"="20.191,27.169"]
"stac-utils/stac-pydantic" ["l"="20.218,27.407"]
"darrenwiens/stac-nb" ["l"="20.227,27.418"]
"carpentries-incubator/geospatial-python" ["l"="20.059,27.535"]
"edzer/gstat" ["l"="19.973,27.772"]
"yihui/mime" ["l"="20.604,43.54"]
"developmentseed/tilebench" ["l"="20.26,27.313"]
"cogeotiff/rio-tiler-mosaic" ["l"="20.274,27.309"]
"Luffy03/CISC-R" ["l"="20.198,26.832"]
"michaeltrs/DeepSatModels" ["l"="19.897,26.965"]
"Jhsmit/PyHDX" ["l"="20.052,27.768"]
"jachym/pywps-4" ["l"="20.4,27.321"]
"USGS-EROS/espa-land-surface-temperature" ["l"="20.106,27.178"]
"dedetmix/gmt5sar2stamps_sbas" ["l"="19.752,27.57"]
"RemotePixel/viewer.remotepixel.ca" ["l"="20.274,27.258"]
"USGS-EROS/espa-product-formatter" ["l"="20.045,27.19"]
"gipit/gips" ["l"="20.23,27.224"]
"geoblacklight/geoblacklight" ["l"="20.523,27.291"]
"OpenGeoMetadata/metadatarepository" ["l"="20.55,27.273"]
"geoblacklight/geoblacklight-schema" ["l"="20.55,27.29"]
"INSPIRE-MIF/gp-ogc-api-features" ["l"="20.515,27.357"]
"etf-validator/etf-webapp" ["l"="20.515,27.37"]
"adamoferro/dsarsim" ["l"="19.834,27.621"]
}