digraph G {
"shopizer-ecommerce/shopizer" -> "BroadleafCommerce/BroadleafCommerce"
"shopizer-ecommerce/shopizer" -> "spring-io/sagan" ["e"=1]
"shopizer-ecommerce/shopizer" -> "qalingo/qalingo-engine"
"shopizer-ecommerce/shopizer" -> "JohnnyLe/Modern-Ecommerce"
"shopizer-ecommerce/shopizer" -> "vito16/shop" ["e"=1]
"shopizer-ecommerce/shopizer" -> "rohitghatol/spring-boot-microservices"
"shopizer-ecommerce/shopizer" -> "BroadleafCommerce/DemoSite"
"shopizer-ecommerce/shopizer" -> "ikismail/ShoppingCart"
"shopizer-ecommerce/shopizer" -> "codecentric/spring-boot-admin" ["e"=1]
"shopizer-ecommerce/shopizer" -> "spring-projects/spring-petclinic" ["e"=1]
"shopizer-ecommerce/shopizer" -> "vatri/spring-rest-ecommerce"
"shopizer-ecommerce/shopizer" -> "xubinux/xbin-store" ["e"=1]
"shopizer-ecommerce/shopizer" -> "MyCollab/mycollab" ["e"=1]
"shopizer-ecommerce/shopizer" -> "NIT-Software/Modern-Ecommerce"
"shopizer-ecommerce/shopizer" -> "hs-web/hsweb-framework" ["e"=1]
"liferay/liferay-blade-samples" -> "liferay/liferay-blade-cli"
"liferay/liferay-blade-samples" -> "yasuflatland-lf/damascus"
"liferay/liferay-blade-samples" -> "peerkar/liferay-gsearch"
"liferay/liferay-blade-samples" -> "yasuflatland-lf/liferay-dummy-factory"
"liferay/liferay-blade-samples" -> "nhpatt/liferay-devcon-appointment"
"liferay/liferay-blade-samples" -> "rotty3000/blade"
"liferay/liferay-blade-samples" -> "xtivia/dxp-rest-example"
"liferay/liferay-blade-samples" -> "lgdd/liferay-starter"
"liferay/liferay-blade-samples" -> "liferay/liferay-frontend-projects"
"liferay/liferay-blade-samples" -> "liferay/liferay-docs"
"liferay/liferay-blade-samples" -> "emiloberg/liferay-ddmtool"
"ikismail/ShoppingCart" -> "MoonSulong/Ecommerce"
"ikismail/ShoppingCart" -> "vatri/spring-rest-ecommerce"
"ikismail/ShoppingCart" -> "reljicd/spring-boot-shopping-cart"
"ikismail/ShoppingCart" -> "khozema-nullwala/online-shopping"
"ikismail/ShoppingCart" -> "antkaynak/Keyist-Ecommerce"
"ikismail/ShoppingCart" -> "zhulinn/SpringBoot-Angular7-Online-Shopping-Store"
"ikismail/ShoppingCart" -> "foysal-mahmud/E-BookShop----Spring-boot"
"ikismail/ShoppingCart" -> "TouhidurRahamanKhan/Online-shopping-Spring-MVC-java-config-mysql-hibernate"
"ikismail/ShoppingCart" -> "merikbest/OnlineShop"
"ikismail/ShoppingCart" -> "JohnnyLe/Modern-Ecommerce"
"ikismail/ShoppingCart" -> "syqu22/spring-boot-shop-sample"
"ikismail/ShoppingCart" -> "MITESHPUTHRANNEU/Shopping-Cart-Spring-MVC-Hibernate-Application"
"devdcores/BookStoreApp-Distributed-Application" -> "idugalic/micro-ecommerce"
"devdcores/BookStoreApp-Distributed-Application" -> "ujjavaldesai07/spring-boot-react-ecommerce-app"
"devdcores/BookStoreApp-Distributed-Application" -> "RainbowForest/e-commerce-microservices"
"devdcores/BookStoreApp-Distributed-Application" -> "merikbest/ecommerce-spring-reactjs"
"devdcores/BookStoreApp-Distributed-Application" -> "SelimHorri/ecommerce-microservice-backend-app"
"devdcores/BookStoreApp-Distributed-Application" -> "antkaynak/Keyist-Ecommerce"
"devdcores/BookStoreApp-Distributed-Application" -> "mohamed-taman/Springy-Store-Microservices"
"devdcores/BookStoreApp-Distributed-Application" -> "mostafacs/ecommerce-microservices-spring-reactive-webflux"
"devdcores/BookStoreApp-Distributed-Application" -> "venkataravuri/e-commerce-microservices-sample"
"devdcores/BookStoreApp-Distributed-Application" -> "sivaprasadreddy/spring-boot-microservices-series"
"boylegu/SpringBoot-vue" -> "jonashackt/spring-boot-vuejs"
"boylegu/SpringBoot-vue" -> "Heeexy/SpringBoot-Shiro-Vue" ["e"=1]
"boylegu/SpringBoot-vue" -> "xwjie/ElementVueSpringbootCodeTemplate" ["e"=1]
"boylegu/SpringBoot-vue" -> "OptionalDay/spring-cloud-vue" ["e"=1]
"boylegu/SpringBoot-vue" -> "lcw2004/one" ["e"=1]
"boylegu/SpringBoot-vue" -> "leelance/spring-boot-all" ["e"=1]
"boylegu/SpringBoot-vue" -> "hs-web/hsweb-framework" ["e"=1]
"boylegu/SpringBoot-vue" -> "wuyouzhuguli/FEBS-Vue" ["e"=1]
"boylegu/SpringBoot-vue" -> "lenve/VBlog" ["e"=1]
"boylegu/SpringBoot-vue" -> "PanJiaChen/vueAdmin-template" ["e"=1]
"boylegu/SpringBoot-vue" -> "roncoo/spring-boot-demo" ["e"=1]
"boylegu/SpringBoot-vue" -> "Exrick/x-boot" ["e"=1]
"boylegu/SpringBoot-vue" -> "abel533/MyBatis-Spring-Boot" ["e"=1]
"boylegu/SpringBoot-vue" -> "zhangxd1989/springboot-dubbox" ["e"=1]
"boylegu/SpringBoot-vue" -> "lihengming/spring-boot-api-project-seed" ["e"=1]
"dangeabunea/RomanianCoderExamples" -> "mrin9/Angular-SpringBoot-REST-JWT"
"dangeabunea/RomanianCoderExamples" -> "TechPrimers/jwt-security-example"
"dangeabunea/RomanianCoderExamples" -> "callicoder/spring-boot-file-upload-download-rest-api-example"
"dangeabunea/RomanianCoderExamples" -> "koushikkothagal/spring-security-jwt"
"dangeabunea/RomanianCoderExamples" -> "isopropylcyanide/Jwt-Spring-Security-JPA"
"dangeabunea/RomanianCoderExamples" -> "koushikkothagal/spring-security-jpa"
"szerhusenBC/jwt-spring-security-demo" -> "bfwg/springboot-jwt-starter"
"szerhusenBC/jwt-spring-security-demo" -> "svlada/springboot-security-jwt"
"szerhusenBC/jwt-spring-security-demo" -> "murraco/spring-boot-jwt"
"szerhusenBC/jwt-spring-security-demo" -> "jwtk/jjwt" ["e"=1]
"szerhusenBC/jwt-spring-security-demo" -> "brahalla/Cerberus"
"szerhusenBC/jwt-spring-security-demo" -> "Baeldung/spring-security-oauth"
"szerhusenBC/jwt-spring-security-demo" -> "spring-projects/spring-security-oauth" ["e"=1]
"szerhusenBC/jwt-spring-security-demo" -> "spring-projects/spring-data-examples" ["e"=1]
"szerhusenBC/jwt-spring-security-demo" -> "sqshq/PiggyMetrics"
"szerhusenBC/jwt-spring-security-demo" -> "spring-guides/tut-spring-security-and-angular-js"
"szerhusenBC/jwt-spring-security-demo" -> "codecentric/spring-boot-admin" ["e"=1]
"szerhusenBC/jwt-spring-security-demo" -> "callicoder/spring-security-react-ant-design-polls-app"
"szerhusenBC/jwt-spring-security-demo" -> "auth0/java-jwt" ["e"=1]
"szerhusenBC/jwt-spring-security-demo" -> "spring-projects/spring-security" ["e"=1]
"szerhusenBC/jwt-spring-security-demo" -> "rohitghatol/spring-boot-microservices"
"liferay/liferay-portal" -> "liferay/liferay-plugins"
"liferay/liferay-portal" -> "liferay/liferay-docs"
"liferay/liferay-portal" -> "liferay/liferay-blade-samples"
"liferay/liferay-portal" -> "liferay/liferay-ide"
"liferay/liferay-portal" -> "liferay/alloy-ui"
"liferay/liferay-portal" -> "brianchandotcom/liferay-portal"
"liferay/liferay-portal" -> "liferay/clay"
"liferay/liferay-portal" -> "liferay/liferay-faces"
"liferay/liferay-portal" -> "liferay/liferay-maven-support"
"liferay/liferay-portal" -> "BroadleafCommerce/BroadleafCommerce"
"liferay/liferay-portal" -> "liferay/liferay-frontend-projects"
"liferay/liferay-portal" -> "liferay/liferay-docker"
"liferay/liferay-portal" -> "yasuflatland-lf/liferay-dummy-factory"
"liferay/liferay-portal" -> "peerkar/liferay-gsearch"
"liferay/liferay-portal" -> "liferay/liferay-screens"
"livelessons-spring/building-microservices" -> "rohitghatol/spring-boot-microservices"
"livelessons-spring/building-microservices" -> "anilallewar/microservices-basics-spring-boot"
"livelessons-spring/building-microservices" -> "piomin/sample-spring-microservices"
"livelessons-spring/building-microservices" -> "callistaenterprise/blog-microservices"
"livelessons-spring/building-microservices" -> "PacktPublishing/Spring-Microservices"
"livelessons-spring/building-microservices" -> "joshlong/bootiful-microservices"
"livelessons-spring/building-microservices" -> "ewolff/microservice"
"livelessons-spring/building-microservices" -> "apssouza22/java-microservice"
"livelessons-spring/building-microservices" -> "kbastani/spring-cloud-microservice-example"
"livelessons-spring/building-microservices" -> "paulc4/microservices-demo"
"livelessons-spring/building-microservices" -> "joshlong/the-spring-rest-stack" ["e"=1]
"livelessons-spring/building-microservices" -> "sivaprasadreddy/spring-boot-microservices-series"
"livelessons-spring/building-microservices" -> "kennyk65/Microservices-With-Spring-Student-Files"
"livelessons-spring/building-microservices" -> "kbastani/spring-cloud-event-sourcing-example"
"livelessons-spring/building-microservices" -> "joshlong/cloud-native-workshop"
"royclarkson/spring-rest-service-oauth" -> "dynamind/spring-boot-security-oauth2-minimal"
"royclarkson/spring-rest-service-oauth" -> "dsyer/sparklr-boot"
"royclarkson/spring-rest-service-oauth" -> "iainporter/oauth2-provider"
"royclarkson/spring-rest-service-oauth" -> "rajithd/spring-boot-oauth2"
"royclarkson/spring-rest-service-oauth" -> "dsyer/spring-security-angular"
"royclarkson/spring-rest-service-oauth" -> "spring-projects/spring-security-oauth" ["e"=1]
"royclarkson/spring-rest-service-oauth" -> "brahalla/Cerberus"
"royclarkson/spring-rest-service-oauth" -> "rohitghatol/spring-boot-microservices"
"royclarkson/spring-rest-service-oauth" -> "FrontierPsychiatrist/spring-oauth-example"
"royclarkson/spring-rest-service-oauth" -> "joshlong/the-spring-rest-stack" ["e"=1]
"royclarkson/spring-rest-service-oauth" -> "iainporter/rest-java"
"royclarkson/spring-rest-service-oauth" -> "making/oauth2-sso-demo"
"royclarkson/spring-rest-service-oauth" -> "Robbert1/boot-stateless-auth"
"royclarkson/spring-rest-service-oauth" -> "FutureProcessing/spring-boot-security-example"
"royclarkson/spring-rest-service-oauth" -> "absolutegalaber/jwt-oauth2-example"
"cer/event-sourcing-examples" -> "cer/microservices-examples"
"cer/event-sourcing-examples" -> "kbastani/spring-cloud-event-sourcing-example"
"cer/event-sourcing-examples" -> "kbastani/spring-cloud-microservice-example"
"cer/event-sourcing-examples" -> "eventuate-local/eventuate-local"
"cer/event-sourcing-examples" -> "microservices-patterns/ftgo-application"
"cer/event-sourcing-examples" -> "AxonFramework/AxonFramework" ["e"=1]
"cer/event-sourcing-examples" -> "VaughnVernon/IDDD_Samples" ["e"=1]
"cer/event-sourcing-examples" -> "citerus/dddsample-core" ["e"=1]
"cer/event-sourcing-examples" -> "rohitghatol/spring-boot-microservices"
"cer/event-sourcing-examples" -> "eventuate-examples/es-kanban-board"
"cer/event-sourcing-examples" -> "paulc4/microservices-demo"
"cer/event-sourcing-examples" -> "gregoryyoung/m-r" ["e"=1]
"cer/event-sourcing-examples" -> "eventuate-examples/eventuate-examples-java-spring-todo-list"
"cer/event-sourcing-examples" -> "sqshq/PiggyMetrics"
"cer/event-sourcing-examples" -> "heynickc/awesome-ddd" ["e"=1]
"eventuate-local/eventuate-local" -> "eventuate-tram/eventuate-tram-core"
"eventuate-local/eventuate-local" -> "eventuate-tram/eventuate-tram-sagas"
"eventuate-local/eventuate-local" -> "cer/event-sourcing-examples"
"eventuate-local/eventuate-local" -> "eventuate-examples/eventuate-examples-java-customers-and-orders"
"eventuate-local/eventuate-local" -> "eventuate-examples/eventuate-examples-java-spring-todo-list"
"eventuate-local/eventuate-local" -> "kbastani/spring-cloud-event-sourcing-example"
"eventuate-local/eventuate-local" -> "eventuate-foundation/eventuate-cdc"
"eventuate-local/eventuate-local" -> "benwilcock/microservice-sampler"
"eventuate-local/eventuate-local" -> "eventuate-clients/eventuate-client-java"
"eventuate-local/eventuate-local" -> "eventuate-examples/es-kanban-board"
"eventuate-local/eventuate-local" -> "RBMHTechnology/eventuate" ["e"=1]
"eventuate-local/eventuate-local" -> "eventuate-tram/eventuate-tram-sagas-examples-customers-and-orders"
"eventuate-local/eventuate-local" -> "AxonFramework/AxonFramework" ["e"=1]
"eventuate-local/eventuate-local" -> "dmart28/reveno" ["e"=1]
"eventuate-local/eventuate-local" -> "AxonFramework/Axon-trader"
"kbastani/spring-cloud-event-sourcing-example" -> "kbastani/spring-cloud-microservice-example"
"kbastani/spring-cloud-event-sourcing-example" -> "kbastani/event-stream-processing-microservices"
"kbastani/spring-cloud-event-sourcing-example" -> "benwilcock/microservice-sampler"
"kbastani/spring-cloud-event-sourcing-example" -> "cer/event-sourcing-examples"
"kbastani/spring-cloud-event-sourcing-example" -> "kbastani/event-sourcing-microservices-example"
"kbastani/spring-cloud-event-sourcing-example" -> "sqshq/PiggyMetrics"
"kbastani/spring-cloud-event-sourcing-example" -> "rohitghatol/spring-boot-microservices"
"kbastani/spring-cloud-event-sourcing-example" -> "chaokunyang/microservices-event-sourcing" ["e"=1]
"kbastani/spring-cloud-event-sourcing-example" -> "joshlong/cloud-native-workshop"
"kbastani/spring-cloud-event-sourcing-example" -> "yidongnan/spring-cloud-netflix-example"
"kbastani/spring-cloud-event-sourcing-example" -> "idugalic/micro-company"
"kbastani/spring-cloud-event-sourcing-example" -> "prontera/spring-cloud-rest-tcc" ["e"=1]
"kbastani/spring-cloud-event-sourcing-example" -> "olivergierke/spring-restbucks" ["e"=1]
"kbastani/spring-cloud-event-sourcing-example" -> "spring-guides/tut-spring-security-and-angular-js"
"kbastani/spring-cloud-event-sourcing-example" -> "kakawait/uaa-behind-zuul-sample"
"rohitghatol/spring-boot-microservices" -> "anilallewar/microservices-basics-spring-boot"
"rohitghatol/spring-boot-microservices" -> "kbastani/spring-cloud-microservice-example"
"rohitghatol/spring-boot-microservices" -> "sqshq/PiggyMetrics"
"rohitghatol/spring-boot-microservices" -> "livelessons-spring/building-microservices"
"rohitghatol/spring-boot-microservices" -> "kbastani/spring-cloud-event-sourcing-example"
"rohitghatol/spring-boot-microservices" -> "paulc4/microservices-demo"
"rohitghatol/spring-boot-microservices" -> "callistaenterprise/blog-microservices"
"rohitghatol/spring-boot-microservices" -> "yidongnan/spring-cloud-netflix-example"
"rohitghatol/spring-boot-microservices" -> "prontera/spring-cloud-rest-tcc" ["e"=1]
"rohitghatol/spring-boot-microservices" -> "spring-guides/tut-spring-security-and-angular-js"
"rohitghatol/spring-boot-microservices" -> "royclarkson/spring-rest-service-oauth"
"rohitghatol/spring-boot-microservices" -> "ewolff/microservice"
"rohitghatol/spring-boot-microservices" -> "netgloo/spring-boot-samples"
"rohitghatol/spring-boot-microservices" -> "leelance/spring-boot-all" ["e"=1]
"rohitghatol/spring-boot-microservices" -> "zhangxd1989/spring-boot-cloud" ["e"=1]
"xpinjection/java8-misuses" -> "xpinjection/design-patterns"
"xpinjection/java8-misuses" -> "xpinjection/hibernate-performance"
"xpinjection/java8-misuses" -> "xpinjection/hibernate-basics"
"xpinjection/java8-misuses" -> "xpinjection/test-driven-spring-boot"
"xpinjection/java8-misuses" -> "gorelikov/cards-hub-evolution"
"spring-cloud-samples/customers-stores" -> "spring-cloud-samples/configserver"
"spring-cloud-samples/customers-stores" -> "spring-cloud-samples/eureka"
"spring-cloud-samples/customers-stores" -> "spring-cloud-samples/authserver"
"spring-cloud-samples/customers-stores" -> "spring-cloud-samples/hystrix-dashboard"
"spring-cloud-samples/customers-stores" -> "spring-cloud-samples/spring-cloud-contract-samples" ["e"=1]
"spring-cloud-samples/customers-stores" -> "spring-cloud-samples/springbox-cloud"
"spring-cloud-samples/customers-stores" -> "spring-cloud-samples/brewery"
"spring-cloud-samples/customers-stores" -> "spring-cloud-samples/sso"
"spring-cloud-samples/customers-stores" -> "olivergierke/rest-microservices" ["e"=1]
"spring-cloud-samples/customers-stores" -> "spring-cloud-samples/feign-eureka"
"spring-cloud-samples/customers-stores" -> "william-tran/microservice-security"
"spring-cloud-samples/customers-stores" -> "kbastani/spring-cloud-microservice-example"
"spring-cloud-samples/customers-stores" -> "spring-cloud/spring-cloud-core-tests"
"SelimHorri/ecommerce-microservice-backend-app" -> "SelimHorri/ecommerce-frontend-web-app"
"SelimHorri/ecommerce-microservice-backend-app" -> "SelimHorri/SelimHorri"
"eventuate-examples/eventuate-examples-restaurant-management" -> "eventuate-examples/es-kanban-board"
"eventuate-examples/eventuate-examples-restaurant-management" -> "eventuate-examples/eventuate-examples-java-spring-todo-list"
"eventuate-examples/eventuate-examples-restaurant-management" -> "cer/event-sourcing-using-scala-typeclasses"
"eventuate-examples/eventuate-examples-restaurant-management" -> "eventuate-examples/eventuate-examples-java-customers-and-orders"
"joshlong/boot-examples" -> "joshlong/spring-doge-microservice"
"philipsorst/angular-rest-springsecurity" -> "virgo47/restful-spring-security"
"philipsorst/angular-rest-springsecurity" -> "dsyer/spring-security-angular"
"philipsorst/angular-rest-springsecurity" -> "Robert-Leggett/angular_bootstrap_spring"
"philipsorst/angular-rest-springsecurity" -> "xvitcoder/spring-mvc-angularjs"
"philipsorst/angular-rest-springsecurity" -> "robharrop/spring-angularjs"
"philipsorst/angular-rest-springsecurity" -> "iainporter/oauth2-provider"
"philipsorst/angular-rest-springsecurity" -> "uaihebert/uaicontacts"
"philipsorst/angular-rest-springsecurity" -> "joshlong/boot-examples"
"philipsorst/angular-rest-springsecurity" -> "jhades/spring-mvc-angularjs-sample-app"
"philipsorst/angular-rest-springsecurity" -> "kolorobot/spring-mvc-quickstart-archetype"
"philipsorst/angular-rest-springsecurity" -> "jhipster/jhipster-sample-app"
"philipsorst/angular-rest-springsecurity" -> "spring-projects/spring-data-jpa-examples" ["e"=1]
"philipsorst/angular-rest-springsecurity" -> "techdev-solutions/trackr-backend"
"philipsorst/angular-rest-springsecurity" -> "spring-guides/tut-spring-security-and-angular-js"
"philipsorst/angular-rest-springsecurity" -> "radcortez/javaee7-angular" ["e"=1]
"callicoder/spring-boot-websocket-chat-demo" -> "salmar/spring-websocket-chat"
"callicoder/spring-boot-websocket-chat-demo" -> "callicoder/spring-security-react-ant-design-polls-app"
"callicoder/spring-boot-websocket-chat-demo" -> "callicoder/spring-boot-file-upload-download-rest-api-example"
"callicoder/spring-boot-websocket-chat-demo" -> "callicoder/spring-boot-react-oauth2-social-login-demo"
"callicoder/spring-boot-websocket-chat-demo" -> "spring-guides/gs-messaging-stomp-websocket"
"callicoder/spring-boot-websocket-chat-demo" -> "zifangsky/WebSocketDemo"
"callicoder/spring-boot-websocket-chat-demo" -> "jorgeacetozi/ebook-chat-app-spring-websocket-cassandra-redis-rabbitmq"
"callicoder/spring-boot-websocket-chat-demo" -> "YeautyYE/netty-websocket-spring-boot-starter" ["e"=1]
"callicoder/spring-boot-websocket-chat-demo" -> "niezhiliang/springbootwebsocket"
"callicoder/spring-boot-websocket-chat-demo" -> "callicoder/java-concurrency-examples" ["e"=1]
"callicoder/spring-boot-websocket-chat-demo" -> "piomin/sample-spring-microservices"
"callicoder/spring-boot-websocket-chat-demo" -> "amrkhaledccd/One-to-One-WebSockets-Chat"
"callicoder/spring-boot-websocket-chat-demo" -> "sivaprasadreddy/spring-boot-microservices-series"
"callicoder/spring-boot-websocket-chat-demo" -> "rstoyanchev/spring-websocket-portfolio"
"callicoder/spring-boot-websocket-chat-demo" -> "RawSanj/spring-redis-websocket"
"winterbe/spring-react-example" -> "sdeleuze/spring-react-isomorphic"
"winterbe/spring-react-example" -> "geowarin/boot-react"
"winterbe/spring-react-example" -> "winterbe/react-samples"
"winterbe/spring-react-example" -> "pugnascotia/spring-react-boilerplate"
"winterbe/spring-react-example" -> "dlizarra/spring-boot-react-webpack-starter"
"winterbe/spring-react-example" -> "stormpath/stormpath-spring-boot-react-example"
"winterbe/spring-react-example" -> "peterchenhdu/webbf" ["e"=1]
"winterbe/spring-react-example" -> "winterbe/spring-kotlin-react-demo" ["e"=1]
"winterbe/spring-react-example" -> "kucharzyk/vuejs-java-starter"
"winterbe/spring-react-example" -> "nodyn/jvm-npm" ["e"=1]
"winterbe/spring-react-example" -> "kantega/react-and-spring"
"winterbe/spring-react-example" -> "spring-guides/tut-react-and-spring-data-rest"
"winterbe/spring-react-example" -> "sdeleuze/spring-boot-sample-web-handlebars"
"jonashackt/spring-boot-vuejs" -> "boylegu/SpringBoot-vue"
"jonashackt/spring-boot-vuejs" -> "eirslett/frontend-maven-plugin" ["e"=1]
"jonashackt/spring-boot-vuejs" -> "callicoder/spring-security-react-ant-design-polls-app"
"jonashackt/spring-boot-vuejs" -> "szerhusenBC/jwt-spring-security-demo"
"jonashackt/spring-boot-vuejs" -> "codecentric/spring-boot-admin" ["e"=1]
"jonashackt/spring-boot-vuejs" -> "gothinkster/spring-boot-realworld-example-app" ["e"=1]
"jonashackt/spring-boot-vuejs" -> "spring-projects/spring-petclinic" ["e"=1]
"jonashackt/spring-boot-vuejs" -> "callicoder/spring-boot-react-oauth2-social-login-demo"
"jonashackt/spring-boot-vuejs" -> "bezkoder/spring-boot-spring-security-jwt-authentication"
"jonashackt/spring-boot-vuejs" -> "khandelwal-arpit/springboot-starterkit"
"jonashackt/spring-boot-vuejs" -> "spring-projects/spring-data-examples" ["e"=1]
"jonashackt/spring-boot-vuejs" -> "RameshMF/spring-boot-tutorial"
"jonashackt/spring-boot-vuejs" -> "kucharzyk/vuejs-java-starter"
"jonashackt/spring-boot-vuejs" -> "testcontainers/testcontainers-java" ["e"=1]
"jonashackt/spring-boot-vuejs" -> "Baeldung/spring-security-registration"
"spring-guides/tut-spring-boot-oauth2" -> "spring-guides/tut-spring-security-and-angular-js"
"spring-guides/tut-spring-boot-oauth2" -> "dynamind/spring-boot-security-oauth2-minimal"
"spring-guides/tut-spring-boot-oauth2" -> "spring-projects/spring-security-oauth" ["e"=1]
"spring-guides/tut-spring-boot-oauth2" -> "rajithd/spring-boot-oauth2"
"spring-guides/tut-spring-boot-oauth2" -> "Baeldung/spring-security-oauth"
"spring-guides/tut-spring-boot-oauth2" -> "lexburner/oauth2-demo" ["e"=1]
"spring-guides/tut-spring-boot-oauth2" -> "spring-guides/gs-securing-web"
"spring-guides/tut-spring-boot-oauth2" -> "kakawait/uaa-behind-zuul-sample"
"spring-guides/tut-spring-boot-oauth2" -> "spring-cloud-samples/authserver"
"spring-guides/tut-spring-boot-oauth2" -> "spring-cloud-samples/sso"
"spring-guides/tut-spring-boot-oauth2" -> "spring-cloud/spring-cloud-security" ["e"=1]
"spring-guides/tut-spring-boot-oauth2" -> "royclarkson/spring-rest-service-oauth"
"spring-guides/tut-spring-boot-oauth2" -> "making/oauth2-sso-demo"
"spring-guides/tut-spring-boot-oauth2" -> "spring-projects/spring-security-oauth2-boot" ["e"=1]
"spring-guides/tut-spring-boot-oauth2" -> "spring-guides/gs-spring-boot-docker"
"koushikkothagal/spring-boot-microservices-workshop" -> "koushikkothagal/spring-security-jwt"
"koushikkothagal/spring-boot-microservices-workshop" -> "koushikkothagal/spring-security-jpa"
"koushikkothagal/spring-boot-microservices-workshop" -> "koushikkothagal/spring-boot-security"
"koushikkothagal/spring-boot-microservices-workshop" -> "koushikkothagal/Java-8-Lambda-Basics"
"koushikkothagal/spring-boot-microservices-workshop" -> "koushikkothagal/junit-5-basics-course"
"koushikkothagal/spring-boot-microservices-workshop" -> "in28minutes/spring-microservices" ["e"=1]
"koushikkothagal/spring-boot-microservices-workshop" -> "ndesaigithub/koushikkothagal-spring-boot-microservices-workshop"
"koushikkothagal/spring-boot-microservices-workshop" -> "koushikkothagal/ipl-dashboard"
"koushikkothagal/spring-boot-microservices-workshop" -> "koushikkothagal/Modular-Programming-in-Java-9"
"koushikkothagal/spring-boot-microservices-workshop" -> "koushikkothagal/interview-challenges-java"
"koushikkothagal/spring-boot-microservices-workshop" -> "koushikkothagal/coronavirus-tracker"
"koushikkothagal/spring-boot-microservices-workshop" -> "koushikkothagal/spring-framework"
"koushikkothagal/spring-boot-microservices-workshop" -> "koushikkothagal/javabrains-website"
"koushikkothagal/spring-boot-microservices-workshop" -> "sivaprasadreddy/spring-boot-microservices-series"
"koushikkothagal/spring-boot-microservices-workshop" -> "piomin/sample-spring-microservices-new"
"rieckpil/blog-tutorials" -> "rieckpil/testing-spring-boot-applications-masterclass"
"rieckpil/blog-tutorials" -> "thombergs/code-examples" ["e"=1]
"rieckpil/blog-tutorials" -> "timtebeek/spring-security-samples"
"rieckpil/blog-tutorials" -> "stratospheric-dev/stratospheric"
"rieckpil/blog-tutorials" -> "soyjuanmalopez/clean-architecture" ["e"=1]
"rieckpil/blog-tutorials" -> "javaee-samples/javaee8-samples" ["e"=1]
"rieckpil/blog-tutorials" -> "ThomasVitale/awesome-spring" ["e"=1]
"rieckpil/blog-tutorials" -> "code-not-found/jsf-primefaces" ["e"=1]
"rieckpil/blog-tutorials" -> "vladmihalcea/high-performance-java-persistence" ["e"=1]
"rieckpil/blog-tutorials" -> "mohamed-taman/Springy-Store-Microservices"
"rieckpil/blog-tutorials" -> "piomin/sample-spring-microservices-new"
"rieckpil/blog-tutorials" -> "kbastani/event-sourcing-microservices-example"
"rieckpil/blog-tutorials" -> "AdamBien/javaee8-essentials-archetype" ["e"=1]
"rieckpil/blog-tutorials" -> "sivaprasadreddy/spring-boot-microservices-series"
"rieckpil/blog-tutorials" -> "SaiUpadhyayula/spring-reddit-clone"
"spring-petclinic/spring-framework-petclinic" -> "spring-petclinic/spring-petclinic-rest"
"spring-petclinic/spring-framework-petclinic" -> "spring-petclinic/spring-petclinic-reactjs"
"spring-petclinic/spring-framework-petclinic" -> "spring-petclinic/spring-petclinic-microservices"
"spring-petclinic/spring-framework-petclinic" -> "spring-petclinic/spring-petclinic-angular"
"spring-petclinic/spring-framework-petclinic" -> "spring-petclinic/spring-petclinic-data-jdbc"
"spring-petclinic/spring-framework-petclinic" -> "springframeworkguru/sfg-pet-clinic"
"spring-petclinic/spring-framework-petclinic" -> "spring-petclinic/spring-petclinic-microservices-config"
"spring-petclinic/spring-framework-petclinic" -> "spring-projects/spring-petclinic" ["e"=1]
"spring-petclinic/spring-framework-petclinic" -> "springframeworkguru/spring5webapp"
"spring-petclinic/spring-framework-petclinic" -> "spring-petclinic/spring-petclinic-graphql"
"spring-petclinic/spring-framework-petclinic" -> "spring-petclinic/spring-petclinic-kotlin"
"callicoder/spring-boot-react-oauth2-social-login-demo" -> "callicoder/spring-security-react-ant-design-polls-app"
"callicoder/spring-boot-react-oauth2-social-login-demo" -> "cheese10yun/spring-jpa-best-practices" ["e"=1]
"callicoder/spring-boot-react-oauth2-social-login-demo" -> "callicoder/spring-boot-file-upload-download-rest-api-example"
"callicoder/spring-boot-react-oauth2-social-login-demo" -> "jojoldu/spring-batch-in-action" ["e"=1]
"callicoder/spring-boot-react-oauth2-social-login-demo" -> "cheese10yun/spring-guide" ["e"=1]
"callicoder/spring-boot-react-oauth2-social-login-demo" -> "jojoldu/freelec-springboot2-webservice" ["e"=1]
"callicoder/spring-boot-react-oauth2-social-login-demo" -> "jojoldu/blog-code" ["e"=1]
"callicoder/spring-boot-react-oauth2-social-login-demo" -> "deepIify/oauth-login-be"
"callicoder/spring-boot-react-oauth2-social-login-demo" -> "murraco/spring-boot-jwt"
"callicoder/spring-boot-react-oauth2-social-login-demo" -> "callicoder/spring-boot-websocket-chat-demo"
"callicoder/spring-boot-react-oauth2-social-login-demo" -> "HomoEfficio/dev-tips" ["e"=1]
"callicoder/spring-boot-react-oauth2-social-login-demo" -> "spring-guides/tut-spring-boot-oauth2"
"callicoder/spring-boot-react-oauth2-social-login-demo" -> "cheese10yun/dev-info" ["e"=1]
"callicoder/spring-boot-react-oauth2-social-login-demo" -> "ksundong/backend-interview-question" ["e"=1]
"callicoder/spring-boot-react-oauth2-social-login-demo" -> "jonashackt/spring-boot-vuejs"
"microservices-patterns/ftgo-application" -> "eventuate-tram/eventuate-tram-core"
"microservices-patterns/ftgo-application" -> "eventuate-tram/eventuate-tram-sagas"
"microservices-patterns/ftgo-application" -> "cer/event-sourcing-examples"
"microservices-patterns/ftgo-application" -> "VaughnVernon/IDDD_Samples" ["e"=1]
"microservices-patterns/ftgo-application" -> "ddd-by-examples/library" ["e"=1]
"microservices-patterns/ftgo-application" -> "citerus/dddsample-core" ["e"=1]
"microservices-patterns/ftgo-application" -> "spring-petclinic/spring-petclinic-microservices"
"microservices-patterns/ftgo-application" -> "eventuate-tram/eventuate-tram-sagas-examples-customers-and-orders"
"microservices-patterns/ftgo-application" -> "microservices-patterns/ftgo-monolith"
"microservices-patterns/ftgo-application" -> "thombergs/code-examples" ["e"=1]
"microservices-patterns/ftgo-application" -> "kbastani/event-sourcing-microservices-example"
"microservices-patterns/ftgo-application" -> "eventuate-tram/eventuate-tram-examples-customers-and-orders"
"microservices-patterns/ftgo-application" -> "thombergs/buckpal" ["e"=1]
"microservices-patterns/ftgo-application" -> "cer/microservices-examples"
"microservices-patterns/ftgo-application" -> "heynickc/awesome-ddd" ["e"=1]
"spring-cloud-samples/authserver" -> "spring-cloud-samples/sso"
"spring-cloud-samples/authserver" -> "spring-cloud-samples/configserver"
"spring-cloud-samples/authserver" -> "kakawait/uaa-behind-zuul-sample"
"spring-cloud-samples/authserver" -> "spring-cloud-samples/customers-stores"
"spring-cloud-samples/authserver" -> "spring-cloud-samples/config-repo"
"spring-cloud-samples/authserver" -> "spring-cloud/spring-cloud-security" ["e"=1]
"spring-cloud-samples/authserver" -> "wanghongfei/spring-security-oauth2-example" ["e"=1]
"spring-cloud-samples/authserver" -> "xetys/spring-cloud-oauth2-example"
"spring-cloud-samples/authserver" -> "spring-cloud-samples/eureka"
"sivaprasadreddy/spring-boot-microservices-series" -> "piomin/sample-spring-microservices-new"
"sivaprasadreddy/spring-boot-microservices-series" -> "piomin/sample-spring-microservices"
"sivaprasadreddy/spring-boot-microservices-series" -> "anilallewar/microservices-basics-spring-boot"
"sivaprasadreddy/spring-boot-microservices-series" -> "spring-petclinic/spring-petclinic-microservices"
"sivaprasadreddy/spring-boot-microservices-series" -> "RameshMF/PiggyMetrics"
"sivaprasadreddy/spring-boot-microservices-series" -> "devdcores/BookStoreApp-Distributed-Application"
"sivaprasadreddy/spring-boot-microservices-series" -> "oktadev/spring-boot-microservices-example"
"sivaprasadreddy/spring-boot-microservices-series" -> "apssouza22/java-microservice"
"sivaprasadreddy/spring-boot-microservices-series" -> "oktadev/java-microservices-examples"
"sivaprasadreddy/spring-boot-microservices-series" -> "RainbowForest/e-commerce-microservices"
"sivaprasadreddy/spring-boot-microservices-series" -> "oktadeveloper/spring-boot-microservices-example"
"sivaprasadreddy/spring-boot-microservices-series" -> "mohamed-taman/Springy-Store-Microservices"
"sivaprasadreddy/spring-boot-microservices-series" -> "rohitghatol/spring-boot-microservices"
"sivaprasadreddy/spring-boot-microservices-series" -> "hantsy/spring-microservice-sample"
"sivaprasadreddy/spring-boot-microservices-series" -> "livelessons-spring/building-microservices"
"spring-guides/gs-spring-boot-docker" -> "spring-guides/top-spring-boot-docker"
"spring-guides/gs-spring-boot-docker" -> "spring-guides/gs-spring-boot"
"spring-guides/gs-spring-boot-docker" -> "spring-guides/gs-multi-module"
"spring-guides/gs-spring-boot-docker" -> "spring-guides/tut-spring-boot-oauth2"
"spring-guides/gs-spring-boot-docker" -> "spring-guides/gs-securing-web"
"spring-guides/gs-spring-boot-docker" -> "joshlong/flux-flix-service" ["e"=1]
"spring-guides/gs-spring-boot-docker" -> "spring-guides/gs-accessing-data-rest"
"spring-guides/gs-spring-boot-docker" -> "spring-guides/gs-accessing-data-mysql"
"spring-guides/gs-spring-boot-docker" -> "spring-guides/tut-spring-security-and-angular-js"
"spring-guides/gs-spring-boot-docker" -> "spring-guides/gs-rest-service-cors"
"spring-guides/gs-spring-boot-docker" -> "spring-guides/understanding"
"spring-guides/gs-spring-boot-docker" -> "spring-guides/gs-managing-transactions"
"spring-guides/gs-spring-boot-docker" -> "mploed/ddd-strategic-design-spring-boot" ["e"=1]
"spring-guides/gs-spring-boot-docker" -> "spring-guides/gs-rest-service"
"spring-guides/gs-spring-boot-docker" -> "spring-guides/gs-reactive-rest-service"
"eherozhao/E-Commerce-Spring-Boot" -> "eherozhao/E-Commerce-React-Front-end"
"eherozhao/E-Commerce-Spring-Boot" -> "devRobots/spring-boot-ecommerce"
"eherozhao/E-Commerce-Spring-Boot" -> "MoonSulong/Ecommerce"
"eherozhao/E-Commerce-Spring-Boot" -> "merikbest/OnlineShop"
"spring-cloud-incubator/spring-cloud-kubernetes" -> "fabric8io/spring-cloud-kubernetes"
"spring-cloud-incubator/spring-cloud-kubernetes" -> "fabric8io/kubeflix"
"spring-cloud-incubator/spring-cloud-kubernetes" -> "kakawait/uaa-behind-zuul-sample"
"spring-cloud-incubator/spring-cloud-kubernetes" -> "IBM/spring-boot-microservices-on-kubernetes"
"spring-cloud-incubator/spring-cloud-kubernetes" -> "fabric8io/fabric8" ["e"=1]
"spring-cloud-incubator/spring-cloud-kubernetes" -> "runconduit/conduit" ["e"=1]
"spring-cloud-incubator/spring-cloud-kubernetes" -> "opentracing-contrib/java-spring-cloud" ["e"=1]
"spring-cloud-incubator/spring-cloud-kubernetes" -> "saturnism/istio-by-example-java" ["e"=1]
"spring-cloud-incubator/spring-cloud-kubernetes" -> "kbastani/spring-cloud-event-sourcing-example"
"spring-cloud-incubator/spring-cloud-kubernetes" -> "kbastani/spring-cloud-microservice-example"
"spring-cloud-incubator/spring-cloud-kubernetes" -> "spring-cloud/spring-cloud-pipelines" ["e"=1]
"spring-cloud-incubator/spring-cloud-kubernetes" -> "bestcloud/ku8eye" ["e"=1]
"spring-cloud-incubator/spring-cloud-kubernetes" -> "ordina-jworks/microservices-dashboard"
"spring-cloud-incubator/spring-cloud-kubernetes" -> "fabric8io/fabric8-maven-plugin" ["e"=1]
"spring-cloud-incubator/spring-cloud-kubernetes" -> "sqshq/PiggyMetrics"
"murraco/spring-boot-jwt" -> "szerhusenBC/jwt-spring-security-demo"
"murraco/spring-boot-jwt" -> "isopropylcyanide/Jwt-Spring-Security-JPA"
"murraco/spring-boot-jwt" -> "bezkoder/spring-boot-spring-security-jwt-authentication"
"murraco/spring-boot-jwt" -> "nydiarra/springboot-jwt"
"murraco/spring-boot-jwt" -> "callicoder/spring-security-react-ant-design-polls-app"
"murraco/spring-boot-jwt" -> "bfwg/springboot-jwt-starter"
"murraco/spring-boot-jwt" -> "osopromadze/Spring-Boot-Blog-REST-API"
"murraco/spring-boot-jwt" -> "hantsy/springboot-jwt-sample"
"murraco/spring-boot-jwt" -> "sivaprasadreddy/spring-boot-microservices-series"
"murraco/spring-boot-jwt" -> "callicoder/spring-boot-react-oauth2-social-login-demo"
"murraco/spring-boot-jwt" -> "khandelwal-arpit/springboot-starterkit"
"murraco/spring-boot-jwt" -> "Baeldung/spring-security-oauth"
"murraco/spring-boot-jwt" -> "only2dhir/spring-security-jwt"
"murraco/spring-boot-jwt" -> "Baeldung/spring-security-registration"
"murraco/spring-boot-jwt" -> "anilallewar/microservices-basics-spring-boot"
"AxonFramework/Axon-trader" -> "AxonFramework/AxonBank"
"AxonFramework/Axon-trader" -> "AxonFramework/AxonFramework" ["e"=1]
"AxonFramework/Axon-trader" -> "avthart/spring-boot-axon-sample"
"AxonFramework/Axon-trader" -> "idugalic/digital-restaurant"
"AxonFramework/Axon-trader" -> "idugalic/micro-company"
"AxonFramework/Axon-trader" -> "dadepo/exploringCQRSwithAxon"
"AxonFramework/Axon-trader" -> "EdisonXu/sbs-axon"
"AxonFramework/Axon-trader" -> "AxonIQ/axon-quick-start"
"AxonFramework/Axon-trader" -> "soooban/AxonDemo"
"AxonFramework/Axon-trader" -> "benwilcock/cqrs-microservice-sampler"
"AxonFramework/Axon-trader" -> "benwilcock/microservice-sampler"
"AxonFramework/Axon-trader" -> "pivotalsoftware/ESarch"
"AxonFramework/Axon-trader" -> "AxonIQ/giftcard-demo"
"AxonFramework/Axon-trader" -> "AxonFramework/Addressbook-Sample"
"AxonFramework/Axon-trader" -> "ddd-by-examples/event-source-cqrs-sample" ["e"=1]
"AxonFramework/AxonBank" -> "AxonFramework/Axon-trader"
"AxonFramework/AxonBank" -> "dadepo/exploringCQRSwithAxon"
"AxonFramework/AxonBank" -> "idugalic/micro-company"
"AxonFramework/AxonBank" -> "benwilcock/pcf-axon-cqrs-demo"
"AxonFramework/AxonBank" -> "AxonIQ/giftcard-demo"
"AxonFramework/extension-kafka" -> "AxonIQ/reference-guide"
"AxonFramework/extension-kafka" -> "AxonFramework/extension-tracing"
"AxonIQ/axon-quick-start" -> "AxonIQ/giftcard-demo"
"AxonIQ/axon-quick-start" -> "AxonIQ/hotel-demo"
"AxonIQ/axon-quick-start" -> "AxonIQ/axon-server-se"
"AxonIQ/giftcard-demo" -> "AxonIQ/axon-quick-start"
"AxonIQ/giftcard-demo" -> "AxonIQ/axon-server-api"
"AxonIQ/giftcard-demo" -> "AxonIQ/reference-guide"
"AxonIQ/giftcard-demo" -> "AxonIQ/axon-server-se"
"Creditas/kotlin-ddd-sample" -> "bringmeister/ddd-with-kotlin"
"Creditas/kotlin-ddd-sample" -> "bringmeister/event-sourcing-with-kotlin"
"Creditas/kotlin-ddd-sample" -> "idugalic/digital-restaurant"
"Creditas/kotlin-ddd-sample" -> "htnk128/kotlin-ddd-sample"
"bringmeister/event-sourcing-with-kotlin" -> "bringmeister/ddd-with-kotlin"
"kbastani/event-sourcing-microservices-example" -> "kbastani/order-delivery-microservice-example"
"kbastani/event-sourcing-microservices-example" -> "kbastani/event-stream-processing-microservices"
"kbastani/event-sourcing-microservices-example" -> "kbastani/spring-cloud-event-sourcing-example"
"kbastani/event-sourcing-microservices-example" -> "ddd-by-examples/all-things-cqrs" ["e"=1]
"kbastani/event-sourcing-microservices-example" -> "mohamed-taman/Springy-Store-Microservices"
"kbastani/event-sourcing-microservices-example" -> "sdaschner/scalable-coffee-shop" ["e"=1]
"kbastani/event-sourcing-microservices-example" -> "benwilcock/cqrs-microservice-sampler"
"kbastani/event-sourcing-microservices-example" -> "piomin/sample-spring-microservices-new"
"kbastani/event-sourcing-microservices-example" -> "idugalic/micro-company"
"kbastani/event-sourcing-microservices-example" -> "sivaprasadreddy/spring-boot-microservices-series"
"kbastani/event-sourcing-microservices-example" -> "berndruecker/flowing-retail" ["e"=1]
"kbastani/event-sourcing-microservices-example" -> "ddd-by-examples/factory" ["e"=1]
"kbastani/event-sourcing-microservices-example" -> "ewolff/microservice-kubernetes"
"kbastani/event-sourcing-microservices-example" -> "ddd-by-examples/event-source-cqrs-sample" ["e"=1]
"kbastani/event-sourcing-microservices-example" -> "andreschaffer/event-sourcing-cqrs-examples" ["e"=1]
"svlada/springboot-security-jwt" -> "bfwg/springboot-jwt-starter"
"svlada/springboot-security-jwt" -> "szerhusenBC/jwt-spring-security-demo"
"svlada/springboot-security-jwt" -> "brahalla/Cerberus"
"svlada/springboot-security-jwt" -> "nydiarra/springboot-jwt"
"svlada/springboot-security-jwt" -> "mrin9/Angular-SpringBoot-REST-JWT"
"svlada/springboot-security-jwt" -> "virgo47/restful-spring-security"
"svlada/springboot-security-jwt" -> "spring-guides/tut-spring-security-and-angular-js"
"svlada/springboot-security-jwt" -> "Baeldung/spring-security-oauth"
"svlada/springboot-security-jwt" -> "wpcfan/spring-boot-tut" ["e"=1]
"svlada/springboot-security-jwt" -> "longfeizheng/logback" ["e"=1]
"svlada/springboot-security-jwt" -> "keets2012/Auth-service" ["e"=1]
"svlada/springboot-security-jwt" -> "aboullaite/spring-boot-jwt"
"svlada/springboot-security-jwt" -> "dynamind/spring-boot-security-oauth2-minimal"
"svlada/springboot-security-jwt" -> "royclarkson/spring-rest-service-oauth"
"svlada/springboot-security-jwt" -> "jonsychen/rest-security-demo" ["e"=1]
"adamzareba/company-structure-spring-security-oauth2-authorities" -> "Akourtiim/oauth2-spring-boot-2.0.2"
"adamzareba/company-structure-spring-security-oauth2-authorities" -> "piomin/sample-spring-oauth2-microservices"
"adamzareba/company-structure-spring-security-oauth2-authorities" -> "odenktools/springboot-oauth2-jwt"
"kolorobot/spring-mvc-quickstart-archetype" -> "philipsorst/angular-rest-springsecurity"
"kolorobot/spring-mvc-quickstart-archetype" -> "spring-projects/spring-mvc-showcase" ["e"=1]
"kolorobot/spring-mvc-quickstart-archetype" -> "thymeleaf/thymeleafexamples-layouts" ["e"=1]
"kolorobot/spring-mvc-quickstart-archetype" -> "ultraq/thymeleaf-layout-dialect" ["e"=1]
"kolorobot/spring-mvc-quickstart-archetype" -> "jhades/spring-mvc-angularjs-sample-app"
"kolorobot/spring-mvc-quickstart-archetype" -> "dsyer/spring-security-angular"
"kolorobot/spring-mvc-quickstart-archetype" -> "olivergierke/spring-restbucks" ["e"=1]
"kolorobot/spring-mvc-quickstart-archetype" -> "kolorobot/spring-boot-thymeleaf" ["e"=1]
"kolorobot/spring-mvc-quickstart-archetype" -> "ykameshrao/spring-hibernate-springdata-springmvc-maven-project-framework"
"kolorobot/spring-mvc-quickstart-archetype" -> "sivaprasadreddy/maven-archetype-templates"
"kolorobot/spring-mvc-quickstart-archetype" -> "akquinet/android-archetypes" ["e"=1]
"kolorobot/spring-mvc-quickstart-archetype" -> "eugenp/REST" ["e"=1]
"kolorobot/spring-mvc-quickstart-archetype" -> "SpringSource/spring-petclinic" ["e"=1]
"kolorobot/spring-mvc-quickstart-archetype" -> "javaee-samples/javaee7-samples" ["e"=1]
"kolorobot/spring-mvc-quickstart-archetype" -> "royclarkson/spring-rest-service-oauth"
"liferay/liferay-screens" -> "liferay/liferay-mobile-sdk"
"RameshMF/spring-boot-tutorial" -> "Urunov/SpringBoot-Projects-FullStack"
"RameshMF/spring-boot-tutorial" -> "RameshMF/spring-mvc-tutorial"
"RameshMF/spring-boot-tutorial" -> "in28minutes/spring-boot-examples" ["e"=1]
"RameshMF/spring-boot-tutorial" -> "RameshMF/Hibernate-ORM-Tutorials"
"RameshMF/spring-boot-tutorial" -> "mkyong/spring-boot"
"RameshMF/spring-boot-tutorial" -> "hellokoding/hellokoding-courses"
"RameshMF/spring-boot-tutorial" -> "osopromadze/Spring-Boot-Blog-REST-API"
"RameshMF/spring-boot-tutorial" -> "ThomasVitale/awesome-spring" ["e"=1]
"RameshMF/spring-boot-tutorial" -> "thombergs/code-examples" ["e"=1]
"RameshMF/spring-boot-tutorial" -> "AnghelLeonard/Hibernate-SpringBoot" ["e"=1]
"RameshMF/spring-boot-tutorial" -> "RameshMF/ReactJS-Spring-Boot-CRUD-Full-Stack-App"
"RameshMF/spring-boot-tutorial" -> "RameshMF/registration-login-spring-boot-security-thymeleaf-hibernate"
"RameshMF/spring-boot-tutorial" -> "RameshMF/Angular8-SpringBoot-CRUD-Tutorial"
"RameshMF/spring-boot-tutorial" -> "in28minutes/SpringBootForBeginners" ["e"=1]
"RameshMF/spring-boot-tutorial" -> "callicoder/spring-boot-mysql-rest-api-tutorial"
"spring-guides/gs-spring-boot" -> "spring-guides/getting-started-guides"
"spring-guides/gs-spring-boot" -> "spring-guides/gs-accessing-data-jpa"
"spring-guides/gs-spring-boot" -> "spring-guides/gs-rest-service"
"spring-guides/gs-spring-boot" -> "spring-guides/gs-spring-boot-docker"
"spring-guides/gs-spring-boot" -> "spring-guides/gs-accessing-data-mysql"
"spring-guides/gs-spring-boot" -> "spring-guides/gs-securing-web"
"spring-guides/gs-spring-boot" -> "spring-guides/gs-serving-web-content"
"spring-guides/gs-spring-boot" -> "spring-guides/gs-reactive-rest-service"
"spring-guides/gs-spring-boot" -> "spring-guides/gs-actuator-service"
"spring-guides/gs-spring-boot" -> "spring-guides/gs-maven"
"spring-guides/gs-spring-boot" -> "spring-guides/gs-rest-service-cors"
"spring-guides/gs-spring-boot" -> "spring-guides/understanding"
"spring-guides/gs-spring-boot" -> "spring-guides/gs-batch-processing"
"spring-guides/gs-spring-boot" -> "spring-guides/gs-validating-form-input"
"spring-guides/gs-spring-boot" -> "spring-guides/gs-consuming-rest"
"spring-petclinic/spring-petclinic-microservices" -> "spring-petclinic/spring-framework-petclinic"
"spring-petclinic/spring-petclinic-microservices" -> "spring-petclinic/spring-petclinic-rest"
"spring-petclinic/spring-petclinic-microservices" -> "piomin/sample-spring-microservices-new"
"spring-petclinic/spring-petclinic-microservices" -> "spring-petclinic/spring-petclinic-reactjs"
"spring-petclinic/spring-petclinic-microservices" -> "sivaprasadreddy/spring-boot-microservices-series"
"spring-petclinic/spring-petclinic-microservices" -> "spring-projects/spring-petclinic" ["e"=1]
"spring-petclinic/spring-petclinic-microservices" -> "spring-petclinic/spring-petclinic-angular"
"spring-petclinic/spring-petclinic-microservices" -> "piomin/sample-spring-microservices"
"spring-petclinic/spring-petclinic-microservices" -> "anilallewar/microservices-basics-spring-boot"
"spring-petclinic/spring-petclinic-microservices" -> "kbastani/spring-cloud-microservice-example"
"spring-petclinic/spring-petclinic-microservices" -> "mohamed-taman/Springy-Store-Microservices"
"spring-petclinic/spring-petclinic-microservices" -> "rohitghatol/spring-boot-microservices"
"spring-petclinic/spring-petclinic-microservices" -> "spring-petclinic/spring-petclinic-cloud"
"spring-petclinic/spring-petclinic-microservices" -> "davidetaibi/Microservices_Project_List"
"spring-petclinic/spring-petclinic-microservices" -> "oktadeveloper/spring-boot-microservices-example"
"Baeldung/spring-security-oauth" -> "spring-projects/spring-security-oauth" ["e"=1]
"Baeldung/spring-security-oauth" -> "Baeldung/spring-security-registration"
"Baeldung/spring-security-oauth" -> "spring-guides/tut-spring-security-and-angular-js"
"Baeldung/spring-security-oauth" -> "szerhusenBC/jwt-spring-security-demo"
"Baeldung/spring-security-oauth" -> "spring-guides/tut-spring-boot-oauth2"
"Baeldung/spring-security-oauth" -> "lexburner/oauth2-demo" ["e"=1]
"Baeldung/spring-security-oauth" -> "spring-projects-experimental/spring-authorization-server" ["e"=1]
"Baeldung/spring-security-oauth" -> "spring-projects/spring-security" ["e"=1]
"Baeldung/spring-security-oauth" -> "dynamind/spring-boot-security-oauth2-minimal"
"Baeldung/spring-security-oauth" -> "spring-projects/spring-authorization-server" ["e"=1]
"Baeldung/spring-security-oauth" -> "rohitghatol/spring-boot-microservices"
"Baeldung/spring-security-oauth" -> "svlada/springboot-security-jwt"
"Baeldung/spring-security-oauth" -> "wiselyman/uaa-zuul" ["e"=1]
"Baeldung/spring-security-oauth" -> "eugenp/tutorials" ["e"=1]
"Baeldung/spring-security-oauth" -> "making/oauth2-sso-demo"
"hantsy/angularjs-springmvc-sample-boot" -> "hantsy/angularjs-springmvc-sample"
"hantsy/angularjs-springmvc-sample-boot" -> "g00glen00b/ng-spring-boot"
"hantsy/angularjs-springmvc-sample-boot" -> "ykameshrao/spring-mvc-angular-js-hibernate-bootstrap-java-single-page-jwt-auth-rest-api-webapp-framework"
"hantsy/angularjs-springmvc-sample-boot" -> "jhades/spring-mvc-angularjs-sample-app"
"hantsy/angularjs-springmvc-sample-boot" -> "borysn/spring-boot-angular2"
"hantsy/angularjs-springmvc-sample-boot" -> "mrin9/Angular-SpringBoot-REST-JWT"
"hantsy/angularjs-springmvc-sample-boot" -> "ZhibingXie/SpringMVC-Spring-Hibernate" ["e"=1]
"shabbirdwd53/spring-security-tutorial" -> "shabbirdwd53/Spring-Data-JPA-Tutorial"
"shabbirdwd53/spring-security-tutorial" -> "shabbirdwd53/Springboot-Tutorial"
"abhisheksr01/spring-boot-microservice-best-practices" -> "oktadev/java-microservices-examples"
"abhisheksr01/spring-boot-microservice-best-practices" -> "oktadev/spring-boot-microservices-example"
"abhisheksr01/spring-boot-microservice-best-practices" -> "abhisheksr01/zero-2-hero-python-flask-microservice"
"abhisheksr01/spring-boot-microservice-best-practices" -> "abhisheksr01/bankapp-simulation-springboot-services"
"abhisheksr01/spring-boot-microservice-best-practices" -> "mohamed-taman/Springy-Store-Microservices"
"keumtae-kim/spring-boot-react-blog" -> "merikbest/ecommerce-spring-reactjs"
"keumtae-kim/spring-boot-react-blog" -> "ujjavaldesai07/spring-boot-react-ecommerce-app"
"keumtae-kim/spring-boot-react-blog" -> "spring-petclinic/spring-petclinic-reactjs"
"salmar/spring-websocket-chat" -> "rstoyanchev/spring-websocket-portfolio"
"salmar/spring-websocket-chat" -> "MatthewVita/spring-boot-private-chat"
"salmar/spring-websocket-chat" -> "callicoder/spring-boot-websocket-chat-demo"
"salmar/spring-websocket-chat" -> "jorgeacetozi/ebook-chat-app-spring-websocket-cassandra-redis-rabbitmq"
"salmar/spring-websocket-chat" -> "amrkhaledccd/One-to-One-WebSockets-Chat"
"salmar/spring-websocket-chat" -> "spring-guides/gs-messaging-stomp-websocket"
"salmar/spring-websocket-chat" -> "rstoyanchev/spring-mvc-chat"
"salmar/spring-websocket-chat" -> "g00glen00b/spring-ng-chat"
"salmar/spring-websocket-chat" -> "dsyer/spring-security-angular"
"salmar/spring-websocket-chat" -> "william-tran/microservice-security"
"salmar/spring-websocket-chat" -> "mraible/21-points"
"salmar/spring-websocket-chat" -> "monkey-codes/java-reactive-chat"
"salmar/spring-websocket-chat" -> "rwinch/spring-websocket-portfolio"
"salmar/spring-websocket-chat" -> "nielsutrecht/jwt-angular-spring"
"salmar/spring-websocket-chat" -> "bijukunjummen/spring-websocket-chat-sample"
"Nandtel/spring-boot-angular2-starter" -> "Nandtel/GearService"
"borysn/spring-boot-angular2" -> "springboot-angular2-tutorial/angular2-app"
"borysn/spring-boot-angular2" -> "zouabimourad/angular2-spring"
"borysn/spring-boot-angular2" -> "springboot-angular2-tutorial/boot-app"
"borysn/spring-boot-angular2" -> "ehirsch/spring-angular2"
"borysn/spring-boot-angular2" -> "kucharzyk/spring-angular2-starter"
"borysn/spring-boot-angular2" -> "marco76/SpringAngular2TypeScript"
"borysn/spring-boot-angular2" -> "shardis/spring-angular2-starter"
"borysn/spring-boot-angular2" -> "hantsy/angularjs-springmvc-sample-boot"
"borysn/spring-boot-angular2" -> "Nandtel/spring-boot-angular2-starter"
"borysn/spring-boot-angular2" -> "jbruinink/ng2boot"
"borysn/spring-boot-angular2" -> "dlizarra/spring-angular2-cli-starter"
"borysn/spring-boot-angular2" -> "spring-guides/tut-spring-security-and-angular-js"
"borysn/spring-boot-angular2" -> "mrin9/Angular2_SpringBoot"
"borysn/spring-boot-angular2" -> "bfwg/angular-spring-starter"
"robharrop/spring-angularjs" -> "xvitcoder/spring-mvc-angularjs"
"robharrop/spring-angularjs" -> "kiranreddykasa/springrest-angularjs"
"robharrop/spring-angularjs" -> "nidi3/AngularJS-SpringMVC-example"
"xvitcoder/spring-mvc-angularjs" -> "robharrop/spring-angularjs"
"xvitcoder/spring-mvc-angularjs" -> "jhades/spring-mvc-angularjs-sample-app"
"xvitcoder/spring-mvc-angularjs" -> "hantsy/angularjs-springmvc-sample"
"xvitcoder/spring-mvc-angularjs" -> "philipsorst/angular-rest-springsecurity"
"xvitcoder/spring-mvc-angularjs" -> "nidi3/AngularJS-SpringMVC-example"
"xvitcoder/spring-mvc-angularjs" -> "kiranreddykasa/springrest-angularjs"
"xvitcoder/spring-mvc-angularjs" -> "Robert-Leggett/angular_bootstrap_spring"
"xvitcoder/spring-mvc-angularjs" -> "wvuong/spring-mvc-bootstrap-angularjs-starter"
"xvitcoder/spring-mvc-angularjs" -> "uaihebert/uaicontacts"
"jhipster/prettier-java" -> "HubSpot/prettier-maven-plugin"
"jhipster/prettier-java" -> "jhipster/jhipster-lite"
"jhipster/prettier-java" -> "jhipster/jhipster-control-center"
"jhipster/prettier-java" -> "diffplug/spotless" ["e"=1]
"jhipster/prettier-java" -> "mvndaemon/mvnd" ["e"=1]
"jhipster/prettier-java" -> "zalando/problem-spring-web" ["e"=1]
"jhipster/prettier-java" -> "jreleaser/jreleaser" ["e"=1]
"jhipster/prettier-java" -> "spring-io/spring-javaformat" ["e"=1]
"jhipster/prettier-java" -> "jhipster/jhipster-kotlin"
"jhipster/prettier-java" -> "jhipster/jhipster-vuejs"
"jhipster/prettier-java" -> "junit-pioneer/junit-pioneer" ["e"=1]
"jhipster/prettier-java" -> "xmolecules/jmolecules" ["e"=1]
"jhipster/prettier-java" -> "revelc/formatter-maven-plugin" ["e"=1]
"jhipster/prettier-java" -> "TNG/ArchUnit" ["e"=1]
"jhipster/prettier-java" -> "odrotbohm/moduliths" ["e"=1]
"jhipster/jdl-studio" -> "jhipster/jhipster-core"
"jhipster/jdl-studio" -> "jhipster/jhipster-ide"
"jhipster/jdl-studio" -> "jhipster/jhipster-uml"
"jhipster/jdl-studio" -> "jhipster/jhipster-console"
"jhipster/jdl-studio" -> "jhipster/jhipster-registry"
"jhipster/jdl-studio" -> "jhipster/jhipster.github.io"
"jhipster/jdl-studio" -> "jhipster/jhipster-control-center"
"jhipster/jdl-studio" -> "jhipster/ng-jhipster"
"jhipster/jdl-studio" -> "oktadeveloper/generator-jhipster-ionic"
"jhipster/jdl-studio" -> "jhipster/jhipster-devbox"
"jhipster/jdl-studio" -> "jhipster/jdl-samples"
"jhipster/jdl-studio" -> "jhipster/jhipster"
"jhipster/jdl-studio" -> "Blackdread/sql-to-jdl"
"jhipster/jdl-studio" -> "jhipster/jhipster-online"
"jhipster/jdl-studio" -> "mraible/21-points"
"jhipster/jhipster-core" -> "jhipster/jdl-studio"
"jhipster/jhipster-core" -> "jhipster/jhipster-ide"
"jhipster/jhipster-core" -> "jhipster/jhipster-uml"
"jhipster/jhipster-core" -> "jhipster/jhipster"
"jhipster/jhipster-core" -> "jhipster/jhipster.github.io"
"jhipster/jhipster-core" -> "jhipster/jhipster-registry"
"jhipster/jhipster-core" -> "oktadeveloper/generator-jhipster-ionic"
"jhipster/jhipster-core" -> "jhipster/ng-jhipster"
"jhipster/jhipster-core" -> "jhipster/generator-jhipster-module"
"jhipster/jhipster-core" -> "jhipster/jdl-samples"
"jhipster/jhipster-core" -> "jhipster/jhipster-control-center"
"jhipster/jhipster-core" -> "jhipster/jhipster-vuejs"
"jhipster/jhipster-core" -> "jhipster/jhipster-console"
"jhipster/jhipster-core" -> "jhipster/jhipster-devbox"
"spring-cloud-samples/eureka" -> "spring-cloud-samples/configserver"
"spring-cloud-samples/eureka" -> "spring-cloud-samples/customers-stores"
"spring-cloud-samples/eureka" -> "spring-cloud-samples/feign-eureka"
"spring-cloud-samples/eureka" -> "spring-cloud-samples/hystrix-dashboard"
"spring-cloud-samples/eureka" -> "spring-cloud-samples/sso"
"spring-cloud-samples/eureka" -> "spring-cloud-samples/config-repo"
"spring-cloud-samples/eureka" -> "spring-cloud-samples/spring-cloud-gateway-sample"
"spring-cloud-samples/eureka" -> "spring-cloud-samples/authserver"
"spring-cloud-samples/eureka" -> "spring-cloud-samples/brewery"
"spring-cloud-samples/eureka" -> "callistaenterprise/blog-microservices"
"spring-cloud-samples/eureka" -> "joshlong/service-registration-and-discovery"
"spring-cloud-samples/eureka" -> "spring-cloud/spring-cloud-netflix" ["e"=1]
"spring-cloud-samples/eureka" -> "spring-cloud/spring-cloud-config" ["e"=1]
"spring-cloud-samples/eureka" -> "spring-cloud-samples/zuul-server"
"amrkhaledccd/my-moments" -> "mohamed-taman/Springy-Store-Microservices"
"amrkhaledccd/my-moments" -> "SaiUpadhyayula/spring-reddit-clone"
"amrkhaledccd/my-moments" -> "devdcores/BookStoreApp-Distributed-Application"
"amrkhaledccd/my-moments" -> "raeperd/realworld-springboot-java" ["e"=1]
"amrkhaledccd/my-moments" -> "merikbest/ecommerce-spring-reactjs"
"amrkhaledccd/my-moments" -> "sivaprasadreddy/spring-boot-microservices-series"
"antkaynak/Keyist-Ecommerce" -> "zhulinn/SpringBoot-Angular7-Online-Shopping-Store"
"antkaynak/Keyist-Ecommerce" -> "vatri/spring-rest-ecommerce"
"antkaynak/Keyist-Ecommerce" -> "JohnnyLe/Modern-Ecommerce"
"antkaynak/Keyist-Ecommerce" -> "SaiUpadhyayula/SpringAngularEcommerce"
"antkaynak/Keyist-Ecommerce" -> "merikbest/ecommerce-spring-reactjs"
"antkaynak/Keyist-Ecommerce" -> "devdcores/BookStoreApp-Distributed-Application"
"antkaynak/Keyist-Ecommerce" -> "scbushan05/online-bookstore"
"antkaynak/Keyist-Ecommerce" -> "cyela/Angular-Springboot"
"antkaynak/Keyist-Ecommerce" -> "RainbowForest/e-commerce-microservices"
"antkaynak/Keyist-Ecommerce" -> "ikismail/ShoppingCart"
"antkaynak/Keyist-Ecommerce" -> "MoonSulong/Ecommerce"
"antkaynak/Keyist-Ecommerce" -> "ujjavaldesai07/spring-boot-react-ecommerce-app"
"antkaynak/Keyist-Ecommerce" -> "NIT-Software/Modern-Ecommerce"
"antkaynak/Keyist-Ecommerce" -> "ayushman1024/TASK-Management-System"
"antkaynak/Keyist-Ecommerce" -> "ikismail/Angular-ShoppingCart" ["e"=1]
"callicoder/spring-security-react-ant-design-polls-app" -> "callicoder/spring-boot-react-oauth2-social-login-demo"
"callicoder/spring-security-react-ant-design-polls-app" -> "szerhusenBC/jwt-spring-security-demo"
"callicoder/spring-security-react-ant-design-polls-app" -> "kantega/react-and-spring"
"callicoder/spring-security-react-ant-design-polls-app" -> "murraco/spring-boot-jwt"
"callicoder/spring-security-react-ant-design-polls-app" -> "callicoder/spring-boot-file-upload-download-rest-api-example"
"callicoder/spring-security-react-ant-design-polls-app" -> "callicoder/spring-boot-websocket-chat-demo"
"callicoder/spring-security-react-ant-design-polls-app" -> "spring-petclinic/spring-petclinic-reactjs"
"callicoder/spring-security-react-ant-design-polls-app" -> "RameshMF/ReactJS-Spring-Boot-CRUD-Full-Stack-App"
"callicoder/spring-security-react-ant-design-polls-app" -> "jonashackt/spring-boot-vuejs"
"callicoder/spring-security-react-ant-design-polls-app" -> "callicoder/spring-boot-mysql-rest-api-tutorial"
"callicoder/spring-security-react-ant-design-polls-app" -> "gothinkster/spring-boot-realworld-example-app" ["e"=1]
"callicoder/spring-security-react-ant-design-polls-app" -> "spring-petclinic/spring-petclinic-microservices"
"callicoder/spring-security-react-ant-design-polls-app" -> "Baeldung/spring-security-registration"
"callicoder/spring-security-react-ant-design-polls-app" -> "sivaprasadreddy/spring-boot-microservices-series"
"callicoder/spring-security-react-ant-design-polls-app" -> "piomin/sample-spring-microservices-new"
"merikbest/ecommerce-spring-reactjs" -> "ujjavaldesai07/spring-boot-react-ecommerce-app"
"merikbest/ecommerce-spring-reactjs" -> "merikbest/twitter-spring-reactjs"
"merikbest/ecommerce-spring-reactjs" -> "devdcores/BookStoreApp-Distributed-Application"
"merikbest/ecommerce-spring-reactjs" -> "merikbest/OnlineShop"
"merikbest/ecommerce-spring-reactjs" -> "devRobots/spring-boot-ecommerce"
"merikbest/ecommerce-spring-reactjs" -> "antkaynak/Keyist-Ecommerce"
"merikbest/ecommerce-spring-reactjs" -> "keumtae-kim/spring-boot-react-blog"
"merikbest/ecommerce-spring-reactjs" -> "MoonSulong/Ecommerce"
"merikbest/ecommerce-spring-reactjs" -> "SaiUpadhyayula/SpringAngularEcommerce"
"merikbest/ecommerce-spring-reactjs" -> "eherozhao/E-Commerce-Spring-Boot"
"merikbest/twitter-spring-reactjs" -> "merikbest/ecommerce-spring-reactjs"
"piomin/sample-spring-microservices-kubernetes" -> "piomin/sample-spring-microservices-new"
"piomin/sample-spring-microservices-kubernetes" -> "piomin/sample-spring-microservices-advanced"
"piomin/sample-spring-microservices-kubernetes" -> "piomin/sample-spring-microservices"
"piomin/sample-spring-microservices-kubernetes" -> "ewolff/microservice-kubernetes"
"piomin/sample-spring-microservices-kubernetes" -> "mohamed-taman/Springy-Store-Microservices"
"yidongnan/spring-cloud-netflix-example" -> "yidongnan/spring-cloud-consul-example"
"yidongnan/spring-cloud-netflix-example" -> "zpng/spring-cloud-microservice-examples"
"yidongnan/spring-cloud-netflix-example" -> "kbastani/spring-cloud-microservice-example"
"yidongnan/spring-cloud-netflix-example" -> "ThoreauZZ/spring-cloud-example"
"yidongnan/spring-cloud-netflix-example" -> "prontera/spring-cloud-rest-tcc" ["e"=1]
"yidongnan/spring-cloud-netflix-example" -> "kakawait/uaa-behind-zuul-sample"
"yidongnan/spring-cloud-netflix-example" -> "rohitghatol/spring-boot-microservices"
"yidongnan/spring-cloud-netflix-example" -> "kbastani/spring-cloud-event-sourcing-example"
"yidongnan/spring-cloud-netflix-example" -> "xetys/spring-cloud-oauth2-example"
"yidongnan/spring-cloud-netflix-example" -> "sqshq/PiggyMetrics"
"yidongnan/spring-cloud-netflix-example" -> "cloudframeworks-springcloud/user-guide-springcloud" ["e"=1]
"yidongnan/spring-cloud-netflix-example" -> "eacdy/spring-cloud-study" ["e"=1]
"yidongnan/spring-cloud-netflix-example" -> "idugalic/micro-company"
"yidongnan/spring-cloud-netflix-example" -> "SpringCloud/spring-cloud-document" ["e"=1]
"yidongnan/spring-cloud-netflix-example" -> "leelance/spring-boot-all" ["e"=1]
"PacktPublishing/Hands-On-Microservices-with-Spring-Boot-and-Spring-Cloud" -> "PacktPublishing/Microservices-with-Spring-Boot-and-Spring-Cloud-2E"
"PacktPublishing/Hands-On-Microservices-with-Spring-Boot-and-Spring-Cloud" -> "PacktPublishing/Hands-On-Reactive-Programming-in-Spring-5"
"PacktPublishing/Hands-On-Microservices-with-Spring-Boot-and-Spring-Cloud" -> "piomin/sample-spring-microservices-new"
"PacktPublishing/Hands-On-Microservices-with-Spring-Boot-and-Spring-Cloud" -> "PacktPublishing/Spring-Microservices"
"PacktPublishing/Hands-On-Microservices-with-Spring-Boot-and-Spring-Cloud" -> "piomin/sample-spring-microservices"
"PacktPublishing/Hands-On-Microservices-with-Spring-Boot-and-Spring-Cloud" -> "mohamed-taman/Springy-Store-Microservices"
"PacktPublishing/Hands-On-Microservices-with-Spring-Boot-and-Spring-Cloud" -> "ThomasVitale/cloud-native-spring-in-action" ["e"=1]
"PacktPublishing/Hands-On-Microservices-with-Spring-Boot-and-Spring-Cloud" -> "sivaprasadreddy/spring-boot-microservices-series"
"PacktPublishing/Hands-On-Microservices-with-Spring-Boot-and-Spring-Cloud" -> "hibernate/hibernate-reactive" ["e"=1]
"PacktPublishing/Hands-On-Microservices-with-Spring-Boot-and-Spring-Cloud" -> "PacktPublishing/Learning-Spring-Boot-2.0-Second-Edition" ["e"=1]
"william-tran/microservice-security" -> "spencergibb/myfeed"
"william-tran/microservice-security" -> "pivotal-cf/identity-sample-apps"
"william-tran/microservice-security" -> "SpringOne2GX-2014/microservice-security"
"william-tran/microservice-security" -> "sharmaritesh/spring-angularjs-oauth2-sample"
"william-tran/microservice-security" -> "callistaenterprise/blog-microservices"
"william-tran/microservice-security" -> "william-tran/freddys-bbq" ["e"=1]
"william-tran/microservice-security" -> "xetys/spring-cloud-oauth2-example"
"william-tran/microservice-security" -> "kakawait/uaa-behind-zuul-sample"
"davidetaibi/Microservices_Project_List" -> "apssouza22/java-microservice"
"davidetaibi/Microservices_Project_List" -> "FudanSELab/train-ticket" ["e"=1]
"davidetaibi/Microservices_Project_List" -> "spring-petclinic/spring-petclinic-microservices"
"davidetaibi/Microservices_Project_List" -> "venkataravuri/e-commerce-microservices-sample"
"davidetaibi/Microservices_Project_List" -> "digota/digota" ["e"=1]
"davidetaibi/Microservices_Project_List" -> "sivaprasadreddy/spring-boot-microservices-series"
"davidetaibi/Microservices_Project_List" -> "anilallewar/microservices-basics-spring-boot"
"davidetaibi/Microservices_Project_List" -> "microservices-patterns/ftgo-application"
"davidetaibi/Microservices_Project_List" -> "oktadeveloper/spring-boot-microservices-example"
"davidetaibi/Microservices_Project_List" -> "hantsy/spring-microservice-sample"
"davidetaibi/Microservices_Project_List" -> "idugalic/micro-ecommerce"
"davidetaibi/Microservices_Project_List" -> "cer/microservices-examples"
"davidetaibi/Microservices_Project_List" -> "wimdeblauwe/error-handling-spring-boot-starter" ["e"=1]
"davidetaibi/Microservices_Project_List" -> "vmudigal/microservices-sample"
"davidetaibi/Microservices_Project_List" -> "mfornos/awesome-microservices" ["e"=1]
"spring-petclinic/spring-petclinic-rest" -> "spring-petclinic/spring-petclinic-angular"
"spring-petclinic/spring-petclinic-rest" -> "spring-petclinic/spring-framework-petclinic"
"spring-petclinic/spring-petclinic-rest" -> "spring-petclinic/spring-petclinic-reactjs"
"spring-petclinic/spring-petclinic-rest" -> "spring-petclinic/spring-petclinic-microservices"
"spring-petclinic/spring-petclinic-rest" -> "spring-petclinic/spring-petclinic-data-jdbc"
"spring-petclinic/spring-petclinic-rest" -> "spring-petclinic/spring-petclinic-kotlin"
"spring-petclinic/spring-petclinic-rest" -> "spring-petclinic/spring-petclinic-graphql"
"spring-petclinic/spring-petclinic-rest" -> "spring-projects/spring-hateoas-examples"
"HubSpot/prettier-maven-plugin" -> "jhipster/prettier-java"
"schananas/practical-reactor" -> "AxonFramework/IdeaPlugin"
"MoonSulong/Ecommerce" -> "eherozhao/E-Commerce-Spring-Boot"
"MoonSulong/Ecommerce" -> "TouhidurRahamanKhan/Online-shopping-Spring-MVC-java-config-mysql-hibernate"
"MoonSulong/Ecommerce" -> "foysal-mahmud/E-BookShop----Spring-boot"
"MoonSulong/Ecommerce" -> "sushildangi/online-shopping"
"dailycodebuffer/Spring-MVC-Tutorials" -> "shabbirdwd53/Springboot-Microservice"
"dailycodebuffer/Spring-MVC-Tutorials" -> "shabbirdwd53/spring-security-tutorial"
"shabbirdwd53/Springboot-Microservice" -> "dailycodebuffer/Spring-MVC-Tutorials"
"shabbirdwd53/Springboot-Microservice" -> "shabbirdwd53/Springboot-k8s"
"shabbirdwd53/Springboot-Microservice" -> "shabbirdwd53/event-driven-microservices"
"shabbirdwd53/Springboot-Microservice" -> "shabbirdwd53/spring-boot-microservices"
"shabbirdwd53/Springboot-Microservice" -> "SaiUpadhyayula/spring-boot-microservices-new"
"shabbirdwd53/Springboot-Microservice" -> "shabbirdwd53/Springboot-Tutorial"
"shabbirdwd53/Springboot-Microservice" -> "shabbirdwd53/Kubernetes-Tutorial"
"shabbirdwd53/Springboot-Microservice" -> "tanerdiler/spring-boot-microservice-eureka-zuul-docker-gateway-kubernetes"
"spring-guides/gs-serving-web-content" -> "spring-guides/gs-securing-web"
"spring-guides/gs-serving-web-content" -> "spring-guides/gs-scheduling-tasks"
"spring-guides/gs-serving-web-content" -> "spring-guides/gs-testing-web"
"spring-guides/gs-serving-web-content" -> "spring-guides/gs-rest-service-cors"
"spring-guides/gs-serving-web-content" -> "spring-guides/gs-rest-service"
"jhipster/jhipster-sample-app-react" -> "jhipster/react-jhipster"
"jhipster/jhipster-sample-app-react" -> "jhipster/jhipster-net-sample-app-template"
"RameshMF/spring-mvc-tutorial" -> "RameshMF/registration-login-spring-boot-security-thymeleaf-hibernate"
"RameshMF/spring-mvc-tutorial" -> "RameshMF/todo-management-spring-boot"
"RameshMF/spring-mvc-tutorial" -> "RameshMF/Hibernate-ORM-Tutorials"
"RameshMF/spring-mvc-tutorial" -> "RameshMF/registration-login-springboot-security-thymeleaf"
"RameshMF/spring-mvc-tutorial" -> "RameshMF/spring-boot-tutorial"
"RameshMF/spring-mvc-tutorial" -> "RameshMF/springboot-thymeleaf-crud-pagination-sorting-webapp"
"RameshMF/spring-mvc-tutorial" -> "RameshMF/student-management-system-springboot"
"RameshMF/spring-mvc-tutorial" -> "RameshMF/employee-management-webapp"
"RameshMF/spring-mvc-tutorial" -> "RameshMF/jsp-servlet-jdbc-mysql-crud-tutorial"
"RameshMF/spring-mvc-tutorial" -> "RameshMF/Angular8-SpringBoot-CRUD-Tutorial"
"RameshMF/spring-mvc-tutorial" -> "in28minutes/SpringBootWebApplicationStepByStep" ["e"=1]
"deepIify/oauth-login-be" -> "deepIify/oauth-login-fe"
"iainporter/oauth2-provider" -> "iainporter/rest-java"
"iainporter/oauth2-provider" -> "royclarkson/spring-rest-service-oauth"
"iainporter/oauth2-provider" -> "techdev-solutions/trackr-backend"
"iainporter/oauth2-provider" -> "rajithd/spring-boot-oauth2"
"iainporter/oauth2-provider" -> "neel4software/SpringSecurityOAuth2"
"iainporter/oauth2-provider" -> "nareshbafna/oauth2"
"iainporter/oauth2-provider" -> "dsyer/sparklr-boot"
"abixen/abixen-platform" -> "powerflows/powerflows-dmn"
"abixen/abixen-platform" -> "flowing/flowing-retail" ["e"=1]
"abixen/abixen-platform" -> "miyoz/gurufinder"
"abixen/abixen-platform" -> "changmingxie/aggregate-framework" ["e"=1]
"abixen/abixen-platform" -> "dayatang/dddlib" ["e"=1]
"abixen/abixen-platform" -> "kbastani/spring-cloud-microservice-example"
"abixen/abixen-platform" -> "benwilcock/microservice-sampler"
"abixen/abixen-platform" -> "idugalic/micro-company"
"abixen/abixen-platform" -> "sqshq/PiggyMetrics"
"abixen/abixen-platform" -> "rohitghatol/spring-boot-microservices"
"abixen/abixen-platform" -> "sdaschner/scalable-coffee-shop" ["e"=1]
"abixen/abixen-platform" -> "aol/micro-server" ["e"=1]
"RameshMF/Hibernate-ORM-Tutorials" -> "RameshMF/spring-mvc-tutorial"
"netgloo/spring-boot-samples" -> "rohitghatol/spring-boot-microservices"
"netgloo/spring-boot-samples" -> "Raysmond/SpringBlog" ["e"=1]
"netgloo/spring-boot-samples" -> "springframeworkguru/springbootwebapp"
"netgloo/spring-boot-samples" -> "kbastani/spring-cloud-microservice-example"
"netgloo/spring-boot-samples" -> "qibaoguang/Spring-Boot-Reference-Guide" ["e"=1]
"netgloo/spring-boot-samples" -> "spring-projects/spring-data-examples" ["e"=1]
"netgloo/spring-boot-samples" -> "leelance/spring-boot-all" ["e"=1]
"netgloo/spring-boot-samples" -> "spring-guides/tut-spring-security-and-angular-js"
"netgloo/spring-boot-samples" -> "szerhusenBC/jwt-spring-security-demo"
"netgloo/spring-boot-samples" -> "jhades/spring-mvc-angularjs-sample-app"
"netgloo/spring-boot-samples" -> "codecentric/spring-boot-admin" ["e"=1]
"netgloo/spring-boot-samples" -> "sqshq/PiggyMetrics"
"netgloo/spring-boot-samples" -> "spring-projects/spring-mvc-showcase" ["e"=1]
"netgloo/spring-boot-samples" -> "hantsy/angularjs-springmvc-sample-boot"
"netgloo/spring-boot-samples" -> "livelessons-spring/building-microservices"
"hellokoding/hellokoding-courses" -> "mkyong/spring-boot"
"hellokoding/hellokoding-courses" -> "sivaprasadreddy/spring-boot-microservices-series"
"hellokoding/hellokoding-courses" -> "RameshMF/spring-boot-tutorial"
"hellokoding/hellokoding-courses" -> "gustavoponce7/spring-login"
"hellokoding/hellokoding-courses" -> "callicoder/spring-security-react-ant-design-polls-app"
"hellokoding/hellokoding-courses" -> "spring-framework-guru/sfg-blog-posts"
"hellokoding/hellokoding-courses" -> "adamzareba/company-structure-spring-security-oauth2-authorities"
"hellokoding/hellokoding-courses" -> "TechPrimers/spring-security-oauth-example"
"hellokoding/hellokoding-courses" -> "AnghelLeonard/Hibernate-SpringBoot" ["e"=1]
"hellokoding/hellokoding-courses" -> "thombergs/code-examples" ["e"=1]
"hellokoding/hellokoding-courses" -> "kbastani/event-sourcing-microservices-example"
"hellokoding/hellokoding-courses" -> "OmarElGabry/microservices-spring-boot"
"hellokoding/hellokoding-courses" -> "callicoder/jpa-hibernate-tutorials"
"hellokoding/hellokoding-courses" -> "callicoder/spring-boot-file-upload-download-rest-api-example"
"hellokoding/hellokoding-courses" -> "piomin/sample-spring-microservices-new"
"stomp-js/stompjs" -> "stomp-js/rx-stomp"
"stomp-js/stompjs" -> "stomp-js/ng2-stompjs"
"stomp-js/stompjs" -> "jmesnil/stomp-websocket"
"stomp-js/stompjs" -> "JSteunou/webstomp-client"
"stomp-js/stompjs" -> "lahsivjar/react-stomp"
"stomp-js/stompjs" -> "stomp-js/stomp-websocket"
"stomp-js/stompjs" -> "sockjs/sockjs-client" ["e"=1]
"stomp-js/stompjs" -> "stomp-js/samples"
"BroadleafCommerce/BroadleafCommerce" -> "BroadleafCommerce/DemoSite"
"BroadleafCommerce/BroadleafCommerce" -> "shopizer-ecommerce/shopizer"
"BroadleafCommerce/BroadleafCommerce" -> "spring-io/sagan" ["e"=1]
"BroadleafCommerce/BroadleafCommerce" -> "apache/ofbiz" ["e"=1]
"BroadleafCommerce/BroadleafCommerce" -> "qalingo/qalingo-engine"
"BroadleafCommerce/BroadleafCommerce" -> "idugalic/micro-ecommerce"
"BroadleafCommerce/BroadleafCommerce" -> "BroadleafCommerce/ReactStarter"
"BroadleafCommerce/BroadleafCommerce" -> "sqshq/PiggyMetrics"
"BroadleafCommerce/BroadleafCommerce" -> "alkacon/opencms-core" ["e"=1]
"BroadleafCommerce/BroadleafCommerce" -> "spring-projects/spring-petclinic" ["e"=1]
"BroadleafCommerce/BroadleafCommerce" -> "rohitghatol/spring-boot-microservices"
"BroadleafCommerce/BroadleafCommerce" -> "kbastani/spring-cloud-microservice-example"
"BroadleafCommerce/BroadleafCommerce" -> "kolorobot/spring-mvc-quickstart-archetype"
"BroadleafCommerce/BroadleafCommerce" -> "liferay/liferay-portal"
"BroadleafCommerce/BroadleafCommerce" -> "JohnnyLe/Modern-Ecommerce"
"jhipster/jhipster-registry" -> "jhipster/jhipster-console"
"jhipster/jhipster-registry" -> "jhipster/jhipster"
"jhipster/jhipster-registry" -> "jhipster/jhipster.github.io"
"jhipster/jhipster-registry" -> "jhipster/jhipster-devbox"
"jhipster/jhipster-registry" -> "jhipster/jdl-studio"
"jhipster/jhipster-registry" -> "jhipster/ng-jhipster"
"jhipster/jhipster-registry" -> "jhipster/jhipster-online"
"jhipster/jhipster-registry" -> "jhipster/jhipster-core"
"jhipster/jhipster-registry" -> "jhipster/jdl-samples"
"jhipster/jhipster-registry" -> "jhipster/jhipster-sample-app"
"jhipster/jhipster-registry" -> "jhipster/jhipster-control-center"
"jhipster/jhipster-registry" -> "jhipster/jhipster-vuejs"
"jhipster/jhipster-registry" -> "jhipster/jhipster-uml"
"jhipster/jhipster-registry" -> "jhipster/jhipster-ide"
"jhipster/jhipster-registry" -> "jhipster/jhipster-guides"
"mechero/spring-boot-testing-strategies" -> "xpinjection/test-driven-spring-boot"
"mechero/spring-boot-testing-strategies" -> "hamvocke/spring-testing"
"mechero/spring-boot-testing-strategies" -> "isopropylcyanide/Jwt-Spring-Security-JPA"
"mechero/spring-boot-testing-strategies" -> "msbaek/atdd-example" ["e"=1]
"mechero/spring-boot-testing-strategies" -> "hantsy/spring-microservice-sample"
"mechero/spring-boot-testing-strategies" -> "abhisheksr01/spring-boot-microservice-best-practices"
"spring-guides/gs-messaging-stomp-websocket" -> "rstoyanchev/spring-websocket-portfolio"
"spring-guides/gs-messaging-stomp-websocket" -> "salmar/spring-websocket-chat"
"spring-guides/gs-messaging-stomp-websocket" -> "jmesnil/stomp-websocket"
"spring-guides/gs-messaging-stomp-websocket" -> "spring-guides/gs-securing-web"
"spring-guides/gs-messaging-stomp-websocket" -> "callicoder/spring-boot-websocket-chat-demo"
"TechPrimers/spring-security-oauth-example" -> "TechPrimers/jwt-security-example"
"TechPrimers/spring-security-oauth-example" -> "TechPrimers/spring-security-db-example"
"TechPrimers/spring-security-oauth-example" -> "TechPrimers/stock-price-viewer-microservices-part1"
"TechPrimers/spring-security-oauth-example" -> "TechPrimers/spring-security-oauth-mysql-example"
"TechPrimers/spring-security-oauth-example" -> "TechPrimers/docker-mysql-spring-boot-example"
"kantega/react-and-spring" -> "oktadeveloper/okta-spring-boot-react-crud-example"
"kantega/react-and-spring" -> "in28minutes/spring-boot-react-fullstack-examples" ["e"=1]
"kantega/react-and-spring" -> "callicoder/spring-security-react-ant-design-polls-app"
"kantega/react-and-spring" -> "spring-guides/tut-react-and-spring-data-rest"
"kantega/react-and-spring" -> "spring-petclinic/spring-petclinic-reactjs"
"kantega/react-and-spring" -> "keumtae-kim/spring-boot-react-blog"
"kantega/react-and-spring" -> "oktadeveloper/spring-boot-react-example"
"kantega/react-and-spring" -> "mukundmadhav/react-springboot-mysql"
"kantega/react-and-spring" -> "winterbe/spring-react-example"
"kantega/react-and-spring" -> "in28minutes/full-stack-with-react-and-spring-boot" ["e"=1]
"kantega/react-and-spring" -> "cheese10yun/spring-jpa-best-practices" ["e"=1]
"kantega/react-and-spring" -> "pjok1122/Spring-Summary" ["e"=1]
"kantega/react-and-spring" -> "kdevkr/spring-demo-security"
"spring-petclinic/spring-petclinic-reactjs" -> "spring-petclinic/spring-petclinic-graphql"
"spring-petclinic/spring-petclinic-reactjs" -> "spring-petclinic/spring-framework-petclinic"
"spring-petclinic/spring-petclinic-reactjs" -> "spring-petclinic/spring-petclinic-angular"
"spring-petclinic/spring-petclinic-reactjs" -> "spring-petclinic/spring-petclinic-rest"
"spring-petclinic/spring-petclinic-reactjs" -> "spring-petclinic/spring-petclinic-data-jdbc"
"spring-petclinic/spring-petclinic-reactjs" -> "spring-petclinic/spring-petclinic-microservices"
"spring-petclinic/spring-petclinic-reactjs" -> "spring-petclinic/spring-petclinic-kotlin"
"spring-petclinic/spring-petclinic-reactjs" -> "keumtae-kim/spring-boot-react-blog"
"fabric8io/spring-cloud-kubernetes" -> "spring-cloud-incubator/spring-cloud-kubernetes"
"fabric8io/spring-cloud-kubernetes" -> "fabric8io/kubeflix"
"fabric8io/spring-cloud-kubernetes" -> "IBM/spring-boot-microservices-on-kubernetes"
"fabric8io/spring-cloud-kubernetes" -> "fabric8io/fabric8" ["e"=1]
"fabric8io/spring-cloud-kubernetes" -> "spring-cloud/spring-cloud-kubernetes" ["e"=1]
"fabric8io/spring-cloud-kubernetes" -> "fabric8io/fabric8-maven-plugin" ["e"=1]
"fabric8io/spring-cloud-kubernetes" -> "kakawait/uaa-behind-zuul-sample"
"fabric8io/spring-cloud-kubernetes" -> "kbastani/spring-cloud-microservice-example"
"fabric8io/spring-cloud-kubernetes" -> "fabric8io/kubernetes-client" ["e"=1]
"fabric8io/spring-cloud-kubernetes" -> "saturnism/istio-by-example-java" ["e"=1]
"fabric8io/spring-cloud-kubernetes" -> "prontera/spring-cloud-rest-tcc" ["e"=1]
"fabric8io/spring-cloud-kubernetes" -> "sqshq/PiggyMetrics"
"fabric8io/spring-cloud-kubernetes" -> "wxiaoqi/Spring-Cloud-AG-Admin" ["e"=1]
"fabric8io/spring-cloud-kubernetes" -> "rohitghatol/spring-boot-microservices"
"fabric8io/spring-cloud-kubernetes" -> "kbastani/spring-cloud-event-sourcing-example"
"piomin/sample-spring-microservices-new" -> "piomin/sample-spring-microservices"
"piomin/sample-spring-microservices-new" -> "sivaprasadreddy/spring-boot-microservices-series"
"piomin/sample-spring-microservices-new" -> "spring-petclinic/spring-petclinic-microservices"
"piomin/sample-spring-microservices-new" -> "piomin/sample-spring-microservices-kubernetes"
"piomin/sample-spring-microservices-new" -> "anilallewar/microservices-basics-spring-boot"
"piomin/sample-spring-microservices-new" -> "piomin/sample-spring-microservices-advanced"
"piomin/sample-spring-microservices-new" -> "mohamed-taman/Springy-Store-Microservices"
"piomin/sample-spring-microservices-new" -> "oktadev/java-microservices-examples"
"piomin/sample-spring-microservices-new" -> "kbastani/event-sourcing-microservices-example"
"piomin/sample-spring-microservices-new" -> "oktadev/spring-boot-microservices-example"
"piomin/sample-spring-microservices-new" -> "rohitghatol/spring-boot-microservices"
"piomin/sample-spring-microservices-new" -> "hantsy/spring-microservice-sample"
"piomin/sample-spring-microservices-new" -> "Nasruddin/spring-boot-based-microservices"
"piomin/sample-spring-microservices-new" -> "devdcores/BookStoreApp-Distributed-Application"
"piomin/sample-spring-microservices-new" -> "oktadeveloper/java-microservices-examples"
"sqshq/PiggyMetrics" -> "kbastani/spring-cloud-microservice-example"
"sqshq/PiggyMetrics" -> "prontera/spring-cloud-rest-tcc" ["e"=1]
"sqshq/PiggyMetrics" -> "rohitghatol/spring-boot-microservices"
"sqshq/PiggyMetrics" -> "cloudframeworks-springcloud/user-guide-springcloud" ["e"=1]
"sqshq/PiggyMetrics" -> "codecentric/spring-boot-admin" ["e"=1]
"sqshq/PiggyMetrics" -> "zhangxd1989/spring-boot-cloud" ["e"=1]
"sqshq/PiggyMetrics" -> "spring-cloud/spring-cloud-netflix" ["e"=1]
"sqshq/PiggyMetrics" -> "kbastani/spring-cloud-event-sourcing-example"
"sqshq/PiggyMetrics" -> "hs-web/hsweb-framework" ["e"=1]
"sqshq/PiggyMetrics" -> "paascloud/paascloud-master" ["e"=1]
"sqshq/PiggyMetrics" -> "ityouknow/spring-cloud-examples" ["e"=1]
"sqshq/PiggyMetrics" -> "wxiaoqi/Spring-Cloud-Admin" ["e"=1]
"sqshq/PiggyMetrics" -> "changmingxie/tcc-transaction" ["e"=1]
"sqshq/PiggyMetrics" -> "Wechat-Group/weixin-java-tools" ["e"=1]
"sqshq/PiggyMetrics" -> "yidongnan/spring-cloud-netflix-example"
"zifangsky/WebSocketDemo" -> "JMCuixy/SpringWebSocket"
"RameshMF/java-blog-aggregator-boot" -> "RameshMF/spring-security-react-ant-design-polls-app"
"RameshMF/sagan" -> "RameshMF/initializr"
"RameshMF/sagan" -> "RameshMF/spring-petclinic"
"RameshMF/sagan" -> "RameshMF/spring-security-react-ant-design-polls-app"
"RameshMF/sagan" -> "RameshMF/java-blog-aggregator-boot"
"RameshMF/spring-petclinic" -> "RameshMF/spring-security-react-ant-design-polls-app"
"qqxx6661/springboot-websocket-demo" -> "yudiandemingzi/spring-boot-websocket-study"
"qqxx6661/springboot-websocket-demo" -> "niezhiliang/springbootwebsocket"
"spring-cloud-samples/feign-eureka" -> "spring-cloud-samples/eureka"
"spring-cloud-samples/feign-eureka" -> "spring-cloud-samples/turbine"
"niezhiliang/springbootwebsocket" -> "tanhaiyang/springboot-rabbitMQ-websocket"
"niezhiliang/springbootwebsocket" -> "qqxx6661/springboot-websocket-demo"
"niezhiliang/springbootwebsocket" -> "zifangsky/WebSocketDemo"
"niezhiliang/springbootwebsocket" -> "yudiandemingzi/spring-boot-websocket-study"
"niezhiliang/springbootwebsocket" -> "scalad/LayIM" ["e"=1]
"niezhiliang/springbootwebsocket" -> "zhuangjiesen/WebSocket_Netty"
"niezhiliang/springbootwebsocket" -> "yy1193889747/chat-demo"
"niezhiliang/springbootwebsocket" -> "17661977890/websocket"
"jhipster/jhipster-console" -> "jhipster/jhipster-registry"
"jhipster/jhipster-console" -> "jhipster/jhipster-control-center"
"jhipster/jhipster-console" -> "jhipster/jhipster-devbox"
"jhipster/jhipster-console" -> "jhipster/ng-jhipster"
"jhipster/jhipster-console" -> "jhipster/jhipster-uml"
"jhipster/jhipster-console" -> "jhipster/jhipster-dependencies"
"jhipster/jhipster-console" -> "jhipster/jhipster-experimental-microservices"
"jhipster/jhipster-console" -> "jhipster/jhipster-oh-my-zsh-plugin"
"jhipster/jhipster-console" -> "cbornet/generator-jhipster-grpc"
"jhipster/jhipster-console" -> "jhipster/jdl-studio"
"mrin9/Angular-SpringBoot-REST-JWT" -> "bfwg/angular-spring-starter"
"mrin9/Angular-SpringBoot-REST-JWT" -> "bfwg/springboot-jwt-starter"
"mrin9/Angular-SpringBoot-REST-JWT" -> "zhulinn/SpringBoot-Angular7-Online-Shopping-Store"
"mrin9/Angular-SpringBoot-REST-JWT" -> "RameshMF/Angular8-SpringBoot-CRUD-Tutorial"
"mrin9/Angular-SpringBoot-REST-JWT" -> "svlada/springboot-security-jwt"
"mrin9/Angular-SpringBoot-REST-JWT" -> "Saka7/spring-boot-angular4-boilerplate"
"mrin9/Angular-SpringBoot-REST-JWT" -> "hantsy/angularjs-springmvc-sample-boot"
"mrin9/Angular-SpringBoot-REST-JWT" -> "kamalber/spring-boot-angular4-authentication"
"mrin9/Angular-SpringBoot-REST-JWT" -> "vhoang55/springboot-jwt-angular2"
"mrin9/Angular-SpringBoot-REST-JWT" -> "szerhusenBC/jwt-spring-security-demo"
"mrin9/Angular-SpringBoot-REST-JWT" -> "mpalourdio/SpringBootAngularHTML5"
"mrin9/Angular-SpringBoot-REST-JWT" -> "hantsy/angular-spring-reactive-sample"
"mrin9/Angular-SpringBoot-REST-JWT" -> "ipassynk/angular-springboot-jwt"
"mrin9/Angular-SpringBoot-REST-JWT" -> "in28minutes/full-stack-with-angular-and-spring-boot" ["e"=1]
"mrin9/Angular-SpringBoot-REST-JWT" -> "nydiarra/springboot-jwt"
"jhipster/jhipster-devbox" -> "jhipster/jhipster-uml"
"jhipster/jhipster-devbox" -> "jhipster/jhipster-console"
"jhipster/jhipster-devbox" -> "jhipster/jhipster-control-center"
"jhipster/jhipster-devbox" -> "jhipster/jhipster-registry"
"jhipster/jhipster-devbox" -> "jhipster/jhipster-oh-my-zsh-plugin"
"liferay/liferay-ide" -> "fromzore/alien_invasion"
"liferay/liferay-ide" -> "zhonghuasheng/30min_guides"
"liferay/liferay-ide" -> "zhonghuasheng/Chart.js"
"liferay/liferay-ide" -> "zhonghuasheng/apollo"
"liferay/liferay-ide" -> "zhonghuasheng/geek-programming-books"
"liferay/liferay-ide" -> "zhonghuasheng/mall"
"liferay/liferay-ide" -> "zhonghuasheng/mall-admin-web"
"liferay/liferay-ide" -> "zhonghuasheng/mst"
"liferay/liferay-ide" -> "zhonghuasheng/mybatis"
"liferay/liferay-ide" -> "zhonghuasheng/xld-liferay-plugin"
"liferay/liferay-ide" -> "fromzore/TreeNode"
"liferay/liferay-ide" -> "zhonghuasheng/Project"
"liferay/liferay-ide" -> "zhonghuasheng/spring4-showcase"
"liferay/liferay-ide" -> "liferay/liferay-docs"
"liferay/liferay-ide" -> "zhonghuasheng/AngularJS"
"spring-guides/gs-testing-web" -> "spring-guides/gs-securing-web"
"brunocleite/spring-boot-exception-handling" -> "callicoder/spring-boot-file-upload-download-rest-api-example"
"brunocleite/spring-boot-exception-handling" -> "hantsy/angular-spring-reactive-sample"
"brunocleite/spring-boot-exception-handling" -> "khoubyari/spring-boot-rest-example"
"brunocleite/spring-boot-exception-handling" -> "lokeshgupta1981/SpringExamples"
"brunocleite/spring-boot-exception-handling" -> "piomin/sample-spring-microservices-new"
"brunocleite/spring-boot-exception-handling" -> "in28minutes/spring-boot-examples" ["e"=1]
"TransEmpiric/webFluxTemplate" -> "raphaelDL/spring-webflux-security-jwt"
"TransEmpiric/webFluxTemplate" -> "TransEmpiric/simple-encryptor"
"TransEmpiric/webFluxTemplate" -> "TransEmpiric/iso-web-template"
"raphaelDL/spring-webflux-security-jwt" -> "ard333/spring-boot-webflux-jjwt"
"raphaelDL/spring-webflux-security-jwt" -> "TransEmpiric/webFluxTemplate"
"raphaelDL/spring-webflux-security-jwt" -> "duyleduc/spring-boot-webflux-security"
"raphaelDL/spring-webflux-security-jwt" -> "mechero/full-reactive-stack"
"raphaelDL/spring-webflux-security-jwt" -> "mostafacs/ecommerce-microservices-spring-reactive-webflux"
"raphaelDL/spring-webflux-security-jwt" -> "oktadeveloper/okta-spring-webflux-react-example"
"raphaelDL/spring-webflux-security-jwt" -> "callicoder/spring-webflux-reactive-rest-api-demo"
"joshlong/cloud-native-workshop" -> "joshlong/bootiful-microservices"
"joshlong/cloud-native-workshop" -> "kbastani/spring-cloud-event-sourcing-example"
"joshlong/cloud-native-workshop" -> "joshlong/flux-flix-service" ["e"=1]
"joshlong/cloud-native-workshop" -> "philwebb/testing-spring-boot-applications"
"joshlong/cloud-native-workshop" -> "joshlong/boot-examples"
"joshlong/cloud-native-workshop" -> "livelessons-spring/building-microservices"
"joshlong/cloud-native-workshop" -> "joshlong/bootiful-microservices-config"
"joshlong/cloud-native-workshop" -> "joshlong/bootiful-reactive-microservices"
"joshlong/cloud-native-workshop" -> "kbastani/spring-cloud-microservice-example"
"joshlong/cloud-native-workshop" -> "olivergierke/spring-restbucks" ["e"=1]
"joshlong/cloud-native-workshop" -> "spring-guides/tut-spring-security-and-angular-js"
"joshlong/cloud-native-workshop" -> "callistaenterprise/blog-microservices"
"joshlong/cloud-native-workshop" -> "spring-cloud/spring-cloud-contract" ["e"=1]
"joshlong/cloud-native-workshop" -> "joshlong/the-spring-rest-stack" ["e"=1]
"joshlong/cloud-native-workshop" -> "rohitghatol/spring-boot-microservices"
"jhipster/generator-jhipster-nodejs" -> "jhipster/jhipster-dotnetcore"
"jhipster/generator-jhipster-nodejs" -> "jhipster/ng-jhipster"
"jhipster/generator-jhipster-nodejs" -> "jhipster/jhipster-sample-app-nodejs"
"jhipster/generator-jhipster-nodejs" -> "jhipster/jhipster-kotlin"
"jhipster/generator-jhipster-nodejs" -> "jhipster/jdl-samples"
"jhipster/generator-jhipster-nodejs" -> "jhipster/generator-jhipster-blueprint"
"jhipster/generator-jhipster-nodejs" -> "jhipster/jhipster-online"
"jhipster/generator-jhipster-nodejs" -> "jhipster/jhipster.github.io"
"hellokoding/registration-login-spring-hsql" -> "hellokoding/registration-login-spring-xml-maven-jsp-mysql"
"hellokoding/registration-login-spring-hsql" -> "gustavoponce7/spring-login"
"hellokoding/registration-login-spring-hsql" -> "gustavoponce7/SpringSecurityLoginTutorial"
"kakawait/uaa-behind-zuul-sample" -> "xetys/spring-cloud-oauth2-example"
"kakawait/uaa-behind-zuul-sample" -> "ThoreauZZ/spring-cloud-example"
"kakawait/uaa-behind-zuul-sample" -> "piomin/sample-spring-oauth2-microservices"
"kakawait/uaa-behind-zuul-sample" -> "yidongnan/spring-cloud-consul-example"
"kakawait/uaa-behind-zuul-sample" -> "flindby/spring-oauth2-zuul"
"kakawait/uaa-behind-zuul-sample" -> "zpng/spring-cloud-microservice-examples"
"kakawait/uaa-behind-zuul-sample" -> "spring-cloud-samples/sso"
"kakawait/uaa-behind-zuul-sample" -> "wiselyman/uaa-zuul" ["e"=1]
"kakawait/uaa-behind-zuul-sample" -> "callistaenterprise/blog-microservices"
"kakawait/uaa-behind-zuul-sample" -> "linking12/saluki" ["e"=1]
"kakawait/uaa-behind-zuul-sample" -> "yidongnan/spring-cloud-netflix-example"
"kakawait/uaa-behind-zuul-sample" -> "william-tran/microservice-security"
"kakawait/uaa-behind-zuul-sample" -> "spring-cloud/spring-cloud-security" ["e"=1]
"kakawait/uaa-behind-zuul-sample" -> "spring-cloud-samples/authserver"
"kakawait/uaa-behind-zuul-sample" -> "wanghongfei/spring-security-oauth2-example" ["e"=1]
"spring-cloud-samples/sso" -> "spring-cloud-samples/authserver"
"spring-cloud-samples/sso" -> "spring-cloud-samples/configserver"
"spring-cloud-samples/sso" -> "kakawait/uaa-behind-zuul-sample"
"spring-cloud-samples/sso" -> "spring-cloud-samples/eureka"
"jhipster/jhipster" -> "jhipster/jhipster.github.io"
"jhipster/jhipster" -> "jhipster/ng-jhipster"
"jhipster/jhipster" -> "jhipster/jhipster-registry"
"jhipster/jhipster" -> "jhipster/jhipster-online"
"jhipster/jhipster" -> "jhipster/jhipster-core"
"jhipster/jhipster" -> "jhipster/jhipster-bom"
"jhipster/jhipster" -> "jhipster/jhipster-kotlin"
"jhipster/jhipster" -> "jhipster/jhipster-ide"
"jhipster/jhipster" -> "jhipster/jhipster-console"
"jhipster/jhipster" -> "jhipster/jhipster-vuejs"
"jhipster/jhipster" -> "jhipster/jdl-studio"
"jhipster/jhipster" -> "jhipster/jhipster-sample-app"
"jhipster/jhipster" -> "jhipster/jhipster-dependencies"
"jhipster/jhipster" -> "oktadeveloper/generator-jhipster-ionic"
"jhipster/jhipster" -> "jhipster/jhipster-guides"
"bezkoder/spring-boot-spring-security-jwt-authentication" -> "bezkoder/react-jwt-auth" ["e"=1]
"bezkoder/spring-boot-spring-security-jwt-authentication" -> "murraco/spring-boot-jwt"
"bezkoder/spring-boot-spring-security-jwt-authentication" -> "bezkoder/spring-boot-refresh-token-jwt"
"bezkoder/spring-boot-spring-security-jwt-authentication" -> "bezkoder/vue-vuex-jwt-auth"
"bezkoder/spring-boot-spring-security-jwt-authentication" -> "isopropylcyanide/Jwt-Spring-Security-JPA"
"bezkoder/spring-boot-spring-security-jwt-authentication" -> "osopromadze/Spring-Boot-Blog-REST-API"
"bezkoder/spring-boot-spring-security-jwt-authentication" -> "amigoscode/login-registration-backend" ["e"=1]
"bezkoder/spring-boot-spring-security-jwt-authentication" -> "bezkoder/spring-boot-security-postgresql"
"bezkoder/spring-boot-spring-security-jwt-authentication" -> "bezkoder/spring-boot-data-jpa-mysql"
"bezkoder/spring-boot-spring-security-jwt-authentication" -> "Yoh0xFF/java-spring-security-example"
"bezkoder/spring-boot-spring-security-jwt-authentication" -> "javadevjournal/javadevjournal"
"bezkoder/spring-boot-spring-security-jwt-authentication" -> "bfwg/springboot-jwt-starter"
"bezkoder/spring-boot-spring-security-jwt-authentication" -> "szerhusenBC/jwt-spring-security-demo"
"bezkoder/spring-boot-spring-security-jwt-authentication" -> "bezkoder/spring-boot-security-jwt-auth-mongodb"
"bezkoder/spring-boot-spring-security-jwt-authentication" -> "spring-projects/spring-security-samples" ["e"=1]
"khandelwal-arpit/springboot-starterkit" -> "khandelwal-arpit/springboot-starterkit-mysql"
"khandelwal-arpit/springboot-starterkit" -> "thombergs/code-examples" ["e"=1]
"khandelwal-arpit/springboot-starterkit" -> "murraco/spring-boot-jwt"
"khandelwal-arpit/springboot-starterkit" -> "thombergs/buckpal" ["e"=1]
"khandelwal-arpit/springboot-starterkit" -> "bigzidane/springboot-rest-h2-swagger"
"khandelwal-arpit/springboot-starterkit" -> "gothinkster/spring-boot-realworld-example-app" ["e"=1]
"khandelwal-arpit/springboot-starterkit" -> "RameshMF/spring-boot-tutorial"
"khandelwal-arpit/springboot-starterkit" -> "rohitghatol/spring-boot-microservices"
"khandelwal-arpit/springboot-starterkit" -> "callicoder/spring-security-react-ant-design-polls-app"
"khandelwal-arpit/springboot-starterkit" -> "jonashackt/spring-boot-vuejs"
"khandelwal-arpit/springboot-starterkit" -> "brunocleite/spring-boot-exception-handling"
"khandelwal-arpit/springboot-starterkit" -> "AnghelLeonard/Hibernate-SpringBoot" ["e"=1]
"khandelwal-arpit/springboot-starterkit" -> "vatri/spring-rest-ecommerce"
"khandelwal-arpit/springboot-starterkit" -> "bfwg/springboot-jwt-starter"
"khandelwal-arpit/springboot-starterkit" -> "callicoder/spring-boot-mysql-rest-api-tutorial"
"kbastani/spring-cloud-microservice-example" -> "sqshq/PiggyMetrics"
"kbastani/spring-cloud-microservice-example" -> "kbastani/spring-cloud-event-sourcing-example"
"kbastani/spring-cloud-microservice-example" -> "rohitghatol/spring-boot-microservices"
"kbastani/spring-cloud-microservice-example" -> "prontera/spring-cloud-rest-tcc" ["e"=1]
"kbastani/spring-cloud-microservice-example" -> "yidongnan/spring-cloud-netflix-example"
"kbastani/spring-cloud-microservice-example" -> "spring-cloud/spring-cloud-netflix" ["e"=1]
"kbastani/spring-cloud-microservice-example" -> "codecentric/spring-boot-admin" ["e"=1]
"kbastani/spring-cloud-microservice-example" -> "cloudframeworks-springcloud/user-guide-springcloud" ["e"=1]
"kbastani/spring-cloud-microservice-example" -> "dangdangdotcom/dubbox" ["e"=1]
"kbastani/spring-cloud-microservice-example" -> "paulc4/microservices-demo"
"kbastani/spring-cloud-microservice-example" -> "cer/event-sourcing-examples"
"kbastani/spring-cloud-microservice-example" -> "dangdangdotcom/sharding-jdbc" ["e"=1]
"kbastani/spring-cloud-microservice-example" -> "qibaoguang/Spring-Boot-Reference-Guide" ["e"=1]
"kbastani/spring-cloud-microservice-example" -> "eacdy/spring-cloud-study" ["e"=1]
"kbastani/spring-cloud-microservice-example" -> "spring-guides/tut-spring-security-and-angular-js"
"jhipster/jhipster-dotnetcore" -> "jhipster/jhipster-net-sample-app-template"
"jhipster/jhipster-dotnetcore" -> "jhipster/jhipster-sample-app-dotnetcore"
"jhipster/jhipster-dotnetcore" -> "jhipster/jhipster-control-center"
"jhipster/jhipster-dotnetcore" -> "jhipster/generator-jhipster-nodejs"
"jhipster/jhipster-dotnetcore" -> "jhipster/jhipster-net"
"jhipster/jhipster-dotnetcore" -> "hipster-labs/generator-jhipster-react"
"jhipster/jhipster-dotnetcore" -> "jhipster/jhipster-kotlin"
"jhipster/jhipster-dotnetcore" -> "jhipster/jhipster-dotnet"
"jmesnil/stomp-websocket" -> "sockjs/sockjs-client" ["e"=1]
"jmesnil/stomp-websocket" -> "JSteunou/webstomp-client"
"jmesnil/stomp-websocket" -> "stomp-js/stompjs"
"jmesnil/stomp-websocket" -> "rstoyanchev/spring-websocket-portfolio"
"jmesnil/stomp-websocket" -> "spring-guides/gs-messaging-stomp-websocket"
"jmesnil/stomp-websocket" -> "rabbitmq/rabbitmq-web-stomp-examples"
"jmesnil/stomp-websocket" -> "stomp-js/stomp-websocket"
"jmesnil/stomp-websocket" -> "salmar/spring-websocket-chat"
"jmesnil/stomp-websocket" -> "rabbitmq/rabbitmq-web-stomp"
"jmesnil/stomp-websocket" -> "spring-projects/spring-loaded" ["e"=1]
"jmesnil/stomp-websocket" -> "joewalnes/reconnecting-websocket" ["e"=1]
"jmesnil/stomp-websocket" -> "lahsivjar/react-stomp"
"jmesnil/stomp-websocket" -> "sockjs/sockjs-node" ["e"=1]
"jmesnil/stomp-websocket" -> "mobile-web-messaging/StompKit" ["e"=1]
"jmesnil/stomp-websocket" -> "stomp-js/rx-stomp"
"eventuate-tram/eventuate-tram-sagas" -> "eventuate-tram/eventuate-tram-core"
"eventuate-tram/eventuate-tram-sagas" -> "eventuate-tram/eventuate-tram-sagas-examples-customers-and-orders"
"eventuate-tram/eventuate-tram-sagas" -> "eventuate-local/eventuate-local"
"eventuate-tram/eventuate-tram-sagas" -> "eventuate-tram/eventuate-tram-examples-customers-and-orders"
"eventuate-tram/eventuate-tram-sagas" -> "microservices-patterns/ftgo-application"
"eventuate-tram/eventuate-tram-sagas" -> "QNJR-GROUP/EasyTransaction" ["e"=1]
"eventuate-tram/eventuate-tram-sagas" -> "AxonFramework/AxonFramework" ["e"=1]
"eventuate-tram/eventuate-tram-sagas" -> "berndruecker/flowing-retail" ["e"=1]
"eventuate-tram/eventuate-tram-sagas" -> "apache/incubator-servicecomb-saga" ["e"=1]
"eventuate-tram/eventuate-tram-sagas" -> "flowing/flowing-retail" ["e"=1]
"eventuate-tram/eventuate-tram-sagas" -> "sdaschner/scalable-coffee-shop" ["e"=1]
"eventuate-tram/eventuate-tram-sagas" -> "eventuate-foundation/eventuate-cdc"
"eventuate-tram/eventuate-tram-sagas" -> "eventuate-tram/eventuate-tram-examples-java-spring-todo-list"
"eventuate-tram/eventuate-tram-sagas" -> "cer/event-sourcing-examples"
"eventuate-tram/eventuate-tram-sagas" -> "spring-projects/spring-statemachine" ["e"=1]
"spring-cloud-samples/spring-cloud-gateway-sample" -> "spring-cloud-samples/eureka"
"spring-cloud-samples/spring-cloud-gateway-sample" -> "spring-cloud-samples/sample-gateway-oauth2login"
"spring-cloud-samples/spring-cloud-gateway-sample" -> "spring-cloud-samples/authserver"
"spring-cloud-samples/spring-cloud-gateway-sample" -> "spring-cloud-samples/configserver"
"spring-cloud-samples/spring-cloud-gateway-sample" -> "spring-cloud/spring-cloud-gateway" ["e"=1]
"spring-cloud-samples/spring-cloud-gateway-sample" -> "spring-cloud-samples/sso"
"spring-cloud-samples/spring-cloud-gateway-sample" -> "spring-cloud-samples/feign-eureka"
"spring-guides/tut-spring-security-and-angular-js" -> "spring-guides/tut-spring-boot-oauth2"
"spring-guides/tut-spring-security-and-angular-js" -> "dsyer/spring-boot-angular"
"spring-guides/tut-spring-security-and-angular-js" -> "spring-projects/spring-security-oauth" ["e"=1]
"spring-guides/tut-spring-security-and-angular-js" -> "kbastani/spring-cloud-microservice-example"
"spring-guides/tut-spring-security-and-angular-js" -> "kakawait/uaa-behind-zuul-sample"
"spring-guides/tut-spring-security-and-angular-js" -> "Baeldung/spring-security-oauth"
"spring-guides/tut-spring-security-and-angular-js" -> "dynamind/spring-boot-security-oauth2-minimal"
"spring-guides/tut-spring-security-and-angular-js" -> "rohitghatol/spring-boot-microservices"
"spring-guides/tut-spring-security-and-angular-js" -> "kbastani/spring-cloud-event-sourcing-example"
"spring-guides/tut-spring-security-and-angular-js" -> "callistaenterprise/blog-microservices"
"spring-guides/tut-spring-security-and-angular-js" -> "szerhusenBC/jwt-spring-security-demo"
"spring-guides/tut-spring-security-and-angular-js" -> "making/oauth2-sso-demo"
"spring-guides/tut-spring-security-and-angular-js" -> "wiselyman/uaa-zuul" ["e"=1]
"spring-guides/tut-spring-security-and-angular-js" -> "spring-projects/spring-data-examples" ["e"=1]
"spring-guides/tut-spring-security-and-angular-js" -> "sqshq/PiggyMetrics"
"RameshMF/PiggyMetrics" -> "RameshMF/spring-security-react-ant-design-polls-app"
"RameshMF/PiggyMetrics" -> "RameshMF/spring-petclinic"
"RameshMF/PiggyMetrics" -> "RameshMF/java-blog-aggregator-boot"
"RameshMF/PiggyMetrics" -> "RameshMF/initializr"
"RameshMF/PiggyMetrics" -> "RameshMF/BookStoreApp-Distributed-Application"
"RameshMF/PiggyMetrics" -> "RameshMF/shopizer"
"RameshMF/PiggyMetrics" -> "sivaprasadreddy/spring-boot-microservices-series"
"RameshMF/PiggyMetrics" -> "vmware-archive/spring-boot-cities"
"RameshMF/PiggyMetrics" -> "RameshMF/Angular8-SpringBoot-CRUD-Tutorial"
"RameshMF/PiggyMetrics" -> "RameshMF/sagan"
"mraible/jhipster6-demo" -> "jhipster/jdl-samples"
"mraible/jhipster6-demo" -> "mraible/idea-live-templates"
"nielsutrecht/jwt-angular-spring" -> "brahalla/Cerberus"
"nielsutrecht/jwt-angular-spring" -> "Robbert1/boot-stateless-auth"
"nielsutrecht/jwt-angular-spring" -> "virgo47/restful-spring-security"
"nielsutrecht/jwt-angular-spring" -> "zouabimourad/angular2-spring"
"nielsutrecht/jwt-angular-spring" -> "technical-rex/spring-security-jwt"
"nielsutrecht/jwt-angular-spring" -> "spring-guides/tut-spring-security-and-angular-js"
"nielsutrecht/jwt-angular-spring" -> "g00glen00b/ng-spring-boot"
"nielsutrecht/jwt-angular-spring" -> "hantsy/angularjs-springmvc-sample-boot"
"nielsutrecht/jwt-angular-spring" -> "Saka7/spring-boot-angular4-boilerplate"
"nielsutrecht/jwt-angular-spring" -> "dynamind/spring-boot-security-oauth2-minimal"
"oktadeveloper/generator-jhipster-ionic" -> "sudheerj/generator-jhipster-primeng"
"oktadeveloper/generator-jhipster-ionic" -> "jhipster/generator-jhipster-module"
"oktadeveloper/generator-jhipster-ionic" -> "ruddell/ignite-jhipster"
"oktadeveloper/generator-jhipster-ionic" -> "sonalake/generator-jhipster-multitenancy"
"oktadeveloper/generator-jhipster-ionic" -> "oktadeveloper/ionic-jhipster-starter"
"oktadeveloper/generator-jhipster-ionic" -> "ruddell/generator-jhipster-ionic"
"oktadeveloper/generator-jhipster-ionic" -> "merlinofcha0s/generator-jhipster-flutter"
"oktadeveloper/generator-jhipster-ionic" -> "pascalgrimaud/generator-jhipster-docker"
"shardis/spring-angular2-starter" -> "marco76/SpringAngular2TypeScript"
"spring-petclinic/spring-petclinic-angular" -> "spring-petclinic/spring-petclinic-rest"
"spring-petclinic/spring-petclinic-angular" -> "spring-petclinic/spring-petclinic-reactjs"
"spring-petclinic/spring-petclinic-angular" -> "spring-petclinic/spring-petclinic-data-jdbc"
"spring-petclinic/spring-petclinic-angular" -> "spring-petclinic/spring-framework-petclinic"
"OmarElGabry/microservices-spring-boot" -> "marcusdacoregio/oauth2-spring-boot"
"OmarElGabry/microservices-spring-boot" -> "piomin/sample-spring-microservices"
"OmarElGabry/microservices-spring-boot" -> "piomin/sample-spring-microservices-new"
"OmarElGabry/microservices-spring-boot" -> "anilallewar/microservices-basics-spring-boot"
"OmarElGabry/microservices-spring-boot" -> "oktadeveloper/spring-boot-microservices-example"
"OmarElGabry/microservices-spring-boot" -> "smreeti/spring-security-with-zuul"
"OmarElGabry/microservices-spring-boot" -> "pranav-patil/spring-microservices"
"OmarElGabry/microservices-spring-boot" -> "hantsy/springboot-jwt-sample"
"OmarElGabry/microservices-spring-boot" -> "piomin/sample-spring-oauth2-microservices"
"OmarElGabry/microservices-spring-boot" -> "eiselems/spring-boot-microservices"
"OmarElGabry/microservices-spring-boot" -> "sivaprasadreddy/spring-boot-microservices-series"
"OmarElGabry/microservices-spring-boot" -> "arjunbalussery/gateway"
"OmarElGabry/microservices-spring-boot" -> "oktadeveloper/java-microservices-examples"
"OmarElGabry/microservices-spring-boot" -> "shuaicj/zuul-auth-example" ["e"=1]
"OmarElGabry/microservices-spring-boot" -> "dzinot/spring-boot-2-oauth2-authorization-jwt"
"ewolff/microservice" -> "ewolff/microservice-kubernetes"
"ewolff/microservice" -> "kbastani/spring-cloud-microservice-example"
"ewolff/microservice" -> "cer/microservices-examples"
"ewolff/microservice" -> "rohitghatol/spring-boot-microservices"
"ewolff/microservice" -> "livelessons-spring/building-microservices"
"ewolff/microservice" -> "paulc4/microservices-demo"
"ewolff/microservice" -> "anilallewar/microservices-basics-spring-boot"
"ewolff/microservice" -> "piomin/sample-spring-microservices"
"ewolff/microservice" -> "callistaenterprise/blog-microservices"
"ewolff/microservice" -> "ewolff/microservice-kafka"
"ewolff/microservice" -> "kbastani/spring-cloud-event-sourcing-example"
"ewolff/microservice" -> "piomin/sample-spring-microservices-new"
"ewolff/microservice" -> "mohamed-taman/Springy-Store-Microservices"
"ewolff/microservice" -> "yidongnan/spring-cloud-netflix-example"
"ewolff/microservice" -> "ewolff/user-registration"
"bkielczewski/example-spring-boot-security" -> "FutureProcessing/spring-boot-security-example"
"bkielczewski/example-spring-boot-security" -> "bigbomb/bootstrap--springsecurity----" ["e"=1]
"bkielczewski/example-spring-boot-security" -> "spring-guides/tut-bookmarks"
"jhipster/jhipster-guides" -> "jhipster/jhipster-control-center"
"jhipster/jhipster-guides" -> "jhipster/jdl-samples"
"jhipster/jhipster-guides" -> "jhipster/jhipster-ide"
"jhipster/jhipster-guides" -> "jhipster/jhipster-online"
"jhipster/jhipster-guides" -> "sonalake/generator-jhipster-multitenancy"
"springframeworkguru/springbootwebapp" -> "netgloo/spring-boot-samples"
"springframeworkguru/springbootwebapp" -> "springframeworkguru/spring5webapp"
"springframeworkguru/springbootwebapp" -> "springframeworkguru/spring5-recipe-app"
"springframeworkguru/springbootwebapp" -> "springframeworkguru/gof"
"springframeworkguru/springbootwebapp" -> "springframeworkguru/spring-core-spring-mvc"
"springframeworkguru/springbootwebapp" -> "evgeniyJ/springboot"
"springframeworkguru/springbootwebapp" -> "kolorobot/spring-boot-thymeleaf" ["e"=1]
"springframeworkguru/springbootwebapp" -> "borysn/spring-boot-angular2"
"spring-guides/getting-started-guides" -> "spring-guides/understanding"
"spring-guides/getting-started-guides" -> "spring-guides/gs-spring-boot"
"spring-guides/getting-started-guides" -> "spring-guides/gs-accessing-data-jpa"
"spring-guides/getting-started-guides" -> "spring-guides/gs-securing-web"
"spring-guides/getting-started-guides" -> "spring-guides/gs-testing-web"
"spring-guides/getting-started-guides" -> "spring-guides/gs-reactive-rest-service"
"spring-guides/getting-started-guides" -> "spring-guides/tut-rest"
"spring-guides/getting-started-guides" -> "spring-guides/top-spring-security-architecture"
"spring-guides/getting-started-guides" -> "spring-guides/gs-accessing-data-rest"
"spring-guides/getting-started-guides" -> "spring-guides/gs-accessing-data-mysql"
"spring-guides/getting-started-guides" -> "spring-guides/getting-started-macros"
"spring-guides/getting-started-guides" -> "spring-guides/gs-spring-boot-docker"
"spring-guides/getting-started-guides" -> "eugenp/REST-With-Spring"
"gustavoponce7/spring-login" -> "RameshMF/registration-login-spring-boot-security-thymeleaf-hibernate"
"gustavoponce7/spring-login" -> "PanagiotisDrakatos/SpringBoot-Registration-Login-ThePerfectExample"
"gustavoponce7/spring-login" -> "scbushan05/online-bookstore"
"gustavoponce7/spring-login" -> "hellokoding/registration-login-spring-hsql"
"gustavoponce7/spring-login" -> "hendisantika/Online-banking-angular-springboot-mysql"
"gustavoponce7/spring-login" -> "devRobots/spring-boot-ecommerce"
"gustavoponce7/spring-login" -> "pauldragoslav/Spring-boot-Banking"
"gustavoponce7/spring-login" -> "isopropylcyanide/Jwt-Spring-Security-JPA"
"gustavoponce7/spring-login" -> "juhahinkula/StudentListFinal"
"springframeworkguru/spring-boot-mongodb" -> "springframeworkguru/spring5-mongo-recipe-app"
"nydiarra/springboot-jwt" -> "ipassynk/angular-springboot-jwt"
"nydiarra/springboot-jwt" -> "svlada/springboot-security-jwt"
"nydiarra/springboot-jwt" -> "bfwg/angular-spring-starter"
"nydiarra/springboot-jwt" -> "murraco/spring-boot-jwt"
"nydiarra/springboot-jwt" -> "bfwg/springboot-jwt-starter"
"nydiarra/springboot-jwt" -> "jahe/spring-boot-multiple-datasources"
"nydiarra/springboot-jwt" -> "szerhusenBC/jwt-spring-security-demo"
"nydiarra/springboot-jwt" -> "adamzareba/company-structure-spring-security-oauth2-authorities"
"nydiarra/springboot-jwt" -> "isopropylcyanide/Jwt-Spring-Security-JPA"
"nydiarra/springboot-jwt" -> "mrin9/Angular-SpringBoot-REST-JWT"
"nydiarra/springboot-jwt" -> "only2dhir/spring-security-jwt"
"nydiarra/springboot-jwt" -> "spring-guides/tut-spring-boot-oauth2"
"nydiarra/springboot-jwt" -> "lokeshgupta1981/SpringExamples"
"nydiarra/springboot-jwt" -> "tinmegali/Oauth2-Stateless-Authentication-with-Spring-and-JWT-Token"
"nydiarra/springboot-jwt" -> "Baeldung/spring-security-oauth"
"idugalic/micro-ecommerce" -> "venkataravuri/e-commerce-microservices-sample"
"idugalic/micro-ecommerce" -> "RainbowForest/e-commerce-microservices"
"idugalic/micro-ecommerce" -> "devdcores/BookStoreApp-Distributed-Application"
"idugalic/micro-ecommerce" -> "mostafacs/ecommerce-microservices-spring-reactive-webflux"
"idugalic/micro-ecommerce" -> "xebialabs/e-commerce-microservice"
"idugalic/micro-ecommerce" -> "JohnnyLe/Modern-Ecommerce"
"idugalic/micro-ecommerce" -> "idugalic/micro-company"
"idugalic/micro-ecommerce" -> "yugabyte/yugastore-java"
"idugalic/micro-ecommerce" -> "vatri/spring-rest-ecommerce"
"idugalic/micro-ecommerce" -> "inspire-software/yes-cart"
"idugalic/micro-ecommerce" -> "developma/spring-microservice-for-e-commerce"
"idugalic/micro-ecommerce" -> "NIT-Software/Modern-Ecommerce"
"idugalic/micro-ecommerce" -> "anilallewar/microservices-basics-spring-boot"
"idugalic/micro-ecommerce" -> "piomin/sample-spring-microservices"
"idugalic/micro-ecommerce" -> "SelimHorri/ecommerce-microservice-backend-app"
"javadevjournal/javadevjournal" -> "bezkoder/spring-boot-refresh-token-jwt"
"spring-guides/gs-routing-and-filtering" -> "spring-guides/gs-client-side-load-balancing"
"apssouza22/java-microservice" -> "anilallewar/microservices-basics-spring-boot"
"apssouza22/java-microservice" -> "oktadeveloper/java-microservices-examples"
"apssouza22/java-microservice" -> "sivaprasadreddy/spring-boot-microservices-series"
"apssouza22/java-microservice" -> "davidetaibi/Microservices_Project_List"
"apssouza22/java-microservice" -> "livelessons-spring/building-microservices"
"apssouza22/java-microservice" -> "piomin/sample-spring-microservices"
"apssouza22/java-microservice" -> "vmudigal/microservices-sample"
"apssouza22/java-microservice" -> "TechPrimers/stock-price-viewer-microservices-part1"
"apssouza22/java-microservice" -> "oktadeveloper/spring-boot-microservices-example"
"apssouza22/java-microservice" -> "microservices-practical/microservices-v10"
"apssouza22/java-microservice" -> "apssouza22/trading-system"
"apssouza22/java-microservice" -> "oktadev/java-microservices-examples"
"apssouza22/java-microservice" -> "mohamed-taman/Springy-Store-Microservices"
"apssouza22/java-microservice" -> "venkataravuri/e-commerce-microservices-sample"
"apssouza22/java-microservice" -> "spring-petclinic/spring-petclinic-microservices"
"ewolff/microservice-kafka" -> "ewolff/microservice-kubernetes"
"ewolff/microservice-kafka" -> "ewolff/microservice"
"ewolff/microservice-kafka" -> "confluentinc/kafka-streams-examples" ["e"=1]
"ewolff/microservice-kafka" -> "isilona/microservices"
"ewolff/microservice-kafka" -> "vaquarkhan/flowing-retail-microservice-kafka"
"ewolff/microservice-kafka" -> "kbastani/event-sourcing-microservices-example"
"ewolff/microservice-kafka" -> "anilallewar/microservices-basics-spring-boot"
"ewolff/microservice-kafka" -> "kbastani/spring-cloud-event-sourcing-example"
"ewolff/microservice-kafka" -> "piomin/sample-spring-kafka-microservices"
"ewolff/microservice-kafka" -> "ewolff/microservice-consul"
"ewolff/microservice-kafka" -> "code-not-found/spring-kafka" ["e"=1]
"ewolff/microservice-kafka" -> "idugalic/digital-restaurant"
"spring-guides/gs-accessing-data-mysql" -> "spring-guides/gs-accessing-data-jpa"
"cyela/Angular-Springboot" -> "cyela/Springboot-Web-Services"
"khozema-nullwala/online-shopping" -> "devRobots/spring-boot-ecommerce"
"khozema-nullwala/online-shopping" -> "sushildangi/online-shopping"
"khozema-nullwala/online-shopping" -> "TouhidurRahamanKhan/Online-shopping-Spring-MVC-java-config-mysql-hibernate"
"benwilcock/cqrs-microservice-sampler" -> "avthart/spring-boot-axon-sample"
"benwilcock/cqrs-microservice-sampler" -> "dashsaurabh/event-sourcing-axon-spring-boot"
"benwilcock/cqrs-microservice-sampler" -> "EdisonXu/sbs-axon"
"benwilcock/cqrs-microservice-sampler" -> "ddd-by-examples/event-source-cqrs-sample" ["e"=1]
"benwilcock/cqrs-microservice-sampler" -> "AxonFramework/Axon-trader"
"benwilcock/cqrs-microservice-sampler" -> "idugalic/micro-company"
"benwilcock/cqrs-microservice-sampler" -> "vgoldin/cqrs-eventsourcing-kafka"
"benwilcock/cqrs-microservice-sampler" -> "dashsaurabh/event-sourcing-cqrs-axon-spring-boot"
"benwilcock/cqrs-microservice-sampler" -> "kbastani/event-sourcing-microservices-example"
"benwilcock/cqrs-microservice-sampler" -> "chaokunyang/microservices-event-sourcing" ["e"=1]
"yidongnan/spring-cloud-consul-example" -> "ThoreauZZ/spring-cloud-example"
"yidongnan/spring-cloud-consul-example" -> "xetys/spring-cloud-oauth2-example"
"yidongnan/spring-cloud-consul-example" -> "yidongnan/spring-cloud-netflix-example"
"yidongnan/spring-cloud-consul-example" -> "zpng/spring-cloud-microservice-examples"
"yidongnan/spring-cloud-consul-example" -> "kakawait/uaa-behind-zuul-sample"
"kennyk65/Microservices-With-Spring-Student-Files" -> "callistaenterprise/blog-microservices"
"kennyk65/Microservices-With-Spring-Student-Files" -> "livelessons-spring/building-microservices"
"jhipster/jhipster-vuejs" -> "jhipster/jhipster-control-center"
"jhipster/jhipster-vuejs" -> "jhipster/jhipster-sample-app-vuejs"
"jhipster/jhipster-vuejs" -> "sudheerj/generator-jhipster-primeng"
"jhipster/jhipster-vuejs" -> "oktadeveloper/generator-jhipster-ionic"
"jhipster/jhipster-vuejs" -> "jhipster/jhipster-guides"
"jhipster/jhipster-vuejs" -> "jhipster/jhipster-oh-my-zsh-plugin"
"jhipster/jhipster-vuejs" -> "jhipster/ng-jhipster"
"jhipster/jhipster-vuejs" -> "fdelbrayelle/generator-jhipster-kafka"
"jhipster/jhipster-vuejs" -> "jhipster/jhipster-console"
"jhipster/jhipster-vuejs" -> "jhipster/jhipster-kotlin"
"jhipster/jhipster-vuejs" -> "jhipster/generator-jhipster-micronaut"
"jhipster/jhipster-vuejs" -> "jhipster/jhipster-quarkus"
"jhipster/jhipster-vuejs" -> "Blackdread/sql-to-jdl"
"jhipster/jhipster-vuejs" -> "jhipster/jhipster-uml"
"jhipster/jhipster-vuejs" -> "hipster-labs/jhipster-daily-builds"
"piomin/sample-spring-microservices-advanced" -> "piomin/sample-spring-microservices-kubernetes"
"eventuate-tram/eventuate-tram-core" -> "eventuate-tram/eventuate-tram-sagas"
"eventuate-tram/eventuate-tram-core" -> "eventuate-tram/eventuate-tram-examples-customers-and-orders"
"eventuate-tram/eventuate-tram-core" -> "eventuate-local/eventuate-local"
"eventuate-tram/eventuate-tram-core" -> "eventuate-tram/eventuate-tram-sagas-examples-customers-and-orders"
"eventuate-tram/eventuate-tram-core" -> "microservices-patterns/ftgo-application"
"eventuate-tram/eventuate-tram-core" -> "eventuate-foundation/eventuate-cdc"
"eventuate-tram/eventuate-tram-core" -> "eventuate-tram/eventuate-tram-examples-java-spring-todo-list"
"eventuate-tram/eventuate-tram-core" -> "eventuate-tram/eventuate-tram-core-dotnet"
"eventuate-tram/eventuate-tram-core" -> "debezium/debezium-examples" ["e"=1]
"eventuate-tram/eventuate-tram-core" -> "AxonFramework/AxonFramework" ["e"=1]
"eventuate-tram/eventuate-tram-core" -> "eventuate-examples/eventuate-examples-java-customers-and-orders"
"eventuate-tram/eventuate-tram-core" -> "xmolecules/jmolecules" ["e"=1]
"eventuate-tram/eventuate-tram-core" -> "gruelbox/transaction-outbox"
"eventuate-tram/eventuate-tram-core" -> "debezium/debezium" ["e"=1]
"eventuate-tram/eventuate-tram-core" -> "benwilcock/microservice-sampler"
"tangyanbo/springmore" -> "uncodecn/uncode-dal-all"
"techdev-solutions/trackr-backend" -> "techdev-solutions/trackr-frontend"
"techdev-solutions/trackr-backend" -> "techdev-solutions/jaxenter-showcase"
"techdev-solutions/trackr-backend" -> "FrontierPsychiatrist/spring-oauth-example"
"liferay/liferay-mobile-sdk" -> "liferay/liferay-screens"
"koushikkothagal/spring-security-jwt" -> "koushikkothagal/spring-security-jpa"
"koushikkothagal/spring-security-jwt" -> "koushikkothagal/spring-boot-security"
"koushikkothagal/spring-security-jwt" -> "koushikkothagal/spring-boot-microservices-workshop"
"koushikkothagal/spring-security-jwt" -> "koushikkothagal/junit-5-basics-course"
"koushikkothagal/spring-security-jwt" -> "koushikkothagal/Java-8-Lambda-Basics"
"IBM/charts" -> "IBM/deploy-ibm-cloud-private"
"IBM/charts" -> "ibm-cloud-architecture/refarch-privatecloud"
"IBM/charts" -> "WASdev/ci.docker"
"IBM/charts" -> "ibm-cloud-architecture/refarch-cloudnative-kubernetes"
"IBM/charts" -> "ibm-cloud-architecture/CSMO-ICP"
"IBM/charts" -> "IBM/ubiquity"
"IBM/charts" -> "IBM/cloud-pak"
"IBM/charts" -> "IBM-Cloud/kube-samples"
"IBM/charts" -> "IBM-Cloud/terraform-provider-ibm"
"PacktPublishing/Spring-Microservices" -> "PacktPublishing/Spring-5.0-Microservices-Second-Edition"
"PacktPublishing/Spring-Microservices" -> "PacktPublishing/Mastering-Microservices-with-Java"
"PacktPublishing/Spring-Microservices" -> "PacktPublishing/Microservices-Deployment-Cookbook"
"RameshMF/ReactJS-Spring-Boot-CRUD-Full-Stack-App" -> "in28minutes/full-stack-with-react-and-spring-boot" ["e"=1]
"RameshMF/ReactJS-Spring-Boot-CRUD-Full-Stack-App" -> "RameshMF/springboot-thymeleaf-crud-pagination-sorting-webapp"
"RameshMF/ReactJS-Spring-Boot-CRUD-Full-Stack-App" -> "RameshMF/Angular-10-Spring-Boot-CRUD-Full-Stack-App"
"RameshMF/ReactJS-Spring-Boot-CRUD-Full-Stack-App" -> "RameshMF/React-Hooks-Spring-Boot-CRUD-Full-Stack-App"
"RameshMF/ReactJS-Spring-Boot-CRUD-Full-Stack-App" -> "RameshMF/spring-security-react-ant-design-polls-app"
"RameshMF/ReactJS-Spring-Boot-CRUD-Full-Stack-App" -> "in28minutes/spring-boot-react-fullstack-examples" ["e"=1]
"RameshMF/ReactJS-Spring-Boot-CRUD-Full-Stack-App" -> "spring-petclinic/spring-petclinic-reactjs"
"RameshMF/ReactJS-Spring-Boot-CRUD-Full-Stack-App" -> "mukundmadhav/react-springboot-mysql"
"RameshMF/ReactJS-Spring-Boot-CRUD-Full-Stack-App" -> "mightyjava/book-rest-api-reactjs"
"RameshMF/ReactJS-Spring-Boot-CRUD-Full-Stack-App" -> "callicoder/spring-security-react-ant-design-polls-app"
"RameshMF/ReactJS-Spring-Boot-CRUD-Full-Stack-App" -> "amigoscode/spring-boot-react-fullstack" ["e"=1]
"RameshMF/ReactJS-Spring-Boot-CRUD-Full-Stack-App" -> "dailycodebuffer/Spring-MVC-Tutorials"
"RameshMF/ReactJS-Spring-Boot-CRUD-Full-Stack-App" -> "scbushan05/full-stack-react-and-spring-boot"
"RameshMF/ReactJS-Spring-Boot-CRUD-Full-Stack-App" -> "RameshMF/registration-login-springboot-security-thymeleaf"
"RameshMF/ReactJS-Spring-Boot-CRUD-Full-Stack-App" -> "Urunov/SpringBoot-Projects-FullStack"
"PanagiotisDrakatos/SpringBoot-Registration-Login-ThePerfectExample" -> "gustavoponce7/spring-login"
"PanagiotisDrakatos/SpringBoot-Registration-Login-ThePerfectExample" -> "RameshMF/registration-login-spring-boot-security-thymeleaf-hibernate"
"jhipster/jhipster-sample-app" -> "jhipster/jhipster-registry"
"jhipster/jhipster-sample-app" -> "jhipster/jhipster.github.io"
"jhipster/jhipster-sample-app" -> "jhipster/jhipster"
"jhipster/jhipster-sample-app" -> "jhipster/generator-jhipster" ["e"=1]
"jhipster/jhipster-sample-app" -> "philipsorst/angular-rest-springsecurity"
"jhipster/jhipster-sample-app" -> "jhipster/jhipster-sample-app-react"
"jhipster/jhipster-sample-app" -> "mraible/21-points"
"jhipster/jhipster-sample-app" -> "jhipster/jdl-samples"
"jhipster/jhipster-sample-app" -> "olivergierke/spring-restbucks" ["e"=1]
"jhipster/jhipster-sample-app" -> "dancancro/great-big-example-application" ["e"=1]
"jhipster/jhipster-sample-app" -> "kbastani/spring-cloud-microservice-example"
"jhipster/jhipster-sample-app" -> "dsyer/spring-security-angular"
"jhipster/jhipster-sample-app" -> "spring-guides/tut-spring-security-and-angular-js"
"jhipster/jhipster-sample-app" -> "jhipster/jhipster-console"
"jhipster/jhipster-sample-app" -> "jhipster/jhipster-devbox"
"microsoft/NubesGen" -> "jdubois/nubesgen-cli"
"microsoft/NubesGen" -> "jhipster/jhipster-lite"
"eventuate-tram/eventuate-tram-sagas-examples-customers-and-orders" -> "eventuate-tram/eventuate-tram-examples-customers-and-orders"
"eventuate-tram/eventuate-tram-sagas-examples-customers-and-orders" -> "eventuate-tram/eventuate-tram-sagas"
"eventuate-tram/eventuate-tram-sagas-examples-customers-and-orders" -> "eventuate-tram/eventuate-tram-core"
"eventuate-tram/eventuate-tram-sagas-examples-customers-and-orders" -> "eventuate-tram/eventuate-tram-examples-java-spring-todo-list"
"eventuate-tram/eventuate-tram-sagas-examples-customers-and-orders" -> "eventuate-examples/eventuate-examples-java-customers-and-orders"
"eventuate-tram/eventuate-tram-sagas-examples-customers-and-orders" -> "eventuate-tram/eventuate-tram-core-examples-basic"
"eventuate-tram/eventuate-tram-sagas-examples-customers-and-orders" -> "andreschaffer/event-sourcing-cqrs-examples" ["e"=1]
"eventuate-tram/eventuate-tram-sagas-examples-customers-and-orders" -> "eventuate-foundation/eventuate-cdc"
"eventuate-tram/eventuate-tram-sagas-examples-customers-and-orders" -> "microservices-patterns/ftgo-application"
"oktadeveloper/java-microservices-examples" -> "oktadeveloper/spring-boot-microservices-example"
"oktadeveloper/java-microservices-examples" -> "mohamed-taman/Springy-Store-Microservices"
"oktadeveloper/java-microservices-examples" -> "apssouza22/java-microservice"
"jhades/spring-mvc-angularjs-sample-app" -> "xvitcoder/spring-mvc-angularjs"
"jhades/spring-mvc-angularjs-sample-app" -> "hantsy/angularjs-springmvc-sample"
"jhades/spring-mvc-angularjs-sample-app" -> "dsyer/spring-security-angular"
"jhades/spring-mvc-angularjs-sample-app" -> "hantsy/angularjs-springmvc-sample-boot"
"jhades/spring-mvc-angularjs-sample-app" -> "g00glen00b/ng-spring-boot"
"jhades/spring-mvc-angularjs-sample-app" -> "philipsorst/angular-rest-springsecurity"
"jhades/spring-mvc-angularjs-sample-app" -> "robharrop/spring-angularjs"
"jhades/spring-mvc-angularjs-sample-app" -> "radcortez/javaee7-angular" ["e"=1]
"jhades/spring-mvc-angularjs-sample-app" -> "pkainulainen/spring-mvc-test-examples" ["e"=1]
"jhades/spring-mvc-angularjs-sample-app" -> "spring-guides/tut-spring-security-and-angular-js"
"jhades/spring-mvc-angularjs-sample-app" -> "bkielczewski/example-spring-boot-security"
"jhades/spring-mvc-angularjs-sample-app" -> "techdev-solutions/trackr-backend"
"jhades/spring-mvc-angularjs-sample-app" -> "netgloo/spring-boot-samples"
"jhades/spring-mvc-angularjs-sample-app" -> "kolorobot/spring-mvc-quickstart-archetype"
"jhades/spring-mvc-angularjs-sample-app" -> "skprasadu/spring-mvc-examples" ["e"=1]
"khoubyari/spring-boot-rest-example" -> "callicoder/spring-boot-mysql-rest-api-tutorial"
"khoubyari/spring-boot-rest-example" -> "osopromadze/Spring-Boot-Blog-REST-API"
"khoubyari/spring-boot-rest-example" -> "hantsy/angularjs-springmvc-sample-boot"
"khoubyari/spring-boot-rest-example" -> "rohitghatol/spring-boot-microservices"
"khoubyari/spring-boot-rest-example" -> "in28minutes/spring-boot-examples" ["e"=1]
"khoubyari/spring-boot-rest-example" -> "bzdgn/spring-boot-restful-web-service-example"
"khoubyari/spring-boot-rest-example" -> "givanthak/spring-boot-rest-api-tutorial"
"khoubyari/spring-boot-rest-example" -> "brunocleite/spring-boot-exception-handling"
"khoubyari/spring-boot-rest-example" -> "in28minutes/in28minutes.github.io" ["e"=1]
"khoubyari/spring-boot-rest-example" -> "mrin9/Angular-SpringBoot-REST-JWT"
"khoubyari/spring-boot-rest-example" -> "brahalla/Cerberus"
"khoubyari/spring-boot-rest-example" -> "anilallewar/microservices-basics-spring-boot"
"khoubyari/spring-boot-rest-example" -> "netgloo/spring-boot-samples"
"khoubyari/spring-boot-rest-example" -> "hellokoding/registration-login-spring-hsql"
"khoubyari/spring-boot-rest-example" -> "spring-petclinic/spring-petclinic-rest"
"Baeldung/spring-security-registration" -> "Baeldung/spring-security-oauth"
"Baeldung/spring-security-registration" -> "szerhusenBC/jwt-spring-security-demo"
"Baeldung/spring-security-registration" -> "callicoder/spring-security-react-ant-design-polls-app"
"Baeldung/spring-security-registration" -> "bfwg/springboot-jwt-starter"
"Baeldung/spring-security-registration" -> "murraco/spring-boot-jwt"
"Baeldung/spring-security-registration" -> "spring-projects/spring-security-oauth" ["e"=1]
"Baeldung/spring-security-registration" -> "spring-projects/spring-data-examples" ["e"=1]
"Baeldung/spring-security-registration" -> "spring-projects/spring-security" ["e"=1]
"Baeldung/spring-security-registration" -> "eugenp/tutorials" ["e"=1]
"Baeldung/spring-security-registration" -> "callicoder/spring-boot-react-oauth2-social-login-demo"
"Baeldung/spring-security-registration" -> "spring-guides/tut-spring-security-and-angular-js"
"Baeldung/spring-security-registration" -> "bezkoder/spring-boot-spring-security-jwt-authentication"
"Baeldung/spring-security-registration" -> "hellokoding/registration-login-spring-hsql"
"Baeldung/spring-security-registration" -> "netgloo/spring-boot-samples"
"Baeldung/spring-security-registration" -> "thombergs/code-examples" ["e"=1]
"hantsy/angular-spring-reactive-sample" -> "hantsy/spring-microservice-sample"
"hantsy/angular-spring-reactive-sample" -> "mpalourdio/SpringBootAngularHTML5"
"spring-guides/gs-uploading-files" -> "callicoder/spring-boot-file-upload-download-rest-api-example"
"spring-guides/gs-uploading-files" -> "spring-guides/gs-securing-web"
"spring-guides/gs-uploading-files" -> "spring-guides/gs-messaging-rabbitmq"
"spring-guides/gs-uploading-files" -> "spring-guides/gs-multi-module"
"spring-guides/gs-uploading-files" -> "spring-guides/gs-rest-service-cors"
"spring-guides/gs-uploading-files" -> "spring-guides/gs-validating-form-input"
"spring-guides/gs-uploading-files" -> "spring-guides/gs-spring-boot-docker"
"IBM/spring-boot-microservices-on-kubernetes" -> "IBM/Java-MicroProfile-on-Kubernetes"
"IBM/spring-boot-microservices-on-kubernetes" -> "fabric8io/spring-cloud-kubernetes"
"IBM/spring-boot-microservices-on-kubernetes" -> "IBM/GameOn-Java-Microservices-on-Kubernetes"
"IBM/spring-boot-microservices-on-kubernetes" -> "piomin/sample-spring-microservices-kubernetes"
"IBM/spring-boot-microservices-on-kubernetes" -> "spring-cloud-incubator/spring-cloud-kubernetes"
"IBM/spring-boot-microservices-on-kubernetes" -> "anilallewar/microservices-basics-spring-boot"
"IBM/spring-boot-microservices-on-kubernetes" -> "ewolff/microservice-kubernetes"
"IBM/spring-boot-microservices-on-kubernetes" -> "IBM/microservices-traffic-management-using-istio" ["e"=1]
"IBM/spring-boot-microservices-on-kubernetes" -> "IBM/Kubernetes-container-service-GitLab-sample"
"IBM/spring-boot-microservices-on-kubernetes" -> "piomin/sample-spring-microservices"
"IBM/spring-boot-microservices-on-kubernetes" -> "spring-cloud/spring-cloud-kubernetes" ["e"=1]
"IBM/spring-boot-microservices-on-kubernetes" -> "rohitghatol/spring-boot-microservices"
"IBM/spring-boot-microservices-on-kubernetes" -> "piomin/sample-spring-microservices-new"
"IBM/spring-boot-microservices-on-kubernetes" -> "IBM/deploy-ibm-cloud-private"
"Robert-Leggett/angular_bootstrap_spring" -> "uaihebert/uaicontacts"
"jhipster/jhipster-uml" -> "jhipster/jhipster-devbox"
"jhipster/jhipster-uml" -> "jhipster/jdl-studio"
"jhipster/jhipster-uml" -> "jhipster/jhipster-console"
"jhipster/jhipster-uml" -> "hipster-labs/generator-jhipster-react"
"jhipster/jhipster-uml" -> "jhipster/jhipster-app"
"jhipster/jhipster-uml" -> "bastienmichaux/generator-jhipster-db-helper"
"jhipster/jhipster-uml" -> "jhipster/jhipster-core"
"jhipster/jhipster-uml" -> "jhipster/jhipster-control-center"
"jhipster/jhipster-uml" -> "hipster-labs/generator-jhipster-spring-cloud-stream"
"jhipster/jhipster-uml" -> "hipster-labs/generator-jhipster-entity-audit"
"jhipster/jhipster-uml" -> "jhipster/jhipster-experimental-microservices"
"jhipster/jhipster-uml" -> "pascalgrimaud/generator-jhipster-docker"
"jhipster/jhipster-uml" -> "PierreBesson/jhipster-microservices-docker"
"jhipster/jhipster-uml" -> "jhipster/jhipster-vuejs"
"jhipster/jhipster-uml" -> "geraldhumphries/generator-jhipster-elasticsearch-reindexer"
"springframeworkguru/spring5-recipe-app" -> "springframeworkguru/sfg-pet-clinic"
"springframeworkguru/spring5-recipe-app" -> "springframeworkguru/spring5-reactive-mongo-recipe-app"
"springframeworkguru/spring5-recipe-app" -> "springframeworkguru/spring5-di-demo"
"springframeworkguru/spring5-recipe-app" -> "springframeworkguru/spring5-mongo-recipe-app"
"springframeworkguru/spring5-recipe-app" -> "springframeworkguru/spring5-jokes-app"
"springframeworkguru/spring5-recipe-app" -> "springframeworkguru/spring5webapp"
"RameshMF/springboot-thymeleaf-crud-pagination-sorting-webapp" -> "RameshMF/springboot-thymeleaf-crud-tutorial"
"RameshMF/springboot-thymeleaf-crud-pagination-sorting-webapp" -> "RameshMF/registration-login-spring-boot-security-thymeleaf-hibernate"
"RameshMF/springboot-blog-rest-api" -> "RameshMF/registration-login-spring-boot-security-thymeleaf-hibernate"
"mkyong/core-java" -> "mkyong/docker-java"
"liferay/alloy-ui" -> "liferay/liferay-portal"
"liferay/alloy-ui" -> "liferay/liferay-plugins"
"liferay/alloy-ui" -> "liferay/liferay-docs"
"liferay/alloy-ui" -> "yui/yui3" ["e"=1]
"liferay/alloy-ui" -> "eduardolundgren/senna" ["e"=1]
"liferay/alloy-ui" -> "sapo/Ink" ["e"=1]
"liferay/alloy-ui" -> "topcoat/topcoat" ["e"=1]
"liferay/alloy-ui" -> "yui/pure" ["e"=1]
"liferay/alloy-ui" -> "liferay/liferay-ide"
"liferay/alloy-ui" -> "justspamjustin/junior" ["e"=1]
"liferay/alloy-ui" -> "zenorocha/browser-diet" ["e"=1]
"liferay/alloy-ui" -> "caiogondim/js-patterns-sublime-snippets" ["e"=1]
"liferay/alloy-ui" -> "usablica/front-end-frameworks" ["e"=1]
"liferay/alloy-ui" -> "zenorocha/sublime-snippets-js" ["e"=1]
"liferay/alloy-ui" -> "jcartledge/sublime-worksheet"
"bezkoder/spring-boot-data-jpa-mysql" -> "bezkoder/spring-boot-jpa-paging-sorting"
"reljicd/spring-boot-shopping-cart" -> "sahan89/ShoppingCart"
"reljicd/spring-boot-shopping-cart" -> "syqu22/spring-boot-shop-sample"
"reljicd/spring-boot-shopping-cart" -> "sushildangi/online-shopping"
"reljicd/spring-boot-shopping-cart" -> "eherozhao/E-Commerce-Spring-Boot"
"jorgeacetozi/ebook-chat-app-spring-websocket-cassandra-redis-rabbitmq" -> "RawSanj/spring-redis-websocket"
"jorgeacetozi/ebook-chat-app-spring-websocket-cassandra-redis-rabbitmq" -> "salmar/spring-websocket-chat"
"RameshMF/Angular8-SpringBoot-CRUD-Tutorial" -> "RameshMF/Angular9-SpringBoot-CRUD-Tutorial"
"RameshMF/Angular8-SpringBoot-CRUD-Tutorial" -> "RameshMF/angular8-springboot-basic-auth-login-logout"
"RameshMF/Angular8-SpringBoot-CRUD-Tutorial" -> "cyela/Angular-Springboot"
"RameshMF/Angular8-SpringBoot-CRUD-Tutorial" -> "RameshMF/spring-security-react-ant-design-polls-app"
"RameshMF/Angular8-SpringBoot-CRUD-Tutorial" -> "Java-Techie-jt/springboot-angular8-crud-example"
"RameshMF/Angular8-SpringBoot-CRUD-Tutorial" -> "RameshMF/todo-management-spring-boot"
"RameshMF/Angular8-SpringBoot-CRUD-Tutorial" -> "mrin9/Angular-SpringBoot-REST-JWT"
"RameshMF/Angular8-SpringBoot-CRUD-Tutorial" -> "RameshMF/angular7-springboot-crud-tutorial"
"RameshMF/Angular8-SpringBoot-CRUD-Tutorial" -> "RameshMF/PiggyMetrics"
"RameshMF/Angular8-SpringBoot-CRUD-Tutorial" -> "RameshMF/angular8-springboot-websocket"
"kbastani/order-delivery-microservice-example" -> "kbastani/event-sourcing-microservices-example"
"kbastani/order-delivery-microservice-example" -> "kbastani/sentiment-analysis-twitter-microservices-example"
"RainbowForest/e-commerce-microservices" -> "idugalic/micro-ecommerce"
"RainbowForest/e-commerce-microservices" -> "devdcores/BookStoreApp-Distributed-Application"
"RainbowForest/e-commerce-microservices" -> "venkataravuri/e-commerce-microservices-sample"
"RainbowForest/e-commerce-microservices" -> "xebialabs/e-commerce-microservice"
"RainbowForest/e-commerce-microservices" -> "SelimHorri/ecommerce-microservice-backend-app"
"RainbowForest/e-commerce-microservices" -> "yugabyte/yugastore-java"
"RainbowForest/e-commerce-microservices" -> "oktadev/java-microservices-examples"
"RainbowForest/e-commerce-microservices" -> "iavtar/E-Commerce-Microservice-Platform"
"RainbowForest/e-commerce-microservices" -> "developma/spring-microservice-for-e-commerce"
"BroadleafCommerce/DemoSite" -> "BroadleafCommerce/BroadleafCommerce"
"BroadleafCommerce/DemoSite" -> "BroadleafCommerce/ReactStarter"
"dzinot/spring-boot-2-oauth2-authorization-jwt" -> "dzinot/spring-boot-2-oauth2-resource-jwt"
"liferay/liferay-docs" -> "liferay/liferay-ide"
"liferay/liferay-docs" -> "liferay/liferay-plugins"
"liferay/liferay-docs" -> "liferay/liferay-portal"
"liferay/liferay-docs" -> "liferay/liferay-maven-support"
"liferay/liferay-docs" -> "liferay/liferay-blade-samples"
"liferay/liferay-docs" -> "liferay/liferay-faces"
"liferay/liferay-docs" -> "Liferay-Patchers-Community/liferay-portal"
"hantsy/angularjs-springmvc-sample" -> "hantsy/angularjs-springmvc-sample-boot"
"hantsy/angularjs-springmvc-sample" -> "xvitcoder/spring-mvc-angularjs"
"hantsy/angularjs-springmvc-sample" -> "jhades/spring-mvc-angularjs-sample-app"
"hantsy/angularjs-springmvc-sample" -> "ZhibingXie/SpringMVC-Spring-Hibernate" ["e"=1]
"hantsy/angularjs-springmvc-sample" -> "ykameshrao/spring-mvc-angular-js-hibernate-bootstrap-java-single-page-jwt-auth-rest-api-webapp-framework"
"hantsy/angularjs-springmvc-sample" -> "xpadro/spring-rest"
"avthart/spring-boot-axon-sample" -> "dadepo/exploringCQRSwithAxon"
"avthart/spring-boot-axon-sample" -> "benwilcock/cqrs-microservice-sampler"
"avthart/spring-boot-axon-sample" -> "benwilcock/microservice-sampler"
"avthart/spring-boot-axon-sample" -> "AxonFramework/Axon-trader"
"avthart/spring-boot-axon-sample" -> "mkuthan/example-axon"
"bfwg/angular-spring-starter" -> "bfwg/springboot-jwt-starter"
"bfwg/angular-spring-starter" -> "mrin9/Angular-SpringBoot-REST-JWT"
"bfwg/angular-spring-starter" -> "Saka7/spring-boot-angular4-boilerplate"
"bfwg/angular-spring-starter" -> "dlizarra/spring-angular2-cli-starter"
"bfwg/angular-spring-starter" -> "nydiarra/springboot-jwt"
"bfwg/angular-spring-starter" -> "vhoang55/springboot-jwt-angular2"
"bfwg/angular-spring-starter" -> "kamalber/spring-boot-angular4-authentication"
"bfwg/angular-spring-starter" -> "ipassynk/angular-springboot-jwt"
"bfwg/angular-spring-starter" -> "brahalla/Cerberus"
"bfwg/springboot-jwt-starter" -> "bfwg/angular-spring-starter"
"bfwg/springboot-jwt-starter" -> "svlada/springboot-security-jwt"
"bfwg/springboot-jwt-starter" -> "szerhusenBC/jwt-spring-security-demo"
"bfwg/springboot-jwt-starter" -> "mrin9/Angular-SpringBoot-REST-JWT"
"bfwg/springboot-jwt-starter" -> "isopropylcyanide/Jwt-Spring-Security-JPA"
"bfwg/springboot-jwt-starter" -> "brahalla/Cerberus"
"bfwg/springboot-jwt-starter" -> "nydiarra/springboot-jwt"
"bfwg/springboot-jwt-starter" -> "murraco/spring-boot-jwt"
"bfwg/springboot-jwt-starter" -> "dynamind/spring-boot-security-oauth2-minimal"
"bfwg/springboot-jwt-starter" -> "aboullaite/spring-boot-jwt"
"bfwg/springboot-jwt-starter" -> "vatri/spring-rest-ecommerce"
"bfwg/springboot-jwt-starter" -> "ipassynk/angular-springboot-jwt"
"bfwg/springboot-jwt-starter" -> "spring-guides/tut-spring-security-and-angular-js"
"bfwg/springboot-jwt-starter" -> "rohitghatol/spring-boot-microservices"
"bfwg/springboot-jwt-starter" -> "Baeldung/spring-security-oauth"
"TouhidurRahamanKhan/Online-shopping-Spring-MVC-java-config-mysql-hibernate" -> "MoonSulong/Ecommerce"
"koushikkothagal/spring-security-jpa" -> "koushikkothagal/spring-boot-security"
"koushikkothagal/spring-security-jpa" -> "koushikkothagal/spring-security-jwt"
"koushikkothagal/spring-security-jpa" -> "koushikkothagal/junit-5-basics-course"
"koushikkothagal/spring-security-jpa" -> "koushikkothagal/Java-8-Lambda-Basics"
"koushikkothagal/spring-security-jpa" -> "koushikkothagal/spring-boot-microservices-workshop"
"authlete/java-oauth-server" -> "authlete/java-resource-server"
"authlete/java-oauth-server" -> "authlete/authlete-java-common"
"authlete/java-oauth-server" -> "authlete/authlete-java-jaxrs"
"authlete/java-oauth-server" -> "andifalk/authorizationserver"
"authlete/java-oauth-server" -> "authlete/spring-oauth-server"
"rstoyanchev/spring-websocket-portfolio" -> "salmar/spring-websocket-chat"
"rstoyanchev/spring-websocket-portfolio" -> "rstoyanchev/spring-websocket-test"
"rstoyanchev/spring-websocket-portfolio" -> "jmesnil/stomp-websocket"
"rstoyanchev/spring-websocket-portfolio" -> "spring-guides/gs-messaging-stomp-websocket"
"rstoyanchev/spring-websocket-portfolio" -> "JSteunou/webstomp-client"
"rstoyanchev/spring-websocket-portfolio" -> "olivergierke/spring-restbucks" ["e"=1]
"rstoyanchev/spring-websocket-portfolio" -> "spring-projects/spring-loaded" ["e"=1]
"rstoyanchev/spring-websocket-portfolio" -> "eugenp/REST" ["e"=1]
"rstoyanchev/spring-websocket-portfolio" -> "rstoyanchev/spring-mvc-chat"
"rstoyanchev/spring-websocket-portfolio" -> "reactor/reactor" ["e"=1]
"rstoyanchev/spring-websocket-portfolio" -> "SpringSource/spring-hateoas" ["e"=1]
"rstoyanchev/spring-websocket-portfolio" -> "dsyer/spring-security-angular"
"rstoyanchev/spring-websocket-portfolio" -> "sockjs/sockjs-client" ["e"=1]
"rstoyanchev/spring-websocket-portfolio" -> "spring-projects/spring-xd" ["e"=1]
"rstoyanchev/spring-websocket-portfolio" -> "sockjs/sockjs-protocol" ["e"=1]
"dynamind/spring-boot-security-oauth2-minimal" -> "royclarkson/spring-rest-service-oauth"
"dynamind/spring-boot-security-oauth2-minimal" -> "rajithd/spring-boot-oauth2"
"dynamind/spring-boot-security-oauth2-minimal" -> "making/oauth2-sso-demo"
"dynamind/spring-boot-security-oauth2-minimal" -> "absolutegalaber/jwt-oauth2-example"
"dynamind/spring-boot-security-oauth2-minimal" -> "spring-guides/tut-spring-boot-oauth2"
"dynamind/spring-boot-security-oauth2-minimal" -> "brahalla/Cerberus"
"dynamind/spring-boot-security-oauth2-minimal" -> "spring-guides/tut-spring-security-and-angular-js"
"dynamind/spring-boot-security-oauth2-minimal" -> "xetys/spring-cloud-oauth2-example"
"dynamind/spring-boot-security-oauth2-minimal" -> "william-tran/microservice-security"
"dynamind/spring-boot-security-oauth2-minimal" -> "rohitghatol/spring-boot-microservices"
"dynamind/spring-boot-security-oauth2-minimal" -> "dsyer/sparklr-boot"
"dynamind/spring-boot-security-oauth2-minimal" -> "flindby/spring-oauth2-zuul"
"dynamind/spring-boot-security-oauth2-minimal" -> "FrontierPsychiatrist/spring-oauth-example"
"dynamind/spring-boot-security-oauth2-minimal" -> "wanghongfei/spring-security-oauth2-example" ["e"=1]
"dynamind/spring-boot-security-oauth2-minimal" -> "bfwg/springboot-jwt-starter"
"Saka7/spring-boot-angular4-boilerplate" -> "bfwg/angular-spring-starter"
"Saka7/spring-boot-angular4-boilerplate" -> "RaymondCoplin/spring-boot-angular4-material-boilerplate"
"spring-cloud-samples/sample-gateway-oauth2login" -> "artemMartynenko/spring-cloud-gateway-oauth2-sso-sample-application"
"spring-cloud-samples/sample-gateway-oauth2login" -> "benwilcock/spring-cloud-gateway-demo"
"zhulinn/SpringBoot-Angular7-Online-Shopping-Store" -> "cyela/Angular-Springboot"
"zhulinn/SpringBoot-Angular7-Online-Shopping-Store" -> "antkaynak/Keyist-Ecommerce"
"zhulinn/SpringBoot-Angular7-Online-Shopping-Store" -> "mrin9/Angular-SpringBoot-REST-JWT"
"zhulinn/SpringBoot-Angular7-Online-Shopping-Store" -> "ikismail/ShoppingCart"
"zhulinn/SpringBoot-Angular7-Online-Shopping-Store" -> "RainbowForest/e-commerce-microservices"
"zhulinn/SpringBoot-Angular7-Online-Shopping-Store" -> "vatri/spring-rest-ecommerce"
"zhulinn/SpringBoot-Angular7-Online-Shopping-Store" -> "JohnnyLe/Modern-Ecommerce"
"zhulinn/SpringBoot-Angular7-Online-Shopping-Store" -> "RameshMF/Angular8-SpringBoot-CRUD-Tutorial"
"zhulinn/SpringBoot-Angular7-Online-Shopping-Store" -> "zhulinn/Online-Shopping-Store"
"zhulinn/SpringBoot-Angular7-Online-Shopping-Store" -> "merikbest/ecommerce-spring-reactjs"
"zhulinn/SpringBoot-Angular7-Online-Shopping-Store" -> "SaiUpadhyayula/SpringAngularEcommerce"
"zhulinn/SpringBoot-Angular7-Online-Shopping-Store" -> "mjstewart/hotel-reservation-springmvc"
"jhipster/jdl-samples" -> "jhipster/jhipster-control-center"
"jhipster/jdl-samples" -> "jhipster/jhipster-guides"
"jhipster/jdl-samples" -> "jhipster/jhipster-online"
"jhipster/jdl-samples" -> "jhipster/jhipster-ide"
"jhipster/jdl-samples" -> "jhipster/ng-jhipster"
"jhipster/jdl-samples" -> "bastienmichaux/generator-jhipster-db-helper"
"authlete/spring-oauth-server" -> "authlete/spring-resource-server"
"paulc4/microservices-demo" -> "rohitghatol/spring-boot-microservices"
"paulc4/microservices-demo" -> "kbastani/spring-cloud-microservice-example"
"paulc4/microservices-demo" -> "callistaenterprise/blog-microservices"
"paulc4/microservices-demo" -> "ewolff/microservice"
"paulc4/microservices-demo" -> "livelessons-spring/building-microservices"
"paulc4/microservices-demo" -> "oktadeveloper/spring-boot-microservices-example"
"paulc4/microservices-demo" -> "cer/event-sourcing-examples"
"paulc4/microservices-demo" -> "anilallewar/microservices-basics-spring-boot"
"paulc4/microservices-demo" -> "cer/microservices-examples"
"paulc4/microservices-demo" -> "joshlong/bootiful-microservices"
"paulc4/microservices-demo" -> "spring-petclinic/spring-petclinic-microservices"
"paulc4/microservices-demo" -> "kennyk65/Microservices-With-Spring-Student-Files"
"paulc4/microservices-demo" -> "spring-cloud-samples/customers-stores"
"paulc4/microservices-demo" -> "kbastani/spring-cloud-event-sourcing-example"
"paulc4/microservices-demo" -> "piomin/sample-spring-microservices-new"
"anilallewar/microservices-basics-spring-boot" -> "rohitghatol/spring-boot-microservices"
"anilallewar/microservices-basics-spring-boot" -> "piomin/sample-spring-microservices-new"
"anilallewar/microservices-basics-spring-boot" -> "sivaprasadreddy/spring-boot-microservices-series"
"anilallewar/microservices-basics-spring-boot" -> "mohamed-taman/Springy-Store-Microservices"
"anilallewar/microservices-basics-spring-boot" -> "piomin/sample-spring-microservices"
"anilallewar/microservices-basics-spring-boot" -> "livelessons-spring/building-microservices"
"anilallewar/microservices-basics-spring-boot" -> "oktadeveloper/spring-boot-microservices-example"
"anilallewar/microservices-basics-spring-boot" -> "apssouza22/java-microservice"
"anilallewar/microservices-basics-spring-boot" -> "idugalic/micro-company"
"anilallewar/microservices-basics-spring-boot" -> "idugalic/micro-ecommerce"
"anilallewar/microservices-basics-spring-boot" -> "spring-petclinic/spring-petclinic-microservices"
"anilallewar/microservices-basics-spring-boot" -> "ewolff/microservice"
"anilallewar/microservices-basics-spring-boot" -> "IBM/spring-boot-microservices-on-kubernetes"
"anilallewar/microservices-basics-spring-boot" -> "oktadeveloper/java-microservices-examples"
"anilallewar/microservices-basics-spring-boot" -> "mostafacs/ecommerce-microservices-spring-reactive-webflux"
"callistaenterprise/blog-microservices" -> "xetys/spring-cloud-oauth2-example"
"callistaenterprise/blog-microservices" -> "kakawait/uaa-behind-zuul-sample"
"callistaenterprise/blog-microservices" -> "rohitghatol/spring-boot-microservices"
"callistaenterprise/blog-microservices" -> "william-tran/microservice-security"
"callistaenterprise/blog-microservices" -> "spring-cloud-samples/springbox-cloud"
"callistaenterprise/blog-microservices" -> "paulc4/microservices-demo"
"callistaenterprise/blog-microservices" -> "livelessons-spring/building-microservices"
"callistaenterprise/blog-microservices" -> "joshlong/bootiful-microservices"
"callistaenterprise/blog-microservices" -> "oktadeveloper/spring-boot-microservices-example"
"callistaenterprise/blog-microservices" -> "kbastani/spring-cloud-microservice-example"
"callistaenterprise/blog-microservices" -> "joshlong/service-registration-and-discovery"
"callistaenterprise/blog-microservices" -> "dsyer/spring-security-angular"
"callistaenterprise/blog-microservices" -> "bijukunjummen/spring-cloud-ping-pong-sample"
"callistaenterprise/blog-microservices" -> "kennyk65/Microservices-With-Spring-Student-Files"
"callistaenterprise/blog-microservices" -> "flindby/spring-oauth2-zuul"
"benwilcock/microservice-sampler" -> "kbastani/spring-cloud-event-sourcing-example"
"benwilcock/microservice-sampler" -> "avthart/spring-boot-axon-sample"
"benwilcock/microservice-sampler" -> "idugalic/micro-company"
"benwilcock/microservice-sampler" -> "eventuate-examples/es-kanban-board"
"benwilcock/microservice-sampler" -> "eventuate-examples/eventuate-examples-java-spring-todo-list"
"benwilcock/microservice-sampler" -> "kbastani/event-stream-processing-microservices"
"benwilcock/microservice-sampler" -> "AxonFramework/Axon-trader"
"benwilcock/microservice-sampler" -> "pivotalsoftware/ESarch"
"benwilcock/microservice-sampler" -> "sunnykaka/mysteam"
"benwilcock/microservice-sampler" -> "mploed/ddd-strategic-design-spring-boot" ["e"=1]
"benwilcock/microservice-sampler" -> "eventuate-examples/eventuate-examples-java-customers-and-orders"
"benwilcock/microservice-sampler" -> "AxonFramework/AxonBank"
"benwilcock/microservice-sampler" -> "dadepo/exploringCQRSwithAxon"
"artemMartynenko/spring-cloud-gateway-oauth2-sso-sample-application" -> "spring-cloud-samples/sample-gateway-oauth2login"
"RameshMF/registration-login-spring-boot-security-thymeleaf-hibernate" -> "RameshMF/registration-login-springboot-security-thymeleaf"
"RameshMF/registration-login-spring-boot-security-thymeleaf-hibernate" -> "RameshMF/springboot-thymeleaf-crud-pagination-sorting-webapp"
"RameshMF/registration-login-spring-boot-security-thymeleaf-hibernate" -> "gustavoponce7/spring-login"
"RameshMF/registration-login-spring-boot-security-thymeleaf-hibernate" -> "devRobots/spring-boot-ecommerce"
"zpng/spring-cloud-microservice-examples" -> "ThoreauZZ/spring-cloud-example"
"zpng/spring-cloud-microservice-examples" -> "zpng/spring-cloud-7simple"
"zpng/spring-cloud-microservice-examples" -> "yidongnan/spring-cloud-netflix-example"
"zpng/spring-cloud-microservice-examples" -> "yidongnan/spring-cloud-consul-example"
"zpng/spring-cloud-microservice-examples" -> "xetys/spring-cloud-oauth2-example"
"zpng/spring-cloud-microservice-examples" -> "kakawait/uaa-behind-zuul-sample"
"zpng/spring-cloud-microservice-examples" -> "prontera/spring-cloud-rest-tcc" ["e"=1]
"zpng/spring-cloud-microservice-examples" -> "wanghongfei/spring-security-oauth2-example" ["e"=1]
"zpng/spring-cloud-microservice-examples" -> "charlesvhe/spring-cloud-practice" ["e"=1]
"zpng/spring-cloud-microservice-examples" -> "kbastani/spring-cloud-microservice-example"
"zpng/spring-cloud-microservice-examples" -> "sungang1120/genesis"
"zpng/spring-cloud-microservice-examples" -> "SpringCloud/spring-cloud-document" ["e"=1]
"zpng/spring-cloud-microservice-examples" -> "chaokunyang/microservices-event-sourcing" ["e"=1]
"zpng/spring-cloud-microservice-examples" -> "ddewaele/spring-cloud-security-samples"
"zpng/spring-cloud-microservice-examples" -> "sunnykaka/mysteam"
"eventuate-tram/eventuate-tram-examples-customers-and-orders" -> "eventuate-tram/eventuate-tram-sagas-examples-customers-and-orders"
"eventuate-tram/eventuate-tram-examples-customers-and-orders" -> "eventuate-tram/eventuate-tram-core"
"eventuate-tram/eventuate-tram-examples-customers-and-orders" -> "eventuate-tram/eventuate-tram-sagas"
"eventuate-tram/eventuate-tram-examples-customers-and-orders" -> "eventuate-tram/eventuate-tram-examples-java-spring-todo-list"
"eventuate-tram/eventuate-tram-examples-customers-and-orders" -> "eventuate-examples/eventuate-examples-java-customers-and-orders"
"eventuate-tram/eventuate-tram-examples-customers-and-orders" -> "eventuate-tram/eventuate-tram-core-examples-basic"
"eventuate-tram/eventuate-tram-examples-customers-and-orders" -> "eventuate-local/eventuate-local"
"eventuate-tram/eventuate-tram-examples-customers-and-orders" -> "microservices-patterns/ftgo-application"
"eventuate-tram/eventuate-tram-examples-customers-and-orders" -> "eventuate-foundation/eventuate-cdc"
"Urunov/SpringBoot-Projects-FullStack" -> "RameshMF/spring-boot-tutorial"
"Urunov/SpringBoot-Projects-FullStack" -> "RameshMF/registration-login-spring-boot-security-thymeleaf-hibernate"
"Urunov/SpringBoot-Projects-FullStack" -> "keumtae-kim/spring-boot-react-blog"
"Urunov/SpringBoot-Projects-FullStack" -> "callicoder/spring-boot-mysql-rest-api-tutorial"
"FutureProcessing/spring-boot-security-example" -> "virgo47/restful-spring-security"
"FutureProcessing/spring-boot-security-example" -> "Robbert1/boot-stateless-auth"
"FutureProcessing/spring-boot-security-example" -> "bkielczewski/example-spring-boot-security"
"FutureProcessing/spring-boot-security-example" -> "brahalla/Cerberus"
"FutureProcessing/spring-boot-security-example" -> "manish-in-java/spring-security-rest"
"Java-Techie-jt/springboot-angular8-crud-example" -> "Java-Techie-jt/spring-security-angular-example"
"idugalic/micro-company" -> "benwilcock/microservice-sampler"
"idugalic/micro-company" -> "AxonFramework/Axon-trader"
"idugalic/micro-company" -> "AxonFramework/AxonBank"
"idugalic/micro-company" -> "idugalic/micro-ecommerce"
"idugalic/micro-company" -> "EdisonXu/sbs-axon"
"idugalic/micro-company" -> "avthart/spring-boot-axon-sample"
"idugalic/micro-company" -> "kbastani/spring-cloud-event-sourcing-example"
"idugalic/micro-company" -> "anilallewar/microservices-basics-spring-boot"
"idugalic/micro-company" -> "idugalic/digital-restaurant"
"idugalic/micro-company" -> "pilloPl/event-source-cqrs-sample"
"idugalic/micro-company" -> "kbastani/event-stream-processing-microservices"
"idugalic/micro-company" -> "benwilcock/cqrs-microservice-sampler"
"idugalic/micro-company" -> "pellse/assembler"
"idugalic/micro-company" -> "oktadeveloper/spring-boot-microservices-example"
"idugalic/micro-company" -> "yidongnan/spring-cloud-netflix-example"
"mohamed-taman/Springy-Store-Microservices" -> "anilallewar/microservices-basics-spring-boot"
"mohamed-taman/Springy-Store-Microservices" -> "oktadeveloper/java-microservices-examples"
"mohamed-taman/Springy-Store-Microservices" -> "oktadev/java-microservices-examples"
"mohamed-taman/Springy-Store-Microservices" -> "devdcores/BookStoreApp-Distributed-Application"
"mohamed-taman/Springy-Store-Microservices" -> "piomin/sample-spring-microservices"
"mohamed-taman/Springy-Store-Microservices" -> "wimdeblauwe/error-handling-spring-boot-starter" ["e"=1]
"mohamed-taman/Springy-Store-Microservices" -> "piomin/sample-spring-microservices-new"
"mohamed-taman/Springy-Store-Microservices" -> "mostafacs/ecommerce-microservices-spring-reactive-webflux"
"mohamed-taman/Springy-Store-Microservices" -> "piomin/sample-spring-microservices-kubernetes"
"mohamed-taman/Springy-Store-Microservices" -> "abhisheksr01/spring-boot-microservice-best-practices"
"mohamed-taman/Springy-Store-Microservices" -> "ThomasVitale/awesome-spring" ["e"=1]
"mohamed-taman/Springy-Store-Microservices" -> "sivaprasadreddy/spring-boot-microservices-series"
"mohamed-taman/Springy-Store-Microservices" -> "hantsy/spring-microservice-sample"
"mohamed-taman/Springy-Store-Microservices" -> "kbastani/event-sourcing-microservices-example"
"mohamed-taman/Springy-Store-Microservices" -> "oktadev/spring-boot-microservices-example"
"ewolff/microservice-kubernetes" -> "ewolff/microservice-istio"
"ewolff/microservice-kubernetes" -> "ewolff/microservice"
"venkataravuri/e-commerce-microservices-sample" -> "idugalic/micro-ecommerce"
"venkataravuri/e-commerce-microservices-sample" -> "RainbowForest/e-commerce-microservices"
"osopromadze/Spring-Boot-Blog-REST-API" -> "callicoder/spring-boot-mysql-rest-api-tutorial"
"osopromadze/Spring-Boot-Blog-REST-API" -> "vatri/spring-rest-ecommerce"
"osopromadze/Spring-Boot-Blog-REST-API" -> "khoubyari/spring-boot-rest-example"
"osopromadze/Spring-Boot-Blog-REST-API" -> "RameshMF/springboot-blog-rest-api"
"osopromadze/Spring-Boot-Blog-REST-API" -> "givanthak/spring-boot-rest-api-tutorial"
"osopromadze/Spring-Boot-Blog-REST-API" -> "ujjavaldesai07/spring-boot-react-ecommerce-app"
"osopromadze/Spring-Boot-Blog-REST-API" -> "gothinkster/spring-boot-realworld-example-app" ["e"=1]
"osopromadze/Spring-Boot-Blog-REST-API" -> "Throyer/springboot-api-rest-example"
"osopromadze/Spring-Boot-Blog-REST-API" -> "bezkoder/spring-boot-spring-security-jwt-authentication"
"osopromadze/Spring-Boot-Blog-REST-API" -> "murraco/spring-boot-jwt"
"osopromadze/Spring-Boot-Blog-REST-API" -> "ThomasVitale/awesome-spring" ["e"=1]
"osopromadze/Spring-Boot-Blog-REST-API" -> "merikbest/ecommerce-spring-reactjs"
"osopromadze/Spring-Boot-Blog-REST-API" -> "zhulinn/SpringBoot-Angular7-Online-Shopping-Store"
"osopromadze/Spring-Boot-Blog-REST-API" -> "spring-petclinic/spring-petclinic-rest"
"osopromadze/Spring-Boot-Blog-REST-API" -> "SaiUpadhyayula/spring-reddit-clone"
"codingspecialist/Springboot-Security-JWT-Easy" -> "codingspecialist/-Springboot-Security-OAuth2.0-V3"
"codingspecialist/Springboot-Security-JWT-Easy" -> "codingspecialist/Sringboot-Security-Basic-V1"
"TechPrimers/stock-price-viewer-microservices-part1" -> "TechPrimers/stock-price-viewer-microservices-part2-final"
"TechPrimers/stock-price-viewer-microservices-part1" -> "TechPrimers/spring-security-oauth-example"
"spring-cloud-samples/configserver" -> "spring-cloud-samples/customers-stores"
"spring-cloud-samples/configserver" -> "spring-cloud-samples/eureka"
"spring-cloud-samples/configserver" -> "spring-cloud-samples/config-repo"
"spring-cloud-samples/configserver" -> "spring-cloud-samples/authserver"
"spring-cloud-samples/configserver" -> "spring-cloud-samples/sso"
"spring-cloud-samples/configserver" -> "spring-cloud-samples/hystrix-dashboard"
"spring-cloud-samples/configserver" -> "spring-cloud/spring-cloud-config" ["e"=1]
"spring-cloud-samples/configserver" -> "joshlong/bootiful-microservices"
"spring-cloud-samples/configserver" -> "spring-cloud-samples/zuul-server"
"spring-cloud-samples/configserver" -> "spring-cloud-samples/spring-cloud-gateway-sample"
"spring-cloud-samples/configserver" -> "spring-cloud/spring-cloud-security" ["e"=1]
"spring-cloud-samples/configserver" -> "spring-cloud-samples/spring-cloud-contract-samples" ["e"=1]
"fraktalio/fmodel" -> "fraktalio/fmodel-demos"
"fraktalio/fmodel" -> "nomisRev/kotlin-kafka"
"spring-guides/tut-react-and-spring-data-rest" -> "geowarin/boot-react"
"spring-guides/tut-react-and-spring-data-rest" -> "kantega/react-and-spring"
"spring-guides/tut-react-and-spring-data-rest" -> "oktadeveloper/okta-spring-boot-react-crud-example"
"spring-guides/tut-react-and-spring-data-rest" -> "spring-guides/tut-spring-security-and-angular-js"
"spring-guides/tut-react-and-spring-data-rest" -> "eirslett/frontend-maven-plugin" ["e"=1]
"spring-guides/tut-react-and-spring-data-rest" -> "spring-guides/tut-rest"
"spring-guides/tut-react-and-spring-data-rest" -> "spring-guides/tut-spring-boot-oauth2"
"spring-guides/tut-react-and-spring-data-rest" -> "winterbe/spring-react-example"
"spring-guides/tut-react-and-spring-data-rest" -> "dlizarra/spring-boot-react-webpack-starter"
"spring-guides/tut-react-and-spring-data-rest" -> "spring-petclinic/spring-petclinic-reactjs"
"spring-guides/tut-react-and-spring-data-rest" -> "spring-guides/gs-spring-boot-docker"
"spring-guides/tut-react-and-spring-data-rest" -> "spring-projects/spring-data-examples" ["e"=1]
"spring-guides/tut-react-and-spring-data-rest" -> "callicoder/spring-security-react-ant-design-polls-app"
"spring-guides/tut-react-and-spring-data-rest" -> "hantsy/spring-reactive-sample" ["e"=1]
"spring-guides/tut-react-and-spring-data-rest" -> "srs/gradle-node-plugin" ["e"=1]
"stratospheric-dev/stratospheric" -> "rieckpil/testing-spring-boot-applications-masterclass"
"xetys/spring-cloud-oauth2-example" -> "ThoreauZZ/spring-cloud-example"
"xetys/spring-cloud-oauth2-example" -> "yidongnan/spring-cloud-consul-example"
"xetys/spring-cloud-oauth2-example" -> "kakawait/uaa-behind-zuul-sample"
"xetys/spring-cloud-oauth2-example" -> "zpng/spring-cloud-microservice-examples"
"xetys/spring-cloud-oauth2-example" -> "absolutegalaber/jwt-oauth2-example"
"xetys/spring-cloud-oauth2-example" -> "flindby/spring-oauth2-zuul"
"spring-cloud-samples/hystrix-dashboard" -> "spring-cloud-samples/turbine"
"springframeworkguru/spring5webapp" -> "springframeworkguru/sfg-pet-clinic"
"springframeworkguru/spring5webapp" -> "springframeworkguru/spring5-recipe-app"
"springframeworkguru/spring5webapp" -> "springframeworkguru/springbootwebapp"
"springframeworkguru/spring5webapp" -> "spring-petclinic/spring-framework-petclinic"
"springframeworkguru/spring5webapp" -> "springframeworkguru/spring5-di-demo"
"springframeworkguru/spring5webapp" -> "springframeworkguru/sfg-di"
"springframeworkguru/spring5webapp" -> "springframeworkguru/spring5-jokes-app"
"springframeworkguru/spring5webapp" -> "springframeworkguru/tdd-by-example"
"springframeworkguru/spring5webapp" -> "springframeworkguru/spring-boot-rabbitmq-example"
"springframeworkguru/spring5webapp" -> "spring-petclinic/spring-petclinic-microservices"
"springframeworkguru/spring5webapp" -> "springframeworkguru/spring5-reactive-mongo-recipe-app"
"springframeworkguru/spring5webapp" -> "spring-projects/spring-petclinic" ["e"=1]
"springframeworkguru/spring5webapp" -> "in28minutes/jpa-with-hibernate" ["e"=1]
"springframeworkguru/spring5webapp" -> "springframeworkguru/spring5-mongo-recipe-app"
"springframeworkguru/spring5webapp" -> "springframeworkguru/spring5-mvc-rest"
"jhipster/jhipster.github.io" -> "jhipster/jhipster"
"jhipster/jhipster.github.io" -> "jhipster/jhipster-registry"
"jhipster/jhipster.github.io" -> "jhipster/ng-jhipster"
"jhipster/jhipster.github.io" -> "jhipster/jdl-studio"
"jhipster/jhipster.github.io" -> "jhipster/jhipster-core"
"jhipster/jhipster.github.io" -> "jhipster/jhipster-console"
"jhipster/jhipster.github.io" -> "jhipster/jhipster-devbox"
"jhipster/jhipster.github.io" -> "jhipster/jhipster-online"
"jhipster/jhipster.github.io" -> "oktadeveloper/generator-jhipster-ionic"
"jhipster/jhipster.github.io" -> "jhipster/jhipster-sample-app"
"jhipster/jhipster.github.io" -> "jhipster/jhipster-uml"
"jhipster/jhipster.github.io" -> "jhipster/jhipster-ide"
"jhipster/jhipster.github.io" -> "hipster-labs/generator-jhipster-react"
"jhipster/jhipster.github.io" -> "jhipster/jhipster-control-center"
"jhipster/jhipster.github.io" -> "jhipster/jhipster-vuejs"
"spring-guides/gs-accessing-data-jpa" -> "spring-guides/gs-accessing-data-mysql"
"spring-guides/gs-accessing-data-jpa" -> "spring-guides/gs-consuming-rest"
"spring-guides/gs-accessing-data-jpa" -> "spring-guides/gs-testing-web"
"spring-guides/gs-accessing-data-jpa" -> "spring-guides/gs-accessing-data-mongodb"
"spring-guides/gs-accessing-data-jpa" -> "spring-guides/gs-securing-web"
"spring-guides/gs-accessing-data-jpa" -> "spring-guides/gs-relational-data-access"
"rajithd/spring-boot-oauth2" -> "dynamind/spring-boot-security-oauth2-minimal"
"rajithd/spring-boot-oauth2" -> "royclarkson/spring-rest-service-oauth"
"rajithd/spring-boot-oauth2" -> "iainporter/oauth2-provider"
"rajithd/spring-boot-oauth2" -> "kaenry/spring-boot-magneto"
"rajithd/spring-boot-oauth2" -> "spring-guides/tut-spring-boot-oauth2"
"sudheerj/generator-jhipster-primeng" -> "oktadeveloper/generator-jhipster-ionic"
"sudheerj/generator-jhipster-primeng" -> "sonalake/generator-jhipster-multitenancy"
"sudheerj/generator-jhipster-primeng" -> "jhipster/ng-jhipster"
"sudheerj/generator-jhipster-primeng" -> "jhipster/jhipster-vuejs"
"spring-guides/gs-rest-service" -> "spring-guides/gs-spring-boot"
"spring-guides/gs-rest-service" -> "spring-guides/gs-serving-web-content"
"spring-guides/gs-rest-service" -> "spring-guides/gs-accessing-data-jpa"
"spring-guides/gs-rest-service" -> "spring-guides/gs-accessing-data-mysql"
"spring-guides/gs-rest-service" -> "spring-guides/gs-rest-service-cors"
"spring-guides/gs-rest-service" -> "spring-guides/gs-spring-boot-docker"
"spring-guides/gs-rest-service" -> "spring-guides/tut-rest"
"spring-guides/gs-rest-service" -> "spring-guides/gs-securing-web"
"spring-guides/gs-rest-service" -> "spring-guides/gs-consuming-rest"
"spring-guides/gs-rest-service" -> "spring-guides/getting-started-guides"
"spring-guides/gs-rest-service" -> "spring-guides/gs-uploading-files"
"spring-guides/gs-rest-service" -> "spring-guides/gs-gradle"
"spring-guides/gs-rest-service" -> "spring-guides/gs-testing-web"
"spring-guides/gs-rest-service" -> "spring-projects/spring-data-examples" ["e"=1]
"spring-guides/gs-rest-service" -> "netgloo/spring-boot-samples"
"dsyer/spring-security-angular" -> "philipsorst/angular-rest-springsecurity"
"dsyer/spring-security-angular" -> "royclarkson/spring-rest-service-oauth"
"dsyer/spring-security-angular" -> "Robbert1/boot-stateless-auth"
"dsyer/spring-security-angular" -> "techdev-solutions/trackr-backend"
"dsyer/spring-security-angular" -> "jhades/spring-mvc-angularjs-sample-app"
"dsyer/spring-security-angular" -> "callistaenterprise/blog-microservices"
"dsyer/spring-security-angular" -> "olivergierke/repositories-deepdive" ["e"=1]
"dsyer/spring-security-angular" -> "eugenp/REST" ["e"=1]
"dsyer/spring-security-angular" -> "rwinch/gs-spring-security-3.2"
"dsyer/spring-security-angular" -> "michael-simons/biking2" ["e"=1]
"dsyer/spring-security-angular" -> "FrontierPsychiatrist/spring-oauth-example"
"dsyer/spring-security-angular" -> "olivergierke/spring-restbucks" ["e"=1]
"dsyer/spring-security-angular" -> "SpringSource/spring-hateoas" ["e"=1]
"dsyer/spring-security-angular" -> "ghillert/botanic-ng"
"dsyer/spring-security-angular" -> "iainporter/oauth2-provider"
"WASdev/ci.docker.websphere-traditional" -> "WASdev/ci.docker"
"WASdev/ci.docker.websphere-traditional" -> "amirbarkal/websphere-nd-docker"
"springframeworkguru/spring5-mongo-recipe-app" -> "springframeworkguru/spring5-mysql-recipe-app"
"springframeworkguru/spring5-mongo-recipe-app" -> "springframeworkguru/spring5-reactive-mongo-recipe-app"
"springframeworkguru/spring5-reactive-mongo-recipe-app" -> "springframeworkguru/spring5-mongo-recipe-app"
"springframeworkguru/spring5-reactive-mongo-recipe-app" -> "springframeworkguru/spring5-webflux-rest"
"springframeworkguru/spring5-reactive-mongo-recipe-app" -> "springframeworkguru/spring-rest-client-examples"
"g00glen00b/spring-websockets" -> "g00glen00b/spring-ng-chat"
"hamvocke/spring-testing" -> "mechero/spring-boot-testing-strategies"
"hamvocke/spring-testing" -> "rieckpil/testing-spring-boot-applications-masterclass"
"hamvocke/spring-testing" -> "DiUS/pact-jvm" ["e"=1]
"hamvocke/spring-testing" -> "thombergs/code-examples" ["e"=1]
"hamvocke/spring-testing" -> "bonigarcia/mastering-junit5" ["e"=1]
"hamvocke/spring-testing" -> "hamvocke/testing-microservices-ebook"
"hamvocke/spring-testing" -> "pact-foundation/pact-ruby" ["e"=1]
"hamvocke/spring-testing" -> "junit-team/junit5-samples" ["e"=1]
"hamvocke/spring-testing" -> "anilallewar/microservices-basics-spring-boot"
"hamvocke/spring-testing" -> "wimdeblauwe/error-handling-spring-boot-starter" ["e"=1]
"hamvocke/spring-testing" -> "TNG/ArchUnit-Examples" ["e"=1]
"hamvocke/spring-testing" -> "bonigarcia/webdrivermanager" ["e"=1]
"hamvocke/spring-testing" -> "gothinkster/spring-boot-realworld-example-app" ["e"=1]
"hamvocke/spring-testing" -> "andreschaffer/microservices-testing-examples"
"hamvocke/spring-testing" -> "junit-pioneer/junit-pioneer" ["e"=1]
"razee-io/Razee" -> "IBM/cloud-operators"
"razee-io/Razee" -> "nirmata/kyverno" ["e"=1]
"sunnykaka/mysteam" -> "sunnykaka/mysteam-config-repo"
"sunnykaka/mysteam" -> "xuminwlt/j360-cloud-all" ["e"=1]
"joshlong/bootiful-microservices" -> "joshlong/cloud-native-workshop"
"joshlong/bootiful-microservices" -> "joshlong/bootiful-microservices-config"
"joshlong/bootiful-microservices" -> "livelessons-spring/building-microservices"
"joshlong/bootiful-microservices" -> "callistaenterprise/blog-microservices"
"joshlong/bootiful-microservices" -> "joshlong/boot-examples"
"joshlong/bootiful-microservices" -> "joshlong/bootiful-reactive-microservices"
"joshlong/bootiful-microservices" -> "spring-cloud-samples/configserver"
"joshlong/bootiful-microservices" -> "joshlong/flux-flix-service" ["e"=1]
"joshlong/bootiful-microservices" -> "philwebb/testing-spring-boot-applications"
"joshlong/bootiful-microservices" -> "william-tran/microservice-security"
"joshlong/bootiful-microservices" -> "kbastani/spring-cloud-microservice-example"
"joshlong/bootiful-microservices" -> "paulc4/microservices-demo"
"joshlong/bootiful-microservices" -> "joshlong/the-spring-rest-stack" ["e"=1]
"joshlong/bootiful-microservices" -> "joshlong/spring-doge-microservice"
"joshlong/bootiful-microservices" -> "rohitghatol/spring-boot-microservices"
"spring-petclinic/spring-petclinic-graphql" -> "spring-petclinic/spring-petclinic-reactjs"
"eventuate-foundation/eventuate-cdc" -> "eventuate-foundation/eventuate-messaging-kafka"
"eventuate-foundation/eventuate-cdc" -> "eventuate-foundation/eventuate-common"
"cer/microservices-examples" -> "cer/event-sourcing-examples"
"cer/microservices-examples" -> "ewolff/microservice"
"cer/microservices-examples" -> "rohitghatol/spring-boot-microservices"
"cer/microservices-examples" -> "kbastani/spring-cloud-microservice-example"
"cer/microservices-examples" -> "eventuate-examples/eventuate-examples-java-spring-todo-list"
"cer/microservices-examples" -> "callistaenterprise/blog-microservices"
"cer/microservices-examples" -> "livelessons-spring/building-microservices"
"cer/microservices-examples" -> "paulc4/microservices-demo"
"cer/microservices-examples" -> "kbastani/spring-cloud-event-sourcing-example"
"cer/microservices-examples" -> "eventuate-examples/es-kanban-board"
"cer/microservices-examples" -> "microservices-practical/microservices-v10"
"cer/microservices-examples" -> "eventuate-examples/eventuate-examples-java-customers-and-orders"
"cer/microservices-examples" -> "microservices-patterns/ftgo-application"
"cer/microservices-examples" -> "eventuate-examples/eventuate-examples-restaurant-management"
"cer/microservices-examples" -> "sivaprasadreddy/spring-boot-microservices-series"
"spring-cloud-samples/sample-zuul-filters" -> "spring-cloud-samples/zuul-server"
"mostafacs/ecommerce-microservices-spring-reactive-webflux" -> "idugalic/micro-ecommerce"
"mostafacs/ecommerce-microservices-spring-reactive-webflux" -> "rcherara/microservice-architecture"
"ujjavaldesai07/spring-boot-react-ecommerce-app" -> "merikbest/ecommerce-spring-reactjs"
"ujjavaldesai07/spring-boot-react-ecommerce-app" -> "devdcores/BookStoreApp-Distributed-Application"
"ujjavaldesai07/spring-boot-react-ecommerce-app" -> "keumtae-kim/spring-boot-react-blog"
"ujjavaldesai07/spring-boot-react-ecommerce-app" -> "RainbowForest/e-commerce-microservices"
"ujjavaldesai07/spring-boot-react-ecommerce-app" -> "devRobots/spring-boot-ecommerce"
"ujjavaldesai07/spring-boot-react-ecommerce-app" -> "MoonSulong/Ecommerce"
"bezkoder/spring-boot-refresh-token-jwt" -> "bezkoder/spring-boot-spring-security-jwt-authentication"
"bezkoder/spring-boot-refresh-token-jwt" -> "bezkoder/spring-boot-login-example"
"qalingo/qalingo-engine" -> "uncodecn/uncode-dal-all"
"qalingo/qalingo-engine" -> "ilscipio/scipio-erp" ["e"=1]
"qalingo/qalingo-engine" -> "webpagebytes/cms"
"qalingo/qalingo-engine" -> "inspire-software/yes-cart"
"shabbirdwd53/Springboot-Tutorial" -> "shabbirdwd53/Spring-Data-JPA-Tutorial"
"shabbirdwd53/Springboot-Tutorial" -> "shabbirdwd53/spring-security-tutorial"
"PacktPublishing/Hands-On-Reactive-Programming-in-Spring-5" -> "spring-projects/spring-data-r2dbc" ["e"=1]
"PacktPublishing/Hands-On-Reactive-Programming-in-Spring-5" -> "PacktPublishing/Hands-On-Reactive-Programming-with-Reactor"
"PacktPublishing/Hands-On-Reactive-Programming-in-Spring-5" -> "PacktPublishing/Hands-On-Spring-Security-5-for-Reactive-Applications"
"PacktPublishing/Hands-On-Reactive-Programming-in-Spring-5" -> "PacktPublishing/Hands-On-Microservices-with-Spring-Boot-and-Spring-Cloud"
"PacktPublishing/Mastering-Microservices-with-Java" -> "PacktPublishing/Microservices-Deployment-Cookbook"
"PacktPublishing/Mastering-Microservices-with-Java" -> "PacktPublishing/Mastering-Microservices-with-Java-Third-Edition"
"jahe/spring-boot-multiple-datasources" -> "pkainulainen/spring-batch-examples" ["e"=1]
"spring-guides/top-spring-security-architecture" -> "spring-guides/gs-securing-web"
"spring-guides/top-spring-security-architecture" -> "spring-guides/gs-async-method"
"xpinjection/hibernate-performance" -> "xpinjection/hibernate-basics"
"xpinjection/hibernate-performance" -> "xpinjection/java8-misuses"
"liferay/clay" -> "liferay/liferay-frontend-projects"
"liferay/clay" -> "metal/metal.js"
"liferay/clay" -> "jordanamorais/lfrgs-frontend-samples"
"mraible/idea-live-templates" -> "mraible/jhipster6-demo"
"piomin/sample-spring-microservices" -> "piomin/sample-spring-microservices-new"
"piomin/sample-spring-microservices" -> "sivaprasadreddy/spring-boot-microservices-series"
"piomin/sample-spring-microservices" -> "oktadev/spring-boot-microservices-example"
"piomin/sample-spring-microservices" -> "anilallewar/microservices-basics-spring-boot"
"piomin/sample-spring-microservices" -> "piomin/sample-spring-microservices-kubernetes"
"piomin/sample-spring-microservices" -> "mohamed-taman/Springy-Store-Microservices"
"piomin/sample-spring-microservices" -> "WendellAdriel/spring-microservices"
"piomin/sample-spring-microservices" -> "spring-petclinic/spring-petclinic-microservices"
"piomin/sample-spring-microservices" -> "livelessons-spring/building-microservices"
"piomin/sample-spring-microservices" -> "mostafacs/ecommerce-microservices-spring-reactive-webflux"
"piomin/sample-spring-microservices" -> "piomin/sample-spring-oauth2-microservices"
"piomin/sample-spring-microservices" -> "piomin/sample-spring-microservices-advanced"
"piomin/sample-spring-microservices" -> "idugalic/micro-ecommerce"
"piomin/sample-spring-microservices" -> "oktadev/java-microservices-examples"
"piomin/sample-spring-microservices" -> "eiselems/spring-boot-microservices"
"spring-cloud-samples/brewery" -> "ordina-jworks/microservices-dashboard"
"spring-cloud-samples/brewery" -> "spring-cloud-samples/customers-stores"
"spring-cloud-samples/brewery" -> "spring-cloud-samples/fortune-teller"
"spring-cloud-samples/brewery" -> "william-tran/microservice-security"
"spring-cloud-samples/brewery" -> "spring-cloud-samples/springbox-cloud"
"spring-cloud-samples/brewery" -> "Codearte/accurest" ["e"=1]
"spring-cloud-samples/brewery" -> "kbastani/spring-boot-graph-processing-example" ["e"=1]
"spring-cloud-samples/brewery" -> "bijukunjummen/sample-spring-hystrix"
"spring-cloud-samples/brewery" -> "spring-cloud-samples/eureka"
"spring-cloud-samples/brewery" -> "idugalic/micro-company"
"spring-cloud-samples/brewery" -> "sdeleuze/spring-reactive-playground" ["e"=1]
"NIT-Software/Modern-Ecommerce" -> "JohnnyLe/Modern-Ecommerce"
"NIT-Software/Modern-Ecommerce" -> "vatri/spring-rest-ecommerce"
"vatri/spring-rest-ecommerce" -> "JohnnyLe/Modern-Ecommerce"
"vatri/spring-rest-ecommerce" -> "antkaynak/Keyist-Ecommerce"
"vatri/spring-rest-ecommerce" -> "MoonSulong/Ecommerce"
"vatri/spring-rest-ecommerce" -> "NIT-Software/Modern-Ecommerce"
"vatri/spring-rest-ecommerce" -> "ikismail/ShoppingCart"
"vatri/spring-rest-ecommerce" -> "merikbest/ecommerce-spring-reactjs"
"vatri/spring-rest-ecommerce" -> "idugalic/micro-ecommerce"
"vatri/spring-rest-ecommerce" -> "zhulinn/SpringBoot-Angular7-Online-Shopping-Store"
"vatri/spring-rest-ecommerce" -> "RainbowForest/e-commerce-microservices"
"vatri/spring-rest-ecommerce" -> "devRobots/spring-boot-ecommerce"
"vatri/spring-rest-ecommerce" -> "devdcores/BookStoreApp-Distributed-Application"
"vatri/spring-rest-ecommerce" -> "ujjavaldesai07/spring-boot-react-ecommerce-app"
"vatri/spring-rest-ecommerce" -> "eherozhao/E-Commerce-Spring-Boot"
"vatri/spring-rest-ecommerce" -> "osopromadze/Spring-Boot-Blog-REST-API"
"rwinch/spring-security-0-to-4.0" -> "rwinch/gs-spring-security-3.2"
"JSteunou/webstomp-client" -> "jmesnil/stomp-websocket"
"JSteunou/webstomp-client" -> "stomp-js/stomp-websocket"
"JSteunou/webstomp-client" -> "stomp-js/stompjs"
"JSteunou/webstomp-client" -> "fpozzobon/webstomp-obs"
"JSteunou/webstomp-client" -> "rstoyanchev/spring-websocket-portfolio"
"ard333/spring-boot-webflux-jjwt" -> "raphaelDL/spring-webflux-security-jwt"
"ard333/spring-boot-webflux-jjwt" -> "duyleduc/spring-boot-webflux-security"
"koushikkothagal/betterreads-webapp" -> "koushikkothagal/inbox-app"
"spring-guides/gs-consuming-rest" -> "spring-guides/gs-consuming-rest-angularjs"
"spring-guides/gs-consuming-rest" -> "spring-guides/gs-validating-form-input"
"spring-guides/gs-consuming-rest" -> "spring-guides/gs-accessing-mongodb-data-rest"
"spring-guides/gs-consuming-rest" -> "spring-guides/gs-accessing-data-jpa"
"callicoder/spring-boot-file-upload-download-rest-api-example" -> "callicoder/spring-boot-quartz-scheduler-email-scheduling"
"callicoder/spring-boot-file-upload-download-rest-api-example" -> "callicoder/spring-boot-mysql-rest-api-tutorial"
"callicoder/spring-boot-file-upload-download-rest-api-example" -> "callicoder/spring-boot-react-oauth2-social-login-demo"
"callicoder/spring-boot-file-upload-download-rest-api-example" -> "spring-guides/gs-uploading-files"
"callicoder/spring-boot-file-upload-download-rest-api-example" -> "callicoder/java-read-write-excel-file-using-apache-poi"
"callicoder/spring-boot-file-upload-download-rest-api-example" -> "callicoder/spring-security-react-ant-design-polls-app"
"callicoder/spring-boot-file-upload-download-rest-api-example" -> "callicoder/spring-boot-postgresql-jpa-hibernate-rest-api-demo"
"callicoder/spring-boot-file-upload-download-rest-api-example" -> "callicoder/spring-boot-mongodb-angular-todo-app"
"callicoder/spring-boot-file-upload-download-rest-api-example" -> "callicoder/spring-boot-configuration-properties-demo"
"callicoder/spring-boot-file-upload-download-rest-api-example" -> "callicoder/kotlin-spring-boot-jpa-rest-api-demo"
"callicoder/spring-boot-file-upload-download-rest-api-example" -> "callicoder/spring-boot-websocket-chat-demo"
"callicoder/spring-boot-file-upload-download-rest-api-example" -> "callicoder/spring-webclient-webtestclient-demo"
"callicoder/spring-boot-file-upload-download-rest-api-example" -> "callicoder/jpa-hibernate-tutorials"
"techdev-solutions/trackr-frontend" -> "techdev-solutions/trackr-backend"
"spring-petclinic/spring-petclinic-kotlin" -> "spring-petclinic/spring-petclinic-reactjs"
"spring-petclinic/spring-petclinic-kotlin" -> "spring-guides/tut-spring-boot-kotlin" ["e"=1]
"spring-petclinic/spring-petclinic-kotlin" -> "sdeleuze/spring-boot-kotlin-demo" ["e"=1]
"spring-petclinic/spring-petclinic-kotlin" -> "spring-petclinic/spring-petclinic-angular"
"spring-petclinic/spring-petclinic-kotlin" -> "spring-petclinic/spring-petclinic-rest"
"callicoder/spring-boot-mysql-rest-api-tutorial" -> "givanthak/spring-boot-rest-api-tutorial"
"callicoder/spring-boot-mysql-rest-api-tutorial" -> "osopromadze/Spring-Boot-Blog-REST-API"
"callicoder/spring-boot-mysql-rest-api-tutorial" -> "callicoder/jpa-hibernate-tutorials"
"callicoder/spring-boot-mysql-rest-api-tutorial" -> "callicoder/spring-boot-file-upload-download-rest-api-example"
"callicoder/spring-boot-mysql-rest-api-tutorial" -> "callicoder/spring-boot-postgresql-jpa-hibernate-rest-api-demo"
"callicoder/spring-boot-mysql-rest-api-tutorial" -> "khoubyari/spring-boot-rest-example"
"callicoder/spring-boot-mysql-rest-api-tutorial" -> "callicoder/spring-boot-mongodb-angular-todo-app"
"callicoder/spring-boot-mysql-rest-api-tutorial" -> "zianwar/springboot-crud-demo"
"callicoder/spring-boot-mysql-rest-api-tutorial" -> "bezkoder/spring-boot-data-jpa-mysql"
"callicoder/spring-boot-mysql-rest-api-tutorial" -> "callicoder/kotlin-spring-boot-jpa-rest-api-demo"
"callicoder/spring-boot-mysql-rest-api-tutorial" -> "vatri/spring-rest-ecommerce"
"callicoder/spring-boot-mysql-rest-api-tutorial" -> "hantsy/spring-webmvc-jwt-sample"
"callicoder/spring-boot-mysql-rest-api-tutorial" -> "callicoder/spring-webclient-webtestclient-demo"
"callicoder/spring-boot-mysql-rest-api-tutorial" -> "Urunov/SpringBoot-Projects-FullStack"
"callicoder/spring-boot-mysql-rest-api-tutorial" -> "RameshMF/registration-login-spring-boot-security-thymeleaf-hibernate"
"sqshq/ELK-docker" -> "sqshq/PiggyMetrics"
"sqshq/ELK-docker" -> "kbastani/spring-cloud-event-sourcing-example"
"gustavoponce7/SpringSecurityLoginTutorial" -> "gustavoponce7/SpringSecurityUserDetailsService"
"gustavoponce7/SpringSecurityLoginTutorial" -> "gustavoponce7/SpringBootRESTfulTutorial"
"SilverNine/spring-boot-jwt-tutorial" -> "deepIify/oauth-login-be"
"SilverNine/spring-boot-jwt-tutorial" -> "codingspecialist/-Springboot-Security-OAuth2.0-V3"
"mraible/jhipster4-demo" -> "mraible/21-points"
"mraible/jhipster4-demo" -> "mraible/jhipster5-demo"
"brahalla/Cerberus" -> "virgo47/restful-spring-security"
"brahalla/Cerberus" -> "technical-rex/spring-security-jwt"
"brahalla/Cerberus" -> "nielsutrecht/jwt-angular-spring"
"brahalla/Cerberus" -> "szerhusenBC/jwt-spring-security-demo"
"brahalla/Cerberus" -> "Robbert1/boot-stateless-auth"
"brahalla/Cerberus" -> "dynamind/spring-boot-security-oauth2-minimal"
"brahalla/Cerberus" -> "svlada/springboot-security-jwt"
"brahalla/Cerberus" -> "absolutegalaber/jwt-oauth2-example"
"brahalla/Cerberus" -> "royclarkson/spring-rest-service-oauth"
"brahalla/Cerberus" -> "bfwg/springboot-jwt-starter"
"brahalla/Cerberus" -> "FutureProcessing/spring-boot-security-example"
"brahalla/Cerberus" -> "bfwg/angular-spring-starter"
"brahalla/Cerberus" -> "dhavaln/spring-rest-boilerplate"
"brahalla/Cerberus" -> "manish-in-java/spring-security-rest"
"Akourtiim/oauth2-spring-boot-2.0.2" -> "adamzareba/company-structure-spring-security-oauth2-authorities"
"spring-guides/gs-accessing-data-mongodb" -> "spring-guides/gs-messaging-jms"
"PacktPublishing/Microservices-with-Spring-Boot-and-Spring-Cloud-2E" -> "PacktPublishing/Hands-On-Microservices-with-Spring-Boot-and-Spring-Cloud"
"PacktPublishing/Microservices-with-Spring-Boot-and-Spring-Cloud-2E" -> "ihuaylupo/manning-smia" ["e"=1]
"Robbert1/boot-stateless-auth" -> "Robbert1/boot-stateless-csrf"
"Robbert1/boot-stateless-auth" -> "virgo47/restful-spring-security"
"Robbert1/boot-stateless-auth" -> "Robbert1/boot-stateless-social"
"Robbert1/boot-stateless-auth" -> "nielsutrecht/jwt-angular-spring"
"Robbert1/boot-stateless-auth" -> "technical-rex/spring-security-jwt"
"Robbert1/boot-stateless-auth" -> "brahalla/Cerberus"
"Robbert1/boot-stateless-auth" -> "FutureProcessing/spring-boot-security-example"
"Robbert1/boot-stateless-auth" -> "dsyer/spring-security-angular"
"Robbert1/boot-stateless-auth" -> "techdev-solutions/trackr-backend"
"mkyong/spring-boot" -> "mkyong/core-java"
"mkyong/spring-boot" -> "hellokoding/hellokoding-courses"
"mkyong/spring-boot" -> "spring-framework-guru/sfg-blog-posts"
"mkyong/spring-boot" -> "RameshMF/spring-boot-tutorial"
"mkyong/spring-boot" -> "mkyong/maven-examples"
"mkyong/spring-boot" -> "piomin/sample-spring-microservices-new"
"mkyong/spring-boot" -> "thombergs/code-examples" ["e"=1]
"mkyong/spring-boot" -> "piomin/sample-spring-microservices-kubernetes"
"mkyong/spring-boot" -> "rieckpil/blog-tutorials"
"mkyong/spring-boot" -> "dailycodebuffer/Spring-MVC-Tutorials"
"mkyong/spring-boot" -> "in28minutes/spring-boot-examples" ["e"=1]
"mkyong/spring-boot" -> "javadevjournal/javadevjournal"
"mkyong/spring-boot" -> "mkyong/java-logging"
"mkyong/spring-boot" -> "spring-guides/gs-consuming-rest"
"mkyong/spring-boot" -> "sivaprasadreddy/spring-boot-microservices-series"
"spring-guides/gs-accessing-data-rest" -> "spring-guides/gs-actuator-service"
"geowarin/boot-react" -> "winterbe/spring-react-example"
"geowarin/boot-react" -> "pugnascotia/spring-react-boilerplate"
"geowarin/boot-react" -> "spring-guides/tut-react-and-spring-data-rest"
"geowarin/boot-react" -> "dlizarra/spring-boot-react-webpack-starter"
"geowarin/boot-react" -> "sdeleuze/spring-react-isomorphic"
"geowarin/boot-react" -> "olivergierke/spring-restbucks" ["e"=1]
"geowarin/boot-react" -> "spring-guides/tut-spring-security-and-angular-js"
"geowarin/boot-react" -> "srs/gradle-node-plugin" ["e"=1]
"geowarin/boot-react" -> "ipselon/sdr-bootstrap-prepack"
"geowarin/boot-react" -> "brahalla/Cerberus"
"geowarin/boot-react" -> "szerhusenBC/jwt-spring-security-demo"
"geowarin/boot-react" -> "dynamind/spring-boot-security-oauth2-minimal"
"geowarin/boot-react" -> "winterbe/react-samples"
"geowarin/boot-react" -> "noveogroup-amorgunov/spring-mvc-react"
"zpng/spring-cloud-7simple" -> "zpng/spring-cloud-microservice-examples"
"jhipster/jhipster-online" -> "jhipster/jhipster-control-center"
"jhipster/jhipster-online" -> "jhipster/jhipster-ide"
"jhipster/jhipster-online" -> "jhipster/jhipster-guides"
"jhipster/jhipster-online" -> "jhipster/jdl-samples"
"jhipster/jhipster-online" -> "jhipster/jhipster-bot"
"jhipster/jhipster-online" -> "jhipster/jhipster"
"jhipster/jhipster-online" -> "jhipster/ng-jhipster"
"jhipster/jhipster-online" -> "jhipster/eslint-config-jhipster"
"jhipster/jhipster-online" -> "oktadeveloper/generator-jhipster-ionic"
"eventuate-tram/eventuate-tram-examples-java-spring-todo-list" -> "eventuate-tram/eventuate-tram-sagas-examples-customers-and-orders"
"eventuate-tram/eventuate-tram-examples-java-spring-todo-list" -> "eventuate-tram/eventuate-tram-examples-customers-and-orders"
"spring-framework-guru/sfg-blog-posts" -> "ehsaniara/spring-boot-multi-data-source"
"spring-framework-guru/sfg-blog-posts" -> "springframeworkguru/spring5-reactive-mongo-recipe-app"
"spring-framework-guru/sfg-blog-posts" -> "jahe/spring-boot-multiple-datasources"
"mraible/21-points" -> "mraible/jhipster4-demo"
"mraible/21-points" -> "bastienmichaux/generator-jhipster-db-helper"
"mraible/21-points" -> "PacktPublishing/Full-Stack-Development-with-JHipster"
"mraible/21-points" -> "jhipster/jdl-samples"
"mraible/21-points" -> "mraible/microservices-for-the-masses"
"mraible/21-points" -> "robmelfi/21-points-react"
"mraible/21-points" -> "mraible/jhipster5-demo"
"mraible/21-points" -> "arnaugarcia/realstatecamp"
"springframeworkguru/sfg-pet-clinic" -> "springframeworkguru/spring5-recipe-app"
"springframeworkguru/sfg-pet-clinic" -> "springframeworkguru/spring5webapp"
"springframeworkguru/sfg-pet-clinic" -> "springframeworkguru/spring5-reactive-mongo-recipe-app"
"springframeworkguru/sfg-pet-clinic" -> "springframeworkguru/sfg-di"
"springframeworkguru/sfg-pet-clinic" -> "springframeworkguru/spring5-di-demo"
"springframeworkguru/sfg-pet-clinic" -> "springframeworkguru/spring5-mvc-rest"
"EdisonXu/sbs-axon" -> "sfav/axon-springboot-cloud"
"rid17pawar/HospitalManagement" -> "hendisantika/Online-banking-angular-springboot-mysql"
"spring-projects/spring-hateoas-examples" -> "spring-guides/tut-rest"
"spring-projects/spring-hateoas-examples" -> "spring-projects/spring-hateoas" ["e"=1]
"spring-projects/spring-hateoas-examples" -> "spring-petclinic/spring-petclinic-rest"
"spring-projects/spring-hateoas-examples" -> "odrotbohm/spring-restbucks" ["e"=1]
"spring-projects/spring-hateoas-examples" -> "spring-projects/spring-session-data-mongodb-examples"
"spring-projects/spring-hateoas-examples" -> "spring-petclinic/spring-petclinic-kotlin"
"stomp-js/stomp-websocket" -> "stomp-js/ng2-stompjs"
"TechPrimers/spring-boot-kafka-producer-example" -> "TechPrimers/spring-boot-kafka-consumer-example"
"jhipster/jhipster-kotlin" -> "oktadeveloper/generator-jhipster-ionic"
"jhipster/jhipster-kotlin" -> "jhipster/jhipster-control-center"
"jhipster/jhipster-kotlin" -> "jhipster/jhipster-lite"
"jhipster/jhipster-kotlin" -> "Blackdread/sql-to-jdl"
"jhipster/jhipster-kotlin" -> "jhipster/jhipster"
"jhipster/jhipster-kotlin" -> "jhipster/generator-jhipster-nodejs"
"jhipster/jhipster-kotlin" -> "jhipster/generator-jhipster-micronaut"
"jhipster/jhipster-kotlin" -> "jhipster/jhipster-vuejs"
"jhipster/jhipster-kotlin" -> "jhipster/jhipster-guides"
"jhipster/jhipster-kotlin" -> "jhipster/ng-jhipster"
"jhipster/jhipster-kotlin" -> "jhipster/jhipster-online"
"jhipster/jhipster-kotlin" -> "jhipster/generator-jhipster-module"
"jhipster/jhipster-kotlin" -> "jhipster/jhipster-dotnetcore"
"jhipster/jhipster-kotlin" -> "jhipster/jhipster-quarkus"
"jhipster/jhipster-kotlin" -> "jhipster/react-jhipster"
"spring-guides/gs-gradle" -> "spring-guides/gs-maven"
"piomin/sample-spring-oauth2-microservices" -> "kakawait/uaa-behind-zuul-sample"
"ykameshrao/spring-hibernate-springdata-springmvc-maven-project-framework" -> "ZhibingXie/SpringMVC-Spring-Hibernate" ["e"=1]
"ykameshrao/spring-hibernate-springdata-springmvc-maven-project-framework" -> "ttrelle/spring-data-examples"
"ykameshrao/spring-hibernate-springdata-springmvc-maven-project-framework" -> "Fruzenshtein/security-spr" ["e"=1]
"FrontierPsychiatrist/spring-oauth-example" -> "techdev-solutions/trackr-backend"
"FrontierPsychiatrist/spring-oauth-example" -> "techdev-solutions/jaxenter-showcase"
"vinsguru/vinsguru-blog-code-samples" -> "piomin/sample-spring-kafka-microservices"
"vinsguru/vinsguru-blog-code-samples" -> "vinsguru/webflux-patterns"
"eventuate-examples/eventuate-examples-java-customers-and-orders" -> "eventuate-examples/eventuate-examples-java-spring-todo-list"
"eventuate-examples/eventuate-examples-java-customers-and-orders" -> "eventuate-examples/eventuate-examples-restaurant-management"
"eventuate-examples/eventuate-examples-java-customers-and-orders" -> "eventuate-tram/eventuate-tram-sagas-examples-customers-and-orders"
"eventuate-examples/eventuate-examples-java-customers-and-orders" -> "eventuate-tram/eventuate-tram-examples-customers-and-orders"
"eventuate-examples/eventuate-examples-java-customers-and-orders" -> "eventuate-local/eventuate-local"
"eventuate-examples/eventuate-examples-java-customers-and-orders" -> "eventuate-examples/es-kanban-board"
"eventuate-examples/eventuate-examples-java-customers-and-orders" -> "benwilcock/microservice-sampler"
"jhipster/jhipster-ide" -> "jhipster/jhipster-control-center"
"jhipster/jhipster-ide" -> "jhipster/jdl-studio"
"eventuate-examples/es-kanban-board" -> "eventuate-examples/eventuate-examples-java-spring-todo-list"
"eventuate-examples/es-kanban-board" -> "eventuate-examples/eventuate-examples-restaurant-management"
"eventuate-examples/es-kanban-board" -> "benwilcock/microservice-sampler"
"eventuate-examples/es-kanban-board" -> "eventuate-examples/eventuate-examples-java-customers-and-orders"
"eventuate-examples/es-kanban-board" -> "cer/event-sourcing-using-scala-typeclasses"
"syqu22/spring-boot-shop-sample" -> "devRobots/spring-boot-ecommerce"
"syqu22/spring-boot-shop-sample" -> "GNico/spring-eshop"
"syqu22/spring-boot-shop-sample" -> "merikbest/OnlineShop"
"isopropylcyanide/Jwt-Spring-Security-JPA" -> "murraco/spring-boot-jwt"
"isopropylcyanide/Jwt-Spring-Security-JPA" -> "bfwg/springboot-jwt-starter"
"isopropylcyanide/Jwt-Spring-Security-JPA" -> "hantsy/spring-webmvc-jwt-sample"
"isopropylcyanide/Jwt-Spring-Security-JPA" -> "bezkoder/spring-boot-spring-security-jwt-authentication"
"isopropylcyanide/Jwt-Spring-Security-JPA" -> "gustavoponce7/spring-login"
"isopropylcyanide/Jwt-Spring-Security-JPA" -> "nydiarra/springboot-jwt"
"isopropylcyanide/Jwt-Spring-Security-JPA" -> "bezkoder/spring-boot-refresh-token-jwt"
"isopropylcyanide/Jwt-Spring-Security-JPA" -> "Nasruddin/spring-boot-based-microservices"
"isopropylcyanide/Jwt-Spring-Security-JPA" -> "mohamed-taman/Springy-Store-Microservices"
"isopropylcyanide/Jwt-Spring-Security-JPA" -> "mechero/spring-boot-testing-strategies"
"isopropylcyanide/Jwt-Spring-Security-JPA" -> "spring-guides/gs-securing-web"
"isopropylcyanide/Jwt-Spring-Security-JPA" -> "vatri/spring-rest-ecommerce"
"isopropylcyanide/Jwt-Spring-Security-JPA" -> "Yoh0xFF/java-spring-security-example"
"isopropylcyanide/Jwt-Spring-Security-JPA" -> "osopromadze/Spring-Boot-Blog-REST-API"
"xpinjection/design-patterns" -> "xpinjection/java8-misuses"
"xpinjection/design-patterns" -> "xpinjection/hibernate-basics"
"xpinjection/design-patterns" -> "xpinjection/java8-extensions"
"xpinjection/design-patterns" -> "xpinjection/hibernate-performance"
"SaiUpadhyayula/spring-reddit-clone" -> "SaiUpadhyayula/angular-reddit-clone"
"SaiUpadhyayula/spring-reddit-clone" -> "SaiUpadhyayula/springboot-microservices-project"
"SaiUpadhyayula/spring-reddit-clone" -> "SaiUpadhyayula/spring-ng-blog"
"SaiUpadhyayula/spring-reddit-clone" -> "SaiUpadhyayula/SpringShoppingStore"
"SaiUpadhyayula/spring-reddit-clone" -> "amrkhaledccd/my-moments"
"SaiUpadhyayula/spring-reddit-clone" -> "SaiUpadhyayula/SpringAngularEcommerce"
"SaiUpadhyayula/spring-reddit-clone" -> "osopromadze/Spring-Boot-Blog-REST-API"
"SaiUpadhyayula/spring-reddit-clone" -> "SaiUpadhyayula/spring-boot-microservices-new"
"SaiUpadhyayula/spring-reddit-clone" -> "ujjavaldesai07/spring-boot-react-ecommerce-app"
"SaiUpadhyayula/spring-reddit-clone" -> "shabbirdwd53/Springboot-Microservice"
"TechPrimers/jwt-security-example" -> "TechPrimers/spring-security-oauth-example"
"TechPrimers/jwt-security-example" -> "TechPrimers/spring-security-db-example"
"koushikkothagal/ipl-dashboard" -> "koushikkothagal/betterreads-webapp"
"arocketman/Spring-oauth2-jpa-example" -> "TechPrimers/spring-security-oauth-mysql-example"
"arocketman/Spring-oauth2-jpa-example" -> "TechPrimers/spring-security-oauth-example"
"callicoder/spring-boot-postgresql-jpa-hibernate-rest-api-demo" -> "callicoder/spring-boot-mysql-rest-api-tutorial"
"callicoder/spring-boot-postgresql-jpa-hibernate-rest-api-demo" -> "callicoder/spring-boot-file-upload-download-rest-api-example"
"callicoder/spring-boot-postgresql-jpa-hibernate-rest-api-demo" -> "callicoder/spring-boot-mongodb-angular-todo-app"
"callicoder/spring-boot-postgresql-jpa-hibernate-rest-api-demo" -> "springframeworkguru/spring-boot-postgress-example"
"callicoder/spring-boot-postgresql-jpa-hibernate-rest-api-demo" -> "callicoder/spring-boot-heroku-deployment-example"
"callicoder/spring-boot-postgresql-jpa-hibernate-rest-api-demo" -> "callicoder/kotlin-spring-boot-jpa-rest-api-demo"
"Nasruddin/spring-boot-based-microservices" -> "oktadev/spring-boot-microservices-example"
"RameshMF/registration-login-springboot-security-thymeleaf" -> "RameshMF/registration-login-spring-boot-security-thymeleaf-hibernate"
"RameshMF/registration-login-springboot-security-thymeleaf" -> "RameshMF/springboot-thymeleaf-crud-tutorial"
"RameshMF/registration-login-springboot-security-thymeleaf" -> "RameshMF/todo-management-spring-boot"
"spring-guides/gs-securing-web" -> "spring-guides/gs-rest-service-cors"
"spring-guides/gs-securing-web" -> "spring-guides/top-spring-security-architecture"
"spring-guides/gs-securing-web" -> "spring-guides/gs-testing-web"
"spring-guides/gs-securing-web" -> "spring-guides/gs-validating-form-input"
"spring-guides/gs-securing-web" -> "spring-guides/gs-accessing-data-jpa"
"spring-guides/gs-securing-web" -> "spring-guides/gs-serving-web-content"
"spring-guides/gs-securing-web" -> "spring-guides/gs-routing-and-filtering"
"spring-guides/gs-securing-web" -> "spring-guides/gs-rest-hateoas"
"spring-guides/gs-securing-web" -> "spring-guides/gs-accessing-data-mysql"
"spring-guides/gs-securing-web" -> "spring-guides/gs-consuming-rest"
"spring-guides/gs-securing-web" -> "spring-guides/gs-actuator-service"
"spring-guides/gs-securing-web" -> "spring-guides/gs-uploading-files"
"spring-guides/gs-securing-web" -> "spring-guides/gs-testing-restdocs"
"spring-guides/gs-securing-web" -> "spring-guides/tut-spring-boot-oauth2"
"rieckpil/testing-spring-boot-applications-masterclass" -> "rieckpil/blog-tutorials"
"rieckpil/testing-spring-boot-applications-masterclass" -> "wimdeblauwe/error-handling-spring-boot-starter" ["e"=1]
"rieckpil/testing-spring-boot-applications-masterclass" -> "stratospheric-dev/stratospheric"
"TechPrimers/spring-security-db-example" -> "TechPrimers/spring-security-oauth-example"
"TechPrimers/spring-security-db-example" -> "TechPrimers/jwt-security-example"
"callicoder/jpa-hibernate-tutorials" -> "callicoder/spring-boot-quartz-scheduler-email-scheduling"
"callicoder/jpa-hibernate-tutorials" -> "callicoder/spring-boot-mysql-rest-api-tutorial"
"callicoder/jpa-hibernate-tutorials" -> "springframeworkguru/spring-rest-client-examples"
"callicoder/jpa-hibernate-tutorials" -> "callicoder/spring-webflux-reactive-rest-api-demo"
"devRobots/spring-boot-ecommerce" -> "eherozhao/E-Commerce-Spring-Boot"
"devRobots/spring-boot-ecommerce" -> "syqu22/spring-boot-shop-sample"
"foysal-mahmud/E-BookShop----Spring-boot" -> "merikbest/OnlineShop"
"vmudigal/microservices-sample" -> "apssouza22/java-microservice"
"vmudigal/microservices-sample" -> "oktadeveloper/spring-boot-microservices-example"
"vmudigal/microservices-sample" -> "RainbowForest/e-commerce-microservices"
"vmudigal/microservices-sample" -> "idugalic/micro-ecommerce"
"vmudigal/microservices-sample" -> "piomin/sample-spring-microservices-new"
"vmudigal/microservices-sample" -> "mohamed-taman/Springy-Store-Microservices"
"stomp-js/ng2-stompjs" -> "devsullo/ng2-STOMP-Over-WebSocket"
"stomp-js/ng2-stompjs" -> "stomp-js/rx-stomp"
"stomp-js/ng2-stompjs" -> "stomp-js/stomp-websocket"
"stomp-js/ng2-stompjs" -> "stomp-js/stompjs"
"stomp-js/ng2-stompjs" -> "stomp-js/ng2-stompjs-angular7"
"oktadev/java-microservices-examples" -> "oktadev/spring-boot-microservices-example"
"oktadev/java-microservices-examples" -> "RainbowForest/e-commerce-microservices"
"oktadev/java-microservices-examples" -> "oktadev/jhipster-microservices-example"
"oktadev/java-microservices-examples" -> "mohamed-taman/Springy-Store-Microservices"
"oktadev/java-microservices-examples" -> "abhisheksr01/spring-boot-microservice-best-practices"
"oktadev/java-microservices-examples" -> "Nasruddin/spring-boot-based-microservices"
"oktadev/java-microservices-examples" -> "piomin/sample-spring-microservices-new"
"oktadev/java-microservices-examples" -> "javatodev/internet-banking-concept-microservices"
"oktadev/java-microservices-examples" -> "mostafacs/ecommerce-microservices-spring-reactive-webflux"
"oktadev/java-microservices-examples" -> "sivaprasadreddy/spring-boot-microservices-series"
"oktadev/java-microservices-examples" -> "piomin/sample-spring-microservices"
"TechPrimers/learning-path-spring-boot-microservices" -> "TechPrimers/stock-price-viewer-microservices-part1"
"TechPrimers/learning-path-spring-boot-microservices" -> "TechPrimers/whats-your-architecture"
"TechPrimers/learning-path-spring-boot-microservices" -> "mohamed-taman/Springy-Store-Microservices"
"TechPrimers/learning-path-spring-boot-microservices" -> "TechPrimers/spring-boot-kafka-producer-example"
"TechPrimers/learning-path-spring-boot-microservices" -> "TechPrimers/learning-path-system-design"
"bezkoder/vue-vuex-jwt-auth" -> "bezkoder/node-js-jwt-auth" ["e"=1]
"bezkoder/vue-vuex-jwt-auth" -> "bezkoder/vue-upload-files"
"bezkoder/vue-vuex-jwt-auth" -> "bezkoder/vue-typescript-crud"
"bezkoder/vue-vuex-jwt-auth" -> "christiannwamba/vue-auth-vuex" ["e"=1]
"bezkoder/vue-vuex-jwt-auth" -> "bezkoder/vue-pagination-axios"
"bezkoder/vue-vuex-jwt-auth" -> "bezkoder/vue-axios-refresh-token"
"bezkoder/vue-vuex-jwt-auth" -> "bezkoder/vue-js-client-crud"
"bezkoder/vue-vuex-jwt-auth" -> "bezkoder/spring-boot-spring-security-jwt-authentication"
"bezkoder/vue-vuex-jwt-auth" -> "bezkoder/vuetify-file-upload"
"pauldragoslav/Spring-boot-Banking" -> "PaskoZhelev/banking-app-spring"
"pauldragoslav/Spring-boot-Banking" -> "devRobots/spring-boot-ecommerce"
"hipster-labs/generator-jhipster-react" -> "jhipster/jhipster-uml"
"hipster-labs/generator-jhipster-react" -> "jhipster/jhipster-app"
"hipster-labs/generator-jhipster-react" -> "jhipster/jhipster-experimental-microservices"
"hipster-labs/generator-jhipster-react" -> "PierreBesson/generator-jhipster-banner"
"springframeworkguru/tdd-by-example" -> "springframeworkguru/testing-java-junit5"
"springframeworkguru/tdd-by-example" -> "springframeworkguru/testing-junit5-mockito"
"eugenp/REST-With-Spring" -> "eugenp/learn-spring-security"
"eugenp/REST-With-Spring" -> "eugenp/learn-spring"
"eugenp/REST-With-Spring" -> "eugenp/java-stackexchange"
"eugenp/REST-With-Spring" -> "eugenp/selenium"
"SaiUpadhyayula/angular-reddit-clone" -> "SaiUpadhyayula/spring-reddit-clone"
"ruddell/ignite-jhipster" -> "oktadeveloper/generator-jhipster-ionic"
"ruddell/ignite-jhipster" -> "ruddell/generator-jhipster-ionic"
"dsyer/spring-boot-angular" -> "spring-guides/tut-spring-security-and-angular-js"
"dsyer/spring-boot-angular" -> "spring-petclinic/spring-petclinic-angular"
"dsyer/spring-boot-angular" -> "oktadeveloper/spring-boot-angular-example"
"dsyer/spring-boot-angular" -> "oktadeveloper/okta-spring-boot-2-angular-9-example"
"technical-rex/spring-security-jwt" -> "brahalla/Cerberus"
"zianwar/springboot-crud-demo" -> "juhahinkula/StudentListFinal"
"jhipster/jhipster-lite" -> "jhipster/jhipster-control-center"
"jhipster/jhipster-lite" -> "Blackdread/sql-to-jdl"
"jhipster/jhipster-lite" -> "jhipster/jhipster-kotlin"
"jhipster/jhipster-lite" -> "fdelbrayelle/generator-jhipster-kafka"
"jhipster/jhipster-lite" -> "jhipster/jdl-samples"
"jhipster/jhipster-lite" -> "jhipster/generator-jhipster-svelte"
"jhipster/jhipster-lite" -> "tikui/tikui"
"jhipster/jhipster-lite" -> "jhipster/generator-jhipster-micronaut"
"jhipster/jhipster-lite" -> "microsoft/NubesGen"
"jhipster/jhipster-lite" -> "jhipster/jhipster-bom"
"jhipster/jhipster-lite" -> "jhipster/jhipster-vuejs"
"jhipster/jhipster-lite" -> "jhipster/generator-jhipster-native"
"SaiUpadhyayula/SpringAngularEcommerce" -> "SaiUpadhyayula/SpringAngularEcommerce-frontend"
"SaiUpadhyayula/SpringAngularEcommerce" -> "SaiUpadhyayula/SpringShoppingStore"
"RameshMF/angular8-springboot-basic-auth-login-logout" -> "RameshMF/Angular9-SpringBoot-CRUD-Tutorial"
"RameshMF/angular8-springboot-basic-auth-login-logout" -> "RameshMF/springboot-angular-mongodb-crud-tutorial"
"koushikkothagal/messenger" -> "koushikkothagal/advanced-jaxrs"
"koushikkothagal/messenger" -> "koushikkothagal/javabrains-site-old"
"koushikkothagal/messenger" -> "koushikkothagal/message-app"
"khandelwal-arpit/springboot-starterkit-mysql" -> "khandelwal-arpit/springboot-starterkit"
"eugenp/learn-spring-security" -> "eugenp/learn-spring"
"eugenp/learn-spring-security" -> "eugenp/REST-With-Spring"
"eugenp/learn-spring-security" -> "eugenp/selenium"
"springboot-angular2-tutorial/angular2-app" -> "springboot-angular2-tutorial/boot-app"
"zouabimourad/angular2-spring" -> "ehirsch/spring-angular2"
"zouabimourad/angular2-spring" -> "rakshitshah94/Angular2-SpringBoot-Example"
"absolutegalaber/jwt-oauth2-example" -> "xetys/spring-cloud-oauth2-example"
"kbastani/event-stream-processing-microservices" -> "kbastani/spring-cloud-event-sourcing-example"
"kbastani/event-stream-processing-microservices" -> "kbastani/event-sourcing-microservices-example"
"kbastani/event-stream-processing-microservices" -> "kbastani/order-delivery-microservice-example"
"kbastani/event-stream-processing-microservices" -> "mploed/event-driven-spring-boot" ["e"=1]
"kbastani/event-stream-processing-microservices" -> "kbastani/spring-cloud-polyglot-persistence-example"
"kbastani/event-stream-processing-microservices" -> "benwilcock/microservice-sampler"
"kbastani/event-stream-processing-microservices" -> "idugalic/micro-company"
"kbastani/event-stream-processing-microservices" -> "kbastani/spring-boot-graph-processing-example" ["e"=1]
"Java-Techie-jt/spring-security-jwt-example" -> "Java-Techie-jt/spring-data-redis-cache"
"Java-Techie-jt/spring-security-jwt-example" -> "Java-Techie-jt/angular-jwt-client"
"Java-Techie-jt/spring-security-jwt-example" -> "Java-Techie-jt/springboot-angular8-crud-example"
"liferay/liferay-frontend-projects" -> "liferay/liferay-frontend-guidelines"
"Yoh0xFF/java-spring-security-example" -> "bezkoder/spring-boot-refresh-token-jwt"
"Yoh0xFF/java-spring-security-example" -> "bezkoder/spring-boot-spring-security-jwt-authentication"
"Yoh0xFF/java-spring-security-example" -> "isopropylcyanide/Jwt-Spring-Security-JPA"
"Yoh0xFF/java-spring-security-example" -> "spring-projects/spring-security-samples" ["e"=1]
"Yoh0xFF/java-spring-security-example" -> "javadevjournal/javadevjournal"
"Yoh0xFF/java-spring-security-example" -> "bfwg/springboot-jwt-starter"
"liferay/liferay-plugins" -> "liferay/liferay-portal"
"liferay/liferay-plugins" -> "liferay/liferay-docs"
"liferay/liferay-plugins" -> "liferay/liferay-ide"
"liferay/liferay-plugins" -> "liferay/liferay-blade-samples"
"liferay/liferay-plugins" -> "liferay/liferay-maven-support"
"liferay/liferay-plugins" -> "liferay/liferay-faces"
"liferay/liferay-plugins" -> "liferay/alloy-ui"
"liferay/liferay-plugins" -> "liferay/liferay-mobile-sdk"
"hantsy/springboot-jwt-sample" -> "keysh/jwt-security"
"hantsy/springboot-jwt-sample" -> "hantsy/spring-microservice-sample"
"hantsy/springboot-jwt-sample" -> "hantsy/angular-spring-reactive-sample"
"mechero/full-reactive-stack" -> "raphaelDL/spring-webflux-security-jwt"
"mechero/full-reactive-stack" -> "callicoder/spring-webflux-reactive-rest-api-demo"
"mechero/full-reactive-stack" -> "hantsy/angular-spring-reactive-sample"
"mechero/full-reactive-stack" -> "mostafacs/ecommerce-microservices-spring-reactive-webflux"
"shabbirdwd53/Spring-Data-JPA-Tutorial" -> "shabbirdwd53/Springboot-Tutorial"
"shabbirdwd53/Spring-Data-JPA-Tutorial" -> "shabbirdwd53/spring-security-tutorial"
"ThoreauZZ/spring-cloud-example" -> "zpng/spring-cloud-microservice-examples"
"ThoreauZZ/spring-cloud-example" -> "xetys/spring-cloud-oauth2-example"
"ThoreauZZ/spring-cloud-example" -> "yidongnan/spring-cloud-consul-example"
"SaiUpadhyayula/spring-boot-microservices-new" -> "SaiUpadhyayula/springboot-microservices-project"
"SaiUpadhyayula/spring-boot-microservices-new" -> "shabbirdwd53/Springboot-Microservice"
"SaiUpadhyayula/spring-boot-microservices-new" -> "SaiUpadhyayula/SpringShoppingStore"
"RameshMF/servlet-tutorial" -> "RameshMF/jsp-servlet-jdbc-mysql-crud-tutorial"
"ordina-jworks/microservices-dashboard" -> "ordina-jworks/microservices-dashboard-server"
"ordina-jworks/microservices-dashboard" -> "spring-cloud-samples/brewery"
"ordina-jworks/microservices-dashboard" -> "VanRoy/spring-cloud-dashboard"
"ordina-jworks/microservices-dashboard" -> "jkschneider/spring-metrics"
"ordina-jworks/microservices-dashboard" -> "making/spring-boot-db-samples"
"OmarElgabry/microservices-spring-boot" -> "oktadev/spring-boot-microservices-example"
"SaiUpadhyayula/springboot-microservices-project" -> "SaiUpadhyayula/spring-boot-microservices-new"
"SaiUpadhyayula/springboot-microservices-project" -> "javatodev/internet-banking-concept-microservices"
"dashsaurabh/event-sourcing-axon-spring-boot" -> "dashsaurabh/event-sourcing-cqrs-axon-spring-boot"
"IBM/deploy-ibm-cloud-private" -> "ibm-cloud-architecture/refarch-privatecloud"
"IBM/deploy-ibm-cloud-private" -> "IBM/charts"
"IBM/deploy-ibm-cloud-private" -> "ibm-cloud-architecture/refarch-cloudnative-kubernetes"
"IBM/deploy-ibm-cloud-private" -> "ibm-cloud-architecture/terraform-module-icp-deploy"
"IBM/deploy-ibm-cloud-private" -> "IBM/container-service-getting-started-wt"
"bastienmichaux/generator-jhipster-db-helper" -> "jhipster/jhipster-control-center"
"bastienmichaux/generator-jhipster-db-helper" -> "jhipster/jhipster-app"
"bastienmichaux/generator-jhipster-db-helper" -> "jhipster/jhipster-quarkus"
"hantsy/spring-microservice-sample" -> "hantsy/angular-spring-reactive-sample"
"hantsy/spring-microservice-sample" -> "hantsy/springboot-jwt-sample"
"hantsy/spring-microservice-sample" -> "mohamed-taman/Springy-Store-Microservices"
"hantsy/spring-microservice-sample" -> "sivaprasadreddy/spring-boot-microservices-series"
"hantsy/spring-microservice-sample" -> "piomin/sample-spring-microservices"
"hantsy/spring-microservice-sample" -> "oktadeveloper/java-microservices-examples"
"hantsy/spring-microservice-sample" -> "Nasruddin/spring-boot-based-microservices"
"hantsy/spring-microservice-sample" -> "idugalic/micro-ecommerce"
"microservices-practical/microservices-v10" -> "microservices-practical/microservices-v9"
"microservices-practical/microservices-v10" -> "microservices-practical/microservices-v8"
"microservices-practical/microservices-v10" -> "microservices-practical/microservices-v3"
"ewolff/microservice-istio" -> "ewolff/microservice-kubernetes"
"JohnnyLe/Modern-Ecommerce" -> "NIT-Software/Modern-Ecommerce"
"JohnnyLe/Modern-Ecommerce" -> "vatri/spring-rest-ecommerce"
"JohnnyLe/Modern-Ecommerce" -> "Lezeper/spring-boot-ecommerce-dailyshop"
"JohnnyLe/Modern-Ecommerce" -> "antkaynak/Keyist-Ecommerce"
"JohnnyLe/Modern-Ecommerce" -> "idugalic/micro-ecommerce"
"JohnnyLe/Modern-Ecommerce" -> "zhulinn/SpringBoot-Angular7-Online-Shopping-Store"
"eventuate-examples/eventuate-examples-java-spring-todo-list" -> "eventuate-examples/es-kanban-board"
"eventuate-examples/eventuate-examples-java-spring-todo-list" -> "eventuate-examples/eventuate-examples-restaurant-management"
"eventuate-examples/eventuate-examples-java-spring-todo-list" -> "eventuate-examples/eventuate-examples-java-customers-and-orders"
"eventuate-examples/eventuate-examples-java-spring-todo-list" -> "benwilcock/microservice-sampler"
"eventuate-examples/eventuate-examples-java-spring-todo-list" -> "eventuate-examples/eventuate-examples-java-aws-lambda-todo-list"
"springframeworkguru/testing-java-junit5" -> "springframeworkguru/testing-junit5-mockito"
"spring-guides/tut-rest" -> "spring-projects/spring-hateoas-examples"
"spring-guides/tut-rest" -> "spring-guides/gs-accessing-data-jpa"
"spring-guides/tut-rest" -> "spring-guides/gs-relational-data-access"
"spring-guides/tut-rest" -> "spring-guides/tut-react-and-spring-data-rest"
"spring-guides/tut-rest" -> "spring-guides/gs-accessing-data-mysql"
"spring-guides/gs-maven" -> "spring-guides/gs-gradle"
"emiloberg/Liferay-Instant-Deploy-Theme-Changes-Gulp-Script" -> "emiloberg/liferay-ddmtool"
"rstoyanchev/spring-websocket-test" -> "rstoyanchev/spring-websocket-portfolio"
"ipassynk/angular-springboot-jwt" -> "nydiarra/springboot-jwt"
"TechPrimers/spring-boot-kafka-consumer-example" -> "TechPrimers/spring-boot-kafka-producer-example"
"merikbest/OnlineShop" -> "eherozhao/E-Commerce-Spring-Boot"
"merikbest/OnlineShop" -> "foysal-mahmud/E-BookShop----Spring-boot"
"AxonIQ/reference-guide" -> "AxonFramework/extension-tracing"
"AxonIQ/reference-guide" -> "AxonIQ/axon-server-api"
"jhipster/jhipster-experimental-microservices" -> "jhipster/jhipster-openid-connect"
"yasuflatland-lf/liferay-dummy-factory" -> "yasuflatland-lf/damascus"
"spring-guides/gs-service-registration-and-discovery" -> "spring-guides/gs-client-side-load-balancing"
"spring-guides/gs-service-registration-and-discovery" -> "spring-guides/gs-routing-and-filtering"
"Blackdread/sql-to-jdl" -> "jhipster/jhipster-control-center"
"Blackdread/sql-to-jdl" -> "bastienmichaux/generator-jhipster-db-helper"
"Blackdread/sql-to-jdl" -> "jhipster/jhipster-lite"
"Blackdread/sql-to-jdl" -> "jhipster/jhipster-kotlin"
"Blackdread/sql-to-jdl" -> "oktadeveloper/generator-jhipster-ionic"
"Blackdread/sql-to-jdl" -> "jhipster/generator-jhipster-blueprint"
"Blackdread/sql-to-jdl" -> "jhipster/generator-jhipster-module"
"making/oauth2-sso-demo" -> "making/demo-oauth2-login"
"making/oauth2-sso-demo" -> "dynamind/spring-boot-security-oauth2-minimal"
"making/oauth2-sso-demo" -> "cpapidas/Spring-Boot-OAuth2-JWT-MySQL"
"making/oauth2-sso-demo" -> "spring-cloud-samples/sso"
"making/oauth2-sso-demo" -> "ameizi/oltu-oauth2-example" ["e"=1]
"making/oauth2-sso-demo" -> "rajithd/spring-boot-oauth2"
"making/oauth2-sso-demo" -> "wiselyman/uaa-zuul" ["e"=1]
"making/oauth2-sso-demo" -> "spring-guides/tut-spring-security-and-angular-js"
"making/oauth2-sso-demo" -> "malike/sso-auth"
"making/oauth2-sso-demo" -> "royclarkson/spring-rest-service-oauth"
"making/oauth2-sso-demo" -> "newnil/oauth2-family-barrel" ["e"=1]
"making/oauth2-sso-demo" -> "linking12/saluki" ["e"=1]
"making/oauth2-sso-demo" -> "wanghongfei/spring-security-oauth2-example" ["e"=1]
"making/oauth2-sso-demo" -> "juanzero000/spring-boot-oauth2-sso"
"making/oauth2-sso-demo" -> "andifalk/authorizationserver"
"emiloberg/liferay-ddmtool" -> "emiloberg/Liferay-Instant-Deploy-Theme-Changes-Gulp-Script"
"virgo47/restful-spring-security" -> "brahalla/Cerberus"
"virgo47/restful-spring-security" -> "dhavaln/spring-rest-boilerplate"
"virgo47/restful-spring-security" -> "philipsorst/angular-rest-springsecurity"
"virgo47/restful-spring-security" -> "Robbert1/boot-stateless-auth"
"virgo47/restful-spring-security" -> "FutureProcessing/spring-boot-security-example"
"virgo47/restful-spring-security" -> "neel4software/SpringSecurityOAuth2"
"virgo47/restful-spring-security" -> "manish-in-java/spring-security-rest"
"eugenp/learn-spring" -> "eugenp/learn-spring-security"
"eugenp/learn-spring" -> "eugenp/REST-With-Spring"
"IBM/cloud-pak" -> "IBM/cloud-pak-cli"
"oktadeveloper/spring-boot-microservices-example" -> "oktadeveloper/java-microservices-examples"
"oktadeveloper/spring-boot-microservices-example" -> "oktadeveloper/spring-boot-angular-example"
"iainporter/rest-java" -> "iainporter/oauth2-provider"
"xpinjection/hibernate-basics" -> "xpinjection/hibernate-performance"
"koushikkothagal/junit-5-basics-course" -> "koushikkothagal/Java-8-Lambda-Basics"
"koushikkothagal/junit-5-basics-course" -> "koushikkothagal/spring-boot-security"
"koushikkothagal/junit-5-basics-course" -> "koushikkothagal/interview-challenges-java"
"koushikkothagal/junit-5-basics-course" -> "koushikkothagal/Modular-Programming-in-Java-9"
"koushikkothagal/junit-5-basics-course" -> "koushikkothagal/advanced-jaxrs"
"jhipster/ng-jhipster" -> "jhipster/jhipster"
"jhipster/ng-jhipster" -> "jhipster/jhipster-control-center"
"jhipster/ng-jhipster" -> "jhipster/jhipster-dependencies"
"jhipster/ng-jhipster" -> "jhipster/react-jhipster"
"joshlong/bootiful-reactive-microservices" -> "joshlong/bootiful-kotlin-online-training"
"spring-guides/gs-multi-module" -> "spring-guides/gs-centralized-configuration"
"ibm-cloud-architecture/refarch-cloudnative-kubernetes" -> "ibm-cloud-architecture/refarch-cloudnative"
"ibm-cloud-architecture/refarch-cloudnative-kubernetes" -> "ibm-cloud-architecture/refarch-cloudnative-devops-kubernetes"
"lahsivjar/react-stomp" -> "lahsivjar/spring-websocket-template"
"dashsaurabh/event-sourcing-cqrs-axon-spring-boot" -> "dashsaurabh/event-sourcing-axon-spring-boot"
"sdeleuze/spring-react-isomorphic" -> "sdeleuze/spring-boot-sample-web-handlebars"
"sdeleuze/spring-react-isomorphic" -> "winterbe/spring-react-example"
"rwinch/gs-spring-security-3.2" -> "rwinch/spring-security-0-to-4.0"
"springframeworkguru/spring-core-spring-mvc" -> "springframeworkguru/spring5-di-demo"
"springframeworkguru/spring-core-spring-mvc" -> "springframeworkguru/spring-core-devops"
"koushikkothagal/spring-boot-security" -> "koushikkothagal/interview-challenges-java"
"koushikkothagal/spring-boot-security" -> "koushikkothagal/spring-security-jpa"
"koushikkothagal/spring-boot-security" -> "koushikkothagal/junit-5-basics-course"
"koushikkothagal/spring-boot-security" -> "koushikkothagal/Modular-Programming-in-Java-9"
"koushikkothagal/spring-boot-security" -> "koushikkothagal/Java-8-Lambda-Basics"
"vinsguru/java-reactive-programming-course" -> "vinsguru/spring-webflux-course"
"vinsguru/java-reactive-programming-course" -> "vinsguru/webflux-patterns"
"idugalic/digital-restaurant" -> "AxonFramework/Axon-trader"
"idugalic/digital-restaurant" -> "bringmeister/ddd-with-kotlin"
"idugalic/digital-restaurant" -> "bringmeister/event-sourcing-with-kotlin"
"idugalic/digital-restaurant" -> "AxonIQ/axon-quick-start"
"idugalic/digital-restaurant" -> "anton-liauchuk/educational-platform" ["e"=1]
"idugalic/digital-restaurant" -> "Creditas/kotlin-ddd-sample"
"idugalic/digital-restaurant" -> "fraktalio/fmodel-demos"
"idugalic/digital-restaurant" -> "AxonFramework/AxonBank"
"idugalic/digital-restaurant" -> "idugalic/micro-company"
"idugalic/digital-restaurant" -> "pivotalsoftware/ESarch"
"brianchandotcom/liferay-portal" -> "brianchandotcom/liferay-plugins"
"yasuflatland-lf/damascus" -> "yasuflatland-lf/liferay-dummy-factory"
"yasuflatland-lf/damascus" -> "peerkar/liferay-gsearch"
"springframeworkguru/spring5-di-demo" -> "springframeworkguru/spring5-jokes-app"
"IBM-Cloud/terraform-provider-ibm" -> "ibm-cloud-architecture/ibm-cloud-stencils"
"IBM-Cloud/terraform-provider-ibm" -> "IBM-Cloud/ansible-collection-ibm"
"IBM-Cloud/terraform-provider-ibm" -> "IBM-Cloud/kube-samples"
"IBM-Cloud/terraform-provider-ibm" -> "IBM/charts"
"IBM-Cloud/terraform-provider-ibm" -> "open-toolchain/sdk"
"IBM-Cloud/terraform-provider-ibm" -> "IBM-Cloud/ibm-cloud-developer-tools"
"IBM-Cloud/terraform-provider-ibm" -> "IBM-Cloud/bluemix-go"
"IBM-Cloud/terraform-provider-ibm" -> "softlayer/terraform-provider-softlayer"
"IBM-Cloud/terraform-provider-ibm" -> "IBM/cloud-operators"
"IBM-Cloud/terraform-provider-ibm" -> "razee-io/Razee"
"IBM-Cloud/terraform-provider-ibm" -> "ibm-messaging/event-streams-samples"
"WASdev/ci.docker" -> "WASdev/ci.maven"
"WASdev/ci.docker" -> "WASdev/ci.docker.websphere-traditional"
"xpinjection/test-driven-spring-boot" -> "xpinjection/hibernate-basics"
"pugnascotia/spring-react-boilerplate" -> "pgrimard/spring-boot-react"
"pugnascotia/spring-react-boilerplate" -> "sdeleuze/spring-react-isomorphic"
"pugnascotia/spring-react-boilerplate" -> "geowarin/boot-react"
"RameshMF/Angular9-SpringBoot-CRUD-Tutorial" -> "RameshMF/angular8-springboot-basic-auth-login-logout"
"neel4software/SpringSecurityOAuth2" -> "hcadavid/spring4-rest-oauth2"
"RameshMF/spring-security-react-ant-design-polls-app" -> "RameshMF/spring-boot-websocket-chat-demo"
"RameshMF/spring-security-react-ant-design-polls-app" -> "RameshMF/spring-petclinic"
"RameshMF/spring-security-react-ant-design-polls-app" -> "RameshMF/java-blog-aggregator-boot"
"RameshMF/spring-security-react-ant-design-polls-app" -> "RameshMF/PiggyMetrics"
"RameshMF/spring-security-react-ant-design-polls-app" -> "RameshMF/todo-management-spring-boot"
"g00glen00b/ng-spring-boot" -> "hantsy/angularjs-springmvc-sample-boot"
"jhipster/jhipster-control-center" -> "cbornet/generator-jhipster-grpc"
"jhipster/jhipster-control-center" -> "jhipster/jhipster-quarkus"
"jhipster/jhipster-control-center" -> "jhipster/jhipster-ide"
"jhipster/jhipster-control-center" -> "jhipster/jhipster-artwork"
"pilloPl/event-source-cqrs-sample" -> "pilloPl/functional-eventsourcing"
"andreschaffer/microservices-testing-examples" -> "andreschaffer/one-click-microservice"
"kucharzyk/vuejs-java-starter" -> "lavenderx/modern-java-web-scaffold"
"kucharzyk/vuejs-java-starter" -> "simasch/simon"
"kucharzyk/vuejs-java-starter" -> "wqbill/my-first-vue"
"kucharzyk/vuejs-java-starter" -> "kevin70/springboot-vue-webpack-examples"
"springframeworkguru/spring5-mvc-rest" -> "springframeworkguru/spring-rest-client-examples"
"springframeworkguru/spring5-mvc-rest" -> "springframeworkguru/spring5-webflux-rest"
"IBM/ubiquity" -> "IBM/ubiquity-k8s"
"IBM/ubiquity" -> "IBM/ubiquity-docker-plugin"
"IBM/ubiquity" -> "IBM/pyxcli"
"webpagebytes/cms" -> "webpagebytes/general-cms-plugins"
"spring-guides/gs-rest-hateoas" -> "spring-guides/gs-testing-restdocs"
"springframeworkguru/spring-rest-client-examples" -> "springframeworkguru/spring5-mvc-rest"
"jhipster/jhipster-quarkus" -> "jhipster/jhipster-control-center"
"metal/metal.js" -> "bryceosterhaus/metal-devtools"
"ibm-cloud-architecture/refarch-privatecloud" -> "ibm-cloud-architecture/icp-admin-bootcamp"
"ibm-cloud-architecture/refarch-privatecloud" -> "ibm-cloud-architecture/icp-backup"
"ibm-cloud-architecture/refarch-privatecloud" -> "IBM/deploy-ibm-cloud-private"
"jhipster/generator-jhipster-micronaut" -> "jhipster/jhipster-quarkus"
"jhipster/generator-jhipster-micronaut" -> "jhipster/jhipster-control-center"
"bringmeister/ddd-with-kotlin" -> "bringmeister/event-sourcing-with-kotlin"
"bringmeister/ddd-with-kotlin" -> "paucls/runbook-ddd-kotlin"
"bringmeister/ddd-with-kotlin" -> "Creditas/kotlin-ddd-sample"
"peerkar/liferay-gsearch" -> "yasuflatland-lf/damascus"
"peerkar/liferay-gsearch" -> "lgdd/liferay-starter"
"peerkar/liferay-gsearch" -> "yasuflatland-lf/liferay-dummy-factory"
"WASdev/ci.maven" -> "WASdev/ci.maven.tools"
"SaiUpadhyayula/SpringShoppingStore" -> "SaiUpadhyayula/SpringAngularEcommerce"
"RameshMF/spring-boot-websocket-chat-demo" -> "RameshMF/spring-security-react-ant-design-polls-app"
"uncodecn/uncode-dal-all" -> "akwei/halo-dal" ["e"=1]
"springboot-angular2-tutorial/boot-app" -> "springboot-angular2-tutorial/angular2-app"
"codingspecialist/Sringboot-Security-Basic-V1" -> "codingspecialist/Springboot-Security-OAuth2.0-V2"
"codingspecialist/Sringboot-Security-Basic-V1" -> "codingspecialist/Springboot-Security-JWT-Easy"
"spring-cloud-samples/config-repo" -> "spring-cloud-samples/configserver"
"lahsivjar/spring-websocket-template" -> "lahsivjar/react-talk"
"spring-guides/gs-consuming-rest-angularjs" -> "spring-guides/gs-consuming-rest-jquery"
"AxonIQ/axon-server-se" -> "AxonIQ/axon-server-api"
"AxonIQ/axon-server-se" -> "AxonFramework/extension-reactor"
"AxonIQ/axon-server-se" -> "AxonIQ/giftcard-demo"
"AxonIQ/axon-server-se" -> "AxonIQ/reference-guide"
"AxonIQ/axon-server-se" -> "AxonFramework/extension-kafka"
"AxonIQ/axon-server-se" -> "AxonFramework/IdeaPlugin"
"AxonIQ/axon-server-se" -> "AxonFramework/extension-tracing"
"softlayer/softlayer-go" -> "softlayer/terraform-provider-softlayer"
"spring-guides/gs-rest-service-cors" -> "spring-guides/gs-consuming-rest-angularjs"
"pascalgrimaud/generator-jhipster-docker" -> "pascalgrimaud/generator-jhipster-ci"
"ibm-cloud-architecture/refarch-cloudnative" -> "ibm-cloud-architecture/refarch-cloudnative-kubernetes"
"koushikkothagal/Java-8-Lambda-Basics" -> "koushikkothagal/Modular-Programming-in-Java-9"
"koushikkothagal/Java-8-Lambda-Basics" -> "koushikkothagal/advanced-jaxrs"
"koushikkothagal/Java-8-Lambda-Basics" -> "koushikkothagal/junit-5-basics-course"
"fabric8io/kubeflix" -> "fabric8io/spring-cloud-kubernetes"
"fabric8io/kubeflix" -> "spring-cloud-incubator/spring-cloud-kubernetes"
"dadepo/exploringCQRSwithAxon" -> "avthart/spring-boot-axon-sample"
"liferay/liferay-faces" -> "liferay/liferay-maven-support"
"Nandtel/GearService" -> "Nandtel/ScheduleService"
"codingspecialist/-Springboot-Security-OAuth2.0-V3" -> "codingspecialist/Springboot-Security-JWT-Easy"
"codingspecialist/-Springboot-Security-OAuth2.0-V3" -> "codingspecialist/Sringboot-Security-Basic-V1"
"smcvb/gamerental" -> "AxonFramework/extension-reactor"
"softlayer/terraform-provider-softlayer" -> "softlayer/softlayer-go"
"spring-guides/gs-circuit-breaker" -> "spring-guides/gs-client-side-load-balancing"
"arjunbalussery/gateway" -> "arjunbalussery/cart"
"PierreBesson/jhipster-microservices-docker" -> "hipster-labs/generator-jhipster-docker-compose"
"joshlong/spring-doge-microservice" -> "joshlong/spring-doge-microservice-configuration"
"IBM/ubiquity-k8s" -> "IBM/ubiquity-docker-plugin"
"IBM/ubiquity-k8s" -> "IBM/ubiquity"
"IBM/ubiquity-docker-plugin" -> "IBM/ubiquity-k8s"
"shopizer-ecommerce/shopizer" ["l"="7.431,22.881"]
"BroadleafCommerce/BroadleafCommerce" ["l"="7.4,22.988"]
"spring-io/sagan" ["l"="9.611,21.253"]
"qalingo/qalingo-engine" ["l"="7.327,22.861"]
"JohnnyLe/Modern-Ecommerce" ["l"="7.517,22.838"]
"vito16/shop" ["l"="0.485,17.901"]
"rohitghatol/spring-boot-microservices" ["l"="7.432,22.919"]
"BroadleafCommerce/DemoSite" ["l"="7.427,22.986"]
"ikismail/ShoppingCart" ["l"="7.561,22.772"]
"codecentric/spring-boot-admin" ["l"="9.603,21.389"]
"spring-projects/spring-petclinic" ["l"="9.579,21.284"]
"vatri/spring-rest-ecommerce" ["l"="7.563,22.83"]
"xubinux/xbin-store" ["l"="6.784,18.3"]
"MyCollab/mycollab" ["l"="-32.484,-24.715"]
"NIT-Software/Modern-Ecommerce" ["l"="7.502,22.84"]
"hs-web/hsweb-framework" ["l"="6.733,18.159"]
"liferay/liferay-blade-samples" ["l"="7.308,23.391"]
"liferay/liferay-blade-cli" ["l"="7.297,23.427"]
"yasuflatland-lf/damascus" ["l"="7.292,23.377"]
"peerkar/liferay-gsearch" ["l"="7.308,23.37"]
"yasuflatland-lf/liferay-dummy-factory" ["l"="7.304,23.358"]
"nhpatt/liferay-devcon-appointment" ["l"="7.306,23.413"]
"rotty3000/blade" ["l"="7.278,23.416"]
"xtivia/dxp-rest-example" ["l"="7.292,23.411"]
"lgdd/liferay-starter" ["l"="7.288,23.394"]
"liferay/liferay-frontend-projects" ["l"="7.284,23.361"]
"liferay/liferay-docs" ["l"="7.337,23.384"]
"emiloberg/liferay-ddmtool" ["l"="7.285,23.443"]
"MoonSulong/Ecommerce" ["l"="7.582,22.776"]
"reljicd/spring-boot-shopping-cart" ["l"="7.581,22.708"]
"khozema-nullwala/online-shopping" ["l"="7.59,22.724"]
"antkaynak/Keyist-Ecommerce" ["l"="7.561,22.811"]
"zhulinn/SpringBoot-Angular7-Online-Shopping-Store" ["l"="7.57,22.792"]
"foysal-mahmud/E-BookShop----Spring-boot" ["l"="7.567,22.749"]
"TouhidurRahamanKhan/Online-shopping-Spring-MVC-java-config-mysql-hibernate" ["l"="7.578,22.744"]
"merikbest/OnlineShop" ["l"="7.586,22.758"]
"syqu22/spring-boot-shop-sample" ["l"="7.605,22.73"]
"MITESHPUTHRANNEU/Shopping-Cart-Spring-MVC-Hibernate-Application" ["l"="7.546,22.729"]
"devdcores/BookStoreApp-Distributed-Application" ["l"="7.542,22.882"]
"idugalic/micro-ecommerce" ["l"="7.484,22.914"]
"ujjavaldesai07/spring-boot-react-ecommerce-app" ["l"="7.601,22.84"]
"RainbowForest/e-commerce-microservices" ["l"="7.525,22.885"]
"merikbest/ecommerce-spring-reactjs" ["l"="7.598,22.822"]
"SelimHorri/ecommerce-microservice-backend-app" ["l"="7.496,22.856"]
"mohamed-taman/Springy-Store-Microservices" ["l"="7.503,22.933"]
"mostafacs/ecommerce-microservices-spring-reactive-webflux" ["l"="7.522,22.982"]
"venkataravuri/e-commerce-microservices-sample" ["l"="7.498,22.905"]
"sivaprasadreddy/spring-boot-microservices-series" ["l"="7.522,22.915"]
"boylegu/SpringBoot-vue" ["l"="7.858,22.783"]
"jonashackt/spring-boot-vuejs" ["l"="7.723,22.845"]
"Heeexy/SpringBoot-Shiro-Vue" ["l"="6.926,18.123"]
"xwjie/ElementVueSpringbootCodeTemplate" ["l"="6.934,18.272"]
"OptionalDay/spring-cloud-vue" ["l"="6.808,18.403"]
"lcw2004/one" ["l"="6.867,18.447"]
"leelance/spring-boot-all" ["l"="9.96,21.257"]
"wuyouzhuguli/FEBS-Vue" ["l"="6.954,18.202"]
"lenve/VBlog" ["l"="6.898,18.073"]
"PanJiaChen/vueAdmin-template" ["l"="14.667,-8.28"]
"roncoo/spring-boot-demo" ["l"="6.757,18.286"]
"Exrick/x-boot" ["l"="6.845,18.198"]
"abel533/MyBatis-Spring-Boot" ["l"="10.015,21.365"]
"zhangxd1989/springboot-dubbox" ["l"="6.876,18.341"]
"lihengming/spring-boot-api-project-seed" ["l"="6.756,18.067"]
"dangeabunea/RomanianCoderExamples" ["l"="7.646,22.727"]
"mrin9/Angular-SpringBoot-REST-JWT" ["l"="7.545,22.776"]
"TechPrimers/jwt-security-example" ["l"="7.585,22.66"]
"callicoder/spring-boot-file-upload-download-rest-api-example" ["l"="7.712,22.909"]
"koushikkothagal/spring-security-jwt" ["l"="7.644,22.622"]
"isopropylcyanide/Jwt-Spring-Security-JPA" ["l"="7.629,22.857"]
"koushikkothagal/spring-security-jpa" ["l"="7.66,22.629"]
"szerhusenBC/jwt-spring-security-demo" ["l"="7.554,22.85"]
"bfwg/springboot-jwt-starter" ["l"="7.543,22.823"]
"svlada/springboot-security-jwt" ["l"="7.507,22.811"]
"murraco/spring-boot-jwt" ["l"="7.607,22.859"]
"jwtk/jjwt" ["l"="9.615,21.422"]
"brahalla/Cerberus" ["l"="7.48,22.796"]
"Baeldung/spring-security-oauth" ["l"="7.523,22.856"]
"spring-projects/spring-security-oauth" ["l"="9.511,21.255"]
"spring-projects/spring-data-examples" ["l"="9.484,21.216"]
"sqshq/PiggyMetrics" ["l"="7.389,22.91"]
"spring-guides/tut-spring-security-and-angular-js" ["l"="7.472,22.88"]
"callicoder/spring-security-react-ant-design-polls-app" ["l"="7.654,22.887"]
"auth0/java-jwt" ["l"="9.641,21.403"]
"spring-projects/spring-security" ["l"="9.53,21.307"]
"liferay/liferay-portal" ["l"="7.343,23.323"]
"liferay/liferay-plugins" ["l"="7.351,23.373"]
"liferay/liferay-ide" ["l"="7.349,23.421"]
"liferay/alloy-ui" ["l"="7.376,23.396"]
"brianchandotcom/liferay-portal" ["l"="7.389,23.343"]
"liferay/clay" ["l"="7.262,23.386"]
"liferay/liferay-faces" ["l"="7.357,23.355"]
"liferay/liferay-maven-support" ["l"="7.34,23.356"]
"liferay/liferay-docker" ["l"="7.376,23.32"]
"liferay/liferay-screens" ["l"="7.311,23.336"]
"livelessons-spring/building-microservices" ["l"="7.416,22.935"]
"anilallewar/microservices-basics-spring-boot" ["l"="7.47,22.961"]
"piomin/sample-spring-microservices" ["l"="7.494,22.96"]
"callistaenterprise/blog-microservices" ["l"="7.361,22.925"]
"PacktPublishing/Spring-Microservices" ["l"="7.347,22.766"]
"joshlong/bootiful-microservices" ["l"="7.348,22.957"]
"ewolff/microservice" ["l"="7.42,22.968"]
"apssouza22/java-microservice" ["l"="7.47,22.926"]
"kbastani/spring-cloud-microservice-example" ["l"="7.379,22.936"]
"paulc4/microservices-demo" ["l"="7.396,22.956"]
"joshlong/the-spring-rest-stack" ["l"="8.224,24.602"]
"kennyk65/Microservices-With-Spring-Student-Files" ["l"="7.364,22.902"]
"kbastani/spring-cloud-event-sourcing-example" ["l"="7.367,22.976"]
"joshlong/cloud-native-workshop" ["l"="7.372,22.957"]
"royclarkson/spring-rest-service-oauth" ["l"="7.423,22.824"]
"dynamind/spring-boot-security-oauth2-minimal" ["l"="7.463,22.848"]
"dsyer/sparklr-boot" ["l"="7.404,22.808"]
"iainporter/oauth2-provider" ["l"="7.391,22.79"]
"rajithd/spring-boot-oauth2" ["l"="7.458,22.827"]
"dsyer/spring-security-angular" ["l"="7.365,22.836"]
"FrontierPsychiatrist/spring-oauth-example" ["l"="7.372,22.809"]
"iainporter/rest-java" ["l"="7.393,22.764"]
"making/oauth2-sso-demo" ["l"="7.455,22.866"]
"Robbert1/boot-stateless-auth" ["l"="7.416,22.782"]
"FutureProcessing/spring-boot-security-example" ["l"="7.419,22.749"]
"absolutegalaber/jwt-oauth2-example" ["l"="7.396,22.849"]
"cer/event-sourcing-examples" ["l"="7.294,22.966"]
"cer/microservices-examples" ["l"="7.332,22.965"]
"eventuate-local/eventuate-local" ["l"="7.218,22.983"]
"microservices-patterns/ftgo-application" ["l"="7.25,22.958"]
"AxonFramework/AxonFramework" ["l"="5.972,22.395"]
"VaughnVernon/IDDD_Samples" ["l"="5.901,22.351"]
"citerus/dddsample-core" ["l"="5.983,22.341"]
"eventuate-examples/es-kanban-board" ["l"="7.245,22.998"]
"gregoryyoung/m-r" ["l"="25.055,16.337"]
"eventuate-examples/eventuate-examples-java-spring-todo-list" ["l"="7.244,23.013"]
"heynickc/awesome-ddd" ["l"="5.836,22.323"]
"eventuate-tram/eventuate-tram-core" ["l"="7.174,22.99"]
"eventuate-tram/eventuate-tram-sagas" ["l"="7.195,22.955"]
"eventuate-examples/eventuate-examples-java-customers-and-orders" ["l"="7.216,23"]
"eventuate-foundation/eventuate-cdc" ["l"="7.157,22.961"]
"benwilcock/microservice-sampler" ["l"="7.28,23.036"]
"eventuate-clients/eventuate-client-java" ["l"="7.155,23.011"]
"RBMHTechnology/eventuate" ["l"="9.531,24.807"]
"eventuate-tram/eventuate-tram-sagas-examples-customers-and-orders" ["l"="7.186,22.976"]
"dmart28/reveno" ["l"="6.059,22.43"]
"AxonFramework/Axon-trader" ["l"="7.281,23.095"]
"kbastani/event-stream-processing-microservices" ["l"="7.368,23.041"]
"kbastani/event-sourcing-microservices-example" ["l"="7.432,23.004"]
"chaokunyang/microservices-event-sourcing" ["l"="6.807,18.419"]
"yidongnan/spring-cloud-netflix-example" ["l"="7.343,22.934"]
"idugalic/micro-company" ["l"="7.345,23.037"]
"prontera/spring-cloud-rest-tcc" ["l"="9.86,21.167"]
"olivergierke/spring-restbucks" ["l"="8.293,24.588"]
"kakawait/uaa-behind-zuul-sample" ["l"="7.359,22.942"]
"netgloo/spring-boot-samples" ["l"="7.502,22.877"]
"zhangxd1989/spring-boot-cloud" ["l"="6.803,18.338"]
"xpinjection/java8-misuses" ["l"="7.595,23.321"]
"xpinjection/design-patterns" ["l"="7.612,23.346"]
"xpinjection/hibernate-performance" ["l"="7.617,23.326"]
"xpinjection/hibernate-basics" ["l"="7.606,23.303"]
"xpinjection/test-driven-spring-boot" ["l"="7.589,23.225"]
"gorelikov/cards-hub-evolution" ["l"="7.586,23.362"]
"spring-cloud-samples/customers-stores" ["l"="7.302,23.011"]
"spring-cloud-samples/configserver" ["l"="7.286,23.003"]
"spring-cloud-samples/eureka" ["l"="7.276,23.018"]
"spring-cloud-samples/authserver" ["l"="7.319,22.987"]
"spring-cloud-samples/hystrix-dashboard" ["l"="7.258,23.04"]
"spring-cloud-samples/spring-cloud-contract-samples" ["l"="9.33,20.921"]
"spring-cloud-samples/springbox-cloud" ["l"="7.309,23.029"]
"spring-cloud-samples/brewery" ["l"="7.264,23.054"]
"spring-cloud-samples/sso" ["l"="7.339,22.983"]
"olivergierke/rest-microservices" ["l"="8.288,24.551"]
"spring-cloud-samples/feign-eureka" ["l"="7.24,23.052"]
"william-tran/microservice-security" ["l"="7.328,22.945"]
"spring-cloud/spring-cloud-core-tests" ["l"="7.294,23.056"]
"SelimHorri/ecommerce-frontend-web-app" ["l"="7.482,22.833"]
"SelimHorri/SelimHorri" ["l"="7.48,22.82"]
"eventuate-examples/eventuate-examples-restaurant-management" ["l"="7.225,23.016"]
"cer/event-sourcing-using-scala-typeclasses" ["l"="7.191,23.027"]
"joshlong/boot-examples" ["l"="7.302,22.88"]
"joshlong/spring-doge-microservice" ["l"="7.281,22.897"]
"philipsorst/angular-rest-springsecurity" ["l"="7.323,22.776"]
"virgo47/restful-spring-security" ["l"="7.424,22.765"]
"Robert-Leggett/angular_bootstrap_spring" ["l"="7.277,22.728"]
"xvitcoder/spring-mvc-angularjs" ["l"="7.32,22.732"]
"robharrop/spring-angularjs" ["l"="7.302,22.732"]
"uaihebert/uaicontacts" ["l"="7.28,22.745"]
"jhades/spring-mvc-angularjs-sample-app" ["l"="7.377,22.777"]
"kolorobot/spring-mvc-quickstart-archetype" ["l"="7.316,22.804"]
"jhipster/jhipster-sample-app" ["l"="7.165,22.734"]
"spring-projects/spring-data-jpa-examples" ["l"="9.337,20.813"]
"techdev-solutions/trackr-backend" ["l"="7.349,22.787"]
"radcortez/javaee7-angular" ["l"="7.924,21.209"]
"callicoder/spring-boot-websocket-chat-demo" ["l"="7.652,22.99"]
"salmar/spring-websocket-chat" ["l"="7.534,23.035"]
"callicoder/spring-boot-react-oauth2-social-login-demo" ["l"="7.677,22.91"]
"spring-guides/gs-messaging-stomp-websocket" ["l"="7.636,23.079"]
"zifangsky/WebSocketDemo" ["l"="7.84,22.933"]
"jorgeacetozi/ebook-chat-app-spring-websocket-cassandra-redis-rabbitmq" ["l"="7.603,23.057"]
"YeautyYE/netty-websocket-spring-boot-starter" ["l"="9.923,21.196"]
"niezhiliang/springbootwebsocket" ["l"="7.919,22.939"]
"callicoder/java-concurrency-examples" ["l"="27.11,-21.481"]
"amrkhaledccd/One-to-One-WebSockets-Chat" ["l"="7.616,23.04"]
"rstoyanchev/spring-websocket-portfolio" ["l"="7.595,23.095"]
"RawSanj/spring-redis-websocket" ["l"="7.657,23.059"]
"winterbe/spring-react-example" ["l"="7.784,22.849"]
"sdeleuze/spring-react-isomorphic" ["l"="7.793,22.828"]
"geowarin/boot-react" ["l"="7.692,22.838"]
"winterbe/react-samples" ["l"="7.765,22.834"]
"pugnascotia/spring-react-boilerplate" ["l"="7.775,22.819"]
"dlizarra/spring-boot-react-webpack-starter" ["l"="7.759,22.852"]
"stormpath/stormpath-spring-boot-react-example" ["l"="7.844,22.84"]
"peterchenhdu/webbf" ["l"="13.689,-8.597"]
"winterbe/spring-kotlin-react-demo" ["l"="47.329,-3.512"]
"kucharzyk/vuejs-java-starter" ["l"="7.876,22.824"]
"nodyn/jvm-npm" ["l"="49.079,-1.664"]
"kantega/react-and-spring" ["l"="7.755,22.873"]
"spring-guides/tut-react-and-spring-data-rest" ["l"="7.721,22.891"]
"sdeleuze/spring-boot-sample-web-handlebars" ["l"="7.822,22.833"]
"eirslett/frontend-maven-plugin" ["l"="9.36,21.359"]
"gothinkster/spring-boot-realworld-example-app" ["l"="19.6,1.55"]
"bezkoder/spring-boot-spring-security-jwt-authentication" ["l"="7.668,22.809"]
"khandelwal-arpit/springboot-starterkit" ["l"="7.632,22.827"]
"RameshMF/spring-boot-tutorial" ["l"="7.694,22.804"]
"testcontainers/testcontainers-java" ["l"="9.23,21.363"]
"Baeldung/spring-security-registration" ["l"="7.59,22.868"]
"spring-guides/tut-spring-boot-oauth2" ["l"="7.546,22.904"]
"lexburner/oauth2-demo" ["l"="8.393,19.153"]
"spring-guides/gs-securing-web" ["l"="7.792,22.995"]
"spring-cloud/spring-cloud-security" ["l"="9.44,20.999"]
"spring-projects/spring-security-oauth2-boot" ["l"="9.396,21.071"]
"spring-guides/gs-spring-boot-docker" ["l"="7.771,22.982"]
"koushikkothagal/spring-boot-microservices-workshop" ["l"="7.624,22.643"]
"koushikkothagal/spring-boot-security" ["l"="7.65,22.604"]
"koushikkothagal/Java-8-Lambda-Basics" ["l"="7.665,22.596"]
"koushikkothagal/junit-5-basics-course" ["l"="7.652,22.59"]
"in28minutes/spring-microservices" ["l"="27.223,-21.668"]
"ndesaigithub/koushikkothagal-spring-boot-microservices-workshop" ["l"="7.606,22.588"]
"koushikkothagal/ipl-dashboard" ["l"="7.633,22.533"]
"koushikkothagal/Modular-Programming-in-Java-9" ["l"="7.664,22.608"]
"koushikkothagal/interview-challenges-java" ["l"="7.633,22.6"]
"koushikkothagal/coronavirus-tracker" ["l"="7.629,22.569"]
"koushikkothagal/spring-framework" ["l"="7.621,22.614"]
"koushikkothagal/javabrains-website" ["l"="7.616,22.602"]
"piomin/sample-spring-microservices-new" ["l"="7.513,22.942"]
"rieckpil/blog-tutorials" ["l"="7.551,23.009"]
"rieckpil/testing-spring-boot-applications-masterclass" ["l"="7.549,23.061"]
"thombergs/code-examples" ["l"="9.112,21.096"]
"timtebeek/spring-security-samples" ["l"="7.578,23.072"]
"stratospheric-dev/stratospheric" ["l"="7.558,23.078"]
"soyjuanmalopez/clean-architecture" ["l"="5.848,22.426"]
"javaee-samples/javaee8-samples" ["l"="7.959,21.317"]
"ThomasVitale/awesome-spring" ["l"="8.881,21.027"]
"code-not-found/jsf-primefaces" ["l"="8.165,21.45"]
"vladmihalcea/high-performance-java-persistence" ["l"="9.081,21.125"]
"AdamBien/javaee8-essentials-archetype" ["l"="7.887,21.283"]
"SaiUpadhyayula/spring-reddit-clone" ["l"="7.618,22.955"]
"spring-petclinic/spring-framework-petclinic" ["l"="7.664,22.973"]
"spring-petclinic/spring-petclinic-rest" ["l"="7.66,22.942"]
"spring-petclinic/spring-petclinic-reactjs" ["l"="7.668,22.926"]
"spring-petclinic/spring-petclinic-microservices" ["l"="7.542,22.954"]
"spring-petclinic/spring-petclinic-angular" ["l"="7.641,22.962"]
"spring-petclinic/spring-petclinic-data-jdbc" ["l"="7.672,22.958"]
"springframeworkguru/sfg-pet-clinic" ["l"="7.724,23.029"]
"spring-petclinic/spring-petclinic-microservices-config" ["l"="7.68,23.016"]
"springframeworkguru/spring5webapp" ["l"="7.709,22.998"]
"spring-petclinic/spring-petclinic-graphql" ["l"="7.689,22.97"]
"spring-petclinic/spring-petclinic-kotlin" ["l"="7.689,22.952"]
"cheese10yun/spring-jpa-best-practices" ["l"="44.735,-16.665"]
"jojoldu/spring-batch-in-action" ["l"="44.706,-16.655"]
"cheese10yun/spring-guide" ["l"="44.759,-16.686"]
"jojoldu/freelec-springboot2-webservice" ["l"="44.767,-16.655"]
"jojoldu/blog-code" ["l"="44.742,-16.648"]
"deepIify/oauth-login-be" ["l"="7.788,23.067"]
"HomoEfficio/dev-tips" ["l"="44.807,-16.668"]
"cheese10yun/dev-info" ["l"="44.826,-16.698"]
"ksundong/backend-interview-question" ["l"="44.814,-16.754"]
"ddd-by-examples/library" ["l"="5.856,22.295"]
"microservices-patterns/ftgo-monolith" ["l"="7.183,22.92"]
"eventuate-tram/eventuate-tram-examples-customers-and-orders" ["l"="7.174,22.965"]
"thombergs/buckpal" ["l"="5.866,22.374"]
"spring-cloud-samples/config-repo" ["l"="7.268,22.998"]
"wanghongfei/spring-security-oauth2-example" ["l"="8.365,19.158"]
"xetys/spring-cloud-oauth2-example" ["l"="7.343,22.905"]
"RameshMF/PiggyMetrics" ["l"="7.629,22.729"]
"oktadev/spring-boot-microservices-example" ["l"="7.521,22.97"]
"oktadev/java-microservices-examples" ["l"="7.525,22.954"]
"oktadeveloper/spring-boot-microservices-example" ["l"="7.458,22.976"]
"hantsy/spring-microservice-sample" ["l"="7.534,22.936"]
"spring-guides/top-spring-boot-docker" ["l"="7.795,23.047"]
"spring-guides/gs-spring-boot" ["l"="7.85,23.009"]
"spring-guides/gs-multi-module" ["l"="7.82,23.068"]
"joshlong/flux-flix-service" ["l"="47.338,-3.567"]
"spring-guides/gs-accessing-data-rest" ["l"="7.855,23.03"]
"spring-guides/gs-accessing-data-mysql" ["l"="7.827,22.988"]
"spring-guides/gs-rest-service-cors" ["l"="7.824,23.006"]
"spring-guides/understanding" ["l"="7.872,22.978"]
"spring-guides/gs-managing-transactions" ["l"="7.771,23.015"]
"mploed/ddd-strategic-design-spring-boot" ["l"="5.947,22.338"]
"spring-guides/gs-rest-service" ["l"="7.81,22.977"]
"spring-guides/gs-reactive-rest-service" ["l"="7.872,23.018"]
"eherozhao/E-Commerce-Spring-Boot" ["l"="7.597,22.769"]
"eherozhao/E-Commerce-React-Front-end" ["l"="7.614,22.741"]
"devRobots/spring-boot-ecommerce" ["l"="7.625,22.767"]
"spring-cloud-incubator/spring-cloud-kubernetes" ["l"="7.356,23.019"]
"fabric8io/spring-cloud-kubernetes" ["l"="7.379,23.008"]
"fabric8io/kubeflix" ["l"="7.361,23.058"]
"IBM/spring-boot-microservices-on-kubernetes" ["l"="7.407,23.045"]
"fabric8io/fabric8" ["l"="9.203,21.583"]
"runconduit/conduit" ["l"="-11.08,0.28"]
"opentracing-contrib/java-spring-cloud" ["l"="-16.405,3.113"]
"saturnism/istio-by-example-java" ["l"="-13.983,-2.703"]
"spring-cloud/spring-cloud-pipelines" ["l"="9.372,20.853"]
"bestcloud/ku8eye" ["l"="-11.308,0.268"]
"ordina-jworks/microservices-dashboard" ["l"="7.207,23.1"]
"fabric8io/fabric8-maven-plugin" ["l"="10.018,23.107"]
"nydiarra/springboot-jwt" ["l"="7.575,22.82"]
"osopromadze/Spring-Boot-Blog-REST-API" ["l"="7.637,22.844"]
"hantsy/springboot-jwt-sample" ["l"="7.571,22.946"]
"only2dhir/spring-security-jwt" ["l"="7.61,22.807"]
"AxonFramework/AxonBank" ["l"="7.294,23.104"]
"avthart/spring-boot-axon-sample" ["l"="7.297,23.077"]
"idugalic/digital-restaurant" ["l"="7.301,23.132"]
"dadepo/exploringCQRSwithAxon" ["l"="7.269,23.082"]
"EdisonXu/sbs-axon" ["l"="7.32,23.106"]
"AxonIQ/axon-quick-start" ["l"="7.234,23.169"]
"soooban/AxonDemo" ["l"="7.246,23.148"]
"benwilcock/cqrs-microservice-sampler" ["l"="7.34,23.084"]
"pivotalsoftware/ESarch" ["l"="7.27,23.117"]
"AxonIQ/giftcard-demo" ["l"="7.214,23.164"]
"AxonFramework/Addressbook-Sample" ["l"="7.248,23.126"]
"ddd-by-examples/event-source-cqrs-sample" ["l"="5.932,22.326"]
"benwilcock/pcf-axon-cqrs-demo" ["l"="7.276,23.149"]
"AxonFramework/extension-kafka" ["l"="7.146,23.202"]
"AxonIQ/reference-guide" ["l"="7.167,23.187"]
"AxonFramework/extension-tracing" ["l"="7.159,23.208"]
"AxonIQ/hotel-demo" ["l"="7.214,23.208"]
"AxonIQ/axon-server-se" ["l"="7.177,23.198"]
"AxonIQ/axon-server-api" ["l"="7.187,23.182"]
"Creditas/kotlin-ddd-sample" ["l"="7.301,23.182"]
"bringmeister/ddd-with-kotlin" ["l"="7.285,23.197"]
"bringmeister/event-sourcing-with-kotlin" ["l"="7.281,23.179"]
"htnk128/kotlin-ddd-sample" ["l"="7.305,23.211"]
"kbastani/order-delivery-microservice-example" ["l"="7.4,23.07"]
"ddd-by-examples/all-things-cqrs" ["l"="5.927,22.31"]
"sdaschner/scalable-coffee-shop" ["l"="11.327,-11.709"]
"berndruecker/flowing-retail" ["l"="11.276,-11.652"]
"ddd-by-examples/factory" ["l"="5.908,22.322"]
"ewolff/microservice-kubernetes" ["l"="7.447,23.034"]
"andreschaffer/event-sourcing-cqrs-examples" ["l"="5.943,22.361"]
"wpcfan/spring-boot-tut" ["l"="8.333,19.102"]
"longfeizheng/logback" ["l"="8.413,19.136"]
"keets2012/Auth-service" ["l"="8.412,19.16"]
"aboullaite/spring-boot-jwt" ["l"="7.5,22.775"]
"jonsychen/rest-security-demo" ["l"="6.962,18.522"]
"adamzareba/company-structure-spring-security-oauth2-authorities" ["l"="7.574,22.925"]
"Akourtiim/oauth2-spring-boot-2.0.2" ["l"="7.595,22.945"]
"piomin/sample-spring-oauth2-microservices" ["l"="7.447,22.962"]
"odenktools/springboot-oauth2-jwt" ["l"="7.591,22.962"]
"spring-projects/spring-mvc-showcase" ["l"="9.679,21.302"]
"thymeleaf/thymeleafexamples-layouts" ["l"="20.856,-31.794"]
"ultraq/thymeleaf-layout-dialect" ["l"="20.803,-31.783"]
"kolorobot/spring-boot-thymeleaf" ["l"="20.87,-31.818"]
"ykameshrao/spring-hibernate-springdata-springmvc-maven-project-framework" ["l"="7.233,22.713"]
"sivaprasadreddy/maven-archetype-templates" ["l"="7.252,22.771"]
"akquinet/android-archetypes" ["l"="52.807,0.646"]
"eugenp/REST" ["l"="8.176,24.599"]
"SpringSource/spring-petclinic" ["l"="8.145,24.576"]
"javaee-samples/javaee7-samples" ["l"="7.972,21.244"]
"liferay/liferay-mobile-sdk" ["l"="7.321,23.355"]
"Urunov/SpringBoot-Projects-FullStack" ["l"="7.721,22.809"]
"RameshMF/spring-mvc-tutorial" ["l"="7.736,22.712"]
"in28minutes/spring-boot-examples" ["l"="27.227,-21.607"]
"RameshMF/Hibernate-ORM-Tutorials" ["l"="7.756,22.719"]
"mkyong/spring-boot" ["l"="7.641,22.944"]
"hellokoding/hellokoding-courses" ["l"="7.617,22.899"]
"AnghelLeonard/Hibernate-SpringBoot" ["l"="9.083,21.079"]
"RameshMF/ReactJS-Spring-Boot-CRUD-Full-Stack-App" ["l"="7.744,22.824"]
"RameshMF/registration-login-spring-boot-security-thymeleaf-hibernate" ["l"="7.713,22.761"]
"RameshMF/Angular8-SpringBoot-CRUD-Tutorial" ["l"="7.64,22.703"]
"in28minutes/SpringBootForBeginners" ["l"="27.201,-21.627"]
"callicoder/spring-boot-mysql-rest-api-tutorial" ["l"="7.694,22.855"]
"spring-guides/getting-started-guides" ["l"="7.874,22.998"]
"spring-guides/gs-accessing-data-jpa" ["l"="7.844,22.993"]
"spring-guides/gs-serving-web-content" ["l"="7.854,22.979"]
"spring-guides/gs-actuator-service" ["l"="7.838,23.034"]
"spring-guides/gs-maven" ["l"="7.917,23.032"]
"spring-guides/gs-batch-processing" ["l"="7.943,23.011"]
"spring-guides/gs-validating-form-input" ["l"="7.822,23.029"]
"spring-guides/gs-consuming-rest" ["l"="7.81,23.013"]
"spring-petclinic/spring-petclinic-cloud" ["l"="7.574,22.992"]
"davidetaibi/Microservices_Project_List" ["l"="7.454,22.942"]
"spring-projects-experimental/spring-authorization-server" ["l"="9.401,21.195"]
"spring-projects/spring-authorization-server" ["l"="9.519,21.111"]
"wiselyman/uaa-zuul" ["l"="8.354,19.139"]
"eugenp/tutorials" ["l"="9.452,21.274"]
"hantsy/angularjs-springmvc-sample-boot" ["l"="7.455,22.754"]
"hantsy/angularjs-springmvc-sample" ["l"="7.376,22.722"]
"g00glen00b/ng-spring-boot" ["l"="7.426,22.732"]
"ykameshrao/spring-mvc-angular-js-hibernate-bootstrap-java-single-page-jwt-auth-rest-api-webapp-framework" ["l"="7.412,22.697"]
"borysn/spring-boot-angular2" ["l"="7.472,22.697"]
"ZhibingXie/SpringMVC-Spring-Hibernate" ["l"="6.623,18.488"]
"shabbirdwd53/spring-security-tutorial" ["l"="7.747,23.1"]
"shabbirdwd53/Spring-Data-JPA-Tutorial" ["l"="7.757,23.127"]
"shabbirdwd53/Springboot-Tutorial" ["l"="7.739,23.117"]
"abhisheksr01/spring-boot-microservice-best-practices" ["l"="7.539,22.983"]
"abhisheksr01/zero-2-hero-python-flask-microservice" ["l"="7.534,23.008"]
"abhisheksr01/bankapp-simulation-springboot-services" ["l"="7.558,22.995"]
"keumtae-kim/spring-boot-react-blog" ["l"="7.66,22.857"]
"MatthewVita/spring-boot-private-chat" ["l"="7.507,23.116"]
"rstoyanchev/spring-mvc-chat" ["l"="7.559,23.116"]
"g00glen00b/spring-ng-chat" ["l"="7.531,23.139"]
"mraible/21-points" ["l"="7.134,22.772"]
"monkey-codes/java-reactive-chat" ["l"="7.53,23.115"]
"rwinch/spring-websocket-portfolio" ["l"="7.527,23.067"]
"nielsutrecht/jwt-angular-spring" ["l"="7.455,22.795"]
"bijukunjummen/spring-websocket-chat-sample" ["l"="7.547,23.095"]
"Nandtel/spring-boot-angular2-starter" ["l"="7.431,22.622"]
"Nandtel/GearService" ["l"="7.416,22.58"]
"springboot-angular2-tutorial/angular2-app" ["l"="7.45,22.608"]
"zouabimourad/angular2-spring" ["l"="7.438,22.687"]
"springboot-angular2-tutorial/boot-app" ["l"="7.468,22.617"]
"ehirsch/spring-angular2" ["l"="7.447,22.666"]
"kucharzyk/spring-angular2-starter" ["l"="7.45,22.635"]
"marco76/SpringAngular2TypeScript" ["l"="7.47,22.653"]
"shardis/spring-angular2-starter" ["l"="7.479,22.637"]
"jbruinink/ng2boot" ["l"="7.432,22.648"]
"dlizarra/spring-angular2-cli-starter" ["l"="7.499,22.708"]
"mrin9/Angular2_SpringBoot" ["l"="7.47,22.669"]
"bfwg/angular-spring-starter" ["l"="7.521,22.765"]
"kiranreddykasa/springrest-angularjs" ["l"="7.296,22.707"]
"nidi3/AngularJS-SpringMVC-example" ["l"="7.277,22.703"]
"wvuong/spring-mvc-bootstrap-angularjs-starter" ["l"="7.284,22.682"]
"jhipster/prettier-java" ["l"="6.955,22.604"]
"HubSpot/prettier-maven-plugin" ["l"="6.929,22.577"]
"jhipster/jhipster-lite" ["l"="6.959,22.638"]
"jhipster/jhipster-control-center" ["l"="7.014,22.67"]
"diffplug/spotless" ["l"="48.007,-3.324"]
"mvndaemon/mvnd" ["l"="9.014,21.2"]
"zalando/problem-spring-web" ["l"="9.104,21.129"]
"jreleaser/jreleaser" ["l"="8.997,21.13"]
"spring-io/spring-javaformat" ["l"="9.044,21.065"]
"jhipster/jhipster-kotlin" ["l"="7.008,22.64"]
"jhipster/jhipster-vuejs" ["l"="7.005,22.658"]
"junit-pioneer/junit-pioneer" ["l"="8.978,21.157"]
"xmolecules/jmolecules" ["l"="9.022,21.097"]
"revelc/formatter-maven-plugin" ["l"="8.938,21.041"]
"TNG/ArchUnit" ["l"="9.08,21.235"]
"odrotbohm/moduliths" ["l"="9.006,21.065"]
"jhipster/jdl-studio" ["l"="7.036,22.683"]
"jhipster/jhipster-core" ["l"="7.027,22.671"]
"jhipster/jhipster-ide" ["l"="7.039,22.664"]
"jhipster/jhipster-uml" ["l"="7.005,22.695"]
"jhipster/jhipster-console" ["l"="7.043,22.698"]
"jhipster/jhipster-registry" ["l"="7.07,22.688"]
"jhipster/jhipster.github.io" ["l"="7.052,22.685"]
"jhipster/ng-jhipster" ["l"="7.046,22.654"]
"oktadeveloper/generator-jhipster-ionic" ["l"="7.011,22.62"]
"jhipster/jhipster-devbox" ["l"="7.054,22.709"]
"jhipster/jdl-samples" ["l"="7.064,22.659"]
"jhipster/jhipster" ["l"="7.056,22.669"]
"Blackdread/sql-to-jdl" ["l"="6.989,22.643"]
"jhipster/jhipster-online" ["l"="7.051,22.641"]
"jhipster/generator-jhipster-module" ["l"="6.995,22.627"]
"spring-cloud-samples/spring-cloud-gateway-sample" ["l"="7.244,23.03"]
"joshlong/service-registration-and-discovery" ["l"="7.274,22.979"]
"spring-cloud/spring-cloud-netflix" ["l"="9.505,21.232"]
"spring-cloud/spring-cloud-config" ["l"="9.429,21.056"]
"spring-cloud-samples/zuul-server" ["l"="7.214,23.043"]
"amrkhaledccd/my-moments" ["l"="7.583,22.912"]
"raeperd/realworld-springboot-java" ["l"="19.521,1.589"]
"SaiUpadhyayula/SpringAngularEcommerce" ["l"="7.598,22.886"]
"scbushan05/online-bookstore" ["l"="7.636,22.758"]
"cyela/Angular-Springboot" ["l"="7.597,22.743"]
"ayushman1024/TASK-Management-System" ["l"="7.546,22.753"]
"ikismail/Angular-ShoppingCart" ["l"="30.725,-30.328"]
"merikbest/twitter-spring-reactjs" ["l"="7.605,22.787"]
"piomin/sample-spring-microservices-kubernetes" ["l"="7.5,22.983"]
"piomin/sample-spring-microservices-advanced" ["l"="7.514,22.997"]
"yidongnan/spring-cloud-consul-example" ["l"="7.32,22.92"]
"zpng/spring-cloud-microservice-examples" ["l"="7.29,22.919"]
"ThoreauZZ/spring-cloud-example" ["l"="7.311,22.907"]
"cloudframeworks-springcloud/user-guide-springcloud" ["l"="6.763,18.422"]
"eacdy/spring-cloud-study" ["l"="6.752,18.37"]
"SpringCloud/spring-cloud-document" ["l"="6.741,18.407"]
"PacktPublishing/Hands-On-Microservices-with-Spring-Boot-and-Spring-Cloud" ["l"="7.422,22.85"]
"PacktPublishing/Microservices-with-Spring-Boot-and-Spring-Cloud-2E" ["l"="7.387,22.827"]
"PacktPublishing/Hands-On-Reactive-Programming-in-Spring-5" ["l"="7.368,22.753"]
"ThomasVitale/cloud-native-spring-in-action" ["l"="5.057,19.543"]
"hibernate/hibernate-reactive" ["l"="7.264,21.366"]
"PacktPublishing/Learning-Spring-Boot-2.0-Second-Edition" ["l"="5.077,19.657"]
"spencergibb/myfeed" ["l"="7.274,22.934"]
"pivotal-cf/identity-sample-apps" ["l"="7.26,22.903"]
"SpringOne2GX-2014/microservice-security" ["l"="7.269,22.915"]
"sharmaritesh/spring-angularjs-oauth2-sample" ["l"="7.253,22.921"]
"william-tran/freddys-bbq" ["l"="-11.312,0.118"]
"FudanSELab/train-ticket" ["l"="-11.318,-1.389"]
"digota/digota" ["l"="-15.921,-1.819"]
"wimdeblauwe/error-handling-spring-boot-starter" ["l"="9.008,21.045"]
"vmudigal/microservices-sample" ["l"="7.483,22.938"]
"mfornos/awesome-microservices" ["l"="27.758,-19.647"]
"spring-projects/spring-hateoas-examples" ["l"="7.748,22.95"]
"schananas/practical-reactor" ["l"="7.076,23.239"]
"AxonFramework/IdeaPlugin" ["l"="7.119,23.222"]
"sushildangi/online-shopping" ["l"="7.573,22.722"]
"dailycodebuffer/Spring-MVC-Tutorials" ["l"="7.704,23.018"]
"shabbirdwd53/Springboot-Microservice" ["l"="7.692,23.068"]
"shabbirdwd53/Springboot-k8s" ["l"="7.69,23.098"]
"shabbirdwd53/event-driven-microservices" ["l"="7.713,23.12"]
"shabbirdwd53/spring-boot-microservices" ["l"="7.716,23.1"]
"SaiUpadhyayula/spring-boot-microservices-new" ["l"="7.658,23.025"]
"shabbirdwd53/Kubernetes-Tutorial" ["l"="7.704,23.09"]
"tanerdiler/spring-boot-microservice-eureka-zuul-docker-gateway-kubernetes" ["l"="7.696,23.111"]
"spring-guides/gs-scheduling-tasks" ["l"="7.922,22.977"]
"spring-guides/gs-testing-web" ["l"="7.838,22.973"]
"jhipster/jhipster-sample-app-react" ["l"="7.118,22.656"]
"jhipster/react-jhipster" ["l"="7.072,22.627"]
"jhipster/jhipster-net-sample-app-template" ["l"="7.074,22.64"]
"RameshMF/todo-management-spring-boot" ["l"="7.709,22.698"]
"RameshMF/registration-login-springboot-security-thymeleaf" ["l"="7.741,22.737"]
"RameshMF/springboot-thymeleaf-crud-pagination-sorting-webapp" ["l"="7.753,22.75"]
"RameshMF/student-management-system-springboot" ["l"="7.756,22.664"]
"RameshMF/employee-management-webapp" ["l"="7.773,22.67"]
"RameshMF/jsp-servlet-jdbc-mysql-crud-tutorial" ["l"="7.811,22.638"]
"in28minutes/SpringBootWebApplicationStepByStep" ["l"="27.199,-21.613"]
"deepIify/oauth-login-fe" ["l"="7.811,23.099"]
"neel4software/SpringSecurityOAuth2" ["l"="7.397,22.718"]
"nareshbafna/oauth2" ["l"="7.349,22.738"]
"abixen/abixen-platform" ["l"="7.304,22.942"]
"powerflows/powerflows-dmn" ["l"="7.234,22.925"]
"flowing/flowing-retail" ["l"="11.337,-11.753"]
"miyoz/gurufinder" ["l"="7.262,22.933"]
"changmingxie/aggregate-framework" ["l"="6.058,22.396"]
"dayatang/dddlib" ["l"="6.063,22.349"]
"aol/micro-server" ["l"="9.135,21.273"]
"Raysmond/SpringBlog" ["l"="9.975,21.152"]
"springframeworkguru/springbootwebapp" ["l"="7.64,22.919"]
"qibaoguang/Spring-Boot-Reference-Guide" ["l"="9.889,21.339"]
"gustavoponce7/spring-login" ["l"="7.68,22.77"]
"spring-framework-guru/sfg-blog-posts" ["l"="7.711,22.955"]
"TechPrimers/spring-security-oauth-example" ["l"="7.557,22.676"]
"OmarElGabry/microservices-spring-boot" ["l"="7.496,23.005"]
"callicoder/jpa-hibernate-tutorials" ["l"="7.706,22.933"]
"stomp-js/stompjs" ["l"="7.656,23.225"]
"stomp-js/rx-stomp" ["l"="7.67,23.238"]
"stomp-js/ng2-stompjs" ["l"="7.656,23.262"]
"jmesnil/stomp-websocket" ["l"="7.644,23.169"]
"JSteunou/webstomp-client" ["l"="7.625,23.189"]
"lahsivjar/react-stomp" ["l"="7.694,23.237"]
"stomp-js/stomp-websocket" ["l"="7.636,23.235"]
"sockjs/sockjs-client" ["l"="11.797,-32.144"]
"stomp-js/samples" ["l"="7.678,23.259"]
"apache/ofbiz" ["l"="-25.577,-38.537"]
"BroadleafCommerce/ReactStarter" ["l"="7.41,23.015"]
"alkacon/opencms-core" ["l"="-5.86,-0.464"]
"jhipster/jhipster-guides" ["l"="7.034,22.644"]
"mechero/spring-boot-testing-strategies" ["l"="7.574,23.019"]
"hamvocke/spring-testing" ["l"="7.523,23.089"]
"msbaek/atdd-example" ["l"="44.652,-16.605"]
"TechPrimers/spring-security-db-example" ["l"="7.565,22.643"]
"TechPrimers/stock-price-viewer-microservices-part1" ["l"="7.519,22.718"]
"TechPrimers/spring-security-oauth-mysql-example" ["l"="7.553,22.614"]
"TechPrimers/docker-mysql-spring-boot-example" ["l"="7.542,22.633"]
"oktadeveloper/okta-spring-boot-react-crud-example" ["l"="7.797,22.882"]
"in28minutes/spring-boot-react-fullstack-examples" ["l"="27.246,-21.649"]
"oktadeveloper/spring-boot-react-example" ["l"="7.828,22.88"]
"mukundmadhav/react-springboot-mysql" ["l"="7.804,22.846"]
"in28minutes/full-stack-with-react-and-spring-boot" ["l"="27.25,-21.67"]
"pjok1122/Spring-Summary" ["l"="44.696,-16.7"]
"kdevkr/spring-demo-security" ["l"="7.831,22.861"]
"spring-cloud/spring-cloud-kubernetes" ["l"="9.445,21.167"]
"fabric8io/kubernetes-client" ["l"="9.273,21.262"]
"wxiaoqi/Spring-Cloud-AG-Admin" ["l"="6.839,18.426"]
"Nasruddin/spring-boot-based-microservices" ["l"="7.555,22.93"]
"oktadeveloper/java-microservices-examples" ["l"="7.484,22.97"]
"paascloud/paascloud-master" ["l"="6.8,18.075"]
"ityouknow/spring-cloud-examples" ["l"="6.788,18.146"]
"wxiaoqi/Spring-Cloud-Admin" ["l"="6.824,18.225"]
"changmingxie/tcc-transaction" ["l"="9.81,21.245"]
"Wechat-Group/weixin-java-tools" ["l"="6.559,18.126"]
"JMCuixy/SpringWebSocket" ["l"="7.891,22.91"]
"RameshMF/java-blog-aggregator-boot" ["l"="7.68,22.692"]
"RameshMF/spring-security-react-ant-design-polls-app" ["l"="7.682,22.711"]
"RameshMF/sagan" ["l"="7.669,22.681"]
"RameshMF/initializr" ["l"="7.65,22.688"]
"RameshMF/spring-petclinic" ["l"="7.665,22.7"]
"qqxx6661/springboot-websocket-demo" ["l"="7.975,22.946"]
"yudiandemingzi/spring-boot-websocket-study" ["l"="7.967,22.929"]
"spring-cloud-samples/turbine" ["l"="7.222,23.068"]
"tanhaiyang/springboot-rabbitMQ-websocket" ["l"="7.953,22.951"]
"scalad/LayIM" ["l"="-27.141,-43.275"]
"zhuangjiesen/WebSocket_Netty" ["l"="7.985,22.915"]
"yy1193889747/chat-demo" ["l"="7.954,22.91"]
"17661977890/websocket" ["l"="7.947,22.929"]
"jhipster/jhipster-dependencies" ["l"="7.074,22.67"]
"jhipster/jhipster-experimental-microservices" ["l"="6.997,22.73"]
"jhipster/jhipster-oh-my-zsh-plugin" ["l"="7.016,22.707"]
"cbornet/generator-jhipster-grpc" ["l"="7.019,22.719"]
"Saka7/spring-boot-angular4-boilerplate" ["l"="7.496,22.746"]
"kamalber/spring-boot-angular4-authentication" ["l"="7.519,22.735"]
"vhoang55/springboot-jwt-angular2" ["l"="7.531,22.741"]
"mpalourdio/SpringBootAngularHTML5" ["l"="7.531,22.808"]
"hantsy/angular-spring-reactive-sample" ["l"="7.567,22.901"]
"ipassynk/angular-springboot-jwt" ["l"="7.541,22.793"]
"in28minutes/full-stack-with-angular-and-spring-boot" ["l"="27.247,-21.636"]
"fromzore/alien_invasion" ["l"="7.361,23.436"]
"zhonghuasheng/30min_guides" ["l"="7.359,23.454"]
"zhonghuasheng/Chart.js" ["l"="7.325,23.433"]
"zhonghuasheng/apollo" ["l"="7.337,23.444"]
"zhonghuasheng/geek-programming-books" ["l"="7.368,23.448"]
"zhonghuasheng/mall" ["l"="7.336,23.434"]
"zhonghuasheng/mall-admin-web" ["l"="7.357,23.444"]
"zhonghuasheng/mst" ["l"="7.348,23.438"]
"zhonghuasheng/mybatis" ["l"="7.373,23.439"]
"zhonghuasheng/xld-liferay-plugin" ["l"="7.347,23.448"]
"fromzore/TreeNode" ["l"="7.371,23.429"]
"zhonghuasheng/Project" ["l"="7.327,23.445"]
"zhonghuasheng/spring4-showcase" ["l"="7.347,23.458"]
"zhonghuasheng/AngularJS" ["l"="7.335,23.455"]
"brunocleite/spring-boot-exception-handling" ["l"="7.621,22.878"]
"khoubyari/spring-boot-rest-example" ["l"="7.585,22.844"]
"lokeshgupta1981/SpringExamples" ["l"="7.63,22.802"]
"TransEmpiric/webFluxTemplate" ["l"="7.586,23.171"]
"raphaelDL/spring-webflux-security-jwt" ["l"="7.583,23.117"]
"TransEmpiric/simple-encryptor" ["l"="7.589,23.197"]
"TransEmpiric/iso-web-template" ["l"="7.577,23.2"]
"ard333/spring-boot-webflux-jjwt" ["l"="7.593,23.149"]
"duyleduc/spring-boot-webflux-security" ["l"="7.575,23.152"]
"mechero/full-reactive-stack" ["l"="7.578,23.048"]
"oktadeveloper/okta-spring-webflux-react-example" ["l"="7.562,23.176"]
"callicoder/spring-webflux-reactive-rest-api-demo" ["l"="7.637,23.05"]
"philwebb/testing-spring-boot-applications" ["l"="7.335,23.002"]
"joshlong/bootiful-microservices-config" ["l"="7.355,22.994"]
"joshlong/bootiful-reactive-microservices" ["l"="7.331,23.02"]
"spring-cloud/spring-cloud-contract" ["l"="9.36,20.996"]
"jhipster/generator-jhipster-nodejs" ["l"="7.028,22.63"]
"jhipster/jhipster-dotnetcore" ["l"="6.987,22.658"]
"jhipster/jhipster-sample-app-nodejs" ["l"="7.042,22.586"]
"jhipster/generator-jhipster-blueprint" ["l"="6.995,22.608"]
"hellokoding/registration-login-spring-hsql" ["l"="7.706,22.777"]
"hellokoding/registration-login-spring-xml-maven-jsp-mysql" ["l"="7.793,22.739"]
"gustavoponce7/SpringSecurityLoginTutorial" ["l"="7.827,22.72"]
"flindby/spring-oauth2-zuul" ["l"="7.369,22.881"]
"linking12/saluki" ["l"="8.287,19.136"]
"jhipster/jhipster-bom" ["l"="6.977,22.672"]
"bezkoder/react-jwt-auth" ["l"="26.975,-35.54"]
"bezkoder/spring-boot-refresh-token-jwt" ["l"="7.685,22.822"]
"bezkoder/vue-vuex-jwt-auth" ["l"="7.78,22.711"]
"amigoscode/login-registration-backend" ["l"="-27.552,-23.976"]
"bezkoder/spring-boot-security-postgresql" ["l"="7.733,22.762"]
"bezkoder/spring-boot-data-jpa-mysql" ["l"="7.743,22.797"]
"Yoh0xFF/java-spring-security-example" ["l"="7.657,22.833"]
"javadevjournal/javadevjournal" ["l"="7.678,22.865"]
"bezkoder/spring-boot-security-jwt-auth-mongodb" ["l"="7.764,22.765"]
"spring-projects/spring-security-samples" ["l"="9.406,21.15"]
"khandelwal-arpit/springboot-starterkit-mysql" ["l"="7.648,22.78"]
"bigzidane/springboot-rest-h2-swagger" ["l"="7.66,22.755"]
"dangdangdotcom/dubbox" ["l"="9.754,21.306"]
"dangdangdotcom/sharding-jdbc" ["l"="9.67,21.248"]
"jhipster/jhipster-sample-app-dotnetcore" ["l"="6.936,22.655"]
"jhipster/jhipster-net" ["l"="6.953,22.667"]
"hipster-labs/generator-jhipster-react" ["l"="6.983,22.707"]
"jhipster/jhipster-dotnet" ["l"="6.96,22.672"]
"rabbitmq/rabbitmq-web-stomp-examples" ["l"="7.672,23.198"]
"rabbitmq/rabbitmq-web-stomp" ["l"="7.692,23.203"]
"spring-projects/spring-loaded" ["l"="9.386,21.352"]
"joewalnes/reconnecting-websocket" ["l"="14.596,-8.024"]
"sockjs/sockjs-node" ["l"="11.86,-31.952"]
"mobile-web-messaging/StompKit" ["l"="26.724,-33.76"]
"QNJR-GROUP/EasyTransaction" ["l"="9.835,21.152"]
"apache/incubator-servicecomb-saga" ["l"="-14.291,2.823"]
"eventuate-tram/eventuate-tram-examples-java-spring-todo-list" ["l"="7.147,22.974"]
"spring-projects/spring-statemachine" ["l"="9.521,21.178"]
"spring-cloud-samples/sample-gateway-oauth2login" ["l"="7.092,23.07"]
"spring-cloud/spring-cloud-gateway" ["l"="9.53,21.222"]
"dsyer/spring-boot-angular" ["l"="7.561,22.965"]
"RameshMF/BookStoreApp-Distributed-Application" ["l"="7.638,22.677"]
"RameshMF/shopizer" ["l"="7.621,22.676"]
"vmware-archive/spring-boot-cities" ["l"="7.624,22.696"]
"mraible/jhipster6-demo" ["l"="7.063,22.559"]
"mraible/idea-live-templates" ["l"="7.056,22.523"]
"technical-rex/spring-security-jwt" ["l"="7.45,22.774"]
"sudheerj/generator-jhipster-primeng" ["l"="7.027,22.614"]
"ruddell/ignite-jhipster" ["l"="6.987,22.572"]
"sonalake/generator-jhipster-multitenancy" ["l"="7.026,22.596"]
"oktadeveloper/ionic-jhipster-starter" ["l"="7.005,22.587"]
"ruddell/generator-jhipster-ionic" ["l"="6.987,22.59"]
"merlinofcha0s/generator-jhipster-flutter" ["l"="7.012,22.57"]
"pascalgrimaud/generator-jhipster-docker" ["l"="6.973,22.634"]
"marcusdacoregio/oauth2-spring-boot" ["l"="7.495,23.067"]
"smreeti/spring-security-with-zuul" ["l"="7.474,23.061"]
"pranav-patil/spring-microservices" ["l"="7.486,23.085"]
"eiselems/spring-boot-microservices" ["l"="7.49,23.026"]
"arjunbalussery/gateway" ["l"="7.484,23.051"]
"shuaicj/zuul-auth-example" ["l"="8.37,19.224"]
"dzinot/spring-boot-2-oauth2-authorization-jwt" ["l"="7.472,23.11"]
"ewolff/microservice-kafka" ["l"="7.43,23.025"]
"ewolff/user-registration" ["l"="7.4,23.027"]
"bkielczewski/example-spring-boot-security" ["l"="7.379,22.693"]
"bigbomb/bootstrap--springsecurity----" ["l"="8.219,19.88"]
"spring-guides/tut-bookmarks" ["l"="7.348,22.622"]
"springframeworkguru/spring5-recipe-app" ["l"="7.724,23.011"]
"springframeworkguru/gof" ["l"="7.729,22.934"]
"springframeworkguru/spring-core-spring-mvc" ["l"="7.723,22.973"]
"evgeniyJ/springboot" ["l"="7.686,22.933"]
"spring-guides/tut-rest" ["l"="7.804,22.946"]
"spring-guides/top-spring-security-architecture" ["l"="7.875,23.038"]
"spring-guides/getting-started-macros" ["l"="7.909,22.994"]
"eugenp/REST-With-Spring" ["l"="8.038,23.041"]
"PanagiotisDrakatos/SpringBoot-Registration-Login-ThePerfectExample" ["l"="7.706,22.734"]
"hendisantika/Online-banking-angular-springboot-mysql" ["l"="7.735,22.68"]
"pauldragoslav/Spring-boot-Banking" ["l"="7.677,22.732"]
"juhahinkula/StudentListFinal" ["l"="7.724,22.746"]
"springframeworkguru/spring-boot-mongodb" ["l"="7.788,23.11"]
"springframeworkguru/spring5-mongo-recipe-app" ["l"="7.751,23.051"]
"jahe/spring-boot-multiple-datasources" ["l"="7.686,22.887"]
"tinmegali/Oauth2-Stateless-Authentication-with-Spring-and-JWT-Token" ["l"="7.609,22.758"]
"xebialabs/e-commerce-microservice" ["l"="7.511,22.899"]
"yugabyte/yugastore-java" ["l"="7.484,22.865"]
"inspire-software/yes-cart" ["l"="7.387,22.867"]
"developma/spring-microservice-for-e-commerce" ["l"="7.492,22.894"]
"spring-guides/gs-routing-and-filtering" ["l"="7.896,23.084"]
"spring-guides/gs-client-side-load-balancing" ["l"="7.947,23.111"]
"microservices-practical/microservices-v10" ["l"="7.339,22.878"]
"apssouza22/trading-system" ["l"="7.467,22.992"]
"confluentinc/kafka-streams-examples" ["l"="10.097,22.511"]
"isilona/microservices" ["l"="7.422,23.084"]
"vaquarkhan/flowing-retail-microservice-kafka" ["l"="7.432,23.063"]
"piomin/sample-spring-kafka-microservices" ["l"="7.585,22.802"]
"ewolff/microservice-consul" ["l"="7.435,23.101"]
"code-not-found/spring-kafka" ["l"="9.477,20.824"]
"cyela/Springboot-Web-Services" ["l"="7.603,22.701"]
"dashsaurabh/event-sourcing-axon-spring-boot" ["l"="7.349,23.132"]
"vgoldin/cqrs-eventsourcing-kafka" ["l"="7.343,23.154"]
"dashsaurabh/event-sourcing-cqrs-axon-spring-boot" ["l"="7.335,23.128"]
"jhipster/jhipster-sample-app-vuejs" ["l"="6.933,22.675"]
"fdelbrayelle/generator-jhipster-kafka" ["l"="6.955,22.655"]
"jhipster/generator-jhipster-micronaut" ["l"="6.971,22.658"]
"jhipster/jhipster-quarkus" ["l"="6.995,22.676"]
"hipster-labs/jhipster-daily-builds" ["l"="6.98,22.622"]
"eventuate-tram/eventuate-tram-core-dotnet" ["l"="7.119,23.01"]
"debezium/debezium-examples" ["l"="10.085,22.554"]
"gruelbox/transaction-outbox" ["l"="7.102,22.994"]
"debezium/debezium" ["l"="9.721,21.65"]
"tangyanbo/springmore" ["l"="7.162,22.829"]
"uncodecn/uncode-dal-all" ["l"="7.22,22.836"]
"techdev-solutions/trackr-frontend" ["l"="7.298,22.767"]
"techdev-solutions/jaxenter-showcase" ["l"="7.341,22.804"]
"IBM/charts" ["l"="7.03,23.388"]
"IBM/deploy-ibm-cloud-private" ["l"="7.117,23.309"]
"ibm-cloud-architecture/refarch-privatecloud" ["l"="7.075,23.339"]
"WASdev/ci.docker" ["l"="6.943,23.404"]
"ibm-cloud-architecture/refarch-cloudnative-kubernetes" ["l"="7.075,23.368"]
"ibm-cloud-architecture/CSMO-ICP" ["l"="7.008,23.396"]
"IBM/ubiquity" ["l"="6.983,23.377"]
"IBM/cloud-pak" ["l"="7.036,23.423"]
"IBM-Cloud/kube-samples" ["l"="7.001,23.427"]
"IBM-Cloud/terraform-provider-ibm" ["l"="6.984,23.46"]
"PacktPublishing/Spring-5.0-Microservices-Second-Edition" ["l"="7.331,22.712"]
"PacktPublishing/Mastering-Microservices-with-Java" ["l"="7.306,22.681"]
"PacktPublishing/Microservices-Deployment-Cookbook" ["l"="7.316,22.707"]
"RameshMF/Angular-10-Spring-Boot-CRUD-Full-Stack-App" ["l"="7.818,22.776"]
"RameshMF/React-Hooks-Spring-Boot-CRUD-Full-Stack-App" ["l"="7.805,22.811"]
"mightyjava/book-rest-api-reactjs" ["l"="7.81,22.795"]
"amigoscode/spring-boot-react-fullstack" ["l"="-27.556,-24"]
"scbushan05/full-stack-react-and-spring-boot" ["l"="7.783,22.806"]
"jhipster/generator-jhipster" ["l"="9.452,21.408"]
"dancancro/great-big-example-application" ["l"="30.98,-30.508"]
"microsoft/NubesGen" ["l"="6.898,22.625"]
"jdubois/nubesgen-cli" ["l"="6.87,22.617"]
"eventuate-tram/eventuate-tram-core-examples-basic" ["l"="7.145,22.954"]
"pkainulainen/spring-mvc-test-examples" ["l"="9.241,20.905"]
"skprasadu/spring-mvc-examples" ["l"="9.196,20.806"]
"bzdgn/spring-boot-restful-web-service-example" ["l"="7.622,22.785"]
"givanthak/spring-boot-rest-api-tutorial" ["l"="7.649,22.818"]
"in28minutes/in28minutes.github.io" ["l"="27.187,-21.682"]
"spring-guides/gs-uploading-files" ["l"="7.789,23.013"]
"spring-guides/gs-messaging-rabbitmq" ["l"="7.846,23.084"]
"IBM/Java-MicroProfile-on-Kubernetes" ["l"="7.412,23.111"]
"IBM/GameOn-Java-Microservices-on-Kubernetes" ["l"="7.393,23.102"]
"IBM/microservices-traffic-management-using-istio" ["l"="-14.02,-2.715"]
"IBM/Kubernetes-container-service-GitLab-sample" ["l"="7.408,23.147"]
"jhipster/jhipster-app" ["l"="6.997,22.718"]
"bastienmichaux/generator-jhipster-db-helper" ["l"="7.028,22.702"]
"hipster-labs/generator-jhipster-spring-cloud-stream" ["l"="6.963,22.702"]
"hipster-labs/generator-jhipster-entity-audit" ["l"="6.933,22.708"]
"PierreBesson/jhipster-microservices-docker" ["l"="6.955,22.717"]
"geraldhumphries/generator-jhipster-elasticsearch-reindexer" ["l"="6.971,22.73"]
"springframeworkguru/spring5-reactive-mongo-recipe-app" ["l"="7.741,23.022"]
"springframeworkguru/spring5-di-demo" ["l"="7.735,23"]
"springframeworkguru/spring5-jokes-app" ["l"="7.743,23.011"]
"RameshMF/springboot-thymeleaf-crud-tutorial" ["l"="7.773,22.732"]
"RameshMF/springboot-blog-rest-api" ["l"="7.69,22.754"]
"mkyong/core-java" ["l"="7.686,23.042"]
"mkyong/docker-java" ["l"="7.712,23.074"]
"yui/yui3" ["l"="11.329,-32.274"]
"eduardolundgren/senna" ["l"="10.419,-33.889"]
"sapo/Ink" ["l"="11.035,-33.95"]
"topcoat/topcoat" ["l"="10.945,-33.933"]
"yui/pure" ["l"="10.882,-33.868"]
"justspamjustin/junior" ["l"="11.171,-33.971"]
"zenorocha/browser-diet" ["l"="10.941,-34.052"]
"caiogondim/js-patterns-sublime-snippets" ["l"="12.716,-44.871"]
"usablica/front-end-frameworks" ["l"="10.937,-33.998"]
"zenorocha/sublime-snippets-js" ["l"="12.684,-44.873"]
"jcartledge/sublime-worksheet" ["l"="7.41,23.456"]
"bezkoder/spring-boot-jpa-paging-sorting" ["l"="7.795,22.766"]
"sahan89/ShoppingCart" ["l"="7.581,22.679"]
"RameshMF/Angular9-SpringBoot-CRUD-Tutorial" ["l"="7.603,22.638"]
"RameshMF/angular8-springboot-basic-auth-login-logout" ["l"="7.603,22.618"]
"Java-Techie-jt/springboot-angular8-crud-example" ["l"="7.728,22.596"]
"RameshMF/angular7-springboot-crud-tutorial" ["l"="7.65,22.665"]
"RameshMF/angular8-springboot-websocket" ["l"="7.665,22.659"]
"kbastani/sentiment-analysis-twitter-microservices-example" ["l"="7.389,23.126"]
"iavtar/E-Commerce-Microservice-Platform" ["l"="7.557,22.882"]
"dzinot/spring-boot-2-oauth2-resource-jwt" ["l"="7.466,23.146"]
"Liferay-Patchers-Community/liferay-portal" ["l"="7.328,23.411"]
"xpadro/spring-rest" ["l"="7.355,22.665"]
"mkuthan/example-axon" ["l"="7.256,23.091"]
"authlete/java-oauth-server" ["l"="7.711,23.162"]
"authlete/java-resource-server" ["l"="7.739,23.19"]
"authlete/authlete-java-common" ["l"="7.721,23.187"]
"authlete/authlete-java-jaxrs" ["l"="7.736,23.175"]
"andifalk/authorizationserver" ["l"="7.595,23.032"]
"authlete/spring-oauth-server" ["l"="7.752,23.21"]
"rstoyanchev/spring-websocket-test" ["l"="7.62,23.13"]
"reactor/reactor" ["l"="9.196,21.451"]
"SpringSource/spring-hateoas" ["l"="8.158,24.611"]
"spring-projects/spring-xd" ["l"="9.501,20.955"]
"sockjs/sockjs-protocol" ["l"="12.076,-31.945"]
"RaymondCoplin/spring-boot-angular4-material-boilerplate" ["l"="7.487,22.72"]
"artemMartynenko/spring-cloud-gateway-oauth2-sso-sample-application" ["l"="7.059,23.085"]
"benwilcock/spring-cloud-gateway-demo" ["l"="7.03,23.077"]
"zhulinn/Online-Shopping-Store" ["l"="7.558,22.737"]
"mjstewart/hotel-reservation-springmvc" ["l"="7.553,22.714"]
"authlete/spring-resource-server" ["l"="7.771,23.23"]
"bijukunjummen/spring-cloud-ping-pong-sample" ["l"="7.274,22.876"]
"sunnykaka/mysteam" ["l"="7.201,23.013"]
"zpng/spring-cloud-7simple" ["l"="7.233,22.903"]
"charlesvhe/spring-cloud-practice" ["l"="8.252,19.112"]
"sungang1120/genesis" ["l"="7.246,22.888"]
"ddewaele/spring-cloud-security-samples" ["l"="7.228,22.886"]
"manish-in-java/spring-security-rest" ["l"="7.444,22.738"]
"Java-Techie-jt/spring-security-angular-example" ["l"="7.751,22.565"]
"pilloPl/event-source-cqrs-sample" ["l"="7.26,23.104"]
"pellse/assembler" ["l"="7.345,23.106"]
"ewolff/microservice-istio" ["l"="7.448,23.078"]
"Throyer/springboot-api-rest-example" ["l"="7.666,22.785"]
"codingspecialist/Springboot-Security-JWT-Easy" ["l"="7.941,23.224"]
"codingspecialist/-Springboot-Security-OAuth2.0-V3" ["l"="7.923,23.207"]
"codingspecialist/Sringboot-Security-Basic-V1" ["l"="7.954,23.235"]
"TechPrimers/stock-price-viewer-microservices-part2-final" ["l"="7.525,22.675"]
"fraktalio/fmodel" ["l"="7.224,23.255"]
"fraktalio/fmodel-demos" ["l"="7.257,23.203"]
"nomisRev/kotlin-kafka" ["l"="7.205,23.281"]
"hantsy/spring-reactive-sample" ["l"="9.18,21.122"]
"srs/gradle-node-plugin" ["l"="6.63,20.609"]
"springframeworkguru/sfg-di" ["l"="7.727,23.048"]
"springframeworkguru/tdd-by-example" ["l"="7.835,22.951"]
"springframeworkguru/spring-boot-rabbitmq-example" ["l"="7.744,23.069"]
"in28minutes/jpa-with-hibernate" ["l"="27.215,-21.637"]
"springframeworkguru/spring5-mvc-rest" ["l"="7.753,23.026"]
"spring-guides/gs-accessing-data-mongodb" ["l"="7.945,23.037"]
"spring-guides/gs-relational-data-access" ["l"="7.86,22.954"]
"kaenry/spring-boot-magneto" ["l"="7.47,22.771"]
"spring-guides/gs-gradle" ["l"="7.904,23.013"]
"olivergierke/repositories-deepdive" ["l"="8.316,24.559"]
"rwinch/gs-spring-security-3.2" ["l"="7.266,22.803"]
"michael-simons/biking2" ["l"="6.263,20.32"]
"ghillert/botanic-ng" ["l"="7.292,22.819"]
"WASdev/ci.docker.websphere-traditional" ["l"="6.915,23.418"]
"amirbarkal/websphere-nd-docker" ["l"="6.892,23.429"]
"springframeworkguru/spring5-mysql-recipe-app" ["l"="7.771,23.085"]
"springframeworkguru/spring5-webflux-rest" ["l"="7.767,23.048"]
"springframeworkguru/spring-rest-client-examples" ["l"="7.749,22.999"]
"g00glen00b/spring-websockets" ["l"="7.527,23.194"]
"DiUS/pact-jvm" ["l"="8.443,-29.684"]
"bonigarcia/mastering-junit5" ["l"="20.929,-28.159"]
"hamvocke/testing-microservices-ebook" ["l"="7.507,23.144"]
"pact-foundation/pact-ruby" ["l"="8.256,-30.704"]
"junit-team/junit5-samples" ["l"="9.281,21.525"]
"TNG/ArchUnit-Examples" ["l"="9.009,21.111"]
"bonigarcia/webdrivermanager" ["l"="20.812,-28.26"]
"andreschaffer/microservices-testing-examples" ["l"="7.503,23.171"]
"razee-io/Razee" ["l"="6.985,23.518"]
"IBM/cloud-operators" ["l"="6.987,23.493"]
"nirmata/kyverno" ["l"="-10.763,0.555"]
"sunnykaka/mysteam-config-repo" ["l"="7.163,23.031"]
"xuminwlt/j360-cloud-all" ["l"="9.04,18.789"]
"eventuate-foundation/eventuate-messaging-kafka" ["l"="7.119,22.958"]
"eventuate-foundation/eventuate-common" ["l"="7.129,22.951"]
"spring-cloud-samples/sample-zuul-filters" ["l"="7.141,23.073"]
"rcherara/microservice-architecture" ["l"="7.51,23.032"]
"bezkoder/spring-boot-login-example" ["l"="7.753,22.781"]
"ilscipio/scipio-erp" ["l"="-25.604,-38.567"]
"webpagebytes/cms" ["l"="7.268,22.838"]
"spring-projects/spring-data-r2dbc" ["l"="9.19,21.076"]
"PacktPublishing/Hands-On-Reactive-Programming-with-Reactor" ["l"="7.349,22.709"]
"PacktPublishing/Hands-On-Spring-Security-5-for-Reactive-Applications" ["l"="7.34,22.686"]
"PacktPublishing/Mastering-Microservices-with-Java-Third-Edition" ["l"="7.285,22.64"]
"pkainulainen/spring-batch-examples" ["l"="9.544,20.744"]
"spring-guides/gs-async-method" ["l"="7.926,23.07"]
"metal/metal.js" ["l"="7.224,23.437"]
"jordanamorais/lfrgs-frontend-samples" ["l"="7.236,23.402"]
"WendellAdriel/spring-microservices" ["l"="7.472,23.02"]
"spring-cloud-samples/fortune-teller" ["l"="7.229,23.089"]
"Codearte/accurest" ["l"="5.405,22.824"]
"kbastani/spring-boot-graph-processing-example" ["l"="28.984,29.928"]
"bijukunjummen/sample-spring-hystrix" ["l"="7.194,23.079"]
"sdeleuze/spring-reactive-playground" ["l"="47.374,-3.583"]
"rwinch/spring-security-0-to-4.0" ["l"="7.233,22.793"]
"fpozzobon/webstomp-obs" ["l"="7.62,23.213"]
"koushikkothagal/betterreads-webapp" ["l"="7.638,22.473"]
"koushikkothagal/inbox-app" ["l"="7.642,22.441"]
"spring-guides/gs-consuming-rest-angularjs" ["l"="7.846,23.047"]
"spring-guides/gs-accessing-mongodb-data-rest" ["l"="7.855,23.061"]
"callicoder/spring-boot-quartz-scheduler-email-scheduling" ["l"="7.76,22.925"]
"callicoder/java-read-write-excel-file-using-apache-poi" ["l"="7.791,22.913"]
"callicoder/spring-boot-postgresql-jpa-hibernate-rest-api-demo" ["l"="7.769,22.889"]
"callicoder/spring-boot-mongodb-angular-todo-app" ["l"="7.743,22.887"]
"callicoder/spring-boot-configuration-properties-demo" ["l"="7.744,22.917"]
"callicoder/kotlin-spring-boot-jpa-rest-api-demo" ["l"="7.751,22.901"]
"callicoder/spring-webclient-webtestclient-demo" ["l"="7.728,22.872"]
"spring-guides/tut-spring-boot-kotlin" ["l"="44.656,-16.684"]
"sdeleuze/spring-boot-kotlin-demo" ["l"="47.504,-3.492"]
"zianwar/springboot-crud-demo" ["l"="7.733,22.781"]
"hantsy/spring-webmvc-jwt-sample" ["l"="7.709,22.827"]
"sqshq/ELK-docker" ["l"="7.323,22.893"]
"gustavoponce7/SpringSecurityUserDetailsService" ["l"="7.866,22.697"]
"gustavoponce7/SpringBootRESTfulTutorial" ["l"="7.855,22.709"]
"SilverNine/spring-boot-jwt-tutorial" ["l"="7.867,23.152"]
"mraible/jhipster4-demo" ["l"="7.102,22.764"]
"mraible/jhipster5-demo" ["l"="7.083,22.774"]
"dhavaln/spring-rest-boilerplate" ["l"="7.464,22.738"]
"spring-guides/gs-messaging-jms" ["l"="7.985,23.054"]
"ihuaylupo/manning-smia" ["l"="5.067,19.578"]
"Robbert1/boot-stateless-csrf" ["l"="7.391,22.745"]
"Robbert1/boot-stateless-social" ["l"="7.4,22.735"]
"mkyong/maven-examples" ["l"="7.68,22.998"]
"mkyong/java-logging" ["l"="7.634,22.977"]
"ipselon/sdr-bootstrap-prepack" ["l"="7.78,22.788"]
"noveogroup-amorgunov/spring-mvc-react" ["l"="7.763,22.802"]
"jhipster/jhipster-bot" ["l"="7.067,22.607"]
"jhipster/eslint-config-jhipster" ["l"="7.056,22.613"]
"ehsaniara/spring-boot-multi-data-source" ["l"="7.744,22.968"]
"PacktPublishing/Full-Stack-Development-with-JHipster" ["l"="7.084,22.798"]
"mraible/microservices-for-the-masses" ["l"="7.119,22.749"]
"robmelfi/21-points-react" ["l"="7.108,22.783"]
"arnaugarcia/realstatecamp" ["l"="7.114,22.798"]
"sfav/axon-springboot-cloud" ["l"="7.317,23.148"]
"rid17pawar/HospitalManagement" ["l"="7.768,22.63"]
"spring-projects/spring-hateoas" ["l"="8.343,24.593"]
"odrotbohm/spring-restbucks" ["l"="8.941,20.996"]
"spring-projects/spring-session-data-mongodb-examples" ["l"="7.777,22.947"]
"TechPrimers/spring-boot-kafka-producer-example" ["l"="7.494,22.579"]
"TechPrimers/spring-boot-kafka-consumer-example" ["l"="7.488,22.545"]
"ttrelle/spring-data-examples" ["l"="7.206,22.664"]
"Fruzenshtein/security-spr" ["l"="6.531,18.719"]
"vinsguru/vinsguru-blog-code-samples" ["l"="7.688,22.648"]
"vinsguru/webflux-patterns" ["l"="7.716,22.577"]
"GNico/spring-eshop" ["l"="7.601,22.686"]
"xpinjection/java8-extensions" ["l"="7.621,23.37"]
"SaiUpadhyayula/angular-reddit-clone" ["l"="7.62,22.989"]
"SaiUpadhyayula/springboot-microservices-project" ["l"="7.634,23.02"]
"SaiUpadhyayula/spring-ng-blog" ["l"="7.626,23.004"]
"SaiUpadhyayula/SpringShoppingStore" ["l"="7.617,22.936"]
"arocketman/Spring-oauth2-jpa-example" ["l"="7.549,22.591"]
"springframeworkguru/spring-boot-postgress-example" ["l"="7.856,22.883"]
"callicoder/spring-boot-heroku-deployment-example" ["l"="7.81,22.896"]
"spring-guides/gs-rest-hateoas" ["l"="7.816,23.047"]
"spring-guides/gs-testing-restdocs" ["l"="7.803,23.031"]
"devsullo/ng2-STOMP-Over-WebSocket" ["l"="7.676,23.297"]
"stomp-js/ng2-stompjs-angular7" ["l"="7.658,23.289"]
"oktadev/jhipster-microservices-example" ["l"="7.557,22.983"]
"javatodev/internet-banking-concept-microservices" ["l"="7.597,23.009"]
"TechPrimers/learning-path-spring-boot-microservices" ["l"="7.504,22.683"]
"TechPrimers/whats-your-architecture" ["l"="7.506,22.623"]
"TechPrimers/learning-path-system-design" ["l"="7.507,22.641"]
"bezkoder/node-js-jwt-auth" ["l"="27.004,-35.569"]
"bezkoder/vue-upload-files" ["l"="7.811,22.685"]
"bezkoder/vue-typescript-crud" ["l"="7.828,22.68"]
"christiannwamba/vue-auth-vuex" ["l"="24.903,14.97"]
"bezkoder/vue-pagination-axios" ["l"="7.805,22.697"]
"bezkoder/vue-axios-refresh-token" ["l"="7.82,22.696"]
"bezkoder/vue-js-client-crud" ["l"="7.807,22.671"]
"bezkoder/vuetify-file-upload" ["l"="7.795,22.685"]
"PaskoZhelev/banking-app-spring" ["l"="7.698,22.708"]
"PierreBesson/generator-jhipster-banner" ["l"="6.953,22.732"]
"springframeworkguru/testing-java-junit5" ["l"="7.887,22.941"]
"springframeworkguru/testing-junit5-mockito" ["l"="7.872,22.934"]
"eugenp/learn-spring-security" ["l"="8.076,23.054"]
"eugenp/learn-spring" ["l"="8.06,23.064"]
"eugenp/java-stackexchange" ["l"="8.065,23.025"]
"eugenp/selenium" ["l"="8.078,23.038"]
"oktadeveloper/spring-boot-angular-example" ["l"="7.518,23.011"]
"oktadeveloper/okta-spring-boot-2-angular-9-example" ["l"="7.591,22.993"]
"jhipster/generator-jhipster-svelte" ["l"="6.917,22.608"]
"tikui/tikui" ["l"="6.916,22.645"]
"jhipster/generator-jhipster-native" ["l"="6.921,22.629"]
"SaiUpadhyayula/SpringAngularEcommerce-frontend" ["l"="7.605,22.913"]
"RameshMF/springboot-angular-mongodb-crud-tutorial" ["l"="7.591,22.564"]
"koushikkothagal/messenger" ["l"="7.688,22.503"]
"koushikkothagal/advanced-jaxrs" ["l"="7.672,22.554"]
"koushikkothagal/javabrains-site-old" ["l"="7.702,22.481"]
"koushikkothagal/message-app" ["l"="7.688,22.481"]
"rakshitshah94/Angular2-SpringBoot-Example" ["l"="7.407,22.64"]
"mploed/event-driven-spring-boot" ["l"="5.927,22.345"]
"kbastani/spring-cloud-polyglot-persistence-example" ["l"="7.368,23.095"]
"Java-Techie-jt/spring-security-jwt-example" ["l"="7.78,22.534"]
"Java-Techie-jt/spring-data-redis-cache" ["l"="7.788,22.509"]
"Java-Techie-jt/angular-jwt-client" ["l"="7.807,22.513"]
"liferay/liferay-frontend-guidelines" ["l"="7.252,23.362"]
"keysh/jwt-security" ["l"="7.597,22.978"]
"RameshMF/servlet-tutorial" ["l"="7.851,22.601"]
"ordina-jworks/microservices-dashboard-server" ["l"="7.155,23.112"]
"VanRoy/spring-cloud-dashboard" ["l"="7.141,23.134"]
"jkschneider/spring-metrics" ["l"="7.177,23.12"]
"making/spring-boot-db-samples" ["l"="7.171,23.139"]
"OmarElgabry/microservices-spring-boot" ["l"="7.51,23.05"]
"ibm-cloud-architecture/terraform-module-icp-deploy" ["l"="7.114,23.331"]
"IBM/container-service-getting-started-wt" ["l"="7.084,23.312"]
"microservices-practical/microservices-v9" ["l"="7.285,22.851"]
"microservices-practical/microservices-v8" ["l"="7.304,22.843"]
"microservices-practical/microservices-v3" ["l"="7.305,22.857"]
"Lezeper/spring-boot-ecommerce-dailyshop" ["l"="7.507,22.791"]
"eventuate-examples/eventuate-examples-java-aws-lambda-todo-list" ["l"="7.195,23.043"]
"emiloberg/Liferay-Instant-Deploy-Theme-Changes-Gulp-Script" ["l"="7.277,23.463"]
"jhipster/jhipster-openid-connect" ["l"="6.981,22.753"]
"spring-guides/gs-service-registration-and-discovery" ["l"="7.931,23.121"]
"making/demo-oauth2-login" ["l"="7.438,22.844"]
"cpapidas/Spring-Boot-OAuth2-JWT-MySQL" ["l"="7.424,22.803"]
"ameizi/oltu-oauth2-example" ["l"="8.342,19.201"]
"malike/sso-auth" ["l"="7.442,22.811"]
"newnil/oauth2-family-barrel" ["l"="8.583,18.155"]
"juanzero000/spring-boot-oauth2-sso" ["l"="7.442,22.833"]
"IBM/cloud-pak-cli" ["l"="7.042,23.445"]
"joshlong/bootiful-kotlin-online-training" ["l"="7.319,23.058"]
"spring-guides/gs-centralized-configuration" ["l"="7.85,23.11"]
"ibm-cloud-architecture/refarch-cloudnative" ["l"="7.084,23.389"]
"ibm-cloud-architecture/refarch-cloudnative-devops-kubernetes" ["l"="7.063,23.39"]
"lahsivjar/spring-websocket-template" ["l"="7.723,23.275"]
"springframeworkguru/spring-core-devops" ["l"="7.747,22.984"]
"vinsguru/java-reactive-programming-course" ["l"="7.736,22.524"]
"vinsguru/spring-webflux-course" ["l"="7.748,22.494"]
"anton-liauchuk/educational-platform" ["l"="27.49,-20.204"]
"brianchandotcom/liferay-plugins" ["l"="7.412,23.357"]
"ibm-cloud-architecture/ibm-cloud-stencils" ["l"="6.94,23.466"]
"IBM-Cloud/ansible-collection-ibm" ["l"="6.964,23.477"]
"open-toolchain/sdk" ["l"="7.007,23.466"]
"IBM-Cloud/ibm-cloud-developer-tools" ["l"="6.959,23.498"]
"IBM-Cloud/bluemix-go" ["l"="7.001,23.481"]
"softlayer/terraform-provider-softlayer" ["l"="6.936,23.491"]
"ibm-messaging/event-streams-samples" ["l"="6.957,23.45"]
"WASdev/ci.maven" ["l"="6.902,23.395"]
"pgrimard/spring-boot-react" ["l"="7.831,22.811"]
"hcadavid/spring4-rest-oauth2" ["l"="7.387,22.671"]
"RameshMF/spring-boot-websocket-chat-demo" ["l"="7.701,22.68"]
"jhipster/jhipster-artwork" ["l"="6.976,22.687"]
"pilloPl/functional-eventsourcing" ["l"="7.225,23.131"]
"andreschaffer/one-click-microservice" ["l"="7.496,23.206"]
"lavenderx/modern-java-web-scaffold" ["l"="7.923,22.796"]
"simasch/simon" ["l"="7.921,22.824"]
"wqbill/my-first-vue" ["l"="7.902,22.817"]
"kevin70/springboot-vue-webpack-examples" ["l"="7.942,22.812"]
"IBM/ubiquity-k8s" ["l"="6.961,23.373"]
"IBM/ubiquity-docker-plugin" ["l"="6.964,23.386"]
"IBM/pyxcli" ["l"="6.969,23.358"]
"webpagebytes/general-cms-plugins" ["l"="7.245,22.828"]
"bryceosterhaus/metal-devtools" ["l"="7.21,23.459"]
"ibm-cloud-architecture/icp-admin-bootcamp" ["l"="7.051,23.332"]
"ibm-cloud-architecture/icp-backup" ["l"="7.052,23.348"]
"paucls/runbook-ddd-kotlin" ["l"="7.274,23.232"]
"WASdev/ci.maven.tools" ["l"="6.88,23.395"]
"akwei/halo-dal" ["l"="8.835,20.094"]
"codingspecialist/Springboot-Security-OAuth2.0-V2" ["l"="7.974,23.254"]
"lahsivjar/react-talk" ["l"="7.736,23.293"]
"spring-guides/gs-consuming-rest-jquery" ["l"="7.874,23.07"]
"AxonFramework/extension-reactor" ["l"="7.151,23.232"]
"softlayer/softlayer-go" ["l"="6.917,23.505"]
"pascalgrimaud/generator-jhipster-ci" ["l"="6.937,22.623"]
"Nandtel/ScheduleService" ["l"="7.408,22.556"]
"smcvb/gamerental" ["l"="7.131,23.251"]
"spring-guides/gs-circuit-breaker" ["l"="7.978,23.131"]
"arjunbalussery/cart" ["l"="7.472,23.078"]
"hipster-labs/generator-jhipster-docker-compose" ["l"="6.932,22.73"]
"joshlong/spring-doge-microservice-configuration" ["l"="7.256,22.877"]
}