digraph G {
"ChrisCummins/phd" -> "ChrisCummins/paper-end2end-dl"
"ChrisCummins/phd" -> "spcl/ncc"
"plaidml/plaidml" -> "apple/tensorflow_macos" ["e"=1]
"plaidml/plaidml" -> "dmlc/tvm"
"plaidml/plaidml" -> "NervanaSystems/ngraph"
"plaidml/plaidml" -> "RadeonOpenCompute/ROCm" ["e"=1]
"plaidml/plaidml" -> "hughperkins/tf-coriander" ["e"=1]
"plaidml/plaidml" -> "facebookresearch/TensorComprehensions"
"plaidml/plaidml" -> "pytorch/glow"
"plaidml/plaidml" -> "uber/horovod" ["e"=1]
"plaidml/plaidml" -> "google/iree"
"plaidml/plaidml" -> "halide/Halide"
"plaidml/plaidml" -> "onnx/onnx" ["e"=1]
"plaidml/plaidml" -> "tensorflow/mlir"
"plaidml/plaidml" -> "jhfjhfj1/autokeras" ["e"=1]
"plaidml/plaidml" -> "apple/coremltools" ["e"=1]
"plaidml/plaidml" -> "ROCmSoftwarePlatform/tensorflow-upstream" ["e"=1]
"IBM/tensorflow-large-model-support" -> "IBM/pytorch-large-model-support"
"IBM/tensorflow-large-model-support" -> "IBM/powerai"
"espressif/tflite-micro-esp-examples" -> "espressif/esp-nn"
"espressif/tflite-micro-esp-examples" -> "tanakamasayuki/Arduino_TensorFlowLite_ESP32"
"espressif/tflite-micro-esp-examples" -> "atomic14/tensorflow-lite-esp32" ["e"=1]
"espressif/tflite-micro-esp-examples" -> "tensorflow/tflite-micro"
"espressif/tflite-micro-esp-examples" -> "espressif/esp-dl" ["e"=1]
"enfiskutensykkel/ssd-gpu-dma" -> "NVIDIA/gds-nvidia-fs"
"enfiskutensykkel/ssd-gpu-dma" -> "kaigai/nvme-kmod"
"enfiskutensykkel/ssd-gpu-dma" -> "NVIDIA/gdrcopy"
"enfiskutensykkel/ssd-gpu-dma" -> "nvmedirect/nvmedirect" ["e"=1]
"NVIDIA/nccl" -> "NVIDIA/nccl-tests"
"NVIDIA/nccl" -> "facebookincubator/gloo"
"NVIDIA/nccl" -> "NVIDIA/cutlass"
"NVIDIA/nccl" -> "bytedance/byteps" ["e"=1]
"NVIDIA/nccl" -> "NVIDIA/gdrcopy"
"NVIDIA/nccl" -> "NVlabs/cub"
"NVIDIA/nccl" -> "open-mpi/ompi"
"NVIDIA/nccl" -> "baidu-research/baidu-allreduce"
"NVIDIA/nccl" -> "baidu-research/DeepBench"
"NVIDIA/nccl" -> "dmlc/ps-lite" ["e"=1]
"NVIDIA/nccl" -> "NVIDIA/DALI" ["e"=1]
"NVIDIA/nccl" -> "NVIDIA/Megatron-LM" ["e"=1]
"NVIDIA/nccl" -> "facebookresearch/fairscale" ["e"=1]
"NVIDIA/nccl" -> "dmlc/tvm"
"NVIDIA/nccl" -> "NVIDIA/FasterTransformer" ["e"=1]
"tensorflow/tflite-micro" -> "espressif/tflite-micro-esp-examples"
"tensorflow/tflite-micro" -> "tensorflow/tflite-micro-arduino-examples"
"tensorflow/tflite-micro" -> "gigwegbe/tinyml-papers-and-projects"
"tensorflow/tflite-micro" -> "mlcommons/tiny"
"tensorflow/tflite-micro" -> "majianjia/nnom" ["e"=1]
"tensorflow/tflite-micro" -> "mit-han-lab/tinyml"
"tensorflow/tflite-micro" -> "uTensor/uTensor"
"tensorflow/tflite-micro" -> "mit-han-lab/mcunet"
"tensorflow/tflite-micro" -> "mit-han-lab/tinyengine"
"tensorflow/tflite-micro" -> "ARM-software/ML-zoo"
"tensorflow/tflite-micro" -> "cpetig/tflite_micro_compiler"
"tensorflow/tflite-micro" -> "raspberrypi/pico-tflmicro" ["e"=1]
"tensorflow/tflite-micro" -> "ARM-software/ML-KWS-for-MCU" ["e"=1]
"tensorflow/tflite-micro" -> "eloquentarduino/EloquentTinyML"
"tensorflow/tflite-micro" -> "ARM-software/ML-examples"
"udacity/cs344" -> "depctg/udacity-cs344-colab"
"udacity/cs344" -> "ibebrett/CUDA-CS344"
"udacity/cs344" -> "thrust/thrust"
"udacity/cs344" -> "NVlabs/cub"
"udacity/cs344" -> "moderngpu/moderngpu"
"udacity/cs344" -> "ArchaeaSoftware/cudahandbook"
"udacity/cs344" -> "NVIDIA/nccl"
"udacity/cs344" -> "NVIDIA/cuda-samples"
"udacity/cs344" -> "NVIDIA-developer-blog/code-samples"
"udacity/cs344" -> "parallel-forall/code-samples"
"udacity/cs344" -> "NVIDIA/cutlass"
"udacity/cs344" -> "akrizhevsky/cuda-convnet2" ["e"=1]
"udacity/cs344" -> "PacktPublishing/Learn-CUDA-Programming"
"udacity/cs344" -> "tbennun/cudnn-training"
"udacity/cs344" -> "chiphuyen/tf-stanford-tutorials" ["e"=1]
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" -> "LitLeo/OpenCUDA"
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" -> "Syencil/tensorRT" ["e"=1]
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" -> "Tony-Tan/CUDA_Freshman"
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" -> "brucefan1983/CUDA-Programming"
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" -> "BBuf/Image-processing-algorithm" ["e"=1]
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" -> "PacktPublishing/Learn-CUDA-Programming"
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" -> "PacktPublishing/Hands-On-GPU-Programming-with-Python-and-CUDA"
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" -> "PacktPublishing/Learn-OpenCV-4-By-Building-Projects-Second-Edition" ["e"=1]
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" -> "LitLeo/TensorRT_Tutorial" ["e"=1]
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" -> "msnh2012/Msnhnet"
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" -> "linghu8812/tensorrt_inference" ["e"=1]
"keroro824/HashingDeepLearning" -> "RUSH-LAB/SLIDE"
"keroro824/HashingDeepLearning" -> "IntelLabs/SLIDE_opt_ia"
"keroro824/HashingDeepLearning" -> "google/neural-tangents" ["e"=1]
"keroro824/HashingDeepLearning" -> "tensorflow/mesh" ["e"=1]
"keroro824/HashingDeepLearning" -> "RUSH-LAB/Flash"
"keroro824/HashingDeepLearning" -> "openai/blocksparse"
"keroro824/HashingDeepLearning" -> "plaidml/plaidml"
"keroro824/HashingDeepLearning" -> "pytorch/glow"
"keroro824/HashingDeepLearning" -> "flexflow/FlexFlow"
"keroro824/HashingDeepLearning" -> "jiazhihao/TASO"
"keroro824/HashingDeepLearning" -> "gpgpu-sim/gpgpu-sim_distribution" ["e"=1]
"keroro824/HashingDeepLearning" -> "openai/triton" ["e"=1]
"keroro824/HashingDeepLearning" -> "cybertronai/gradient-checkpointing"
"keroro824/HashingDeepLearning" -> "tomgoldstein/loss-landscape" ["e"=1]
"keroro824/HashingDeepLearning" -> "neuralmagic/deepsparse" ["e"=1]
"nv-legate/cunumeric" -> "nv-legate/legate.core"
"nv-legate/cunumeric" -> "NVIDIA/cuda-python"
"nv-legate/cunumeric" -> "nv-legate/legate.pandas"
"nv-legate/cunumeric" -> "StanfordLegion/legion" ["e"=1]
"nv-legate/cunumeric" -> "FZJ-JSC/tutorial-multi-gpu"
"msnh2012/Msnhnet" -> "BBuf/ArmNeonOptimization"
"msnh2012/Msnhnet" -> "tpoisonooo/how-to-optimize-gemm"
"msnh2012/Msnhnet" -> "BBuf/Darknet" ["e"=1]
"msnh2012/Msnhnet" -> "aovoc/nnieqat-pytorch" ["e"=1]
"msnh2012/Msnhnet" -> "huawei-noah/bolt"
"msnh2012/Msnhnet" -> "openppl-public/ppl.nn"
"msnh2012/Msnhnet" -> "Syencil/tensorRT" ["e"=1]
"msnh2012/Msnhnet" -> "msnh2012/CasiaLabeler"
"msnh2012/Msnhnet" -> "zchrissirhcz/awesome-ncnn" ["e"=1]
"msnh2012/Msnhnet" -> "dlunion/tensorRTIntegrate" ["e"=1]
"msnh2012/Msnhnet" -> "BUG1989/caffe-int8-convert-tools"
"msnh2012/Msnhnet" -> "deepglint/EasyQuant" ["e"=1]
"msnh2012/Msnhnet" -> "zerollzeng/tiny-tensorrt" ["e"=1]
"msnh2012/Msnhnet" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"msnh2012/Msnhnet" -> "Syencil/mobile-yolov5-pruning-distillation" ["e"=1]
"google/XNNPACK" -> "pytorch/QNNPACK"
"google/XNNPACK" -> "google/ruy"
"google/XNNPACK" -> "google/gemmlowp"
"google/XNNPACK" -> "huawei-noah/bolt"
"google/XNNPACK" -> "oneapi-src/oneDNN"
"google/XNNPACK" -> "microsoft/nnfusion"
"google/XNNPACK" -> "google/iree"
"google/XNNPACK" -> "pytorch/FBGEMM"
"google/XNNPACK" -> "tensorflow/runtime"
"google/XNNPACK" -> "Maratyszcza/NNPACK"
"google/XNNPACK" -> "flame/how-to-optimize-gemm"
"google/XNNPACK" -> "ARM-software/armnn"
"google/XNNPACK" -> "NVIDIA/cutlass"
"google/XNNPACK" -> "ARM-software/ComputeLibrary"
"google/XNNPACK" -> "openppl-public/ppl.nn"
"andravin/wincnn" -> "BUG1989/caffe-int8-convert-tools"
"andravin/wincnn" -> "xingyul/sparse-winograd-cnn"
"andravin/wincnn" -> "google/gemmlowp"
"andravin/wincnn" -> "flame/how-to-optimize-gemm"
"andravin/wincnn" -> "pytorch/QNNPACK"
"andravin/wincnn" -> "Maratyszcza/NNPACK"
"andravin/wincnn" -> "huawei-noah/bolt"
"andravin/wincnn" -> "xuqiantong/CUDA-Winograd"
"andravin/wincnn" -> "NervanaSystems/maxas"
"andravin/wincnn" -> "Tencent/FeatherCNN"
"andravin/wincnn" -> "IntelLabs/SkimCaffe" ["e"=1]
"andravin/wincnn" -> "xingyul/Sparse-Winograd-CNN"
"andravin/wincnn" -> "flame/blislab"
"andravin/wincnn" -> "hfp/libxsmm"
"andravin/wincnn" -> "tpoisonooo/how-to-optimize-gemm"
"dmlc/tvm" -> "dmlc/nnvm"
"dmlc/tvm" -> "halide/Halide"
"dmlc/tvm" -> "pytorch/glow"
"dmlc/tvm" -> "tensorflow/mlir"
"dmlc/tvm" -> "NervanaSystems/distiller"
"dmlc/tvm" -> "Microsoft/MMdnn" ["e"=1]
"dmlc/tvm" -> "alibaba/MNN" ["e"=1]
"dmlc/tvm" -> "Tencent/PocketFlow"
"dmlc/tvm" -> "XiaoMi/mace"
"dmlc/tvm" -> "facebookresearch/TensorComprehensions"
"dmlc/tvm" -> "tqchen/tinyflow"
"dmlc/tvm" -> "pytorch/QNNPACK"
"dmlc/tvm" -> "Maratyszcza/NNPACK"
"dmlc/tvm" -> "google/gemmlowp"
"dmlc/tvm" -> "bytedance/byteps" ["e"=1]
"google/gemmlowp" -> "pytorch/QNNPACK"
"google/gemmlowp" -> "flame/how-to-optimize-gemm"
"google/gemmlowp" -> "Maratyszcza/NNPACK"
"google/gemmlowp" -> "andravin/wincnn"
"google/gemmlowp" -> "ARM-software/ComputeLibrary"
"google/gemmlowp" -> "NervanaSystems/distiller"
"google/gemmlowp" -> "dmlc/tvm"
"google/gemmlowp" -> "NVIDIA/cutlass"
"google/gemmlowp" -> "pytorch/FBGEMM"
"google/gemmlowp" -> "Tencent/FeatherCNN"
"google/gemmlowp" -> "pytorch/glow"
"google/gemmlowp" -> "NervanaSystems/maxas"
"google/gemmlowp" -> "pmgysel/caffe" ["e"=1]
"google/gemmlowp" -> "BUG1989/caffe-int8-convert-tools"
"google/gemmlowp" -> "MatthieuCourbariaux/BinaryNet" ["e"=1]
"apache/tvm" -> "BBuf/tvm_mlir_learn"
"apache/tvm" -> "merrymercy/awesome-tensor-compilers"
"apache/tvm" -> "NVIDIA/TensorRT" ["e"=1]
"apache/tvm" -> "NVIDIA/cutlass"
"apache/tvm" -> "openai/triton" ["e"=1]
"apache/tvm" -> "Oneflow-Inc/oneflow" ["e"=1]
"apache/tvm" -> "NVIDIA/FasterTransformer" ["e"=1]
"apache/tvm" -> "triton-inference-server/server" ["e"=1]
"apache/tvm" -> "openmlsys/openmlsys-zh"
"apache/tvm" -> "facebookincubator/AITemplate" ["e"=1]
"apache/tvm" -> "alibaba/MNN" ["e"=1]
"apache/tvm" -> "microsoft/onnxruntime" ["e"=1]
"apache/tvm" -> "daquexian/onnx-simplifier" ["e"=1]
"apache/tvm" -> "flame/how-to-optimize-gemm"
"apache/tvm" -> "openppl-public/ppl.nn"
"intel/clDNN" -> "intel/mkl-dnn"
"intel/clDNN" -> "opencv/dldt" ["e"=1]
"intel/clDNN" -> "intel/clGPU" ["e"=1]
"intel/clDNN" -> "intel/compute-samples" ["e"=1]
"intel/clDNN" -> "intel/opencl-intercept-layer" ["e"=1]
"intel/clDNN" -> "hughperkins/DeepCL" ["e"=1]
"intel/clDNN" -> "jrprice/Oclgrind" ["e"=1]
"intel/clDNN" -> "intel/compute-runtime" ["e"=1]
"intel/clDNN" -> "PaddlePaddle/Anakin"
"intel/clDNN" -> "intel/intel-graphics-compiler" ["e"=1]
"intel/mkl-dnn" -> "NervanaSystems/ngraph"
"intel/mkl-dnn" -> "intel/clDNN"
"intel/mkl-dnn" -> "pytorch/QNNPACK"
"intel/mkl-dnn" -> "opencv/dldt" ["e"=1]
"intel/mkl-dnn" -> "dmlc/tvm"
"intel/mkl-dnn" -> "intel/caffe"
"intel/mkl-dnn" -> "hfp/libxsmm"
"intel/mkl-dnn" -> "PaddlePaddle/Anakin"
"intel/mkl-dnn" -> "google/gemmlowp"
"intel/mkl-dnn" -> "Maratyszcza/NNPACK"
"intel/mkl-dnn" -> "flame/how-to-optimize-gemm"
"intel/mkl-dnn" -> "Tencent/FeatherCNN"
"intel/mkl-dnn" -> "baidu-research/DeepBench"
"intel/mkl-dnn" -> "herumi/xbyak"
"intel/mkl-dnn" -> "andravin/wincnn"
"google/iree" -> "tensorflow/runtime"
"google/iree" -> "onnx/onnx-mlir"
"google/iree" -> "tensorflow/mlir-hlo"
"google/iree" -> "tensorflow/mlir"
"google/iree" -> "microsoft/nnfusion"
"google/iree" -> "llvm/torch-mlir"
"google/iree" -> "llvm/mlir-npcomp"
"google/iree" -> "alibaba/BladeDISC"
"google/iree" -> "merrymercy/awesome-tensor-compilers"
"google/iree" -> "jiazhihao/TASO"
"google/iree" -> "llvm/circt" ["e"=1]
"google/iree" -> "pytorch/glow"
"google/iree" -> "tensor-compiler/taco"
"google/iree" -> "NVIDIA/cutlass"
"google/iree" -> "openxla/xla"
"tensorflow/mlir" -> "google/iree"
"tensorflow/mlir" -> "tensorflow/runtime"
"tensorflow/mlir" -> "dmlc/tvm"
"tensorflow/mlir" -> "pytorch/glow"
"tensorflow/mlir" -> "facebookresearch/TensorComprehensions"
"tensorflow/mlir" -> "NervanaSystems/ngraph"
"tensorflow/mlir" -> "pytorch/tvm"
"tensorflow/mlir" -> "jiazhihao/TASO"
"tensorflow/mlir" -> "tensor-compiler/taco"
"tensorflow/mlir" -> "halide/Halide"
"tensorflow/mlir" -> "google/gemmlowp"
"tensorflow/mlir" -> "microsoft/nnfusion"
"tensorflow/mlir" -> "pytorch/QNNPACK"
"tensorflow/mlir" -> "ONNC/onnc" ["e"=1]
"tensorflow/mlir" -> "onnx/onnx-mlir"
"halide/Halide" -> "dmlc/tvm"
"halide/Halide" -> "NVIDIA/cutlass"
"halide/Halide" -> "facebookresearch/TensorComprehensions"
"halide/Halide" -> "pytorch/glow"
"halide/Halide" -> "tensorflow/mlir"
"halide/Halide" -> "google/gemmlowp"
"halide/Halide" -> "ARM-software/ComputeLibrary"
"halide/Halide" -> "merrymercy/awesome-tensor-compilers"
"halide/Halide" -> "alibaba/MNN" ["e"=1]
"halide/Halide" -> "tensor-compiler/taco"
"halide/Halide" -> "flame/how-to-optimize-gemm"
"halide/Halide" -> "apache/tvm"
"halide/Halide" -> "apache/incubator-tvm"
"halide/Halide" -> "NVIDIA/TensorRT" ["e"=1]
"halide/Halide" -> "microsoft/nnfusion"
"XiaoMi/mace" -> "alibaba/MNN" ["e"=1]
"XiaoMi/mace" -> "Tencent/ncnn" ["e"=1]
"XiaoMi/mace" -> "Tencent/FeatherCNN"
"XiaoMi/mace" -> "Tencent/TNN" ["e"=1]
"XiaoMi/mace" -> "OAID/Tengine" ["e"=1]
"XiaoMi/mace" -> "Tencent/PocketFlow"
"XiaoMi/mace" -> "dmlc/tvm"
"XiaoMi/mace" -> "pytorch/QNNPACK"
"XiaoMi/mace" -> "ARM-software/ComputeLibrary"
"XiaoMi/mace" -> "XiaoMi/mace-models"
"XiaoMi/mace" -> "Microsoft/MMdnn" ["e"=1]
"XiaoMi/mace" -> "google/gemmlowp"
"XiaoMi/mace" -> "daquexian/onnx-simplifier" ["e"=1]
"XiaoMi/mace" -> "PaddlePaddle/Paddle-Lite" ["e"=1]
"XiaoMi/mace" -> "NVIDIA/TensorRT" ["e"=1]
"ContinuumIO/gtc2017-numba" -> "harrism/numba_examples"
"ContinuumIO/gtc2017-numba" -> "ContinuumIO/gtc2018-numba"
"ContinuumIO/gtc2017-numba" -> "ContinuumIO/gtc2019-numba"
"ContinuumIO/gtc2017-numba" -> "NVIDIA/cuda-python"
"NervanaSystems/distiller" -> "Tencent/PocketFlow"
"NervanaSystems/distiller" -> "Eric-mingjie/rethinking-network-pruning" ["e"=1]
"NervanaSystems/distiller" -> "pytorch/QNNPACK"
"NervanaSystems/distiller" -> "dkozlov/awesome-knowledge-distillation" ["e"=1]
"NervanaSystems/distiller" -> "yihui-he/channel-pruning" ["e"=1]
"NervanaSystems/distiller" -> "he-y/Awesome-Pruning" ["e"=1]
"NervanaSystems/distiller" -> "666DZY666/model-compression" ["e"=1]
"NervanaSystems/distiller" -> "dmlc/tvm"
"NervanaSystems/distiller" -> "quark0/darts" ["e"=1]
"NervanaSystems/distiller" -> "mit-han-lab/once-for-all" ["e"=1]
"NervanaSystems/distiller" -> "Lyken17/pytorch-OpCounter" ["e"=1]
"NervanaSystems/distiller" -> "JiahuiYu/slimmable_networks" ["e"=1]
"NervanaSystems/distiller" -> "Eric-mingjie/network-slimming" ["e"=1]
"NervanaSystems/distiller" -> "Microsoft/MMdnn" ["e"=1]
"NervanaSystems/distiller" -> "google/gemmlowp"
"tqchen/tinyflow" -> "dmlc/nnvm"
"tqchen/tinyflow" -> "HuaizhengZhang/Awesome-System-for-Machine-Learning"
"tqchen/tinyflow" -> "dmlc/ps-lite" ["e"=1]
"tqchen/tinyflow" -> "dmlc/tvm"
"tqchen/tinyflow" -> "dmlc/mshadow" ["e"=1]
"tqchen/tinyflow" -> "merrymercy/awesome-tensor-compilers"
"tqchen/tinyflow" -> "dlsys-course/assignment1"
"tqchen/tinyflow" -> "bytedance/byteps" ["e"=1]
"tqchen/tinyflow" -> "flame/how-to-optimize-gemm"
"tqchen/tinyflow" -> "horance-liu/tensorflow-internals" ["e"=1]
"tqchen/tinyflow" -> "Oneflow-Inc/oneflow" ["e"=1]
"tqchen/tinyflow" -> "dmlc/dmlc-core" ["e"=1]
"tqchen/tinyflow" -> "microsoft/AI-System"
"tqchen/tinyflow" -> "microsoft/nnfusion"
"tqchen/tinyflow" -> "openmlsys/openmlsys-zh"
"flame/how-to-optimize-gemm" -> "flame/blislab"
"flame/how-to-optimize-gemm" -> "tpoisonooo/how-to-optimize-gemm"
"flame/how-to-optimize-gemm" -> "google/gemmlowp"
"flame/how-to-optimize-gemm" -> "merrymercy/awesome-tensor-compilers"
"flame/how-to-optimize-gemm" -> "NVIDIA/cutlass"
"flame/how-to-optimize-gemm" -> "microsoft/nnfusion"
"flame/how-to-optimize-gemm" -> "andravin/wincnn"
"flame/how-to-optimize-gemm" -> "pigirons/cpufp"
"flame/how-to-optimize-gemm" -> "alibaba/BladeDISC"
"flame/how-to-optimize-gemm" -> "pytorch/QNNPACK"
"flame/how-to-optimize-gemm" -> "NervanaSystems/maxas"
"flame/how-to-optimize-gemm" -> "openppl-public/ppl.nn"
"flame/how-to-optimize-gemm" -> "BBuf/tvm_mlir_learn"
"flame/how-to-optimize-gemm" -> "flame/blis"
"flame/how-to-optimize-gemm" -> "huawei-noah/bolt"
"openppl-public/ppl.cv" -> "openppl-public/ppl.nn"
"openppl-public/ppl.cv" -> "openppl-public/ppq" ["e"=1]
"openppl-public/ppl.cv" -> "openppl-public/ppl.common"
"openppl-public/ppl.cv" -> "Tencent/TPAT" ["e"=1]
"openppl-public/ppl.cv" -> "tpoisonooo/how-to-optimize-gemm"
"openppl-public/ppl.cv" -> "MegEngine/MegCC"
"openppl-public/ppl.cv" -> "openppl-public/CuAssembler"
"openppl-public/ppl.cv" -> "ModelTC/MQBench" ["e"=1]
"openppl-public/ppl.cv" -> "NVIDIA/trt-samples-for-hackathon-cn" ["e"=1]
"openppl-public/ppl.cv" -> "CVCUDA/CV-CUDA" ["e"=1]
"openppl-public/ppl.cv" -> "openppl-public/hpcc"
"openppl-public/ppl.cv" -> "pigirons/cpufp"
"openppl-public/ppl.cv" -> "open-mmlab/mmdeploy" ["e"=1]
"openppl-public/ppl.cv" -> "NVIDIA-AI-IOT/tensorrt_plugin_generator" ["e"=1]
"openppl-public/ppl.cv" -> "onnx/optimizer" ["e"=1]
"tiny-dnn/tiny-dnn" -> "caffe2/caffe2" ["e"=1]
"tiny-dnn/tiny-dnn" -> "davisking/dlib" ["e"=1]
"tiny-dnn/tiny-dnn" -> "tqchen/tinyflow"
"tiny-dnn/tiny-dnn" -> "clab/dynet" ["e"=1]
"tiny-dnn/tiny-dnn" -> "mlpack/mlpack" ["e"=1]
"tiny-dnn/tiny-dnn" -> "dmlc/tvm"
"tiny-dnn/tiny-dnn" -> "Maratyszcza/NNPACK"
"tiny-dnn/tiny-dnn" -> "dmlc/mxnet" ["e"=1]
"tiny-dnn/tiny-dnn" -> "Tencent/ncnn" ["e"=1]
"tiny-dnn/tiny-dnn" -> "halide/Halide"
"tiny-dnn/tiny-dnn" -> "pjreddie/darknet" ["e"=1]
"tiny-dnn/tiny-dnn" -> "google/gemmlowp"
"tiny-dnn/tiny-dnn" -> "dmlc/nnvm"
"tiny-dnn/tiny-dnn" -> "kjw0612/awesome-deep-vision" ["e"=1]
"tiny-dnn/tiny-dnn" -> "nothings/single_file_libs" ["e"=1]
"oneapi-src/oneDNN" -> "alibaba/BladeDISC"
"oneapi-src/oneDNN" -> "oneapi-src/oneMKL" ["e"=1]
"oneapi-src/oneDNN" -> "microsoft/nnfusion"
"oneapi-src/oneDNN" -> "NVIDIA/cutlass"
"oneapi-src/oneDNN" -> "intel/intel-extension-for-pytorch" ["e"=1]
"oneapi-src/oneDNN" -> "openvinotoolkit/openvino" ["e"=1]
"oneapi-src/oneDNN" -> "flame/how-to-optimize-gemm"
"oneapi-src/oneDNN" -> "merrymercy/awesome-tensor-compilers"
"oneapi-src/oneDNN" -> "pytorch/FBGEMM"
"oneapi-src/oneDNN" -> "intel/neural-compressor" ["e"=1]
"oneapi-src/oneDNN" -> "herumi/xbyak"
"oneapi-src/oneDNN" -> "google/XNNPACK"
"oneapi-src/oneDNN" -> "apache/tvm"
"oneapi-src/oneDNN" -> "oneapi-src/oneAPI-samples" ["e"=1]
"oneapi-src/oneDNN" -> "NVIDIA/cub"
"HuaizhengZhang/Awesome-System-for-Machine-Learning" -> "merrymercy/awesome-tensor-compilers"
"HuaizhengZhang/Awesome-System-for-Machine-Learning" -> "microsoft/AI-System"
"HuaizhengZhang/Awesome-System-for-Machine-Learning" -> "openmlsys/openmlsys-zh"
"HuaizhengZhang/Awesome-System-for-Machine-Learning" -> "tqchen/tinyflow"
"HuaizhengZhang/Awesome-System-for-Machine-Learning" -> "bytedance/byteps" ["e"=1]
"HuaizhengZhang/Awesome-System-for-Machine-Learning" -> "microsoft/nnfusion"
"HuaizhengZhang/Awesome-System-for-Machine-Learning" -> "dyweb/papers-notebook" ["e"=1]
"HuaizhengZhang/Awesome-System-for-Machine-Learning" -> "Oneflow-Inc/oneflow" ["e"=1]
"HuaizhengZhang/Awesome-System-for-Machine-Learning" -> "ucbrise/cs294-ai-sys-sp19"
"HuaizhengZhang/Awesome-System-for-Machine-Learning" -> "apache/tvm"
"HuaizhengZhang/Awesome-System-for-Machine-Learning" -> "alpa-projects/alpa" ["e"=1]
"HuaizhengZhang/Awesome-System-for-Machine-Learning" -> "flexflow/FlexFlow"
"HuaizhengZhang/Awesome-System-for-Machine-Learning" -> "d2l-ai/d2l-tvm"
"HuaizhengZhang/Awesome-System-for-Machine-Learning" -> "flame/how-to-optimize-gemm"
"HuaizhengZhang/Awesome-System-for-Machine-Learning" -> "dmlc/ps-lite" ["e"=1]
"chenzomi12/DeepLearningSystem" -> "openmlsys/openmlsys-zh"
"chenzomi12/DeepLearningSystem" -> "BBuf/tvm_mlir_learn"
"chenzomi12/DeepLearningSystem" -> "merrymercy/awesome-tensor-compilers"
"chenzomi12/DeepLearningSystem" -> "microsoft/AI-System"
"chenzomi12/DeepLearningSystem" -> "openppl-public/ppq" ["e"=1]
"chenzomi12/DeepLearningSystem" -> "zjhellofss/KuiperInfer"
"chenzomi12/DeepLearningSystem" -> "mlc-ai/mlc-zh"
"chenzomi12/DeepLearningSystem" -> "MegEngine/MegCC"
"chenzomi12/DeepLearningSystem" -> "alibaba/BladeDISC"
"chenzomi12/DeepLearningSystem" -> "BBuf/how-to-optim-algorithm-in-cuda"
"chenzomi12/DeepLearningSystem" -> "hyperai/tvm-cn" ["e"=1]
"chenzomi12/DeepLearningSystem" -> "flame/how-to-optimize-gemm"
"chenzomi12/DeepLearningSystem" -> "apache/tvm"
"chenzomi12/DeepLearningSystem" -> "zwang4/awesome-machine-learning-in-compilers"
"chenzomi12/DeepLearningSystem" -> "NVIDIA/trt-samples-for-hackathon-cn" ["e"=1]
"merrymercy/awesome-tensor-compilers" -> "zwang4/awesome-machine-learning-in-compilers"
"merrymercy/awesome-tensor-compilers" -> "microsoft/nnfusion"
"merrymercy/awesome-tensor-compilers" -> "BBuf/tvm_mlir_learn"
"merrymercy/awesome-tensor-compilers" -> "flame/how-to-optimize-gemm"
"merrymercy/awesome-tensor-compilers" -> "Nicholashuber/LinkToCalendar" ["e"=1]
"merrymercy/awesome-tensor-compilers" -> "alibaba/BladeDISC"
"merrymercy/awesome-tensor-compilers" -> "HuaizhengZhang/Awesome-System-for-Machine-Learning"
"merrymercy/awesome-tensor-compilers" -> "NVIDIA/cutlass"
"merrymercy/awesome-tensor-compilers" -> "anonrig/socketkit" ["e"=1]
"merrymercy/awesome-tensor-compilers" -> "apache/tvm"
"merrymercy/awesome-tensor-compilers" -> "mashiAl/AIpredictionBot" ["e"=1]
"merrymercy/awesome-tensor-compilers" -> "microsoft/AI-System"
"merrymercy/awesome-tensor-compilers" -> "chenzomi12/DeepLearningSystem"
"merrymercy/awesome-tensor-compilers" -> "openmlsys/openmlsys-zh"
"merrymercy/awesome-tensor-compilers" -> "google/iree"
"microsoft/AI-System" -> "openmlsys/openmlsys-zh"
"microsoft/AI-System" -> "HuaizhengZhang/Awesome-System-for-Machine-Learning"
"microsoft/AI-System" -> "merrymercy/awesome-tensor-compilers"
"microsoft/AI-System" -> "chenzomi12/DeepLearningSystem"
"microsoft/AI-System" -> "microsoft/nnfusion"
"microsoft/AI-System" -> "BBuf/tvm_mlir_learn"
"microsoft/AI-System" -> "tqchen/tinyflow"
"microsoft/AI-System" -> "microsoft/ai-edu" ["e"=1]
"microsoft/AI-System" -> "Oneflow-Inc/oneflow" ["e"=1]
"microsoft/AI-System" -> "flame/how-to-optimize-gemm"
"microsoft/AI-System" -> "apache/tvm"
"microsoft/AI-System" -> "bytedance/lightseq" ["e"=1]
"microsoft/AI-System" -> "bytedance/byteps" ["e"=1]
"microsoft/AI-System" -> "mlc-ai/mlc-zh"
"microsoft/AI-System" -> "alpa-projects/alpa" ["e"=1]
"mlc-ai/mlc-en" -> "mlc-ai/mlc-zh"
"mlc-ai/mlc-en" -> "mlc-ai/notebooks"
"mlc-ai/mlc-en" -> "awslabs/raf"
"mlc-ai/mlc-en" -> "tlc-pack/relax"
"mlc-ai/mlc-en" -> "hidet-org/hidet"
"mlc-ai/mlc-en" -> "KnowingNothing/compiler-and-arch"
"mlc-ai/mlc-en" -> "d2l-ai/d2l-tvm"
"openmlsys/openmlsys-zh" -> "chenzomi12/DeepLearningSystem"
"openmlsys/openmlsys-zh" -> "microsoft/AI-System"
"openmlsys/openmlsys-zh" -> "HuaizhengZhang/Awesome-System-for-Machine-Learning"
"openmlsys/openmlsys-zh" -> "merrymercy/awesome-tensor-compilers"
"openmlsys/openmlsys-zh" -> "BBuf/tvm_mlir_learn"
"openmlsys/openmlsys-zh" -> "mlc-ai/mlc-zh"
"openmlsys/openmlsys-zh" -> "apache/tvm"
"openmlsys/openmlsys-zh" -> "Oneflow-Inc/oneflow" ["e"=1]
"openmlsys/openmlsys-zh" -> "alpa-projects/alpa" ["e"=1]
"openmlsys/openmlsys-zh" -> "flame/how-to-optimize-gemm"
"openmlsys/openmlsys-zh" -> "microsoft/nnfusion"
"openmlsys/openmlsys-zh" -> "parallel101/course" ["e"=1]
"openmlsys/openmlsys-zh" -> "alibaba/BladeDISC"
"openmlsys/openmlsys-zh" -> "tqchen/tinyflow"
"openmlsys/openmlsys-zh" -> "mindspore-ai/mindspore" ["e"=1]
"tpoisonooo/how-to-optimize-gemm" -> "flame/blislab"
"tpoisonooo/how-to-optimize-gemm" -> "Yinghan-Li/YHs_Sample"
"tpoisonooo/how-to-optimize-gemm" -> "flame/how-to-optimize-gemm"
"tpoisonooo/how-to-optimize-gemm" -> "tpoisonooo/chgemm"
"tpoisonooo/how-to-optimize-gemm" -> "MegEngine/MegCC"
"tpoisonooo/how-to-optimize-gemm" -> "Cjkkkk/CUDA_gemm"
"tpoisonooo/how-to-optimize-gemm" -> "Liu-xiandong/How_to_optimize_in_GPU"
"tpoisonooo/how-to-optimize-gemm" -> "pigirons/cpufp"
"tpoisonooo/how-to-optimize-gemm" -> "openppl-public/ppl.nn"
"tpoisonooo/how-to-optimize-gemm" -> "BBuf/how-to-optim-algorithm-in-cuda"
"tpoisonooo/how-to-optimize-gemm" -> "lyuchuny3/Tengine_gemm_tutorial"
"tpoisonooo/how-to-optimize-gemm" -> "MegEngine/mperf"
"tpoisonooo/how-to-optimize-gemm" -> "BBuf/how-to-optimize-gemm"
"tpoisonooo/how-to-optimize-gemm" -> "Ldpe2G/ArmNeonOptimization"
"tpoisonooo/how-to-optimize-gemm" -> "openppl-public/ppq" ["e"=1]
"arrayfire/arrayfire" -> "facebookresearch/flashlight" ["e"=1]
"arrayfire/arrayfire" -> "thrust/thrust"
"arrayfire/arrayfire" -> "boostorg/compute" ["e"=1]
"arrayfire/arrayfire" -> "arrayfire/arrayfire-rust" ["e"=1]
"arrayfire/arrayfire" -> "flashlight/flashlight" ["e"=1]
"arrayfire/arrayfire" -> "arrayfire/arrayfire-python"
"arrayfire/arrayfire" -> "clMathLibraries/clBLAS" ["e"=1]
"arrayfire/arrayfire" -> "halide/Halide"
"arrayfire/arrayfire" -> "ddemidov/vexcl" ["e"=1]
"arrayfire/arrayfire" -> "NVIDIA/cutlass"
"arrayfire/arrayfire" -> "NVlabs/cub"
"arrayfire/arrayfire" -> "xianyi/OpenBLAS"
"arrayfire/arrayfire" -> "cpp-taskflow/cpp-taskflow" ["e"=1]
"arrayfire/arrayfire" -> "mlpack/mlpack" ["e"=1]
"arrayfire/arrayfire" -> "kokkos/kokkos" ["e"=1]
"Tencent/PocketFlow" -> "NervanaSystems/distiller"
"Tencent/PocketFlow" -> "pytorch/QNNPACK"
"Tencent/PocketFlow" -> "yihui-he/channel-pruning" ["e"=1]
"Tencent/PocketFlow" -> "XiaoMi/mace"
"Tencent/PocketFlow" -> "alibaba/MNN" ["e"=1]
"Tencent/PocketFlow" -> "Tencent/FeatherCNN"
"Tencent/PocketFlow" -> "dmlc/tvm"
"Tencent/PocketFlow" -> "Eric-mingjie/rethinking-network-pruning" ["e"=1]
"Tencent/PocketFlow" -> "BUG1989/caffe-int8-convert-tools"
"Tencent/PocketFlow" -> "Microsoft/MMdnn" ["e"=1]
"Tencent/PocketFlow" -> "he-y/Awesome-Pruning" ["e"=1]
"Tencent/PocketFlow" -> "tensorflow/adanet" ["e"=1]
"Tencent/PocketFlow" -> "Tencent/TNN" ["e"=1]
"Tencent/PocketFlow" -> "google/gemmlowp"
"Tencent/PocketFlow" -> "Tencent/ncnn" ["e"=1]
"mlcommons/training" -> "mlcommons/inference"
"mlcommons/training" -> "mlcommons/hpc"
"mlcommons/training" -> "mlcommons/training_results_v1.1"
"mlcommons/training" -> "mlcommons/training_results_v1.0"
"mlcommons/training" -> "NVIDIA/nccl-tests"
"zwang4/awesome-machine-learning-in-compilers" -> "merrymercy/awesome-tensor-compilers"
"zwang4/awesome-machine-learning-in-compilers" -> "facebookresearch/CompilerGym"
"zwang4/awesome-machine-learning-in-compilers" -> "BBuf/tvm_mlir_learn"
"zwang4/awesome-machine-learning-in-compilers" -> "KnowingNothing/compiler-and-arch"
"zwang4/awesome-machine-learning-in-compilers" -> "microsoft/nnfusion"
"zwang4/awesome-machine-learning-in-compilers" -> "d2l-ai/d2l-tvm"
"zwang4/awesome-machine-learning-in-compilers" -> "llvm/torch-mlir"
"zwang4/awesome-machine-learning-in-compilers" -> "onnx/onnx-mlir"
"zwang4/awesome-machine-learning-in-compilers" -> "jiazhihao/TASO"
"zwang4/awesome-machine-learning-in-compilers" -> "chenzomi12/DeepLearningSystem"
"zwang4/awesome-machine-learning-in-compilers" -> "google/ml-compiler-opt"
"zwang4/awesome-machine-learning-in-compilers" -> "google/iree"
"zwang4/awesome-machine-learning-in-compilers" -> "shining1984/PL-Compiler-Resource" ["e"=1]
"zwang4/awesome-machine-learning-in-compilers" -> "tensorflow/mlir-hlo"
"zwang4/awesome-machine-learning-in-compilers" -> "iree-org/iree"
"microsoft/EdgeML" -> "microsoft/ELL"
"microsoft/EdgeML" -> "uTensor/uTensor"
"microsoft/EdgeML" -> "mit-han-lab/tinyml"
"microsoft/EdgeML" -> "ai-techsystems/deepC"
"microsoft/EdgeML" -> "gigwegbe/tinyml-papers-and-projects"
"microsoft/EdgeML" -> "majianjia/nnom" ["e"=1]
"microsoft/EdgeML" -> "mlcommons/tiny"
"microsoft/EdgeML" -> "quic/aimet" ["e"=1]
"microsoft/EdgeML" -> "cpetig/tflite_micro_compiler"
"microsoft/EdgeML" -> "larq/larq" ["e"=1]
"microsoft/EdgeML" -> "krantikiran68/EdgeML"
"microsoft/EdgeML" -> "Bisonai/awesome-edge-machine-learning"
"microsoft/EdgeML" -> "google/qkeras" ["e"=1]
"microsoft/EdgeML" -> "IntelLabs/distiller" ["e"=1]
"microsoft/EdgeML" -> "emlearn/emlearn" ["e"=1]
"hfp/libxsmm" -> "flame/blis"
"hfp/libxsmm" -> "IntelLabs/SkimCaffe" ["e"=1]
"hfp/libxsmm" -> "NervanaSystems/maxas"
"hfp/libxsmm" -> "pytorch/FBGEMM"
"hfp/libxsmm" -> "andravin/wincnn"
"hfp/libxsmm" -> "ParRes/Kernels" ["e"=1]
"hfp/libxsmm" -> "openai/openai-gemm"
"hfp/libxsmm" -> "flame/blislab"
"hfp/libxsmm" -> "flame/how-to-optimize-gemm"
"hfp/libxsmm" -> "tensor-compiler/taco"
"hfp/libxsmm" -> "elemental/Elemental"
"hfp/libxsmm" -> "baidu-research/DeepBench"
"hfp/libxsmm" -> "google/gemmlowp"
"hfp/libxsmm" -> "Maratyszcza/NNPACK"
"hfp/libxsmm" -> "flame/libflame"
"NVIDIA/cuda-samples" -> "NVIDIA/cutlass"
"NVIDIA/cuda-samples" -> "NVIDIA/CUDALibrarySamples"
"NVIDIA/cuda-samples" -> "NVIDIA/thrust"
"NVIDIA/cuda-samples" -> "NVIDIA/TensorRT" ["e"=1]
"NVIDIA/cuda-samples" -> "NVIDIA/cub"
"NVIDIA/cuda-samples" -> "NVIDIA/libcudacxx"
"NVIDIA/cuda-samples" -> "NVIDIA/nccl"
"NVIDIA/cuda-samples" -> "NVIDIA-developer-blog/code-samples"
"NVIDIA/cuda-samples" -> "Tony-Tan/CUDA_Freshman"
"NVIDIA/cuda-samples" -> "NVIDIA/FasterTransformer" ["e"=1]
"NVIDIA/cuda-samples" -> "brucefan1983/CUDA-Programming"
"NVIDIA/cuda-samples" -> "PacktPublishing/Learn-CUDA-Programming"
"NVIDIA/cuda-samples" -> "onnx/onnx-tensorrt" ["e"=1]
"NVIDIA/cuda-samples" -> "openai/triton" ["e"=1]
"NVIDIA/cuda-samples" -> "NVIDIA/DeepLearningExamples" ["e"=1]
"openxla/xla" -> "openxla/stablehlo"
"openxla/xla" -> "merrymercy/awesome-tensor-compilers"
"openxla/xla" -> "openxla/iree"
"openxla/xla" -> "tensorflow/mlir-hlo"
"openxla/xla" -> "openxla/community"
"openxla/xla" -> "alibaba/BladeDISC"
"openxla/xla" -> "microsoft/nnfusion"
"openxla/xla" -> "tensorflow/runtime"
"openxla/xla" -> "openai/triton" ["e"=1]
"openxla/xla" -> "alpa-projects/alpa" ["e"=1]
"openxla/xla" -> "google/iree"
"openxla/xla" -> "facebookincubator/AITemplate" ["e"=1]
"openxla/xla" -> "MegEngine/MegCC"
"openxla/xla" -> "pytorch/torchdynamo"
"openxla/xla" -> "llvm/torch-mlir"
"taehoonlee/tensornets" -> "MG2033/ShuffleNet" ["e"=1]
"taehoonlee/tensornets" -> "openai/gradient-checkpointing"
"taehoonlee/tensornets" -> "lutzroeder/Netron"
"taehoonlee/tensornets" -> "mystic123/tensorflow-yolo-v3" ["e"=1]
"taehoonlee/tensornets" -> "taehoonlee/easyDL"
"taehoonlee/tensornets" -> "taki0112/Densenet-Tensorflow" ["e"=1]
"taehoonlee/tensornets" -> "auroua/InsightFace_TF" ["e"=1]
"taehoonlee/tensornets" -> "mila-udem/welcome_tutorials" ["e"=1]
"taehoonlee/tensornets" -> "Microsoft/MMdnn" ["e"=1]
"taehoonlee/tensornets" -> "flyyufelix/cnn_finetune" ["e"=1]
"taehoonlee/tensornets" -> "hwalsuklee/tensorflow-generative-model-collections" ["e"=1]
"taehoonlee/tensornets" -> "thtrieu/darkflow" ["e"=1]
"taehoonlee/tensornets" -> "MSiam/TFSegmentation" ["e"=1]
"taehoonlee/tensornets" -> "taki0112/StarGAN-Tensorflow" ["e"=1]
"taehoonlee/tensornets" -> "khanrc/tf.gans-comparison" ["e"=1]
"demikernel/demikernel" -> "demikernel/catnip"
"demikernel/demikernel" -> "capsule-rs/capsule" ["e"=1]
"demikernel/demikernel" -> "xrp-project/XRP" ["e"=1]
"demikernel/demikernel" -> "erpc-io/eRPC"
"demikernel/demikernel" -> "tcp-acceleration-service/tas"
"demikernel/demikernel" -> "ixy-languages/ixy.rs" ["e"=1]
"demikernel/demikernel" -> "dslab-epfl/tinynf"
"demikernel/demikernel" -> "WukLab/LITE"
"demikernel/demikernel" -> "WukLab/LegoOS"
"demikernel/demikernel" -> "acceltcp/AccelTCP"
"demikernel/demikernel" -> "redn-io/RedN"
"demikernel/demikernel" -> "vmware-labs/node-replicated-kernel"
"demikernel/demikernel" -> "efficient/fasst"
"demikernel/demikernel" -> "shenango/caladan"
"demikernel/demikernel" -> "vmware/node-replication"
"NVIDIA/libcudacxx" -> "NVIDIA/thrust"
"NVIDIA/libcudacxx" -> "NVIDIA/cub"
"NVIDIA/libcudacxx" -> "NVIDIA/cutlass"
"NVIDIA/libcudacxx" -> "NVIDIA/jitify"
"NVIDIA/libcudacxx" -> "stotko/stdgpu"
"NVIDIA/libcudacxx" -> "NVIDIA/cuCollections"
"NVIDIA/libcudacxx" -> "NVIDIA/MatX"
"NVIDIA/libcudacxx" -> "eyalroz/cuda-api-wrappers"
"NVIDIA/libcudacxx" -> "NVIDIA/CUDALibrarySamples"
"NVIDIA/libcudacxx" -> "NVIDIA/cuda-samples"
"NVIDIA/libcudacxx" -> "NVIDIA/nvbench"
"NVIDIA/libcudacxx" -> "NVIDIA/gdrcopy"
"NVIDIA/libcudacxx" -> "kokkos/kokkos" ["e"=1]
"NVIDIA/libcudacxx" -> "alandefreitas/matplotplusplus" ["e"=1]
"NVIDIA/libcudacxx" -> "NVIDIA/nccl"
"stotko/stdgpu" -> "eyalroz/cuda-api-wrappers"
"stotko/stdgpu" -> "NVIDIA/libcudacxx"
"stotko/stdgpu" -> "NVIDIA/cub"
"stotko/stdgpu" -> "NVIDIA/MatX"
"stotko/stdgpu" -> "NVIDIA/thrust"
"stotko/stdgpu" -> "moderngpu/moderngpu"
"stotko/stdgpu" -> "martinus/nanobench" ["e"=1]
"stotko/stdgpu" -> "MarcDirven/cpp-lazy" ["e"=1]
"stotko/stdgpu" -> "NVIDIA/jitify"
"stotko/stdgpu" -> "romeric/Fastor" ["e"=1]
"stotko/stdgpu" -> "eliaskosunen/scnlib" ["e"=1]
"stotko/stdgpu" -> "NVIDIA/nvbench"
"stotko/stdgpu" -> "joboccara/pipes" ["e"=1]
"stotko/stdgpu" -> "Erkaman/Awesome-CUDA"
"stotko/stdgpu" -> "neka-nat/cupoch" ["e"=1]
"google/ruy" -> "google/XNNPACK"
"pytorch/QNNPACK" -> "google/gemmlowp"
"pytorch/QNNPACK" -> "NervanaSystems/distiller"
"pytorch/QNNPACK" -> "Tencent/FeatherCNN"
"pytorch/QNNPACK" -> "Tencent/PocketFlow"
"pytorch/QNNPACK" -> "Maratyszcza/NNPACK"
"pytorch/QNNPACK" -> "BUG1989/caffe-int8-convert-tools"
"pytorch/QNNPACK" -> "google/XNNPACK"
"pytorch/QNNPACK" -> "JDAI-CV/dabnn" ["e"=1]
"pytorch/QNNPACK" -> "andravin/wincnn"
"pytorch/QNNPACK" -> "flame/how-to-optimize-gemm"
"pytorch/QNNPACK" -> "XiaoMi/mace"
"pytorch/QNNPACK" -> "huawei-noah/bolt"
"pytorch/QNNPACK" -> "dmlc/tvm"
"pytorch/QNNPACK" -> "pytorch/glow"
"pytorch/QNNPACK" -> "yihui-he/channel-pruning" ["e"=1]
"mlcommons/inference" -> "mlcommons/training"
"mlcommons/inference" -> "archway-network/testnet-signer" ["e"=1]
"mlcommons/inference" -> "onnx/onnx-mlir"
"mlcommons/inference" -> "mlcommons/tiny"
"mlcommons/inference" -> "iree-org/iree"
"mlcommons/inference" -> "harvard-acc/DeepRecSys"
"WukLab/LegoOS" -> "WukLab/LITE"
"WukLab/LegoOS" -> "PlatformLab/Arachne"
"WukLab/LegoOS" -> "SymbioticLab/Infiniswap"
"WukLab/LegoOS" -> "efficient/rdma_bench"
"WukLab/LegoOS" -> "shenango/shenango"
"WukLab/LegoOS" -> "clusterfarmem/fastswap"
"WukLab/LegoOS" -> "WukLab/Hotpot"
"WukLab/LegoOS" -> "vtess/Pond"
"WukLab/LegoOS" -> "erpc-io/eRPC"
"WukLab/LegoOS" -> "efficient/fasst"
"WukLab/LegoOS" -> "WukLab/Clio"
"WukLab/LegoOS" -> "uwsampa/grappa"
"WukLab/LegoOS" -> "SJTU-IPADS/ServerlessBench" ["e"=1]
"WukLab/LegoOS" -> "shenango/caladan"
"WukLab/LegoOS" -> "demikernel/demikernel"
"cybertronai/gradient-checkpointing" -> "davisyoshida/tf2-gradient-checkpointing"
"cybertronai/gradient-checkpointing" -> "facebookresearch/fairscale" ["e"=1]
"cybertronai/gradient-checkpointing" -> "prigoyal/pytorch_memonger"
"cybertronai/gradient-checkpointing" -> "tensorflow/mesh" ["e"=1]
"cybertronai/gradient-checkpointing" -> "flexflow/FlexFlow"
"cybertronai/gradient-checkpointing" -> "parasj/checkmate" ["e"=1]
"cybertronai/gradient-checkpointing" -> "IBM/tensorflow-large-model-support"
"cybertronai/gradient-checkpointing" -> "pytorch/elastic" ["e"=1]
"cybertronai/gradient-checkpointing" -> "msr-fiddle/pipedream" ["e"=1]
"cybertronai/gradient-checkpointing" -> "tensorflow/custom-op" ["e"=1]
"cybertronai/gradient-checkpointing" -> "Oneflow-Inc/DLPerf"
"cybertronai/gradient-checkpointing" -> "tensorflow/runtime"
"cybertronai/gradient-checkpointing" -> "microsoft/nnfusion"
"cybertronai/gradient-checkpointing" -> "NVIDIA/Megatron-LM" ["e"=1]
"cybertronai/gradient-checkpointing" -> "pytorch/torchdynamo"
"warmspringwinds/pytorch-cpp" -> "zdevito/ATen"
"warmspringwinds/pytorch-cpp" -> "iamhankai/cpp-pytorch" ["e"=1]
"linux-rdma/rdma-core" -> "linux-rdma/perftest"
"linux-rdma/rdma-core" -> "jcxue/RDMA-Tutorial"
"linux-rdma/rdma-core" -> "openucx/ucx"
"linux-rdma/rdma-core" -> "efficient/rdma_bench"
"linux-rdma/rdma-core" -> "Mellanox/libvma"
"linux-rdma/rdma-core" -> "tarickb/the-geek-in-the-corner"
"linux-rdma/rdma-core" -> "ofiwg/libfabric"
"linux-rdma/rdma-core" -> "erpc-io/eRPC"
"linux-rdma/rdma-core" -> "SoftRoCE/rxe-dev"
"linux-rdma/rdma-core" -> "spdk/spdk" ["e"=1]
"linux-rdma/rdma-core" -> "microsoft/Freeflow"
"linux-rdma/rdma-core" -> "NVIDIA/gdrcopy"
"linux-rdma/rdma-core" -> "claudebarthels/infinity"
"linux-rdma/rdma-core" -> "pmem/pmdk" ["e"=1]
"linux-rdma/rdma-core" -> "accelio/accelio"
"Maratyszcza/pthreadpool" -> "Maratyszcza/FP16"
"pytorch/torchdynamo" -> "llvm/torch-mlir"
"pytorch/torchdynamo" -> "alibaba/BladeDISC"
"pytorch/torchdynamo" -> "pytorch/functorch" ["e"=1]
"pytorch/torchdynamo" -> "ELS-RD/kernl" ["e"=1]
"pytorch/torchdynamo" -> "tensorflow/mlir-hlo"
"pytorch/torchdynamo" -> "pytorch/data" ["e"=1]
"pytorch/torchdynamo" -> "facebookincubator/AITemplate" ["e"=1]
"pytorch/torchdynamo" -> "pytorch/tau"
"pytorch/torchdynamo" -> "microsoft/nnfusion"
"pytorch/torchdynamo" -> "bytedance/byteir"
"pytorch/torchdynamo" -> "facebookresearch/fairscale" ["e"=1]
"pytorch/torchdynamo" -> "pytorch/benchmark"
"pytorch/torchdynamo" -> "HazyResearch/flash-attention" ["e"=1]
"pytorch/torchdynamo" -> "openai/triton" ["e"=1]
"pytorch/torchdynamo" -> "flexflow/FlexFlow"
"mit-han-lab/tiny-training" -> "mit-han-lab/tinyengine"
"thenifty/neon-guide" -> "rogerou/Arm-neon-intrinsics"
"thenifty/neon-guide" -> "Ldpe2G/ArmNeonOptimization"
"thenifty/neon-guide" -> "intel/ARM_NEON_2_x86_SSE" ["e"=1]
"thenifty/neon-guide" -> "projectNe10/Ne10"
"thenifty/neon-guide" -> "BBuf/ArmNeonOptimization"
"thenifty/neon-guide" -> "tpoisonooo/how-to-optimize-gemm"
"thenifty/neon-guide" -> "jratcliff63367/sse2neon" ["e"=1]
"thenifty/neon-guide" -> "andravin/wincnn"
"thenifty/neon-guide" -> "jzawodn/arm-neon-vfp-test"
"google-research/morph-net" -> "terrychenism/OctaveConv" ["e"=1]
"google-research/morph-net" -> "Tencent/PocketFlow"
"google-research/morph-net" -> "facebookresearch/kill-the-bits" ["e"=1]
"google-research/morph-net" -> "pytorch/QNNPACK"
"google-research/morph-net" -> "princeton-vl/CornerNet-Lite" ["e"=1]
"google-research/morph-net" -> "mit-han-lab/once-for-all" ["e"=1]
"google-research/morph-net" -> "NervanaSystems/distiller"
"google-research/morph-net" -> "JiahuiYu/slimmable_networks" ["e"=1]
"google-research/morph-net" -> "tensorflow/adanet" ["e"=1]
"google-research/morph-net" -> "dstamoulis/single-path-nas" ["e"=1]
"google-research/morph-net" -> "tensorflow/tpu" ["e"=1]
"google-research/morph-net" -> "Robert-JunWang/Pelee" ["e"=1]
"google-research/morph-net" -> "Eric-mingjie/rethinking-network-pruning" ["e"=1]
"google-research/morph-net" -> "openai/gradient-checkpointing"
"google-research/morph-net" -> "seungwonpark/RandWireNN" ["e"=1]
"brucefan1983/CUDA-Programming" -> "YouQixiaowu/CUDA-Programming-with-Python"
"brucefan1983/CUDA-Programming" -> "Tony-Tan/CUDA_Freshman"
"brucefan1983/CUDA-Programming" -> "PacktPublishing/Learn-CUDA-Programming"
"brucefan1983/CUDA-Programming" -> "brucefan1983/GPUMD" ["e"=1]
"brucefan1983/CUDA-Programming" -> "godweiyang/NN-CUDA-Example"
"brucefan1983/CUDA-Programming" -> "LitLeo/TensorRT_Tutorial" ["e"=1]
"brucefan1983/CUDA-Programming" -> "NVIDIA/cuda-samples"
"brucefan1983/CUDA-Programming" -> "deeperlearning/professional-cuda-c-programming"
"brucefan1983/CUDA-Programming" -> "NVIDIA/trt-samples-for-hackathon-cn" ["e"=1]
"brucefan1983/CUDA-Programming" -> "zerollzeng/tiny-tensorrt" ["e"=1]
"brucefan1983/CUDA-Programming" -> "shouxieai/tensorRT_Pro" ["e"=1]
"brucefan1983/CUDA-Programming" -> "shouxieai/learning-cuda-trt" ["e"=1]
"brucefan1983/CUDA-Programming" -> "CVCUDA/CV-CUDA" ["e"=1]
"brucefan1983/CUDA-Programming" -> "CaoWGG/TensorRT-CenterNet" ["e"=1]
"brucefan1983/CUDA-Programming" -> "huiscliu/Tutorials"
"intel/mpi-benchmarks" -> "open-mpi/mtt"
"intel/mpi-benchmarks" -> "mpi-forum/mpi-issues"
"intel/mpi-benchmarks" -> "hjelmn/xpmem"
"xianyi/OpenBLAS" -> "Reference-LAPACK/lapack" ["e"=1]
"xianyi/OpenBLAS" -> "flame/how-to-optimize-gemm"
"xianyi/OpenBLAS" -> "flame/blis"
"xianyi/OpenBLAS" -> "NVIDIA/cutlass"
"xianyi/OpenBLAS" -> "ARM-software/ComputeLibrary"
"xianyi/OpenBLAS" -> "dmlc/tvm"
"xianyi/OpenBLAS" -> "google/gemmlowp"
"xianyi/OpenBLAS" -> "alibaba/MNN" ["e"=1]
"xianyi/OpenBLAS" -> "Tencent/ncnn" ["e"=1]
"xianyi/OpenBLAS" -> "Maratyszcza/NNPACK"
"xianyi/OpenBLAS" -> "dmlc/mxnet" ["e"=1]
"xianyi/OpenBLAS" -> "onnx/onnx" ["e"=1]
"xianyi/OpenBLAS" -> "pybind/pybind11" ["e"=1]
"xianyi/OpenBLAS" -> "halide/Halide"
"xianyi/OpenBLAS" -> "soumith/convnet-benchmarks" ["e"=1]
"Mellanox/libvma" -> "Mellanox/sockperf" ["e"=1]
"Mellanox/libvma" -> "linux-rdma/rdma-core"
"Mellanox/libvma" -> "efficient/rdma_bench"
"Mellanox/libvma" -> "jcxue/RDMA-Tutorial"
"Mellanox/libvma" -> "accelio/accelio"
"Mellanox/libvma" -> "linux-rdma/perftest"
"Mellanox/libvma" -> "openucx/ucx"
"Mellanox/libvma" -> "tarickb/the-geek-in-the-corner"
"Mellanox/libvma" -> "bobzhuyb/ns3-rdma"
"Mellanox/libvma" -> "erpc-io/eRPC"
"Mellanox/libvma" -> "ofiwg/libfabric"
"Mellanox/libvma" -> "efficient/mica"
"Mellanox/libvma" -> "eunyoung14/mtcp" ["e"=1]
"Mellanox/libvma" -> "zrlio/disni"
"Mellanox/libvma" -> "efficient/HERD"
"Tiramisu-Compiler/tiramisu" -> "tensor-compiler/taco"
"Tiramisu-Compiler/tiramisu" -> "bondhugula/pluto"
"Tiramisu-Compiler/tiramisu" -> "microsoft/nnfusion"
"Tiramisu-Compiler/tiramisu" -> "jiazhihao/TASO"
"Tiramisu-Compiler/tiramisu" -> "othmanus/algeria-cities" ["e"=1]
"Tiramisu-Compiler/tiramisu" -> "facebookresearch/TensorComprehensions"
"Tiramisu-Compiler/tiramisu" -> "google/iree"
"Tiramisu-Compiler/tiramisu" -> "tensorflow/mlir"
"Tiramisu-Compiler/tiramisu" -> "Meinersbur/ppcg"
"Tiramisu-Compiler/tiramisu" -> "merrymercy/awesome-tensor-compilers"
"Tiramisu-Compiler/tiramisu" -> "pytorch/glow"
"Tiramisu-Compiler/tiramisu" -> "KnowingNothing/FlexTensor"
"Tiramisu-Compiler/tiramisu" -> "NVIDIA/cutlass"
"Tiramisu-Compiler/tiramisu" -> "ScientificClubofESI/LaraHack"
"Tiramisu-Compiler/tiramisu" -> "zwang4/awesome-machine-learning-in-compilers"
"ArchaeaSoftware/cudahandbook" -> "parallel-forall/code-samples"
"ArchaeaSoftware/cudahandbook" -> "moderngpu/moderngpu"
"ArchaeaSoftware/cudahandbook" -> "NVlabs/cub"
"ArchaeaSoftware/cudahandbook" -> "NVIDIA/CUDALibrarySamples"
"ArchaeaSoftware/cudahandbook" -> "NervanaSystems/maxas"
"ArchaeaSoftware/cudahandbook" -> "eyalroz/cuda-api-wrappers"
"ArchaeaSoftware/cudahandbook" -> "udacity/cs344"
"ArchaeaSoftware/cudahandbook" -> "deeperlearning/professional-cuda-c-programming"
"ArchaeaSoftware/cudahandbook" -> "NVIDIA/cuda-samples"
"ArchaeaSoftware/cudahandbook" -> "thrust/thrust"
"ArchaeaSoftware/cudahandbook" -> "Erkaman/Awesome-CUDA"
"ArchaeaSoftware/cudahandbook" -> "NVlabs/moderngpu"
"ArchaeaSoftware/cudahandbook" -> "Tony-Tan/CUDA_Freshman"
"ArchaeaSoftware/cudahandbook" -> "brucefan1983/CUDA-Programming"
"ArchaeaSoftware/cudahandbook" -> "akrizhevsky/cuda-convnet2" ["e"=1]
"Adlik/Adlik" -> "Adlik/model_optimizer"
"Adlik/Adlik" -> "neursafe/federated-learning"
"Adlik/Adlik" -> "openppl-public/ppl.nn"
"Adlik/Adlik" -> "microsoft/nnfusion"
"Adlik/Adlik" -> "merrymercy/awesome-tensor-compilers"
"Adlik/Adlik" -> "bytedance/effective_transformer" ["e"=1]
"Adlik/Adlik" -> "openppl-public/ppq" ["e"=1]
"Adlik/Adlik" -> "alibaba/BladeDISC"
"Adlik/Adlik" -> "tpoisonooo/how-to-optimize-gemm"
"Adlik/Adlik" -> "BBuf/tvm_mlir_learn"
"Adlik/Adlik" -> "huawei-noah/bolt"
"Adlik/Adlik" -> "Tencent/TNN" ["e"=1]
"Adlik/Adlik" -> "Oneflow-Inc/oneflow" ["e"=1]
"Adlik/Adlik" -> "Tencent/Forward" ["e"=1]
"Adlik/Adlik" -> "quic/aimet" ["e"=1]
"dmlc/nnvm" -> "tqchen/tinyflow"
"dmlc/nnvm" -> "dmlc/tvm"
"dmlc/nnvm" -> "dmlc/mshadow" ["e"=1]
"dmlc/nnvm" -> "dmlc/dmlc-core" ["e"=1]
"dmlc/nnvm" -> "Maratyszcza/NNPACK"
"dmlc/nnvm" -> "dmlc/ps-lite" ["e"=1]
"dmlc/nnvm" -> "dmlc/minpy" ["e"=1]
"dmlc/nnvm" -> "dmlc/mxnet-notebooks" ["e"=1]
"dmlc/nnvm" -> "soumith/convnet-benchmarks" ["e"=1]
"dmlc/nnvm" -> "dmlc/mxnet" ["e"=1]
"dmlc/nnvm" -> "google/gemmlowp"
"dmlc/nnvm" -> "facebookresearch/TensorComprehensions"
"dmlc/nnvm" -> "NVIDIA/nccl"
"dmlc/nnvm" -> "zackchase/mxnet-the-straight-dope" ["e"=1]
"dmlc/nnvm" -> "baidu-research/DeepBench"
"tensor-compiler/taco" -> "microsoft/nnfusion"
"tensor-compiler/taco" -> "jiazhihao/TASO"
"tensor-compiler/taco" -> "merrymercy/awesome-tensor-compilers"
"tensor-compiler/taco" -> "facebookresearch/TensorComprehensions"
"tensor-compiler/taco" -> "NVIDIA/cutlass"
"tensor-compiler/taco" -> "tensorflow/mlir"
"tensor-compiler/taco" -> "romeric/Fastor" ["e"=1]
"tensor-compiler/taco" -> "Tiramisu-Compiler/tiramisu"
"tensor-compiler/taco" -> "hfp/libxsmm"
"tensor-compiler/taco" -> "google/iree"
"tensor-compiler/taco" -> "ITensor/ITensor" ["e"=1]
"tensor-compiler/taco" -> "onnx/onnx-mlir"
"tensor-compiler/taco" -> "halide/Halide"
"tensor-compiler/taco" -> "ValeevGroup/tiledarray"
"tensor-compiler/taco" -> "simit-lang/simit"
"pytorch/cpuinfo" -> "google/ruy"
"pytorch/cpuinfo" -> "pytorch/FBGEMM"
"pytorch/cpuinfo" -> "pytorch/QNNPACK"
"pytorch/cpuinfo" -> "Maratyszcza/pthreadpool"
"pytorch/cpuinfo" -> "google/cpu_features" ["e"=1]
"pytorch/cpuinfo" -> "pigirons/cpufp"
"pytorch/cpuinfo" -> "flame/blislab"
"pytorch/cpuinfo" -> "tpoisonooo/how-to-optimize-gemm"
"pytorch/cpuinfo" -> "travisdowns/uarch-bench" ["e"=1]
"pytorch/cpuinfo" -> "google/XNNPACK"
"pytorch/cpuinfo" -> "projectNe10/Ne10"
"serban/kmeans" -> "bryancatanzaro/kmeans"
"serban/kmeans" -> "phvu/kmeans_cuda"
"serban/kmeans" -> "src-d/kmcuda"
"serban/kmeans" -> "mallamanis/kMeansCUDA"
"serban/kmeans" -> "NVIDIA/kmeans"
"src-d/kmcuda" -> "serban/kmeans"
"src-d/kmcuda" -> "NVIDIA/kmeans"
"src-d/kmcuda" -> "vincentfpgarcia/kNN-CUDA"
"src-d/kmcuda" -> "bryancatanzaro/kmeans"
"src-d/kmcuda" -> "obachem/kmc2"
"src-d/kmcuda" -> "gunrock/gunrock"
"src-d/kmcuda" -> "chrischoy/knn_cuda"
"src-d/kmcuda" -> "RUSH-LAB/Flash"
"vincentfpgarcia/kNN-CUDA" -> "chrischoy/knn_cuda"
"vincentfpgarcia/kNN-CUDA" -> "unlimblue/KNN_CUDA" ["e"=1]
"vincentfpgarcia/kNN-CUDA" -> "cudpp/cudpp"
"vincentfpgarcia/kNN-CUDA" -> "serban/kmeans"
"vincentfpgarcia/kNN-CUDA" -> "ishbir/CUDA-KNN"
"vincentfpgarcia/kNN-CUDA" -> "src-d/kmcuda"
"vincentfpgarcia/kNN-CUDA" -> "moderngpu/moderngpu"
"vincentfpgarcia/kNN-CUDA" -> "NVIDIA/kmeans"
"KnowingNothing/compiler-and-arch" -> "KnowingNothing/AMOS"
"KnowingNothing/compiler-and-arch" -> "UofT-EcoSystem/DietCode"
"KnowingNothing/compiler-and-arch" -> "roastduck/FreeTensor"
"KnowingNothing/compiler-and-arch" -> "awslabs/slapo"
"KnowingNothing/compiler-and-arch" -> "hidet-org/hidet"
"KnowingNothing/compiler-and-arch" -> "mit-han-lab/inter-operator-scheduler"
"KnowingNothing/compiler-and-arch" -> "thu-pacman/PET"
"KnowingNothing/compiler-and-arch" -> "tlc-pack/tenset"
"KnowingNothing/compiler-and-arch" -> "awslabs/raf"
"llvm/Polygeist" -> "buddy-compiler/buddy-mlir"
"llvm/Polygeist" -> "kumasento/polymer" ["e"=1]
"pytorch/glow" -> "dmlc/tvm"
"pytorch/glow" -> "facebookresearch/TensorComprehensions"
"pytorch/glow" -> "tensorflow/mlir"
"pytorch/glow" -> "pytorch/QNNPACK"
"pytorch/glow" -> "NervanaSystems/distiller"
"pytorch/glow" -> "google/gemmlowp"
"pytorch/glow" -> "NervanaSystems/ngraph"
"pytorch/glow" -> "google/iree"
"pytorch/glow" -> "halide/Halide"
"pytorch/glow" -> "merrymercy/awesome-tensor-compilers"
"pytorch/glow" -> "NVIDIA/cutlass"
"pytorch/glow" -> "pytorch/FBGEMM"
"pytorch/glow" -> "microsoft/nnfusion"
"pytorch/glow" -> "pytorch/tvm"
"pytorch/glow" -> "NVIDIA/DALI" ["e"=1]
"ScientificClubofESI/LaraHack" -> "NEDJIMAbelgacem/Graphics_Engine"
"ScientificClubofESI/LaraHack" -> "BillelBenoudjit/CSE_HR"
"ScientificClubofESI/LaraHack" -> "NEDJIMAbelgacem/regular-expressions-cpp-library"
"NVIDIA/tensorflow" -> "NVIDIA/nccl"
"NVIDIA/tensorflow" -> "NVIDIA/cub"
"NVIDIA/tensorflow" -> "NVIDIA/cutlass"
"NVIDIA/tensorflow" -> "alibaba/BladeDISC"
"NVIDIA/tensorflow" -> "tensorflow/runtime"
"NVIDIA/tensorflow" -> "NVIDIA/DeepLearningExamples" ["e"=1]
"NVIDIA/tensorflow" -> "NVIDIA/aistore" ["e"=1]
"NVIDIA/tensorflow" -> "NVIDIA/CUDALibrarySamples"
"NVIDIA/tensorflow" -> "NVIDIA/cudnn-frontend"
"NVIDIA/tensorflow" -> "tensorflow/mlir-hlo"
"NVIDIA/tensorflow" -> "NVIDIA/HugeCTR" ["e"=1]
"NVIDIA/tensorflow" -> "NVIDIA/TransformerEngine" ["e"=1]
"NVIDIA/tensorflow" -> "NVIDIA/cuda-samples"
"NVIDIA/tensorflow" -> "NVIDIA/libcudacxx"
"NVIDIA/tensorflow" -> "NVIDIA/thrust"
"apache/incubator-tvm" -> "microsoft/nnfusion"
"apache/incubator-tvm" -> "merrymercy/awesome-tensor-compilers"
"apache/incubator-tvm" -> "flame/how-to-optimize-gemm"
"apache/incubator-tvm" -> "d2l-ai/d2l-tvm"
"apache/incubator-tvm" -> "daquexian/onnx-simplifier" ["e"=1]
"apache/incubator-tvm" -> "pytorch/glow"
"apache/incubator-tvm" -> "alibaba/MNN" ["e"=1]
"apache/incubator-tvm" -> "halide/Halide"
"apache/incubator-tvm" -> "google/iree"
"apache/incubator-tvm" -> "jiazhihao/TASO"
"apache/incubator-tvm" -> "tensorflow/runtime"
"apache/incubator-tvm" -> "Tencent/TNN" ["e"=1]
"apache/incubator-tvm" -> "NVIDIA/cutlass"
"apache/incubator-tvm" -> "oneapi-src/oneDNN"
"apache/incubator-tvm" -> "NervanaSystems/distiller"
"farkhor/CuSha" -> "JianlongZhong/Medusa"
"farkhor/CuSha" -> "netsyslab/Totem"
"gunrock/gunrock" -> "jshun/ligra" ["e"=1]
"gunrock/gunrock" -> "farkhor/CuSha"
"gunrock/gunrock" -> "IntelligentSoftwareSystems/Galois" ["e"=1]
"gunrock/gunrock" -> "NVlabs/cub"
"gunrock/gunrock" -> "moderngpu/moderngpu"
"gunrock/gunrock" -> "gunrock/graphblast" ["e"=1]
"gunrock/gunrock" -> "rapidsai/cugraph" ["e"=1]
"gunrock/gunrock" -> "sbeamer/gapbs" ["e"=1]
"gunrock/gunrock" -> "groute/groute"
"gunrock/gunrock" -> "thu-pacman/GeminiGraph" ["e"=1]
"gunrock/gunrock" -> "farkhor/PaRMAT" ["e"=1]
"gunrock/gunrock" -> "GraphIt-DSL/graphit" ["e"=1]
"gunrock/gunrock" -> "cudpp/cudpp"
"gunrock/gunrock" -> "rapidsai/rmm"
"gunrock/gunrock" -> "JianlongZhong/Medusa"
"thrust/thrust" -> "NVlabs/cub"
"thrust/thrust" -> "arrayfire/arrayfire"
"thrust/thrust" -> "STEllAR-GROUP/hpx" ["e"=1]
"thrust/thrust" -> "moderngpu/moderngpu"
"thrust/thrust" -> "cusplibrary/cusplibrary"
"thrust/thrust" -> "boostorg/compute" ["e"=1]
"thrust/thrust" -> "ericniebler/range-v3" ["e"=1]
"thrust/thrust" -> "cudpp/cudpp"
"thrust/thrust" -> "parallel-forall/code-samples"
"thrust/thrust" -> "ddemidov/vexcl" ["e"=1]
"thrust/thrust" -> "NVIDIA/cutlass"
"thrust/thrust" -> "NVIDIA/nccl"
"thrust/thrust" -> "NVlabs/moderngpu"
"thrust/thrust" -> "philsquared/Catch" ["e"=1]
"thrust/thrust" -> "Microsoft/GSL" ["e"=1]
"Oneflow-Inc/diffusers" -> "Oneflow-Inc/libai"
"Oneflow-Inc/diffusers" -> "Oneflow-Inc/oneflow" ["e"=1]
"Oneflow-Inc/diffusers" -> "Oneflow-Inc/one-yolov5"
"Oneflow-Inc/diffusers" -> "Oneflow-Inc/models"
"Oneflow-Inc/diffusers" -> "Oneflow-Inc/vision"
"Oneflow-Inc/diffusers" -> "LuChengTHU/dpm-solver" ["e"=1]
"Oneflow-Inc/diffusers" -> "Oneflow-Inc/oneflow-documentation"
"Oneflow-Inc/diffusers" -> "stochasticai/x-stable-diffusion" ["e"=1]
"Oneflow-Inc/diffusers" -> "MegEngine/MegCC"
"Oneflow-Inc/diffusers" -> "Oneflow-Inc/oneflow_convert"
"herumi/xbyak" -> "asmjit/asmjit" ["e"=1]
"herumi/xbyak" -> "fujitsu/xbyak_aarch64"
"herumi/xbyak" -> "oneapi-src/oneDNN"
"herumi/xbyak" -> "hfp/libxsmm"
"herumi/xbyak" -> "flame/how-to-optimize-gemm"
"herumi/xbyak" -> "alibaba/BladeDISC"
"herumi/xbyak" -> "kobalicek/asmjit"
"herumi/xbyak" -> "vnmakarov/mir" ["e"=1]
"herumi/xbyak" -> "intel/mkl-dnn"
"herumi/xbyak" -> "intelxed/xed" ["e"=1]
"herumi/xbyak" -> "ispc/ispc" ["e"=1]
"herumi/xbyak" -> "NervanaSystems/maxas"
"herumi/xbyak" -> "BitFunnel/NativeJIT" ["e"=1]
"herumi/xbyak" -> "pigirons/cpufp"
"herumi/xbyak" -> "NVIDIA/cutlass"
"kobalicek/asmjit" -> "StanfordPL/x64asm" ["e"=1]
"kobalicek/asmjit" -> "matt-42/iod" ["e"=1]
"kobalicek/asmjit" -> "herumi/xbyak"
"kobalicek/asmjit" -> "EarlGray/c4" ["e"=1]
"kobalicek/asmjit" -> "cppformat/cppformat" ["e"=1]
"kobalicek/asmjit" -> "lpsantil/rt0" ["e"=1]
"kobalicek/asmjit" -> "bdcht/amoco" ["e"=1]
"kobalicek/asmjit" -> "trailofbits/mcsema" ["e"=1]
"kobalicek/asmjit" -> "BitFunnel/NativeJIT" ["e"=1]
"kobalicek/asmjit" -> "chaoticbob/tinyrenderers" ["e"=1]
"kobalicek/asmjit" -> "vmt/udis86" ["e"=1]
"kobalicek/asmjit" -> "rampantpixels/rpmalloc" ["e"=1]
"kobalicek/asmjit" -> "maximecb/Higgs" ["e"=1]
"kobalicek/asmjit" -> "fruxo/turbobadger" ["e"=1]
"projectNe10/Ne10" -> "ARM-software/ComputeLibrary"
"projectNe10/Ne10" -> "intel/ARM_NEON_2_x86_SSE" ["e"=1]
"projectNe10/Ne10" -> "google/gemmlowp"
"projectNe10/Ne10" -> "thenifty/neon-guide"
"projectNe10/Ne10" -> "pytorch/QNNPACK"
"projectNe10/Ne10" -> "Tencent/FeatherCNN"
"projectNe10/Ne10" -> "ermig1979/Simd" ["e"=1]
"projectNe10/Ne10" -> "ARM-software/armnn"
"projectNe10/Ne10" -> "Maratyszcza/NNPACK"
"projectNe10/Ne10" -> "andravin/wincnn"
"projectNe10/Ne10" -> "flame/how-to-optimize-gemm"
"projectNe10/Ne10" -> "halide/Halide"
"projectNe10/Ne10" -> "ARM-software/optimized-routines"
"projectNe10/Ne10" -> "XiaoMi/mace"
"projectNe10/Ne10" -> "andrepuschmann/math-neon"
"nod-ai/SHARK" -> "azuritecoin/OnnxDiffusersUI"
"nod-ai/SHARK" -> "lshqqytiger/stable-diffusion-webui-directml"
"nod-ai/SHARK" -> "iree-org/iree"
"nod-ai/SHARK" -> "Amblyopius/Stable-Diffusion-ONNX-FP16"
"nod-ai/SHARK" -> "llvm/torch-mlir"
"nod-ai/SHARK" -> "Amblyopius/AMD-Stable-Diffusion-ONNX-FP16"
"nod-ai/SHARK" -> "pythoninoffice/amd_webui"
"nod-ai/SHARK" -> "ssube/onnx-web"
"nod-ai/SHARK" -> "LostRuins/koboldcpp" ["e"=1]
"nod-ai/SHARK" -> "onnx/onnx-mlir"
"nod-ai/SHARK" -> "n00mkrad/text2image-gui" ["e"=1]
"nod-ai/SHARK" -> "tensorflow/mlir-hlo"
"nod-ai/SHARK" -> "devilismyfriend/StableTuner" ["e"=1]
"nod-ai/SHARK" -> "google/iree"
"nod-ai/SHARK" -> "ForserX/StableDiffusionUI"
"facebookincubator/clangir" -> "llvm/clangir"
"m-a-d-n-e-s-s/madness" -> "ValeevGroup/tiledarray"
"m-a-d-n-e-s-s/madness" -> "solomonik/ctf"
"linux-rdma/perftest" -> "linux-rdma/rdma-core"
"linux-rdma/perftest" -> "efficient/rdma_bench"
"linux-rdma/perftest" -> "jcxue/RDMA-Tutorial"
"linux-rdma/perftest" -> "openucx/ucx"
"linux-rdma/perftest" -> "claudebarthels/infinity"
"linux-rdma/perftest" -> "Mellanox/nv_peer_memory"
"linux-rdma/perftest" -> "NVIDIA/gdrcopy"
"linux-rdma/perftest" -> "efficient/fasst"
"linux-rdma/perftest" -> "bobzhuyb/ns3-rdma"
"linux-rdma/perftest" -> "erpc-io/eRPC"
"linux-rdma/perftest" -> "tarickb/the-geek-in-the-corner"
"linux-rdma/perftest" -> "microsoft/Freeflow"
"linux-rdma/perftest" -> "Mellanox/libvma"
"linux-rdma/perftest" -> "redn-io/RedN"
"linux-rdma/perftest" -> "alibaba-edu/High-Precision-Congestion-Control"
"NVIDIA-developer-blog/code-samples" -> "NVIDIA/multi-gpu-programming-models"
"NVIDIA-developer-blog/code-samples" -> "NVIDIA/CUDALibrarySamples"
"NVIDIA-developer-blog/code-samples" -> "NVIDIA/cutlass"
"NVIDIA-developer-blog/code-samples" -> "NVIDIA/gdrcopy"
"NVIDIA-developer-blog/code-samples" -> "NVlabs/cub"
"NVIDIA-developer-blog/code-samples" -> "NVIDIA/cuda-samples"
"NVIDIA-developer-blog/code-samples" -> "gpgpu-sim/gpgpu-sim_distribution" ["e"=1]
"NVIDIA-developer-blog/code-samples" -> "NervanaSystems/maxas"
"NVIDIA-developer-blog/code-samples" -> "microsoft/nnfusion"
"NVIDIA-developer-blog/code-samples" -> "NVIDIA/nccl"
"NVIDIA-developer-blog/code-samples" -> "NVIDIA/cub"
"NVIDIA-developer-blog/code-samples" -> "pytorch/extension-cpp"
"NVIDIA-developer-blog/code-samples" -> "wzsh/wmma_tensorcore_sample"
"NVIDIA-developer-blog/code-samples" -> "cloudcores/CuAssembler"
"NVIDIA-developer-blog/code-samples" -> "cudpp/cudpp"
"NVIDIA/stdexec" -> "facebookexperimental/libunifex" ["e"=1]
"NVIDIA/stdexec" -> "NVIDIA/nvbench"
"NVIDIA/stdexec" -> "NVIDIA/cuCollections"
"NVIDIA/stdexec" -> "NVIDIA/MatX"
"NVIDIA/stdexec" -> "ned14/outcome" ["e"=1]
"NVIDIA/stdexec" -> "alibaba/yalantinglibs" ["e"=1]
"NVIDIA/stdexec" -> "rapidsai/rmm"
"NVIDIA/stdexec" -> "kokkos/mdspan" ["e"=1]
"NVIDIA/stdexec" -> "ned14/llfio" ["e"=1]
"NVIDIA/stdexec" -> "stlab/libraries" ["e"=1]
"NVIDIA/stdexec" -> "NVIDIA/libcudacxx"
"NVIDIA/stdexec" -> "martinus/unordered_dense" ["e"=1]
"NVIDIA/stdexec" -> "boost-ext/te" ["e"=1]
"NVIDIA/stdexec" -> "microsoft/proxy" ["e"=1]
"NVIDIA/stdexec" -> "cplusplus/papers" ["e"=1]
"NVIDIA/cutlass" -> "NervanaSystems/maxas"
"NVIDIA/cutlass" -> "NVIDIA/cub"
"NVIDIA/cutlass" -> "NVIDIA/nccl"
"NVIDIA/cutlass" -> "merrymercy/awesome-tensor-compilers"
"NVIDIA/cutlass" -> "NVIDIA/cuda-samples"
"NVIDIA/cutlass" -> "flame/how-to-optimize-gemm"
"NVIDIA/cutlass" -> "NVIDIA/FasterTransformer" ["e"=1]
"NVIDIA/cutlass" -> "microsoft/nnfusion"
"NVIDIA/cutlass" -> "NVIDIA/CUDALibrarySamples"
"NVIDIA/cutlass" -> "facebookincubator/AITemplate" ["e"=1]
"NVIDIA/cutlass" -> "openai/triton" ["e"=1]
"NVIDIA/cutlass" -> "alibaba/BladeDISC"
"NVIDIA/cutlass" -> "openppl-public/ppl.nn"
"NVIDIA/cutlass" -> "NVlabs/cub"
"NVIDIA/cutlass" -> "NVIDIA/TensorRT" ["e"=1]
"muatik/openmp-examples" -> "ysh329/OpenMP-101"
"trailofbits/vast" -> "llvm/clangir"
"jcxue/RDMA-Tutorial" -> "efficient/rdma_bench"
"jcxue/RDMA-Tutorial" -> "linux-rdma/rdma-core"
"jcxue/RDMA-Tutorial" -> "tarickb/the-geek-in-the-corner"
"jcxue/RDMA-Tutorial" -> "thustorage/octopus"
"jcxue/RDMA-Tutorial" -> "linux-rdma/perftest"
"jcxue/RDMA-Tutorial" -> "claudebarthels/infinity"
"jcxue/RDMA-Tutorial" -> "coolriver/RDMA_Aware_Programming-CN"
"jcxue/RDMA-Tutorial" -> "Mellanox/libvma"
"jcxue/RDMA-Tutorial" -> "erpc-io/eRPC"
"jcxue/RDMA-Tutorial" -> "bobzhuyb/ns3-rdma"
"jcxue/RDMA-Tutorial" -> "efficient/fasst"
"jcxue/RDMA-Tutorial" -> "openucx/ucx"
"jcxue/RDMA-Tutorial" -> "animeshtrivedi/rdma-example"
"jcxue/RDMA-Tutorial" -> "microsoft/Freeflow"
"jcxue/RDMA-Tutorial" -> "rhiswell/rdma-tutorial"
"ARM-software/ComputeLibrary" -> "ARM-software/armnn"
"ARM-software/ComputeLibrary" -> "projectNe10/Ne10"
"ARM-software/ComputeLibrary" -> "google/gemmlowp"
"ARM-software/ComputeLibrary" -> "XiaoMi/mace"
"ARM-software/ComputeLibrary" -> "OAID/Tengine" ["e"=1]
"ARM-software/ComputeLibrary" -> "dmlc/tvm"
"ARM-software/ComputeLibrary" -> "pytorch/QNNPACK"
"ARM-software/ComputeLibrary" -> "alibaba/MNN" ["e"=1]
"ARM-software/ComputeLibrary" -> "Maratyszcza/NNPACK"
"ARM-software/ComputeLibrary" -> "Tencent/FeatherCNN"
"ARM-software/ComputeLibrary" -> "ermig1979/Simd" ["e"=1]
"ARM-software/ComputeLibrary" -> "Tencent/ncnn" ["e"=1]
"ARM-software/ComputeLibrary" -> "halide/Halide"
"ARM-software/ComputeLibrary" -> "xianyi/OpenBLAS"
"ARM-software/ComputeLibrary" -> "flame/how-to-optimize-gemm"
"ARM-software/optimized-routines" -> "shibatch/sleef" ["e"=1]
"ARM-software/optimized-routines" -> "projectNe10/Ne10"
"ARM-software/optimized-routines" -> "kdrag0n/adevtool" ["e"=1]
"ARM-software/optimized-routines" -> "kerneltoast/android_kernel_google_floral" ["e"=1]
"ARM-software/optimized-routines" -> "ARM-software/ComputeLibrary"
"tensorflow/benchmarks" -> "tensorflow/ecosystem" ["e"=1]
"tensorflow/benchmarks" -> "baidu-research/DeepBench"
"tensorflow/benchmarks" -> "tensorflow/transform" ["e"=1]
"tensorflow/benchmarks" -> "facebookincubator/gloo"
"tensorflow/benchmarks" -> "NVIDIA/nccl"
"tensorflow/benchmarks" -> "mlperf/training"
"tensorflow/benchmarks" -> "uber/horovod" ["e"=1]
"tensorflow/benchmarks" -> "baidu-research/tensorflow-allreduce"
"tensorflow/benchmarks" -> "tmulc18/Distributed-TensorFlow-Guide"
"tensorflow/benchmarks" -> "bytedance/byteps" ["e"=1]
"tensorflow/benchmarks" -> "tensorflow/profiler-ui"
"tensorflow/benchmarks" -> "NVIDIA/nccl-tests"
"tensorflow/benchmarks" -> "tensorflow/fold" ["e"=1]
"tensorflow/benchmarks" -> "baidu-research/baidu-allreduce"
"tensorflow/benchmarks" -> "mlperf/reference"
"PlatformLab/Arachne" -> "SJTU-IPADS/drtmh"
"PlatformLab/Arachne" -> "PlatformLab/CoreArbiter"
"PlatformLab/Arachne" -> "PlatformLab/memcached-A"
"PlatformLab/Arachne" -> "efficient/fasst"
"PlatformLab/Arachne" -> "shenango/shenango"
"PlatformLab/HomaModule" -> "PlatformLab/Homa"
"PlatformLab/HomaModule" -> "PlatformLab/HomaSimulation"
"PlatformLab/HomaModule" -> "PlatformLab/grpc_homa"
"facebookresearch/CompilerGym" -> "google/ml-compiler-opt"
"facebookresearch/CompilerGym" -> "zwang4/awesome-machine-learning-in-compilers"
"facebookresearch/CompilerGym" -> "ChrisCummins/ProGraML"
"facebookresearch/CompilerGym" -> "llvm/torch-mlir"
"facebookresearch/CompilerGym" -> "jansel/opentuner"
"facebookresearch/CompilerGym" -> "google/iree"
"facebookresearch/CompilerGym" -> "merrymercy/awesome-tensor-compilers"
"facebookresearch/CompilerGym" -> "tensorflow/mlir-hlo"
"facebookresearch/CompilerGym" -> "thu-pacman/PET"
"facebookresearch/CompilerGym" -> "jiazhihao/TASO"
"facebookresearch/CompilerGym" -> "onnx/onnx-mlir"
"facebookresearch/CompilerGym" -> "spcl/ncc"
"facebookresearch/CompilerGym" -> "AliveToolkit/alive2" ["e"=1]
"facebookresearch/CompilerGym" -> "spcl/pymlir"
"facebookresearch/CompilerGym" -> "microsoft/antares"
"open-mpi/hwloc" -> "open-mpi/ompi"
"open-mpi/hwloc" -> "memkind/memkind" ["e"=1]
"open-mpi/hwloc" -> "ofiwg/libfabric"
"open-mpi/hwloc" -> "numactl/numactl"
"open-mpi/hwloc" -> "RRZE-HPC/likwid" ["e"=1]
"open-mpi/hwloc" -> "mpi-forum/mpi-issues"
"open-mpi/hwloc" -> "pmem/rpma"
"open-mpi/hwloc" -> "NVIDIA/gdrcopy"
"open-mpi/hwloc" -> "intel/mpi-benchmarks"
"open-mpi/hwloc" -> "pmodels/mpich"
"open-mpi/hwloc" -> "LLNL/GOTCHA" ["e"=1]
"open-mpi/hwloc" -> "openucx/ucx"
"open-mpi/hwloc" -> "Qthreads/qthreads" ["e"=1]
"open-mpi/hwloc" -> "jeffhammond/HPCInfo" ["e"=1]
"open-mpi/hwloc" -> "hpcg-benchmark/hpcg" ["e"=1]
"pytorch/extension-cpp" -> "zdevito/ATen"
"pytorch/extension-cpp" -> "szagoruyko/pyinn"
"pytorch/extension-cpp" -> "chrischoy/pytorch-custom-cuda-tutorial"
"pytorch/extension-cpp" -> "pytorch/extension-ffi"
"pytorch/extension-cpp" -> "ignacio-rocco/detectorch" ["e"=1]
"pytorch/extension-cpp" -> "tczhangzhi/pytorch-parallel" ["e"=1]
"pytorch/extension-cpp" -> "pytorch/cppdocs"
"pytorch/extension-cpp" -> "NVIDIA-developer-blog/code-samples"
"pytorch/extension-cpp" -> "pytorch/tnt" ["e"=1]
"pytorch/extension-cpp" -> "oeway/pytorch-deform-conv" ["e"=1]
"pytorch/extension-cpp" -> "sniklaus/pytorch-extension"
"pytorch/extension-cpp" -> "marvis/pytorch-caffe" ["e"=1]
"pytorch/extension-cpp" -> "lanpa/tensorboard-pytorch" ["e"=1]
"pytorch/extension-cpp" -> "facebookresearch/TensorComprehensions"
"pytorch/extension-cpp" -> "NVIDIA/PyProf" ["e"=1]
"lshqqytiger/stable-diffusion-webui-directml" -> "lshqqytiger/k-diffusion-directml"
"lshqqytiger/stable-diffusion-webui-directml" -> "azuritecoin/OnnxDiffusersUI"
"lshqqytiger/stable-diffusion-webui-directml" -> "nod-ai/SHARK"
"lshqqytiger/stable-diffusion-webui-directml" -> "Amblyopius/Stable-Diffusion-ONNX-FP16"
"lshqqytiger/stable-diffusion-webui-directml" -> "lshqqytiger/stablediffusion-directml"
"lshqqytiger/stable-diffusion-webui-directml" -> "journey-ad/sd-webui-bilingual-localization" ["e"=1]
"lshqqytiger/stable-diffusion-webui-directml" -> "xuhuisheng/rocm-gfx803"
"lshqqytiger/stable-diffusion-webui-directml" -> "AUTOMATIC1111/stable-diffusion-webui-rembg" ["e"=1]
"lshqqytiger/stable-diffusion-webui-directml" -> "anapnoe/stable-diffusion-webui-ux" ["e"=1]
"lshqqytiger/stable-diffusion-webui-directml" -> "jexom/sd-webui-depth-lib" ["e"=1]
"flame/blis" -> "flame/libflame"
"flame/blis" -> "hfp/libxsmm"
"flame/blis" -> "flame/how-to-optimize-gemm"
"flame/blis" -> "flame/blislab"
"flame/blis" -> "xianyi/OpenBLAS"
"flame/blis" -> "NVIDIA/cutlass"
"flame/blis" -> "tensor-compiler/taco"
"flame/blis" -> "michael-lehn/ulmBLAS"
"flame/blis" -> "CNugteren/CLBlast" ["e"=1]
"flame/blis" -> "kokkos/kokkos" ["e"=1]
"flame/blis" -> "clMathLibraries/clBLAS" ["e"=1]
"flame/blis" -> "elemental/Elemental"
"flame/blis" -> "giaf/blasfeo" ["e"=1]
"flame/blis" -> "devinamatthews/tblis"
"flame/blis" -> "google/gemmlowp"
"mit-han-lab/tinyengine" -> "mit-han-lab/mcunet"
"mit-han-lab/tinyengine" -> "mit-han-lab/tiny-training"
"mit-han-lab/tinyengine" -> "mit-han-lab/tinyml"
"mit-han-lab/tinyengine" -> "MegEngine/MegCC"
"mit-han-lab/tinyengine" -> "tensorflow/tflite-micro"
"mit-han-lab/tinyengine" -> "KnowingNothing/compiler-and-arch"
"mit-han-lab/tinyengine" -> "ARM-software/ML-zoo"
"mit-han-lab/tinyengine" -> "mlcommons/tiny"
"mit-han-lab/tinyengine" -> "idstcv/ZenNAS" ["e"=1]
"mit-han-lab/tinyengine" -> "mit-han-lab/smoothquant" ["e"=1]
"mit-han-lab/tinyengine" -> "NVIDIA/TransformerEngine" ["e"=1]
"mit-han-lab/tinyengine" -> "openppl-public/ppq" ["e"=1]
"mit-han-lab/tinyengine" -> "alibaba/TinyNeuralNetwork" ["e"=1]
"mit-han-lab/tinyengine" -> "quic/aimet" ["e"=1]
"mit-han-lab/tinyengine" -> "sipeed/TinyMaix" ["e"=1]
"mit-han-lab/tinyml" -> "gigwegbe/tinyml-papers-and-projects"
"mit-han-lab/tinyml" -> "mit-han-lab/mcunet"
"mit-han-lab/tinyml" -> "mit-han-lab/tinyengine"
"mit-han-lab/tinyml" -> "mit-han-lab/once-for-all" ["e"=1]
"mit-han-lab/tinyml" -> "mlcommons/tiny"
"mit-han-lab/tinyml" -> "ARM-software/ML-zoo"
"mit-han-lab/tinyml" -> "mit-han-lab/hardware-aware-transformers" ["e"=1]
"mit-han-lab/tinyml" -> "uTensor/uTensor"
"mit-han-lab/tinyml" -> "tensorflow/tflite-micro"
"mit-han-lab/tinyml" -> "mit-han-lab/proxylessnas" ["e"=1]
"mit-han-lab/tinyml" -> "tinyMLx/colabs"
"mit-han-lab/tinyml" -> "alibaba/TinyNeuralNetwork" ["e"=1]
"mit-han-lab/tinyml" -> "yhhhli/APoT_Quantization" ["e"=1]
"mit-han-lab/tinyml" -> "HollowMan6/TinyML-ESP32"
"mit-han-lab/tinyml" -> "ucb-bar/gemmini" ["e"=1]
"uTensor/uTensor" -> "gigwegbe/tinyml-papers-and-projects"
"uTensor/uTensor" -> "mit-han-lab/tinyml"
"uTensor/uTensor" -> "uTensor/utensor_cgen"
"uTensor/uTensor" -> "tensorflow/tflite-micro"
"uTensor/uTensor" -> "ARM-software/armnn"
"uTensor/uTensor" -> "majianjia/nnom" ["e"=1]
"uTensor/uTensor" -> "microsoft/ELL"
"uTensor/uTensor" -> "microsoft/EdgeML"
"uTensor/uTensor" -> "renode/renode" ["e"=1]
"uTensor/uTensor" -> "arduino/ArduinoTensorFlowLiteTutorials"
"uTensor/uTensor" -> "mlcommons/tiny"
"uTensor/uTensor" -> "ARM-software/ML-KWS-for-MCU" ["e"=1]
"uTensor/uTensor" -> "symisc/sod" ["e"=1]
"uTensor/uTensor" -> "cpetig/tflite_micro_compiler"
"uTensor/uTensor" -> "ai-techsystems/deepC"
"intel/caffe" -> "01org/mkl-dnn"
"intel/caffe" -> "NVIDIA/caffe" ["e"=1]
"intel/caffe" -> "shicai/MobileNet-Caffe" ["e"=1]
"intel/caffe" -> "intel/mkl-dnn"
"intel/caffe" -> "soeaver/caffe-model" ["e"=1]
"intel/caffe" -> "luoyetx/mini-caffe" ["e"=1]
"intel/caffe" -> "baidu-research/DeepBench"
"intel/caffe" -> "intel/Theano"
"intel/caffe" -> "yonghenglh6/DepthwiseConvolution" ["e"=1]
"intel/caffe" -> "chuanqi305/MobileNet-SSD" ["e"=1]
"intel/caffe" -> "Maratyszcza/NNPACK"
"intel/caffe" -> "google/gemmlowp"
"intel/caffe" -> "NVIDIA/nccl"
"intel/caffe" -> "weiliu89/caffe" ["e"=1]
"intel/caffe" -> "Tencent/FeatherCNN"
"PaddlePaddle/Anakin" -> "Tencent/FeatherCNN"
"PaddlePaddle/Anakin" -> "BUG1989/caffe-int8-convert-tools"
"PaddlePaddle/Anakin" -> "luoyetx/mini-caffe" ["e"=1]
"PaddlePaddle/Anakin" -> "andravin/wincnn"
"PaddlePaddle/Anakin" -> "JDAI-CV/dabnn" ["e"=1]
"PaddlePaddle/Anakin" -> "olojuwin/facerecognize-for-mobile-phone" ["e"=1]
"PaddlePaddle/Anakin" -> "huawei-noah/bolt"
"PaddlePaddle/Anakin" -> "yonghenglh6/DepthwiseConvolution" ["e"=1]
"PaddlePaddle/Anakin" -> "pytorch/QNNPACK"
"PaddlePaddle/Anakin" -> "google/gemmlowp"
"PaddlePaddle/Anakin" -> "flame/how-to-optimize-gemm"
"PaddlePaddle/Anakin" -> "openppl-public/ppl.nn"
"PaddlePaddle/Anakin" -> "dmlc/tvm"
"PaddlePaddle/Anakin" -> "in66-dev/In-Prestissimo" ["e"=1]
"PaddlePaddle/Anakin" -> "PaddlePaddle/paddle-mobile" ["e"=1]
"zjhellofss/KuiperInfer" -> "chenzomi12/DeepLearningSystem"
"zjhellofss/KuiperInfer" -> "MegEngine/MegCC"
"zjhellofss/KuiperInfer" -> "BBuf/tvm_mlir_learn"
"zjhellofss/KuiperInfer" -> "zjhellofss/KuiperCourse"
"zjhellofss/KuiperInfer" -> "openppl-public/ppq" ["e"=1]
"zjhellofss/KuiperInfer" -> "BBuf/how-to-optim-algorithm-in-cuda"
"zjhellofss/KuiperInfer" -> "openmlsys/openmlsys-zh"
"zjhellofss/KuiperInfer" -> "tpoisonooo/how-to-optimize-gemm"
"zjhellofss/KuiperInfer" -> "openppl-public/ppl.nn"
"zjhellofss/KuiperInfer" -> "parallel101/course" ["e"=1]
"zjhellofss/KuiperInfer" -> "shouxieai/learning-cuda-trt" ["e"=1]
"zjhellofss/KuiperInfer" -> "vesuppi/nanoPyC"
"zjhellofss/KuiperInfer" -> "Tony-Tan/CUDA_Freshman"
"zjhellofss/KuiperInfer" -> "merrymercy/awesome-tensor-compilers"
"zjhellofss/KuiperInfer" -> "mlc-ai/mlc-zh"
"SJTU-IPADS/wukong" -> "SJTU-IPADS/drtm"
"SJTU-IPADS/wukong" -> "sjtugjy/enclave-migration"
"SJTU-IPADS/wukong" -> "SJTU-IPADS/sgx-migration"
"SJTU-IPADS/wukong" -> "realstolz/powerlyra" ["e"=1]
"SJTU-IPADS/wukong" -> "efficient/fasst"
"SJTU-IPADS/wukong" -> "WukLab/LITE"
"SJTU-IPADS/wukong" -> "thu-pacman/GeminiGraph" ["e"=1]
"Tony-Tan/CUDA_Freshman" -> "brucefan1983/CUDA-Programming"
"Tony-Tan/CUDA_Freshman" -> "godweiyang/NN-CUDA-Example"
"Tony-Tan/CUDA_Freshman" -> "NVIDIA/trt-samples-for-hackathon-cn" ["e"=1]
"Tony-Tan/CUDA_Freshman" -> "LitLeo/TensorRT_Tutorial" ["e"=1]
"Tony-Tan/CUDA_Freshman" -> "NVIDIA/cuda-samples"
"Tony-Tan/CUDA_Freshman" -> "Liu-xiandong/How_to_optimize_in_GPU"
"Tony-Tan/CUDA_Freshman" -> "NVIDIA/cutlass"
"Tony-Tan/CUDA_Freshman" -> "shouxieai/tensorRT_Pro" ["e"=1]
"Tony-Tan/CUDA_Freshman" -> "flame/how-to-optimize-gemm"
"Tony-Tan/CUDA_Freshman" -> "huiscliu/Tutorials"
"Tony-Tan/CUDA_Freshman" -> "BBuf/how-to-optim-algorithm-in-cuda"
"Tony-Tan/CUDA_Freshman" -> "zerollzeng/tiny-tensorrt" ["e"=1]
"Tony-Tan/CUDA_Freshman" -> "BBuf/tvm_mlir_learn"
"Tony-Tan/CUDA_Freshman" -> "tpoisonooo/how-to-optimize-gemm"
"Tony-Tan/CUDA_Freshman" -> "zjhellofss/KuiperInfer"
"pytorch/torchx" -> "pytorch/torchsnapshot"
"pytorch/torchx" -> "pytorch/torchdistx"
"XiaoMi/mobile-ai-bench" -> "XiaoMi/mace-models"
"XiaoMi/mobile-ai-bench" -> "Tencent/FeatherCNN"
"XiaoMi/mobile-ai-bench" -> "HolmesShuan/CNN-Inference-Engine-Quick-View"
"XiaoMi/mobile-ai-bench" -> "BUG1989/caffe-int8-convert-tools"
"XiaoMi/mobile-ai-bench" -> "pytorch/QNNPACK"
"XiaoMi/mobile-ai-bench" -> "huawei-noah/bolt"
"XiaoMi/mobile-ai-bench" -> "XiaoMi/mace"
"XiaoMi/mobile-ai-bench" -> "facebook/FAI-PEP"
"XiaoMi/mobile-ai-bench" -> "PaddlePaddle/Anakin"
"XiaoMi/mobile-ai-bench" -> "starimeL/PytorchConverter" ["e"=1]
"zchee/cuda-sample" -> "NVIDIA/cuda-samples"
"zchee/cuda-sample" -> "ROCm-Developer-Tools/HIP-Examples" ["e"=1]
"TracyMcgrady6/Distribute_MNIST" -> "thewintersun/distributeTensorflowExample"
"TracyMcgrady6/Distribute_MNIST" -> "tmulc18/Distributed-TensorFlow-Guide"
"TracyMcgrady6/Distribute_MNIST" -> "gctian/distributed-tensorflow"
"baidu-research/tensorflow-allreduce" -> "baidu-research/baidu-allreduce"
"baidu-research/tensorflow-allreduce" -> "facebookincubator/gloo"
"baidu-research/tensorflow-allreduce" -> "dmlc/rabit" ["e"=1]
"baidu-research/tensorflow-allreduce" -> "NVIDIA/HugeCTR" ["e"=1]
"baidu-research/tensorflow-allreduce" -> "tensorflow/benchmarks"
"baidu-research/tensorflow-allreduce" -> "tmulc18/Distributed-TensorFlow-Guide"
"baidu-research/tensorflow-allreduce" -> "CNevd/Difacto_DMLC" ["e"=1]
"open-mpi/ompi" -> "pmodels/mpich"
"open-mpi/ompi" -> "openucx/ucx"
"open-mpi/ompi" -> "NVIDIA/nccl"
"open-mpi/ompi" -> "open-mpi/hwloc"
"open-mpi/ompi" -> "ofiwg/libfabric"
"open-mpi/ompi" -> "wesleykendall/mpitutorial"
"open-mpi/ompi" -> "linux-rdma/rdma-core"
"open-mpi/ompi" -> "SchedMD/slurm" ["e"=1]
"open-mpi/ompi" -> "facebookincubator/gloo"
"open-mpi/ompi" -> "spack/spack" ["e"=1]
"open-mpi/ompi" -> "NVIDIA/gdrcopy"
"open-mpi/ompi" -> "open-mpi/ompi-release"
"open-mpi/ompi" -> "NVIDIA/nccl-tests"
"open-mpi/ompi" -> "kokkos/kokkos" ["e"=1]
"open-mpi/ompi" -> "Mellanox/nv_peer_memory"
"tbennun/cudnn-training" -> "Hardware-Alchemy/cuDNN-sample"
"tbennun/cudnn-training" -> "pwlnk/cuda-neural-network"
"tbennun/cudnn-training" -> "haanjack/mnist-cudnn"
"wesleykendall/mpitutorial" -> "open-mpi/ompi"
"wesleykendall/mpitutorial" -> "pmodels/mpich"
"wesleykendall/mpitutorial" -> "NVIDIA/nccl"
"wesleykendall/mpitutorial" -> "dmlc/ps-lite" ["e"=1]
"wesleykendall/mpitutorial" -> "jbornschein/mpi4py-examples"
"wesleykendall/mpitutorial" -> "dmlc/rabit" ["e"=1]
"wesleykendall/mpitutorial" -> "facebookincubator/gloo"
"wesleykendall/mpitutorial" -> "openucx/ucx"
"wesleykendall/mpitutorial" -> "mpi4py/mpi4py"
"wesleykendall/mpitutorial" -> "bytedance/byteps" ["e"=1]
"wesleykendall/mpitutorial" -> "kokkos/kokkos" ["e"=1]
"wesleykendall/mpitutorial" -> "dmlc/tvm"
"wesleykendall/mpitutorial" -> "HPCToolkit/hpctoolkit" ["e"=1]
"wesleykendall/mpitutorial" -> "baidu-research/baidu-allreduce"
"wesleykendall/mpitutorial" -> "ParRes/Kernels" ["e"=1]
"NVIDIA/CUDALibrarySamples" -> "NVIDIA/cub"
"NVIDIA/CUDALibrarySamples" -> "NVIDIA/cutlass"
"NVIDIA/CUDALibrarySamples" -> "NVIDIA/cuda-samples"
"NVIDIA/CUDALibrarySamples" -> "NVIDIA/nvbench"
"NVIDIA/CUDALibrarySamples" -> "NVIDIA/thrust"
"NVIDIA/CUDALibrarySamples" -> "NVIDIA/multi-gpu-programming-models"
"NVIDIA/CUDALibrarySamples" -> "Liu-xiandong/How_to_optimize_in_GPU"
"NVIDIA/CUDALibrarySamples" -> "NVIDIA-developer-blog/code-samples"
"NVIDIA/CUDALibrarySamples" -> "google-research/sputnik" ["e"=1]
"NVIDIA/CUDALibrarySamples" -> "NVIDIA/libcudacxx"
"NVIDIA/CUDALibrarySamples" -> "NervanaSystems/maxas"
"NVIDIA/CUDALibrarySamples" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs"
"NVIDIA/CUDALibrarySamples" -> "NVIDIA/AMGX" ["e"=1]
"NVIDIA/CUDALibrarySamples" -> "microsoft/nnfusion"
"NVIDIA/CUDALibrarySamples" -> "oneapi-src/oneMKL" ["e"=1]
"huiscliu/Tutorials" -> "Tony-Tan/CUDA_Freshman"
"huiscliu/Tutorials" -> "brucefan1983/CUDA-Programming"
"huiscliu/Tutorials" -> "LitLeo/TensorRT_Tutorial" ["e"=1]
"huiscliu/Tutorials" -> "Syencil/tensorRT" ["e"=1]
"huiscliu/Tutorials" -> "godweiyang/NN-CUDA-Example"
"inducer/loopy" -> "dmlc/HalideIR"
"inducer/loopy" -> "inducer/pymbolic"
"inducer/loopy" -> "Meinersbur/ppcg"
"inducer/loopy" -> "facebookresearch/TensorComprehensions"
"inducer/loopy" -> "pytorch/tvm"
"inducer/loopy" -> "mli/d2l-tvm"
"inducer/loopy" -> "dmlc/dlpack"
"inducer/loopy" -> "tensorflow/mlir"
"inducer/loopy" -> "bondhugula/pluto"
"inducer/loopy" -> "StrongSpoon/tvm.schedule"
"inducer/loopy" -> "ONNC/onnc" ["e"=1]
"inducer/loopy" -> "google/iree"
"inducer/loopy" -> "NervanaSystems/maxas"
"inducer/loopy" -> "pocl/pocl" ["e"=1]
"inducer/loopy" -> "tensorflow/mlir-hlo"
"microsoft/nnfusion" -> "jiazhihao/TASO"
"microsoft/nnfusion" -> "merrymercy/awesome-tensor-compilers"
"microsoft/nnfusion" -> "alibaba/BladeDISC"
"microsoft/nnfusion" -> "microsoft/antares"
"microsoft/nnfusion" -> "flexflow/FlexFlow"
"microsoft/nnfusion" -> "mit-han-lab/inter-operator-scheduler"
"microsoft/nnfusion" -> "tensorflow/runtime"
"microsoft/nnfusion" -> "tensorflow/mlir-hlo"
"microsoft/nnfusion" -> "KnowingNothing/FlexTensor"
"microsoft/nnfusion" -> "google/iree"
"microsoft/nnfusion" -> "onnx/onnx-mlir"
"microsoft/nnfusion" -> "flame/how-to-optimize-gemm"
"microsoft/nnfusion" -> "NVIDIA/cutlass"
"microsoft/nnfusion" -> "cloudcores/CuAssembler"
"microsoft/nnfusion" -> "tensor-compiler/taco"
"msnh2012/CasiaLabeler" -> "msnh2012/Msnhnet"
"msnh2012/CasiaLabeler" -> "FeiGeChuanShu/ncnn_nanodet_hand" ["e"=1]
"alibaba-edu/High-Precision-Congestion-Control" -> "bobzhuyb/ns3-rdma"
"alibaba-edu/High-Precision-Congestion-Control" -> "ProbabilisticINT/HPCC-PINT"
"alibaba-edu/High-Precision-Congestion-Control" -> "inet-tub/ns3-datacenter"
"alibaba-edu/High-Precision-Congestion-Control" -> "redn-io/RedN"
"alibaba-edu/High-Precision-Congestion-Control" -> "PlatformLab/HomaSimulation"
"alibaba-edu/High-Precision-Congestion-Control" -> "danushkam/rocc"
"alibaba-edu/High-Precision-Congestion-Control" -> "snowzjx/ns3-ecn-sharp"
"godweiyang/NN-CUDA-Example" -> "Tony-Tan/CUDA_Freshman"
"godweiyang/NN-CUDA-Example" -> "brucefan1983/CUDA-Programming"
"godweiyang/NN-CUDA-Example" -> "NVIDIA/trt-samples-for-hackathon-cn" ["e"=1]
"godweiyang/NN-CUDA-Example" -> "bytedance/lightseq" ["e"=1]
"godweiyang/NN-CUDA-Example" -> "NVIDIA/FasterTransformer" ["e"=1]
"godweiyang/NN-CUDA-Example" -> "onnx/onnx-tensorrt" ["e"=1]
"godweiyang/NN-CUDA-Example" -> "LitLeo/TensorRT_Tutorial" ["e"=1]
"godweiyang/NN-CUDA-Example" -> "tczhangzhi/pytorch-distributed" ["e"=1]
"godweiyang/NN-CUDA-Example" -> "chenzomi12/DeepLearningSystem"
"godweiyang/NN-CUDA-Example" -> "hhaAndroid/mmdetection-mini" ["e"=1]
"godweiyang/NN-CUDA-Example" -> "PeizeSun/OneNet" ["e"=1]
"godweiyang/NN-CUDA-Example" -> "Liu-xiandong/How_to_optimize_in_GPU"
"godweiyang/NN-CUDA-Example" -> "tczhangzhi/pytorch-parallel" ["e"=1]
"godweiyang/NN-CUDA-Example" -> "dk-liang/Awesome-Visual-Transformer" ["e"=1]
"godweiyang/NN-CUDA-Example" -> "BBuf/how-to-optim-algorithm-in-cuda"
"openppl-public/ppl.nn" -> "openppl-public/ppl.cv"
"openppl-public/ppl.nn" -> "openppl-public/ppq" ["e"=1]
"openppl-public/ppl.nn" -> "alibaba/BladeDISC"
"openppl-public/ppl.nn" -> "tpoisonooo/how-to-optimize-gemm"
"openppl-public/ppl.nn" -> "microsoft/nnfusion"
"openppl-public/ppl.nn" -> "flame/how-to-optimize-gemm"
"openppl-public/ppl.nn" -> "open-mmlab/mmdeploy" ["e"=1]
"openppl-public/ppl.nn" -> "huawei-noah/bolt"
"openppl-public/ppl.nn" -> "NVIDIA/cutlass"
"openppl-public/ppl.nn" -> "daquexian/onnx-simplifier" ["e"=1]
"openppl-public/ppl.nn" -> "MegEngine/MegCC"
"openppl-public/ppl.nn" -> "Tencent/TNN" ["e"=1]
"openppl-public/ppl.nn" -> "pigirons/cpufp"
"openppl-public/ppl.nn" -> "Tencent/Forward" ["e"=1]
"openppl-public/ppl.nn" -> "CVCUDA/CV-CUDA" ["e"=1]
"pytorch/builder" -> "pytorch/cppdocs"
"BBuf/tvm_mlir_learn" -> "merrymercy/awesome-tensor-compilers"
"BBuf/tvm_mlir_learn" -> "chenzomi12/DeepLearningSystem"
"BBuf/tvm_mlir_learn" -> "apache/tvm"
"BBuf/tvm_mlir_learn" -> "mlc-ai/mlc-zh"
"BBuf/tvm_mlir_learn" -> "alibaba/BladeDISC"
"BBuf/tvm_mlir_learn" -> "buddy-compiler/buddy-mlir"
"BBuf/tvm_mlir_learn" -> "BBuf/how-to-optim-algorithm-in-cuda"
"BBuf/tvm_mlir_learn" -> "openmlsys/openmlsys-zh"
"BBuf/tvm_mlir_learn" -> "flame/how-to-optimize-gemm"
"BBuf/tvm_mlir_learn" -> "MegEngine/MegCC"
"BBuf/tvm_mlir_learn" -> "microsoft/nnfusion"
"BBuf/tvm_mlir_learn" -> "zwang4/awesome-machine-learning-in-compilers"
"BBuf/tvm_mlir_learn" -> "openppl-public/ppq" ["e"=1]
"BBuf/tvm_mlir_learn" -> "sophgo/tpu-mlir"
"BBuf/tvm_mlir_learn" -> "llvm/torch-mlir"
"lutzroeder/Netron" -> "Microsoft/MMdnn" ["e"=1]
"lutzroeder/Netron" -> "openai/gradient-checkpointing"
"lutzroeder/Netron" -> "lanpa/tensorboard-pytorch" ["e"=1]
"lutzroeder/Netron" -> "dmlc/tvm"
"lutzroeder/Netron" -> "dmlc/nnvm"
"lutzroeder/Netron" -> "Maratyszcza/NNPACK"
"lutzroeder/Netron" -> "tf-coreml/tf-coreml" ["e"=1]
"lutzroeder/Netron" -> "google/gemmlowp"
"lutzroeder/Netron" -> "facebookresearch/TensorComprehensions"
"lutzroeder/Netron" -> "taehoonlee/tensornets"
"lutzroeder/Netron" -> "dnouri/skorch" ["e"=1]
"lutzroeder/Netron" -> "uber/horovod" ["e"=1]
"lutzroeder/Netron" -> "Prodicode/ann-visualizer" ["e"=1]
"lutzroeder/Netron" -> "mila-udem/welcome_tutorials" ["e"=1]
"lutzroeder/Netron" -> "ShichenLiu/CondenseNet" ["e"=1]
"Oneflow-Inc/DLPerf" -> "Oneflow-Inc/OneFlow-Benchmark"
"Oneflow-Inc/DLPerf" -> "Oneflow-Inc/oneflow-documentation"
"Oneflow-Inc/DLPerf" -> "Oneflow-Inc/libai"
"Oneflow-Inc/DLPerf" -> "Oneflow-Inc/vision"
"Oneflow-Inc/DLPerf" -> "Oneflow-Inc/oneflow-xrt"
"facebookresearch/TensorComprehensions" -> "pytorch/glow"
"facebookresearch/TensorComprehensions" -> "dmlc/tvm"
"facebookresearch/TensorComprehensions" -> "tensorflow/mlir"
"facebookresearch/TensorComprehensions" -> "halide/Halide"
"facebookresearch/TensorComprehensions" -> "tensor-compiler/taco"
"facebookresearch/TensorComprehensions" -> "NervanaSystems/ngraph"
"facebookresearch/TensorComprehensions" -> "dmlc/nnvm"
"facebookresearch/TensorComprehensions" -> "NVIDIA/cutlass"
"facebookresearch/TensorComprehensions" -> "facebookincubator/gloo"
"facebookresearch/TensorComprehensions" -> "jiazhihao/TASO"
"facebookresearch/TensorComprehensions" -> "lanpa/tensorboard-pytorch" ["e"=1]
"facebookresearch/TensorComprehensions" -> "zdevito/ATen"
"facebookresearch/TensorComprehensions" -> "microsoft/nnfusion"
"facebookresearch/TensorComprehensions" -> "dmlc/dlpack"
"facebookresearch/TensorComprehensions" -> "inducer/loopy"
"flame/blislab" -> "tpoisonooo/how-to-optimize-gemm"
"flame/blislab" -> "flame/how-to-optimize-gemm"
"flame/blislab" -> "pigirons/cpufp"
"flame/blislab" -> "tpoisonooo/chgemm"
"flame/blislab" -> "PAA-NCIC/PPoPP2017_artifact"
"flame/blislab" -> "andravin/wincnn"
"flame/blislab" -> "hfp/libxsmm"
"flame/blislab" -> "pigirons/sgemm_hsw"
"flame/blislab" -> "Yinghan-Li/YHs_Sample"
"flame/blislab" -> "BBuf/ArmNeonOptimization"
"flame/blislab" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs"
"flame/blislab" -> "flame/blis"
"flame/blislab" -> "NervanaSystems/maxas"
"flame/blislab" -> "msnh2012/Msnhnet"
"flame/blislab" -> "Liu-xiandong/How_to_optimize_in_GPU"
"leonardvandriel/caffe2_cpp_tutorial" -> "breadbread1984/Caffe2-C-demo"
"leonardvandriel/caffe2_cpp_tutorial" -> "leonardvandriel/caffe2_models"
"leonardvandriel/caffe2_cpp_tutorial" -> "caffe2/tutorials"
"leonardvandriel/caffe2_cpp_tutorial" -> "caffe2/models"
"leonardvandriel/caffe2_cpp_tutorial" -> "zdevito/ATen"
"leonardvandriel/caffe2_cpp_tutorial" -> "warmspringwinds/pytorch-cpp"
"NVIDIA/cnmem" -> "rapidsai/rmm"
"NVIDIA/cnmem" -> "NVIDIA/jitify"
"NVIDIA/cnmem" -> "NVIDIA/gdrcopy"
"NVIDIA/cnmem" -> "canonizer/halloc"
"NVIDIA/cnmem" -> "cudpp/cudpp"
"NVIDIA/cnmem" -> "facebook/fbcuda" ["e"=1]
"NVIDIA/cnmem" -> "NVlabs/cub"
"NVlabs/cub" -> "moderngpu/moderngpu"
"NVlabs/cub" -> "cudpp/cudpp"
"NVlabs/cub" -> "NVlabs/moderngpu"
"NVlabs/cub" -> "thrust/thrust"
"NVlabs/cub" -> "gunrock/gunrock"
"NVlabs/cub" -> "NVIDIA/cutlass"
"NVlabs/cub" -> "parallel-forall/code-samples"
"NVlabs/cub" -> "NVIDIA/nccl"
"NVlabs/cub" -> "NervanaSystems/maxas"
"NVlabs/cub" -> "cusplibrary/cusplibrary"
"NVlabs/cub" -> "facebook/fbcuda" ["e"=1]
"NVlabs/cub" -> "bryancatanzaro/trove"
"NVlabs/cub" -> "NVIDIA/jitify"
"NVlabs/cub" -> "NVIDIA/cnmem"
"NVlabs/cub" -> "NVIDIA-developer-blog/code-samples"
"alibaba/BladeDISC" -> "tensorflow/mlir-hlo"
"alibaba/BladeDISC" -> "microsoft/nnfusion"
"alibaba/BladeDISC" -> "openppl-public/ppl.nn"
"alibaba/BladeDISC" -> "MegEngine/MegCC"
"alibaba/BladeDISC" -> "llvm/torch-mlir"
"alibaba/BladeDISC" -> "merrymercy/awesome-tensor-compilers"
"alibaba/BladeDISC" -> "onnx/onnx-mlir"
"alibaba/BladeDISC" -> "tensorflow/runtime"
"alibaba/BladeDISC" -> "BBuf/tvm_mlir_learn"
"alibaba/BladeDISC" -> "alibaba/EasyParallelLibrary"
"alibaba/BladeDISC" -> "flame/how-to-optimize-gemm"
"alibaba/BladeDISC" -> "alibaba/DeepRec" ["e"=1]
"alibaba/BladeDISC" -> "google/iree"
"alibaba/BladeDISC" -> "alibaba/HybridBackend" ["e"=1]
"alibaba/BladeDISC" -> "tlc-pack/relax"
"dlsys-course/assignment1" -> "dlsys-course/assignment2-2018"
"dlsys-course/assignment1" -> "dlsys-course/tinyflow"
"dlsys-course/assignment1" -> "dlsys-course/assignment2"
"dlsys-course/assignment1" -> "dlsys-course/dlsys-course.github.io"
"dlsys-course/assignment1" -> "tqchen/tinyflow"
"dlsys-course/assignment1" -> "dmlc/nnvm"
"dlsys-course/assignment1" -> "tobegit3hub/miniflow" ["e"=1]
"dlsys-course/assignment1" -> "ucbrise/cs294-ai-sys-sp19"
"openppl-public/ppl.common" -> "openppl-public/hpcc"
"pytorch/FBGEMM" -> "microsoft/nnfusion"
"pytorch/FBGEMM" -> "pytorch/QNNPACK"
"pytorch/FBGEMM" -> "google/gemmlowp"
"pytorch/FBGEMM" -> "hfp/libxsmm"
"pytorch/FBGEMM" -> "jiazhihao/TASO"
"pytorch/FBGEMM" -> "NVIDIA/cutlass"
"pytorch/FBGEMM" -> "flame/how-to-optimize-gemm"
"pytorch/FBGEMM" -> "oneapi-src/oneDNN"
"pytorch/FBGEMM" -> "google/ruy"
"pytorch/FBGEMM" -> "tensorflow/runtime"
"pytorch/FBGEMM" -> "flexflow/FlexFlow"
"pytorch/FBGEMM" -> "pytorch/kineto"
"pytorch/FBGEMM" -> "pytorch/glow"
"pytorch/FBGEMM" -> "alibaba/BladeDISC"
"pytorch/FBGEMM" -> "google/XNNPACK"
"MegEngine/mperf" -> "MegEngine/MegPeak"
"MegEngine/mperf" -> "MegEngine/MegCC"
"MegEngine/mperf" -> "tpoisonooo/llama.onnx" ["e"=1]
"ptillet/isaac" -> "intel/isaac"
"ARM-software/armnn" -> "ARM-software/ComputeLibrary"
"ARM-software/armnn" -> "ARM-software/android-nn-driver"
"ARM-software/armnn" -> "ARM-software/ML-examples"
"ARM-software/armnn" -> "pytorch/QNNPACK"
"ARM-software/armnn" -> "huawei-noah/bolt"
"ARM-software/armnn" -> "google/gemmlowp"
"ARM-software/armnn" -> "XiaoMi/mace"
"ARM-software/armnn" -> "OAID/Tengine" ["e"=1]
"ARM-software/armnn" -> "Tencent/FeatherCNN"
"ARM-software/armnn" -> "dmlc/tvm"
"ARM-software/armnn" -> "projectNe10/Ne10"
"ARM-software/armnn" -> "pytorch/glow"
"ARM-software/armnn" -> "google/XNNPACK"
"ARM-software/armnn" -> "BUG1989/caffe-int8-convert-tools"
"ARM-software/armnn" -> "uTensor/uTensor"
"andrepuschmann/math-neon" -> "xboxfanj/math-neon"
"chrischoy/MakePytorchPlusPlus" -> "chrischoy/pytorch-custom-cuda-tutorial"
"snowzjx/ns3-load-balance" -> "snowzjx/ns3-ecn-sharp"
"snowzjx/ns3-load-balance" -> "mkheirkhah/ecmp"
"huawei-noah/bolt" -> "JDAI-CV/dabnn" ["e"=1]
"huawei-noah/bolt" -> "huawei-noah/vega" ["e"=1]
"huawei-noah/bolt" -> "andravin/wincnn"
"huawei-noah/bolt" -> "openppl-public/ppl.nn"
"huawei-noah/bolt" -> "Tencent/TNN" ["e"=1]
"huawei-noah/bolt" -> "pytorch/QNNPACK"
"huawei-noah/bolt" -> "BUG1989/caffe-int8-convert-tools"
"huawei-noah/bolt" -> "flame/how-to-optimize-gemm"
"huawei-noah/bolt" -> "tpoisonooo/how-to-optimize-gemm"
"huawei-noah/bolt" -> "Tencent/FeatherCNN"
"huawei-noah/bolt" -> "deepglint/EasyQuant" ["e"=1]
"huawei-noah/bolt" -> "msnh2012/Msnhnet"
"huawei-noah/bolt" -> "daquexian/onnx-simplifier" ["e"=1]
"huawei-noah/bolt" -> "AI-performance/embedded-ai.bench"
"huawei-noah/bolt" -> "microsoft/nnfusion"
"Tencent/FeatherCNN" -> "pytorch/QNNPACK"
"Tencent/FeatherCNN" -> "PaddlePaddle/Anakin"
"Tencent/FeatherCNN" -> "XiaoMi/mace"
"Tencent/FeatherCNN" -> "BUG1989/caffe-int8-convert-tools"
"Tencent/FeatherCNN" -> "Tencent/PocketFlow"
"Tencent/FeatherCNN" -> "moli232777144/mtcnn_ncnn" ["e"=1]
"Tencent/FeatherCNN" -> "shicai/MobileNet-Caffe" ["e"=1]
"Tencent/FeatherCNN" -> "yonghenglh6/DepthwiseConvolution" ["e"=1]
"Tencent/FeatherCNN" -> "Robert-JunWang/Pelee" ["e"=1]
"Tencent/FeatherCNN" -> "starimeL/PytorchConverter" ["e"=1]
"Tencent/FeatherCNN" -> "Maratyszcza/NNPACK"
"Tencent/FeatherCNN" -> "andravin/wincnn"
"Tencent/FeatherCNN" -> "JDAI-CV/dabnn" ["e"=1]
"Tencent/FeatherCNN" -> "google/gemmlowp"
"Tencent/FeatherCNN" -> "huawei-noah/bolt"
"samanbarghi/uThreads" -> "samanbarghi/MPSCQ"
"samanbarghi/uThreads" -> "PlatformLab/Arachne"
"u39kun/deep-learning-benchmark" -> "lambdal/lambda-tensorflow-benchmark"
"u39kun/deep-learning-benchmark" -> "baidu-research/DeepBench"
"u39kun/deep-learning-benchmark" -> "hclhkbu/dlbench"
"baidu-research/DeepBench" -> "NVIDIA/nccl"
"baidu-research/DeepBench" -> "openai/openai-gemm"
"baidu-research/DeepBench" -> "soumith/convnet-benchmarks" ["e"=1]
"baidu-research/DeepBench" -> "NervanaSystems/maxas"
"baidu-research/DeepBench" -> "google/gemmlowp"
"baidu-research/DeepBench" -> "tensorflow/benchmarks"
"baidu-research/DeepBench" -> "Maratyszcza/NNPACK"
"baidu-research/DeepBench" -> "hfp/libxsmm"
"baidu-research/DeepBench" -> "dmlc/nnvm"
"baidu-research/DeepBench" -> "mlperf/reference"
"baidu-research/DeepBench" -> "fengbintu/Neural-Networks-on-Silicon" ["e"=1]
"baidu-research/DeepBench" -> "u39kun/deep-learning-benchmark"
"baidu-research/DeepBench" -> "hclhkbu/dlbench"
"baidu-research/DeepBench" -> "intel/caffe"
"baidu-research/DeepBench" -> "gpgpu-sim/gpgpu-sim_distribution" ["e"=1]
"lambdal/lambda-tensorflow-benchmark" -> "lambdal/deeplearning-benchmark"
"lambdal/lambda-tensorflow-benchmark" -> "u39kun/deep-learning-benchmark"
"thewintersun/distributeTensorflowExample" -> "TracyMcgrady6/Distribute_MNIST"
"tmulc18/Distributed-TensorFlow-Guide" -> "ischlag/distributed-tensorflow-example"
"tmulc18/Distributed-TensorFlow-Guide" -> "tensorflow/ecosystem" ["e"=1]
"tmulc18/Distributed-TensorFlow-Guide" -> "cerndb/dist-keras" ["e"=1]
"tmulc18/Distributed-TensorFlow-Guide" -> "TracyMcgrady6/Distribute_MNIST"
"tmulc18/Distributed-TensorFlow-Guide" -> "thewintersun/distributeTensorflowExample"
"tmulc18/Distributed-TensorFlow-Guide" -> "uber/horovod" ["e"=1]
"tmulc18/Distributed-TensorFlow-Guide" -> "baidu-research/tensorflow-allreduce"
"tmulc18/Distributed-TensorFlow-Guide" -> "tensorflow/benchmarks"
"tmulc18/Distributed-TensorFlow-Guide" -> "tmulc18/DistributedDeepLearningReads"
"tmulc18/Distributed-TensorFlow-Guide" -> "lambdaji/tf_repos" ["e"=1]
"tmulc18/Distributed-TensorFlow-Guide" -> "dmlc/ps-lite" ["e"=1]
"tmulc18/Distributed-TensorFlow-Guide" -> "caicloud/tensorflow-demo"
"tmulc18/Distributed-TensorFlow-Guide" -> "reinforceio/tensorforce" ["e"=1]
"tmulc18/Distributed-TensorFlow-Guide" -> "UIC-Paper/MIMN" ["e"=1]
"tmulc18/Distributed-TensorFlow-Guide" -> "baidu-research/baidu-allreduce"
"microsoft/antares" -> "microsoft/nnfusion"
"microsoft/antares" -> "KnowingNothing/AMOS"
"microsoft/antares" -> "mit-han-lab/inter-operator-scheduler"
"microsoft/antares" -> "UofT-EcoSystem/DietCode"
"microsoft/antares" -> "jiazhihao/TASO"
"microsoft/antares" -> "microsoft/msccl"
"microsoft/antares" -> "roastduck/FreeTensor"
"microsoft/antares" -> "awslabs/raf"
"microsoft/antares" -> "llvm/mlir-npcomp"
"microsoft/antares" -> "cloudcores/CuAssembler"
"microsoft/antares" -> "thu-pacman/PET"
"01org/mkl-dnn" -> "intel/caffe"
"01org/mkl-dnn" -> "hfp/libxsmm"
"01org/mkl-dnn" -> "01org/daal"
"01org/mkl-dnn" -> "Maratyszcza/NNPACK"
"01org/mkl-dnn" -> "baidu-research/DeepBench"
"01org/mkl-dnn" -> "soumith/convnet-benchmarks" ["e"=1]
"01org/mkl-dnn" -> "dmlc/nnvm"
"01org/mkl-dnn" -> "google/gemmlowp"
"01org/mkl-dnn" -> "NervanaSystems/neon" ["e"=1]
"01org/mkl-dnn" -> "NVIDIA/caffe" ["e"=1]
"01org/mkl-dnn" -> "NVIDIA/nccl"
"01org/mkl-dnn" -> "dmlc/mshadow" ["e"=1]
"01org/mkl-dnn" -> "intel/Theano"
"01org/mkl-dnn" -> "mind/wheels" ["e"=1]
"01org/mkl-dnn" -> "taolei87/sru" ["e"=1]
"spcl/ncc" -> "ChrisCummins/ProGraML"
"spcl/ncc" -> "IITH-Compilers/IR2Vec"
"spcl/ncc" -> "ChrisCummins/paper-end2end-dl"
"IITH-Compilers/IR2Vec" -> "tud-ccc/compy-learn"
"pytorch/benchmark" -> "pytorch/kineto"
"pytorch/benchmark" -> "pytorch/torchdynamo"
"pytorch/benchmark" -> "pytorch/tensorpipe"
"pytorch/benchmark" -> "pytorch/rfcs"
"pytorch/benchmark" -> "ROCmSoftwarePlatform/rccl" ["e"=1]
"pytorch/benchmark" -> "zdevito/ATen"
"pytorch/benchmark" -> "pytorch/torchsnapshot"
"pytorch/benchmark" -> "llvm/torch-mlir"
"pytorch/benchmark" -> "facebookincubator/gloo"
"pytorch/benchmark" -> "pytorch/builder"
"pytorch/benchmark" -> "pytorch/functorch" ["e"=1]
"pytorch/benchmark" -> "pytorch/FBGEMM"
"pytorch/benchmark" -> "pytorch/elastic" ["e"=1]
"pytorch/benchmark" -> "facebookresearch/torchdynamo"
"PacktPublishing/Learn-CUDA-Programming" -> "brucefan1983/CUDA-Programming"
"PacktPublishing/Learn-CUDA-Programming" -> "CodedK/CUDA-by-Example-source-code-for-the-book-s-examples-"
"PacktPublishing/Learn-CUDA-Programming" -> "NVIDIA/cuda-samples"
"PacktPublishing/Learn-CUDA-Programming" -> "NVIDIA/CUDALibrarySamples"
"PacktPublishing/Learn-CUDA-Programming" -> "CoffeeBeforeArch/cuda_programming"
"PacktPublishing/Learn-CUDA-Programming" -> "Tony-Tan/CUDA_Freshman"
"PacktPublishing/Learn-CUDA-Programming" -> "PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA"
"PacktPublishing/Learn-CUDA-Programming" -> "NVIDIA/cub"
"PacktPublishing/Learn-CUDA-Programming" -> "godweiyang/NN-CUDA-Example"
"PacktPublishing/Learn-CUDA-Programming" -> "tczhangzhi/pytorch-parallel" ["e"=1]
"PacktPublishing/Learn-CUDA-Programming" -> "PacktPublishing/Hands-On-GPU-Programming-with-Python-and-CUDA"
"PacktPublishing/Learn-CUDA-Programming" -> "NVIDIA/multi-gpu-programming-models"
"PacktPublishing/Learn-CUDA-Programming" -> "NVIDIA/cutlass"
"PacktPublishing/Learn-CUDA-Programming" -> "flame/how-to-optimize-gemm"
"PacktPublishing/Learn-CUDA-Programming" -> "chrischoy/pytorch-custom-cuda-tutorial"
"mlperf/inference" -> "mlperf/training"
"mlperf/inference" -> "mlperf/inference_results_v0.5"
"mlperf/inference" -> "alibaba/ai-matrix"
"mlperf/inference" -> "ctuning/ck-mlperf"
"mlperf/inference" -> "mlperf/mlbox"
"mlperf/inference" -> "eembc/mlmark" ["e"=1]
"efficient/rdma_bench" -> "jcxue/RDMA-Tutorial"
"efficient/rdma_bench" -> "efficient/fasst"
"efficient/rdma_bench" -> "efficient/HERD"
"efficient/rdma_bench" -> "WukLab/LITE"
"efficient/rdma_bench" -> "thustorage/octopus"
"efficient/rdma_bench" -> "linux-rdma/perftest"
"efficient/rdma_bench" -> "tarickb/the-geek-in-the-corner"
"efficient/rdma_bench" -> "redn-io/RedN"
"efficient/rdma_bench" -> "linux-rdma/rdma-core"
"efficient/rdma_bench" -> "erpc-io/eRPC"
"efficient/rdma_bench" -> "SoftRoCE/rxe-dev"
"efficient/rdma_bench" -> "bobzhuyb/ns3-rdma"
"efficient/rdma_bench" -> "efficient/mica"
"efficient/rdma_bench" -> "NVSL/OptaneStudy" ["e"=1]
"efficient/rdma_bench" -> "SJTU-IPADS/xstore"
"erpc-io/eRPC" -> "efficient/rdma_bench"
"erpc-io/eRPC" -> "jcxue/RDMA-Tutorial"
"erpc-io/eRPC" -> "linux-rdma/perftest"
"erpc-io/eRPC" -> "linux-rdma/rdma-core"
"erpc-io/eRPC" -> "efficient/fasst"
"erpc-io/eRPC" -> "openucx/ucx"
"erpc-io/eRPC" -> "willemt/raft" ["e"=1]
"erpc-io/eRPC" -> "claudebarthels/infinity"
"erpc-io/eRPC" -> "thustorage/octopus"
"erpc-io/eRPC" -> "redn-io/RedN"
"erpc-io/eRPC" -> "microsoft/Freeflow"
"erpc-io/eRPC" -> "bobzhuyb/ns3-rdma"
"erpc-io/eRPC" -> "Mellanox/libvma"
"erpc-io/eRPC" -> "ofiwg/libfabric"
"erpc-io/eRPC" -> "shenango/shenango"
"mpi4py/mpi4py" -> "jbornschein/mpi4py-examples"
"mpi4py/mpi4py" -> "open-mpi/ompi"
"mpi4py/mpi4py" -> "jcmgray/quimb" ["e"=1]
"mpi4py/mpi4py" -> "pmodels/mpich"
"mpi4py/mpi4py" -> "joshspeagle/dynesty" ["e"=1]
"mpi4py/mpi4py" -> "spectralDNS/shenfun" ["e"=1]
"mpi4py/mpi4py" -> "ITensor/ITensor" ["e"=1]
"mpi4py/mpi4py" -> "facebookincubator/gloo"
"mpi4py/mpi4py" -> "lebedov/scikit-cuda" ["e"=1]
"mpi4py/mpi4py" -> "spack/spack" ["e"=1]
"mpi4py/mpi4py" -> "h5py/h5py" ["e"=1]
"BUG1989/caffe-int8-convert-tools" -> "andravin/wincnn"
"BUG1989/caffe-int8-convert-tools" -> "starimeL/PytorchConverter" ["e"=1]
"BUG1989/caffe-int8-convert-tools" -> "deepglint/EasyQuant" ["e"=1]
"BUG1989/caffe-int8-convert-tools" -> "yonghenglh6/DepthwiseConvolution" ["e"=1]
"BUG1989/caffe-int8-convert-tools" -> "JDAI-CV/dabnn" ["e"=1]
"BUG1989/caffe-int8-convert-tools" -> "eric612/MobileNet-YOLO" ["e"=1]
"BUG1989/caffe-int8-convert-tools" -> "pytorch/QNNPACK"
"BUG1989/caffe-int8-convert-tools" -> "Tencent/FeatherCNN"
"BUG1989/caffe-int8-convert-tools" -> "xxradon/PytorchToCaffe" ["e"=1]
"BUG1989/caffe-int8-convert-tools" -> "chuanqi305/MobileNetv2-SSDLite" ["e"=1]
"BUG1989/caffe-int8-convert-tools" -> "moli232777144/mtcnn_ncnn" ["e"=1]
"BUG1989/caffe-int8-convert-tools" -> "Robert-JunWang/Pelee" ["e"=1]
"BUG1989/caffe-int8-convert-tools" -> "shicai/MobileNet-Caffe" ["e"=1]
"BUG1989/caffe-int8-convert-tools" -> "miaow1988/ShuffleNet_V2_pytorch_caffe" ["e"=1]
"BUG1989/caffe-int8-convert-tools" -> "PaddlePaddle/Anakin"
"NVlabs/moderngpu" -> "NVlabs/cub"
"NVlabs/moderngpu" -> "parallel-forall/code-samples"
"NVlabs/moderngpu" -> "harrism/hemi"
"NVlabs/moderngpu" -> "cusplibrary/cusplibrary"
"NVlabs/moderngpu" -> "facebook/fbcuda" ["e"=1]
"NVlabs/moderngpu" -> "kylelutz/compute" ["e"=1]
"NVlabs/moderngpu" -> "NVlabs/nvbio" ["e"=1]
"NVlabs/moderngpu" -> "thrust/thrust"
"NVlabs/moderngpu" -> "HSA-Libraries/Bolt" ["e"=1]
"NVlabs/moderngpu" -> "antonmks/Alenka"
"NVlabs/moderngpu" -> "cudpp/cudpp"
"NVlabs/moderngpu" -> "seanbaxter/moderngpu"
"NVlabs/moderngpu" -> "ddemidov/vexcl" ["e"=1]
"NVlabs/moderngpu" -> "mmp/pbrt-v2" ["e"=1]
"NVlabs/moderngpu" -> "seanbaxter/mgpu"
"gigwegbe/tinyml-papers-and-projects" -> "mit-han-lab/tinyml"
"gigwegbe/tinyml-papers-and-projects" -> "tinyMLx/colabs"
"gigwegbe/tinyml-papers-and-projects" -> "mlcommons/tiny"
"gigwegbe/tinyml-papers-and-projects" -> "scaledown-team/study-group"
"gigwegbe/tinyml-papers-and-projects" -> "tensorflow/tflite-micro"
"gigwegbe/tinyml-papers-and-projects" -> "uTensor/uTensor"
"gigwegbe/tinyml-papers-and-projects" -> "HollowMan6/TinyML-ESP32"
"gigwegbe/tinyml-papers-and-projects" -> "tinyMLx/courseware"
"gigwegbe/tinyml-papers-and-projects" -> "ai-techsystems/deepC"
"gigwegbe/tinyml-papers-and-projects" -> "ShawnHymel/tinyml-example-anomaly-detection"
"gigwegbe/tinyml-papers-and-projects" -> "majianjia/nnom" ["e"=1]
"gigwegbe/tinyml-papers-and-projects" -> "cpetig/tflite_micro_compiler"
"gigwegbe/tinyml-papers-and-projects" -> "da03/TFLite-Micro-Seq2Seq"
"gigwegbe/tinyml-papers-and-projects" -> "Bisonai/awesome-edge-machine-learning"
"gigwegbe/tinyml-papers-and-projects" -> "eloquentarduino/EloquentTinyML"
"owensgroup/SlabHash" -> "pzrq/megakv"
"owensgroup/SlabHash" -> "owensgroup/BGHT"
"owensgroup/SlabHash" -> "owensgroup/MVGpuBTree"
"LitLeo/OpenCUDA" -> "PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA"
"openai/gradient-checkpointing" -> "uber/horovod" ["e"=1]
"openai/gradient-checkpointing" -> "uber-common/deep-neuroevolution" ["e"=1]
"openai/gradient-checkpointing" -> "ppwwyyxx/tensorpack" ["e"=1]
"openai/gradient-checkpointing" -> "lanpa/tensorboard-pytorch" ["e"=1]
"openai/gradient-checkpointing" -> "mila-udem/welcome_tutorials" ["e"=1]
"openai/gradient-checkpointing" -> "facebookresearch/TensorComprehensions"
"openai/gradient-checkpointing" -> "deepmind/dnc" ["e"=1]
"openai/gradient-checkpointing" -> "openai/blocksparse"
"openai/gradient-checkpointing" -> "yunjey/StarGAN" ["e"=1]
"openai/gradient-checkpointing" -> "naturomics/CapsNet-Tensorflow" ["e"=1]
"openai/gradient-checkpointing" -> "carpedm20/ENAS-pytorch" ["e"=1]
"openai/gradient-checkpointing" -> "google/tangent" ["e"=1]
"openai/gradient-checkpointing" -> "lutzroeder/Netron"
"openai/gradient-checkpointing" -> "facebookresearch/adversarial_image_defenses"
"openai/gradient-checkpointing" -> "bioinf-jku/SNNs" ["e"=1]
"chrischoy/knn_cuda" -> "vincentfpgarcia/kNN-CUDA"
"chrischoy/knn_cuda" -> "chrischoy/pytorch_knn_cuda" ["e"=1]
"chrischoy/knn_cuda" -> "emavgl/knn-cuda"
"harrism/hemi" -> "jaredhoberock/bulk"
"harrism/hemi" -> "cusplibrary/cusplibrary"
"harrism/hemi" -> "parallel-forall/code-samples"
"harrism/hemi" -> "harrism/cpp11-range"
"harrism/hemi" -> "NVlabs/cub"
"harrism/hemi" -> "NVlabs/moderngpu"
"Tencent/PatrickStar" -> "Tencent/TurboTransformers" ["e"=1]
"Tencent/PatrickStar" -> "alibaba/EasyParallelLibrary"
"Tencent/PatrickStar" -> "alibaba/BladeDISC"
"Tencent/PatrickStar" -> "alpa-projects/alpa" ["e"=1]
"Tencent/PatrickStar" -> "BaguaSys/bagua" ["e"=1]
"Tencent/PatrickStar" -> "facebookresearch/fairscale" ["e"=1]
"Tencent/PatrickStar" -> "flexflow/FlexFlow"
"Tencent/PatrickStar" -> "bytedance/lightseq" ["e"=1]
"Tencent/PatrickStar" -> "volcengine/veGiantModel"
"Tencent/PatrickStar" -> "ucbrise/actnn" ["e"=1]
"Tencent/PatrickStar" -> "kakaobrain/torchgpipe" ["e"=1]
"Tencent/PatrickStar" -> "microsoft/Megatron-DeepSpeed" ["e"=1]
"Tencent/PatrickStar" -> "ConnollyLeon/awesome-Auto-Parallelism"
"Tencent/PatrickStar" -> "MegEngine/MegCC"
"Tencent/PatrickStar" -> "microsoft/nnfusion"
"buddy-compiler/buddy-mlir" -> "buddy-compiler/buddy-benchmark"
"buddy-compiler/buddy-mlir" -> "llvm/Polygeist"
"buddy-compiler/buddy-mlir" -> "MLIR-China/mlir-playground"
"buddy-compiler/buddy-mlir" -> "iree-org/iree"
"buddy-compiler/buddy-mlir" -> "sophgo/tpu-mlir"
"buddy-compiler/buddy-mlir" -> "onnx/onnx-mlir"
"buddy-compiler/buddy-mlir" -> "tensorflow/mlir-hlo"
"buddy-compiler/buddy-mlir" -> "BBuf/tvm_mlir_learn"
"buddy-compiler/buddy-mlir" -> "MegEngine/MegCC"
"buddy-compiler/buddy-mlir" -> "tlc-pack/relax"
"buddy-compiler/buddy-mlir" -> "pku-liang/AMOS"
"buddy-compiler/buddy-mlir" -> "StrongSpoon/tvm.schedule"
"buddy-compiler/buddy-mlir" -> "alibaba/BladeDISC"
"owensgroup/GpuBTree" -> "owensgroup/MVGpuBTree"
"mlperf/training" -> "mlperf/inference"
"mlperf/training" -> "tensorflow/benchmarks"
"mlperf/training" -> "mlperf/training_results_v0.7"
"mlperf/training" -> "baidu-research/DeepBench"
"mlperf/training" -> "alibaba/ai-matrix"
"mlperf/training" -> "tensorflow/mesh" ["e"=1]
"mlperf/training" -> "stanford-futuredata/dawn-bench-entries"
"mlperf/training" -> "flexflow/FlexFlow"
"mlperf/training" -> "tbd-ai/tbd-suite"
"mlperf/training" -> "intel/MLSL"
"mlperf/training" -> "facebookincubator/gloo"
"mlperf/training" -> "deep500/deep500" ["e"=1]
"CodedK/CUDA-by-Example-source-code-for-the-book-s-examples-" -> "deeperlearning/professional-cuda-c-programming"
"CodedK/CUDA-by-Example-source-code-for-the-book-s-examples-" -> "PacktPublishing/Learn-CUDA-Programming"
"deeperlearning/professional-cuda-c-programming" -> "CodedK/CUDA-by-Example-source-code-for-the-book-s-examples-"
"deeperlearning/professional-cuda-c-programming" -> "brucefan1983/CUDA-Programming"
"accelio/accelio" -> "Mellanox/libvma"
"accelio/accelio" -> "openucx/ucx"
"accelio/accelio" -> "tarickb/the-geek-in-the-corner"
"accelio/accelio" -> "accelio/JXIO"
"accelio/accelio" -> "SoftRoCE/librxe-dev"
"accelio/accelio" -> "linux-rdma/rdma-core"
"accelio/accelio" -> "efficient/rdma_bench"
"accelio/accelio" -> "SoftRoCE/rxe-dev"
"accelio/accelio" -> "accelio/NBDX"
"accelio/accelio" -> "Open-CAS/ocf" ["e"=1]
"accelio/accelio" -> "erpc-io/eRPC"
"accelio/accelio" -> "zrlio/darpc"
"accelio/accelio" -> "thustorage/octopus"
"accelio/accelio" -> "sheepdog/sheepdog" ["e"=1]
"sophgo/tpu-mlir" -> "buddy-compiler/buddy-mlir"
"sophgo/tpu-mlir" -> "MegEngine/MegCC"
"sophgo/tpu-mlir" -> "onnx/onnx-mlir"
"sophgo/tpu-mlir" -> "BBuf/tvm_mlir_learn"
"sophgo/tpu-mlir" -> "alibaba/BladeDISC"
"sophgo/tpu-mlir" -> "spcl/pymlir"
"sophgo/tpu-mlir" -> "tpoisonooo/how-to-optimize-gemm"
"ChrisCummins/ProGraML" -> "spcl/ncc"
"ChrisCummins/ProGraML" -> "tud-ccc/learning-compiler-graphs"
"ChrisCummins/ProGraML" -> "IITH-Compilers/IR2Vec"
"ChrisCummins/ProGraML" -> "facebookresearch/CompilerGym"
"ChrisCummins/ProGraML" -> "danielzuegner/code-transformer" ["e"=1]
"ChrisCummins/ProGraML" -> "ChrisCummins/paper-end2end-dl"
"ChrisCummins/ProGraML" -> "ChrisCummins/phd"
"ChrisCummins/ProGraML" -> "parasj/contracode" ["e"=1]
"ChrisCummins/ProGraML" -> "VulDetProject/ReVeal" ["e"=1]
"ChrisCummins/ProGraML" -> "ChrisCummins/clgen"
"ChrisCummins/ProGraML" -> "microsoft/graph-based-code-modelling" ["e"=1]
"ChrisCummins/ProGraML" -> "pdlan/OSCAR" ["e"=1]
"KnowingNothing/FlexTensor" -> "UofT-EcoSystem/DietCode"
"KnowingNothing/FlexTensor" -> "KnowingNothing/AMOS"
"KnowingNothing/FlexTensor" -> "thu-pacman/PET"
"KnowingNothing/FlexTensor" -> "microsoft/nnfusion"
"KnowingNothing/FlexTensor" -> "mit-han-lab/inter-operator-scheduler"
"flexflow/FlexFlow" -> "jiazhihao/TASO"
"flexflow/FlexFlow" -> "microsoft/nnfusion"
"flexflow/FlexFlow" -> "msr-fiddle/pipedream" ["e"=1]
"flexflow/FlexFlow" -> "microsoft/msccl"
"flexflow/FlexFlow" -> "awslabs/raf"
"flexflow/FlexFlow" -> "mit-han-lab/inter-operator-scheduler"
"flexflow/FlexFlow" -> "facebookincubator/gloo"
"flexflow/FlexFlow" -> "pytorch/tensorpipe"
"flexflow/FlexFlow" -> "thu-pacman/PET"
"flexflow/FlexFlow" -> "kakaobrain/torchgpipe" ["e"=1]
"flexflow/FlexFlow" -> "KnowingNothing/compiler-and-arch"
"flexflow/FlexFlow" -> "microsoft/tutel" ["e"=1]
"flexflow/FlexFlow" -> "alpa-projects/alpa" ["e"=1]
"flexflow/FlexFlow" -> "awslabs/slapo"
"flexflow/FlexFlow" -> "tensorflow/runtime"
"jiazhihao/TASO" -> "flexflow/FlexFlow"
"jiazhihao/TASO" -> "microsoft/nnfusion"
"jiazhihao/TASO" -> "thu-pacman/PET"
"jiazhihao/TASO" -> "mit-han-lab/inter-operator-scheduler"
"jiazhihao/TASO" -> "uwplse/tensat"
"jiazhihao/TASO" -> "KnowingNothing/FlexTensor"
"jiazhihao/TASO" -> "merrymercy/awesome-tensor-compilers"
"jiazhihao/TASO" -> "google/iree"
"jiazhihao/TASO" -> "onnx/onnx-mlir"
"jiazhihao/TASO" -> "pytorch/tvm"
"jiazhihao/TASO" -> "tensor-compiler/taco"
"jiazhihao/TASO" -> "microsoft/antares"
"jiazhihao/TASO" -> "llvm/torch-mlir"
"jiazhihao/TASO" -> "tensorflow/runtime"
"jiazhihao/TASO" -> "NVIDIA/cutlass"
"Maratyszcza/NNPACK" -> "google/gemmlowp"
"Maratyszcza/NNPACK" -> "pytorch/QNNPACK"
"Maratyszcza/NNPACK" -> "soumith/convnet-benchmarks" ["e"=1]
"Maratyszcza/NNPACK" -> "dmlc/nnvm"
"Maratyszcza/NNPACK" -> "andravin/wincnn"
"Maratyszcza/NNPACK" -> "dmlc/tvm"
"Maratyszcza/NNPACK" -> "Tencent/FeatherCNN"
"Maratyszcza/NNPACK" -> "NervanaSystems/neon" ["e"=1]
"Maratyszcza/NNPACK" -> "DeepMark/deepmark" ["e"=1]
"Maratyszcza/NNPACK" -> "openai/openai-gemm"
"Maratyszcza/NNPACK" -> "ARM-software/ComputeLibrary"
"Maratyszcza/NNPACK" -> "facebook/fb-caffe-exts" ["e"=1]
"Maratyszcza/NNPACK" -> "flame/how-to-optimize-gemm"
"Maratyszcza/NNPACK" -> "baidu-research/DeepBench"
"Maratyszcza/NNPACK" -> "facebookincubator/gloo"
"MegEngine/MegCC" -> "MegEngine/MegPeak"
"MegEngine/MegCC" -> "tpoisonooo/how-to-optimize-gemm"
"MegEngine/MegCC" -> "bytedance/byteir"
"MegEngine/MegCC" -> "MegEngine/mperf"
"MegEngine/MegCC" -> "alibaba/BladeDISC"
"MegEngine/MegCC" -> "sophgo/tpu-mlir"
"MegEngine/MegCC" -> "openppl-public/ppq" ["e"=1]
"MegEngine/MegCC" -> "microsoft/nnfusion"
"MegEngine/MegCC" -> "buddy-compiler/buddy-mlir"
"MegEngine/MegCC" -> "PaddlePaddle/CINN" ["e"=1]
"MegEngine/MegCC" -> "MegEngine/mgeconvert" ["e"=1]
"MegEngine/MegCC" -> "BBuf/tvm_mlir_learn"
"MegEngine/MegCC" -> "openppl-public/ppl.nn"
"MegEngine/MegCC" -> "BBuf/how-to-optim-algorithm-in-cuda"
"MegEngine/MegCC" -> "tensorflow/mlir-hlo"
"alibaba/EasyParallelLibrary" -> "alibaba/BladeDISC"
"alibaba/EasyParallelLibrary" -> "alibaba/HybridBackend" ["e"=1]
"alibaba/EasyParallelLibrary" -> "alibaba/FastNN"
"alibaba/EasyParallelLibrary" -> "alibaba/GPU-scheduler-for-deep-learning" ["e"=1]
"alibaba/EasyParallelLibrary" -> "AlibabaPAI/DAPPLE" ["e"=1]
"alibaba/EasyParallelLibrary" -> "volcengine/veGiantModel"
"alibaba/EasyParallelLibrary" -> "PKU-DAIR/Hetu" ["e"=1]
"alibaba/EasyParallelLibrary" -> "msr-fiddle/synergy" ["e"=1]
"alibaba/EasyParallelLibrary" -> "petuum/adaptdl" ["e"=1]
"alibaba/EasyParallelLibrary" -> "S-Lab-System-Group/Awesome-DL-Scheduling-Papers" ["e"=1]
"xuhuisheng/rocm-build" -> "xuhuisheng/rocm-gfx803"
"d2l-ai/d2l-tvm" -> "pytorch/tvm"
"d2l-ai/d2l-tvm" -> "merrymercy/awesome-tensor-compilers"
"d2l-ai/d2l-tvm" -> "microsoft/nnfusion"
"d2l-ai/d2l-tvm" -> "dmlc/dlpack"
"d2l-ai/d2l-tvm" -> "wkcn/MobulaOP" ["e"=1]
"d2l-ai/d2l-tvm" -> "zwang4/awesome-machine-learning-in-compilers"
"d2l-ai/d2l-tvm" -> "BBuf/tvm_learn"
"d2l-ai/d2l-tvm" -> "mlc-ai/mlc-en"
"d2l-ai/d2l-tvm" -> "flame/how-to-optimize-gemm"
"d2l-ai/d2l-tvm" -> "onnx/onnx-mlir"
"d2l-ai/d2l-tvm" -> "apache/incubator-tvm"
"d2l-ai/d2l-tvm" -> "tvmai/meetup-slides"
"d2l-ai/d2l-tvm" -> "mlc-ai/mlc-zh"
"d2l-ai/d2l-tvm" -> "mit-han-lab/inter-operator-scheduler"
"d2l-ai/d2l-tvm" -> "awslabs/raf"
"pytorch/tvm" -> "d2l-ai/d2l-tvm"
"pytorch/tvm" -> "dmlc/dlpack"
"pytorch/tvm" -> "jiazhihao/TASO"
"pytorch/tvm" -> "merrymercy/tvm-mali"
"pytorch/tvm" -> "NVIDIA/TRTorch" ["e"=1]
"pytorch/tvm" -> "vinx13/tvm-cuda-int8-benchmark"
"pytorch/tvm" -> "pytorch/QNNPACK"
"pytorch/tvm" -> "tensorflow/mlir"
"pytorch/tvm" -> "microsoft/nnfusion"
"pytorch/tvm" -> "tensorflow/mlir-hlo"
"pytorch/tvm" -> "tvmai/meetup-slides"
"pytorch/tvm" -> "mli/d2l-tvm"
"pytorch/tvm" -> "tlc-pack/relax"
"pytorch/tvm" -> "awslabs/raf"
"pytorch/tvm" -> "tqchen/ffi-navigator"
"yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs" -> "Cjkkkk/CUDA_gemm"
"yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs" -> "Yinghan-Li/YHs_Sample"
"yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs" -> "niuhope/cuda_sgemm"
"yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs" -> "yzhaiustc/Optimizing-DGEMM-on-Intel-CPUs-with-AVX512F"
"yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs" -> "Liu-xiandong/How_to_optimize_in_GPU"
"yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs" -> "cloudcores/CuAssembler"
"mlc-ai/mlc-zh" -> "mlc-ai/mlc-en"
"mlc-ai/mlc-zh" -> "mlc-ai/notebooks"
"mlc-ai/mlc-zh" -> "BBuf/tvm_mlir_learn"
"mlc-ai/mlc-zh" -> "hyperai/tvm-cn" ["e"=1]
"mlc-ai/mlc-zh" -> "merrymercy/awesome-tensor-compilers"
"mlc-ai/mlc-zh" -> "tlc-pack/relax"
"mlc-ai/mlc-zh" -> "chenzomi12/DeepLearningSystem"
"mlc-ai/mlc-zh" -> "openmlsys/openmlsys-zh"
"mlc-ai/mlc-zh" -> "awslabs/raf"
"mlc-ai/mlc-zh" -> "MegEngine/MegCC"
"mlc-ai/mlc-zh" -> "microsoft/nnfusion"
"mlc-ai/mlc-zh" -> "KnowingNothing/compiler-and-arch"
"mlc-ai/mlc-zh" -> "d2l-ai/d2l-tvm"
"mlc-ai/mlc-zh" -> "buddy-compiler/buddy-mlir"
"mlc-ai/mlc-zh" -> "apache/tvm"
"mit-han-lab/mcunet" -> "mit-han-lab/tinyengine"
"mit-han-lab/mcunet" -> "mit-han-lab/tinyml"
"mit-han-lab/mcunet" -> "mit-han-lab/torchprofile" ["e"=1]
"mit-han-lab/mcunet" -> "mit-han-lab/apq" ["e"=1]
"mit-han-lab/mcunet" -> "mit-han-lab/HAQ" ["e"=1]
"mit-han-lab/mcunet" -> "mit-han-lab/hardware-aware-transformers" ["e"=1]
"mit-han-lab/mcunet" -> "mit-han-lab/tiny-training"
"mit-han-lab/mcunet" -> "mit-han-lab/once-for-all" ["e"=1]
"openucx/ucx" -> "linux-rdma/rdma-core"
"openucx/ucx" -> "ofiwg/libfabric"
"openucx/ucx" -> "linux-rdma/perftest"
"openucx/ucx" -> "NVIDIA/gdrcopy"
"openucx/ucx" -> "open-mpi/ompi"
"openucx/ucx" -> "jcxue/RDMA-Tutorial"
"openucx/ucx" -> "accelio/accelio"
"openucx/ucx" -> "efficient/rdma_bench"
"openucx/ucx" -> "Mellanox/nv_peer_memory"
"openucx/ucx" -> "erpc-io/eRPC"
"openucx/ucx" -> "rapidsai/ucx-py"
"openucx/ucx" -> "Mellanox/libvma"
"openucx/ucx" -> "tarickb/the-geek-in-the-corner"
"openucx/ucx" -> "pmodels/mpich"
"openucx/ucx" -> "openucx/ucc"
"PlatformLab/RAMCloud" -> "kohler/masstree-beta" ["e"=1]
"PlatformLab/RAMCloud" -> "efficient/rdma_bench"
"PlatformLab/RAMCloud" -> "efficient/mica"
"PlatformLab/RAMCloud" -> "PlatformLab/Arachne"
"PlatformLab/RAMCloud" -> "pmem/pmemkv" ["e"=1]
"PlatformLab/RAMCloud" -> "PlatformLab/HomaSimulation"
"PlatformLab/RAMCloud" -> "logcabin/logcabin" ["e"=1]
"PlatformLab/RAMCloud" -> "efficient/HERD"
"PlatformLab/RAMCloud" -> "uwsampa/grappa"
"PlatformLab/RAMCloud" -> "utsaslab/pebblesdb" ["e"=1]
"PlatformLab/RAMCloud" -> "oltpbenchmark/oltpbench" ["e"=1]
"PlatformLab/RAMCloud" -> "accelio/accelio"
"PlatformLab/RAMCloud" -> "efficient/fasst"
"PlatformLab/RAMCloud" -> "CorfuDB/CorfuDB" ["e"=1]
"PlatformLab/RAMCloud" -> "stanford-mast/pocket" ["e"=1]
"NVIDIA/gdrcopy" -> "Mellanox/nv_peer_memory"
"NVIDIA/gdrcopy" -> "openucx/ucx"
"NVIDIA/gdrcopy" -> "NVIDIA/multi-gpu-programming-models"
"NVIDIA/gdrcopy" -> "linux-rdma/perftest"
"NVIDIA/gdrcopy" -> "NVIDIA/nccl"
"NVIDIA/gdrcopy" -> "Mellanox/nccl-rdma-sharp-plugins"
"NVIDIA/gdrcopy" -> "gpudirect/libgdsync"
"NVIDIA/gdrcopy" -> "NVIDIA/jitify"
"NVIDIA/gdrcopy" -> "linux-rdma/rdma-core"
"NVIDIA/gdrcopy" -> "NVIDIA/cnmem"
"NVIDIA/gdrcopy" -> "jcxue/RDMA-Tutorial"
"NVIDIA/gdrcopy" -> "NVIDIA/nccl-tests"
"NVIDIA/gdrcopy" -> "NVIDIA/nvbench"
"NVIDIA/gdrcopy" -> "facebookincubator/gloo"
"NVIDIA/gdrcopy" -> "NVIDIA/cuCollections"
"simit-lang/simit" -> "tensor-compiler/taco"
"simit-lang/simit" -> "polyfem/polyfem" ["e"=1]
"XiaoMi/mace-models" -> "XiaoMi/mobile-ai-bench"
"XiaoMi/mace-models" -> "XiaoMi/kaldi-onnx" ["e"=1]
"XiaoMi/mace-models" -> "XiaoMi/mace"
"XiaoMi/mace-models" -> "Tencent/FeatherCNN"
"XiaoMi/mace-models" -> "XiaoMi/mace-kit"
"XiaoMi/mace-models" -> "BUG1989/caffe-int8-convert-tools"
"XiaoMi/mace-models" -> "szad670401/Fast-MTCNN" ["e"=1]
"XiaoMi/mace-models" -> "moli232777144/mtcnn_ncnn" ["e"=1]
"rogerou/Arm-neon-intrinsics" -> "Ldpe2G/ArmNeonOptimization"
"rogerou/Arm-neon-intrinsics" -> "thenifty/neon-guide"
"rogerou/Arm-neon-intrinsics" -> "BBuf/ArmNeonOptimization"
"rogerou/Arm-neon-intrinsics" -> "tidyjiang8/arm-gcc-inline-assembler"
"rogerou/Arm-neon-intrinsics" -> "tpoisonooo/how-to-optimize-gemm"
"rogerou/Arm-neon-intrinsics" -> "BUG1989/ncnn-benchmark" ["e"=1]
"pytorch/extension-ffi" -> "sniklaus/pytorch-extension"
"pytorch/extension-ffi" -> "chrischoy/pytorch-custom-cuda-tutorial"
"pytorch/extension-ffi" -> "facebookresearch/torch-rnnlib" ["e"=1]
"pytorch/extension-ffi" -> "pytorch/extension-cpp"
"pytorch/extension-ffi" -> "szagoruyko/pyinn"
"pigirons/sgemm_hsw" -> "pigirons/cpufp"
"pigirons/sgemm_hsw" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs"
"pigirons/sgemm_hsw" -> "pigirons/conv3x3_m1"
"pigirons/sgemm_hsw" -> "Liu-xiandong/How_to_optimize_in_GPU"
"pigirons/sgemm_hsw" -> "StrongSpoon/tvm.schedule"
"pigirons/sgemm_hsw" -> "flame/blislab"
"pigirons/sgemm_hsw" -> "BBuf/how-to-optimize-gemm"
"efficient/fasst" -> "efficient/HERD"
"efficient/fasst" -> "WukLab/LITE"
"efficient/fasst" -> "efficient/rdma_bench"
"efficient/fasst" -> "SJTU-IPADS/drtmh"
"efficient/fasst" -> "WukLab/Hotpot"
"efficient/fasst" -> "SJTU-IPADS/drtm"
"mpitutorial/mpitutorial" -> "open-mpi/ompi"
"mpitutorial/mpitutorial" -> "thu-pacman/GeminiGraph" ["e"=1]
"mpitutorial/mpitutorial" -> "pmodels/mpich"
"mpitutorial/mpitutorial" -> "microsoft/nnfusion"
"mpitutorial/mpitutorial" -> "facebookincubator/gloo"
"mpitutorial/mpitutorial" -> "muatik/openmp-examples"
"mpitutorial/mpitutorial" -> "flame/how-to-optimize-gemm"
"mpitutorial/mpitutorial" -> "NVIDIA/cuda-samples"
"mpitutorial/mpitutorial" -> "baidu-research/baidu-allreduce"
"mpitutorial/mpitutorial" -> "bytedance/byteps" ["e"=1]
"mpitutorial/mpitutorial" -> "openmlsys/openmlsys-zh"
"mpitutorial/mpitutorial" -> "oneapi-src/oneMKL" ["e"=1]
"mpitutorial/mpitutorial" -> "dmlc/ps-lite" ["e"=1]
"mpitutorial/mpitutorial" -> "NVIDIA/CUDALibrarySamples"
"mpitutorial/mpitutorial" -> "PacktPublishing/Learn-CUDA-Programming"
"Amblyopius/Stable-Diffusion-ONNX-FP16" -> "azuritecoin/OnnxDiffusersUI"
"Amblyopius/Stable-Diffusion-ONNX-FP16" -> "ssube/onnx-web"
"mlperf/reference" -> "baidu-research/DeepBench"
"mlperf/reference" -> "tensorflow/benchmarks"
"mlperf/reference" -> "dgschwend/netscope" ["e"=1]
"mlperf/reference" -> "deep500/deep500" ["e"=1]
"mlperf/reference" -> "mlperf/inference"
"mlperf/reference" -> "oracle/graphpipe" ["e"=1]
"mlperf/reference" -> "stanford-futuredata/dawn-bench-entries"
"NVIDIA/thrust" -> "NVIDIA/cub"
"NVIDIA/thrust" -> "NVIDIA/libcudacxx"
"NVIDIA/thrust" -> "NVIDIA/cutlass"
"NVIDIA/thrust" -> "NVIDIA/cuda-samples"
"NVIDIA/thrust" -> "NVIDIA/CUDALibrarySamples"
"NVIDIA/thrust" -> "NVIDIA/MatX"
"NVIDIA/thrust" -> "stotko/stdgpu"
"NVIDIA/thrust" -> "oneapi-src/oneTBB" ["e"=1]
"NVIDIA/thrust" -> "NVIDIA/nvbench"
"NVIDIA/thrust" -> "NVIDIA/cuCollections"
"NVIDIA/thrust" -> "oneapi-src/oneDNN"
"NVIDIA/thrust" -> "xtensor-stack/xsimd" ["e"=1]
"NVIDIA/thrust" -> "flame/how-to-optimize-gemm"
"NVIDIA/thrust" -> "xtensor-stack/xtensor" ["e"=1]
"NVIDIA/thrust" -> "NVIDIA/TensorRT" ["e"=1]
"ssube/onnx-web" -> "ForserX/StableDiffusionUI"
"BBuf/how-to-optim-algorithm-in-cuda" -> "MARD1NO/FxxkCUDA"
"BBuf/how-to-optim-algorithm-in-cuda" -> "Cjkkkk/CUDA_gemm"
"BBuf/how-to-optim-algorithm-in-cuda" -> "tpoisonooo/how-to-optimize-gemm"
"BBuf/how-to-optim-algorithm-in-cuda" -> "BBuf/tvm_mlir_learn"
"BBuf/how-to-optim-algorithm-in-cuda" -> "Liu-xiandong/How_to_optimize_in_GPU"
"BBuf/how-to-optim-algorithm-in-cuda" -> "MegEngine/MegCC"
"BBuf/how-to-optim-algorithm-in-cuda" -> "bytedance/ByteTransformer"
"NVIDIA/nccl-tests" -> "NVIDIA/nccl"
"NVIDIA/nccl-tests" -> "Mellanox/nv_peer_memory"
"NVIDIA/nccl-tests" -> "facebookincubator/gloo"
"NVIDIA/nccl-tests" -> "baidu-research/baidu-allreduce"
"NVIDIA/nccl-tests" -> "NVIDIA/gdrcopy"
"NVIDIA/nccl-tests" -> "Mellanox/nccl-rdma-sharp-plugins"
"NVIDIA/nccl-tests" -> "NVIDIA/multi-gpu-programming-models"
"NVIDIA/nccl-tests" -> "pytorch/tau"
"NVIDIA/nccl-tests" -> "pytorch/kineto"
"NVIDIA/nccl-tests" -> "microsoft/msccl"
"NVIDIA/nccl-tests" -> "petuum/adaptdl" ["e"=1]
"NVIDIA/nccl-tests" -> "openucx/ucx"
"NVIDIA/nccl-tests" -> "dmlc/dlpack"
"NVIDIA/nccl-tests" -> "kubeflow/mpi-operator" ["e"=1]
"NVIDIA/nccl-tests" -> "Mellanox/k8s-rdma-sriov-dev-plugin" ["e"=1]
"Jack47/hack-SysML" -> "petuum/adaptdl" ["e"=1]
"Jack47/hack-SysML" -> "Yinghan-Li/YHs_Sample"
"Jack47/hack-SysML" -> "PaddlePaddle/CINN" ["e"=1]
"Jack47/hack-SysML" -> "Cjkkkk/CUDA_gemm"
"amzn/amzn-drivers" -> "ofiwg/libfabric"
"amzn/amzn-drivers" -> "aws/aws-ofi-nccl"
"amzn/amzn-drivers" -> "efficient/rdma_bench"
"amzn/amzn-drivers" -> "amzn/amzn-ec2-ena-utilities"
"amzn/amzn-drivers" -> "bobzhuyb/ns3-rdma"
"amzn/amzn-drivers" -> "aws/libfabric"
"amzn/amzn-drivers" -> "Mellanox/nv_peer_memory"
"amzn/amzn-drivers" -> "alibaba-edu/High-Precision-Congestion-Control"
"amzn/amzn-drivers" -> "linux-rdma/perftest"
"efficient/memc3" -> "efficient/mica"
"efficient/mica" -> "efficient/mica2"
"efficient/mica" -> "efficient/HERD"
"efficient/mica" -> "efficient/fasst"
"efficient/mica" -> "efficient/rdma_bench"
"efficient/mica" -> "opennvm/nvmkv"
"efficient/mica" -> "silt/silt"
"efficient/mica" -> "efficient/memc3"
"moderngpu/moderngpu" -> "NVlabs/cub"
"moderngpu/moderngpu" -> "cudpp/cudpp"
"moderngpu/moderngpu" -> "gunrock/gunrock"
"moderngpu/moderngpu" -> "NVIDIA/cub"
"moderngpu/moderngpu" -> "eyalroz/cuda-api-wrappers"
"moderngpu/moderngpu" -> "NervanaSystems/maxas"
"moderngpu/moderngpu" -> "NVIDIA/cutlass"
"moderngpu/moderngpu" -> "NVIDIA/jitify"
"moderngpu/moderngpu" -> "NVIDIA/multi-gpu-programming-models"
"moderngpu/moderngpu" -> "thrust/thrust"
"moderngpu/moderngpu" -> "stotko/stdgpu"
"moderngpu/moderngpu" -> "NVIDIA/gdrcopy"
"moderngpu/moderngpu" -> "NVIDIA/nvbench"
"moderngpu/moderngpu" -> "gpgpu-sim/gpgpu-sim_distribution" ["e"=1]
"moderngpu/moderngpu" -> "cusplibrary/cusplibrary"
"shenango/caladan" -> "shenango/shenango"
"bytedance/ByteTransformer" -> "uwsampl/sparsetir"
"Microsoft/onnxruntime" -> "onnx/onnxmltools" ["e"=1]
"Microsoft/onnxruntime" -> "NervanaSystems/ngraph"
"Microsoft/onnxruntime" -> "Microsoft/Windows-Machine-Learning"
"Microsoft/onnxruntime" -> "PaddlePaddle/Anakin"
"Microsoft/onnxruntime" -> "neo-ai/neo-ai-dlr" ["e"=1]
"Microsoft/onnxruntime" -> "Microsoft/onnxjs" ["e"=1]
"Microsoft/onnxruntime" -> "intel/mkl-dnn"
"Microsoft/onnxruntime" -> "ONNC/onnc" ["e"=1]
"Microsoft/onnxruntime" -> "Microsoft/MMdnn" ["e"=1]
"Microsoft/onnxruntime" -> "pytorch/glow"
"Microsoft/onnxruntime" -> "awslabs/mxnet-model-server" ["e"=1]
"Microsoft/onnxruntime" -> "dmlc/tvm"
"NVIDIA/cuda-python" -> "nv-legate/cunumeric"
"NVIDIA/cuda-python" -> "rapidsai/kvikio"
"NVIDIA/cuda-python" -> "NVIDIA/warp" ["e"=1]
"NVIDIA/cuda-python" -> "rapidsai/raft"
"NVIDIA/cuda-python" -> "inducer/pycuda" ["e"=1]
"NVIDIA/cuda-python" -> "NVIDIA/cuCollections"
"NVIDIA/cuda-python" -> "NVIDIA/cub"
"NVIDIA/cuda-python" -> "rapidsai/rmm"
"NVIDIA/cuda-python" -> "rapidsai/cuspatial" ["e"=1]
"NVIDIA/cuda-python" -> "NVIDIA/nvbench"
"NVIDIA/cuda-python" -> "NVIDIA/NVTabular" ["e"=1]
"NVIDIA/cuda-python" -> "rapidsai/cugraph" ["e"=1]
"NervanaSystems/ngraph" -> "intel/mkl-dnn"
"NervanaSystems/ngraph" -> "tensorflow/mlir"
"NervanaSystems/ngraph" -> "facebookresearch/TensorComprehensions"
"NervanaSystems/ngraph" -> "pytorch/glow"
"NervanaSystems/ngraph" -> "dmlc/tvm"
"NervanaSystems/ngraph" -> "NervanaSystems/neon" ["e"=1]
"NervanaSystems/ngraph" -> "dmlc/nnvm"
"NervanaSystems/ngraph" -> "google/iree"
"NervanaSystems/ngraph" -> "tensorflow/runtime"
"NervanaSystems/ngraph" -> "baidu-research/DeepBench"
"NervanaSystems/ngraph" -> "microsoft/nnfusion"
"NervanaSystems/ngraph" -> "NervanaSystems/distiller"
"NervanaSystems/ngraph" -> "plaidml/plaidml"
"NervanaSystems/ngraph" -> "ONNC/onnc" ["e"=1]
"NervanaSystems/ngraph" -> "pytorch/QNNPACK"
"antonmks/Alenka" -> "bakks/virginian"
"antonmks/Alenka" -> "pg-strom/devel"
"antonmks/Alenka" -> "mapd/mapd-core" ["e"=1]
"antonmks/Alenka" -> "NVlabs/moderngpu"
"antonmks/Alenka" -> "antonmks/nvParse" ["e"=1]
"antonmks/Alenka" -> "moderngpu/moderngpu"
"antonmks/Alenka" -> "canonizer/halloc"
"antonmks/Alenka" -> "parallel-forall/code-samples"
"antonmks/Alenka" -> "NVlabs/cub"
"antonmks/Alenka" -> "thrust/thrust"
"antonmks/Alenka" -> "cudpp/cudpp"
"antonmks/Alenka" -> "mit-probabilistic-computing-project/BayesDB" ["e"=1]
"antonmks/Alenka" -> "gunrock/gunrock"
"antonmks/Alenka" -> "hannes-brt/hebel" ["e"=1]
"antonmks/Alenka" -> "dubey/weaver" ["e"=1]
"google/ml-compiler-opt" -> "facebookresearch/CompilerGym"
"google/ml-compiler-opt" -> "jansel/opentuner"
"google/ml-compiler-opt" -> "tensorflow/mlir-hlo"
"google/ml-compiler-opt" -> "llvm/Polygeist"
"google/ml-compiler-opt" -> "zwang4/awesome-machine-learning-in-compilers"
"google/ml-compiler-opt" -> "openxla/stablehlo"
"google/ml-compiler-opt" -> "KnowingNothing/compiler-and-arch"
"google/ml-compiler-opt" -> "llvm/clangir"
"google/ml-compiler-opt" -> "ChrisCummins/ProGraML"
"google/ml-compiler-opt" -> "spcl/ncc"
"google/ml-compiler-opt" -> "onnx/onnx-mlir"
"gpudirect/libgdsync" -> "Mellanox/nv_peer_memory"
"llvm/torch-mlir" -> "onnx/onnx-mlir"
"llvm/torch-mlir" -> "alibaba/BladeDISC"
"llvm/torch-mlir" -> "tensorflow/mlir-hlo"
"llvm/torch-mlir" -> "google/iree"
"llvm/torch-mlir" -> "pytorch/torchdynamo"
"llvm/torch-mlir" -> "microsoft/nnfusion"
"llvm/torch-mlir" -> "tlc-pack/relax"
"llvm/torch-mlir" -> "iree-org/iree"
"llvm/torch-mlir" -> "tensorflow/runtime"
"llvm/torch-mlir" -> "buddy-compiler/buddy-mlir"
"llvm/torch-mlir" -> "jiazhihao/TASO"
"llvm/torch-mlir" -> "merrymercy/awesome-tensor-compilers"
"llvm/torch-mlir" -> "bytedance/byteir"
"llvm/torch-mlir" -> "BBuf/tvm_mlir_learn"
"llvm/torch-mlir" -> "MLIR-China/mlir-playground"
"openai/blocksparse" -> "openai/sparse_attention" ["e"=1]
"openai/blocksparse" -> "huggingface/pytorch_block_sparse" ["e"=1]
"openai/blocksparse" -> "NVIDIA/cutlass"
"openai/blocksparse" -> "ptillet/torch-blocksparse" ["e"=1]
"openai/blocksparse" -> "google-research/sputnik" ["e"=1]
"openai/blocksparse" -> "NervanaSystems/maxas"
"openai/blocksparse" -> "openai/openai-gemm"
"openai/blocksparse" -> "facebookresearch/TensorComprehensions"
"openai/blocksparse" -> "gunrock/gunrock"
"openai/blocksparse" -> "openai/gradient-checkpointing"
"openai/blocksparse" -> "pytorch/FBGEMM"
"openai/blocksparse" -> "google/gemmlowp"
"openai/blocksparse" -> "tensor-compiler/taco"
"openai/blocksparse" -> "moderngpu/moderngpu"
"openai/blocksparse" -> "andravin/wincnn"
"parallel-forall/code-samples" -> "NVlabs/cub"
"parallel-forall/code-samples" -> "parallel-forall/cudacasts"
"parallel-forall/code-samples" -> "harrism/hemi"
"parallel-forall/code-samples" -> "NVlabs/moderngpu"
"parallel-forall/code-samples" -> "cudpp/cudpp"
"parallel-forall/code-samples" -> "baidu-research/persistent-rnn" ["e"=1]
"parallel-forall/code-samples" -> "thrust/thrust"
"parallel-forall/code-samples" -> "gunrock/gunrock"
"parallel-forall/code-samples" -> "NVIDIA/nccl"
"parallel-forall/code-samples" -> "NVIDIA/cnmem"
"parallel-forall/code-samples" -> "ArchaeaSoftware/cudahandbook"
"parallel-forall/code-samples" -> "NVIDIA/caffe" ["e"=1]
"parallel-forall/code-samples" -> "rmfarber/ParallelProgrammingWithOpenACC"
"parallel-forall/code-samples" -> "baidu-research/DeepBench"
"parallel-forall/code-samples" -> "cusplibrary/cusplibrary"
"pytorch/tensorpipe" -> "pytorch/rfcs"
"pytorch/tensorpipe" -> "facebookresearch/fairring"
"pytorch/tensorpipe" -> "Funatiq/gossip" ["e"=1]
"rapidsai/raft" -> "NVIDIA/cuCollections"
"rapidsai/raft" -> "rapidsai/rmm"
"rapidsai/raft" -> "milvus-io/knowhere" ["e"=1]
"rapidsai/raft" -> "NVIDIA/nvbench"
"stanford-futuredata/dawn-bench-entries" -> "stanford-futuredata/dawn-bench-models"
"tensorflow/mlir-hlo" -> "onnx/onnx-mlir"
"tensorflow/mlir-hlo" -> "alibaba/BladeDISC"
"tensorflow/mlir-hlo" -> "llvm/mlir-npcomp"
"tensorflow/mlir-hlo" -> "tensorflow/runtime"
"tensorflow/mlir-hlo" -> "openxla/stablehlo"
"tensorflow/mlir-hlo" -> "google/iree"
"tensorflow/mlir-hlo" -> "llvm/torch-mlir"
"tensorflow/mlir-hlo" -> "iml130/mlir-emitc" ["e"=1]
"tensorflow/mlir-hlo" -> "bytedance/byteir"
"tensorflow/mlir-hlo" -> "microsoft/nnfusion"
"tensorflow/mlir-hlo" -> "buddy-compiler/buddy-mlir"
"tensorflow/mlir-hlo" -> "spcl/pymlir"
"tensorflow/mlir-hlo" -> "kumasento/polymer" ["e"=1]
"tensorflow/mlir-hlo" -> "alibaba/heterogeneity-aware-lowering-and-optimization"
"tensorflow/mlir-hlo" -> "polymage-labs/mlirx"
"tensorflow/runtime" -> "tensorflow/mlir-hlo"
"tensorflow/runtime" -> "google/iree"
"tensorflow/runtime" -> "microsoft/nnfusion"
"tensorflow/runtime" -> "tensorflow/mlir"
"tensorflow/runtime" -> "onnx/onnx-mlir"
"tensorflow/runtime" -> "alibaba/BladeDISC"
"tensorflow/runtime" -> "llvm/torch-mlir"
"tensorflow/runtime" -> "jiazhihao/TASO"
"tensorflow/runtime" -> "flexflow/FlexFlow"
"tensorflow/runtime" -> "llvm/mlir-npcomp"
"tensorflow/runtime" -> "tensorflow/io" ["e"=1]
"tensorflow/runtime" -> "tensorflow/custom-op" ["e"=1]
"tensorflow/runtime" -> "tensorflow/profiler" ["e"=1]
"tensorflow/runtime" -> "merrymercy/awesome-tensor-compilers"
"tensorflow/runtime" -> "openxla/xla"
"zdevito/ATen" -> "pytorch/extension-cpp"
"zdevito/ATen" -> "facebookresearch/TensorComprehensions"
"zdevito/ATen" -> "warmspringwinds/pytorch-cpp"
"zdevito/ATen" -> "torrvision/crayon" ["e"=1]
"zdevito/ATen" -> "facebookincubator/gloo"
"zdevito/ATen" -> "lanpa/tensorboard-pytorch" ["e"=1]
"zdevito/ATen" -> "pytorch/benchmark"
"zdevito/ATen" -> "JianGoForIt/YellowFin_Pytorch" ["e"=1]
"zdevito/ATen" -> "taolei87/sru" ["e"=1]
"zdevito/ATen" -> "dmlc/mshadow" ["e"=1]
"zdevito/ATen" -> "leonardvandriel/caffe2_cpp_tutorial"
"zdevito/ATen" -> "torch/cunn" ["e"=1]
"zdevito/ATen" -> "ebetica/autogradpp"
"zdevito/ATen" -> "salesforce/matchbox" ["e"=1]
"zdevito/ATen" -> "szagoruyko/pyinn"
"pytorch/kineto" -> "microsoft/varuna" ["e"=1]
"pytorch/kineto" -> "petuum/adaptdl" ["e"=1]
"pytorch/kineto" -> "pytorch/ort" ["e"=1]
"pytorch/kineto" -> "pytorch/benchmark"
"pytorch/kineto" -> "facebookresearch/HolisticTraceAnalysis"
"pytorch/kineto" -> "microsoft/msccl"
"pytorch/kineto" -> "pytorch/torchx"
"pytorch/kineto" -> "NVIDIA/nccl-tests"
"pytorch/kineto" -> "NVIDIA/PyProf" ["e"=1]
"pytorch/kineto" -> "pytorch/rfcs"
"pytorch/kineto" -> "pytorch/FBGEMM"
"pytorch/kineto" -> "Shenggan/awesome-distributed-ml"
"pytorch/kineto" -> "microsoft/tutel" ["e"=1]
"pytorch/kineto" -> "flexflow/FlexFlow"
"pytorch/kineto" -> "stanford-futuredata/gavel" ["e"=1]
"ChrisCummins/clgen" -> "ChrisCummins/paper-end2end-dl"
"ChrisCummins/clgen" -> "ChrisCummins/paper-synthesizing-benchmarks"
"ChrisCummins/clgen" -> "ChrisCummins/cldrive"
"azuritecoin/OnnxDiffusersUI" -> "Amblyopius/Stable-Diffusion-ONNX-FP16"
"azuritecoin/OnnxDiffusersUI" -> "ssube/onnx-web"
"azuritecoin/OnnxDiffusersUI" -> "nod-ai/SHARK"
"azuritecoin/OnnxDiffusersUI" -> "JbPasquier/stable-diffusion-onnx-ui"
"azuritecoin/OnnxDiffusersUI" -> "ForserX/StableDiffusionUI"
"azuritecoin/OnnxDiffusersUI" -> "Amblyopius/AMD-Stable-Diffusion-ONNX-FP16"
"azuritecoin/OnnxDiffusersUI" -> "lshqqytiger/stable-diffusion-webui-directml"
"RUSH-LAB/SLIDE" -> "keroro824/HashingDeepLearning"
"RUSH-LAB/SLIDE" -> "IntelLabs/SLIDE_opt_ia"
"arrayfire/arrayfire-python" -> "FilipeMaia/afnumpy"
"arrayfire/arrayfire-python" -> "michaelnowotny/cocos"
"arrayfire/arrayfire-python" -> "arrayfire/arrayfire-rust" ["e"=1]
"arrayfire/arrayfire-python" -> "arrayfire/arrayfire"
"facebookincubator/gloo" -> "NVIDIA/nccl"
"facebookincubator/gloo" -> "baidu-research/baidu-allreduce"
"facebookincubator/gloo" -> "NVIDIA/nccl-tests"
"facebookincubator/gloo" -> "flexflow/FlexFlow"
"facebookincubator/gloo" -> "baidu-research/tensorflow-allreduce"
"facebookincubator/gloo" -> "bytedance/byteps" ["e"=1]
"facebookincubator/gloo" -> "NVIDIA/gdrcopy"
"facebookincubator/gloo" -> "Mellanox/nv_peer_memory"
"facebookincubator/gloo" -> "dmlc/ps-lite" ["e"=1]
"facebookincubator/gloo" -> "facebookresearch/TensorComprehensions"
"facebookincubator/gloo" -> "pytorch/tensorpipe"
"facebookincubator/gloo" -> "Maratyszcza/NNPACK"
"facebookincubator/gloo" -> "tensorflow/benchmarks"
"facebookincubator/gloo" -> "dmlc/mshadow" ["e"=1]
"facebookincubator/gloo" -> "dmlc/rabit" ["e"=1]
"ARM-software/ML-examples" -> "ARM-software/armnn"
"ARM-software/ML-examples" -> "ARM-software/ML-zoo"
"ARM-software/ML-examples" -> "ARM-software/ML-KWS-for-MCU" ["e"=1]
"ARM-software/ML-examples" -> "majianjia/nnom" ["e"=1]
"ARM-software/ML-examples" -> "EEESlab/mobilenet_v1_stm32_cmsis_nn"
"ARM-software/ML-examples" -> "ARM-software/ComputeLibrary"
"ARM-software/ML-examples" -> "ai-techsystems/deepC"
"ARM-software/ML-examples" -> "ARM-software/android-nn-driver"
"ARM-software/ML-examples" -> "mlcommons/tiny"
"ARM-software/ML-examples" -> "tensorflow/tflite-micro"
"ARM-software/ML-examples" -> "BCJuan/torch2cmsis"
"ARM-software/ML-examples" -> "alibaba/TinyNeuralNetwork" ["e"=1]
"ARM-software/ML-examples" -> "cpetig/tflite_micro_compiler"
"ARM-software/ML-examples" -> "ARM-software/CMSIS_5" ["e"=1]
"ARM-software/ML-examples" -> "uTensor/uTensor"
"NVIDIA/gds-nvidia-fs" -> "NVIDIA/MagnumIO"
"microsoft/Freeflow" -> "WukLab/LITE"
"microsoft/Freeflow" -> "efficient/rdma_bench"
"microsoft/Freeflow" -> "jcxue/RDMA-Tutorial"
"microsoft/Freeflow" -> "bobzhuyb/ns3-rdma"
"microsoft/Freeflow" -> "linux-rdma/perftest"
"microsoft/Freeflow" -> "hustcat/k8s-rdma-device-plugin" ["e"=1]
"microsoft/Freeflow" -> "linux-rdma/rdma-core"
"microsoft/Freeflow" -> "claudebarthels/infinity"
"microsoft/Freeflow" -> "SoftRoCE/rxe-dev"
"microsoft/Freeflow" -> "SJTU-IPADS/krcore-artifacts"
"microsoft/Freeflow" -> "thustorage/octopus"
"thustorage/octopus" -> "pmem/rpma"
"thustorage/octopus" -> "ooibc88/gam"
"thustorage/octopus" -> "efficient/rdma_bench"
"thustorage/octopus" -> "WukLab/LITE"
"thustorage/octopus" -> "WukLab/Hotpot"
"thustorage/octopus" -> "jcxue/RDMA-Tutorial"
"thustorage/octopus" -> "thustorage/nvm-datastructure" ["e"=1]
"thustorage/octopus" -> "NVSL/NOVA" ["e"=1]
"thustorage/octopus" -> "DICL/CCEH" ["e"=1]
"eloquentarduino/EloquentTinyML" -> "eloquentarduino/tinymlgen"
"eloquentarduino/EloquentTinyML" -> "arduino/ArduinoTensorFlowLiteTutorials"
"eloquentarduino/EloquentTinyML" -> "eloquentarduino/micromlgen" ["e"=1]
"eloquentarduino/EloquentTinyML" -> "eloquentarduino/EloquentArduino" ["e"=1]
"eloquentarduino/EloquentTinyML" -> "tanakamasayuki/Arduino_TensorFlowLite_ESP32"
"eloquentarduino/EloquentTinyML" -> "tensorflow/tflite-micro-arduino-examples"
"dmlc/dlpack" -> "pytorch/tvm"
"dmlc/dlpack" -> "d2l-ai/d2l-tvm"
"dmlc/dlpack" -> "microsoft/nnfusion"
"dmlc/dlpack" -> "tensorflow/mlir-hlo"
"dmlc/dlpack" -> "flexflow/FlexFlow"
"dmlc/dlpack" -> "jiazhihao/TASO"
"dmlc/dlpack" -> "llvm/torch-mlir"
"dmlc/dlpack" -> "onnx/onnx-mlir"
"dmlc/dlpack" -> "NVIDIA/cub"
"dmlc/dlpack" -> "pytorch/tensorpipe"
"dmlc/dlpack" -> "tqchen/ffi-navigator"
"dmlc/dlpack" -> "dmlc/nnvm"
"dmlc/dlpack" -> "dmlc/dmlc-core" ["e"=1]
"dmlc/dlpack" -> "facebookincubator/gloo"
"dmlc/dlpack" -> "facebookresearch/TensorComprehensions"
"YuanhaoGong/SideWindowFilter" -> "YuanhaoGong/CurvatureFilter"
"YuanhaoGong/SideWindowFilter" -> "Ldpe2G/ArmNeonOptimization"
"YuanhaoGong/SideWindowFilter" -> "dontLoveBugs/SideWindowFilter"
"YuanhaoGong/SideWindowFilter" -> "YuanhaoGong/WeightedMeanCurvature"
"YuanhaoGong/SideWindowFilter" -> "Luxiush/Weighted-Guided-Image-Filter"
"YuanhaoGong/SideWindowFilter" -> "swz30/CycleISP" ["e"=1]
"Ldpe2G/ArmNeonOptimization" -> "rogerou/Arm-neon-intrinsics"
"Ldpe2G/ArmNeonOptimization" -> "YuanhaoGong/SideWindowFilter"
"Ldpe2G/ArmNeonOptimization" -> "thenifty/neon-guide"
"Ldpe2G/ArmNeonOptimization" -> "BBuf/ArmNeonOptimization"
"Ldpe2G/ArmNeonOptimization" -> "tpoisonooo/how-to-optimize-gemm"
"Ldpe2G/ArmNeonOptimization" -> "lyuchuny3/Tengine_gemm_tutorial"
"Ldpe2G/ArmNeonOptimization" -> "deepglint/EasyQuant" ["e"=1]
"pmodels/mpich" -> "open-mpi/ompi"
"pmodels/mpich" -> "mpi-forum/mpi-issues"
"pmodels/mpich" -> "openucx/ucx"
"pmodels/mpich" -> "ofiwg/libfabric"
"pmodels/mpich" -> "intel/mpi-benchmarks"
"pmodels/mpich" -> "open-mpi/hwloc"
"pmodels/mpich" -> "hypre-space/hypre" ["e"=1]
"pmodels/mpich" -> "ROCmSoftwarePlatform/rccl" ["e"=1]
"pmodels/mpich" -> "wesleykendall/mpitutorial"
"pmodels/mpich" -> "NVIDIA/gdrcopy"
"pmodels/mpich" -> "petsc/petsc" ["e"=1]
"pmodels/mpich" -> "daos-stack/daos" ["e"=1]
"pmodels/mpich" -> "GlobalArrays/ga"
"pmodels/mpich" -> "HPCToolkit/hpctoolkit" ["e"=1]
"pmodels/mpich" -> "LLNL/mpiP" ["e"=1]
"lshqqytiger/k-diffusion-directml" -> "lshqqytiger/stablediffusion-directml"
"lshqqytiger/stablediffusion-directml" -> "lshqqytiger/k-diffusion-directml"
"jansel/opentuner" -> "google/ml-compiler-opt"
"jansel/opentuner" -> "lift-project/lift"
"jansel/opentuner" -> "facebookresearch/CompilerGym"
"jansel/opentuner" -> "CNugteren/CLTune" ["e"=1]
"jansel/opentuner" -> "phrb/gpu-autotuning"
"ValeevGroup/tiledarray" -> "m-a-d-n-e-s-s/madness"
"ValeevGroup/tiledarray" -> "solomonik/ctf"
"ValeevGroup/tiledarray" -> "cyclops-community/ctf"
"ValeevGroup/tiledarray" -> "devinamatthews/tblis"
"ValeevGroup/tiledarray" -> "epifanovsky/libtensor"
"ValeevGroup/tiledarray" -> "elemental/Elemental"
"ValeevGroup/tiledarray" -> "evaleev/libint" ["e"=1]
"ValeevGroup/tiledarray" -> "ValeevGroup/mpqc" ["e"=1]
"ValeevGroup/tiledarray" -> "FermiQC/Fermi.jl" ["e"=1]
"ValeevGroup/tiledarray" -> "LLNL/Umpire" ["e"=1]
"arduino/ArduinoTensorFlowLiteTutorials" -> "eloquentarduino/EloquentTinyML"
"arduino/ArduinoTensorFlowLiteTutorials" -> "atomic14/tensorflow-lite-esp32" ["e"=1]
"arduino/ArduinoTensorFlowLiteTutorials" -> "arduino/ArduinoAI"
"arduino/ArduinoTensorFlowLiteTutorials" -> "wezleysherman/ESP32-TensorFlow-Lite-Sample"
"Liu-xiandong/How_to_optimize_in_GPU" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs"
"Liu-xiandong/How_to_optimize_in_GPU" -> "Yinghan-Li/YHs_Sample"
"Liu-xiandong/How_to_optimize_in_GPU" -> "tpoisonooo/how-to-optimize-gemm"
"Liu-xiandong/How_to_optimize_in_GPU" -> "Cjkkkk/CUDA_gemm"
"Liu-xiandong/How_to_optimize_in_GPU" -> "BBuf/how-to-optim-algorithm-in-cuda"
"Liu-xiandong/How_to_optimize_in_GPU" -> "niuhope/cuda_sgemm"
"Liu-xiandong/How_to_optimize_in_GPU" -> "cloudcores/CuAssembler"
"Liu-xiandong/How_to_optimize_in_GPU" -> "XiaoSong9905/CUDA-Optimization-Guide"
"Liu-xiandong/How_to_optimize_in_GPU" -> "MegEngine/mperf"
"Liu-xiandong/How_to_optimize_in_GPU" -> "NVIDIA/CUDALibrarySamples"
"Liu-xiandong/How_to_optimize_in_GPU" -> "pigirons/cpufp"
"Liu-xiandong/How_to_optimize_in_GPU" -> "pigirons/sgemm_hsw"
"Liu-xiandong/How_to_optimize_in_GPU" -> "MegEngine/MegCC"
"Liu-xiandong/How_to_optimize_in_GPU" -> "flame/how-to-optimize-gemm"
"Liu-xiandong/How_to_optimize_in_GPU" -> "mlc-ai/notebooks"
"bytedance/byteir" -> "MegEngine/MegCC"
"bytedance/byteir" -> "bytedance/ByteTransformer"
"bytedance/byteir" -> "MegEngine/MegPeak"
"bytedance/byteir" -> "tensorflow/mlir-hlo"
"bytedance/byteir" -> "tlc-pack/relax"
"snowzjx/ns3-ecn-sharp" -> "snowzjx/ns3-load-balance"
"pigirons/cpufp" -> "tpoisonooo/how-to-optimize-gemm"
"pigirons/cpufp" -> "pigirons/sgemm_hsw"
"pigirons/cpufp" -> "flame/how-to-optimize-gemm"
"pigirons/cpufp" -> "flame/blislab"
"pigirons/cpufp" -> "Yinghan-Li/YHs_Sample"
"pigirons/cpufp" -> "openppl-public/ppl.nn"
"pigirons/cpufp" -> "MegEngine/MegCC"
"pigirons/cpufp" -> "Liu-xiandong/How_to_optimize_in_GPU"
"pigirons/cpufp" -> "cloudcores/CuAssembler"
"pigirons/cpufp" -> "alibaba/BladeDISC"
"pigirons/cpufp" -> "microsoft/nnfusion"
"pigirons/cpufp" -> "BBuf/how-to-optimize-gemm"
"pigirons/cpufp" -> "openppl-public/ppl.cv"
"pigirons/cpufp" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs"
"pigirons/cpufp" -> "huawei-noah/bolt"
"Mellanox/nccl-rdma-sharp-plugins" -> "openucx/xccl"
"Mellanox/nccl-rdma-sharp-plugins" -> "Mellanox/nv_peer_memory"
"Mellanox/nv_peer_memory" -> "Mellanox/nccl-rdma-sharp-plugins"
"Mellanox/nv_peer_memory" -> "gpudirect/libgdsync"
"Mellanox/nv_peer_memory" -> "NVIDIA/gdrcopy"
"Mellanox/nv_peer_memory" -> "NVIDIA/nccl-tests"
"Mellanox/nv_peer_memory" -> "linux-rdma/perftest"
"Mellanox/nv_peer_memory" -> "microsoft/msccl"
"Mellanox/nv_peer_memory" -> "Mellanox/k8s-rdma-sriov-dev-plugin" ["e"=1]
"Mellanox/nv_peer_memory" -> "openucx/ucx"
"Mellanox/nv_peer_memory" -> "google/nccl-fastsocket"
"csrhddlam/pytorch-checkpoint" -> "prigoyal/pytorch_memonger"
"google/nccl-fastsocket" -> "microsoft/NPKit"
"microsoft/msccl" -> "microsoft/msccl-tools"
"microsoft/msccl" -> "microsoft/sccl"
"microsoft/msccl" -> "parasailteam/coconet"
"microsoft/msccl" -> "Mellanox/nccl-rdma-sharp-plugins"
"microsoft/msccl" -> "microsoft/NPKit"
"microsoft/msccl" -> "google/nccl-fastsocket"
"Microsoft/Freeflow" -> "joyq-github/TensorFlowonK8s"
"Microsoft/Freeflow" -> "danyangz/Slim"
"Microsoft/Freeflow" -> "Microsoft/KubeGPU" ["e"=1]
"Microsoft/Freeflow" -> "hustcat/k8s-rdma-device-plugin" ["e"=1]
"Microsoft/Freeflow" -> "WukLab/LITE"
"Microsoft/Freeflow" -> "efficient/HERD"
"Microsoft/Freeflow" -> "jonhoo/rust-ibverbs" ["e"=1]
"cusplibrary/cusplibrary" -> "viennacl/viennacl-dev" ["e"=1]
"cusplibrary/cusplibrary" -> "ddemidov/amgcl" ["e"=1]
"cusplibrary/cusplibrary" -> "NVlabs/cub"
"cusplibrary/cusplibrary" -> "harrism/hemi"
"cusplibrary/cusplibrary" -> "ddemidov/vexcl" ["e"=1]
"cusplibrary/cusplibrary" -> "NVIDIA/AMGX" ["e"=1]
"cusplibrary/cusplibrary" -> "ginkgo-project/ginkgo" ["e"=1]
"cusplibrary/cusplibrary" -> "clMathLibraries/clSPARSE" ["e"=1]
"cusplibrary/cusplibrary" -> "thrust/thrust"
"cusplibrary/cusplibrary" -> "bhSPARSE/Benchmark_SpMV_using_CSR5"
"cusplibrary/cusplibrary" -> "gunrock/gunrock"
"cusplibrary/cusplibrary" -> "bhSPARSE/Benchmark_SpGEMM_using_CSR"
"cusplibrary/cusplibrary" -> "cudpp/cudpp"
"cusplibrary/cusplibrary" -> "moderngpu/moderngpu"
"cusplibrary/cusplibrary" -> "NVlabs/moderngpu"
"eyalroz/cuda-api-wrappers" -> "NVIDIA/jitify"
"eyalroz/cuda-api-wrappers" -> "eyalroz/cuda-kat"
"eyalroz/cuda-api-wrappers" -> "stotko/stdgpu"
"eyalroz/cuda-api-wrappers" -> "NVIDIA/cub"
"eyalroz/cuda-api-wrappers" -> "moderngpu/moderngpu"
"eyalroz/cuda-api-wrappers" -> "NVIDIA/MatX"
"eyalroz/cuda-api-wrappers" -> "NVIDIA/libcudacxx"
"eyalroz/cuda-api-wrappers" -> "NVIDIA/nvbench"
"eyalroz/cuda-api-wrappers" -> "NVIDIA/nvcomp"
"eyalroz/cuda-api-wrappers" -> "illuhad/hipSYCL" ["e"=1]
"eyalroz/cuda-api-wrappers" -> "rapidsai/rmm"
"eyalroz/cuda-api-wrappers" -> "NVIDIA/multi-gpu-programming-models"
"eyalroz/cuda-api-wrappers" -> "NVIDIA/cuCollections"
"eyalroz/cuda-api-wrappers" -> "gunrock/gunrock"
"eyalroz/cuda-api-wrappers" -> "NVlabs/cub"
"tanakamasayuki/Arduino_TensorFlowLite_ESP32" -> "espressif/tflite-micro-esp-examples"
"tanakamasayuki/Arduino_TensorFlowLite_ESP32" -> "espressif/tensorflow"
"pytorch/tau" -> "pytorch/torchsnapshot"
"cudpp/cudpp" -> "NVlabs/cub"
"cudpp/cudpp" -> "moderngpu/moderngpu"
"cudpp/cudpp" -> "NVIDIA/cnmem"
"cudpp/cudpp" -> "nosferalatu/SimpleGPUHashTable"
"cudpp/cudpp" -> "parallel-forall/code-samples"
"cudpp/cudpp" -> "gunrock/gunrock"
"cudpp/cudpp" -> "Erkaman/Awesome-CUDA"
"cudpp/cudpp" -> "owensgroup/SlabHash"
"cudpp/cudpp" -> "thrust/thrust"
"cudpp/cudpp" -> "cusplibrary/cusplibrary"
"cudpp/cudpp" -> "sleeepyjack/warpcore"
"cudpp/cudpp" -> "NervanaSystems/maxas"
"cudpp/cudpp" -> "JianlongZhong/Medusa"
"cudpp/cudpp" -> "NVIDIA/jitify"
"cudpp/cudpp" -> "NVIDIA/cuCollections"
"facebook/FAI-PEP" -> "dstamoulis/single-path-nas" ["e"=1]
"facebook/FAI-PEP" -> "XiaoMi/mobile-ai-bench"
"facebook/FAI-PEP" -> "pytorch/QNNPACK"
"mlcommons/tiny" -> "ARM-software/ML-zoo"
"mlcommons/tiny" -> "cpetig/tflite_micro_compiler"
"mlcommons/tiny" -> "gigwegbe/tinyml-papers-and-projects"
"mlcommons/tiny" -> "mit-han-lab/tinyml"
"mlcommons/tiny" -> "tinyMLx/colabs"
"mlcommons/tiny" -> "tensorflow/tflite-micro"
"ContinuumIO/gtc2019-numba" -> "ContinuumIO/gtc2020-numba"
"ContinuumIO/gtc2019-numba" -> "ContinuumIO/gtc2018-numba"
"baidu-research/baidu-allreduce" -> "baidu-research/tensorflow-allreduce"
"baidu-research/baidu-allreduce" -> "facebookincubator/gloo"
"baidu-research/baidu-allreduce" -> "dmlc/rabit" ["e"=1]
"baidu-research/baidu-allreduce" -> "NVIDIA/nccl-tests"
"baidu-research/baidu-allreduce" -> "dmlc/ps-lite" ["e"=1]
"baidu-research/baidu-allreduce" -> "NVIDIA/nccl"
"baidu-research/baidu-allreduce" -> "bytedance/byteps" ["e"=1]
"baidu-research/baidu-allreduce" -> "dmlc/parameter_server" ["e"=1]
"baidu-research/baidu-allreduce" -> "baidu-research/persistent-rnn" ["e"=1]
"baidu-research/baidu-allreduce" -> "flexflow/FlexFlow"
"baidu-research/baidu-allreduce" -> "dmlc/mshadow" ["e"=1]
"baidu-research/baidu-allreduce" -> "cuihenggang/geeps" ["e"=1]
"baidu-research/baidu-allreduce" -> "cnkuangshi/LightCTR" ["e"=1]
"baidu-research/baidu-allreduce" -> "Microsoft/Multiverso" ["e"=1]
"baidu-research/baidu-allreduce" -> "baidu-research/DeepBench"
"bondhugula/pluto" -> "Meinersbur/ppcg"
"bondhugula/pluto" -> "inducer/islpy"
"bondhugula/pluto" -> "periscop/cloog"
"bondhugula/pluto" -> "wsmoses/Polygeist" ["e"=1]
"bondhugula/pluto" -> "kumasento/polymer" ["e"=1]
"bondhugula/pluto" -> "KnowingNothing/FlexTensor"
"bondhugula/pluto" -> "ftynse/clint"
"bondhugula/pluto" -> "periscop/clan"
"bondhugula/pluto" -> "UCLA-VAST/AutoSA" ["e"=1]
"NVIDIA/multi-gpu-programming-models" -> "NVIDIA/gdrcopy"
"NVIDIA/multi-gpu-programming-models" -> "FZJ-JSC/tutorial-multi-gpu"
"NVIDIA/multi-gpu-programming-models" -> "NVIDIA/cuCollections"
"NVIDIA/multi-gpu-programming-models" -> "NVIDIA/jitify"
"NVIDIA/multi-gpu-programming-models" -> "NVIDIA/CUDALibrarySamples"
"NVIDIA/multi-gpu-programming-models" -> "UoB-HPC/BabelStream" ["e"=1]
"NVIDIA/multi-gpu-programming-models" -> "NVIDIA-developer-blog/code-samples"
"NVIDIA/multi-gpu-programming-models" -> "NVIDIA/cub"
"NVIDIA/multi-gpu-programming-models" -> "NVIDIA/nccl-tests"
"NVIDIA/multi-gpu-programming-models" -> "moderngpu/moderngpu"
"NVIDIA/multi-gpu-programming-models" -> "NVIDIA/AMGX" ["e"=1]
"NVIDIA/multi-gpu-programming-models" -> "NVIDIA/nvbench"
"NVIDIA/multi-gpu-programming-models" -> "NVIDIA/MatX"
"NVIDIA/multi-gpu-programming-models" -> "eyalroz/cuda-api-wrappers"
"NVIDIA/multi-gpu-programming-models" -> "olcf/cuda-training-series"
"tarickb/the-geek-in-the-corner" -> "jcxue/RDMA-Tutorial"
"tarickb/the-geek-in-the-corner" -> "efficient/rdma_bench"
"tarickb/the-geek-in-the-corner" -> "linux-rdma/rdma-core"
"tarickb/the-geek-in-the-corner" -> "coolriver/RDMA_Aware_Programming-CN"
"tarickb/the-geek-in-the-corner" -> "zrlio/softiwarp"
"tarickb/the-geek-in-the-corner" -> "linux-rdma/perftest"
"tarickb/the-geek-in-the-corner" -> "thustorage/octopus"
"tarickb/the-geek-in-the-corner" -> "efficient/HERD"
"tarickb/the-geek-in-the-corner" -> "animeshtrivedi/rdma-example"
"tarickb/the-geek-in-the-corner" -> "accelio/accelio"
"tarickb/the-geek-in-the-corner" -> "bobzhuyb/ns3-rdma"
"tarickb/the-geek-in-the-corner" -> "Mellanox/libvma"
"tarickb/the-geek-in-the-corner" -> "openucx/ucx"
"tarickb/the-geek-in-the-corner" -> "SJTU-IPADS/xstore"
"tarickb/the-geek-in-the-corner" -> "clusterfarmem/fastswap"
"Microsoft/Windows-Machine-Learning" -> "Microsoft/onnxruntime"
"harrism/numba_examples" -> "ContinuumIO/gtc2017-numba"
"NVIDIA/cuCollections" -> "rapidsai/rmm"
"NVIDIA/cuCollections" -> "NVIDIA/nvbench"
"NVIDIA/cuCollections" -> "sleeepyjack/warpcore"
"NVIDIA/cuCollections" -> "NVIDIA/cub"
"NVIDIA/cuCollections" -> "rapidsai/raft"
"NVIDIA/cuCollections" -> "owensgroup/SlabHash"
"NVIDIA/cuCollections" -> "NVIDIA/jitify"
"NVIDIA/cuCollections" -> "trxcllnt/rapids-compose"
"NVIDIA/cuCollections" -> "NVIDIA/multi-gpu-programming-models"
"NVIDIA/cuCollections" -> "NVIDIA/libcudacxx"
"NVIDIA/cuCollections" -> "NVIDIA/MatX"
"NVIDIA/cuCollections" -> "NVIDIA/nvcomp"
"daadaada/turingas" -> "cloudcores/CuAssembler"
"daadaada/turingas" -> "daadaada/gas"
"daadaada/turingas" -> "PAA-NCIC/PPoPP2017_artifact"
"daadaada/turingas" -> "NervanaSystems/maxas"
"daadaada/turingas" -> "hyqneuron/asfermi"
"inducer/islpy" -> "periscop/cloog"
"NervanaSystems/maxas" -> "daadaada/turingas"
"NervanaSystems/maxas" -> "cloudcores/CuAssembler"
"NervanaSystems/maxas" -> "NVIDIA/cutlass"
"NervanaSystems/maxas" -> "eBay/maxDNN"
"NervanaSystems/maxas" -> "gpgpu-sim/gpgpu-sim_distribution" ["e"=1]
"NervanaSystems/maxas" -> "flame/how-to-optimize-gemm"
"NervanaSystems/maxas" -> "NervanaSystems/nervanagpu"
"NervanaSystems/maxas" -> "Yinghan-Li/YHs_Sample"
"NervanaSystems/maxas" -> "openai/openai-gemm"
"NervanaSystems/maxas" -> "andravin/wincnn"
"NervanaSystems/maxas" -> "hyqneuron/asfermi"
"NervanaSystems/maxas" -> "NVlabs/cub"
"NervanaSystems/maxas" -> "hfp/libxsmm"
"NervanaSystems/maxas" -> "microsoft/nnfusion"
"NervanaSystems/maxas" -> "google/gemmlowp"
"Yinghan-Li/YHs_Sample" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs"
"Yinghan-Li/YHs_Sample" -> "niuhope/cuda_sgemm"
"Yinghan-Li/YHs_Sample" -> "tpoisonooo/how-to-optimize-gemm"
"Yinghan-Li/YHs_Sample" -> "Liu-xiandong/How_to_optimize_in_GPU"
"Yinghan-Li/YHs_Sample" -> "Cjkkkk/CUDA_gemm"
"Yinghan-Li/YHs_Sample" -> "MegEngine/cutlass"
"Yinghan-Li/YHs_Sample" -> "cloudcores/CuAssembler"
"dingwentao/GPU-lossless-compression" -> "aditya12agd5/cuda_bzip2"
"Erkaman/Awesome-CUDA" -> "Jokeren/Awesome-GPU"
"Erkaman/Awesome-CUDA" -> "cudpp/cudpp"
"Erkaman/Awesome-CUDA" -> "stotko/stdgpu"
"Erkaman/Awesome-CUDA" -> "NVIDIA/jitify"
"Erkaman/Awesome-CUDA" -> "harrism/hemi"
"Erkaman/Awesome-CUDA" -> "hao-lh/awesome-cuda-programming"
"Erkaman/Awesome-CUDA" -> "eyalroz/cuda-api-wrappers"
"NVIDIA/cub" -> "NVIDIA/thrust"
"NVIDIA/cub" -> "NVIDIA/cuCollections"
"NVIDIA/cub" -> "NVIDIA/libcudacxx"
"NVIDIA/cub" -> "NVIDIA/cutlass"
"NVIDIA/cub" -> "NVIDIA/CUDALibrarySamples"
"NVIDIA/cub" -> "NVIDIA/nvbench"
"NVIDIA/cub" -> "rapidsai/rmm"
"NVIDIA/cub" -> "alibaba/BladeDISC"
"NVIDIA/cub" -> "moderngpu/moderngpu"
"NVIDIA/cub" -> "eyalroz/cuda-api-wrappers"
"NVIDIA/cub" -> "NVIDIA/jitify"
"NVIDIA/cub" -> "microsoft/nnfusion"
"NVIDIA/cub" -> "NVIDIA/MatX"
"NVIDIA/cub" -> "cloudcores/CuAssembler"
"NVIDIA/cub" -> "NVIDIA/cuda-samples"
"NVIDIA/jitify" -> "eyalroz/cuda-api-wrappers"
"NVIDIA/jitify" -> "NVIDIA/cuCollections"
"NVIDIA/jitify" -> "rapidsai/rmm"
"NVIDIA/jitify" -> "NVIDIA/nvbench"
"NVIDIA/jitify" -> "NVIDIA/cnmem"
"NVIDIA/jitify" -> "NVIDIA/gdrcopy"
"NVIDIA/jitify" -> "NVIDIA/MatX"
"NVIDIA/jitify" -> "bryancatanzaro/trove"
"NVIDIA/jitify" -> "NVIDIA/multi-gpu-programming-models"
"NVIDIA/jitify" -> "NVIDIA/cub"
"NVIDIA/jitify" -> "NVIDIA/libcudacxx"
"NVIDIA/jitify" -> "NVIDIA/nvcomp"
"NVIDIA/jitify" -> "LLNL/Umpire" ["e"=1]
"NVIDIA/jitify" -> "moderngpu/moderngpu"
"NVIDIA/jitify" -> "NVIDIA/cutlass"
"NVIDIA/nvbench" -> "NVIDIA/cuCollections"
"NVIDIA/nvbench" -> "sleeepyjack/warpcore"
"NVIDIA/nvbench" -> "rapidsai/rmm"
"NVIDIA/nvbench" -> "NVIDIA/jitify"
"NVIDIA/nvbench" -> "NVIDIA/cub"
"NVIDIA/nvbench" -> "NVIDIA/MatX"
"NVIDIA/nvbench" -> "eyalroz/cuda-kat"
"NVIDIA/nvbench" -> "NVIDIA/CUDALibrarySamples"
"NVIDIA/nvbench" -> "benvanwerkhoven/kernel_tuner" ["e"=1]
"NVIDIA/nvbench" -> "NVIDIA/NVTX"
"NVIDIA/nvbench" -> "NVIDIA/TransformerEngine" ["e"=1]
"NVIDIA/nvbench" -> "NVIDIA/stdexec"
"Oneflow-Inc/OneFlow-Benchmark" -> "Oneflow-Inc/DLPerf"
"Oneflow-Inc/libai" -> "Oneflow-Inc/vision"
"Oneflow-Inc/libai" -> "Oneflow-Inc/models"
"Oneflow-Inc/libai" -> "Oneflow-Inc/one-yolov5"
"Oneflow-Inc/libai" -> "alibaba/EasyParallelLibrary"
"Oneflow-Inc/libai" -> "Oneflow-Inc/DLPerf"
"Oneflow-Inc/libai" -> "Oneflow-Inc/oneflow-xrt"
"Oneflow-Inc/libai" -> "MegEngine/MegCC"
"Oneflow-Inc/libai" -> "Oneflow-Inc/oneflow-documentation"
"Oneflow-Inc/libai" -> "microsoft/Megatron-DeepSpeed" ["e"=1]
"Oneflow-Inc/libai" -> "Oneflow-Inc/diffusers"
"Oneflow-Inc/libai" -> "Oneflow-Inc/oneflow_convert"
"Oneflow-Inc/libai" -> "alibaba/BladeDISC"
"alibaba/ai-matrix" -> "mlperf/policies"
"alibaba/heterogeneity-aware-lowering-and-optimization" -> "tensorflow/mlir-hlo"
"alibaba/heterogeneity-aware-lowering-and-optimization" -> "microsoft/nnfusion"
"alibaba/heterogeneity-aware-lowering-and-optimization" -> "cloudcores/CuAssembler"
"alibaba/heterogeneity-aware-lowering-and-optimization" -> "alibaba/BladeDISC"
"alibaba/heterogeneity-aware-lowering-and-optimization" -> "alibaba/ai-matrix"
"alibaba/heterogeneity-aware-lowering-and-optimization" -> "buddy-compiler/buddy-mlir"
"llvm/mlir-npcomp" -> "tensorflow/mlir-hlo"
"llvm/mlir-npcomp" -> "stellaraccident/mlir-npcomp"
"llvm/mlir-npcomp" -> "iml130/mlir-emitc" ["e"=1]
"llvm/mlir-npcomp" -> "google/iree"
"mit-han-lab/inter-operator-scheduler" -> "thu-pacman/PET"
"mit-han-lab/inter-operator-scheduler" -> "UofT-EcoSystem/DietCode"
"mit-han-lab/inter-operator-scheduler" -> "awslabs/raf"
"mit-han-lab/inter-operator-scheduler" -> "microsoft/nnfusion"
"mit-han-lab/inter-operator-scheduler" -> "KnowingNothing/AMOS"
"mit-han-lab/inter-operator-scheduler" -> "jiazhihao/TASO"
"mit-han-lab/inter-operator-scheduler" -> "tlc-pack/relax"
"mit-han-lab/inter-operator-scheduler" -> "awslabs/slapo"
"mit-han-lab/inter-operator-scheduler" -> "KnowingNothing/FlexTensor"
"mit-han-lab/inter-operator-scheduler" -> "KnowingNothing/compiler-and-arch"
"mit-han-lab/inter-operator-scheduler" -> "hidet-org/hidet"
"mit-han-lab/inter-operator-scheduler" -> "cmu-catalyst/collage"
"mit-han-lab/inter-operator-scheduler" -> "roastduck/FreeTensor"
"mit-han-lab/inter-operator-scheduler" -> "microsoft/antares"
"onnx/onnx-mlir" -> "tensorflow/mlir-hlo"
"onnx/onnx-mlir" -> "llvm/torch-mlir"
"onnx/onnx-mlir" -> "google/iree"
"onnx/onnx-mlir" -> "alibaba/BladeDISC"
"onnx/onnx-mlir" -> "buddy-compiler/buddy-mlir"
"onnx/onnx-mlir" -> "microsoft/nnfusion"
"onnx/onnx-mlir" -> "tensorflow/runtime"
"onnx/onnx-mlir" -> "llvm/mlir-npcomp"
"onnx/onnx-mlir" -> "openxla/stablehlo"
"onnx/onnx-mlir" -> "jiazhihao/TASO"
"onnx/onnx-mlir" -> "onnx/optimizer" ["e"=1]
"onnx/onnx-mlir" -> "sophgo/tpu-mlir"
"onnx/onnx-mlir" -> "MegEngine/MegCC"
"onnx/onnx-mlir" -> "iml130/mlir-emitc" ["e"=1]
"onnx/onnx-mlir" -> "iree-org/iree"
"groute/groute" -> "AutomataLab/Tigr"
"depctg/udacity-cs344-colab" -> "nickspell/udacity-IntroToParallelProgramming"
"NVIDIA/nvcomp" -> "NVIDIA/jitify"
"NVIDIA/nvcomp" -> "NVIDIA/cuCollections"
"NVIDIA/nvcomp" -> "rapidsai/rmm"
"NVIDIA/nvcomp" -> "NVIDIA/cub"
"NVIDIA/nvcomp" -> "NVIDIA/gdrcopy"
"NVIDIA/nvcomp" -> "NVIDIA/nvbench"
"NVIDIA/nvcomp" -> "eyalroz/cuda-api-wrappers"
"NVIDIA/nvcomp" -> "eyalroz/cuda-kat"
"NVIDIA/nvcomp" -> "IlyaGrebnov/libsais" ["e"=1]
"NVIDIA/nvcomp" -> "dingwentao/GPU-lossless-compression"
"NVIDIA/nvcomp" -> "NVIDIA/MatX"
"NVIDIA/nvcomp" -> "facebookresearch/dietgpu"
"NVIDIA/nvcomp" -> "jkbonfield/rans_static" ["e"=1]
"NVIDIA/nvcomp" -> "stotko/stdgpu"
"01org/daal" -> "01org/mkl-dnn"
"dlsys-course/dlsys-course.github.io" -> "dlsys-course/assignment1"
"dlsys-course/dlsys-course.github.io" -> "dlsys-course/assignment2-2018"
"Oneflow-Inc/one-yolov5" -> "Oneflow-Inc/oneflow-xrt"
"Oneflow-Inc/one-yolov5" -> "Oneflow-Inc/models"
"Oneflow-Inc/one-yolov5" -> "Oneflow-Inc/vision"
"Oneflow-Inc/one-yolov5" -> "Oneflow-Inc/oneflow_convert"
"Oneflow-Inc/one-yolov5" -> "Oneflow-Inc/libai"
"Oneflow-Inc/one-yolov5" -> "Oneflow-Inc/one-fx"
"Oneflow-Inc/one-yolov5" -> "Oneflow-Inc/oneflow-yolo-doc"
"CoffeeBeforeArch/cuda_programming" -> "CoffeeBeforeArch/cpp_crash_course"
"CoffeeBeforeArch/cuda_programming" -> "CoffeeBeforeArch/parallel_programming"
"CoffeeBeforeArch/cuda_programming" -> "PacktPublishing/Learn-CUDA-Programming"
"CoffeeBeforeArch/cuda_programming" -> "olcf/cuda-training-series"
"CoffeeBeforeArch/cuda_programming" -> "brucefan1983/CUDA-Programming"
"CoffeeBeforeArch/cuda_programming" -> "pwlnk/cuda-neural-network"
"CoffeeBeforeArch/cuda_programming" -> "NVIDIA/cuda-samples"
"CoffeeBeforeArch/cuda_programming" -> "CoffeeBeforeArch/practical_parallelism_in_cpp"
"numactl/numactl" -> "open-mpi/hwloc"
"jbornschein/mpi4py-examples" -> "mpi4py/mpi4py"
"jbornschein/mpi4py-examples" -> "JordiCorbilla/mpi4py-examples"
"jbornschein/mpi4py-examples" -> "marshallward/f90nml" ["e"=1]
"claudebarthels/infinity" -> "jcxue/RDMA-Tutorial"
"claudebarthels/infinity" -> "linux-rdma/perftest"
"claudebarthels/infinity" -> "linzino7/RDMA-example-application"
"claudebarthels/infinity" -> "efficient/rdma_bench"
"NervanaSystems/nervanagpu" -> "NervanaSystems/nervana-lib-gpu-performance-preview"
"NervanaSystems/nervanagpu" -> "bshillingford/autobw.torch" ["e"=1]
"NervanaSystems/nervanagpu" -> "NervanaSystems/maxas"
"NervanaSystems/nervanagpu" -> "tkocisky/oxnn" ["e"=1]
"NervanaSystems/nervanagpu" -> "PAA-NCIC/PPoPP2017_artifact"
"NervanaSystems/nervanagpu" -> "openai/openai-gemm"
"NervanaSystems/nervanagpu" -> "eBay/maxDNN"
"NervanaSystems/nervanagpu" -> "DeepMark/deepmark" ["e"=1]
"springer13/hptt" -> "springer13/tcl"
"springer13/hptt" -> "devinamatthews/tblis"
"springer13/hptt" -> "cyclops-community/ctf"
"vtess/Pond" -> "SlugLab/SlugAllocator"
"AI-performance/embedded-ai.bench" -> "huawei-noah/bolt"
"AI-performance/embedded-ai.bench" -> "deepglint/EasyQuant" ["e"=1]
"AI-performance/embedded-ai.bench" -> "ysh329/embedded-ai.bi-weekly"
"BBuf/tvm_learn" -> "apache/tvm-rfcs"
"StrongSpoon/tvm.schedule" -> "tlc-pack/relax"
"accelio/JXIO" -> "zrlio/disni"
"spcl/pymlir" -> "kumasento/polymer" ["e"=1]
"spcl/pymlir" -> "spcl/mlir-dace" ["e"=1]
"spcl/pymlir" -> "iml130/mlir-emitc" ["e"=1]
"cyclops-community/ctf" -> "devinamatthews/tblis"
"cyclops-community/ctf" -> "yangcal/symtensor"
"elemental/Elemental" -> "ValeevGroup/tiledarray"
"elemental/Elemental" -> "LLNL/Elemental"
"elemental/Elemental" -> "m-a-d-n-e-s-s/madness"
"elemental/Elemental" -> "flame/libflame"
"elemental/Elemental" -> "hfp/libxsmm"
"elemental/Elemental" -> "ParRes/Kernels" ["e"=1]
"elemental/Elemental" -> "solomonik/ctf"
"elemental/Elemental" -> "ddemidov/amgcl" ["e"=1]
"elemental/Elemental" -> "evaleev/libint" ["e"=1]
"elemental/Elemental" -> "petsc/petsc" ["e"=1]
"elemental/Elemental" -> "michael-lehn/ulmBLAS"
"elemental/Elemental" -> "JuliaParallel/Elemental.jl"
"elemental/Elemental" -> "cyclops-community/ctf"
"elemental/Elemental" -> "poulson/Clique"
"elemental/Elemental" -> "flame/blis"
"sjtugjy/enclave-migration" -> "SJTU-IPADS/sgx-migration"
"iree-org/iree" -> "buddy-compiler/buddy-mlir"
"iree-org/iree" -> "llvm/torch-mlir"
"iree-org/iree" -> "tensorflow/mlir-hlo"
"iree-org/iree" -> "onnx/onnx-mlir"
"iree-org/iree" -> "alibaba/BladeDISC"
"iree-org/iree" -> "nod-ai/SHARK"
"iree-org/iree" -> "tlc-pack/relax"
"iree-org/iree" -> "bytedance/byteir"
"iree-org/iree" -> "sophgo/tpu-mlir"
"iree-org/iree" -> "zwang4/awesome-machine-learning-in-compilers"
"iree-org/iree" -> "BBuf/tvm_mlir_learn"
"iree-org/iree" -> "spcl/pymlir"
"iree-org/iree" -> "MegEngine/MegCC"
"iree-org/iree" -> "openxla/stablehlo"
"iree-org/iree" -> "microsoft/nnfusion"
"YuanhaoGong/CurvatureFilter" -> "YuanhaoGong/SideWindowFilter"
"YuanhaoGong/CurvatureFilter" -> "YuanhaoGong/Naturalization"
"YuanhaoGong/CurvatureFilter" -> "YuanhaoGong/WeightedMeanCurvature"
"YuanhaoGong/CurvatureFilter" -> "soundsilence/ImageSmoothing"
"YuanhaoGong/CurvatureFilter" -> "timothybrooks/hdr-plus" ["e"=1]
"tvmai/meetup-slides" -> "mli/d2l-tvm"
"tvmai/meetup-slides" -> "tqchen/ffi-navigator"
"tinyMLx/colabs" -> "tinyMLx/courseware"
"tinyMLx/colabs" -> "tinyMLx/arduino-library"
"tinyMLx/colabs" -> "tinyMLx/appendix"
"tinyMLx/colabs" -> "tinyMLx/open-speech-recording"
"tinyMLx/colabs" -> "tinyMLx/tinyMLx.github.io"
"microsoft/ELL" -> "microsoft/EdgeML"
"microsoft/ELL" -> "uTensor/uTensor"
"microsoft/ELL" -> "majianjia/nnom" ["e"=1]
"microsoft/ELL" -> "emlearn/emlearn" ["e"=1]
"chrischoy/pytorch-custom-cuda-tutorial" -> "chrischoy/MakePytorchPlusPlus"
"chrischoy/pytorch-custom-cuda-tutorial" -> "pytorch/extension-ffi"
"chrischoy/pytorch-custom-cuda-tutorial" -> "sniklaus/pytorch-extension"
"chrischoy/pytorch-custom-cuda-tutorial" -> "szagoruyko/pyinn"
"chrischoy/pytorch-custom-cuda-tutorial" -> "pytorch/extension-cpp"
"chrischoy/pytorch-custom-cuda-tutorial" -> "ignacio-rocco/detectorch" ["e"=1]
"chrischoy/pytorch-custom-cuda-tutorial" -> "oeway/pytorch-deform-conv" ["e"=1]
"NVIDIA/MatX" -> "NVIDIA/nvbench"
"NVIDIA/MatX" -> "NVIDIA/jitify"
"NVIDIA/MatX" -> "NVIDIA/cub"
"NVIDIA/MatX" -> "NVIDIA/cuCollections"
"NVIDIA/MatX" -> "eyalroz/cuda-api-wrappers"
"NVIDIA/MatX" -> "NVIDIA/libcudacxx"
"NVIDIA/MatX" -> "stotko/stdgpu"
"NVIDIA/MatX" -> "NVIDIA/thrust"
"NVIDIA/MatX" -> "NVIDIA/multi-gpu-programming-models"
"NVIDIA/MatX" -> "NVIDIA/nvcomp"
"NVIDIA/MatX" -> "NVIDIA/stdexec"
"NVIDIA/MatX" -> "NVIDIA/cutlass"
"NVIDIA/MatX" -> "NVIDIA/warp" ["e"=1]
"NVIDIA/MatX" -> "NVIDIA/AMGX" ["e"=1]
"NVIDIA/MatX" -> "rapidsai/rmm"
"thu-pacman/PET" -> "roastduck/FreeTensor"
"thu-pacman/PET" -> "uwsampl/SparseTIR"
"thu-pacman/PET" -> "UofT-EcoSystem/DietCode"
"flame/libflame" -> "flame/blis"
"canonizer/halloc" -> "clyfish/gcn-scrypt"
"xuqiantong/CUDA-Winograd" -> "md2z34/winograd_gpu"
"xuqiantong/CUDA-Winograd" -> "KnowingNothing/FlexTensor"
"xuqiantong/CUDA-Winograd" -> "xingyul/sparse-winograd-cnn"
"xuqiantong/CUDA-Winograd" -> "andravin/wincnn"
"fujitsu/xbyak_aarch64" -> "fujitsu/xbyak_translator_aarch64"
"fujitsu/xbyak_aarch64" -> "fujitsu/dnnl_aarch64"
"mlc-ai/notebooks" -> "mlc-ai/mlc-zh"
"mlc-ai/notebooks" -> "tlc-pack/relax"
"mlc-ai/notebooks" -> "mlc-ai/mlc-en"
"mlc-ai/notebooks" -> "tlc-pack/tenset"
"mlc-ai/notebooks" -> "zhaiyi000/tlp"
"prigoyal/pytorch_memonger" -> "csrhddlam/pytorch-checkpoint"
"prigoyal/pytorch_memonger" -> "cybertronai/gradient-checkpointing"
"tlc-pack/relax" -> "apache/tvm-rfcs"
"tlc-pack/relax" -> "StrongSpoon/tvm.schedule"
"tlc-pack/relax" -> "hidet-org/hidet"
"tlc-pack/relax" -> "mlc-ai/notebooks"
"tlc-pack/relax" -> "KnowingNothing/AMOS"
"tlc-pack/relax" -> "tlc-pack/TLCBench"
"tlc-pack/relax" -> "awslabs/raf"
"tlc-pack/relax" -> "tqchen/ffi-navigator"
"tlc-pack/relax" -> "UofT-EcoSystem/DietCode"
"tlc-pack/relax" -> "roastduck/FreeTensor"
"tlc-pack/relax" -> "Archermmt/tvm_walk_through"
"tlc-pack/relax" -> "mit-han-lab/inter-operator-scheduler"
"tlc-pack/relax" -> "thu-pacman/PET"
"tlc-pack/relax" -> "uwsampl/relay-aot"
"tlc-pack/relax" -> "uwsampl/SparseTIR"
"apache/incubator-crail" -> "zrlio/disni"
"apache/incubator-crail" -> "zrlio/crail"
"apache/incubator-crail" -> "stanford-mast/pocket" ["e"=1]
"apache/incubator-crail" -> "Mellanox/SparkRDMA"
"apache/incubator-crail" -> "zrlio/albis"
"apache/incubator-crail" -> "zrlio/crail-spark-io"
"xingyul/sparse-winograd-cnn" -> "dorthyluu/cs194-winograd"
"xingyul/sparse-winograd-cnn" -> "andravin/wincnn"
"silt/silt" -> "vrv/FAWN-KV"
"silt/silt" -> "opennvm/nvmkv"
"silt/silt" -> "efficient/mica"
"ai-techsystems/deepC" -> "alrevuelta/cONNXr" ["e"=1]
"ai-techsystems/deepC" -> "cpetig/tflite_micro_compiler"
"ai-techsystems/deepC" -> "majianjia/nnom" ["e"=1]
"ai-techsystems/deepC" -> "kraiskil/onnx2c" ["e"=1]
"espressif/esp-nn" -> "espressif/tflite-micro-esp-examples"
"ofiwg/libfabric" -> "ofiwg/fabtests"
"ofiwg/libfabric" -> "openucx/ucx"
"ofiwg/libfabric" -> "ofiwg/ofi-guide"
"ofiwg/libfabric" -> "mercury-hpc/mercury" ["e"=1]
"ofiwg/libfabric" -> "linux-rdma/rdma-core"
"ofiwg/libfabric" -> "aws/aws-ofi-nccl"
"ofiwg/libfabric" -> "intel/mpi-benchmarks"
"ofiwg/libfabric" -> "efficient/rdma_bench"
"ofiwg/libfabric" -> "daos-stack/daos" ["e"=1]
"ofiwg/libfabric" -> "gpudirect/libgdsync"
"ofiwg/libfabric" -> "daos-stack/cart" ["e"=1]
"ofiwg/libfabric" -> "pmodels/argobots" ["e"=1]
"ofiwg/libfabric" -> "tarickb/the-geek-in-the-corner"
"ofiwg/libfabric" -> "open-mpi/hwloc"
"ofiwg/libfabric" -> "open-mpi/ompi"
"Jokeren/Awesome-GPU" -> "cloudcores/CuAssembler"
"Jokeren/Awesome-GPU" -> "NVlabs/NVBit" ["e"=1]
"Jokeren/Awesome-GPU" -> "accel-sim/accel-sim-framework" ["e"=1]
"Jokeren/Awesome-GPU" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs"
"Jokeren/Awesome-GPU" -> "Erkaman/Awesome-CUDA"
"Jokeren/Awesome-GPU" -> "daadaada/turingas"
"AutomataLab/Subway" -> "AutomataLab/Tigr"
"AutomataLab/Tigr" -> "AutomataLab/Subway"
"Oneflow-Inc/models" -> "Oneflow-Inc/vision"
"Oneflow-Inc/models" -> "Oneflow-Inc/oneflow-lite"
"Oneflow-Inc/models" -> "Oneflow-Inc/oneflow-xrt"
"Oneflow-Inc/models" -> "Oneflow-Inc/oneflow-documentation"
"MegEngine/MegPeak" -> "MegEngine/MegCC"
"MegEngine/MegPeak" -> "MegEngine/mperf"
"rapidsai/cucim" -> "rapidsai/kvikio"
"rapidsai/cucim" -> "ome/ngff" ["e"=1]
"Cjkkkk/CUDA_gemm" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs"
"Cjkkkk/CUDA_gemm" -> "niuhope/cuda_sgemm"
"Cjkkkk/CUDA_gemm" -> "tpoisonooo/how-to-optimize-gemm"
"Cjkkkk/CUDA_gemm" -> "Liu-xiandong/How_to_optimize_in_GPU"
"Cjkkkk/CUDA_gemm" -> "Yinghan-Li/YHs_Sample"
"Cjkkkk/CUDA_gemm" -> "BBuf/how-to-optim-algorithm-in-cuda"
"openxla/community" -> "openxla/stablehlo"
"AIFM-sys/AIFM" -> "clusterfarmem/fastswap"
"AIFM-sys/AIFM" -> "uclasystem/MemLiner"
"AIFM-sys/AIFM" -> "uclasystem/Semeru"
"WukLab/Hotpot" -> "WukLab/LITE"
"pmem/rpma" -> "thustorage/octopus"
"pmem/rpma" -> "pmem/pmdk-examples"
"tqchen/ffi-navigator" -> "tlc-pack/relax"
"tqchen/ffi-navigator" -> "awslabs/raf"
"tqchen/ffi-navigator" -> "mlc-ai/notebooks"
"tqchen/ffi-navigator" -> "tvmai/meetup-slides"
"tqchen/ffi-navigator" -> "apache/tvm-rfcs"
"uclasystem/Semeru" -> "uclasystem/MemLiner"
"uclasystem/Semeru" -> "UCLA-SEAL/Semeru"
"zrlio/darpc" -> "zrlio/disni"
"lift-project/lift" -> "Meinersbur/ppcg"
"lift-project/lift" -> "elevate-lang/elevate"
"NEDJIMAbelgacem/Graphics_Engine" -> "NEDJIMAbelgacem/graphs_algorithms"
"OpenMPDK/SMDK" -> "vtess/Pond"
"OpenMPDK/SMDK" -> "thustorage/octopus"
"EEESlab/mobilenet_v1_stm32_cmsis_nn" -> "EEESlab/CMSIS_NN-INTQ"
"facebookresearch/adversarial_image_defenses" -> "rwightman/pytorch-nips2017-attack-example" ["e"=1]
"OpenACCUserGroup/openacc-users-group" -> "OpenACCUserGroup/openacc_concept_strategies_book"
"nosferalatu/SimpleGPUHashTable" -> "owensgroup/SlabHash"
"nosferalatu/SimpleGPUHashTable" -> "cudpp/cudpp"
"rapidsai/rmm" -> "NVIDIA/cuCollections"
"rapidsai/rmm" -> "NVIDIA/cnmem"
"rapidsai/rmm" -> "rapidsai/raft"
"rapidsai/rmm" -> "NVIDIA/nvbench"
"rapidsai/rmm" -> "NVIDIA/jitify"
"rapidsai/rmm" -> "trxcllnt/rapids-compose"
"rapidsai/rmm" -> "NVIDIA/cub"
"rapidsai/rmm" -> "NVIDIA/NVTX"
"rapidsai/rmm" -> "pytorch/tensorpipe"
"rapidsai/rmm" -> "sleeepyjack/warpcore"
"rapidsai/rmm" -> "NVIDIA/nvcomp"
"rapidsai/rmm" -> "rapidsai/ucx-py"
"rapidsai/rmm" -> "trxcllnt/ubuntu-setup"
"rapidsai/rmm" -> "gunrock/gunrock"
"rapidsai/rmm" -> "rapidsai/cuspatial" ["e"=1]
"nets-cs-pub-ro/NDP" -> "kaist-ina/ns2-xpass"
"nets-cs-pub-ro/NDP" -> "PlatformLab/HomaSimulation"
"bytedance/matxscript" -> "bytedance/byteir"
"bytedance/matxscript" -> "mlc-ai/notebooks"
"bytedance/matxscript" -> "hidet-org/hidet"
"bytedance/matxscript" -> "bytedance/ByteTransformer"
"bytedance/matxscript" -> "octoml/octoml-profile"
"Mellanox/SparkRDMA" -> "zrlio/disni"
"Mellanox/SparkRDMA" -> "apache/incubator-crail"
"Mellanox/SparkRDMA" -> "Intel-bigdata/OAP" ["e"=1]
"Mellanox/SparkRDMA" -> "efficient/rdma_bench"
"Mellanox/SparkRDMA" -> "WukLab/LITE"
"Mellanox/SparkRDMA" -> "Intel-bigdata/spark-adaptive" ["e"=1]
"caffe2/models" -> "caffe2/tutorials"
"caffe2/models" -> "leonardvandriel/caffe2_models"
"nv-legate/legate.core" -> "nv-legate/legate.pandas"
"nv-legate/legate.core" -> "nv-legate/cunumeric"
"nv-legate/legate.core" -> "nv-legate/legate.numpy"
"trxcllnt/ubuntu-setup" -> "trxcllnt/rapids-compose"
"pg-strom/devel" -> "kaigai/pg_strom"
"pg-strom/devel" -> "antonmks/Alenka"
"pg-strom/devel" -> "apache/incubator-madlib" ["e"=1]
"tinyMLx/courseware" -> "tinyMLx/colabs"
"tinyMLx/courseware" -> "tinyMLx/appendix"
"tinyMLx/courseware" -> "tinyMLx/arduino-library"
"openppl-public/CuAssembler" -> "openppl-public/ppl.common"
"openppl-public/hpcc" -> "openppl-public/ppl.common"
"devinamatthews/tblis" -> "springer13/tcl"
"devinamatthews/tblis" -> "cyclops-community/ctf"
"devinamatthews/tblis" -> "springer13/hptt"
"springer13/tcl" -> "devinamatthews/tblis"
"springer13/tcl" -> "springer13/hptt"
"YouQixiaowu/CUDA-Programming-with-Python" -> "MethodJiao/VulkanDemo"
"YouQixiaowu/CUDA-Programming-with-Python" -> "brucefan1983/CUDA-Programming"
"YouQixiaowu/CUDA-Programming-with-Python" -> "MethodJiao/GoSample"
"YouQixiaowu/CUDA-Programming-with-Python" -> "MethodJiao/OCCGraphicDemo"
"YouQixiaowu/CUDA-Programming-with-Python" -> "akingse/desktop_vscode"
"xuhuisheng/rocm-gfx803" -> "xuhuisheng/rocm-build"
"xuhuisheng/rocm-gfx803" -> "boriswinner/RX580-rocM-tensorflow-ubuntu20.4-guide"
"ARM-software/ML-zoo" -> "mlcommons/tiny"
"ARM-software/ML-zoo" -> "ARM-software/ML-examples"
"ARM-software/ML-zoo" -> "cpetig/tflite_micro_compiler"
"bobzhuyb/ns3-rdma" -> "alibaba-edu/High-Precision-Congestion-Control"
"bobzhuyb/ns3-rdma" -> "snowzjx/ns3-ecn-sharp"
"bobzhuyb/ns3-rdma" -> "efficient/rdma_bench"
"bobzhuyb/ns3-rdma" -> "nets-cs-pub-ro/NDP"
"bobzhuyb/ns3-rdma" -> "redn-io/RedN"
"dlsys-course/tinyflow" -> "dlsys-course/assignment1"
"shenango/shenango" -> "shenango/caladan"
"apache/tvm-rfcs" -> "tlc-pack/relax"
"apache/tvm-rfcs" -> "KnowingNothing/AMOS"
"SoftRoCE/librxe-dev" -> "SoftRoCE/rxe-dev"
"SoftRoCE/rxe-dev" -> "SoftRoCE/librxe-dev"
"SoftRoCE/rxe-dev" -> "zrlio/softiwarp"
"SoftRoCE/rxe-dev" -> "efficient/rdma_bench"
"SoftRoCE/rxe-dev" -> "WukLab/LITE"
"SoftRoCE/rxe-dev" -> "efficient/fasst"
"uclasystem/dorylus" -> "uclasystem/bamboo"
"uclasystem/dorylus" -> "uclasystem/MemLiner"
"uclasystem/dorylus" -> "uclasystem/Semeru"
"CLRX/CLRX-mirror" -> "SunsetQuest/Asm4GCN"
"CLRX/CLRX-mirror" -> "balidani/gcnasm"
"Oneflow-Inc/oneflow-xrt" -> "Oneflow-Inc/oneflow-lite"
"openai/openai-gemm" -> "ptillet/isaac"
"openai/openai-gemm" -> "NervanaSystems/maxas"
"openai/openai-gemm" -> "NervanaSystems/nervanagpu"
"openai/openai-gemm" -> "eBay/maxDNN"
"openai/openai-gemm" -> "Maratyszcza/NNPACK"
"openai/openai-gemm" -> "hfp/libxsmm"
"openai/openai-gemm" -> "PAA-NCIC/PPoPP2017_artifact"
"openai/openai-gemm" -> "baidu-research/DeepBench"
"openai/openai-gemm" -> "google/gemmlowp"
"openai/openai-gemm" -> "naibaf7/libdnn" ["e"=1]
"openai/openai-gemm" -> "IntelLabs/SkimCaffe" ["e"=1]
"openai/openai-gemm" -> "andravin/wincnn"
"openai/openai-gemm" -> "baidu-research/persistent-rnn" ["e"=1]
"openxla/iree" -> "openxla/stablehlo"
"openxla/iree" -> "openxla/xla"
"PAA-NCIC/PPoPP2017_artifact" -> "hyqneuron/asfermi"
"awslabs/raf" -> "awslabs/ratex"
"awslabs/raf" -> "awslabs/slapo"
"awslabs/raf" -> "awslabs/lorien"
"awslabs/raf" -> "UofT-EcoSystem/DietCode"
"awslabs/raf" -> "parasailteam/coconet"
"awslabs/raf" -> "hidet-org/hidet"
"awslabs/raf" -> "cmu-catalyst/collage"
"awslabs/raf" -> "KnowingNothing/AMOS"
"awslabs/raf" -> "mit-han-lab/inter-operator-scheduler"
"openxla/stablehlo" -> "openxla/community"
"openxla/stablehlo" -> "openxla/iree"
"openxla/stablehlo" -> "tensorflow/mlir-hlo"
"openxla/stablehlo" -> "openxla/xla"
"openxla/stablehlo" -> "onnx/onnx-mlir"
"rmfarber/ParallelProgrammingWithOpenACC" -> "OpenACCUserGroup/openacc_concept_strategies_book"
"hidet-org/hidet" -> "UofT-EcoSystem/DietCode"
"hidet-org/hidet" -> "awslabs/raf"
"hidet-org/hidet" -> "tlc-pack/relax"
"hidet-org/hidet" -> "roastduck/FreeTensor"
"hidet-org/hidet" -> "KnowingNothing/compiler-and-arch"
"cloudcores/CuAssembler" -> "daadaada/turingas"
"cloudcores/CuAssembler" -> "daadaada/gas"
"cloudcores/CuAssembler" -> "NervanaSystems/maxas"
"cloudcores/CuAssembler" -> "PAA-NCIC/PPoPP2017_artifact"
"cloudcores/CuAssembler" -> "yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs"
"cloudcores/CuAssembler" -> "NVlabs/NVBit" ["e"=1]
"cloudcores/CuAssembler" -> "microsoft/nnfusion"
"cloudcores/CuAssembler" -> "Yinghan-Li/YHs_Sample"
"cloudcores/CuAssembler" -> "hyqneuron/asfermi"
"cloudcores/CuAssembler" -> "Jokeren/Awesome-GPU"
"cloudcores/CuAssembler" -> "openppl-public/CuAssembler"
"cloudcores/CuAssembler" -> "xiuxiazhang/KeplerAs"
"tlc-pack/tenset" -> "awslabs/lorien"
"tlc-pack/tenset" -> "UofT-EcoSystem/DietCode"
"KnowingNothing/AMOS" -> "UofT-EcoSystem/DietCode"
"fujitsu/dnnl_aarch64" -> "fujitsu/xbyak_translator_aarch64"
"fujitsu/dnnl_aarch64" -> "fujitsu/xbyak_aarch64"
"JianlongZhong/Medusa" -> "farkhor/CuSha"
"sniklaus/pytorch-extension" -> "szagoruyko/pyinn"
"szagoruyko/pyinn" -> "sniklaus/pytorch-extension"
"szagoruyko/pyinn" -> "JianGoForIt/YellowFin_Pytorch" ["e"=1]
"szagoruyko/pyinn" -> "chrischoy/pytorch-custom-cuda-tutorial"
"szagoruyko/pyinn" -> "pytorch/extension-cpp"
"szagoruyko/pyinn" -> "ycszen/pytorch-ss" ["e"=1]
"ARM-software/android-nn-driver" -> "ARM-software/armnn"
"ARM-software/android-nn-driver" -> "ARM-software/armnn-mlperf"
"michael-lehn/ulmBLAS" -> "michael-lehn/ulmBLAS-core"
"Meinersbur/ppcg" -> "Meinersbur/pet"
"Meinersbur/ppcg" -> "Meinersbur/isl"
"Meinersbur/ppcg" -> "bondhugula/pluto"
"Meinersbur/ppcg" -> "inducer/islpy"
"Meinersbur/ppcg" -> "wsmoses/Polygeist" ["e"=1]
"roastduck/FreeTensor" -> "thu-pacman/PET"
"roastduck/FreeTensor" -> "UofT-EcoSystem/DietCode"
"roastduck/FreeTensor" -> "uwsampl/SparseTIR"
"balidani/gcnasm" -> "SunsetQuest/Asm4GCN"
"ContinuumIO/gtc2018-numba" -> "ContinuumIO/gtc2019-numba"
"SymbioticLab/Infiniswap" -> "clusterfarmem/fastswap"
"SymbioticLab/Infiniswap" -> "uclasystem/Semeru"
"PlatformLab/Homa" -> "PlatformLab/HomaModule"
"PlatformLab/Homa" -> "PlatformLab/HomaSimulation"
"CoffeeBeforeArch/cpp_crash_course" -> "CoffeeBeforeArch/python3_crash_course"
"CoffeeBeforeArch/cpp_crash_course" -> "CoffeeBeforeArch/cpp_20_samples"
"tinyMLx/appendix" -> "tinyMLx/colabs"
"uwplse/tensat" -> "gussmith23/glenside"
"PlatformLab/HomaSimulation" -> "kaist-ina/ns2-xpass"
"redn-io/RedN" -> "WukLab/pDPM"
"redn-io/RedN" -> "bytedance/Collie"
"redn-io/RedN" -> "host-bench/husky"
"vmware-labs/node-replicated-kernel" -> "vmware/node-replication"
"zrlio/disni" -> "zrlio/darpc"
"zrlio/disni" -> "Mellanox/SparkRDMA"
"zrlio/disni" -> "accelio/JXIO"
"zrlio/disni" -> "apache/incubator-crail"
"zrlio/disni" -> "zrlio/softiwarp"
"zrlio/disni" -> "zrlio/crail"
"zrlio/disni" -> "zrlio/jNVMf"
"zrlio/disni" -> "zrlio/urdma"
"zrlio/disni" -> "Mellanox/R4H"
"zrlio/softiwarp" -> "zrlio/urdma"
"zrlio/softiwarp" -> "SoftRoCE/rxe-dev"
"zrlio/softiwarp" -> "zrlio/disni"
"zrlio/softiwarp" -> "SoftRoCE/librxe-dev"
"zrlio/softiwarp" -> "zrlio/darpc"
"SJTU-IPADS/xstore" -> "SJTU-IPADS/krcore-artifacts"
"SJTU-IPADS/xstore" -> "minghust/ford"
"SJTU-IPADS/xstore" -> "Pfzuo/Path-Hashing" ["e"=1]
"Oneflow-Inc/vision" -> "Oneflow-Inc/models"
"Oneflow-Inc/vision" -> "Oneflow-Inc/oneflow-xrt"
"SJTU-IPADS/sgx-migration" -> "noccframework/nocc"
"sleeepyjack/warpcore" -> "NVIDIA/cuCollections"
"zrlio/crail" -> "zrlio/spark-io"
"hyqneuron/asfermi" -> "xiuxiazhang/KeplerAs"
"hyqneuron/asfermi" -> "PAA-NCIC/PPoPP2017_artifact"
"bhSPARSE/Benchmark_SpMV_using_CSR5" -> "bhSPARSE/Benchmark_SpGEMM_using_CSR"
"bhSPARSE/Benchmark_SpMV_using_CSR5" -> "bhSPARSE/Benchmark_SpMV_using_CSR"
"uwsampa/grappa" -> "WukLab/LITE"
"uwsampa/grappa" -> "ooibc88/gam"
"minghust/ford" -> "WukLab/pDPM"
"WukLab/LITE" -> "WukLab/Hotpot"
"WukLab/LITE" -> "efficient/fasst"
"WukLab/LITE" -> "efficient/HERD"
"WukLab/LITE" -> "efficient/rdma_bench"
"WukLab/LITE" -> "thustorage/octopus"
"ConnollyLeon/awesome-Auto-Parallelism" -> "Shenggan/awesome-distributed-ml"
"ConnollyLeon/awesome-Auto-Parallelism" -> "HPDL-Group/Merak"
"animeshtrivedi/rdma-example" -> "animeshtrivedi/blog"
"animeshtrivedi/rdma-example" -> "rhiswell/rdma-tutorial"
"nv-legate/legate.numpy" -> "nv-legate/legate.pandas"
"nv-legate/legate.numpy" -> "nv-legate/legate.core"
"ChrisCummins/paper-end2end-dl" -> "ChrisCummins/clgen"
"dlsys-course/assignment2-2018" -> "dlsys-course/assignment1"
"clusterfarmem/fastswap" -> "clusterfarmem/cfm"
"clusterfarmem/fastswap" -> "SymbioticLab/Infiniswap"
"clusterfarmem/fastswap" -> "AIFM-sys/AIFM"
"clusterfarmem/fastswap" -> "project-kona/asplos21-ae"
"WukLab/pDPM" -> "utsaslab/dinomo"
"WukLab/pDPM" -> "minghust/ford"
"UofT-EcoSystem/DietCode" -> "KnowingNothing/AMOS"
"UofT-EcoSystem/DietCode" -> "tlc-pack/tenset"
"efficient/HERD" -> "efficient/fasst"
"efficient/HERD" -> "efficient/rdma_bench"
"efficient/HERD" -> "WukLab/LITE"
"llvm/clangir" -> "facebookincubator/clangir"
"kaigai/nvme-kmod" -> "pg-strom/nvme-strom"
"zrlio/urdma" -> "zrlio/softiwarp"
"fujitsu/xbyak_translator_aarch64" -> "fujitsu/dnnl_aarch64"
"fujitsu/xbyak_translator_aarch64" -> "fujitsu/xbyak_aarch64"
"awslabs/slapo" -> "awslabs/raf"
"awslabs/slapo" -> "uwsampl/sparsetir"
"trxcllnt/rapids-compose" -> "trxcllnt/ubuntu-setup"
"ofiwg/ofi-guide" -> "ofiwg/fabtests"
"uclasystem/MemLiner" -> "uclasystem/Mako"
"mpi-forum/mpi-issues" -> "mpiwg-tools/tools-issues"
"awslabs/lorien" -> "tlc-pack/tenset"
"eBay/maxDNN" -> "hyqneuron/asfermi"
"eBay/maxDNN" -> "NervanaSystems/maxas"
"opennvm/nvmkv" -> "opennvm/nvm-primitives"
"opennvm/nvmkv" -> "opennvm/nvm-fast-swap"
"tinyMLx/arduino-library" -> "tinyMLx/open-speech-recording"
"caicloud/tensorflow-demo" -> "caicloud/taas-examples"
"SunsetQuest/Asm4GCN" -> "balidani/gcnasm"
"SunsetQuest/Asm4GCN" -> "clyfish/gcn-scrypt"
"opennvm/nvm-fast-swap" -> "opennvm/nvm-primitives"
"opennvm/nvm-fast-swap" -> "opennvm/nvm-fast-swap-benchmarking-tool"
"opennvm/nvm-primitives" -> "opennvm/nvm-fast-swap"
"nv-legate/legate.pandas" -> "nv-legate/legate.numpy"
"nv-legate/legate.pandas" -> "nv-legate/legate.core"
"ChrisCummins/phd" ["l"="27.566,35.712"]
"ChrisCummins/paper-end2end-dl" ["l"="27.55,35.704"]
"spcl/ncc" ["l"="27.585,35.683"]
"plaidml/plaidml" ["l"="27.583,35.499"]
"apple/tensorflow_macos" ["l"="23.402,4.667"]
"dmlc/tvm" ["l"="27.643,35.424"]
"NervanaSystems/ngraph" ["l"="27.635,35.455"]
"RadeonOpenCompute/ROCm" ["l"="26.545,35.399"]
"hughperkins/tf-coriander" ["l"="26.63,35.421"]
"facebookresearch/TensorComprehensions" ["l"="27.712,35.445"]
"pytorch/glow" ["l"="27.634,35.477"]
"uber/horovod" ["l"="34.123,35.271"]
"google/iree" ["l"="27.677,35.528"]
"halide/Halide" ["l"="27.667,35.447"]
"onnx/onnx" ["l"="34.214,35.502"]
"tensorflow/mlir" ["l"="27.651,35.492"]
"jhfjhfj1/autokeras" ["l"="25.619,33.813"]
"apple/coremltools" ["l"="-48.71,5.355"]
"ROCmSoftwarePlatform/tensorflow-upstream" ["l"="26.589,35.383"]
"IBM/tensorflow-large-model-support" ["l"="27.736,35.775"]
"IBM/pytorch-large-model-support" ["l"="27.729,35.822"]
"IBM/powerai" ["l"="27.746,35.807"]
"espressif/tflite-micro-esp-examples" ["l"="27.282,35.557"]
"espressif/esp-nn" ["l"="27.253,35.546"]
"tanakamasayuki/Arduino_TensorFlowLite_ESP32" ["l"="27.241,35.564"]
"atomic14/tensorflow-lite-esp32" ["l"="-35.693,39.546"]
"tensorflow/tflite-micro" ["l"="27.366,35.569"]
"espressif/esp-dl" ["l"="-35.741,39.673"]
"enfiskutensykkel/ssd-gpu-dma" ["l"="27.963,35.21"]
"NVIDIA/gds-nvidia-fs" ["l"="27.966,35.147"]
"kaigai/nvme-kmod" ["l"="27.951,35.166"]
"NVIDIA/gdrcopy" ["l"="27.981,35.362"]
"nvmedirect/nvmedirect" ["l"="-17.228,-9.264"]
"NVIDIA/nccl" ["l"="27.872,35.378"]
"NVIDIA/nccl-tests" ["l"="27.894,35.397"]
"facebookincubator/gloo" ["l"="27.84,35.376"]
"NVIDIA/cutlass" ["l"="27.805,35.454"]
"bytedance/byteps" ["l"="22.578,37.111"]
"NVlabs/cub" ["l"="27.963,35.44"]
"open-mpi/ompi" ["l"="27.969,35.3"]
"baidu-research/baidu-allreduce" ["l"="27.84,35.346"]
"baidu-research/DeepBench" ["l"="27.749,35.345"]
"dmlc/ps-lite" ["l"="26.832,33.933"]
"NVIDIA/DALI" ["l"="34.321,35.609"]
"NVIDIA/Megatron-LM" ["l"="27.533,31.04"]
"facebookresearch/fairscale" ["l"="27.651,31.057"]
"NVIDIA/FasterTransformer" ["l"="27.628,31.069"]
"tensorflow/tflite-micro-arduino-examples" ["l"="27.308,35.59"]
"gigwegbe/tinyml-papers-and-projects" ["l"="27.342,35.584"]
"mlcommons/tiny" ["l"="27.401,35.577"]
"majianjia/nnom" ["l"="2.424,39.22"]
"mit-han-lab/tinyml" ["l"="27.381,35.587"]
"uTensor/uTensor" ["l"="27.376,35.539"]
"mit-han-lab/mcunet" ["l"="27.405,35.604"]
"mit-han-lab/tinyengine" ["l"="27.455,35.589"]
"ARM-software/ML-zoo" ["l"="27.408,35.559"]
"cpetig/tflite_micro_compiler" ["l"="27.377,35.555"]
"raspberrypi/pico-tflmicro" ["l"="-35.028,41.764"]
"ARM-software/ML-KWS-for-MCU" ["l"="2.649,39.735"]
"eloquentarduino/EloquentTinyML" ["l"="27.282,35.587"]
"ARM-software/ML-examples" ["l"="27.427,35.518"]
"udacity/cs344" ["l"="27.971,35.395"]
"depctg/udacity-cs344-colab" ["l"="28.049,35.336"]
"ibebrett/CUDA-CS344" ["l"="28.031,35.365"]
"thrust/thrust" ["l"="27.987,35.418"]
"moderngpu/moderngpu" ["l"="27.963,35.458"]
"ArchaeaSoftware/cudahandbook" ["l"="27.944,35.429"]
"NVIDIA/cuda-samples" ["l"="27.904,35.43"]
"NVIDIA-developer-blog/code-samples" ["l"="27.92,35.441"]
"parallel-forall/code-samples" ["l"="28.001,35.436"]
"akrizhevsky/cuda-convnet2" ["l"="26.892,34.115"]
"PacktPublishing/Learn-CUDA-Programming" ["l"="27.916,35.407"]
"tbennun/cudnn-training" ["l"="28.105,35.361"]
"chiphuyen/tf-stanford-tutorials" ["l"="23.364,31.06"]
"PacktPublishing/Hands-On-GPU-Accelerated-Computer-Vision-with-OpenCV-and-CUDA" ["l"="27.9,35.361"]
"LitLeo/OpenCUDA" ["l"="27.922,35.324"]
"Syencil/tensorRT" ["l"="34.661,35.574"]
"Tony-Tan/CUDA_Freshman" ["l"="27.853,35.446"]
"brucefan1983/CUDA-Programming" ["l"="27.926,35.392"]
"BBuf/Image-processing-algorithm" ["l"="36.076,33.45"]
"PacktPublishing/Hands-On-GPU-Programming-with-Python-and-CUDA" ["l"="27.932,35.342"]
"PacktPublishing/Learn-OpenCV-4-By-Building-Projects-Second-Edition" ["l"="30.13,36.603"]
"LitLeo/TensorRT_Tutorial" ["l"="34.628,35.55"]
"msnh2012/Msnhnet" ["l"="27.766,35.384"]
"linghu8812/tensorrt_inference" ["l"="34.654,35.556"]
"keroro824/HashingDeepLearning" ["l"="27.639,35.561"]
"RUSH-LAB/SLIDE" ["l"="27.568,35.612"]
"IntelLabs/SLIDE_opt_ia" ["l"="27.586,35.6"]
"google/neural-tangents" ["l"="23.427,33.808"]
"tensorflow/mesh" ["l"="27.71,31.078"]
"RUSH-LAB/Flash" ["l"="27.855,35.611"]
"openai/blocksparse" ["l"="27.736,35.425"]
"flexflow/FlexFlow" ["l"="27.761,35.512"]
"jiazhihao/TASO" ["l"="27.694,35.526"]
"gpgpu-sim/gpgpu-sim_distribution" ["l"="-9.486,46.559"]
"openai/triton" ["l"="27.636,30.995"]
"cybertronai/gradient-checkpointing" ["l"="27.729,35.655"]
"tomgoldstein/loss-landscape" ["l"="34.319,35.741"]
"neuralmagic/deepsparse" ["l"="27.696,31.027"]
"nv-legate/cunumeric" ["l"="28.133,35.575"]
"nv-legate/legate.core" ["l"="28.171,35.6"]
"NVIDIA/cuda-python" ["l"="28.07,35.546"]
"nv-legate/legate.pandas" ["l"="28.185,35.594"]
"StanfordLegion/legion" ["l"="21.662,34.532"]
"FZJ-JSC/tutorial-multi-gpu" ["l"="28.059,35.528"]
"BBuf/ArmNeonOptimization" ["l"="27.754,35.36"]
"tpoisonooo/how-to-optimize-gemm" ["l"="27.772,35.445"]
"BBuf/Darknet" ["l"="34.658,35.329"]
"aovoc/nnieqat-pytorch" ["l"="30.825,35.75"]
"huawei-noah/bolt" ["l"="27.68,35.426"]
"openppl-public/ppl.nn" ["l"="27.745,35.47"]
"msnh2012/CasiaLabeler" ["l"="27.795,35.34"]
"zchrissirhcz/awesome-ncnn" ["l"="31.63,36.297"]
"dlunion/tensorRTIntegrate" ["l"="34.672,35.564"]
"BUG1989/caffe-int8-convert-tools" ["l"="27.615,35.405"]
"deepglint/EasyQuant" ["l"="30.798,35.71"]
"zerollzeng/tiny-tensorrt" ["l"="34.621,35.575"]
"tanluren/yolov3-channel-and-layer-pruning" ["l"="30.988,35.678"]
"Syencil/mobile-yolov5-pruning-distillation" ["l"="31.042,35.677"]
"google/XNNPACK" ["l"="27.673,35.469"]
"pytorch/QNNPACK" ["l"="27.619,35.429"]
"google/ruy" ["l"="27.673,35.488"]
"google/gemmlowp" ["l"="27.663,35.41"]
"oneapi-src/oneDNN" ["l"="27.771,35.473"]
"microsoft/nnfusion" ["l"="27.733,35.51"]
"pytorch/FBGEMM" ["l"="27.721,35.471"]
"tensorflow/runtime" ["l"="27.708,35.531"]
"Maratyszcza/NNPACK" ["l"="27.681,35.385"]
"flame/how-to-optimize-gemm" ["l"="27.734,35.454"]
"ARM-software/armnn" ["l"="27.544,35.464"]
"ARM-software/ComputeLibrary" ["l"="27.59,35.42"]
"andravin/wincnn" ["l"="27.686,35.403"]
"xingyul/sparse-winograd-cnn" ["l"="27.638,35.366"]
"xuqiantong/CUDA-Winograd" ["l"="27.646,35.405"]
"NervanaSystems/maxas" ["l"="27.797,35.419"]
"Tencent/FeatherCNN" ["l"="27.605,35.394"]
"IntelLabs/SkimCaffe" ["l"="30.63,35.535"]
"xingyul/Sparse-Winograd-CNN" ["l"="27.654,35.322"]
"flame/blislab" ["l"="27.756,35.418"]
"hfp/libxsmm" ["l"="27.716,35.386"]
"dmlc/nnvm" ["l"="27.714,35.41"]
"NervanaSystems/distiller" ["l"="27.573,35.45"]
"Microsoft/MMdnn" ["l"="34.266,35.282"]
"alibaba/MNN" ["l"="34.206,35.543"]
"Tencent/PocketFlow" ["l"="27.564,35.401"]
"XiaoMi/mace" ["l"="27.535,35.408"]
"tqchen/tinyflow" ["l"="27.756,35.493"]
"pmgysel/caffe" ["l"="30.635,35.584"]
"MatthieuCourbariaux/BinaryNet" ["l"="30.631,35.626"]
"apache/tvm" ["l"="27.785,35.51"]
"BBuf/tvm_mlir_learn" ["l"="27.764,35.535"]
"merrymercy/awesome-tensor-compilers" ["l"="27.732,35.525"]
"NVIDIA/TensorRT" ["l"="34.329,35.568"]
"Oneflow-Inc/oneflow" ["l"="34.058,35.604"]
"triton-inference-server/server" ["l"="34.432,35.603"]
"openmlsys/openmlsys-zh" ["l"="27.799,35.53"]
"facebookincubator/AITemplate" ["l"="27.609,31.05"]
"microsoft/onnxruntime" ["l"="34.397,35.571"]
"daquexian/onnx-simplifier" ["l"="34.45,35.564"]
"intel/clDNN" ["l"="27.598,35.328"]
"intel/mkl-dnn" ["l"="27.654,35.382"]
"opencv/dldt" ["l"="32.222,35.664"]
"intel/clGPU" ["l"="26.613,35.627"]
"intel/compute-samples" ["l"="26.618,35.591"]
"intel/opencl-intercept-layer" ["l"="26.597,35.549"]
"hughperkins/DeepCL" ["l"="26.672,35.453"]
"jrprice/Oclgrind" ["l"="26.65,35.529"]
"intel/compute-runtime" ["l"="26.597,35.599"]
"PaddlePaddle/Anakin" ["l"="27.631,35.397"]
"intel/intel-graphics-compiler" ["l"="26.574,35.616"]
"intel/caffe" ["l"="27.696,35.335"]
"herumi/xbyak" ["l"="27.75,35.396"]
"onnx/onnx-mlir" ["l"="27.69,35.556"]
"tensorflow/mlir-hlo" ["l"="27.705,35.561"]
"llvm/torch-mlir" ["l"="27.725,35.565"]
"llvm/mlir-npcomp" ["l"="27.663,35.554"]
"alibaba/BladeDISC" ["l"="27.746,35.534"]
"llvm/circt" ["l"="-9.624,46.527"]
"tensor-compiler/taco" ["l"="27.689,35.461"]
"openxla/xla" ["l"="27.672,35.569"]
"pytorch/tvm" ["l"="27.654,35.538"]
"ONNC/onnc" ["l"="-9.474,46.49"]
"apache/incubator-tvm" ["l"="27.688,35.501"]
"Tencent/ncnn" ["l"="34.142,35.514"]
"Tencent/TNN" ["l"="34.265,35.587"]
"OAID/Tengine" ["l"="22.158,27.375"]
"XiaoMi/mace-models" ["l"="27.526,35.377"]
"PaddlePaddle/Paddle-Lite" ["l"="34.117,35.755"]
"ContinuumIO/gtc2017-numba" ["l"="28.248,35.583"]
"harrism/numba_examples" ["l"="28.28,35.58"]
"ContinuumIO/gtc2018-numba" ["l"="28.292,35.602"]
"ContinuumIO/gtc2019-numba" ["l"="28.312,35.599"]
"Eric-mingjie/rethinking-network-pruning" ["l"="30.883,35.616"]
"dkozlov/awesome-knowledge-distillation" ["l"="30.84,35.521"]
"yihui-he/channel-pruning" ["l"="30.813,35.612"]
"he-y/Awesome-Pruning" ["l"="30.872,35.601"]
"666DZY666/model-compression" ["l"="30.908,35.659"]
"quark0/darts" ["l"="28.415,34.333"]
"mit-han-lab/once-for-all" ["l"="28.388,34.373"]
"Lyken17/pytorch-OpCounter" ["l"="34.344,35.589"]
"JiahuiYu/slimmable_networks" ["l"="28.42,34.421"]
"Eric-mingjie/network-slimming" ["l"="30.896,35.639"]
"HuaizhengZhang/Awesome-System-for-Machine-Learning" ["l"="27.777,35.557"]
"dmlc/mshadow" ["l"="26.872,33.993"]
"dlsys-course/assignment1" ["l"="27.847,35.583"]
"horance-liu/tensorflow-internals" ["l"="22.597,37.17"]
"dmlc/dmlc-core" ["l"="26.826,33.984"]
"microsoft/AI-System" ["l"="27.805,35.556"]
"pigirons/cpufp" ["l"="27.764,35.458"]
"flame/blis" ["l"="27.698,35.358"]
"openppl-public/ppl.cv" ["l"="27.756,35.443"]
"openppl-public/ppq" ["l"="34.591,35.682"]
"openppl-public/ppl.common" ["l"="27.776,35.417"]
"Tencent/TPAT" ["l"="34.67,35.622"]
"MegEngine/MegCC" ["l"="27.754,35.548"]
"openppl-public/CuAssembler" ["l"="27.791,35.433"]
"ModelTC/MQBench" ["l"="30.816,35.727"]
"NVIDIA/trt-samples-for-hackathon-cn" ["l"="34.614,35.634"]
"CVCUDA/CV-CUDA" ["l"="34.533,35.644"]
"openppl-public/hpcc" ["l"="27.768,35.426"]
"open-mmlab/mmdeploy" ["l"="34.658,35.732"]
"NVIDIA-AI-IOT/tensorrt_plugin_generator" ["l"="34.69,35.673"]
"onnx/optimizer" ["l"="34.633,35.627"]
"tiny-dnn/tiny-dnn" ["l"="27.633,35.343"]
"caffe2/caffe2" ["l"="27.02,33.871"]
"davisking/dlib" ["l"="33.927,35.342"]
"clab/dynet" ["l"="30.165,32.577"]
"mlpack/mlpack" ["l"="23.914,30.838"]
"dmlc/mxnet" ["l"="27.064,33.96"]
"pjreddie/darknet" ["l"="34.122,35.348"]
"kjw0612/awesome-deep-vision" ["l"="23.42,31"]
"nothings/single_file_libs" ["l"="-12.531,25.937"]
"oneapi-src/oneMKL" ["l"="26.518,35.545"]
"intel/intel-extension-for-pytorch" ["l"="32.305,35.49"]
"openvinotoolkit/openvino" ["l"="34.344,35.548"]
"intel/neural-compressor" ["l"="32.336,35.48"]
"oneapi-src/oneAPI-samples" ["l"="26.518,35.559"]
"NVIDIA/cub" ["l"="27.908,35.481"]
"dyweb/papers-notebook" ["l"="-11.181,5.148"]
"ucbrise/cs294-ai-sys-sp19" ["l"="27.836,35.618"]
"alpa-projects/alpa" ["l"="27.579,31.057"]
"d2l-ai/d2l-tvm" ["l"="27.705,35.548"]
"chenzomi12/DeepLearningSystem" ["l"="27.78,35.539"]
"zjhellofss/KuiperInfer" ["l"="27.817,35.517"]
"mlc-ai/mlc-zh" ["l"="27.753,35.566"]
"BBuf/how-to-optim-algorithm-in-cuda" ["l"="27.808,35.501"]
"hyperai/tvm-cn" ["l"="22.096,27.388"]
"zwang4/awesome-machine-learning-in-compilers" ["l"="27.694,35.571"]
"Nicholashuber/LinkToCalendar" ["l"="-5.984,-45.073"]
"anonrig/socketkit" ["l"="-5.951,-45.118"]
"mashiAl/AIpredictionBot" ["l"="-5.983,-45.129"]
"microsoft/ai-edu" ["l"="24.167,30.949"]
"bytedance/lightseq" ["l"="32.085,30.367"]
"mlc-ai/mlc-en" ["l"="27.73,35.601"]
"mlc-ai/notebooks" ["l"="27.748,35.601"]
"awslabs/raf" ["l"="27.722,35.587"]
"tlc-pack/relax" ["l"="27.71,35.601"]
"hidet-org/hidet" ["l"="27.718,35.616"]
"KnowingNothing/compiler-and-arch" ["l"="27.685,35.599"]
"parallel101/course" ["l"="-12.325,21.855"]
"mindspore-ai/mindspore" ["l"="14.232,-9.888"]
"Yinghan-Li/YHs_Sample" ["l"="27.809,35.438"]
"tpoisonooo/chgemm" ["l"="27.78,35.404"]
"Cjkkkk/CUDA_gemm" ["l"="27.821,35.465"]
"Liu-xiandong/How_to_optimize_in_GPU" ["l"="27.808,35.475"]
"lyuchuny3/Tengine_gemm_tutorial" ["l"="27.775,35.362"]
"MegEngine/mperf" ["l"="27.813,35.537"]
"BBuf/how-to-optimize-gemm" ["l"="27.777,35.432"]
"Ldpe2G/ArmNeonOptimization" ["l"="27.74,35.324"]
"arrayfire/arrayfire" ["l"="27.87,35.336"]
"facebookresearch/flashlight" ["l"="0.585,39.858"]
"boostorg/compute" ["l"="26.638,35.497"]
"arrayfire/arrayfire-rust" ["l"="-9.265,4.891"]
"flashlight/flashlight" ["l"="24.098,30.397"]
"arrayfire/arrayfire-python" ["l"="27.883,35.251"]
"clMathLibraries/clBLAS" ["l"="26.673,35.486"]
"ddemidov/vexcl" ["l"="26.686,35.497"]
"xianyi/OpenBLAS" ["l"="27.669,35.356"]
"cpp-taskflow/cpp-taskflow" ["l"="-11.665,21.949"]
"kokkos/kokkos" ["l"="21.69,34.509"]
"tensorflow/adanet" ["l"="25.583,33.899"]
"mlcommons/training" ["l"="27.734,35.631"]
"mlcommons/inference" ["l"="27.617,35.626"]
"mlcommons/hpc" ["l"="27.752,35.672"]
"mlcommons/training_results_v1.1" ["l"="27.726,35.677"]
"mlcommons/training_results_v1.0" ["l"="27.741,35.681"]
"facebookresearch/CompilerGym" ["l"="27.649,35.604"]
"google/ml-compiler-opt" ["l"="27.638,35.631"]
"shining1984/PL-Compiler-Resource" ["l"="-17.511,-32.091"]
"iree-org/iree" ["l"="27.708,35.587"]
"microsoft/EdgeML" ["l"="27.333,35.554"]
"microsoft/ELL" ["l"="27.322,35.529"]
"ai-techsystems/deepC" ["l"="27.352,35.537"]
"quic/aimet" ["l"="30.84,35.704"]
"larq/larq" ["l"="30.659,35.704"]
"krantikiran68/EdgeML" ["l"="27.286,35.532"]
"Bisonai/awesome-edge-machine-learning" ["l"="27.301,35.571"]
"google/qkeras" ["l"="-8.126,47.161"]
"IntelLabs/distiller" ["l"="30.877,35.631"]
"emlearn/emlearn" ["l"="25.818,33.657"]
"ParRes/Kernels" ["l"="20.595,34.629"]
"openai/openai-gemm" ["l"="27.746,35.373"]
"elemental/Elemental" ["l"="27.641,35.291"]
"flame/libflame" ["l"="27.677,35.313"]
"NVIDIA/CUDALibrarySamples" ["l"="27.882,35.464"]
"NVIDIA/thrust" ["l"="27.894,35.492"]
"NVIDIA/libcudacxx" ["l"="27.928,35.473"]
"onnx/onnx-tensorrt" ["l"="34.519,35.561"]
"NVIDIA/DeepLearningExamples" ["l"="34.095,35.627"]
"openxla/stablehlo" ["l"="27.654,35.589"]
"openxla/iree" ["l"="27.621,35.593"]
"openxla/community" ["l"="27.625,35.605"]
"pytorch/torchdynamo" ["l"="27.777,35.578"]
"taehoonlee/tensornets" ["l"="27.52,35.299"]
"MG2033/ShuffleNet" ["l"="34.608,35.086"]
"openai/gradient-checkpointing" ["l"="27.562,35.345"]
"lutzroeder/Netron" ["l"="27.595,35.353"]
"mystic123/tensorflow-yolo-v3" ["l"="34.432,35.179"]
"taehoonlee/easyDL" ["l"="27.492,35.274"]
"taki0112/Densenet-Tensorflow" ["l"="34.333,35.02"]
"auroua/InsightFace_TF" ["l"="35.085,33.5"]
"mila-udem/welcome_tutorials" ["l"="30.137,32.518"]
"flyyufelix/cnn_finetune" ["l"="34.294,35.076"]
"hwalsuklee/tensorflow-generative-model-collections" ["l"="33.712,32.687"]
"thtrieu/darkflow" ["l"="34.249,35.2"]
"MSiam/TFSegmentation" ["l"="31.705,36.893"]
"taki0112/StarGAN-Tensorflow" ["l"="33.575,32.728"]
"khanrc/tf.gans-comparison" ["l"="33.746,32.655"]
"demikernel/demikernel" ["l"="28.247,35.168"]
"demikernel/catnip" ["l"="28.292,35.159"]
"capsule-rs/capsule" ["l"="-17.597,-8.995"]
"xrp-project/XRP" ["l"="-11.59,1.558"]
"erpc-io/eRPC" ["l"="28.146,35.231"]
"tcp-acceleration-service/tas" ["l"="28.264,35.129"]
"ixy-languages/ixy.rs" ["l"="-17.526,-8.732"]
"dslab-epfl/tinynf" ["l"="28.272,35.143"]
"WukLab/LITE" ["l"="28.18,35.181"]
"WukLab/LegoOS" ["l"="28.236,35.196"]
"acceltcp/AccelTCP" ["l"="28.284,35.128"]
"redn-io/RedN" ["l"="28.167,35.186"]
"vmware-labs/node-replicated-kernel" ["l"="28.31,35.133"]
"efficient/fasst" ["l"="28.184,35.204"]
"shenango/caladan" ["l"="28.257,35.196"]
"vmware/node-replication" ["l"="28.292,35.143"]
"NVIDIA/jitify" ["l"="27.963,35.47"]
"stotko/stdgpu" ["l"="27.948,35.507"]
"NVIDIA/cuCollections" ["l"="27.978,35.489"]
"NVIDIA/MatX" ["l"="27.938,35.494"]
"eyalroz/cuda-api-wrappers" ["l"="27.958,35.483"]
"NVIDIA/nvbench" ["l"="27.962,35.495"]
"alandefreitas/matplotplusplus" ["l"="-11.672,21.769"]
"martinus/nanobench" ["l"="-11.52,21.894"]
"MarcDirven/cpp-lazy" ["l"="-11.375,21.839"]
"romeric/Fastor" ["l"="28.171,41.964"]
"eliaskosunen/scnlib" ["l"="-11.485,21.867"]
"joboccara/pipes" ["l"="-11.504,21.795"]
"Erkaman/Awesome-CUDA" ["l"="27.983,35.474"]
"neka-nat/cupoch" ["l"="30.463,43.3"]
"JDAI-CV/dabnn" ["l"="8.417,17.286"]
"archway-network/testnet-signer" ["l"="44.3,-25.095"]
"harvard-acc/DeepRecSys" ["l"="27.606,35.675"]
"PlatformLab/Arachne" ["l"="28.256,35.231"]
"SymbioticLab/Infiniswap" ["l"="28.31,35.21"]
"efficient/rdma_bench" ["l"="28.145,35.214"]
"shenango/shenango" ["l"="28.233,35.22"]
"clusterfarmem/fastswap" ["l"="28.284,35.219"]
"WukLab/Hotpot" ["l"="28.199,35.202"]
"vtess/Pond" ["l"="28.271,35.161"]
"WukLab/Clio" ["l"="28.278,35.181"]
"uwsampa/grappa" ["l"="28.22,35.171"]
"SJTU-IPADS/ServerlessBench" ["l"="-11.225,-1.349"]
"davisyoshida/tf2-gradient-checkpointing" ["l"="27.725,35.7"]
"prigoyal/pytorch_memonger" ["l"="27.716,35.726"]
"parasj/checkmate" ["l"="-9.391,3.071"]
"pytorch/elastic" ["l"="25.238,34.173"]
"msr-fiddle/pipedream" ["l"="-9.351,3.022"]
"tensorflow/custom-op" ["l"="25.582,34.282"]
"Oneflow-Inc/DLPerf" ["l"="27.766,35.723"]
"warmspringwinds/pytorch-cpp" ["l"="28.05,35.39"]
"zdevito/ATen" ["l"="27.958,35.417"]
"iamhankai/cpp-pytorch" ["l"="32.106,35.819"]
"linux-rdma/rdma-core" ["l"="28.088,35.248"]
"linux-rdma/perftest" ["l"="28.104,35.252"]
"jcxue/RDMA-Tutorial" ["l"="28.122,35.246"]
"openucx/ucx" ["l"="28.054,35.272"]
"Mellanox/libvma" ["l"="28.11,35.225"]
"tarickb/the-geek-in-the-corner" ["l"="28.128,35.231"]
"ofiwg/libfabric" ["l"="28.054,35.247"]
"SoftRoCE/rxe-dev" ["l"="28.129,35.189"]
"spdk/spdk" ["l"="-17.366,-9.052"]
"microsoft/Freeflow" ["l"="28.129,35.219"]
"claudebarthels/infinity" ["l"="28.138,35.252"]
"pmem/pmdk" ["l"="-11.072,3.548"]
"accelio/accelio" ["l"="28.11,35.206"]
"Maratyszcza/pthreadpool" ["l"="27.807,35.648"]
"Maratyszcza/FP16" ["l"="27.861,35.714"]
"pytorch/functorch" ["l"="23.422,33.75"]
"ELS-RD/kernl" ["l"="27.589,31.086"]
"pytorch/data" ["l"="23.396,33.65"]
"pytorch/tau" ["l"="27.878,35.54"]
"bytedance/byteir" ["l"="27.754,35.59"]
"pytorch/benchmark" ["l"="27.868,35.52"]
"HazyResearch/flash-attention" ["l"="27.553,31.056"]
"mit-han-lab/tiny-training" ["l"="27.429,35.621"]
"thenifty/neon-guide" ["l"="27.718,35.367"]
"rogerou/Arm-neon-intrinsics" ["l"="27.768,35.343"]
"intel/ARM_NEON_2_x86_SSE" ["l"="-11.225,22.011"]
"projectNe10/Ne10" ["l"="27.601,35.439"]
"jratcliff63367/sse2neon" ["l"="-11.154,22.029"]
"jzawodn/arm-neon-vfp-test" ["l"="27.708,35.318"]
"google-research/morph-net" ["l"="27.494,35.392"]
"terrychenism/OctaveConv" ["l"="31.653,37.243"]
"facebookresearch/kill-the-bits" ["l"="30.793,35.647"]
"princeton-vl/CornerNet-Lite" ["l"="34.557,35.366"]
"dstamoulis/single-path-nas" ["l"="28.462,34.386"]
"tensorflow/tpu" ["l"="34.423,35.49"]
"Robert-JunWang/Pelee" ["l"="34.574,35.177"]
"seungwonpark/RandWireNN" ["l"="28.424,34.394"]
"YouQixiaowu/CUDA-Programming-with-Python" ["l"="27.983,35.341"]
"brucefan1983/GPUMD" ["l"="16.91,37.608"]
"godweiyang/NN-CUDA-Example" ["l"="27.875,35.444"]
"deeperlearning/professional-cuda-c-programming" ["l"="27.958,35.376"]
"shouxieai/tensorRT_Pro" ["l"="34.567,35.647"]
"shouxieai/learning-cuda-trt" ["l"="34.66,35.687"]
"CaoWGG/TensorRT-CenterNet" ["l"="34.681,35.524"]
"huiscliu/Tutorials" ["l"="27.884,35.413"]
"intel/mpi-benchmarks" ["l"="28.013,35.223"]
"open-mpi/mtt" ["l"="27.998,35.179"]
"mpi-forum/mpi-issues" ["l"="27.997,35.238"]
"hjelmn/xpmem" ["l"="28.018,35.18"]
"Reference-LAPACK/lapack" ["l"="20.662,34.712"]
"pybind/pybind11" ["l"="-11.867,21.884"]
"soumith/convnet-benchmarks" ["l"="27.037,34.104"]
"Mellanox/sockperf" ["l"="-17.441,-8.813"]
"bobzhuyb/ns3-rdma" ["l"="28.137,35.199"]
"efficient/mica" ["l"="28.221,35.207"]
"eunyoung14/mtcp" ["l"="-17.406,-8.783"]
"zrlio/disni" ["l"="28.109,35.126"]
"efficient/HERD" ["l"="28.173,35.195"]
"Tiramisu-Compiler/tiramisu" ["l"="27.637,35.517"]
"bondhugula/pluto" ["l"="27.568,35.553"]
"othmanus/algeria-cities" ["l"="26.627,-21.878"]
"Meinersbur/ppcg" ["l"="27.558,35.572"]
"KnowingNothing/FlexTensor" ["l"="27.673,35.543"]
"ScientificClubofESI/LaraHack" ["l"="27.511,35.535"]
"NVlabs/moderngpu" ["l"="28.038,35.441"]
"Adlik/Adlik" ["l"="27.784,35.489"]
"Adlik/model_optimizer" ["l"="27.841,35.526"]
"neursafe/federated-learning" ["l"="27.823,35.492"]
"bytedance/effective_transformer" ["l"="32.101,30.415"]
"Tencent/Forward" ["l"="34.654,35.622"]
"dmlc/minpy" ["l"="33.138,35.776"]
"dmlc/mxnet-notebooks" ["l"="33.104,35.748"]
"zackchase/mxnet-the-straight-dope" ["l"="34.123,35.207"]
"ITensor/ITensor" ["l"="16.245,38.868"]
"ValeevGroup/tiledarray" ["l"="27.602,35.288"]
"simit-lang/simit" ["l"="27.619,35.378"]
"pytorch/cpuinfo" ["l"="27.701,35.482"]
"google/cpu_features" ["l"="-11.711,21.936"]
"travisdowns/uarch-bench" ["l"="-11.628,2.104"]
"serban/kmeans" ["l"="28.076,35.65"]
"bryancatanzaro/kmeans" ["l"="28.055,35.661"]
"phvu/kmeans_cuda" ["l"="28.101,35.675"]
"src-d/kmcuda" ["l"="28.039,35.627"]
"mallamanis/kMeansCUDA" ["l"="28.097,35.663"]
"NVIDIA/kmeans" ["l"="28.07,35.633"]
"vincentfpgarcia/kNN-CUDA" ["l"="28.053,35.591"]
"obachem/kmc2" ["l"="28.068,35.687"]
"gunrock/gunrock" ["l"="28.009,35.49"]
"chrischoy/knn_cuda" ["l"="28.08,35.616"]
"unlimblue/KNN_CUDA" ["l"="30.525,44.695"]
"cudpp/cudpp" ["l"="28.005,35.469"]
"ishbir/CUDA-KNN" ["l"="28.078,35.599"]
"KnowingNothing/AMOS" ["l"="27.692,35.59"]
"UofT-EcoSystem/DietCode" ["l"="27.7,35.597"]
"roastduck/FreeTensor" ["l"="27.697,35.608"]
"awslabs/slapo" ["l"="27.74,35.592"]
"mit-han-lab/inter-operator-scheduler" ["l"="27.71,35.573"]
"thu-pacman/PET" ["l"="27.692,35.583"]
"tlc-pack/tenset" ["l"="27.708,35.627"]
"llvm/Polygeist" ["l"="27.688,35.635"]
"buddy-compiler/buddy-mlir" ["l"="27.732,35.579"]
"kumasento/polymer" ["l"="-8.233,47.261"]
"NEDJIMAbelgacem/Graphics_Engine" ["l"="27.471,35.543"]
"BillelBenoudjit/CSE_HR" ["l"="27.488,35.543"]
"NEDJIMAbelgacem/regular-expressions-cpp-library" ["l"="27.486,35.532"]
"NVIDIA/tensorflow" ["l"="27.848,35.489"]
"NVIDIA/aistore" ["l"="31.604,34.871"]
"NVIDIA/cudnn-frontend" ["l"="27.918,35.551"]
"NVIDIA/HugeCTR" ["l"="22.609,37.027"]
"NVIDIA/TransformerEngine" ["l"="27.605,31.111"]
"farkhor/CuSha" ["l"="28.069,35.517"]
"JianlongZhong/Medusa" ["l"="28.047,35.501"]
"netsyslab/Totem" ["l"="28.11,35.542"]
"jshun/ligra" ["l"="10.312,26.718"]
"IntelligentSoftwareSystems/Galois" ["l"="10.317,26.742"]
"gunrock/graphblast" ["l"="-12.687,5.125"]
"rapidsai/cugraph" ["l"="25.211,33.902"]
"sbeamer/gapbs" ["l"="10.306,26.705"]
"groute/groute" ["l"="28.023,35.562"]
"thu-pacman/GeminiGraph" ["l"="10.329,26.721"]
"farkhor/PaRMAT" ["l"="10.297,26.687"]
"GraphIt-DSL/graphit" ["l"="10.296,26.735"]
"rapidsai/rmm" ["l"="27.99,35.498"]
"STEllAR-GROUP/hpx" ["l"="-11.569,21.923"]
"cusplibrary/cusplibrary" ["l"="28.023,35.453"]
"ericniebler/range-v3" ["l"="-11.673,21.894"]
"philsquared/Catch" ["l"="-11.723,21.958"]
"Microsoft/GSL" ["l"="-11.702,21.897"]
"Oneflow-Inc/diffusers" ["l"="27.801,35.701"]
"Oneflow-Inc/libai" ["l"="27.788,35.686"]
"Oneflow-Inc/one-yolov5" ["l"="27.817,35.729"]
"Oneflow-Inc/models" ["l"="27.801,35.735"]
"Oneflow-Inc/vision" ["l"="27.8,35.722"]
"LuChengTHU/dpm-solver" ["l"="34.546,28.926"]
"Oneflow-Inc/oneflow-documentation" ["l"="27.785,35.721"]
"stochasticai/x-stable-diffusion" ["l"="34.356,29.264"]
"Oneflow-Inc/oneflow_convert" ["l"="27.817,35.712"]
"asmjit/asmjit" ["l"="-21.342,-32.104"]
"fujitsu/xbyak_aarch64" ["l"="27.784,35.252"]
"kobalicek/asmjit" ["l"="27.771,35.316"]
"vnmakarov/mir" ["l"="-13.894,17.677"]
"intelxed/xed" ["l"="-21.381,-32.102"]
"ispc/ispc" ["l"="-11.283,21.942"]
"BitFunnel/NativeJIT" ["l"="11.86,-9.03"]
"StanfordPL/x64asm" ["l"="-17.77,-32.119"]
"matt-42/iod" ["l"="-11.557,21.798"]
"EarlGray/c4" ["l"="-13.814,17.598"]
"cppformat/cppformat" ["l"="-11.639,21.748"]
"lpsantil/rt0" ["l"="-13.791,17.72"]
"bdcht/amoco" ["l"="-19.871,-32.207"]
"trailofbits/mcsema" ["l"="-19.811,-32.167"]
"chaoticbob/tinyrenderers" ["l"="-12.301,26.275"]
"vmt/udis86" ["l"="-21.401,-32.157"]
"rampantpixels/rpmalloc" ["l"="-12.206,26.074"]
"maximecb/Higgs" ["l"="-11.1,-16.976"]
"fruxo/turbobadger" ["l"="-15.312,26.439"]
"ermig1979/Simd" ["l"="-11.302,22.014"]
"ARM-software/optimized-routines" ["l"="27.52,35.443"]
"andrepuschmann/math-neon" ["l"="27.488,35.447"]
"nod-ai/SHARK" ["l"="27.662,35.663"]
"azuritecoin/OnnxDiffusersUI" ["l"="27.649,35.718"]
"lshqqytiger/stable-diffusion-webui-directml" ["l"="27.642,35.744"]
"Amblyopius/Stable-Diffusion-ONNX-FP16" ["l"="27.631,35.722"]
"Amblyopius/AMD-Stable-Diffusion-ONNX-FP16" ["l"="27.665,35.702"]
"pythoninoffice/amd_webui" ["l"="27.633,35.691"]
"ssube/onnx-web" ["l"="27.637,35.705"]
"LostRuins/koboldcpp" ["l"="27.429,31.105"]
"n00mkrad/text2image-gui" ["l"="34.376,29.261"]
"devilismyfriend/StableTuner" ["l"="34.437,29.278"]
"ForserX/StableDiffusionUI" ["l"="27.651,35.698"]
"facebookincubator/clangir" ["l"="27.558,35.767"]
"llvm/clangir" ["l"="27.571,35.741"]
"m-a-d-n-e-s-s/madness" ["l"="27.587,35.269"]
"solomonik/ctf" ["l"="27.607,35.266"]
"Mellanox/nv_peer_memory" ["l"="27.983,35.324"]
"alibaba-edu/High-Precision-Congestion-Control" ["l"="28.144,35.169"]
"NVIDIA/multi-gpu-programming-models" ["l"="27.947,35.451"]
"pytorch/extension-cpp" ["l"="28.019,35.422"]
"wzsh/wmma_tensorcore_sample" ["l"="27.944,35.402"]
"cloudcores/CuAssembler" ["l"="27.821,35.455"]
"NVIDIA/stdexec" ["l"="27.964,35.527"]
"facebookexperimental/libunifex" ["l"="-11.596,21.885"]
"ned14/outcome" ["l"="-11.439,21.829"]
"alibaba/yalantinglibs" ["l"="-11.916,21.879"]
"kokkos/mdspan" ["l"="-11.347,21.795"]
"ned14/llfio" ["l"="-11.438,21.889"]
"stlab/libraries" ["l"="-11.47,21.826"]
"martinus/unordered_dense" ["l"="-11.371,21.978"]
"boost-ext/te" ["l"="-11.394,21.859"]
"microsoft/proxy" ["l"="-11.509,21.851"]
"cplusplus/papers" ["l"="-11.485,21.848"]
"muatik/openmp-examples" ["l"="27.874,35.304"]
"ysh329/OpenMP-101" ["l"="27.876,35.27"]
"trailofbits/vast" ["l"="27.539,35.786"]
"thustorage/octopus" ["l"="28.154,35.202"]
"coolriver/RDMA_Aware_Programming-CN" ["l"="28.149,35.265"]
"animeshtrivedi/rdma-example" ["l"="28.176,35.251"]
"rhiswell/rdma-tutorial" ["l"="28.162,35.259"]
"shibatch/sleef" ["l"="-11.28,21.968"]
"kdrag0n/adevtool" ["l"="-25.843,-21.371"]
"kerneltoast/android_kernel_google_floral" ["l"="-25.892,-21.426"]
"tensorflow/benchmarks" ["l"="27.817,35.299"]
"tensorflow/ecosystem" ["l"="22.754,37.219"]
"tensorflow/transform" ["l"="25.555,34.175"]
"mlperf/training" ["l"="27.761,35.288"]
"baidu-research/tensorflow-allreduce" ["l"="27.844,35.295"]
"tmulc18/Distributed-TensorFlow-Guide" ["l"="27.836,35.223"]
"tensorflow/profiler-ui" ["l"="27.832,35.249"]
"tensorflow/fold" ["l"="24.795,35.73"]
"mlperf/reference" ["l"="27.771,35.267"]
"SJTU-IPADS/drtmh" ["l"="28.225,35.235"]
"PlatformLab/CoreArbiter" ["l"="28.275,35.25"]
"PlatformLab/memcached-A" ["l"="28.282,35.241"]
"PlatformLab/HomaModule" ["l"="28.27,35.077"]
"PlatformLab/Homa" ["l"="28.264,35.093"]
"PlatformLab/HomaSimulation" ["l"="28.221,35.131"]
"PlatformLab/grpc_homa" ["l"="28.288,35.056"]
"ChrisCummins/ProGraML" ["l"="27.577,35.671"]
"jansel/opentuner" ["l"="27.591,35.642"]
"AliveToolkit/alive2" ["l"="-17.687,-32.237"]
"spcl/pymlir" ["l"="27.678,35.61"]
"microsoft/antares" ["l"="27.724,35.547"]
"open-mpi/hwloc" ["l"="28.014,35.255"]
"memkind/memkind" ["l"="-11.015,3.562"]
"numactl/numactl" ["l"="28.007,35.206"]
"RRZE-HPC/likwid" ["l"="-11.601,2.08"]
"pmem/rpma" ["l"="28.09,35.194"]
"pmodels/mpich" ["l"="27.983,35.277"]
"LLNL/GOTCHA" ["l"="-11.006,3.531"]
"Qthreads/qthreads" ["l"="-10.97,3.579"]
"jeffhammond/HPCInfo" ["l"="20.557,34.608"]
"hpcg-benchmark/hpcg" ["l"="20.541,34.64"]
"szagoruyko/pyinn" ["l"="28.058,35.415"]
"chrischoy/pytorch-custom-cuda-tutorial" ["l"="28.074,35.405"]
"pytorch/extension-ffi" ["l"="28.084,35.425"]
"ignacio-rocco/detectorch" ["l"="34.5,35.251"]
"tczhangzhi/pytorch-parallel" ["l"="8.967,17.283"]
"pytorch/cppdocs" ["l"="28.042,35.518"]
"pytorch/tnt" ["l"="34.234,35.473"]
"oeway/pytorch-deform-conv" ["l"="34.482,35.282"]
"sniklaus/pytorch-extension" ["l"="28.093,35.413"]
"marvis/pytorch-caffe" ["l"="34.488,35.143"]
"lanpa/tensorboard-pytorch" ["l"="34.262,35.363"]
"NVIDIA/PyProf" ["l"="34.286,35.827"]
"lshqqytiger/k-diffusion-directml" ["l"="27.642,35.772"]
"lshqqytiger/stablediffusion-directml" ["l"="27.627,35.772"]
"journey-ad/sd-webui-bilingual-localization" ["l"="34.445,29.416"]
"xuhuisheng/rocm-gfx803" ["l"="27.618,35.819"]
"AUTOMATIC1111/stable-diffusion-webui-rembg" ["l"="34.481,29.397"]
"anapnoe/stable-diffusion-webui-ux" ["l"="34.562,29.363"]
"jexom/sd-webui-depth-lib" ["l"="34.449,29.348"]
"michael-lehn/ulmBLAS" ["l"="27.661,35.278"]
"CNugteren/CLBlast" ["l"="26.658,35.502"]
"giaf/blasfeo" ["l"="28.009,42.06"]
"devinamatthews/tblis" ["l"="27.601,35.251"]
"idstcv/ZenNAS" ["l"="28.499,34.388"]
"mit-han-lab/smoothquant" ["l"="27.637,31.166"]
"alibaba/TinyNeuralNetwork" ["l"="30.864,35.719"]
"sipeed/TinyMaix" ["l"="-31.569,41.398"]
"mit-han-lab/hardware-aware-transformers" ["l"="29.513,30.823"]
"mit-han-lab/proxylessnas" ["l"="28.412,34.383"]
"tinyMLx/colabs" ["l"="27.344,35.623"]
"yhhhli/APoT_Quantization" ["l"="30.768,35.708"]
"HollowMan6/TinyML-ESP32" ["l"="27.352,35.608"]
"ucb-bar/gemmini" ["l"="-9.576,46.482"]
"uTensor/utensor_cgen" ["l"="27.344,35.511"]
"renode/renode" ["l"="-31.601,41.691"]
"arduino/ArduinoTensorFlowLiteTutorials" ["l"="27.257,35.581"]
"symisc/sod" ["l"="-13.585,22.058"]
"01org/mkl-dnn" ["l"="27.721,35.336"]
"NVIDIA/caffe" ["l"="26.9,33.909"]
"shicai/MobileNet-Caffe" ["l"="34.517,35.142"]
"soeaver/caffe-model" ["l"="34.479,35.12"]
"luoyetx/mini-caffe" ["l"="34.912,33.496"]
"intel/Theano" ["l"="27.696,35.301"]
"yonghenglh6/DepthwiseConvolution" ["l"="34.578,35.129"]
"chuanqi305/MobileNet-SSD" ["l"="34.475,35.175"]
"weiliu89/caffe" ["l"="34.325,35.17"]
"olojuwin/facerecognize-for-mobile-phone" ["l"="35.059,33.366"]
"in66-dev/In-Prestissimo" ["l"="34.899,33.534"]
"PaddlePaddle/paddle-mobile" ["l"="-35.232,-17.553"]
"zjhellofss/KuiperCourse" ["l"="27.848,35.556"]
"vesuppi/nanoPyC" ["l"="27.864,35.561"]
"SJTU-IPADS/wukong" ["l"="28.193,35.132"]
"SJTU-IPADS/drtm" ["l"="28.188,35.156"]
"sjtugjy/enclave-migration" ["l"="28.208,35.095"]
"SJTU-IPADS/sgx-migration" ["l"="28.193,35.094"]
"realstolz/powerlyra" ["l"="10.309,26.664"]
"pytorch/torchx" ["l"="27.923,35.596"]
"pytorch/torchsnapshot" ["l"="27.903,35.572"]
"pytorch/torchdistx" ["l"="27.955,35.639"]
"XiaoMi/mobile-ai-bench" ["l"="27.556,35.378"]
"HolmesShuan/CNN-Inference-Engine-Quick-View" ["l"="27.471,35.341"]
"facebook/FAI-PEP" ["l"="27.516,35.358"]
"starimeL/PytorchConverter" ["l"="34.616,35.177"]
"zchee/cuda-sample" ["l"="28.006,35.352"]
"ROCm-Developer-Tools/HIP-Examples" ["l"="26.553,35.358"]
"TracyMcgrady6/Distribute_MNIST" ["l"="27.827,35.175"]
"thewintersun/distributeTensorflowExample" ["l"="27.839,35.159"]
"gctian/distributed-tensorflow" ["l"="27.827,35.141"]
"dmlc/rabit" ["l"="26.822,33.96"]
"CNevd/Difacto_DMLC" ["l"="26.781,33.935"]
"wesleykendall/mpitutorial" ["l"="27.91,35.3"]
"SchedMD/slurm" ["l"="21.669,33.627"]
"spack/spack" ["l"="21.622,33.662"]
"open-mpi/ompi-release" ["l"="27.97,35.26"]
"Hardware-Alchemy/cuDNN-sample" ["l"="28.153,35.353"]
"pwlnk/cuda-neural-network" ["l"="28.077,35.357"]
"haanjack/mnist-cudnn" ["l"="28.137,35.354"]
"jbornschein/mpi4py-examples" ["l"="27.927,35.238"]
"mpi4py/mpi4py" ["l"="27.93,35.271"]
"HPCToolkit/hpctoolkit" ["l"="21.626,34.529"]
"google-research/sputnik" ["l"="29.746,30.871"]
"yzhaiustc/Optimizing-SGEMM-on-NVIDIA-Turing-GPUs" ["l"="27.828,35.445"]
"NVIDIA/AMGX" ["l"="21.728,34.502"]
"inducer/loopy" ["l"="27.657,35.516"]
"dmlc/HalideIR" ["l"="27.551,35.536"]
"inducer/pymbolic" ["l"="27.745,35.518"]
"mli/d2l-tvm" ["l"="27.611,35.549"]
"dmlc/dlpack" ["l"="27.733,35.495"]
"StrongSpoon/tvm.schedule" ["l"="27.718,35.555"]
"pocl/pocl" ["l"="26.632,35.523"]
"FeiGeChuanShu/ncnn_nanodet_hand" ["l"="31.583,36.274"]
"ProbabilisticINT/HPCC-PINT" ["l"="28.149,35.148"]
"inet-tub/ns3-datacenter" ["l"="28.16,35.126"]
"danushkam/rocc" ["l"="28.136,35.149"]
"snowzjx/ns3-ecn-sharp" ["l"="28.153,35.137"]
"tczhangzhi/pytorch-distributed" ["l"="34.448,35.718"]
"hhaAndroid/mmdetection-mini" ["l"="34.717,35.566"]
"PeizeSun/OneNet" ["l"="34.785,35.582"]
"dk-liang/Awesome-Visual-Transformer" ["l"="34.543,35.858"]
"pytorch/builder" ["l"="27.977,35.565"]
"sophgo/tpu-mlir" ["l"="27.737,35.557"]
"tf-coreml/tf-coreml" ["l"="-48.686,5.407"]
"dnouri/skorch" ["l"="25.512,33.671"]
"Prodicode/ann-visualizer" ["l"="25.713,33.811"]
"ShichenLiu/CondenseNet" ["l"="34.467,35.227"]
"Oneflow-Inc/OneFlow-Benchmark" ["l"="27.771,35.756"]
"Oneflow-Inc/oneflow-xrt" ["l"="27.789,35.733"]
"PAA-NCIC/PPoPP2017_artifact" ["l"="27.797,35.4"]
"pigirons/sgemm_hsw" ["l"="27.783,35.455"]
"leonardvandriel/caffe2_cpp_tutorial" ["l"="28.112,35.393"]
"breadbread1984/Caffe2-C-demo" ["l"="28.158,35.378"]
"leonardvandriel/caffe2_models" ["l"="28.167,35.391"]
"caffe2/tutorials" ["l"="28.181,35.404"]
"caffe2/models" ["l"="28.2,35.389"]
"NVIDIA/cnmem" ["l"="28.003,35.452"]
"canonizer/halloc" ["l"="28.113,35.502"]
"facebook/fbcuda" ["l"="26.943,34.225"]
"bryancatanzaro/trove" ["l"="28.027,35.475"]
"alibaba/EasyParallelLibrary" ["l"="27.801,35.626"]
"alibaba/DeepRec" ["l"="22.638,37.033"]
"alibaba/HybridBackend" ["l"="22.594,37.014"]
"dlsys-course/assignment2-2018" ["l"="27.882,35.61"]
"dlsys-course/tinyflow" ["l"="27.868,35.623"]
"dlsys-course/assignment2" ["l"="27.904,35.617"]
"dlsys-course/dlsys-course.github.io" ["l"="27.89,35.63"]
"tobegit3hub/miniflow" ["l"="22.538,37.349"]
"pytorch/kineto" ["l"="27.851,35.506"]
"MegEngine/MegPeak" ["l"="27.803,35.577"]
"tpoisonooo/llama.onnx" ["l"="31.5,36.311"]
"ptillet/isaac" ["l"="27.792,35.279"]
"intel/isaac" ["l"="27.805,35.25"]
"ARM-software/android-nn-driver" ["l"="27.472,35.483"]
"xboxfanj/math-neon" ["l"="27.439,35.446"]
"chrischoy/MakePytorchPlusPlus" ["l"="28.132,35.409"]
"snowzjx/ns3-load-balance" ["l"="28.16,35.102"]
"mkheirkhah/ecmp" ["l"="28.167,35.074"]
"huawei-noah/vega" ["l"="28.4,34.393"]
"AI-performance/embedded-ai.bench" ["l"="27.589,35.374"]
"moli232777144/mtcnn_ncnn" ["l"="34.986,33.414"]
"samanbarghi/uThreads" ["l"="28.344,35.254"]
"samanbarghi/MPSCQ" ["l"="28.381,35.26"]
"u39kun/deep-learning-benchmark" ["l"="27.693,35.248"]
"lambdal/lambda-tensorflow-benchmark" ["l"="27.653,35.199"]
"hclhkbu/dlbench" ["l"="27.72,35.264"]
"fengbintu/Neural-Networks-on-Silicon" ["l"="-7.959,47.14"]
"lambdal/deeplearning-benchmark" ["l"="27.619,35.157"]
"ischlag/distributed-tensorflow-example" ["l"="27.864,35.166"]
"cerndb/dist-keras" ["l"="11.061,23.983"]
"tmulc18/DistributedDeepLearningReads" ["l"="27.851,35.186"]
"lambdaji/tf_repos" ["l"="22.729,37.197"]
"caicloud/tensorflow-demo" ["l"="27.808,35.155"]
"reinforceio/tensorforce" ["l"="24.99,35.887"]
"UIC-Paper/MIMN" ["l"="22.702,37.128"]
"microsoft/msccl" ["l"="27.867,35.431"]
"01org/daal" ["l"="27.705,35.286"]
"NervanaSystems/neon" ["l"="27.093,34.021"]
"mind/wheels" ["l"="34.113,35.17"]
"taolei87/sru" ["l"="30.094,32.518"]
"IITH-Compilers/IR2Vec" ["l"="27.544,35.691"]
"tud-ccc/compy-learn" ["l"="27.515,35.703"]
"pytorch/tensorpipe" ["l"="27.868,35.498"]
"pytorch/rfcs" ["l"="27.892,35.527"]
"ROCmSoftwarePlatform/rccl" ["l"="26.538,35.34"]
"facebookresearch/torchdynamo" ["l"="27.924,35.573"]
"CodedK/CUDA-by-Example-source-code-for-the-book-s-examples-" ["l"="27.94,35.37"]
"CoffeeBeforeArch/cuda_programming" ["l"="28.007,35.374"]
"mlperf/inference" ["l"="27.734,35.231"]
"mlperf/inference_results_v0.5" ["l"="27.725,35.181"]
"alibaba/ai-matrix" ["l"="27.722,35.304"]
"ctuning/ck-mlperf" ["l"="27.733,35.196"]
"mlperf/mlbox" ["l"="27.72,35.204"]
"eembc/mlmark" ["l"="-9.361,46.526"]
"NVSL/OptaneStudy" ["l"="-11.098,3.568"]
"SJTU-IPADS/xstore" ["l"="28.152,35.188"]
"willemt/raft" ["l"="-11.227,4.924"]
"jcmgray/quimb" ["l"="16.202,38.816"]
"joshspeagle/dynesty" ["l"="17.028,36.659"]
"spectralDNS/shenfun" ["l"="21.66,34.411"]
"lebedov/scikit-cuda" ["l"="26.93,35.495"]
"h5py/h5py" ["l"="21.668,28.712"]
"eric612/MobileNet-YOLO" ["l"="34.591,35.175"]
"xxradon/PytorchToCaffe" ["l"="34.61,35.216"]
"chuanqi305/MobileNetv2-SSDLite" ["l"="34.597,35.134"]
"miaow1988/ShuffleNet_V2_pytorch_caffe" ["l"="34.605,35.19"]
"harrism/hemi" ["l"="28.049,35.459"]
"kylelutz/compute" ["l"="26.719,35.481"]
"NVlabs/nvbio" ["l"="21.671,43.119"]
"HSA-Libraries/Bolt" ["l"="26.721,35.5"]
"antonmks/Alenka" ["l"="28.076,35.469"]
"seanbaxter/moderngpu" ["l"="28.076,35.442"]
"mmp/pbrt-v2" ["l"="-12.456,26.353"]
"seanbaxter/mgpu" ["l"="28.109,35.44"]
"scaledown-team/study-group" ["l"="27.309,35.606"]
"tinyMLx/courseware" ["l"="27.322,35.627"]
"ShawnHymel/tinyml-example-anomaly-detection" ["l"="27.289,35.617"]
"da03/TFLite-Micro-Seq2Seq" ["l"="27.324,35.604"]
"owensgroup/SlabHash" ["l"="28.081,35.511"]
"pzrq/megakv" ["l"="28.11,35.526"]
"owensgroup/BGHT" ["l"="28.125,35.523"]
"owensgroup/MVGpuBTree" ["l"="28.141,35.528"]
"uber-common/deep-neuroevolution" ["l"="24.659,38.396"]
"ppwwyyxx/tensorpack" ["l"="34.217,35.125"]
"deepmind/dnc" ["l"="24.891,35.795"]
"yunjey/StarGAN" ["l"="33.625,32.692"]
"naturomics/CapsNet-Tensorflow" ["l"="30.98,32.964"]
"carpedm20/ENAS-pytorch" ["l"="28.427,34.307"]
"google/tangent" ["l"="25.389,33.627"]
"facebookresearch/adversarial_image_defenses" ["l"="27.463,35.296"]
"bioinf-jku/SNNs" ["l"="33.874,32.628"]
"chrischoy/pytorch_knn_cuda" ["l"="30.524,44.728"]
"emavgl/knn-cuda" ["l"="28.104,35.629"]
"jaredhoberock/bulk" ["l"="28.106,35.48"]
"harrism/cpp11-range" ["l"="28.11,35.467"]
"Tencent/PatrickStar" ["l"="27.807,35.597"]
"Tencent/TurboTransformers" ["l"="32.129,30.357"]
"BaguaSys/bagua" ["l"="22.498,37.01"]
"volcengine/veGiantModel" ["l"="27.836,35.65"]
"ucbrise/actnn" ["l"="30.693,35.743"]
"kakaobrain/torchgpipe" ["l"="-9.372,3.03"]
"microsoft/Megatron-DeepSpeed" ["l"="27.621,31.141"]
"ConnollyLeon/awesome-Auto-Parallelism" ["l"="27.868,35.641"]
"buddy-compiler/buddy-benchmark" ["l"="27.764,35.615"]
"MLIR-China/mlir-playground" ["l"="27.746,35.616"]
"pku-liang/AMOS" ["l"="27.757,35.629"]
"owensgroup/GpuBTree" ["l"="28.179,35.538"]
"mlperf/training_results_v0.7" ["l"="27.741,35.252"]
"stanford-futuredata/dawn-bench-entries" ["l"="27.761,35.21"]
"tbd-ai/tbd-suite" ["l"="27.758,35.247"]
"intel/MLSL" ["l"="27.765,35.231"]
"deep500/deep500" ["l"="-8.269,47.205"]
"accelio/JXIO" ["l"="28.093,35.147"]
"SoftRoCE/librxe-dev" ["l"="28.114,35.176"]
"accelio/NBDX" ["l"="28.094,35.178"]
"Open-CAS/ocf" ["l"="-10.883,3.425"]
"zrlio/darpc" ["l"="28.112,35.146"]
"sheepdog/sheepdog" ["l"="-12.182,-0.86"]
"tud-ccc/learning-compiler-graphs" ["l"="27.55,35.679"]
"danielzuegner/code-transformer" ["l"="-17.616,-33.181"]
"parasj/contracode" ["l"="-17.622,-33.162"]
"VulDetProject/ReVeal" ["l"="-17.614,-33.077"]
"ChrisCummins/clgen" ["l"="27.53,35.718"]
"microsoft/graph-based-code-modelling" ["l"="-17.608,-33.244"]
"pdlan/OSCAR" ["l"="-17.662,-33.204"]
"microsoft/tutel" ["l"="27.841,31.12"]
"uwplse/tensat" ["l"="27.594,35.579"]
"DeepMark/deepmark" ["l"="26.903,34.271"]
"facebook/fb-caffe-exts" ["l"="26.89,34.187"]
"PaddlePaddle/CINN" ["l"="34.038,35.924"]
"MegEngine/mgeconvert" ["l"="31.42,36.27"]
"alibaba/FastNN" ["l"="27.843,35.673"]
"alibaba/GPU-scheduler-for-deep-learning" ["l"="-9.393,2.932"]
"AlibabaPAI/DAPPLE" ["l"="-9.33,3.036"]
"PKU-DAIR/Hetu" ["l"="28.04,31.105"]
"msr-fiddle/synergy" ["l"="-9.347,2.992"]
"petuum/adaptdl" ["l"="-9.374,2.98"]
"S-Lab-System-Group/Awesome-DL-Scheduling-Papers" ["l"="-9.326,2.98"]
"xuhuisheng/rocm-build" ["l"="27.603,35.842"]
"wkcn/MobulaOP" ["l"="33.166,35.71"]
"BBuf/tvm_learn" ["l"="27.662,35.636"]
"tvmai/meetup-slides" ["l"="27.634,35.578"]
"merrymercy/tvm-mali" ["l"="27.566,35.586"]
"NVIDIA/TRTorch" ["l"="34.522,35.613"]
"vinx13/tvm-cuda-int8-benchmark" ["l"="27.586,35.564"]
"tqchen/ffi-navigator" ["l"="27.674,35.588"]
"niuhope/cuda_sgemm" ["l"="27.837,35.462"]
"yzhaiustc/Optimizing-DGEMM-on-Intel-CPUs-with-AVX512F" ["l"="27.833,35.404"]
"mit-han-lab/torchprofile" ["l"="28.542,34.339"]
"mit-han-lab/apq" ["l"="30.782,35.665"]
"mit-han-lab/HAQ" ["l"="28.566,34.307"]
"rapidsai/ucx-py" ["l"="28.054,35.371"]
"openucx/ucc" ["l"="28.039,35.233"]
"PlatformLab/RAMCloud" ["l"="28.204,35.189"]
"kohler/masstree-beta" ["l"="-10.916,4.886"]
"pmem/pmemkv" ["l"="-11.084,3.536"]
"logcabin/logcabin" ["l"="-11.183,4.911"]
"utsaslab/pebblesdb" ["l"="-11.045,4.999"]
"oltpbenchmark/oltpbench" ["l"="-10.903,4.958"]
"CorfuDB/CorfuDB" ["l"="-11.07,4.884"]
"stanford-mast/pocket" ["l"="-11.19,-1.424"]
"Mellanox/nccl-rdma-sharp-plugins" ["l"="27.946,35.355"]
"gpudirect/libgdsync" ["l"="28.014,35.305"]
"polyfem/polyfem" ["l"="-11.098,27.237"]
"XiaoMi/kaldi-onnx" ["l"="0.594,39.811"]
"XiaoMi/mace-kit" ["l"="27.472,35.364"]
"szad670401/Fast-MTCNN" ["l"="34.945,33.429"]
"tidyjiang8/arm-gcc-inline-assembler" ["l"="27.785,35.295"]
"BUG1989/ncnn-benchmark" ["l"="34.9,33.555"]
"facebookresearch/torch-rnnlib" ["l"="26.93,34.342"]
"pigirons/conv3x3_m1" ["l"="27.815,35.425"]
"mpitutorial/mpitutorial" ["l"="27.86,35.395"]
"dgschwend/netscope" ["l"="23.355,31.435"]
"oracle/graphpipe" ["l"="25.567,34.046"]
"oneapi-src/oneTBB" ["l"="-11.683,22.029"]
"xtensor-stack/xsimd" ["l"="-11.394,21.938"]
"xtensor-stack/xtensor" ["l"="-11.574,21.64"]
"MARD1NO/FxxkCUDA" ["l"="27.853,35.543"]
"bytedance/ByteTransformer" ["l"="27.788,35.605"]
"kubeflow/mpi-operator" ["l"="-9.407,2.789"]
"Mellanox/k8s-rdma-sriov-dev-plugin" ["l"="-9.613,2.76"]
"Jack47/hack-SysML" ["l"="27.844,35.415"]
"amzn/amzn-drivers" ["l"="28.081,35.217"]
"aws/aws-ofi-nccl" ["l"="28.059,35.208"]
"amzn/amzn-ec2-ena-utilities" ["l"="28.072,35.194"]
"aws/libfabric" ["l"="28.066,35.183"]
"efficient/memc3" ["l"="28.257,35.216"]
"efficient/mica2" ["l"="28.272,35.206"]
"opennvm/nvmkv" ["l"="28.312,35.179"]
"silt/silt" ["l"="28.291,35.195"]
"uwsampl/sparsetir" ["l"="27.776,35.624"]
"Microsoft/onnxruntime" ["l"="27.552,35.431"]
"onnx/onnxmltools" ["l"="34.594,35.576"]
"Microsoft/Windows-Machine-Learning" ["l"="27.468,35.427"]
"neo-ai/neo-ai-dlr" ["l"="-31.009,41.908"]
"Microsoft/onnxjs" ["l"="28.136,27.719"]
"awslabs/mxnet-model-server" ["l"="33.079,35.697"]
"rapidsai/kvikio" ["l"="28.132,35.604"]
"NVIDIA/warp" ["l"="-12.443,26.593"]
"rapidsai/raft" ["l"="28.019,35.518"]
"inducer/pycuda" ["l"="26.866,35.51"]
"rapidsai/cuspatial" ["l"="25.184,33.885"]
"NVIDIA/NVTabular" ["l"="22.633,36.938"]
"bakks/virginian" ["l"="28.145,35.486"]
"pg-strom/devel" ["l"="28.176,35.487"]
"mapd/mapd-core" ["l"="11.667,24.041"]
"antonmks/nvParse" ["l"="-16.528,-0.974"]
"mit-probabilistic-computing-project/BayesDB" ["l"="21.876,28.794"]
"hannes-brt/hebel" ["l"="27.187,34.043"]
"dubey/weaver" ["l"="-11.508,4.74"]
"openai/sparse_attention" ["l"="29.853,32.415"]
"huggingface/pytorch_block_sparse" ["l"="29.652,30.79"]
"ptillet/torch-blocksparse" ["l"="29.672,30.808"]
"parallel-forall/cudacasts" ["l"="28.063,35.437"]
"baidu-research/persistent-rnn" ["l"="26.969,34.288"]
"rmfarber/ParallelProgrammingWithOpenACC" ["l"="28.133,35.442"]
"facebookresearch/fairring" ["l"="27.911,35.535"]
"Funatiq/gossip" ["l"="27.912,31.134"]
"milvus-io/knowhere" ["l"="25.786,36.561"]
"stanford-futuredata/dawn-bench-models" ["l"="27.758,35.173"]
"iml130/mlir-emitc" ["l"="-8.249,47.27"]
"alibaba/heterogeneity-aware-lowering-and-optimization" ["l"="27.717,35.498"]
"polymage-labs/mlirx" ["l"="27.663,35.615"]
"tensorflow/io" ["l"="25.568,34.231"]
"tensorflow/profiler" ["l"="25.596,34.244"]
"torrvision/crayon" ["l"="34.236,35.333"]
"JianGoForIt/YellowFin_Pytorch" ["l"="34.055,35.197"]
"torch/cunn" ["l"="26.858,34.272"]
"ebetica/autogradpp" ["l"="28.01,35.392"]
"salesforce/matchbox" ["l"="30.09,32.43"]
"microsoft/varuna" ["l"="-9.366,3.008"]
"pytorch/ort" ["l"="34.899,35.641"]
"facebookresearch/HolisticTraceAnalysis" ["l"="27.894,35.56"]
"Shenggan/awesome-distributed-ml" ["l"="27.879,35.589"]
"stanford-futuredata/gavel" ["l"="-9.378,2.963"]
"ChrisCummins/paper-synthesizing-benchmarks" ["l"="27.502,35.739"]
"ChrisCummins/cldrive" ["l"="27.516,35.737"]
"JbPasquier/stable-diffusion-onnx-ui" ["l"="27.619,35.748"]
"FilipeMaia/afnumpy" ["l"="27.886,35.219"]
"michaelnowotny/cocos" ["l"="27.892,35.2"]
"EEESlab/mobilenet_v1_stm32_cmsis_nn" ["l"="27.372,35.491"]
"BCJuan/torch2cmsis" ["l"="27.4,35.506"]
"ARM-software/CMSIS_5" ["l"="-31.492,41.613"]
"NVIDIA/MagnumIO" ["l"="27.966,35.119"]
"hustcat/k8s-rdma-device-plugin" ["l"="-9.592,2.756"]
"SJTU-IPADS/krcore-artifacts" ["l"="28.167,35.213"]
"ooibc88/gam" ["l"="28.192,35.171"]
"thustorage/nvm-datastructure" ["l"="-11.112,3.607"]
"NVSL/NOVA" ["l"="-11.12,3.497"]
"DICL/CCEH" ["l"="-11.109,3.579"]
"eloquentarduino/tinymlgen" ["l"="27.25,35.608"]
"eloquentarduino/micromlgen" ["l"="25.794,33.67"]
"eloquentarduino/EloquentArduino" ["l"="-35.937,39.684"]
"YuanhaoGong/SideWindowFilter" ["l"="27.692,35.199"]
"YuanhaoGong/CurvatureFilter" ["l"="27.669,35.138"]
"dontLoveBugs/SideWindowFilter" ["l"="27.667,35.171"]
"YuanhaoGong/WeightedMeanCurvature" ["l"="27.678,35.159"]
"Luxiush/Weighted-Guided-Image-Filter" ["l"="27.696,35.166"]
"swz30/CycleISP" ["l"="36.075,32.278"]
"hypre-space/hypre" ["l"="21.747,34.489"]
"petsc/petsc" ["l"="21.797,34.509"]
"daos-stack/daos" ["l"="-11.058,3.483"]
"GlobalArrays/ga" ["l"="27.974,35.237"]
"LLNL/mpiP" ["l"="21.585,34.548"]
"lift-project/lift" ["l"="27.523,35.64"]
"CNugteren/CLTune" ["l"="26.689,35.544"]
"phrb/gpu-autotuning" ["l"="27.564,35.654"]
"cyclops-community/ctf" ["l"="27.579,35.246"]
"epifanovsky/libtensor" ["l"="27.559,35.263"]
"evaleev/libint" ["l"="17.044,37.533"]
"ValeevGroup/mpqc" ["l"="17.008,37.49"]
"FermiQC/Fermi.jl" ["l"="16.957,37.509"]
"LLNL/Umpire" ["l"="21.664,34.505"]
"arduino/ArduinoAI" ["l"="27.219,35.602"]
"wezleysherman/ESP32-TensorFlow-Lite-Sample" ["l"="27.206,35.587"]
"XiaoSong9905/CUDA-Optimization-Guide" ["l"="27.845,35.474"]
"openucx/xccl" ["l"="27.956,35.331"]
"google/nccl-fastsocket" ["l"="27.924,35.362"]
"csrhddlam/pytorch-checkpoint" ["l"="27.706,35.761"]
"microsoft/NPKit" ["l"="27.903,35.383"]
"microsoft/msccl-tools" ["l"="27.863,35.462"]
"microsoft/sccl" ["l"="27.867,35.413"]
"parasailteam/coconet" ["l"="27.829,35.53"]
"Microsoft/Freeflow" ["l"="28.213,35.116"]
"joyq-github/TensorFlowonK8s" ["l"="28.232,35.088"]
"danyangz/Slim" ["l"="28.231,35.067"]
"Microsoft/KubeGPU" ["l"="-11.328,0.436"]
"jonhoo/rust-ibverbs" ["l"="-10.61,5.183"]
"viennacl/viennacl-dev" ["l"="26.697,35.482"]
"ddemidov/amgcl" ["l"="21.777,34.493"]
"ginkgo-project/ginkgo" ["l"="21.702,34.476"]
"clMathLibraries/clSPARSE" ["l"="26.69,35.463"]
"bhSPARSE/Benchmark_SpMV_using_CSR5" ["l"="28.101,35.455"]
"bhSPARSE/Benchmark_SpGEMM_using_CSR" ["l"="28.078,35.452"]
"eyalroz/cuda-kat" ["l"="27.987,35.526"]
"NVIDIA/nvcomp" ["l"="27.977,35.509"]
"illuhad/hipSYCL" ["l"="26.559,35.499"]
"espressif/tensorflow" ["l"="27.197,35.557"]
"nosferalatu/SimpleGPUHashTable" ["l"="28.072,35.495"]
"sleeepyjack/warpcore" ["l"="28.005,35.506"]
"ContinuumIO/gtc2020-numba" ["l"="28.343,35.608"]
"dmlc/parameter_server" ["l"="26.844,33.974"]
"cuihenggang/geeps" ["l"="26.712,33.854"]
"cnkuangshi/LightCTR" ["l"="26.803,33.913"]
"Microsoft/Multiverso" ["l"="26.803,33.939"]
"inducer/islpy" ["l"="27.53,35.576"]
"periscop/cloog" ["l"="27.515,35.567"]
"wsmoses/Polygeist" ["l"="-8.265,47.268"]
"ftynse/clint" ["l"="27.535,35.563"]
"periscop/clan" ["l"="27.527,35.554"]
"UCLA-VAST/AutoSA" ["l"="-8.15,47.221"]
"UoB-HPC/BabelStream" ["l"="20.499,34.643"]
"olcf/cuda-training-series" ["l"="28.027,35.398"]
"zrlio/softiwarp" ["l"="28.11,35.159"]
"trxcllnt/rapids-compose" ["l"="28.005,35.524"]
"daadaada/turingas" ["l"="27.831,35.426"]
"daadaada/gas" ["l"="27.844,35.432"]
"hyqneuron/asfermi" ["l"="27.816,35.406"]
"eBay/maxDNN" ["l"="27.797,35.384"]
"NervanaSystems/nervanagpu" ["l"="27.795,35.367"]
"MegEngine/cutlass" ["l"="27.82,35.39"]
"dingwentao/GPU-lossless-compression" ["l"="28.007,35.574"]
"aditya12agd5/cuda_bzip2" ["l"="28.017,35.596"]
"Jokeren/Awesome-GPU" ["l"="27.896,35.456"]
"hao-lh/awesome-cuda-programming" ["l"="28.031,35.491"]
"benvanwerkhoven/kernel_tuner" ["l"="26.716,35.559"]
"NVIDIA/NVTX" ["l"="28.001,35.541"]
"mlperf/policies" ["l"="27.694,35.266"]
"stellaraccident/mlir-npcomp" ["l"="27.615,35.567"]
"cmu-catalyst/collage" ["l"="27.705,35.617"]
"AutomataLab/Tigr" ["l"="28.019,35.612"]
"nickspell/udacity-IntroToParallelProgramming" ["l"="28.084,35.319"]
"IlyaGrebnov/libsais" ["l"="-14.739,22.168"]
"facebookresearch/dietgpu" ["l"="28.043,35.566"]
"jkbonfield/rans_static" ["l"="-14.83,22.129"]
"Oneflow-Inc/one-fx" ["l"="27.836,35.749"]
"Oneflow-Inc/oneflow-yolo-doc" ["l"="27.828,35.759"]
"CoffeeBeforeArch/cpp_crash_course" ["l"="28.098,35.338"]
"CoffeeBeforeArch/parallel_programming" ["l"="28.057,35.352"]
"CoffeeBeforeArch/practical_parallelism_in_cpp" ["l"="28.037,35.348"]
"JordiCorbilla/mpi4py-examples" ["l"="27.927,35.208"]
"marshallward/f90nml" ["l"="18.926,28.309"]
"linzino7/RDMA-example-application" ["l"="28.175,35.272"]
"NervanaSystems/nervana-lib-gpu-performance-preview" ["l"="27.809,35.322"]
"bshillingford/autobw.torch" ["l"="26.949,34.329"]
"tkocisky/oxnn" ["l"="26.967,34.31"]
"springer13/hptt" ["l"="27.571,35.222"]
"springer13/tcl" ["l"="27.589,35.225"]
"SlugLab/SlugAllocator" ["l"="28.306,35.154"]
"ysh329/embedded-ai.bi-weekly" ["l"="27.522,35.332"]
"apache/tvm-rfcs" ["l"="27.678,35.623"]
"spcl/mlir-dace" ["l"="-8.237,47.223"]
"yangcal/symtensor" ["l"="27.548,35.226"]
"LLNL/Elemental" ["l"="27.63,35.248"]
"JuliaParallel/Elemental.jl" ["l"="27.617,35.235"]
"poulson/Clique" ["l"="27.63,35.263"]
"YuanhaoGong/Naturalization" ["l"="27.666,35.11"]
"soundsilence/ImageSmoothing" ["l"="27.646,35.096"]
"timothybrooks/hdr-plus" ["l"="36.173,33.561"]
"tinyMLx/arduino-library" ["l"="27.312,35.642"]
"tinyMLx/appendix" ["l"="27.338,35.642"]
"tinyMLx/open-speech-recording" ["l"="27.325,35.649"]
"tinyMLx/tinyMLx.github.io" ["l"="27.325,35.639"]
"uwsampl/SparseTIR" ["l"="27.693,35.625"]
"clyfish/gcn-scrypt" ["l"="28.191,35.559"]
"md2z34/winograd_gpu" ["l"="27.633,35.381"]
"fujitsu/xbyak_translator_aarch64" ["l"="27.795,35.229"]
"fujitsu/dnnl_aarch64" ["l"="27.787,35.219"]
"zhaiyi000/tlp" ["l"="27.756,35.648"]
"tlc-pack/TLCBench" ["l"="27.705,35.672"]
"Archermmt/tvm_walk_through" ["l"="27.693,35.653"]
"uwsampl/relay-aot" ["l"="27.689,35.666"]
"apache/incubator-crail" ["l"="28.125,35.096"]
"zrlio/crail" ["l"="28.106,35.078"]
"Mellanox/SparkRDMA" ["l"="28.136,35.129"]
"zrlio/albis" ["l"="28.137,35.071"]
"zrlio/crail-spark-io" ["l"="28.124,35.064"]
"dorthyluu/cs194-winograd" ["l"="27.615,35.317"]
"vrv/FAWN-KV" ["l"="28.34,35.188"]
"alrevuelta/cONNXr" ["l"="-31.577,41.345"]
"kraiskil/onnx2c" ["l"="-31.583,41.368"]
"ofiwg/fabtests" ["l"="28.043,35.217"]
"ofiwg/ofi-guide" ["l"="28.041,35.204"]
"mercury-hpc/mercury" ["l"="-11.025,3.467"]
"daos-stack/cart" ["l"="-11.038,3.453"]
"pmodels/argobots" ["l"="-11.014,3.448"]
"NVlabs/NVBit" ["l"="-9.313,46.572"]
"accel-sim/accel-sim-framework" ["l"="-9.363,46.573"]
"AutomataLab/Subway" ["l"="28.015,35.636"]
"Oneflow-Inc/oneflow-lite" ["l"="27.8,35.753"]
"rapidsai/cucim" ["l"="28.175,35.647"]
"ome/ngff" ["l"="16.207,37.58"]
"AIFM-sys/AIFM" ["l"="28.339,35.215"]
"uclasystem/MemLiner" ["l"="28.387,35.207"]
"uclasystem/Semeru" ["l"="28.369,35.207"]
"pmem/pmdk-examples" ["l"="28.068,35.159"]
"UCLA-SEAL/Semeru" ["l"="28.386,35.195"]
"elevate-lang/elevate" ["l"="27.494,35.663"]
"NEDJIMAbelgacem/graphs_algorithms" ["l"="27.449,35.549"]
"OpenMPDK/SMDK" ["l"="28.229,35.153"]
"EEESlab/CMSIS_NN-INTQ" ["l"="27.344,35.478"]
"rwightman/pytorch-nips2017-attack-example" ["l"="21.554,13.973"]
"OpenACCUserGroup/openacc-users-group" ["l"="28.248,35.447"]
"OpenACCUserGroup/openacc_concept_strategies_book" ["l"="28.203,35.445"]
"trxcllnt/ubuntu-setup" ["l"="28.019,35.535"]
"nets-cs-pub-ro/NDP" ["l"="28.203,35.146"]
"kaist-ina/ns2-xpass" ["l"="28.233,35.124"]
"bytedance/matxscript" ["l"="27.775,35.645"]
"octoml/octoml-profile" ["l"="27.817,35.684"]
"Intel-bigdata/OAP" ["l"="11.466,23.955"]
"Intel-bigdata/spark-adaptive" ["l"="11.433,23.927"]
"nv-legate/legate.numpy" ["l"="28.199,35.61"]
"kaigai/pg_strom" ["l"="28.235,35.497"]
"apache/incubator-madlib" ["l"="11.421,24.155"]
"MethodJiao/VulkanDemo" ["l"="28.005,35.317"]
"MethodJiao/GoSample" ["l"="28.005,35.326"]
"MethodJiao/OCCGraphicDemo" ["l"="28.021,35.321"]
"akingse/desktop_vscode" ["l"="28.015,35.331"]
"boriswinner/RX580-rocM-tensorflow-ubuntu20.4-guide" ["l"="27.625,35.846"]
"uclasystem/dorylus" ["l"="28.411,35.207"]
"uclasystem/bamboo" ["l"="28.439,35.203"]
"CLRX/CLRX-mirror" ["l"="28.278,35.639"]
"SunsetQuest/Asm4GCN" ["l"="28.247,35.612"]
"balidani/gcnasm" ["l"="28.263,35.627"]
"naibaf7/libdnn" ["l"="26.756,35.449"]
"awslabs/ratex" ["l"="27.718,35.634"]
"awslabs/lorien" ["l"="27.708,35.642"]
"xiuxiazhang/KeplerAs" ["l"="27.825,35.417"]
"ycszen/pytorch-ss" ["l"="31.562,36.908"]
"ARM-software/armnn-mlperf" ["l"="27.437,35.48"]
"michael-lehn/ulmBLAS-core" ["l"="27.653,35.251"]
"Meinersbur/pet" ["l"="27.52,35.59"]
"Meinersbur/isl" ["l"="27.507,35.6"]
"CoffeeBeforeArch/python3_crash_course" ["l"="28.121,35.33"]
"CoffeeBeforeArch/cpp_20_samples" ["l"="28.137,35.33"]
"gussmith23/glenside" ["l"="27.54,35.605"]
"WukLab/pDPM" ["l"="28.175,35.142"]
"bytedance/Collie" ["l"="28.201,35.16"]
"host-bench/husky" ["l"="28.172,35.165"]
"zrlio/jNVMf" ["l"="28.102,35.099"]
"zrlio/urdma" ["l"="28.089,35.129"]
"Mellanox/R4H" ["l"="28.088,35.101"]
"minghust/ford" ["l"="28.165,35.155"]
"Pfzuo/Path-Hashing" ["l"="-11.172,3.582"]
"noccframework/nocc" ["l"="28.197,35.072"]
"zrlio/spark-io" ["l"="28.102,35.054"]
"bhSPARSE/Benchmark_SpMV_using_CSR" ["l"="28.137,35.459"]
"HPDL-Group/Merak" ["l"="27.895,35.674"]
"animeshtrivedi/blog" ["l"="28.213,35.267"]
"clusterfarmem/cfm" ["l"="28.306,35.236"]
"project-kona/asplos21-ae" ["l"="28.316,35.227"]
"utsaslab/dinomo" ["l"="28.179,35.116"]
"pg-strom/nvme-strom" ["l"="27.943,35.144"]
"uclasystem/Mako" ["l"="28.406,35.194"]
"mpiwg-tools/tools-issues" ["l"="27.987,35.217"]
"opennvm/nvm-primitives" ["l"="28.34,35.166"]
"opennvm/nvm-fast-swap" ["l"="28.355,35.163"]
"caicloud/taas-examples" ["l"="27.801,35.128"]
"opennvm/nvm-fast-swap-benchmarking-tool" ["l"="28.375,35.154"]
}