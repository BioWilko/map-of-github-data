digraph G {
"JuliaLang/julia" -> "rust-lang/rust" ["e"=1]
"JuliaLang/julia" -> "fonsp/Pluto.jl" ["e"=1]
"JuliaLang/julia" -> "FluxML/Flux.jl" ["e"=1]
"JuliaLang/julia" -> "pytorch/pytorch"
"JuliaLang/julia" -> "scikit-learn/scikit-learn"
"JuliaLang/julia" -> "numpy/numpy" ["e"=1]
"JuliaLang/julia" -> "tensorflow/tensorflow"
"JuliaLang/julia" -> "python/cpython" ["e"=1]
"JuliaLang/julia" -> "google/jax" ["e"=1]
"JuliaLang/julia" -> "neovim/neovim" ["e"=1]
"JuliaLang/julia" -> "vlang/v" ["e"=1]
"JuliaLang/julia" -> "golang/go" ["e"=1]
"JuliaLang/julia" -> "JuliaLang/IJulia.jl" ["e"=1]
"JuliaLang/julia" -> "ziglang/zig" ["e"=1]
"JuliaLang/julia" -> "matplotlib/matplotlib" ["e"=1]
"opencv/opencv" -> "tensorflow/tensorflow"
"opencv/opencv" -> "pytorch/pytorch"
"opencv/opencv" -> "opencv/opencv_contrib"
"opencv/opencv" -> "tensorflow/models"
"opencv/opencv" -> "spmallick/learnopencv"
"opencv/opencv" -> "BVLC/caffe"
"opencv/opencv" -> "keras-team/keras"
"opencv/opencv" -> "tesseract-ocr/tesseract"
"opencv/opencv" -> "pjreddie/darknet"
"opencv/opencv" -> "ageitgey/face_recognition"
"opencv/opencv" -> "FFmpeg/FFmpeg" ["e"=1]
"opencv/opencv" -> "ultralytics/yolov5"
"opencv/opencv" -> "CMU-Perceptual-Computing-Lab/openpose"
"opencv/opencv" -> "scikit-learn/scikit-learn"
"opencv/opencv" -> "facebookresearch/Detectron"
"tensorflow/tensorflow" -> "tensorflow/models"
"tensorflow/tensorflow" -> "pytorch/pytorch"
"tensorflow/tensorflow" -> "scikit-learn/scikit-learn"
"tensorflow/tensorflow" -> "keras-team/keras"
"tensorflow/tensorflow" -> "aymericdamien/TensorFlow-Examples" ["e"=1]
"tensorflow/tensorflow" -> "opencv/opencv"
"tensorflow/tensorflow" -> "BVLC/caffe"
"tensorflow/tensorflow" -> "torvalds/linux" ["e"=1]
"tensorflow/tensorflow" -> "josephmisiti/awesome-machine-learning" ["e"=1]
"tensorflow/tensorflow" -> "vinta/awesome-python" ["e"=1]
"tensorflow/tensorflow" -> "TheAlgorithms/Python" ["e"=1]
"tensorflow/tensorflow" -> "golang/go" ["e"=1]
"tensorflow/tensorflow" -> "facebook/react" ["e"=1]
"tensorflow/tensorflow" -> "kubernetes/kubernetes" ["e"=1]
"tensorflow/tensorflow" -> "sindresorhus/awesome" ["e"=1]
"Russell91/TensorBox" -> "Russell91/ReInspect"
"Russell91/TensorBox" -> "gliese581gg/YOLO_tensorflow"
"Russell91/TensorBox" -> "DrewNF/Tensorflow_Object_Tracking_Video"
"Russell91/TensorBox" -> "zplizzi/tensorflow-fast-rcnn"
"Russell91/TensorBox" -> "mitmul/chainer-faster-rcnn" ["e"=1]
"Russell91/TensorBox" -> "nivwusquorum/tensorflow-deepq" ["e"=1]
"Russell91/TensorBox" -> "ethereon/caffe-tensorflow"
"Russell91/TensorBox" -> "ppwwyyxx/tensorpack"
"Russell91/TensorBox" -> "Guanghan/ROLO" ["e"=1]
"Russell91/TensorBox" -> "Orpine/py-R-FCN"
"Russell91/TensorBox" -> "precedenceguo/mx-rcnn" ["e"=1]
"Russell91/TensorBox" -> "MarvinTeichmann/tensorflow-fcn" ["e"=1]
"Russell91/TensorBox" -> "BichenWuUCB/squeezeDet" ["e"=1]
"Russell91/TensorBox" -> "CharlesShang/TFFRCNN"
"Russell91/TensorBox" -> "jazzsaxmafia/show_attend_and_tell.tensorflow" ["e"=1]
"scikit-learn/scikit-learn" -> "tensorflow/tensorflow"
"scikit-learn/scikit-learn" -> "pytorch/pytorch"
"scikit-learn/scikit-learn" -> "pandas-dev/pandas" ["e"=1]
"scikit-learn/scikit-learn" -> "keras-team/keras"
"scikit-learn/scikit-learn" -> "josephmisiti/awesome-machine-learning" ["e"=1]
"scikit-learn/scikit-learn" -> "numpy/numpy" ["e"=1]
"scikit-learn/scikit-learn" -> "dmlc/xgboost" ["e"=1]
"scikit-learn/scikit-learn" -> "fchollet/keras" ["e"=1]
"scikit-learn/scikit-learn" -> "tensorflow/models"
"scikit-learn/scikit-learn" -> "matplotlib/matplotlib" ["e"=1]
"scikit-learn/scikit-learn" -> "scrapy/scrapy" ["e"=1]
"scikit-learn/scikit-learn" -> "aymericdamien/TensorFlow-Examples" ["e"=1]
"scikit-learn/scikit-learn" -> "openai/gym" ["e"=1]
"scikit-learn/scikit-learn" -> "BVLC/caffe"
"scikit-learn/scikit-learn" -> "scipy/scipy" ["e"=1]
"ufoym/deepo" -> "floydhub/dl-docker"
"ufoym/deepo" -> "NVIDIA/nvidia-docker"
"ufoym/deepo" -> "RedditSota/state-of-the-art-result-for-machine-learning-problems" ["e"=1]
"ufoym/deepo" -> "vahidk/EffectiveTensorflow" ["e"=1]
"ufoym/deepo" -> "facebookresearch/Detectron"
"ufoym/deepo" -> "aleju/imgaug"
"ufoym/deepo" -> "Microsoft/MMdnn"
"ufoym/deepo" -> "facebookresearch/visdom"
"ufoym/deepo" -> "facebookresearch/maskrcnn-benchmark"
"ufoym/deepo" -> "uber/horovod"
"ufoym/deepo" -> "jhfjhfj1/autokeras" ["e"=1]
"ufoym/deepo" -> "uber/pyro" ["e"=1]
"ufoym/deepo" -> "PAIR-code/facets" ["e"=1]
"ufoym/deepo" -> "kjw0612/awesome-deep-vision" ["e"=1]
"ufoym/deepo" -> "kailashahirwar/cheatsheets-ai" ["e"=1]
"facebookresearch/dino" -> "facebookresearch/deit"
"facebookresearch/dino" -> "facebookresearch/vissl"
"facebookresearch/dino" -> "facebookresearch/mae"
"facebookresearch/dino" -> "facebookresearch/moco"
"facebookresearch/dino" -> "lucidrains/vit-pytorch"
"facebookresearch/dino" -> "microsoft/Swin-Transformer"
"facebookresearch/dino" -> "facebookresearch/ConvNeXt"
"facebookresearch/dino" -> "facebookresearch/detr"
"facebookresearch/dino" -> "facebookresearch/moco-v3"
"facebookresearch/dino" -> "facebookresearch/swav"
"facebookresearch/dino" -> "google-research/simclr"
"facebookresearch/dino" -> "openai/CLIP"
"facebookresearch/dino" -> "google-research/vision_transformer"
"facebookresearch/dino" -> "rwightman/pytorch-image-models"
"facebookresearch/dino" -> "mlfoundations/open_clip" ["e"=1]
"WZMIAOMIAO/deep-learning-for-image-processing" -> "ultralytics/yolov5"
"WZMIAOMIAO/deep-learning-for-image-processing" -> "mli/paper-reading"
"WZMIAOMIAO/deep-learning-for-image-processing" -> "xmu-xiaoma666/External-Attention-pytorch"
"WZMIAOMIAO/deep-learning-for-image-processing" -> "open-mmlab/mmdetection"
"WZMIAOMIAO/deep-learning-for-image-processing" -> "rwightman/pytorch-image-models"
"WZMIAOMIAO/deep-learning-for-image-processing" -> "microsoft/Swin-Transformer"
"WZMIAOMIAO/deep-learning-for-image-processing" -> "lucidrains/vit-pytorch"
"WZMIAOMIAO/deep-learning-for-image-processing" -> "pytorch/vision"
"WZMIAOMIAO/deep-learning-for-image-processing" -> "d2l-ai/d2l-zh" ["e"=1]
"WZMIAOMIAO/deep-learning-for-image-processing" -> "jacobgil/pytorch-grad-cam"
"WZMIAOMIAO/deep-learning-for-image-processing" -> "labmlai/annotated_deep_learning_paper_implementations"
"WZMIAOMIAO/deep-learning-for-image-processing" -> "ultralytics/yolov3"
"WZMIAOMIAO/deep-learning-for-image-processing" -> "ShusenTang/Dive-into-DL-PyTorch" ["e"=1]
"WZMIAOMIAO/deep-learning-for-image-processing" -> "Megvii-BaseDetection/YOLOX"
"WZMIAOMIAO/deep-learning-for-image-processing" -> "TingsongYu/PyTorch_Tutorial" ["e"=1]
"cmusatyalab/openface" -> "davidsandberg/facenet"
"cmusatyalab/openface" -> "TadasBaltrusaitis/OpenFace"
"cmusatyalab/openface" -> "davisking/dlib"
"cmusatyalab/openface" -> "ageitgey/face_recognition"
"cmusatyalab/openface" -> "deepinsight/insightface"
"cmusatyalab/openface" -> "kpzhang93/MTCNN_face_detection_alignment"
"cmusatyalab/openface" -> "seetaface/SeetaFaceEngine"
"cmusatyalab/openface" -> "facebookresearch/Detectron"
"cmusatyalab/openface" -> "ShiqiYu/libfacedetection"
"cmusatyalab/openface" -> "kjw0612/awesome-deep-vision" ["e"=1]
"cmusatyalab/openface" -> "fchollet/keras" ["e"=1]
"cmusatyalab/openface" -> "BVLC/caffe"
"cmusatyalab/openface" -> "pjreddie/darknet"
"cmusatyalab/openface" -> "CMU-Perceptual-Computing-Lab/openpose"
"cmusatyalab/openface" -> "rbgirshick/py-faster-rcnn"
"keras-team/keras-applications" -> "keras-team/keras-preprocessing" ["e"=1]
"keras-team/keras-applications" -> "fchollet/deep-learning-models"
"keras-team/keras-applications" -> "keras-team/keras-contrib" ["e"=1]
"keras-team/keras-applications" -> "qubvel/classification_models"
"keras-team/keras-applications" -> "qubvel/efficientnet"
"keras-team/keras-applications" -> "fizyr/keras-retinanet"
"keras-team/keras-applications" -> "keras-team/keras-tuner" ["e"=1]
"keras-team/keras-applications" -> "qqwweee/keras-yolo3"
"keras-team/keras-applications" -> "bonlime/keras-deeplab-v3-plus" ["e"=1]
"keras-team/keras-applications" -> "qubvel/segmentation_models"
"keras-team/keras-applications" -> "pierluigiferrari/ssd_keras"
"keras-team/keras-applications" -> "flyyufelix/cnn_finetune"
"keras-team/keras-applications" -> "eriklindernoren/Keras-GAN" ["e"=1]
"keras-team/keras-applications" -> "keras-team/autokeras" ["e"=1]
"keras-team/keras-applications" -> "tensorpack/tensorpack"
"ageitgey/face_recognition" -> "davidsandberg/facenet"
"ageitgey/face_recognition" -> "cmusatyalab/openface"
"ageitgey/face_recognition" -> "tensorflow/models"
"ageitgey/face_recognition" -> "deepfakes/faceswap" ["e"=1]
"ageitgey/face_recognition" -> "deepinsight/insightface"
"ageitgey/face_recognition" -> "facebookresearch/Detectron"
"ageitgey/face_recognition" -> "opencv/opencv"
"ageitgey/face_recognition" -> "aymericdamien/TensorFlow-Examples" ["e"=1]
"ageitgey/face_recognition" -> "keras-team/keras"
"ageitgey/face_recognition" -> "davisking/dlib"
"ageitgey/face_recognition" -> "tensorflow/tensorflow"
"ageitgey/face_recognition" -> "pytorch/pytorch"
"ageitgey/face_recognition" -> "CMU-Perceptual-Computing-Lab/openpose"
"ageitgey/face_recognition" -> "matterport/Mask_RCNN"
"ageitgey/face_recognition" -> "iperov/DeepFaceLab" ["e"=1]
"AlexeyAB/darknet" -> "pjreddie/darknet"
"AlexeyAB/darknet" -> "ultralytics/yolov5"
"AlexeyAB/darknet" -> "ultralytics/yolov3"
"AlexeyAB/darknet" -> "open-mmlab/mmdetection"
"AlexeyAB/darknet" -> "tzutalin/labelImg"
"AlexeyAB/darknet" -> "facebookresearch/detectron2"
"AlexeyAB/darknet" -> "Tianxiaomo/pytorch-YOLOv4"
"AlexeyAB/darknet" -> "qqwweee/keras-yolo3"
"AlexeyAB/darknet" -> "eriklindernoren/PyTorch-YOLOv3"
"AlexeyAB/darknet" -> "lutzroeder/netron"
"AlexeyAB/darknet" -> "matterport/Mask_RCNN"
"AlexeyAB/darknet" -> "hoya012/deep_learning_object_detection"
"AlexeyAB/darknet" -> "facebookresearch/Detectron"
"AlexeyAB/darknet" -> "Megvii-BaseDetection/YOLOX"
"AlexeyAB/darknet" -> "deepinsight/insightface"
"david8862/keras-YOLOv3-model-set" -> "hunglc007/tensorflow-yolov4-tflite"
"david8862/keras-YOLOv3-model-set" -> "Ma-Dan/keras-yolo4" ["e"=1]
"david8862/keras-YOLOv3-model-set" -> "miemie2013/Keras-YOLOv4" ["e"=1]
"david8862/keras-YOLOv3-model-set" -> "xuannianz/EfficientDet"
"david8862/keras-YOLOv3-model-set" -> "zzh8829/yolov3-tf2"
"david8862/keras-YOLOv3-model-set" -> "emadboctorx/yolov3-keras-tf2"
"david8862/keras-YOLOv3-model-set" -> "fsx950223/mobilenetv2-yolov3"
"david8862/keras-YOLOv3-model-set" -> "bubbliiiing/yolov4-keras" ["e"=1]
"david8862/keras-YOLOv3-model-set" -> "WongKinYiu/CrossStagePartialNetworks"
"david8862/keras-YOLOv3-model-set" -> "YunYang1994/TensorFlow2.0-Examples"
"david8862/keras-YOLOv3-model-set" -> "experiencor/keras-yolo3"
"david8862/keras-YOLOv3-model-set" -> "Adamdad/keras-YOLOv3-mobilenet"
"david8862/keras-YOLOv3-model-set" -> "TNTWEN/OpenVINO-YOLOV4" ["e"=1]
"david8862/keras-YOLOv3-model-set" -> "PengyiZhang/SlimYOLOv3" ["e"=1]
"david8862/keras-YOLOv3-model-set" -> "PINTO0309/OpenVINO-YoloV3" ["e"=1]
"tanglang96/DataLoaders_DALI" -> "Lyken17/Efficient-PyTorch"
"tanglang96/DataLoaders_DALI" -> "megvii-model/ShuffleNet-Series"
"tanglang96/DataLoaders_DALI" -> "NVIDIA/DALI"
"tanglang96/DataLoaders_DALI" -> "JiahuiYu/slimmable_networks" ["e"=1]
"tanglang96/DataLoaders_DALI" -> "yaysummeriscoming/DALI_pytorch_demo"
"tanglang96/DataLoaders_DALI" -> "chenxin061/pdarts" ["e"=1]
"tanglang96/DataLoaders_DALI" -> "Lyken17/pytorch-OpCounter"
"tanglang96/DataLoaders_DALI" -> "tczhangzhi/pytorch-distributed"
"tanglang96/DataLoaders_DALI" -> "facebookresearch/mobile-vision" ["e"=1]
"tanglang96/DataLoaders_DALI" -> "facebookresearch/pycls"
"tanglang96/DataLoaders_DALI" -> "liuzechun/MetaPruning" ["e"=1]
"tanglang96/DataLoaders_DALI" -> "mit-han-lab/ProxylessNAS" ["e"=1]
"tanglang96/DataLoaders_DALI" -> "guan-yuan/awesome-AutoML-and-Lightweight-Models" ["e"=1]
"tanglang96/DataLoaders_DALI" -> "tanglang96/MDENAS" ["e"=1]
"tanglang96/DataLoaders_DALI" -> "khanrc/pt.darts" ["e"=1]
"ultralytics/yolov3" -> "eriklindernoren/PyTorch-YOLOv3"
"ultralytics/yolov3" -> "Tianxiaomo/pytorch-YOLOv4"
"ultralytics/yolov3" -> "open-mmlab/mmdetection"
"ultralytics/yolov3" -> "xingyizhou/CenterNet"
"ultralytics/yolov3" -> "ultralytics/yolov5"
"ultralytics/yolov3" -> "AlexeyAB/darknet"
"ultralytics/yolov3" -> "ayooshkathuria/pytorch-yolo-v3"
"ultralytics/yolov3" -> "qqwweee/keras-yolo3"
"ultralytics/yolov3" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"ultralytics/yolov3" -> "pjreddie/darknet"
"ultralytics/yolov3" -> "Megvii-BaseDetection/YOLOX"
"ultralytics/yolov3" -> "facebookresearch/detectron2"
"ultralytics/yolov3" -> "hoya012/deep_learning_object_detection"
"ultralytics/yolov3" -> "facebookresearch/maskrcnn-benchmark"
"ultralytics/yolov3" -> "jwyang/faster-rcnn.pytorch"
"amusi/CVPR2022-Papers-with-Code" -> "extreme-assistant/CVPR2022-Paper-Code-Interpretation"
"amusi/CVPR2022-Papers-with-Code" -> "amusi/ECCV2022-Papers-with-Code"
"amusi/CVPR2022-Papers-with-Code" -> "amusi/ICCV2021-Papers-with-Code"
"amusi/CVPR2022-Papers-with-Code" -> "microsoft/Swin-Transformer"
"amusi/CVPR2022-Papers-with-Code" -> "xmu-xiaoma666/External-Attention-pytorch"
"amusi/CVPR2022-Papers-with-Code" -> "facebookresearch/ConvNeXt"
"amusi/CVPR2022-Papers-with-Code" -> "lucidrains/vit-pytorch"
"amusi/CVPR2022-Papers-with-Code" -> "MenghaoGuo/Awesome-Vision-Attentions"
"amusi/CVPR2022-Papers-with-Code" -> "extreme-assistant/ICCV2021-Paper-Code-Interpretation"
"amusi/CVPR2022-Papers-with-Code" -> "dk-liang/Awesome-Visual-Transformer"
"amusi/CVPR2022-Papers-with-Code" -> "facebookresearch/mae"
"amusi/CVPR2022-Papers-with-Code" -> "yenchenlin/awesome-NeRF" ["e"=1]
"amusi/CVPR2022-Papers-with-Code" -> "mli/paper-reading"
"amusi/CVPR2022-Papers-with-Code" -> "open-mmlab/mmsegmentation"
"amusi/CVPR2022-Papers-with-Code" -> "huawei-noah/Efficient-AI-Backbones"
"extreme-assistant/CVPR2022-Paper-Code-Interpretation" -> "amusi/CVPR2022-Papers-with-Code"
"extreme-assistant/CVPR2022-Paper-Code-Interpretation" -> "extreme-assistant/ICCV2021-Paper-Code-Interpretation"
"extreme-assistant/CVPR2022-Paper-Code-Interpretation" -> "xmu-xiaoma666/External-Attention-pytorch"
"extreme-assistant/CVPR2022-Paper-Code-Interpretation" -> "microsoft/Swin-Transformer"
"extreme-assistant/CVPR2022-Paper-Code-Interpretation" -> "MenghaoGuo/Awesome-Vision-Attentions"
"extreme-assistant/CVPR2022-Paper-Code-Interpretation" -> "WZMIAOMIAO/deep-learning-for-image-processing"
"extreme-assistant/CVPR2022-Paper-Code-Interpretation" -> "amusi/ICCV2021-Papers-with-Code"
"extreme-assistant/CVPR2022-Paper-Code-Interpretation" -> "mli/paper-reading"
"extreme-assistant/CVPR2022-Paper-Code-Interpretation" -> "amusi/CVPR2021-Papers-with-Code"
"extreme-assistant/CVPR2022-Paper-Code-Interpretation" -> "52CV/CVPR-2021-Papers"
"extreme-assistant/CVPR2022-Paper-Code-Interpretation" -> "amusi/ECCV2022-Papers-with-Code"
"extreme-assistant/CVPR2022-Paper-Code-Interpretation" -> "facebookresearch/ConvNeXt"
"extreme-assistant/CVPR2022-Paper-Code-Interpretation" -> "DWCTOD/CVPR2022-Papers-with-Code-Demo"
"extreme-assistant/CVPR2022-Paper-Code-Interpretation" -> "lucidrains/vit-pytorch"
"extreme-assistant/CVPR2022-Paper-Code-Interpretation" -> "open-mmlab/mmsegmentation"
"mli/paper-reading" -> "d2l-ai/d2l-zh" ["e"=1]
"mli/paper-reading" -> "microsoft/Swin-Transformer"
"mli/paper-reading" -> "WZMIAOMIAO/deep-learning-for-image-processing"
"mli/paper-reading" -> "rwightman/pytorch-image-models"
"mli/paper-reading" -> "lucidrains/vit-pytorch"
"mli/paper-reading" -> "labmlai/annotated_deep_learning_paper_implementations"
"mli/paper-reading" -> "openai/CLIP"
"mli/paper-reading" -> "xmu-xiaoma666/External-Attention-pytorch"
"mli/paper-reading" -> "dair-ai/ml-visuals"
"mli/paper-reading" -> "open-mmlab/mmdetection"
"mli/paper-reading" -> "facebookresearch/segment-anything" ["e"=1]
"mli/paper-reading" -> "ShusenTang/Dive-into-DL-PyTorch" ["e"=1]
"mli/paper-reading" -> "kaixindelele/ChatPaper" ["e"=1]
"mli/paper-reading" -> "zergtant/pytorch-handbook" ["e"=1]
"mli/paper-reading" -> "hpcaitech/ColossalAI" ["e"=1]
"microsoft/VoTT" -> "openvinotoolkit/cvat"
"microsoft/VoTT" -> "opencv/cvat"
"microsoft/VoTT" -> "zzh8829/yolov3-tf2"
"microsoft/VoTT" -> "SkalskiP/make-sense"
"microsoft/VoTT" -> "wkentaro/labelme"
"microsoft/VoTT" -> "heartexlabs/awesome-data-labeling"
"microsoft/VoTT" -> "tzutalin/labelImg"
"microsoft/VoTT" -> "jsbroks/coco-annotator"
"microsoft/VoTT" -> "YunYang1994/tensorflow-yolov3"
"microsoft/VoTT" -> "heartexlabs/label-studio"
"microsoft/VoTT" -> "abewley/sort" ["e"=1]
"microsoft/VoTT" -> "AlexeyAB/Yolo_mark"
"microsoft/VoTT" -> "qqwweee/keras-yolo3"
"microsoft/VoTT" -> "albumentations-team/albumentations"
"microsoft/VoTT" -> "nwojke/deep_sort" ["e"=1]
"pjreddie/darknet" -> "AlexeyAB/darknet"
"pjreddie/darknet" -> "tzutalin/labelImg"
"pjreddie/darknet" -> "facebookresearch/Detectron"
"pjreddie/darknet" -> "ultralytics/yolov3"
"pjreddie/darknet" -> "qqwweee/keras-yolo3"
"pjreddie/darknet" -> "thtrieu/darkflow"
"pjreddie/darknet" -> "matterport/Mask_RCNN"
"pjreddie/darknet" -> "open-mmlab/mmdetection"
"pjreddie/darknet" -> "rbgirshick/py-faster-rcnn"
"pjreddie/darknet" -> "tensorflow/models"
"pjreddie/darknet" -> "ultralytics/yolov5"
"pjreddie/darknet" -> "eriklindernoren/PyTorch-YOLOv3"
"pjreddie/darknet" -> "facebookresearch/detectron2"
"pjreddie/darknet" -> "BVLC/caffe"
"pjreddie/darknet" -> "weiliu89/caffe"
"BUPTLdy/Caffe_Code_Analysis" -> "soeaver/caffe-model"
"BUPTLdy/Caffe_Code_Analysis" -> "shicai/Caffe_Manual"
"BUPTLdy/Caffe_Code_Analysis" -> "shicai/MobileNet-Caffe"
"BUPTLdy/Caffe_Code_Analysis" -> "MichaelXin/Awesome-Caffe"
"BUPTLdy/Caffe_Code_Analysis" -> "farmingyard/ShuffleNet"
"BUPTLdy/Caffe_Code_Analysis" -> "xialuxi/arcface-caffe" ["e"=1]
"BUPTLdy/Caffe_Code_Analysis" -> "xxradon/PytorchToCaffe"
"BUPTLdy/Caffe_Code_Analysis" -> "yonghenglh6/DepthwiseConvolution"
"BUPTLdy/Caffe_Code_Analysis" -> "weiliu89/caffe"
"BUPTLdy/Caffe_Code_Analysis" -> "flame/how-to-optimize-gemm" ["e"=1]
"BUPTLdy/Caffe_Code_Analysis" -> "hgpvision/darknet"
"BUPTLdy/Caffe_Code_Analysis" -> "LitLeo/TensorRT_Tutorial"
"D-X-Y/ResNeXt-DenseNet" -> "prlz77/ResNeXt.pytorch"
"D-X-Y/ResNeXt-DenseNet" -> "D-X-Y/SAN" ["e"=1]
"D-X-Y/ResNeXt-DenseNet" -> "D-X-Y/GDAS" ["e"=1]
"D-X-Y/ResNeXt-DenseNet" -> "visinf/dpp" ["e"=1]
"D-X-Y/ResNeXt-DenseNet" -> "D-X-Y/caffe-faster-rcnn"
"InFoCusp/tf_cnnvis" -> "conan7882/CNN-Visualization"
"InFoCusp/tf_cnnvis" -> "yosinski/deep-visualization-toolbox"
"InFoCusp/tf_cnnvis" -> "raghakot/keras-vis" ["e"=1]
"InFoCusp/tf_cnnvis" -> "kvfrans/feature-visualization" ["e"=1]
"InFoCusp/tf_cnnvis" -> "insikk/Grad-CAM-tensorflow" ["e"=1]
"InFoCusp/tf_cnnvis" -> "merantix/picasso"
"InFoCusp/tf_cnnvis" -> "jacobgil/keras-cam" ["e"=1]
"InFoCusp/tf_cnnvis" -> "keplr-io/quiver" ["e"=1]
"InFoCusp/tf_cnnvis" -> "gaohuang/MSDNet"
"InFoCusp/tf_cnnvis" -> "smallcorgi/Faster-RCNN_TF"
"InFoCusp/tf_cnnvis" -> "ethereon/caffe-tensorflow"
"InFoCusp/tf_cnnvis" -> "ppwwyyxx/tensorpack"
"InFoCusp/tf_cnnvis" -> "ry/tensorflow-resnet"
"InFoCusp/tf_cnnvis" -> "Guanghan/ROLO" ["e"=1]
"InFoCusp/tf_cnnvis" -> "buriburisuri/ac-gan" ["e"=1]
"chenyuntc/simple-faster-rcnn-pytorch" -> "jwyang/faster-rcnn.pytorch"
"chenyuntc/simple-faster-rcnn-pytorch" -> "ruotianluo/pytorch-faster-rcnn"
"chenyuntc/simple-faster-rcnn-pytorch" -> "longcw/faster_rcnn_pytorch"
"chenyuntc/simple-faster-rcnn-pytorch" -> "amdegroot/ssd.pytorch"
"chenyuntc/simple-faster-rcnn-pytorch" -> "eriklindernoren/PyTorch-YOLOv3"
"chenyuntc/simple-faster-rcnn-pytorch" -> "facebookresearch/maskrcnn-benchmark"
"chenyuntc/simple-faster-rcnn-pytorch" -> "rbgirshick/py-faster-rcnn"
"chenyuntc/simple-faster-rcnn-pytorch" -> "amusi/awesome-object-detection"
"chenyuntc/simple-faster-rcnn-pytorch" -> "open-mmlab/mmdetection"
"chenyuntc/simple-faster-rcnn-pytorch" -> "hoya012/deep_learning_object_detection"
"chenyuntc/simple-faster-rcnn-pytorch" -> "xingyizhou/CenterNet"
"chenyuntc/simple-faster-rcnn-pytorch" -> "endernewton/tf-faster-rcnn"
"chenyuntc/simple-faster-rcnn-pytorch" -> "roytseng-tw/Detectron.pytorch"
"chenyuntc/simple-faster-rcnn-pytorch" -> "tianzhi0549/FCOS"
"chenyuntc/simple-faster-rcnn-pytorch" -> "chainer/chainercv"
"eriklindernoren/PyTorch-YOLOv3" -> "ultralytics/yolov3"
"eriklindernoren/PyTorch-YOLOv3" -> "ayooshkathuria/pytorch-yolo-v3"
"eriklindernoren/PyTorch-YOLOv3" -> "jwyang/faster-rcnn.pytorch"
"eriklindernoren/PyTorch-YOLOv3" -> "amdegroot/ssd.pytorch"
"eriklindernoren/PyTorch-YOLOv3" -> "xingyizhou/CenterNet"
"eriklindernoren/PyTorch-YOLOv3" -> "qqwweee/keras-yolo3"
"eriklindernoren/PyTorch-YOLOv3" -> "Tianxiaomo/pytorch-YOLOv4"
"eriklindernoren/PyTorch-YOLOv3" -> "facebookresearch/maskrcnn-benchmark"
"eriklindernoren/PyTorch-YOLOv3" -> "open-mmlab/mmdetection"
"eriklindernoren/PyTorch-YOLOv3" -> "ayooshkathuria/YOLO_v3_tutorial_from_scratch"
"eriklindernoren/PyTorch-YOLOv3" -> "amusi/awesome-object-detection"
"eriklindernoren/PyTorch-YOLOv3" -> "hoya012/deep_learning_object_detection"
"eriklindernoren/PyTorch-YOLOv3" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"eriklindernoren/PyTorch-YOLOv3" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"eriklindernoren/PyTorch-YOLOv3" -> "chenyuntc/simple-faster-rcnn-pytorch"
"handong1587/handong1587.github.io" -> "KaiyangZhou/deep-person-reid" ["e"=1]
"handong1587/handong1587.github.io" -> "msracver/Deformable-ConvNets"
"handong1587/handong1587.github.io" -> "foolwood/benchmark_results" ["e"=1]
"handong1587/handong1587.github.io" -> "Cysu/open-reid" ["e"=1]
"handong1587/handong1587.github.io" -> "layumi/Person_reID_baseline_pytorch" ["e"=1]
"handong1587/handong1587.github.io" -> "amdegroot/ssd.pytorch"
"handong1587/handong1587.github.io" -> "weiliu89/caffe"
"handong1587/handong1587.github.io" -> "tangzhenyu/SemanticSegmentation_DL" ["e"=1]
"handong1587/handong1587.github.io" -> "amusi/awesome-object-detection"
"handong1587/handong1587.github.io" -> "mrgloom/awesome-semantic-segmentation"
"handong1587/handong1587.github.io" -> "rbgirshick/py-faster-rcnn"
"handong1587/handong1587.github.io" -> "chongyangtao/Awesome-Scene-Text-Recognition" ["e"=1]
"handong1587/handong1587.github.io" -> "extreme-assistant/cvpr2019"
"handong1587/handong1587.github.io" -> "michuanhaohao/reid-strong-baseline" ["e"=1]
"handong1587/handong1587.github.io" -> "nightrome/really-awesome-gan" ["e"=1]
"jcjohnson/cnn-benchmarks" -> "soumith/convnet-benchmarks" ["e"=1]
"jcjohnson/cnn-benchmarks" -> "facebook/fb.resnet.torch"
"jcjohnson/cnn-benchmarks" -> "KaimingHe/deep-residual-networks"
"jcjohnson/cnn-benchmarks" -> "openimages/dataset"
"jcjohnson/cnn-benchmarks" -> "daijifeng001/R-FCN"
"jcjohnson/cnn-benchmarks" -> "ethereon/caffe-tensorflow"
"jcjohnson/cnn-benchmarks" -> "liuzhuang13/DenseNet"
"jcjohnson/cnn-benchmarks" -> "DeepScale/SqueezeNet"
"jcjohnson/cnn-benchmarks" -> "ppwwyyxx/tensorpack"
"jcjohnson/cnn-benchmarks" -> "weiliu89/caffe"
"jcjohnson/cnn-benchmarks" -> "facebookresearch/ResNeXt"
"jcjohnson/cnn-benchmarks" -> "albanie/convnet-burden"
"jcjohnson/cnn-benchmarks" -> "soeaver/caffe-model"
"jcjohnson/cnn-benchmarks" -> "handong1587/handong1587.github.io"
"jcjohnson/cnn-benchmarks" -> "kjw0612/awesome-deep-vision" ["e"=1]
"kuangliu/pytorch-cifar" -> "weiaicunzai/pytorch-cifar100"
"kuangliu/pytorch-cifar" -> "Cadene/pretrained-models.pytorch"
"kuangliu/pytorch-cifar" -> "bearpaw/pytorch-classification"
"kuangliu/pytorch-cifar" -> "akamaster/pytorch_resnet_cifar10"
"kuangliu/pytorch-cifar" -> "pytorch/examples"
"kuangliu/pytorch-cifar" -> "aaron-xichen/pytorch-playground"
"kuangliu/pytorch-cifar" -> "utkuozbulak/pytorch-cnn-visualizations"
"kuangliu/pytorch-cifar" -> "pytorch/vision"
"kuangliu/pytorch-cifar" -> "lukemelas/EfficientNet-PyTorch"
"kuangliu/pytorch-cifar" -> "rwightman/pytorch-image-models"
"kuangliu/pytorch-cifar" -> "jwyang/faster-rcnn.pytorch"
"kuangliu/pytorch-cifar" -> "Lyken17/pytorch-OpCounter"
"kuangliu/pytorch-cifar" -> "lucidrains/vit-pytorch"
"kuangliu/pytorch-cifar" -> "amdegroot/ssd.pytorch"
"kuangliu/pytorch-cifar" -> "eriklindernoren/PyTorch-GAN" ["e"=1]
"oeway/pytorch-deform-conv" -> "chengdazhi/Deformable-Convolution-V2-PyTorch"
"oeway/pytorch-deform-conv" -> "1zb/deformable-convolution-pytorch"
"oeway/pytorch-deform-conv" -> "msracver/Deformable-ConvNets"
"oeway/pytorch-deform-conv" -> "ChunhuanLin/deform_conv_pytorch"
"oeway/pytorch-deform-conv" -> "4uiiurz1/pytorch-deform-conv-v2"
"oeway/pytorch-deform-conv" -> "felixlaumon/deform-conv"
"oeway/pytorch-deform-conv" -> "isht7/pytorch-deeplab-resnet" ["e"=1]
"oeway/pytorch-deform-conv" -> "vacancy/Synchronized-BatchNorm-PyTorch" ["e"=1]
"oeway/pytorch-deform-conv" -> "longcw/faster_rcnn_pytorch"
"oeway/pytorch-deform-conv" -> "CharlesShang/DCNv2"
"oeway/pytorch-deform-conv" -> "fxia22/stn.pytorch" ["e"=1]
"oeway/pytorch-deform-conv" -> "ruinmessi/RFBNet"
"oeway/pytorch-deform-conv" -> "jwyang/fpn.pytorch"
"oeway/pytorch-deform-conv" -> "kastnerkyle/deform-conv"
"oeway/pytorch-deform-conv" -> "ruotianluo/pytorch-faster-rcnn"
"pytorch/pytorch" -> "tensorflow/tensorflow"
"pytorch/pytorch" -> "keras-team/keras"
"pytorch/pytorch" -> "scikit-learn/scikit-learn"
"pytorch/pytorch" -> "tensorflow/models"
"pytorch/pytorch" -> "pytorch/examples"
"pytorch/pytorch" -> "huggingface/transformers" ["e"=1]
"pytorch/pytorch" -> "yunjey/pytorch-tutorial" ["e"=1]
"pytorch/pytorch" -> "opencv/opencv"
"pytorch/pytorch" -> "facebookresearch/Detectron"
"pytorch/pytorch" -> "pytorch/vision"
"pytorch/pytorch" -> "BVLC/caffe"
"pytorch/pytorch" -> "google/jax" ["e"=1]
"pytorch/pytorch" -> "google-research/bert" ["e"=1]
"pytorch/pytorch" -> "aymericdamien/TensorFlow-Examples" ["e"=1]
"pytorch/pytorch" -> "openai/gym" ["e"=1]
"ruiminshen/yolo2-pytorch" -> "marvis/pytorch-yolo2"
"ruiminshen/yolo2-pytorch" -> "longcw/yolo2-pytorch"
"ruiminshen/yolo2-pytorch" -> "glample/Arnold" ["e"=1]
"ruiminshen/yolo2-pytorch" -> "ruiminshen/yolo-tf"
"ruiminshen/yolo2-pytorch" -> "kuangliu/torchcv"
"ruiminshen/yolo2-pytorch" -> "marvis/pytorch-yolo3"
"ruiminshen/yolo2-pytorch" -> "ZijunDeng/pytorch-semantic-segmentation" ["e"=1]
"ruiminshen/yolo2-pytorch" -> "felixgwu/mask_rcnn_pytorch"
"ruiminshen/yolo2-pytorch" -> "ignacio-rocco/detectorch"
"ruiminshen/yolo2-pytorch" -> "soeaver/Pytorch_Mask_RCNN"
"ruiminshen/yolo2-pytorch" -> "Breakend/gym-extensions" ["e"=1]
"ruiminshen/yolo2-pytorch" -> "longcw/RoIAlign.pytorch"
"ruiminshen/yolo2-pytorch" -> "PureDiors/pytorch_RFCN"
"ruiminshen/yolo2-pytorch" -> "c0nn3r/RetinaNet"
"ruiminshen/yolo2-pytorch" -> "marvis/pytorch-caffe"
"szagoruyko/pytorchviz" -> "sksq96/pytorch-summary"
"szagoruyko/pytorchviz" -> "waleedka/hiddenlayer"
"szagoruyko/pytorchviz" -> "lanpa/tensorboardX"
"szagoruyko/pytorchviz" -> "facebookresearch/visdom"
"szagoruyko/pytorchviz" -> "NVIDIA/apex"
"szagoruyko/pytorchviz" -> "lanpa/tensorboard-pytorch"
"szagoruyko/pytorchviz" -> "utkuozbulak/pytorch-cnn-visualizations"
"szagoruyko/pytorchviz" -> "pytorch/ignite"
"szagoruyko/pytorchviz" -> "Lyken17/pytorch-OpCounter"
"szagoruyko/pytorchviz" -> "arogozhnikov/einops"
"szagoruyko/pytorchviz" -> "Cadene/pretrained-models.pytorch"
"szagoruyko/pytorchviz" -> "meetshah1995/pytorch-semseg" ["e"=1]
"szagoruyko/pytorchviz" -> "pytorch/captum"
"szagoruyko/pytorchviz" -> "ncullen93/torchsample"
"szagoruyko/pytorchviz" -> "pytorch/tnt"
"yosinski/deep-visualization-toolbox" -> "KaimingHe/deep-residual-networks"
"yosinski/deep-visualization-toolbox" -> "InFoCusp/tf_cnnvis"
"yosinski/deep-visualization-toolbox" -> "ethereon/caffe-tensorflow"
"yosinski/deep-visualization-toolbox" -> "raghakot/keras-vis" ["e"=1]
"yosinski/deep-visualization-toolbox" -> "liuzhuang13/DenseNet"
"yosinski/deep-visualization-toolbox" -> "utkuozbulak/pytorch-cnn-visualizations"
"yosinski/deep-visualization-toolbox" -> "rbgirshick/py-faster-rcnn"
"yosinski/deep-visualization-toolbox" -> "kjw0612/awesome-deep-vision" ["e"=1]
"yosinski/deep-visualization-toolbox" -> "facebook/fb.resnet.torch"
"yosinski/deep-visualization-toolbox" -> "NVIDIA/DIGITS" ["e"=1]
"yosinski/deep-visualization-toolbox" -> "soumith/convnet-benchmarks" ["e"=1]
"yosinski/deep-visualization-toolbox" -> "DeepScale/SqueezeNet"
"yosinski/deep-visualization-toolbox" -> "facebookresearch/visdom"
"yosinski/deep-visualization-toolbox" -> "Newmu/dcgan_code" ["e"=1]
"yosinski/deep-visualization-toolbox" -> "vdumoulin/conv_arithmetic"
"HarisIqbal88/PlotNeuralNet" -> "rwightman/pytorch-image-models"
"HarisIqbal88/PlotNeuralNet" -> "lutzroeder/netron"
"HarisIqbal88/PlotNeuralNet" -> "open-mmlab/mmdetection"
"HarisIqbal88/PlotNeuralNet" -> "facebookresearch/detectron2"
"HarisIqbal88/PlotNeuralNet" -> "google/jax" ["e"=1]
"HarisIqbal88/PlotNeuralNet" -> "lucidrains/vit-pytorch"
"HarisIqbal88/PlotNeuralNet" -> "PyTorchLightning/pytorch-lightning"
"HarisIqbal88/PlotNeuralNet" -> "rusty1s/pytorch_geometric" ["e"=1]
"HarisIqbal88/PlotNeuralNet" -> "google-research/google-research" ["e"=1]
"HarisIqbal88/PlotNeuralNet" -> "eriklindernoren/PyTorch-GAN" ["e"=1]
"HarisIqbal88/PlotNeuralNet" -> "aleju/imgaug"
"HarisIqbal88/PlotNeuralNet" -> "utkuozbulak/pytorch-cnn-visualizations"
"HarisIqbal88/PlotNeuralNet" -> "vdumoulin/conv_arithmetic"
"HarisIqbal88/PlotNeuralNet" -> "pytorch/examples"
"HarisIqbal88/PlotNeuralNet" -> "dair-ai/ml-visuals"
"lutzroeder/netron" -> "onnx/onnx"
"lutzroeder/netron" -> "open-mmlab/mmdetection"
"lutzroeder/netron" -> "Tencent/ncnn"
"lutzroeder/netron" -> "rwightman/pytorch-image-models"
"lutzroeder/netron" -> "facebookresearch/detectron2"
"lutzroeder/netron" -> "NVIDIA/TensorRT"
"lutzroeder/netron" -> "aleju/imgaug"
"lutzroeder/netron" -> "ultralytics/yolov5"
"lutzroeder/netron" -> "ultralytics/yolov3"
"lutzroeder/netron" -> "HarisIqbal88/PlotNeuralNet"
"lutzroeder/netron" -> "deepinsight/insightface"
"lutzroeder/netron" -> "AlexeyAB/darknet"
"lutzroeder/netron" -> "alibaba/MNN"
"lutzroeder/netron" -> "pjreddie/darknet"
"lutzroeder/netron" -> "tzutalin/labelImg"
"tensorflow/models" -> "tensorflow/tensorflow"
"tensorflow/models" -> "aymericdamien/TensorFlow-Examples" ["e"=1]
"tensorflow/models" -> "pytorch/pytorch"
"tensorflow/models" -> "facebookresearch/Detectron"
"tensorflow/models" -> "matterport/Mask_RCNN"
"tensorflow/models" -> "keras-team/keras"
"tensorflow/models" -> "google-research/bert" ["e"=1]
"tensorflow/models" -> "BVLC/caffe"
"tensorflow/models" -> "scikit-learn/scikit-learn"
"tensorflow/models" -> "fchollet/keras" ["e"=1]
"tensorflow/models" -> "josephmisiti/awesome-machine-learning" ["e"=1]
"tensorflow/models" -> "scutan90/DeepLearning-500-questions" ["e"=1]
"tensorflow/models" -> "pjreddie/darknet"
"tensorflow/models" -> "open-mmlab/mmdetection"
"tensorflow/models" -> "tzutalin/labelImg"
"Syllo/nvtop" -> "wookayin/gpustat"
"Syllo/nvtop" -> "XuehaiPan/nvitop"
"Syllo/nvtop" -> "NVIDIA/apex"
"Syllo/nvtop" -> "arogozhnikov/einops"
"Syllo/nvtop" -> "cupy/cupy"
"Syllo/nvtop" -> "NVIDIA/DALI"
"Syllo/nvtop" -> "NVIDIA/nvidia-docker"
"Syllo/nvtop" -> "pytorch/ignite"
"Syllo/nvtop" -> "albu/albumentations"
"Syllo/nvtop" -> "aristocratos/btop" ["e"=1]
"Syllo/nvtop" -> "sksq96/pytorch-summary"
"Syllo/nvtop" -> "IDSIA/sacred" ["e"=1]
"Syllo/nvtop" -> "flightlessmango/MangoHud" ["e"=1]
"Syllo/nvtop" -> "lanpa/tensorboardX"
"Syllo/nvtop" -> "uber/horovod"
"PaddlePaddle/PaddleHub" -> "PaddlePaddle/PaddleOCR"
"PaddlePaddle/PaddleHub" -> "PaddlePaddle/Paddle"
"PaddlePaddle/PaddleHub" -> "PaddlePaddle/PaddleNLP" ["e"=1]
"PaddlePaddle/PaddleHub" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/PaddleHub" -> "PaddlePaddle/models"
"PaddlePaddle/PaddleHub" -> "PaddlePaddle/PaddleSeg"
"PaddlePaddle/PaddleHub" -> "PaddlePaddle/PaddleX"
"PaddlePaddle/PaddleHub" -> "PaddlePaddle/PaddleGAN"
"PaddlePaddle/PaddleHub" -> "PaddlePaddle/PaddleClas"
"PaddlePaddle/PaddleHub" -> "ymcui/Chinese-BERT-wwm" ["e"=1]
"PaddlePaddle/PaddleHub" -> "PaddlePaddle/Paddle-Lite"
"PaddlePaddle/PaddleHub" -> "PaddlePaddle/ERNIE" ["e"=1]
"PaddlePaddle/PaddleHub" -> "fighting41love/funNLP" ["e"=1]
"PaddlePaddle/PaddleHub" -> "PaddlePaddle/PaddleSpeech" ["e"=1]
"PaddlePaddle/PaddleHub" -> "babysor/MockingBird" ["e"=1]
"PaddlePaddle/VisualDL" -> "PaddlePaddle/PaddleX"
"PaddlePaddle/VisualDL" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/VisualDL" -> "PaddlePaddle/Serving" ["e"=1]
"PaddlePaddle/VisualDL" -> "PaddlePaddle/Paddle"
"PaddlePaddle/VisualDL" -> "PaddlePaddle/models"
"PaddlePaddle/VisualDL" -> "PaddlePaddle/PaddleSeg"
"PaddlePaddle/VisualDL" -> "facebookresearch/visdom"
"PaddlePaddle/VisualDL" -> "PaddlePaddle/PaddleClas"
"PaddlePaddle/VisualDL" -> "PaddlePaddle/PaddleSlim"
"PaddlePaddle/VisualDL" -> "PaddlePaddle/X2Paddle"
"PaddlePaddle/VisualDL" -> "PaddlePaddle/PGL" ["e"=1]
"PaddlePaddle/VisualDL" -> "PaddlePaddle/Paddle-Lite"
"PaddlePaddle/VisualDL" -> "PaddlePaddle/PaddleGAN"
"PaddlePaddle/VisualDL" -> "PaddlePaddle/FleetX" ["e"=1]
"PaddlePaddle/VisualDL" -> "lutzroeder/netron"
"keras-team/keras" -> "pytorch/pytorch"
"keras-team/keras" -> "scikit-learn/scikit-learn"
"keras-team/keras" -> "tensorflow/tensorflow"
"keras-team/keras" -> "tensorflow/models"
"keras-team/keras" -> "aymericdamien/TensorFlow-Examples" ["e"=1]
"keras-team/keras" -> "pandas-dev/pandas" ["e"=1]
"keras-team/keras" -> "google-research/bert" ["e"=1]
"keras-team/keras" -> "fastai/fastai" ["e"=1]
"keras-team/keras" -> "opencv/opencv"
"keras-team/keras" -> "huggingface/transformers" ["e"=1]
"keras-team/keras" -> "numpy/numpy" ["e"=1]
"keras-team/keras" -> "dmlc/xgboost" ["e"=1]
"keras-team/keras" -> "fchollet/deep-learning-with-python-notebooks" ["e"=1]
"keras-team/keras" -> "matterport/Mask_RCNN"
"keras-team/keras" -> "openai/gym" ["e"=1]
"pytorch/examples" -> "yunjey/pytorch-tutorial" ["e"=1]
"pytorch/examples" -> "pytorch/vision"
"pytorch/examples" -> "pytorch/tutorials"
"pytorch/examples" -> "pytorch/pytorch"
"pytorch/examples" -> "bharathgs/Awesome-pytorch-list" ["e"=1]
"pytorch/examples" -> "junyanz/pytorch-CycleGAN-and-pix2pix" ["e"=1]
"pytorch/examples" -> "eriklindernoren/PyTorch-GAN" ["e"=1]
"pytorch/examples" -> "rwightman/pytorch-image-models"
"pytorch/examples" -> "soumith/ganhacks" ["e"=1]
"pytorch/examples" -> "open-mmlab/mmdetection"
"pytorch/examples" -> "chenyuntc/pytorch-book" ["e"=1]
"pytorch/examples" -> "Cadene/pretrained-models.pytorch"
"pytorch/examples" -> "facebookresearch/Detectron"
"pytorch/examples" -> "vdumoulin/conv_arithmetic"
"pytorch/examples" -> "jcjohnson/pytorch-examples"
"Adamdad/keras-YOLOv3-mobilenet" -> "fsx950223/mobilenetv2-yolov3"
"Adamdad/keras-YOLOv3-mobilenet" -> "eric612/MobileNet-YOLO"
"Adamdad/keras-YOLOv3-mobilenet" -> "Adamdad/Object-Detection-Metrics"
"Adamdad/keras-YOLOv3-mobilenet" -> "Stinky-Tofu/Stronger-yolo"
"Adamdad/keras-YOLOv3-mobilenet" -> "SpikeKing/keras-yolo3-detection"
"Adamdad/keras-YOLOv3-mobilenet" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"Adamdad/keras-YOLOv3-mobilenet" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"Adamdad/keras-YOLOv3-mobilenet" -> "YunYang1994/tensorflow-yolov3"
"Adamdad/keras-YOLOv3-mobilenet" -> "experiencor/keras-yolo3"
"Adamdad/keras-YOLOv3-mobilenet" -> "mystic123/tensorflow-yolo-v3"
"Adamdad/keras-YOLOv3-mobilenet" -> "qqwweee/keras-yolo3"
"Adamdad/keras-YOLOv3-mobilenet" -> "wizyoung/YOLOv3_TensorFlow"
"Adamdad/keras-YOLOv3-mobilenet" -> "tanluren/mobilenetv3-yolov3"
"Adamdad/keras-YOLOv3-mobilenet" -> "Qidian213/deep_sort_yolov3" ["e"=1]
"Adamdad/keras-YOLOv3-mobilenet" -> "ruinmessi/ASFF"
"EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10" -> "datitran/raccoon_dataset"
"EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10" -> "EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi"
"EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10" -> "EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi"
"EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10" -> "tzutalin/labelImg"
"EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10" -> "priya-dwivedi/Deep-Learning"
"EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10" -> "qqwweee/keras-yolo3"
"EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10" -> "fizyr/keras-retinanet"
"EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10" -> "llSourcell/YOLO_Object_Detection"
"EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10" -> "datitran/object_detector_app"
"EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10" -> "thtrieu/darkflow"
"EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10" -> "YunYang1994/tensorflow-yolov3"
"EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10" -> "matterport/Mask_RCNN"
"EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10" -> "amusi/awesome-object-detection"
"EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10" -> "endernewton/tf-faster-rcnn"
"EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10" -> "OlafenwaMoses/ImageAI"
"NVIDIA/nvidia-docker" -> "onnx/onnx"
"NVIDIA/nvidia-docker" -> "NVIDIA/DeepLearningExamples"
"NVIDIA/nvidia-docker" -> "NVIDIA/TensorRT"
"NVIDIA/nvidia-docker" -> "facebookresearch/Detectron"
"NVIDIA/nvidia-docker" -> "lutzroeder/netron"
"NVIDIA/nvidia-docker" -> "pytorch/pytorch"
"NVIDIA/nvidia-docker" -> "pjreddie/darknet"
"NVIDIA/nvidia-docker" -> "tensorflow/models"
"NVIDIA/nvidia-docker" -> "kubeflow/kubeflow" ["e"=1]
"NVIDIA/nvidia-docker" -> "NVIDIA/apex"
"NVIDIA/nvidia-docker" -> "facebookresearch/faiss" ["e"=1]
"NVIDIA/nvidia-docker" -> "facebookresearch/detectron2"
"NVIDIA/nvidia-docker" -> "horovod/horovod"
"NVIDIA/nvidia-docker" -> "BVLC/caffe"
"NVIDIA/nvidia-docker" -> "rbgirshick/py-faster-rcnn"
"WXinlong/SOLO" -> "aim-uofa/AdelaiDet"
"WXinlong/SOLO" -> "xieenze/PolarMask"
"WXinlong/SOLO" -> "dbolya/yolact"
"WXinlong/SOLO" -> "zju3dv/snake"
"WXinlong/SOLO" -> "tianzhi0549/FCOS"
"WXinlong/SOLO" -> "Epiphqny/SOLOv2"
"WXinlong/SOLO" -> "PeizeSun/SparseR-CNN"
"WXinlong/SOLO" -> "youngwanLEE/CenterMask"
"WXinlong/SOLO" -> "xingyizhou/CenterNet2"
"WXinlong/SOLO" -> "youngwanLEE/centermask2"
"WXinlong/SOLO" -> "sfzhang15/ATSS"
"WXinlong/SOLO" -> "joe-siyuan-qiao/DetectoRS"
"WXinlong/SOLO" -> "zhanghang1989/ResNeSt"
"WXinlong/SOLO" -> "openseg-group/openseg.pytorch" ["e"=1]
"WXinlong/SOLO" -> "PeizeSun/OneNet"
"abreheret/PixelAnnotationTool" -> "Hitachi-Automotive-And-Industry-Lab/semantic-segmentation-editor" ["e"=1]
"abreheret/PixelAnnotationTool" -> "Labelbox/Labelbox"
"abreheret/PixelAnnotationTool" -> "opencv/cvat"
"abreheret/PixelAnnotationTool" -> "wkentaro/labelme"
"abreheret/PixelAnnotationTool" -> "fidler-lab/polyrnn-pp-pytorch"
"abreheret/PixelAnnotationTool" -> "openvinotoolkit/cvat"
"abreheret/PixelAnnotationTool" -> "kyamagu/js-segment-annotator"
"abreheret/PixelAnnotationTool" -> "Cartucho/OpenLabeling"
"abreheret/PixelAnnotationTool" -> "scaelles/DEXTR-PyTorch"
"abreheret/PixelAnnotationTool" -> "fidler-lab/curve-gcn"
"abreheret/PixelAnnotationTool" -> "dbolya/yolact"
"abreheret/PixelAnnotationTool" -> "heartexlabs/awesome-data-labeling"
"abreheret/PixelAnnotationTool" -> "albu/albumentations"
"abreheret/PixelAnnotationTool" -> "microsoft/VoTT"
"abreheret/PixelAnnotationTool" -> "jsbroks/coco-annotator"
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "HarisIqbal88/PlotNeuralNet"
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "gwding/draw_convnet" ["e"=1]
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "alexlenail/NN-SVG" ["e"=1]
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "paulgavrikov/visualkeras"
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "dair-ai/ml-visuals"
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "lutzroeder/netron"
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "albumentations-team/albumentations"
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "utkuozbulak/pytorch-cnn-visualizations"
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "kornia/kornia"
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "rwightman/pytorch-image-models"
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "arogozhnikov/einops"
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "optuna/optuna" ["e"=1]
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "deepmind/deepmind-research"
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "graviraja/MLOps-Basics" ["e"=1]
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" -> "PyTorchLightning/pytorch-lightning"
"balancap/SSD-Tensorflow" -> "weiliu89/caffe"
"balancap/SSD-Tensorflow" -> "endernewton/tf-faster-rcnn"
"balancap/SSD-Tensorflow" -> "smallcorgi/Faster-RCNN_TF"
"balancap/SSD-Tensorflow" -> "amdegroot/ssd.pytorch"
"balancap/SSD-Tensorflow" -> "gliese581gg/YOLO_tensorflow"
"balancap/SSD-Tensorflow" -> "rbgirshick/py-faster-rcnn"
"balancap/SSD-Tensorflow" -> "qqwweee/keras-yolo3"
"balancap/SSD-Tensorflow" -> "CharlesShang/FastMaskRCNN"
"balancap/SSD-Tensorflow" -> "pierluigiferrari/ssd_keras"
"balancap/SSD-Tensorflow" -> "thtrieu/darkflow"
"balancap/SSD-Tensorflow" -> "rykov8/ssd_keras"
"balancap/SSD-Tensorflow" -> "YunYang1994/tensorflow-yolov3"
"balancap/SSD-Tensorflow" -> "nilboy/tensorflow-yolo"
"balancap/SSD-Tensorflow" -> "amusi/awesome-object-detection"
"balancap/SSD-Tensorflow" -> "fizyr/keras-retinanet"
"davisking/dlib" -> "cmusatyalab/openface"
"davisking/dlib" -> "davidsandberg/facenet"
"davisking/dlib" -> "TadasBaltrusaitis/OpenFace"
"davisking/dlib" -> "ShiqiYu/libfacedetection"
"davisking/dlib" -> "deepinsight/insightface"
"davisking/dlib" -> "ageitgey/face_recognition"
"davisking/dlib" -> "pjreddie/darknet"
"davisking/dlib" -> "seetaface/SeetaFaceEngine"
"davisking/dlib" -> "spmallick/learnopencv"
"davisking/dlib" -> "Tencent/ncnn"
"davisking/dlib" -> "opencv/opencv_contrib"
"davisking/dlib" -> "opencv/opencv"
"davisking/dlib" -> "mlpack/mlpack" ["e"=1]
"davisking/dlib" -> "davisking/dlib-models"
"davisking/dlib" -> "facebookresearch/Detectron"
"dbolya/yolact" -> "WXinlong/SOLO"
"dbolya/yolact" -> "xingyizhou/CenterNet"
"dbolya/yolact" -> "aim-uofa/AdelaiDet"
"dbolya/yolact" -> "zjhuang22/maskscoring_rcnn"
"dbolya/yolact" -> "tianzhi0549/FCOS"
"dbolya/yolact" -> "facebookresearch/maskrcnn-benchmark"
"dbolya/yolact" -> "haotian-liu/yolact_edge"
"dbolya/yolact" -> "foolwood/SiamMask" ["e"=1]
"dbolya/yolact" -> "lukemelas/EfficientNet-PyTorch"
"dbolya/yolact" -> "open-mmlab/mmdetection"
"dbolya/yolact" -> "facebookresearch/detectron2"
"dbolya/yolact" -> "TuSimple/simpledet"
"dbolya/yolact" -> "ultralytics/yolov3"
"dbolya/yolact" -> "princeton-vl/CornerNet-Lite"
"dbolya/yolact" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"dog-qiuqiu/MobileNet-Yolo" -> "dog-qiuqiu/Yolo-Fastest"
"dog-qiuqiu/MobileNet-Yolo" -> "CoderFM/FMFormSubmitKit" ["e"=1]
"dog-qiuqiu/MobileNet-Yolo" -> "ZhangGang12/MultiThreadLearning" ["e"=1]
"dog-qiuqiu/MobileNet-Yolo" -> "ron0115/vscode-image-snippets" ["e"=1]
"dog-qiuqiu/MobileNet-Yolo" -> "charmJiang/front-end-knowledge-systems" ["e"=1]
"dog-qiuqiu/MobileNet-Yolo" -> "CoderFM/FMLayoutKit" ["e"=1]
"dog-qiuqiu/MobileNet-Yolo" -> "GoodLuckAlien/blogs" ["e"=1]
"dog-qiuqiu/MobileNet-Yolo" -> "Voyzz/MyCompany-miniProgram" ["e"=1]
"dog-qiuqiu/MobileNet-Yolo" -> "linlicro/leetcode-java" ["e"=1]
"dog-qiuqiu/MobileNet-Yolo" -> "giswangsj/QrCodeScanner" ["e"=1]
"dog-qiuqiu/MobileNet-Yolo" -> "bdf1/bdf1" ["e"=1]
"dog-qiuqiu/MobileNet-Yolo" -> "lonesafe/roubsite" ["e"=1]
"dog-qiuqiu/MobileNet-Yolo" -> "Jinxqq/sql-note" ["e"=1]
"dog-qiuqiu/MobileNet-Yolo" -> "keguoyu/MiniJVM" ["e"=1]
"dog-qiuqiu/MobileNet-Yolo" -> "l-zoy/zmi-nerd" ["e"=1]
"experiencor/keras-yolo2" -> "experiencor/keras-yolo3"
"experiencor/keras-yolo2" -> "allanzelener/YAD2K"
"experiencor/keras-yolo2" -> "qqwweee/keras-yolo3"
"experiencor/keras-yolo2" -> "fizyr/keras-retinanet"
"experiencor/keras-yolo2" -> "pierluigiferrari/ssd_keras"
"experiencor/keras-yolo2" -> "gliese581gg/YOLO_tensorflow"
"experiencor/keras-yolo2" -> "hizhangp/yolo_tensorflow"
"experiencor/keras-yolo2" -> "rykov8/ssd_keras"
"experiencor/keras-yolo2" -> "longcw/yolo2-pytorch"
"experiencor/keras-yolo2" -> "xiaochus/YOLOv3"
"experiencor/keras-yolo2" -> "Adamdad/keras-YOLOv3-mobilenet"
"experiencor/keras-yolo2" -> "thtrieu/darkflow"
"experiencor/keras-yolo2" -> "WojciechMormul/yolo2"
"experiencor/keras-yolo2" -> "nilboy/tensorflow-yolo"
"experiencor/keras-yolo3" -> "qqwweee/keras-yolo3"
"experiencor/keras-yolo3" -> "experiencor/keras-yolo2"
"experiencor/keras-yolo3" -> "allanzelener/YAD2K"
"experiencor/keras-yolo3" -> "pierluigiferrari/ssd_keras"
"experiencor/keras-yolo3" -> "fizyr/keras-retinanet"
"experiencor/keras-yolo3" -> "xiaochus/YOLOv3"
"experiencor/keras-yolo3" -> "YunYang1994/tensorflow-yolov3"
"experiencor/keras-yolo3" -> "SpikeKing/keras-yolo3-detection"
"experiencor/keras-yolo3" -> "Adamdad/keras-YOLOv3-mobilenet"
"experiencor/keras-yolo3" -> "zzh8829/yolov3-tf2"
"experiencor/keras-yolo3" -> "wizyoung/YOLOv3_TensorFlow"
"experiencor/keras-yolo3" -> "mystic123/tensorflow-yolo-v3"
"experiencor/keras-yolo3" -> "thtrieu/darkflow"
"experiencor/keras-yolo3" -> "hunglc007/tensorflow-yolov4-tflite"
"experiencor/keras-yolo3" -> "Qidian213/deep_sort_yolov3" ["e"=1]
"facebookresearch/detectron2" -> "open-mmlab/mmdetection"
"facebookresearch/detectron2" -> "rwightman/pytorch-image-models"
"facebookresearch/detectron2" -> "facebookresearch/maskrcnn-benchmark"
"facebookresearch/detectron2" -> "facebookresearch/Detectron"
"facebookresearch/detectron2" -> "facebookresearch/detr"
"facebookresearch/detectron2" -> "matterport/Mask_RCNN"
"facebookresearch/detectron2" -> "ultralytics/yolov5"
"facebookresearch/detectron2" -> "microsoft/Swin-Transformer"
"facebookresearch/detectron2" -> "xingyizhou/CenterNet"
"facebookresearch/detectron2" -> "jwyang/faster-rcnn.pytorch"
"facebookresearch/detectron2" -> "lucidrains/vit-pytorch"
"facebookresearch/detectron2" -> "ultralytics/yolov3"
"facebookresearch/detectron2" -> "pytorch/vision"
"facebookresearch/detectron2" -> "aleju/imgaug"
"facebookresearch/detectron2" -> "lutzroeder/netron"
"heartexlabs/awesome-data-labeling" -> "heartexlabs/label-studio"
"heartexlabs/awesome-data-labeling" -> "openvinotoolkit/cvat"
"heartexlabs/awesome-data-labeling" -> "jsbroks/awesome-dataset-tools"
"heartexlabs/awesome-data-labeling" -> "microsoft/VoTT"
"heartexlabs/awesome-data-labeling" -> "SkalskiP/make-sense"
"heartexlabs/awesome-data-labeling" -> "taivop/awesome-data-annotation"
"heartexlabs/awesome-data-labeling" -> "UniversalDataTool/universal-data-tool"
"heartexlabs/awesome-data-labeling" -> "Hitachi-Automotive-And-Industry-Lab/semantic-segmentation-editor" ["e"=1]
"heartexlabs/awesome-data-labeling" -> "opencv/cvat"
"heartexlabs/awesome-data-labeling" -> "wkentaro/labelme"
"heartexlabs/awesome-data-labeling" -> "abreheret/PixelAnnotationTool"
"heartexlabs/awesome-data-labeling" -> "jsbroks/coco-annotator"
"heartexlabs/awesome-data-labeling" -> "visenger/awesome-mlops" ["e"=1]
"heartexlabs/awesome-data-labeling" -> "doccano/doccano" ["e"=1]
"heartexlabs/awesome-data-labeling" -> "albumentations-team/albumentations"
"jonbarron/robust_loss_pytorch" -> "JiawangBian/SC-SfMLearner-Release" ["e"=1]
"jonbarron/robust_loss_pytorch" -> "NVlabs/pacnet" ["e"=1]
"jonbarron/robust_loss_pytorch" -> "ClementPinard/Pytorch-Correlation-extension" ["e"=1]
"jonbarron/robust_loss_pytorch" -> "arraiyopensource/kornia"
"jonbarron/robust_loss_pytorch" -> "YvanYin/VNL_Monocular_Depth_Prediction" ["e"=1]
"jonbarron/robust_loss_pytorch" -> "fangchangma/self-supervised-depth-completion" ["e"=1]
"jwyang/faster-rcnn.pytorch" -> "chenyuntc/simple-faster-rcnn-pytorch"
"jwyang/faster-rcnn.pytorch" -> "facebookresearch/maskrcnn-benchmark"
"jwyang/faster-rcnn.pytorch" -> "amdegroot/ssd.pytorch"
"jwyang/faster-rcnn.pytorch" -> "ruotianluo/pytorch-faster-rcnn"
"jwyang/faster-rcnn.pytorch" -> "longcw/faster_rcnn_pytorch"
"jwyang/faster-rcnn.pytorch" -> "rbgirshick/py-faster-rcnn"
"jwyang/faster-rcnn.pytorch" -> "eriklindernoren/PyTorch-YOLOv3"
"jwyang/faster-rcnn.pytorch" -> "open-mmlab/mmdetection"
"jwyang/faster-rcnn.pytorch" -> "roytseng-tw/Detectron.pytorch"
"jwyang/faster-rcnn.pytorch" -> "amusi/awesome-object-detection"
"jwyang/faster-rcnn.pytorch" -> "Cadene/pretrained-models.pytorch"
"jwyang/faster-rcnn.pytorch" -> "xingyizhou/CenterNet"
"jwyang/faster-rcnn.pytorch" -> "facebookresearch/Detectron"
"jwyang/faster-rcnn.pytorch" -> "facebookresearch/detectron2"
"jwyang/faster-rcnn.pytorch" -> "hoya012/deep_learning_object_detection"
"labmlai/annotated_deep_learning_paper_implementations" -> "rwightman/pytorch-image-models"
"labmlai/annotated_deep_learning_paper_implementations" -> "mli/paper-reading"
"labmlai/annotated_deep_learning_paper_implementations" -> "google-research/tuning_playbook" ["e"=1]
"labmlai/annotated_deep_learning_paper_implementations" -> "lucidrains/vit-pytorch"
"labmlai/annotated_deep_learning_paper_implementations" -> "WZMIAOMIAO/deep-learning-for-image-processing"
"labmlai/annotated_deep_learning_paper_implementations" -> "facebookresearch/segment-anything" ["e"=1]
"labmlai/annotated_deep_learning_paper_implementations" -> "huggingface/transformers" ["e"=1]
"labmlai/annotated_deep_learning_paper_implementations" -> "xmu-xiaoma666/External-Attention-pytorch"
"labmlai/annotated_deep_learning_paper_implementations" -> "heejkoo/Awesome-Diffusion-Models" ["e"=1]
"labmlai/annotated_deep_learning_paper_implementations" -> "huggingface/diffusers" ["e"=1]
"labmlai/annotated_deep_learning_paper_implementations" -> "floodsung/Deep-Learning-Papers-Reading-Roadmap" ["e"=1]
"labmlai/annotated_deep_learning_paper_implementations" -> "yunjey/pytorch-tutorial" ["e"=1]
"labmlai/annotated_deep_learning_paper_implementations" -> "google-research/google-research" ["e"=1]
"labmlai/annotated_deep_learning_paper_implementations" -> "eugeneyan/applied-ml" ["e"=1]
"labmlai/annotated_deep_learning_paper_implementations" -> "openai/CLIP"
"lhelontra/tensorflow-on-arm" -> "samjabrahams/tensorflow-on-raspberry-pi"
"lhelontra/tensorflow-on-arm" -> "PINTO0309/Tensorflow-bin"
"lhelontra/tensorflow-on-arm" -> "movidius/ncsdk" ["e"=1]
"lhelontra/tensorflow-on-arm" -> "EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi"
"lhelontra/tensorflow-on-arm" -> "nmilosev/pytorch-arm-builds"
"lhelontra/tensorflow-on-arm" -> "snipsco/tensorflow-build"
"lhelontra/tensorflow-on-arm" -> "PINTO0309/OpenVINO-YoloV3" ["e"=1]
"lhelontra/tensorflow-on-arm" -> "lherman-cs/tensorflow-aarch64"
"lhelontra/tensorflow-on-arm" -> "NVIDIA-AI-IOT/tf_trt_models" ["e"=1]
"lhelontra/tensorflow-on-arm" -> "peterlee0127/tensorflow-nvJetson" ["e"=1]
"lhelontra/tensorflow-on-arm" -> "movidius/ncappzoo" ["e"=1]
"lhelontra/tensorflow-on-arm" -> "Archiconda/build-tools"
"lhelontra/tensorflow-on-arm" -> "KumaTea/tensorflow-aarch64"
"lhelontra/tensorflow-on-arm" -> "ARM-software/armnn" ["e"=1]
"lhelontra/tensorflow-on-arm" -> "ARM-software/ML-examples" ["e"=1]
"matterport/Mask_RCNN" -> "facebookresearch/Detectron"
"matterport/Mask_RCNN" -> "facebookresearch/maskrcnn-benchmark"
"matterport/Mask_RCNN" -> "facebookresearch/detectron2"
"matterport/Mask_RCNN" -> "open-mmlab/mmdetection"
"matterport/Mask_RCNN" -> "tensorflow/models"
"matterport/Mask_RCNN" -> "aleju/imgaug"
"matterport/Mask_RCNN" -> "tzutalin/labelImg"
"matterport/Mask_RCNN" -> "rbgirshick/py-faster-rcnn"
"matterport/Mask_RCNN" -> "pjreddie/darknet"
"matterport/Mask_RCNN" -> "mrgloom/awesome-semantic-segmentation"
"matterport/Mask_RCNN" -> "wkentaro/labelme"
"matterport/Mask_RCNN" -> "qqwweee/keras-yolo3"
"matterport/Mask_RCNN" -> "CharlesShang/FastMaskRCNN"
"matterport/Mask_RCNN" -> "hoya012/deep_learning_object_detection"
"matterport/Mask_RCNN" -> "jwyang/faster-rcnn.pytorch"
"mrgloom/awesome-semantic-segmentation" -> "amusi/awesome-object-detection"
"mrgloom/awesome-semantic-segmentation" -> "CSAILVision/semantic-segmentation-pytorch" ["e"=1]
"mrgloom/awesome-semantic-segmentation" -> "Tramac/awesome-semantic-segmentation-pytorch" ["e"=1]
"mrgloom/awesome-semantic-segmentation" -> "hoya012/deep_learning_object_detection"
"mrgloom/awesome-semantic-segmentation" -> "meetshah1995/pytorch-semseg" ["e"=1]
"mrgloom/awesome-semantic-segmentation" -> "open-mmlab/mmdetection"
"mrgloom/awesome-semantic-segmentation" -> "qubvel/segmentation_models.pytorch"
"mrgloom/awesome-semantic-segmentation" -> "facebookresearch/maskrcnn-benchmark"
"mrgloom/awesome-semantic-segmentation" -> "matterport/Mask_RCNN"
"mrgloom/awesome-semantic-segmentation" -> "open-mmlab/mmsegmentation"
"mrgloom/awesome-semantic-segmentation" -> "aleju/imgaug"
"mrgloom/awesome-semantic-segmentation" -> "milesial/Pytorch-UNet" ["e"=1]
"mrgloom/awesome-semantic-segmentation" -> "qubvel/segmentation_models"
"mrgloom/awesome-semantic-segmentation" -> "jfzhang95/pytorch-deeplab-xception" ["e"=1]
"mrgloom/awesome-semantic-segmentation" -> "GeorgeSeif/Semantic-Segmentation-Suite" ["e"=1]
"open-mmlab/mmdetection" -> "facebookresearch/detectron2"
"open-mmlab/mmdetection" -> "rwightman/pytorch-image-models"
"open-mmlab/mmdetection" -> "facebookresearch/maskrcnn-benchmark"
"open-mmlab/mmdetection" -> "hoya012/deep_learning_object_detection"
"open-mmlab/mmdetection" -> "facebookresearch/detr"
"open-mmlab/mmdetection" -> "xingyizhou/CenterNet"
"open-mmlab/mmdetection" -> "ultralytics/yolov5"
"open-mmlab/mmdetection" -> "facebookresearch/Detectron"
"open-mmlab/mmdetection" -> "open-mmlab/mmcv"
"open-mmlab/mmdetection" -> "jwyang/faster-rcnn.pytorch"
"open-mmlab/mmdetection" -> "microsoft/Swin-Transformer"
"open-mmlab/mmdetection" -> "matterport/Mask_RCNN"
"open-mmlab/mmdetection" -> "amusi/awesome-object-detection"
"open-mmlab/mmdetection" -> "ultralytics/yolov3"
"open-mmlab/mmdetection" -> "lukemelas/EfficientNet-PyTorch"
"openvinotoolkit/cvat" -> "microsoft/VoTT"
"openvinotoolkit/cvat" -> "wkentaro/labelme"
"openvinotoolkit/cvat" -> "Megvii-BaseDetection/YOLOX"
"openvinotoolkit/cvat" -> "heartexlabs/awesome-data-labeling"
"openvinotoolkit/cvat" -> "albumentations-team/albumentations"
"openvinotoolkit/cvat" -> "heartexlabs/label-studio"
"openvinotoolkit/cvat" -> "voxel51/fiftyone"
"openvinotoolkit/cvat" -> "wang-xinyu/tensorrtx"
"openvinotoolkit/cvat" -> "tzutalin/labelImg"
"openvinotoolkit/cvat" -> "Tianxiaomo/pytorch-YOLOv4"
"openvinotoolkit/cvat" -> "jsbroks/coco-annotator"
"openvinotoolkit/cvat" -> "facebookresearch/detectron2"
"openvinotoolkit/cvat" -> "abreheret/PixelAnnotationTool"
"openvinotoolkit/cvat" -> "SkalskiP/make-sense"
"openvinotoolkit/cvat" -> "openvinotoolkit/datumaro"
"pierluigiferrari/ssd_keras" -> "rykov8/ssd_keras"
"pierluigiferrari/ssd_keras" -> "balancap/SSD-Tensorflow"
"pierluigiferrari/ssd_keras" -> "fizyr/keras-retinanet"
"pierluigiferrari/ssd_keras" -> "qqwweee/keras-yolo3"
"pierluigiferrari/ssd_keras" -> "experiencor/keras-yolo3"
"pierluigiferrari/ssd_keras" -> "amdegroot/ssd.pytorch"
"pierluigiferrari/ssd_keras" -> "weiliu89/caffe"
"pierluigiferrari/ssd_keras" -> "jinfagang/keras_frcnn"
"pierluigiferrari/ssd_keras" -> "yhenon/keras-frcnn"
"pierluigiferrari/ssd_keras" -> "allanzelener/YAD2K"
"pierluigiferrari/ssd_keras" -> "chuanqi305/MobileNet-SSD"
"pierluigiferrari/ssd_keras" -> "tanakataiki/ssd_kerasV2" ["e"=1]
"pierluigiferrari/ssd_keras" -> "experiencor/keras-yolo2"
"pierluigiferrari/ssd_keras" -> "HiKapok/SSD.TensorFlow"
"pierluigiferrari/ssd_keras" -> "lufficc/SSD"
"qqwweee/keras-yolo3" -> "YunYang1994/tensorflow-yolov3"
"qqwweee/keras-yolo3" -> "eriklindernoren/PyTorch-YOLOv3"
"qqwweee/keras-yolo3" -> "ultralytics/yolov3"
"qqwweee/keras-yolo3" -> "fizyr/keras-retinanet"
"qqwweee/keras-yolo3" -> "experiencor/keras-yolo3"
"qqwweee/keras-yolo3" -> "balancap/SSD-Tensorflow"
"qqwweee/keras-yolo3" -> "pjreddie/darknet"
"qqwweee/keras-yolo3" -> "allanzelener/YAD2K"
"qqwweee/keras-yolo3" -> "AlexeyAB/darknet"
"qqwweee/keras-yolo3" -> "wizyoung/YOLOv3_TensorFlow"
"qqwweee/keras-yolo3" -> "matterport/Mask_RCNN"
"qqwweee/keras-yolo3" -> "tzutalin/labelImg"
"qqwweee/keras-yolo3" -> "amusi/awesome-object-detection"
"qqwweee/keras-yolo3" -> "ayooshkathuria/pytorch-yolo-v3"
"qqwweee/keras-yolo3" -> "hoya012/deep_learning_object_detection"
"rykov8/ssd_keras" -> "pierluigiferrari/ssd_keras"
"rykov8/ssd_keras" -> "yhenon/keras-frcnn"
"rykov8/ssd_keras" -> "balancap/SSD-Tensorflow"
"rykov8/ssd_keras" -> "allanzelener/YAD2K"
"rykov8/ssd_keras" -> "experiencor/basic-yolo-keras"
"rykov8/ssd_keras" -> "weiliu89/caffe"
"rykov8/ssd_keras" -> "zhreshold/mxnet-ssd" ["e"=1]
"rykov8/ssd_keras" -> "gliese581gg/YOLO_tensorflow"
"rykov8/ssd_keras" -> "kuhung/SSD_keras"
"rykov8/ssd_keras" -> "fizyr/keras-retinanet"
"rykov8/ssd_keras" -> "seann999/ssd_tensorflow"
"rykov8/ssd_keras" -> "smallcorgi/Faster-RCNN_TF"
"rykov8/ssd_keras" -> "jinfagang/keras_frcnn"
"rykov8/ssd_keras" -> "georgesung/ssd_tensorflow_traffic_sign_detection" ["e"=1]
"rykov8/ssd_keras" -> "nilboy/tensorflow-yolo"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "sgrvinod/Deep-Tutorials-for-PyTorch" ["e"=1]
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "amdegroot/ssd.pytorch"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "eriklindernoren/PyTorch-YOLOv3"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "qfgaohao/pytorch-ssd"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "lufficc/SSD"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "ayooshkathuria/pytorch-yolo-v3"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "jwyang/faster-rcnn.pytorch"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "rafaelpadilla/Object-Detection-Metrics"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "yhenon/pytorch-retinanet"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "xingyizhou/CenterNet"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "qubvel/segmentation_models.pytorch"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "lukemelas/EfficientNet-PyTorch"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "chenyuntc/simple-faster-rcnn-pytorch"
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "sgrvinod/a-PyTorch-Tutorial-to-Image-Captioning" ["e"=1]
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" -> "hoya012/deep_learning_object_detection"
"tzutalin/labelImg" -> "wkentaro/labelme"
"tzutalin/labelImg" -> "pjreddie/darknet"
"tzutalin/labelImg" -> "AlexeyAB/darknet"
"tzutalin/labelImg" -> "matterport/Mask_RCNN"
"tzutalin/labelImg" -> "facebookresearch/Detectron"
"tzutalin/labelImg" -> "open-mmlab/mmdetection"
"tzutalin/labelImg" -> "qqwweee/keras-yolo3"
"tzutalin/labelImg" -> "aleju/imgaug"
"tzutalin/labelImg" -> "rbgirshick/py-faster-rcnn"
"tzutalin/labelImg" -> "ultralytics/yolov5"
"tzutalin/labelImg" -> "tensorflow/models"
"tzutalin/labelImg" -> "ultralytics/yolov3"
"tzutalin/labelImg" -> "facebookresearch/detectron2"
"tzutalin/labelImg" -> "lutzroeder/netron"
"tzutalin/labelImg" -> "hoya012/deep_learning_object_detection"
"ultralytics/yolov5" -> "open-mmlab/mmdetection"
"ultralytics/yolov5" -> "AlexeyAB/darknet"
"ultralytics/yolov5" -> "facebookresearch/detectron2"
"ultralytics/yolov5" -> "ultralytics/yolov3"
"ultralytics/yolov5" -> "WongKinYiu/yolov7"
"ultralytics/yolov5" -> "Megvii-BaseDetection/YOLOX"
"ultralytics/yolov5" -> "rwightman/pytorch-image-models"
"ultralytics/yolov5" -> "tzutalin/labelImg"
"ultralytics/yolov5" -> "lutzroeder/netron"
"ultralytics/yolov5" -> "wang-xinyu/tensorrtx"
"ultralytics/yolov5" -> "pjreddie/darknet"
"ultralytics/yolov5" -> "PaddlePaddle/PaddleDetection"
"ultralytics/yolov5" -> "ultralytics/ultralytics"
"ultralytics/yolov5" -> "Tianxiaomo/pytorch-YOLOv4"
"ultralytics/yolov5" -> "microsoft/Swin-Transformer"
"wkentaro/labelme" -> "tzutalin/labelImg"
"wkentaro/labelme" -> "open-mmlab/mmdetection"
"wkentaro/labelme" -> "matterport/Mask_RCNN"
"wkentaro/labelme" -> "facebookresearch/detectron2"
"wkentaro/labelme" -> "aleju/imgaug"
"wkentaro/labelme" -> "mrgloom/awesome-semantic-segmentation"
"wkentaro/labelme" -> "facebookresearch/maskrcnn-benchmark"
"wkentaro/labelme" -> "xingyizhou/CenterNet"
"wkentaro/labelme" -> "ultralytics/yolov3"
"wkentaro/labelme" -> "facebookresearch/Detectron"
"wkentaro/labelme" -> "cocodataset/cocoapi"
"wkentaro/labelme" -> "ultralytics/yolov5"
"wkentaro/labelme" -> "hoya012/deep_learning_object_detection"
"wkentaro/labelme" -> "lutzroeder/netron"
"wkentaro/labelme" -> "dbolya/yolact"
"zetane/viewer" -> "onnx/optimizer"
"zetane/viewer" -> "julrog/nn_vis" ["e"=1]
"zetane/viewer" -> "apple/ml-cvnets"
"zetane/viewer" -> "microsoft/onnxruntime-inference-examples"
"zetane/viewer" -> "murufeng/awesome_lightweight_networks"
"zetane/viewer" -> "ZhangGe6/onnx-modifier"
"zetane/viewer" -> "openppl-public/ppq"
"zetane/viewer" -> "jizhishutong/YOLOU"
"zetane/viewer" -> "zju3dv/LoFTR" ["e"=1]
"zetane/viewer" -> "daquexian/onnx-simplifier"
"CMU-Perceptual-Computing-Lab/openpose" -> "MVIG-SJTU/AlphaPose" ["e"=1]
"CMU-Perceptual-Computing-Lab/openpose" -> "ZheC/Realtime_Multi-Person_Pose_Estimation" ["e"=1]
"CMU-Perceptual-Computing-Lab/openpose" -> "facebookresearch/Detectron"
"CMU-Perceptual-Computing-Lab/openpose" -> "google/mediapipe"
"CMU-Perceptual-Computing-Lab/openpose" -> "facebookresearch/DensePose" ["e"=1]
"CMU-Perceptual-Computing-Lab/openpose" -> "matterport/Mask_RCNN"
"CMU-Perceptual-Computing-Lab/openpose" -> "ildoonet/tf-pose-estimation" ["e"=1]
"CMU-Perceptual-Computing-Lab/openpose" -> "facebookresearch/detectron2"
"CMU-Perceptual-Computing-Lab/openpose" -> "tensorflow/models"
"CMU-Perceptual-Computing-Lab/openpose" -> "pjreddie/darknet"
"CMU-Perceptual-Computing-Lab/openpose" -> "deepinsight/insightface"
"CMU-Perceptual-Computing-Lab/openpose" -> "open-mmlab/mmdetection"
"CMU-Perceptual-Computing-Lab/openpose" -> "spmallick/learnopencv"
"CMU-Perceptual-Computing-Lab/openpose" -> "davidsandberg/facenet"
"CMU-Perceptual-Computing-Lab/openpose" -> "ageitgey/face_recognition"
"PaddlePaddle/Paddle" -> "PaddlePaddle/models"
"PaddlePaddle/Paddle" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/Paddle" -> "PaddlePaddle/PaddleHub"
"PaddlePaddle/Paddle" -> "PaddlePaddle/PaddleNLP" ["e"=1]
"PaddlePaddle/Paddle" -> "PaddlePaddle/PaddleOCR"
"PaddlePaddle/Paddle" -> "PaddlePaddle/book"
"PaddlePaddle/Paddle" -> "pytorch/pytorch"
"PaddlePaddle/Paddle" -> "Tencent/ncnn"
"PaddlePaddle/Paddle" -> "PaddlePaddle/Paddle-Lite"
"PaddlePaddle/Paddle" -> "fxsjy/jieba" ["e"=1]
"PaddlePaddle/Paddle" -> "exacity/deeplearningbook-chinese" ["e"=1]
"PaddlePaddle/Paddle" -> "scutan90/DeepLearning-500-questions" ["e"=1]
"PaddlePaddle/Paddle" -> "open-mmlab/mmdetection"
"PaddlePaddle/Paddle" -> "google-research/bert" ["e"=1]
"PaddlePaddle/Paddle" -> "PaddlePaddle/PaddleSeg"
"PaddlePaddle/PaddleDetection" -> "Megvii-BaseDetection/YOLOX"
"PaddlePaddle/PaddleDetection" -> "PaddlePaddle/PaddleSeg"
"PaddlePaddle/PaddleDetection" -> "open-mmlab/mmdetection"
"PaddlePaddle/PaddleDetection" -> "PaddlePaddle/PaddleClas"
"PaddlePaddle/PaddleDetection" -> "ultralytics/yolov5"
"PaddlePaddle/PaddleDetection" -> "WongKinYiu/yolov7"
"PaddlePaddle/PaddleDetection" -> "PaddlePaddle/Paddle"
"PaddlePaddle/PaddleDetection" -> "wang-xinyu/tensorrtx"
"PaddlePaddle/PaddleDetection" -> "RangiLyu/nanodet"
"PaddlePaddle/PaddleDetection" -> "PaddlePaddle/PaddleX"
"PaddlePaddle/PaddleDetection" -> "meituan/YOLOv6"
"PaddlePaddle/PaddleDetection" -> "PaddlePaddle/PaddleOCR"
"PaddlePaddle/PaddleDetection" -> "Tianxiaomo/pytorch-YOLOv4"
"PaddlePaddle/PaddleDetection" -> "facebookresearch/detectron2"
"PaddlePaddle/PaddleDetection" -> "PaddlePaddle/models"
"dair-ai/ml-visuals" -> "mli/paper-reading"
"dair-ai/ml-visuals" -> "xmu-xiaoma666/External-Attention-pytorch"
"dair-ai/ml-visuals" -> "HarisIqbal88/PlotNeuralNet"
"dair-ai/ml-visuals" -> "rwightman/pytorch-image-models"
"dair-ai/ml-visuals" -> "lucidrains/vit-pytorch"
"dair-ai/ml-visuals" -> "thunlp/GNNPapers" ["e"=1]
"dair-ai/ml-visuals" -> "ShusenTang/Dive-into-DL-PyTorch" ["e"=1]
"dair-ai/ml-visuals" -> "microsoft/Swin-Transformer"
"dair-ai/ml-visuals" -> "zergtant/pytorch-handbook" ["e"=1]
"dair-ai/ml-visuals" -> "garrettj403/SciencePlots" ["e"=1]
"dair-ai/ml-visuals" -> "jindongwang/transferlearning" ["e"=1]
"dair-ai/ml-visuals" -> "open-mmlab/mmdetection"
"dair-ai/ml-visuals" -> "jacobgil/pytorch-grad-cam"
"dair-ai/ml-visuals" -> "facebookresearch/detr"
"dair-ai/ml-visuals" -> "dmlc/dgl" ["e"=1]
"amir-abdi/keras_to_tensorflow" -> "pplonski/keras2cpp" ["e"=1]
"amir-abdi/keras_to_tensorflow" -> "Microsoft/MMdnn"
"amir-abdi/keras_to_tensorflow" -> "qqwweee/keras-yolo3"
"amir-abdi/keras_to_tensorflow" -> "fizyr/keras-retinanet"
"amir-abdi/keras_to_tensorflow" -> "ysh329/deep-learning-model-convertor"
"amir-abdi/keras_to_tensorflow" -> "mystic123/tensorflow-yolo-v3"
"amir-abdi/keras_to_tensorflow" -> "pierluigiferrari/ssd_keras"
"amir-abdi/keras_to_tensorflow" -> "YunYang1994/tensorflow-yolov3"
"amir-abdi/keras_to_tensorflow" -> "bitbionic/keras-to-tensorflow" ["e"=1]
"amir-abdi/keras_to_tensorflow" -> "YCG09/chinese_ocr" ["e"=1]
"amir-abdi/keras_to_tensorflow" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"amir-abdi/keras_to_tensorflow" -> "raghakot/keras-vis" ["e"=1]
"amir-abdi/keras_to_tensorflow" -> "fchollet/deep-learning-models"
"amir-abdi/keras_to_tensorflow" -> "Dobiasd/frugally-deep" ["e"=1]
"amir-abdi/keras_to_tensorflow" -> "allanzelener/YAD2K"
"ChanChiChoi/awesome-Face_Recognition" -> "deepinsight/insightface"
"ChanChiChoi/awesome-Face_Recognition" -> "ZhaoJ9014/face.evoLVe.PyTorch" ["e"=1]
"ChanChiChoi/awesome-Face_Recognition" -> "polarisZhao/awesome-face"
"ChanChiChoi/awesome-Face_Recognition" -> "TreB1eN/InsightFace_Pytorch" ["e"=1]
"ChanChiChoi/awesome-Face_Recognition" -> "biubug6/Pytorch_Retinaface" ["e"=1]
"ChanChiChoi/awesome-Face_Recognition" -> "cleardusk/3DDFA" ["e"=1]
"ChanChiChoi/awesome-Face_Recognition" -> "YadiraF/PRNet" ["e"=1]
"ChanChiChoi/awesome-Face_Recognition" -> "JDAI-CV/FaceX-Zoo" ["e"=1]
"ChanChiChoi/awesome-Face_Recognition" -> "davidsandberg/facenet"
"ChanChiChoi/awesome-Face_Recognition" -> "amusi/awesome-object-detection"
"ChanChiChoi/awesome-Face_Recognition" -> "1adrianb/face-alignment" ["e"=1]
"ChanChiChoi/awesome-Face_Recognition" -> "YadiraF/face3d" ["e"=1]
"ChanChiChoi/awesome-Face_Recognition" -> "TencentYoutuResearch/FaceDetection-DSFD"
"ChanChiChoi/awesome-Face_Recognition" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" ["e"=1]
"ChanChiChoi/awesome-Face_Recognition" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB"
"tesseract-ocr/tesseract" -> "opencv/opencv"
"tesseract-ocr/tesseract" -> "PaddlePaddle/PaddleOCR"
"tesseract-ocr/tesseract" -> "naptha/tesseract.js" ["e"=1]
"tesseract-ocr/tesseract" -> "tesseract-ocr/tessdata" ["e"=1]
"tesseract-ocr/tesseract" -> "tensorflow/tensorflow"
"tesseract-ocr/tesseract" -> "tensorflow/models"
"tesseract-ocr/tesseract" -> "ageitgey/face_recognition"
"tesseract-ocr/tesseract" -> "madmaze/pytesseract" ["e"=1]
"tesseract-ocr/tesseract" -> "scrapy/scrapy" ["e"=1]
"tesseract-ocr/tesseract" -> "pytorch/pytorch"
"tesseract-ocr/tesseract" -> "JaidedAI/EasyOCR"
"tesseract-ocr/tesseract" -> "fatedier/frp" ["e"=1]
"tesseract-ocr/tesseract" -> "BVLC/caffe"
"tesseract-ocr/tesseract" -> "fxsjy/jieba" ["e"=1]
"tesseract-ocr/tesseract" -> "electron/electron" ["e"=1]
"wang-xinyu/tensorrtx" -> "NVIDIA/TensorRT"
"wang-xinyu/tensorrtx" -> "NVIDIA-AI-IOT/torch2trt"
"wang-xinyu/tensorrtx" -> "onnx/onnx-tensorrt"
"wang-xinyu/tensorrtx" -> "shouxieai/tensorRT_Pro"
"wang-xinyu/tensorrtx" -> "enazoe/yolo-tensorrt"
"wang-xinyu/tensorrtx" -> "Megvii-BaseDetection/YOLOX"
"wang-xinyu/tensorrtx" -> "Tianxiaomo/pytorch-YOLOv4"
"wang-xinyu/tensorrtx" -> "RangiLyu/nanodet"
"wang-xinyu/tensorrtx" -> "jkjung-avt/tensorrt_demos"
"wang-xinyu/tensorrtx" -> "ultralytics/yolov3"
"wang-xinyu/tensorrtx" -> "daquexian/onnx-simplifier"
"wang-xinyu/tensorrtx" -> "xingyizhou/CenterNet"
"wang-xinyu/tensorrtx" -> "WongKinYiu/yolov7"
"wang-xinyu/tensorrtx" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"wang-xinyu/tensorrtx" -> "dusty-nv/jetson-inference" ["e"=1]
"persistforever/cifar10-tensorflow" -> "yhlleo/tensorflow.cifar10"
"persistforever/cifar10-tensorflow" -> "BIGBALLON/cifar-10-cnn"
"persistforever/cifar10-tensorflow" -> "wenxinxu/resnet-in-tensorflow"
"persistforever/cifar10-tensorflow" -> "Ecohnoch/tensorflow-cifar100"
"persistforever/cifar10-tensorflow" -> "dontfollowmeimcrazy/imagenet"
"persistforever/cifar10-tensorflow" -> "hwalsuklee/tensorflow-mnist-cnn"
"persistforever/cifar10-tensorflow" -> "NanGC/CNN"
"persistforever/cifar10-tensorflow" -> "hujunxianligong/Tensorflow-CNN-Tutorial"
"persistforever/cifar10-tensorflow" -> "wolfib/image-classification-CIFAR10-tf" ["e"=1]
"JaidedAI/EasyOCR" -> "PaddlePaddle/PaddleOCR"
"JaidedAI/EasyOCR" -> "clovaai/deep-text-recognition-benchmark" ["e"=1]
"JaidedAI/EasyOCR" -> "chineseocr/chineseocr" ["e"=1]
"JaidedAI/EasyOCR" -> "tesseract-ocr/tesseract"
"JaidedAI/EasyOCR" -> "clovaai/CRAFT-pytorch" ["e"=1]
"JaidedAI/EasyOCR" -> "ultralytics/yolov5"
"JaidedAI/EasyOCR" -> "facebookresearch/detectron2"
"JaidedAI/EasyOCR" -> "Belval/TextRecognitionDataGenerator" ["e"=1]
"JaidedAI/EasyOCR" -> "ouyanghuiyu/chineseocr_lite" ["e"=1]
"JaidedAI/EasyOCR" -> "open-mmlab/mmocr" ["e"=1]
"JaidedAI/EasyOCR" -> "streamlit/streamlit" ["e"=1]
"JaidedAI/EasyOCR" -> "rwightman/pytorch-image-models"
"JaidedAI/EasyOCR" -> "heartexlabs/label-studio"
"JaidedAI/EasyOCR" -> "open-mmlab/mmdetection"
"JaidedAI/EasyOCR" -> "willmcgugan/rich" ["e"=1]
"facebookresearch/moco" -> "google-research/simclr"
"facebookresearch/moco" -> "facebookresearch/swav"
"facebookresearch/moco" -> "HobbitLong/PyContrast"
"facebookresearch/moco" -> "HobbitLong/CMC"
"facebookresearch/moco" -> "sthalles/SimCLR"
"facebookresearch/moco" -> "facebookresearch/mae"
"facebookresearch/moco" -> "lucidrains/byol-pytorch"
"facebookresearch/moco" -> "facebookresearch/moco-v3"
"facebookresearch/moco" -> "HobbitLong/SupContrast"
"facebookresearch/moco" -> "open-mmlab/OpenSelfSup"
"facebookresearch/moco" -> "facebookresearch/deit"
"facebookresearch/moco" -> "jason718/awesome-self-supervised-learning"
"facebookresearch/moco" -> "facebookresearch/dino"
"facebookresearch/moco" -> "microsoft/Swin-Transformer"
"facebookresearch/moco" -> "lucidrains/vit-pytorch"
"PaddlePaddle/PaddleOCR" -> "JaidedAI/EasyOCR"
"PaddlePaddle/PaddleOCR" -> "ultralytics/yolov5"
"PaddlePaddle/PaddleOCR" -> "PaddlePaddle/PaddleHub"
"PaddlePaddle/PaddleOCR" -> "tesseract-ocr/tesseract"
"PaddlePaddle/PaddleOCR" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/PaddleOCR" -> "chineseocr/chineseocr" ["e"=1]
"PaddlePaddle/PaddleOCR" -> "fighting41love/funNLP" ["e"=1]
"PaddlePaddle/PaddleOCR" -> "PaddlePaddle/Paddle"
"PaddlePaddle/PaddleOCR" -> "open-mmlab/mmdetection"
"PaddlePaddle/PaddleOCR" -> "ouyanghuiyu/chineseocr_lite" ["e"=1]
"PaddlePaddle/PaddleOCR" -> "facebookresearch/detectron2"
"PaddlePaddle/PaddleOCR" -> "deepinsight/insightface"
"PaddlePaddle/PaddleOCR" -> "hpcaitech/ColossalAI" ["e"=1]
"PaddlePaddle/PaddleOCR" -> "rwightman/pytorch-image-models"
"PaddlePaddle/PaddleOCR" -> "microsoft/unilm"
"aim-uofa/AdelaiDet" -> "WXinlong/SOLO"
"aim-uofa/AdelaiDet" -> "tianzhi0549/FCOS"
"aim-uofa/AdelaiDet" -> "dbolya/yolact"
"aim-uofa/AdelaiDet" -> "xingyizhou/CenterNet"
"aim-uofa/AdelaiDet" -> "MhLiao/DB" ["e"=1]
"aim-uofa/AdelaiDet" -> "xieenze/PolarMask"
"aim-uofa/AdelaiDet" -> "Yuliang-Liu/bezier_curve_text_spotting" ["e"=1]
"aim-uofa/AdelaiDet" -> "PeizeSun/SparseR-CNN"
"aim-uofa/AdelaiDet" -> "facebookresearch/detr"
"aim-uofa/AdelaiDet" -> "zhanghang1989/ResNeSt"
"aim-uofa/AdelaiDet" -> "sfzhang15/ATSS"
"aim-uofa/AdelaiDet" -> "xingyizhou/CenterNet2"
"aim-uofa/AdelaiDet" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"aim-uofa/AdelaiDet" -> "zju3dv/snake"
"aim-uofa/AdelaiDet" -> "RangiLyu/nanodet"
"TadasBaltrusaitis/OpenFace" -> "cmusatyalab/openface"
"TadasBaltrusaitis/OpenFace" -> "patrikhuber/eos" ["e"=1]
"TadasBaltrusaitis/OpenFace" -> "YadiraF/PRNet" ["e"=1]
"TadasBaltrusaitis/OpenFace" -> "kpzhang93/MTCNN_face_detection_alignment"
"TadasBaltrusaitis/OpenFace" -> "seetaface/SeetaFaceEngine"
"TadasBaltrusaitis/OpenFace" -> "1adrianb/face-alignment" ["e"=1]
"TadasBaltrusaitis/OpenFace" -> "deepinsight/insightface"
"TadasBaltrusaitis/OpenFace" -> "davidsandberg/facenet"
"TadasBaltrusaitis/OpenFace" -> "cleardusk/3DDFA" ["e"=1]
"TadasBaltrusaitis/OpenFace" -> "davisking/dlib"
"TadasBaltrusaitis/OpenFace" -> "YadiraF/face3d" ["e"=1]
"TadasBaltrusaitis/OpenFace" -> "ShiqiYu/libfacedetection"
"TadasBaltrusaitis/OpenFace" -> "natanielruiz/deep-head-pose" ["e"=1]
"TadasBaltrusaitis/OpenFace" -> "TadasBaltrusaitis/CLM-framework" ["e"=1]
"TadasBaltrusaitis/OpenFace" -> "ZheC/Realtime_Multi-Person_Pose_Estimation" ["e"=1]
"PaddlePaddle/PaddleGAN" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/PaddleGAN" -> "PaddlePaddle/PaddleSeg"
"PaddlePaddle/PaddleGAN" -> "PaddlePaddle/PaddleHub"
"PaddlePaddle/PaddleGAN" -> "PaddlePaddle/PaddleClas"
"PaddlePaddle/PaddleGAN" -> "Rudrabha/Wav2Lip" ["e"=1]
"PaddlePaddle/PaddleGAN" -> "PaddlePaddle/Paddle"
"PaddlePaddle/PaddleGAN" -> "PaddlePaddle/PaddleNLP" ["e"=1]
"PaddlePaddle/PaddleGAN" -> "PaddlePaddle/PaddleSpeech" ["e"=1]
"PaddlePaddle/PaddleGAN" -> "PaddlePaddle/PaddleOCR"
"PaddlePaddle/PaddleGAN" -> "PaddlePaddle/PaddleX"
"PaddlePaddle/PaddleGAN" -> "PeterL1n/BackgroundMattingV2" ["e"=1]
"PaddlePaddle/PaddleGAN" -> "PaddlePaddle/VisualDL"
"PaddlePaddle/PaddleGAN" -> "microsoft/Bringing-Old-Photos-Back-to-Life" ["e"=1]
"PaddlePaddle/PaddleGAN" -> "open-mmlab/mmediting" ["e"=1]
"PaddlePaddle/PaddleGAN" -> "minivision-ai/photo2cartoon" ["e"=1]
"machrisaa/tensorflow-vgg" -> "ry/tensorflow-vgg16"
"machrisaa/tensorflow-vgg" -> "ry/tensorflow-resnet"
"machrisaa/tensorflow-vgg" -> "ethereon/caffe-tensorflow"
"machrisaa/tensorflow-vgg" -> "smallcorgi/Faster-RCNN_TF"
"machrisaa/tensorflow-vgg" -> "MarvinTeichmann/tensorflow-fcn" ["e"=1]
"machrisaa/tensorflow-vgg" -> "kratzert/finetune_alexnet_with_tensorflow"
"machrisaa/tensorflow-vgg" -> "carpedm20/DCGAN-tensorflow" ["e"=1]
"machrisaa/tensorflow-vgg" -> "balancap/SSD-Tensorflow"
"machrisaa/tensorflow-vgg" -> "endernewton/tf-faster-rcnn"
"machrisaa/tensorflow-vgg" -> "rbgirshick/py-faster-rcnn"
"machrisaa/tensorflow-vgg" -> "shekkizh/FCN.tensorflow" ["e"=1]
"machrisaa/tensorflow-vgg" -> "gliese581gg/YOLO_tensorflow"
"machrisaa/tensorflow-vgg" -> "shelhamer/fcn.berkeleyvision.org"
"machrisaa/tensorflow-vgg" -> "CharlesShang/FastMaskRCNN"
"machrisaa/tensorflow-vgg" -> "rbgirshick/fast-rcnn"
"facebookresearch/detr" -> "microsoft/Swin-Transformer"
"facebookresearch/detr" -> "fundamentalvision/Deformable-DETR"
"facebookresearch/detr" -> "facebookresearch/detectron2"
"facebookresearch/detr" -> "open-mmlab/mmdetection"
"facebookresearch/detr" -> "lucidrains/vit-pytorch"
"facebookresearch/detr" -> "rwightman/pytorch-image-models"
"facebookresearch/detr" -> "google-research/vision_transformer"
"facebookresearch/detr" -> "xingyizhou/CenterNet"
"facebookresearch/detr" -> "facebookresearch/deit"
"facebookresearch/detr" -> "facebookresearch/maskrcnn-benchmark"
"facebookresearch/detr" -> "openai/CLIP"
"facebookresearch/detr" -> "facebookresearch/SlowFast" ["e"=1]
"facebookresearch/detr" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"facebookresearch/detr" -> "lukemelas/EfficientNet-PyTorch"
"facebookresearch/detr" -> "tianzhi0549/FCOS"
"pytorch/tutorials" -> "pytorch/examples"
"pytorch/tutorials" -> "pytorch/vision"
"pytorch/tutorials" -> "yunjey/pytorch-tutorial" ["e"=1]
"pytorch/tutorials" -> "spro/practical-pytorch" ["e"=1]
"pytorch/tutorials" -> "jcjohnson/pytorch-examples"
"pytorch/tutorials" -> "bharathgs/Awesome-pytorch-list" ["e"=1]
"pytorch/tutorials" -> "pytorch/text" ["e"=1]
"pytorch/tutorials" -> "ritchieng/the-incredible-pytorch" ["e"=1]
"pytorch/tutorials" -> "pytorch/pytorch"
"pytorch/tutorials" -> "MorvanZhou/PyTorch-Tutorial" ["e"=1]
"pytorch/tutorials" -> "hunkim/PyTorchZeroToAll" ["e"=1]
"pytorch/tutorials" -> "udacity/deep-learning-v2-pytorch" ["e"=1]
"pytorch/tutorials" -> "allenai/allennlp" ["e"=1]
"pytorch/tutorials" -> "OpenNMT/OpenNMT-py" ["e"=1]
"pytorch/tutorials" -> "jadore801120/attention-is-all-you-need-pytorch" ["e"=1]
"hustvl/YOLOS" -> "hustvl/QueryInst"
"hustvl/YOLOS" -> "naver-ai/vidt" ["e"=1]
"hustvl/YOLOS" -> "fundamentalvision/Deformable-DETR"
"hustvl/YOLOS" -> "hustvl/MIMDet"
"hustvl/YOLOS" -> "IDEACVR/awesome-detection-transformer" ["e"=1]
"hustvl/YOLOS" -> "Meituan-AutoML/Twins"
"hustvl/YOLOS" -> "megvii-model/YOLOF"
"hustvl/YOLOS" -> "SwinTransformer/Swin-Transformer-Object-Detection"
"hustvl/YOLOS" -> "xingyizhou/CenterNet2"
"hustvl/YOLOS" -> "baaivision/EVA" ["e"=1]
"hustvl/YOLOS" -> "Atten4Vis/ConditionalDETR" ["e"=1]
"hustvl/YOLOS" -> "WongKinYiu/yolor"
"hustvl/YOLOS" -> "PeizeSun/SparseR-CNN"
"hustvl/YOLOS" -> "whai362/PVT"
"hustvl/YOLOS" -> "ashkamath/mdetr" ["e"=1]
"onnx/onnx" -> "microsoft/onnxruntime"
"onnx/onnx" -> "lutzroeder/netron"
"onnx/onnx" -> "NVIDIA/TensorRT"
"onnx/onnx" -> "onnx/tutorials"
"onnx/onnx" -> "Tencent/ncnn"
"onnx/onnx" -> "onnx/models"
"onnx/onnx" -> "alibaba/MNN"
"onnx/onnx" -> "facebookresearch/Detectron"
"onnx/onnx" -> "pytorch/pytorch"
"onnx/onnx" -> "open-mmlab/mmdetection"
"onnx/onnx" -> "dmlc/tvm" ["e"=1]
"onnx/onnx" -> "NVIDIA/apex"
"onnx/onnx" -> "google/jax" ["e"=1]
"onnx/onnx" -> "onnx/onnx-tensorrt"
"onnx/onnx" -> "horovod/horovod"
"opencv/cvat" -> "wkentaro/labelme"
"opencv/cvat" -> "microsoft/VoTT"
"opencv/cvat" -> "aleju/imgaug"
"opencv/cvat" -> "tzutalin/labelImg"
"opencv/cvat" -> "xingyizhou/CenterNet"
"opencv/cvat" -> "albu/albumentations"
"opencv/cvat" -> "heartexlabs/label-studio"
"opencv/cvat" -> "dmlc/gluon-cv"
"opencv/cvat" -> "facebookresearch/maskrcnn-benchmark"
"opencv/cvat" -> "open-mmlab/mmdetection"
"opencv/cvat" -> "rafaelpadilla/Object-Detection-Metrics"
"opencv/cvat" -> "amusi/awesome-object-detection"
"opencv/cvat" -> "lukemelas/EfficientNet-PyTorch"
"opencv/cvat" -> "nwojke/deep_sort" ["e"=1]
"opencv/cvat" -> "dbolya/yolact"
"WongKinYiu/yolov7" -> "meituan/YOLOv6"
"WongKinYiu/yolov7" -> "ultralytics/ultralytics"
"WongKinYiu/yolov7" -> "Megvii-BaseDetection/YOLOX"
"WongKinYiu/yolov7" -> "ultralytics/yolov5"
"WongKinYiu/yolov7" -> "jinfagang/yolov7"
"WongKinYiu/yolov7" -> "wang-xinyu/tensorrtx"
"WongKinYiu/yolov7" -> "open-mmlab/mmdetection"
"WongKinYiu/yolov7" -> "microsoft/Swin-Transformer"
"WongKinYiu/yolov7" -> "PaddlePaddle/PaddleDetection"
"WongKinYiu/yolov7" -> "rwightman/pytorch-image-models"
"WongKinYiu/yolov7" -> "facebookresearch/detectron2"
"WongKinYiu/yolov7" -> "iscyy/yoloair"
"WongKinYiu/yolov7" -> "RangiLyu/nanodet"
"WongKinYiu/yolov7" -> "facebookresearch/detr"
"WongKinYiu/yolov7" -> "Tianxiaomo/pytorch-YOLOv4"
"heartexlabs/label-studio" -> "doccano/doccano" ["e"=1]
"heartexlabs/label-studio" -> "gradio-app/gradio" ["e"=1]
"heartexlabs/label-studio" -> "heartexlabs/awesome-data-labeling"
"heartexlabs/label-studio" -> "streamlit/streamlit" ["e"=1]
"heartexlabs/label-studio" -> "iterative/dvc" ["e"=1]
"heartexlabs/label-studio" -> "mlflow/mlflow" ["e"=1]
"heartexlabs/label-studio" -> "UKPLab/sentence-transformers" ["e"=1]
"heartexlabs/label-studio" -> "PyTorchLightning/pytorch-lightning"
"heartexlabs/label-studio" -> "albumentations-team/albumentations"
"heartexlabs/label-studio" -> "wkentaro/labelme"
"heartexlabs/label-studio" -> "deepset-ai/haystack" ["e"=1]
"heartexlabs/label-studio" -> "opencv/cvat"
"heartexlabs/label-studio" -> "facebookresearch/faiss" ["e"=1]
"heartexlabs/label-studio" -> "rwightman/pytorch-image-models"
"heartexlabs/label-studio" -> "lutzroeder/netron"
"chengyangfu/caffe" -> "MTCloudVision/mxnet-dssd"
"chengyangfu/caffe" -> "chuanqi305/FocalLoss"
"chengyangfu/caffe" -> "sciencefans/Focal-Loss"
"chengyangfu/caffe" -> "zimenglan-sysu-512/Focal-Loss"
"chengyangfu/caffe" -> "szq0214/DSOD"
"chengyangfu/caffe" -> "yonghenglh6/DepthwiseConvolution"
"opencv/opencv_contrib" -> "opencv/opencv"
"opencv/opencv_contrib" -> "PointCloudLibrary/pcl" ["e"=1]
"opencv/opencv_contrib" -> "raulmur/ORB_SLAM2" ["e"=1]
"opencv/opencv_contrib" -> "spmallick/learnopencv"
"opencv/opencv_contrib" -> "davisking/dlib"
"opencv/opencv_contrib" -> "pjreddie/darknet"
"opencv/opencv_contrib" -> "gaoxiang12/slambook" ["e"=1]
"opencv/opencv_contrib" -> "Tencent/ncnn"
"opencv/opencv_contrib" -> "opencv/opencv_extra"
"opencv/opencv_contrib" -> "ceres-solver/ceres-solver" ["e"=1]
"opencv/opencv_contrib" -> "HKUST-Aerial-Robotics/VINS-Mono" ["e"=1]
"opencv/opencv_contrib" -> "RainerKuemmerle/g2o" ["e"=1]
"opencv/opencv_contrib" -> "NVIDIA/TensorRT"
"opencv/opencv_contrib" -> "weiliu89/caffe"
"opencv/opencv_contrib" -> "openMVG/openMVG" ["e"=1]
"xingyizhou/ExtremeNet" -> "princeton-vl/CornerNet"
"xingyizhou/ExtremeNet" -> "princeton-vl/CornerNet-Lite"
"xingyizhou/ExtremeNet" -> "Duankaiwen/CenterNet"
"xingyizhou/ExtremeNet" -> "yihui-he/KL-Loss"
"xingyizhou/ExtremeNet" -> "ruinmessi/RFBNet"
"xingyizhou/ExtremeNet" -> "tianzhi0549/FCOS"
"xingyizhou/ExtremeNet" -> "TuSimple/simpledet"
"xingyizhou/ExtremeNet" -> "qijiezhao/M2Det"
"xingyizhou/ExtremeNet" -> "microsoft/RepPoints"
"xingyizhou/ExtremeNet" -> "sfzhang15/ATSS"
"xingyizhou/ExtremeNet" -> "OceanPang/Libra_R-CNN"
"xingyizhou/ExtremeNet" -> "sfzhang15/RefineDet"
"xingyizhou/ExtremeNet" -> "mahyarnajibi/SNIPER"
"xingyizhou/ExtremeNet" -> "vacancy/PreciseRoIPooling"
"xingyizhou/ExtremeNet" -> "zjhuang22/maskscoring_rcnn"
"spmallick/learnopencv" -> "opencv/opencv"
"spmallick/learnopencv" -> "matterport/Mask_RCNN"
"spmallick/learnopencv" -> "pjreddie/darknet"
"spmallick/learnopencv" -> "AlexeyAB/darknet"
"spmallick/learnopencv" -> "CMU-Perceptual-Computing-Lab/openpose"
"spmallick/learnopencv" -> "open-mmlab/mmdetection"
"spmallick/learnopencv" -> "tzutalin/labelImg"
"spmallick/learnopencv" -> "jbhuang0604/awesome-computer-vision" ["e"=1]
"spmallick/learnopencv" -> "gzr2017/ImageProcessing100Wen" ["e"=1]
"spmallick/learnopencv" -> "facebookresearch/detectron2"
"spmallick/learnopencv" -> "deepinsight/insightface"
"spmallick/learnopencv" -> "aleju/imgaug"
"spmallick/learnopencv" -> "facebookresearch/Detectron"
"spmallick/learnopencv" -> "davisking/dlib"
"spmallick/learnopencv" -> "lutzroeder/netron"
"facebookresearch/Detectron" -> "matterport/Mask_RCNN"
"facebookresearch/Detectron" -> "facebookresearch/detectron2"
"facebookresearch/Detectron" -> "facebookresearch/maskrcnn-benchmark"
"facebookresearch/Detectron" -> "open-mmlab/mmdetection"
"facebookresearch/Detectron" -> "rbgirshick/py-faster-rcnn"
"facebookresearch/Detectron" -> "tensorflow/models"
"facebookresearch/Detectron" -> "pjreddie/darknet"
"facebookresearch/Detectron" -> "jwyang/faster-rcnn.pytorch"
"facebookresearch/Detectron" -> "aleju/imgaug"
"facebookresearch/Detectron" -> "hoya012/deep_learning_object_detection"
"facebookresearch/Detectron" -> "tzutalin/labelImg"
"facebookresearch/Detectron" -> "pytorch/pytorch"
"facebookresearch/Detectron" -> "junyanz/pytorch-CycleGAN-and-pix2pix" ["e"=1]
"facebookresearch/Detectron" -> "pytorch/examples"
"facebookresearch/Detectron" -> "amusi/awesome-object-detection"
"extreme-assistant/CVPR2021-Paper-Code-Interpretation" -> "amusi/CVPR2021-Papers-with-Code"
"extreme-assistant/CVPR2021-Paper-Code-Interpretation" -> "extreme-assistant/ICCV2021-Paper-Code-Interpretation"
"extreme-assistant/CVPR2021-Paper-Code-Interpretation" -> "52CV/CVPR-2021-Papers"
"extreme-assistant/CVPR2021-Paper-Code-Interpretation" -> "amusi/ICCV2021-Papers-with-Code"
"extreme-assistant/CVPR2021-Paper-Code-Interpretation" -> "microsoft/Swin-Transformer"
"extreme-assistant/CVPR2021-Paper-Code-Interpretation" -> "dk-liang/Awesome-Visual-Transformer"
"extreme-assistant/CVPR2021-Paper-Code-Interpretation" -> "xmu-xiaoma666/External-Attention-pytorch"
"extreme-assistant/CVPR2021-Paper-Code-Interpretation" -> "extreme-assistant/survey-computer-vision"
"extreme-assistant/CVPR2021-Paper-Code-Interpretation" -> "amusi/daily-paper-computer-vision"
"extreme-assistant/CVPR2021-Paper-Code-Interpretation" -> "amusi/ECCV2020-Code"
"extreme-assistant/CVPR2021-Paper-Code-Interpretation" -> "DingXiaoH/RepVGG"
"extreme-assistant/CVPR2021-Paper-Code-Interpretation" -> "amusi/CVPR2020-Code"
"extreme-assistant/CVPR2021-Paper-Code-Interpretation" -> "lucidrains/vit-pytorch"
"extreme-assistant/CVPR2021-Paper-Code-Interpretation" -> "aim-uofa/AdelaiDet"
"extreme-assistant/CVPR2021-Paper-Code-Interpretation" -> "facebookresearch/ConvNeXt"
"extreme-assistant/ICCV2021-Paper-Code-Interpretation" -> "extreme-assistant/CVPR2021-Paper-Code-Interpretation"
"extreme-assistant/ICCV2021-Paper-Code-Interpretation" -> "amusi/ICCV2021-Papers-with-Code"
"extreme-assistant/ICCV2021-Paper-Code-Interpretation" -> "extreme-assistant/CVPR2022-Paper-Code-Interpretation"
"extreme-assistant/ICCV2021-Paper-Code-Interpretation" -> "amusi/ECCV2022-Papers-with-Code"
"extreme-assistant/ICCV2021-Paper-Code-Interpretation" -> "amusi/ECCV2020-Code"
"extreme-assistant/ICCV2021-Paper-Code-Interpretation" -> "extreme-assistant/ECCV2022-Paper-Code-Interpretation"
"extreme-assistant/ICCV2021-Paper-Code-Interpretation" -> "amusi/CVPR2021-Papers-with-Code"
"extreme-assistant/ICCV2021-Paper-Code-Interpretation" -> "52CV/CVPR-2021-Papers"
"extreme-assistant/ICCV2021-Paper-Code-Interpretation" -> "amusi/CVPR2022-Papers-with-Code"
"extreme-assistant/ICCV2021-Paper-Code-Interpretation" -> "extreme-assistant/Awesome-CV-Team"
"extreme-assistant/ICCV2021-Paper-Code-Interpretation" -> "Kobaayyy/Awesome-CVPR2021-CVPR2020-Low-Level-Vision" ["e"=1]
"extreme-assistant/ICCV2021-Paper-Code-Interpretation" -> "pengzhiliang/MAE-pytorch"
"extreme-assistant/ICCV2021-Paper-Code-Interpretation" -> "whai362/PVT"
"extreme-assistant/ICCV2021-Paper-Code-Interpretation" -> "MenghaoGuo/Awesome-Vision-Attentions"
"extreme-assistant/ICCV2021-Paper-Code-Interpretation" -> "extreme-assistant/survey-computer-vision-2021"
"hoya012/deep_learning_object_detection" -> "amusi/awesome-object-detection"
"hoya012/deep_learning_object_detection" -> "open-mmlab/mmdetection"
"hoya012/deep_learning_object_detection" -> "facebookresearch/maskrcnn-benchmark"
"hoya012/deep_learning_object_detection" -> "mrgloom/awesome-semantic-segmentation"
"hoya012/deep_learning_object_detection" -> "xingyizhou/CenterNet"
"hoya012/deep_learning_object_detection" -> "jwyang/faster-rcnn.pytorch"
"hoya012/deep_learning_object_detection" -> "eriklindernoren/PyTorch-YOLOv3"
"hoya012/deep_learning_object_detection" -> "ultralytics/yolov3"
"hoya012/deep_learning_object_detection" -> "facebookresearch/detectron2"
"hoya012/deep_learning_object_detection" -> "facebookresearch/Detectron"
"hoya012/deep_learning_object_detection" -> "rafaelpadilla/Object-Detection-Metrics"
"hoya012/deep_learning_object_detection" -> "amdegroot/ssd.pytorch"
"hoya012/deep_learning_object_detection" -> "aleju/imgaug"
"hoya012/deep_learning_object_detection" -> "Cadene/pretrained-models.pytorch"
"hoya012/deep_learning_object_detection" -> "matterport/Mask_RCNN"
"open-mmlab/mmflow" -> "open-mmlab/mim"
"open-mmlab/mmflow" -> "open-mmlab/mmfewshot"
"open-mmlab/mmflow" -> "open-mmlab/mmrazor"
"open-mmlab/mmflow" -> "open-mmlab/mmhuman3d" ["e"=1]
"open-mmlab/mmflow" -> "zacjiang/GMA" ["e"=1]
"open-mmlab/mmflow" -> "open-mmlab/mmdeploy"
"open-mmlab/mmflow" -> "open-mmlab/mmengine"
"open-mmlab/mmflow" -> "open-mmlab/mmyolo"
"open-mmlab/mmflow" -> "jshilong/FisherPruning"
"open-mmlab/mmflow" -> "princeton-vl/RAFT" ["e"=1]
"open-mmlab/mmflow" -> "open-mmlab/mmeval"
"open-mmlab/mmflow" -> "open-mmlab/mmselfsup"
"open-mmlab/mmflow" -> "open-mmlab/MMGEN-FaceStylor"
"open-mmlab/mmflow" -> "lliuz/ARFlow" ["e"=1]
"open-mmlab/mmflow" -> "open-mmlab/mmgeneration"
"cupy/cupy" -> "numba/numba" ["e"=1]
"cupy/cupy" -> "google/jax" ["e"=1]
"cupy/cupy" -> "rapidsai/cudf" ["e"=1]
"cupy/cupy" -> "chainer/chainer"
"cupy/cupy" -> "HIPS/autograd" ["e"=1]
"cupy/cupy" -> "rapidsai/cuml" ["e"=1]
"cupy/cupy" -> "dask/dask" ["e"=1]
"cupy/cupy" -> "NVIDIA/DALI"
"cupy/cupy" -> "NVIDIA/apex"
"cupy/cupy" -> "facebookresearch/visdom"
"cupy/cupy" -> "arogozhnikov/einops"
"cupy/cupy" -> "ray-project/ray" ["e"=1]
"cupy/cupy" -> "pytorch/ignite"
"cupy/cupy" -> "pybind/pybind11" ["e"=1]
"cupy/cupy" -> "scipy/scipy" ["e"=1]
"maozezhong/CV_ToolBox" -> "maozezhong/TIANCHI_XUELANG_AI" ["e"=1]
"maozezhong/CV_ToolBox" -> "lzx1413/PytorchSSD"
"maozezhong/CV_ToolBox" -> "Paperspace/DataAugmentationForObjectDetection"
"maozezhong/CV_ToolBox" -> "pureyangcry/tools"
"maozezhong/CV_ToolBox" -> "Stinky-Tofu/Stronger-yolo"
"maozezhong/CV_ToolBox" -> "cizhenshi/TianchiGuangdong2019_2th" ["e"=1]
"maozezhong/CV_ToolBox" -> "maozezhong/TIANCHI_XUELANG_AI_2" ["e"=1]
"maozezhong/CV_ToolBox" -> "guoruoqian/cascade-rcnn_Pytorch"
"maozezhong/CV_ToolBox" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"maozezhong/CV_ToolBox" -> "zhengye1995/Tianchi-2019-Guangdong-Intelligent-identification-of-cloth-defects-rank5" ["e"=1]
"maozezhong/CV_ToolBox" -> "shiyemin/voc2coco" ["e"=1]
"maozezhong/CV_ToolBox" -> "spytensor/prepare_detection_dataset"
"opendatalab/labelU" -> "opendatalab/opendatalab-python-sdk"
"opendatalab/labelU" -> "opendatalab/dsdl-docs"
"opendatalab/labelU" -> "opendatalab/opendatalab-datasets"
"opendatalab/labelU" -> "opendatalab/label-u"
"opendatalab/labelU" -> "opendatalab/labelbeePro"
"YuwenXiong/py-R-FCN" -> "daijifeng001/R-FCN"
"YuwenXiong/py-R-FCN" -> "zhaoweicai/cascade-rcnn"
"YuwenXiong/py-R-FCN" -> "bharatsingh430/soft-nms"
"YuwenXiong/py-R-FCN" -> "sfzhang15/RefineDet"
"YuwenXiong/py-R-FCN" -> "xdever/RFCN-tensorflow"
"YuwenXiong/py-R-FCN" -> "daijifeng001/caffe-rfcn"
"YuwenXiong/py-R-FCN" -> "msracver/Deformable-ConvNets"
"YuwenXiong/py-R-FCN" -> "PureDiors/pytorch_RFCN"
"YuwenXiong/py-R-FCN" -> "unsky/FPN"
"YuwenXiong/py-R-FCN" -> "abhi2610/ohem"
"YuwenXiong/py-R-FCN" -> "szq0214/DSOD"
"YuwenXiong/py-R-FCN" -> "msracver/Relation-Networks-for-Object-Detection"
"YuwenXiong/py-R-FCN" -> "ruinmessi/RFBNet"
"YuwenXiong/py-R-FCN" -> "vacancy/PreciseRoIPooling"
"YuwenXiong/py-R-FCN" -> "bharatsingh430/Deformable-ConvNets"
"chuanqi305/MobileNet-SSD" -> "shicai/MobileNet-Caffe"
"chuanqi305/MobileNet-SSD" -> "weiliu89/caffe"
"chuanqi305/MobileNet-SSD" -> "chuanqi305/MobileNetv2-SSDLite"
"chuanqi305/MobileNet-SSD" -> "yonghenglh6/DepthwiseConvolution"
"chuanqi305/MobileNet-SSD" -> "eric612/MobileNet-YOLO"
"chuanqi305/MobileNet-SSD" -> "Zehaos/MobileNet"
"chuanqi305/MobileNet-SSD" -> "balancap/SSD-Tensorflow"
"chuanqi305/MobileNet-SSD" -> "soeaver/caffe-model"
"chuanqi305/MobileNet-SSD" -> "qfgaohao/pytorch-ssd"
"chuanqi305/MobileNet-SSD" -> "sfzhang15/RefineDet"
"chuanqi305/MobileNet-SSD" -> "Robert-JunWang/Pelee"
"chuanqi305/MobileNet-SSD" -> "farmingyard/ShuffleNet"
"chuanqi305/MobileNet-SSD" -> "kpzhang93/MTCNN_face_detection_alignment"
"chuanqi305/MobileNet-SSD" -> "marvis/pytorch-caffe-darknet-convert"
"chuanqi305/MobileNet-SSD" -> "amdegroot/ssd.pytorch"
"cvjena/cnn-models" -> "lim0606/caffe-googlenet-bn"
"cvjena/cnn-models" -> "soeaver/caffe-model"
"cvjena/cnn-models" -> "HolmesShuan/ResNet-18-Caffemodel-on-ImageNet"
"cvjena/cnn-models" -> "jay-mahadeokar/pynetbuilder"
"cvjena/cnn-models" -> "shicai/DenseNet-Caffe"
"cvjena/cnn-models" -> "antingshen/resnet-protofiles"
"cvjena/cnn-models" -> "liuzhuang13/DenseNetCaffe"
"cvjena/cnn-models" -> "twtygqyy/caffe-augmentation"
"cvjena/cnn-models" -> "kevinlin311tw/caffe-augmentation"
"cvjena/cnn-models" -> "xiaolonw/adversarial-frcnn"
"cvjena/cnn-models" -> "sciencefans/coco_loss" ["e"=1]
"cvjena/cnn-models" -> "shicai/MobileNet-Caffe"
"cvjena/cnn-models" -> "ydwen/caffe-face" ["e"=1]
"cvjena/cnn-models" -> "wenwei202/caffe" ["e"=1]
"cvjena/cnn-models" -> "yonghenglh6/DepthwiseConvolution"
"weiliu89/caffe" -> "balancap/SSD-Tensorflow"
"weiliu89/caffe" -> "rbgirshick/py-faster-rcnn"
"weiliu89/caffe" -> "chuanqi305/MobileNet-SSD"
"weiliu89/caffe" -> "amdegroot/ssd.pytorch"
"weiliu89/caffe" -> "daijifeng001/R-FCN"
"weiliu89/caffe" -> "rbgirshick/fast-rcnn"
"weiliu89/caffe" -> "KaimingHe/deep-residual-networks"
"weiliu89/caffe" -> "shicai/MobileNet-Caffe"
"weiliu89/caffe" -> "ShaoqingRen/faster_rcnn"
"weiliu89/caffe" -> "msracver/Deformable-ConvNets"
"weiliu89/caffe" -> "soeaver/caffe-model"
"weiliu89/caffe" -> "sfzhang15/RefineDet"
"weiliu89/caffe" -> "liuzhuang13/DenseNet"
"weiliu89/caffe" -> "CharlesShang/FastMaskRCNN"
"weiliu89/caffe" -> "kpzhang93/MTCNN_face_detection_alignment"
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/PaddleSeg"
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/PaddleX"
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/PaddleSlim"
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/PaddleOCR"
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/PaddleGAN"
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/Paddle-Lite"
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/PaddleHub"
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/Paddle"
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/models"
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/PaddleVideo" ["e"=1]
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/VisualDL"
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/FastDeploy"
"PaddlePaddle/PaddleClas" -> "Megvii-BaseDetection/YOLOX"
"PaddlePaddle/PaddleClas" -> "PaddlePaddle/PaddleNLP" ["e"=1]
"google/mediapipe" -> "CMU-Perceptual-Computing-Lab/openpose"
"google/mediapipe" -> "deepinsight/insightface"
"google/mediapipe" -> "facebookresearch/detectron2"
"google/mediapipe" -> "Tencent/ncnn"
"google/mediapipe" -> "lutzroeder/netron"
"google/mediapipe" -> "open-mmlab/mmdetection"
"google/mediapipe" -> "tensorflow/tfjs-models" ["e"=1]
"google/mediapipe" -> "MVIG-SJTU/AlphaPose" ["e"=1]
"google/mediapipe" -> "ultralytics/yolov5"
"google/mediapipe" -> "rwightman/pytorch-image-models"
"google/mediapipe" -> "alibaba/MNN"
"google/mediapipe" -> "spmallick/learnopencv"
"google/mediapipe" -> "ShiqiYu/libfacedetection"
"google/mediapipe" -> "google-research/google-research" ["e"=1]
"google/mediapipe" -> "facebookresearch/Detectron"
"open-mmlab/mmsegmentation" -> "open-mmlab/mmcv"
"open-mmlab/mmsegmentation" -> "qubvel/segmentation_models.pytorch"
"open-mmlab/mmsegmentation" -> "HRNet/HRNet-Semantic-Segmentation" ["e"=1]
"open-mmlab/mmsegmentation" -> "open-mmlab/mmclassification"
"open-mmlab/mmsegmentation" -> "open-mmlab/mmdetection"
"open-mmlab/mmsegmentation" -> "microsoft/Swin-Transformer"
"open-mmlab/mmsegmentation" -> "NVlabs/SegFormer"
"open-mmlab/mmsegmentation" -> "Tramac/awesome-semantic-segmentation-pytorch" ["e"=1]
"open-mmlab/mmsegmentation" -> "rwightman/pytorch-image-models"
"open-mmlab/mmsegmentation" -> "mrgloom/awesome-semantic-segmentation"
"open-mmlab/mmsegmentation" -> "lucidrains/vit-pytorch"
"open-mmlab/mmsegmentation" -> "JunMa11/SegLoss" ["e"=1]
"open-mmlab/mmsegmentation" -> "open-mmlab/mmdetection3d" ["e"=1]
"open-mmlab/mmsegmentation" -> "facebookresearch/ConvNeXt"
"open-mmlab/mmsegmentation" -> "facebookresearch/detr"
"idealo/imagededup" -> "idealo/image-quality-assessment" ["e"=1]
"idealo/imagededup" -> "JohannesBuchner/imagehash"
"idealo/imagededup" -> "idealo/image-super-resolution" ["e"=1]
"idealo/imagededup" -> "facebookresearch/pycls"
"idealo/imagededup" -> "lukemelas/EfficientNet-PyTorch"
"idealo/imagededup" -> "albu/albumentations"
"idealo/imagededup" -> "facebookresearch/SlowFast" ["e"=1]
"idealo/imagededup" -> "philipbl/duplicate-images" ["e"=1]
"idealo/imagededup" -> "aleju/imgaug"
"idealo/imagededup" -> "xingyizhou/CenterNet"
"idealo/imagededup" -> "BloodAxe/pytorch-toolbelt"
"idealo/imagededup" -> "PyRetri/PyRetri" ["e"=1]
"idealo/imagededup" -> "facebookresearch/detr"
"idealo/imagededup" -> "dbolya/yolact"
"idealo/imagededup" -> "KevinMusgrave/pytorch-metric-learning"
"utkuozbulak/pytorch-cnn-visualizations" -> "jacobgil/pytorch-grad-cam"
"utkuozbulak/pytorch-cnn-visualizations" -> "Cadene/pretrained-models.pytorch"
"utkuozbulak/pytorch-cnn-visualizations" -> "rwightman/pytorch-image-models"
"utkuozbulak/pytorch-cnn-visualizations" -> "jwyang/faster-rcnn.pytorch"
"utkuozbulak/pytorch-cnn-visualizations" -> "lukemelas/EfficientNet-PyTorch"
"utkuozbulak/pytorch-cnn-visualizations" -> "facebookresearch/maskrcnn-benchmark"
"utkuozbulak/pytorch-cnn-visualizations" -> "open-mmlab/mmdetection"
"utkuozbulak/pytorch-cnn-visualizations" -> "lucidrains/vit-pytorch"
"utkuozbulak/pytorch-cnn-visualizations" -> "pytorch/vision"
"utkuozbulak/pytorch-cnn-visualizations" -> "eriklindernoren/PyTorch-GAN" ["e"=1]
"utkuozbulak/pytorch-cnn-visualizations" -> "aleju/imgaug"
"utkuozbulak/pytorch-cnn-visualizations" -> "lanpa/tensorboardX"
"utkuozbulak/pytorch-cnn-visualizations" -> "pytorch/examples"
"utkuozbulak/pytorch-cnn-visualizations" -> "CSAILVision/semantic-segmentation-pytorch" ["e"=1]
"utkuozbulak/pytorch-cnn-visualizations" -> "Lyken17/pytorch-OpCounter"
"Jakaria08/EESRGAN" -> "ispc-lab/SmallObjectDetectionList"
"Jakaria08/EESRGAN" -> "Chasel-Tsui/mmdet-rfla"
"Jakaria08/EESRGAN" -> "chaozhong2010/VHR-10_dataset_coco"
"Jakaria08/EESRGAN" -> "gmayday1997/SmallObjectAugmentation"
"princeton-vl/CornerNet" -> "princeton-vl/CornerNet-Lite"
"princeton-vl/CornerNet" -> "Duankaiwen/CenterNet"
"princeton-vl/CornerNet" -> "tianzhi0549/FCOS"
"princeton-vl/CornerNet" -> "xingyizhou/CenterNet"
"princeton-vl/CornerNet" -> "xingyizhou/ExtremeNet"
"princeton-vl/CornerNet" -> "ruinmessi/RFBNet"
"princeton-vl/CornerNet" -> "TuSimple/simpledet"
"princeton-vl/CornerNet" -> "sfzhang15/RefineDet"
"princeton-vl/CornerNet" -> "mahyarnajibi/SNIPER"
"princeton-vl/CornerNet" -> "zhaoweicai/cascade-rcnn"
"princeton-vl/CornerNet" -> "qijiezhao/M2Det"
"princeton-vl/CornerNet" -> "sfzhang15/ATSS"
"princeton-vl/CornerNet" -> "msracver/Deformable-ConvNets"
"princeton-vl/CornerNet" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"princeton-vl/CornerNet" -> "amdegroot/ssd.pytorch"
"CSAILVision/places365" -> "GKalliatakis/Keras-VGG16-places365"
"CSAILVision/places365" -> "metalbubble/CAM" ["e"=1]
"CSAILVision/places365" -> "filipradenovic/cnnimageretrieval-pytorch" ["e"=1]
"CSAILVision/places365" -> "wanglimin/MRCNN-Scene-Recognition" ["e"=1]
"CSAILVision/places365" -> "CSAILVision/semantic-segmentation-pytorch" ["e"=1]
"CSAILVision/places365" -> "ethereon/caffe-tensorflow"
"CSAILVision/places365" -> "hujie-frank/SENet"
"CSAILVision/places365" -> "yjxiong/temporal-segment-networks" ["e"=1]
"CSAILVision/places365" -> "Relja/netvlad" ["e"=1]
"CSAILVision/places365" -> "Tencent/tencent-ml-images"
"CSAILVision/places365" -> "Cadene/pretrained-models.pytorch"
"CSAILVision/places365" -> "meetshah1995/pytorch-semseg" ["e"=1]
"CSAILVision/places365" -> "longcw/faster_rcnn_pytorch"
"CSAILVision/places365" -> "msracver/Deformable-ConvNets"
"CSAILVision/places365" -> "Microsoft/MMdnn"
"bentrevett/pytorch-image-classification" -> "hysts/pytorch_image_classification"
"bentrevett/pytorch-image-classification" -> "bentrevett/pytorch-sentiment-analysis" ["e"=1]
"bentrevett/pytorch-image-classification" -> "bentrevett/a-tour-of-pytorch-optimizers"
"bentrevett/pytorch-image-classification" -> "bentrevett/pytorch-seq2seq" ["e"=1]
"bentrevett/pytorch-image-classification" -> "bentrevett/pytorch-generative-models"
"bentrevett/pytorch-image-classification" -> "weiaicunzai/awesome-image-classification"
"bentrevett/pytorch-image-classification" -> "utkuozbulak/pytorch-custom-dataset-examples"
"bentrevett/pytorch-image-classification" -> "bentrevett/machine-learning-courses"
"bentrevett/pytorch-image-classification" -> "Mayurji/Image-Classification-PyTorch"
"bentrevett/pytorch-image-classification" -> "sgrvinod/a-PyTorch-Tutorial-to-Object-Detection"
"bentrevett/pytorch-image-classification" -> "weiaicunzai/pytorch-cifar100"
"bentrevett/pytorch-image-classification" -> "lxztju/pytorch_classification"
"bentrevett/pytorch-image-classification" -> "sgrvinod/Deep-Tutorials-for-PyTorch" ["e"=1]
"bentrevett/pytorch-image-classification" -> "davidtvs/pytorch-lr-finder"
"farmingyard/caffe-mobilenet" -> "yonghenglh6/DepthwiseConvolution"
"farmingyard/caffe-mobilenet" -> "camel007/Caffe-ShuffleNet"
"farmingyard/caffe-mobilenet" -> "farmingyard/ShuffleNet"
"farmingyard/caffe-mobilenet" -> "HolmesShuan/ShuffleNet-An-Extremely-Efficient-CNN-for-Mobile-Devices-Caffe-Reimplementation"
"farmingyard/caffe-mobilenet" -> "farmingyard/caffe-mobilenet_v2"
"farmingyard/caffe-mobilenet" -> "shicai/MobileNet-Caffe"
"farmingyard/caffe-mobilenet" -> "twtygqyy/caffe-augmentation"
"longcw/pytorch2caffe" -> "xxradon/PytorchToCaffe"
"longcw/pytorch2caffe" -> "marvis/pytorch-caffe-darknet-convert"
"longcw/pytorch2caffe" -> "starimeL/PytorchConverter"
"longcw/pytorch2caffe" -> "MTlab/onnx2caffe"
"longcw/pytorch2caffe" -> "hahnyuan/nn_tools"
"longcw/pytorch2caffe" -> "miaow1988/ShuffleNet_V2_pytorch_caffe"
"longcw/pytorch2caffe" -> "inisis/brocolli"
"longcw/pytorch2caffe" -> "yonghenglh6/DepthwiseConvolution"
"longcw/pytorch2caffe" -> "farmingyard/ShuffleNet"
"longcw/pytorch2caffe" -> "shicai/MobileNet-Caffe"
"longcw/pytorch2caffe" -> "eric612/MobileNet-YOLO"
"longcw/pytorch2caffe" -> "happynear/MTCNN_face_detection_alignment" ["e"=1]
"longcw/pytorch2caffe" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"longcw/pytorch2caffe" -> "ChenYingpeng/caffe-yolov3"
"longcw/pytorch2caffe" -> "farmingyard/caffe-mobilenet"
"kornia/kornia" -> "facebookresearch/pytorch3d" ["e"=1]
"kornia/kornia" -> "rwightman/pytorch-image-models"
"kornia/kornia" -> "albumentations-team/albumentations"
"kornia/kornia" -> "arogozhnikov/einops"
"kornia/kornia" -> "lucidrains/vit-pytorch"
"kornia/kornia" -> "qubvel/segmentation_models.pytorch"
"kornia/kornia" -> "facebookresearch/detr"
"kornia/kornia" -> "PyTorchLightning/pytorch-lightning"
"kornia/kornia" -> "KevinMusgrave/pytorch-metric-learning"
"kornia/kornia" -> "NVIDIAGameWorks/kaolin" ["e"=1]
"kornia/kornia" -> "facebookresearch/ConvNeXt"
"kornia/kornia" -> "facebookresearch/detectron2"
"kornia/kornia" -> "zju3dv/LoFTR" ["e"=1]
"kornia/kornia" -> "lukemelas/EfficientNet-PyTorch"
"kornia/kornia" -> "yenchenlin/awesome-NeRF" ["e"=1]
"paulgavrikov/visualkeras" -> "viscom-ulm/Net2Vis"
"paulgavrikov/visualkeras" -> "ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network"
"rbgirshick/py-faster-rcnn" -> "rbgirshick/fast-rcnn"
"rbgirshick/py-faster-rcnn" -> "ShaoqingRen/faster_rcnn"
"rbgirshick/py-faster-rcnn" -> "endernewton/tf-faster-rcnn"
"rbgirshick/py-faster-rcnn" -> "weiliu89/caffe"
"rbgirshick/py-faster-rcnn" -> "jwyang/faster-rcnn.pytorch"
"rbgirshick/py-faster-rcnn" -> "facebookresearch/Detectron"
"rbgirshick/py-faster-rcnn" -> "smallcorgi/Faster-RCNN_TF"
"rbgirshick/py-faster-rcnn" -> "rbgirshick/rcnn"
"rbgirshick/py-faster-rcnn" -> "KaimingHe/deep-residual-networks"
"rbgirshick/py-faster-rcnn" -> "CharlesShang/FastMaskRCNN"
"rbgirshick/py-faster-rcnn" -> "facebookresearch/maskrcnn-benchmark"
"rbgirshick/py-faster-rcnn" -> "balancap/SSD-Tensorflow"
"rbgirshick/py-faster-rcnn" -> "msracver/Deformable-ConvNets"
"rbgirshick/py-faster-rcnn" -> "matterport/Mask_RCNN"
"rbgirshick/py-faster-rcnn" -> "open-mmlab/mmdetection"
"vdumoulin/conv_arithmetic" -> "soumith/ganhacks" ["e"=1]
"vdumoulin/conv_arithmetic" -> "pytorch/examples"
"vdumoulin/conv_arithmetic" -> "aleju/imgaug"
"vdumoulin/conv_arithmetic" -> "facebookresearch/Detectron"
"vdumoulin/conv_arithmetic" -> "open-mmlab/mmdetection"
"vdumoulin/conv_arithmetic" -> "junyanz/pytorch-CycleGAN-and-pix2pix" ["e"=1]
"vdumoulin/conv_arithmetic" -> "rwightman/pytorch-image-models"
"vdumoulin/conv_arithmetic" -> "pytorch/vision"
"vdumoulin/conv_arithmetic" -> "yunjey/pytorch-tutorial" ["e"=1]
"vdumoulin/conv_arithmetic" -> "rbgirshick/py-faster-rcnn"
"vdumoulin/conv_arithmetic" -> "mrgloom/awesome-semantic-segmentation"
"vdumoulin/conv_arithmetic" -> "lutzroeder/netron"
"vdumoulin/conv_arithmetic" -> "hindupuravinash/the-gan-zoo" ["e"=1]
"vdumoulin/conv_arithmetic" -> "Cadene/pretrained-models.pytorch"
"vdumoulin/conv_arithmetic" -> "eriklindernoren/PyTorch-GAN" ["e"=1]
"PeizeSun/SparseR-CNN" -> "PeizeSun/OneNet"
"PeizeSun/SparseR-CNN" -> "fundamentalvision/Deformable-DETR"
"PeizeSun/SparseR-CNN" -> "Megvii-BaseDetection/DeFCN"
"PeizeSun/SparseR-CNN" -> "xingyizhou/CenterNet2"
"PeizeSun/SparseR-CNN" -> "sfzhang15/ATSS"
"PeizeSun/SparseR-CNN" -> "implus/GFocalV2"
"PeizeSun/SparseR-CNN" -> "megvii-model/YOLOF"
"PeizeSun/SparseR-CNN" -> "facebookresearch/MaskFormer"
"PeizeSun/SparseR-CNN" -> "aim-uofa/AdelaiDet"
"PeizeSun/SparseR-CNN" -> "tianzhi0549/FCOS"
"PeizeSun/SparseR-CNN" -> "Megvii-BaseDetection/BorderDet"
"PeizeSun/SparseR-CNN" -> "whai362/PVT"
"PeizeSun/SparseR-CNN" -> "WXinlong/SOLO"
"PeizeSun/SparseR-CNN" -> "joe-siyuan-qiao/DetectoRS"
"PeizeSun/SparseR-CNN" -> "implus/GFocal"
"huggingface/pytorch-image-models" -> "baaivision/EVA" ["e"=1]
"huggingface/pytorch-image-models" -> "OpenGVLab/InternImage" ["e"=1]
"huggingface/pytorch-image-models" -> "mlfoundations/open_clip" ["e"=1]
"huggingface/pytorch-image-models" -> "amusi/CVPR2023-Papers-with-Code"
"huggingface/pytorch-image-models" -> "open-mmlab/mmsegmentation"
"huggingface/pytorch-image-models" -> "ultralytics/ultralytics"
"huggingface/pytorch-image-models" -> "z1069614715/objectdetection_script"
"huggingface/pytorch-image-models" -> "google-research/vision_transformer"
"huggingface/pytorch-image-models" -> "huggingface/peft" ["e"=1]
"huggingface/pytorch-image-models" -> "huggingface/accelerate" ["e"=1]
"huggingface/pytorch-image-models" -> "lucidrains/vit-pytorch"
"huggingface/pytorch-image-models" -> "Lightning-AI/lightning"
"huggingface/pytorch-image-models" -> "open-mmlab/mmyolo"
"huggingface/pytorch-image-models" -> "microsoft/Swin-Transformer"
"huggingface/pytorch-image-models" -> "salesforce/LAVIS" ["e"=1]
"Luolc/AdaBound" -> "LiyuanLucasLiu/RAdam"
"Luolc/AdaBound" -> "huggingface/pytorch-pretrained-BERT" ["e"=1]
"Luolc/AdaBound" -> "zjhuang22/maskscoring_rcnn"
"Luolc/AdaBound" -> "ajbrock/BigGAN-PyTorch" ["e"=1]
"Luolc/AdaBound" -> "albu/albumentations"
"Luolc/AdaBound" -> "lukemelas/EfficientNet-PyTorch"
"Luolc/AdaBound" -> "NVIDIA/apex"
"Luolc/AdaBound" -> "zihangdai/xlnet" ["e"=1]
"Luolc/AdaBound" -> "facebookresearch/maskrcnn-benchmark"
"Luolc/AdaBound" -> "williamFalcon/pytorch-lightning"
"Luolc/AdaBound" -> "lanpa/tensorboardX"
"Luolc/AdaBound" -> "tensorflow/lingvo" ["e"=1]
"Luolc/AdaBound" -> "msracver/Deformable-ConvNets"
"Luolc/AdaBound" -> "taki0112/Tensorflow-Cookbook" ["e"=1]
"Luolc/AdaBound" -> "Cadene/pretrained-models.pytorch"
"csrhddlam/axial-deeplab" -> "lucidrains/axial-attention"
"csrhddlam/axial-deeplab" -> "bowenc0221/panoptic-deeplab" ["e"=1]
"csrhddlam/axial-deeplab" -> "lxtGH/DecoupleSegNets" ["e"=1]
"csrhddlam/axial-deeplab" -> "fudan-zvg/SETR"
"csrhddlam/axial-deeplab" -> "openseg-group/openseg.pytorch" ["e"=1]
"csrhddlam/axial-deeplab" -> "speedinghzl/CCNet" ["e"=1]
"csrhddlam/axial-deeplab" -> "conradry/max-deeplab"
"csrhddlam/axial-deeplab" -> "jeya-maria-jose/Medical-Transformer" ["e"=1]
"csrhddlam/axial-deeplab" -> "joe-siyuan-qiao/ViP-DeepLab" ["e"=1]
"csrhddlam/axial-deeplab" -> "DeepSceneSeg/EfficientPS" ["e"=1]
"csrhddlam/axial-deeplab" -> "facebookresearch/MaskFormer"
"csrhddlam/axial-deeplab" -> "yitu-opensource/T2T-ViT"
"facebookresearch/vissl" -> "facebookresearch/dino"
"facebookresearch/vissl" -> "facebookresearch/swav"
"facebookresearch/vissl" -> "lightly-ai/lightly"
"facebookresearch/vissl" -> "open-mmlab/OpenSelfSup"
"facebookresearch/vissl" -> "google-research/simclr"
"facebookresearch/vissl" -> "lucidrains/byol-pytorch"
"facebookresearch/vissl" -> "facebookresearch/deit"
"facebookresearch/vissl" -> "facebookresearch/moco"
"facebookresearch/vissl" -> "HobbitLong/PyContrast"
"facebookresearch/vissl" -> "jason718/awesome-self-supervised-learning"
"facebookresearch/vissl" -> "vturrisi/solo-learn"
"facebookresearch/vissl" -> "facebookresearch/fairscale" ["e"=1]
"facebookresearch/vissl" -> "libffcv/ffcv"
"facebookresearch/vissl" -> "facebookresearch/barlowtwins"
"facebookresearch/vissl" -> "KevinMusgrave/pytorch-metric-learning"
"google/automl" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"google/automl" -> "xuannianz/EfficientDet"
"google/automl" -> "lukemelas/EfficientNet-PyTorch"
"google/automl" -> "tensorflow/tpu"
"google/automl" -> "xingyizhou/CenterNet"
"google/automl" -> "toandaominh1997/EfficientDet.Pytorch"
"google/automl" -> "facebookresearch/detr"
"google/automl" -> "open-mmlab/mmdetection"
"google/automl" -> "zhanghang1989/ResNeSt"
"google/automl" -> "facebookresearch/detectron2"
"google/automl" -> "microsoft/Swin-Transformer"
"google/automl" -> "rwightman/pytorch-image-models"
"google/automl" -> "Tianxiaomo/pytorch-YOLOv4"
"google/automl" -> "WongKinYiu/ScaledYOLOv4"
"google/automl" -> "ultralytics/yolov3"
"lessw2020/Best-Deep-Learning-Optimizers" -> "amirgholami/adahessian" ["e"=1]
"lessw2020/Best-Deep-Learning-Optimizers" -> "shivram1987/diffGrad"
"lucidrains/vit-pytorch" -> "rwightman/pytorch-image-models"
"lucidrains/vit-pytorch" -> "google-research/vision_transformer"
"lucidrains/vit-pytorch" -> "microsoft/Swin-Transformer"
"lucidrains/vit-pytorch" -> "facebookresearch/detr"
"lucidrains/vit-pytorch" -> "openai/CLIP"
"lucidrains/vit-pytorch" -> "facebookresearch/mae"
"lucidrains/vit-pytorch" -> "open-mmlab/mmdetection"
"lucidrains/vit-pytorch" -> "facebookresearch/deit"
"lucidrains/vit-pytorch" -> "jacobgil/pytorch-grad-cam"
"lucidrains/vit-pytorch" -> "facebookresearch/ConvNeXt"
"lucidrains/vit-pytorch" -> "facebookresearch/detectron2"
"lucidrains/vit-pytorch" -> "xmu-xiaoma666/External-Attention-pytorch"
"lucidrains/vit-pytorch" -> "dk-liang/Awesome-Visual-Transformer"
"lucidrains/vit-pytorch" -> "arogozhnikov/einops"
"lucidrains/vit-pytorch" -> "facebookresearch/moco"
"mdbloice/Augmentor" -> "aleju/imgaug"
"mdbloice/Augmentor" -> "albu/albumentations"
"mdbloice/Augmentor" -> "Cadene/pretrained-models.pytorch"
"mdbloice/Augmentor" -> "albumentations-team/albumentations"
"mdbloice/Augmentor" -> "lukemelas/EfficientNet-PyTorch"
"mdbloice/Augmentor" -> "mrgloom/awesome-semantic-segmentation"
"mdbloice/Augmentor" -> "facebookresearch/visdom"
"mdbloice/Augmentor" -> "facebookresearch/maskrcnn-benchmark"
"mdbloice/Augmentor" -> "utkuozbulak/pytorch-cnn-visualizations"
"mdbloice/Augmentor" -> "msracver/Deformable-ConvNets"
"mdbloice/Augmentor" -> "lanpa/tensorboard-pytorch"
"mdbloice/Augmentor" -> "meetshah1995/pytorch-semseg" ["e"=1]
"mdbloice/Augmentor" -> "Microsoft/MMdnn"
"mdbloice/Augmentor" -> "xingyizhou/CenterNet"
"mdbloice/Augmentor" -> "facebookresearch/Detectron"
"qubvel/efficientnet" -> "xuannianz/EfficientDet"
"qubvel/efficientnet" -> "qubvel/classification_models"
"qubvel/efficientnet" -> "tensorflow/tpu"
"qubvel/efficientnet" -> "lukemelas/EfficientNet-PyTorch"
"qubvel/efficientnet" -> "qubvel/segmentation_models"
"qubvel/efficientnet" -> "google/automl"
"qubvel/efficientnet" -> "fizyr/keras-retinanet"
"qubvel/efficientnet" -> "titu1994/keras-efficientnets" ["e"=1]
"qubvel/efficientnet" -> "keras-team/keras-applications"
"qubvel/efficientnet" -> "osmr/imgclsmob"
"qubvel/efficientnet" -> "rwightman/efficientdet-pytorch"
"qubvel/efficientnet" -> "albu/albumentations"
"qubvel/efficientnet" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"qubvel/efficientnet" -> "toandaominh1997/EfficientDet.Pytorch"
"qubvel/efficientnet" -> "rwightman/gen-efficientnet-pytorch"
"rentruewang/koila" -> "libffcv/ffcv"
"rentruewang/koila" -> "huggingface/accelerate" ["e"=1]
"rentruewang/koila" -> "patrick-kidger/torchtyping"
"rentruewang/koila" -> "jettify/pytorch-optimizer"
"rentruewang/koila" -> "arogozhnikov/einops"
"rentruewang/koila" -> "HazyResearch/flash-attention" ["e"=1]
"rentruewang/koila" -> "facebookresearch/fairscale" ["e"=1]
"rentruewang/koila" -> "mosaicml/composer"
"rentruewang/koila" -> "lucidrains/x-transformers" ["e"=1]
"rentruewang/koila" -> "lucidrains/vector-quantize-pytorch" ["e"=1]
"rentruewang/koila" -> "assafshocher/ResizeRight" ["e"=1]
"rentruewang/koila" -> "XuehaiPan/nvitop"
"rentruewang/koila" -> "facebookresearch/ConvNeXt"
"rentruewang/koila" -> "facebookincubator/AITemplate" ["e"=1]
"rentruewang/koila" -> "lucidrains/DALLE-pytorch" ["e"=1]
"BVLC/caffe" -> "fchollet/keras" ["e"=1]
"BVLC/caffe" -> "tensorflow/models"
"BVLC/caffe" -> "tensorflow/tensorflow"
"BVLC/caffe" -> "pytorch/pytorch"
"BVLC/caffe" -> "facebookresearch/Detectron"
"BVLC/caffe" -> "dmlc/mxnet" ["e"=1]
"BVLC/caffe" -> "scikit-learn/scikit-learn"
"BVLC/caffe" -> "Theano/Theano" ["e"=1]
"BVLC/caffe" -> "pjreddie/darknet"
"BVLC/caffe" -> "rbgirshick/py-faster-rcnn"
"BVLC/caffe" -> "torch/torch7" ["e"=1]
"BVLC/caffe" -> "dmlc/xgboost" ["e"=1]
"BVLC/caffe" -> "aymericdamien/TensorFlow-Examples" ["e"=1]
"BVLC/caffe" -> "opencv/opencv"
"BVLC/caffe" -> "Microsoft/CNTK" ["e"=1]
"heartexlabs/labelImg" -> "WongKinYiu/yolov7"
"heartexlabs/labelImg" -> "ultralytics/ultralytics"
"heartexlabs/labelImg" -> "heartexlabs/label-studio"
"heartexlabs/labelImg" -> "wkentaro/labelme"
"heartexlabs/labelImg" -> "opencv/cvat"
"heartexlabs/labelImg" -> "mikel-brostrom/Yolov5_StrongSORT_OSNet" ["e"=1]
"heartexlabs/labelImg" -> "meituan/YOLOv6"
"heartexlabs/labelImg" -> "ultralytics/yolov5"
"heartexlabs/labelImg" -> "cnyvfang/labelGo-Yolov5AutoLabelImg" ["e"=1]
"heartexlabs/labelImg" -> "nicknochnack/TFODCourse" ["e"=1]
"heartexlabs/labelImg" -> "microsoft/VoTT"
"heartexlabs/labelImg" -> "ifzhang/ByteTrack" ["e"=1]
"heartexlabs/labelImg" -> "Megvii-BaseDetection/YOLOX"
"heartexlabs/labelImg" -> "iscyy/yoloair"
"heartexlabs/labelImg" -> "mikel-brostrom/yolov8_tracking"
"mikel-brostrom/yolov8_tracking" -> "ultralytics/ultralytics"
"mikel-brostrom/yolov8_tracking" -> "ifzhang/ByteTrack" ["e"=1]
"mikel-brostrom/yolov8_tracking" -> "triple-Mu/YOLOv8-TensorRT"
"mikel-brostrom/yolov8_tracking" -> "JackWoo0831/Yolov7-tracker" ["e"=1]
"mikel-brostrom/yolov8_tracking" -> "Linaom1214/TensorRT-For-YOLO-Series"
"mikel-brostrom/yolov8_tracking" -> "Sharpiless/Yolov5-Deepsort" ["e"=1]
"mikel-brostrom/yolov8_tracking" -> "dyhBUPT/StrongSORT" ["e"=1]
"mikel-brostrom/yolov8_tracking" -> "mikel-brostrom/Yolov7_StrongSORT_OSNet" ["e"=1]
"mikel-brostrom/yolov8_tracking" -> "open-mmlab/mmyolo"
"mikel-brostrom/yolov8_tracking" -> "MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking" ["e"=1]
"mikel-brostrom/yolov8_tracking" -> "HowieMa/DeepSORT_YOLOv5_Pytorch" ["e"=1]
"mikel-brostrom/yolov8_tracking" -> "noahcao/OC_SORT" ["e"=1]
"mikel-brostrom/yolov8_tracking" -> "iscyy/yoloair"
"mikel-brostrom/yolov8_tracking" -> "deepcam-cn/yolov5-face"
"mikel-brostrom/yolov8_tracking" -> "WongKinYiu/yolov7"
"pytorch/vision" -> "pytorch/examples"
"pytorch/vision" -> "open-mmlab/mmdetection"
"pytorch/vision" -> "rwightman/pytorch-image-models"
"pytorch/vision" -> "Cadene/pretrained-models.pytorch"
"pytorch/vision" -> "facebookresearch/detectron2"
"pytorch/vision" -> "jwyang/faster-rcnn.pytorch"
"pytorch/vision" -> "pytorch/pytorch"
"pytorch/vision" -> "facebookresearch/maskrcnn-benchmark"
"pytorch/vision" -> "lukemelas/EfficientNet-PyTorch"
"pytorch/vision" -> "lucidrains/vit-pytorch"
"pytorch/vision" -> "facebookresearch/Detectron"
"pytorch/vision" -> "junyanz/pytorch-CycleGAN-and-pix2pix" ["e"=1]
"pytorch/vision" -> "facebookresearch/detr"
"pytorch/vision" -> "utkuozbulak/pytorch-cnn-visualizations"
"pytorch/vision" -> "pytorch/tutorials"
"ultralytics/ultralytics" -> "WongKinYiu/yolov7"
"ultralytics/ultralytics" -> "meituan/YOLOv6"
"ultralytics/ultralytics" -> "Megvii-BaseDetection/YOLOX"
"ultralytics/ultralytics" -> "ultralytics/yolov5"
"ultralytics/ultralytics" -> "open-mmlab/mmyolo"
"ultralytics/ultralytics" -> "wang-xinyu/tensorrtx"
"ultralytics/ultralytics" -> "jinfagang/yolov7"
"ultralytics/ultralytics" -> "iscyy/yoloair"
"ultralytics/ultralytics" -> "mikel-brostrom/yolov8_tracking"
"ultralytics/ultralytics" -> "ifzhang/ByteTrack" ["e"=1]
"ultralytics/ultralytics" -> "facebookresearch/segment-anything" ["e"=1]
"ultralytics/ultralytics" -> "PaddlePaddle/PaddleDetection"
"ultralytics/ultralytics" -> "RangiLyu/nanodet"
"ultralytics/ultralytics" -> "open-mmlab/mmdetection"
"ultralytics/ultralytics" -> "NVIDIA/TensorRT"
"aleju/imgaug" -> "mdbloice/Augmentor"
"aleju/imgaug" -> "open-mmlab/mmdetection"
"aleju/imgaug" -> "albumentations-team/albumentations"
"aleju/imgaug" -> "rwightman/pytorch-image-models"
"aleju/imgaug" -> "facebookresearch/Detectron"
"aleju/imgaug" -> "matterport/Mask_RCNN"
"aleju/imgaug" -> "Cadene/pretrained-models.pytorch"
"aleju/imgaug" -> "facebookresearch/detectron2"
"aleju/imgaug" -> "facebookresearch/maskrcnn-benchmark"
"aleju/imgaug" -> "mrgloom/awesome-semantic-segmentation"
"aleju/imgaug" -> "deepinsight/insightface"
"aleju/imgaug" -> "xingyizhou/CenterNet"
"aleju/imgaug" -> "tzutalin/labelImg"
"aleju/imgaug" -> "lukemelas/EfficientNet-PyTorch"
"aleju/imgaug" -> "hoya012/deep_learning_object_detection"
"microsoft/tensorwatch" -> "microsoft/interpret" ["e"=1]
"microsoft/tensorwatch" -> "williamFalcon/pytorch-lightning"
"microsoft/tensorwatch" -> "TDAmeritrade/stumpy" ["e"=1]
"microsoft/tensorwatch" -> "timsainb/tensorflow2-generative-models" ["e"=1]
"microsoft/tensorwatch" -> "benedekrozemberczki/awesome-decision-tree-papers" ["e"=1]
"microsoft/tensorwatch" -> "tensorflow/lucid"
"microsoft/tensorwatch" -> "albu/albumentations"
"microsoft/tensorwatch" -> "lanpa/tensorboardX"
"microsoft/tensorwatch" -> "catalyst-team/catalyst"
"microsoft/tensorwatch" -> "waleedka/hiddenlayer"
"microsoft/tensorwatch" -> "facebookresearch/pythia" ["e"=1]
"microsoft/tensorwatch" -> "rasbt/deeplearning-models" ["e"=1]
"microsoft/tensorwatch" -> "huggingface/pytorch-pretrained-BERT" ["e"=1]
"microsoft/tensorwatch" -> "NVIDIA/apex"
"microsoft/tensorwatch" -> "allegroai/trains" ["e"=1]
"opencv/opencv_extra" -> "opencv/opencv_contrib"
"opencv/opencv_extra" -> "opencv/opencv_3rdparty"
"opencv/opencv_extra" -> "opencv/open_model_zoo" ["e"=1]
"opencv/opencv_extra" -> "chuanqi305/MobileNet-SSD"
"opencv/opencv_extra" -> "davheld/GOTURN" ["e"=1]
"opencv/opencv_extra" -> "zeusees/Mobilenet-SSD-License-Plate-Detection" ["e"=1]
"opencv/opencv_extra" -> "opencv/opencv_zoo" ["e"=1]
"opencv/opencv_extra" -> "davisking/dlib-models"
"opencv/opencv_extra" -> "rbgirshick/voc-dpm" ["e"=1]
"opencv/opencv_extra" -> "meiqua/shape_based_matching" ["e"=1]
"opencv/opencv_extra" -> "gloomyfish1998/opencv_tutorial" ["e"=1]
"openimages/dataset" -> "ethereon/caffe-tensorflow"
"openimages/dataset" -> "cvdfoundation/open-images-dataset"
"openimages/dataset" -> "jcjohnson/cnn-benchmarks"
"openimages/dataset" -> "caffe2/caffe2" ["e"=1]
"openimages/dataset" -> "ppwwyyxx/tensorpack"
"openimages/dataset" -> "KaimingHe/deep-residual-networks"
"openimages/dataset" -> "CharlesShang/FastMaskRCNN"
"openimages/dataset" -> "kjw0612/awesome-deep-vision" ["e"=1]
"openimages/dataset" -> "rbgirshick/py-faster-rcnn"
"openimages/dataset" -> "liuzhuang13/DenseNet"
"openimages/dataset" -> "DeepScale/SqueezeNet"
"openimages/dataset" -> "msracver/Deformable-ConvNets"
"openimages/dataset" -> "facebookresearch/ResNeXt"
"openimages/dataset" -> "daijifeng001/R-FCN"
"openimages/dataset" -> "weiliu89/caffe"
"amusi/CVPR2020-Code" -> "amusi/ECCV2020-Code"
"amusi/CVPR2020-Code" -> "extreme-assistant/CVPR2020-Paper-Code-Interpretation"
"amusi/CVPR2020-Code" -> "amusi/daily-paper-computer-vision"
"amusi/CVPR2020-Code" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"amusi/CVPR2020-Code" -> "zhanghang1989/ResNeSt"
"amusi/CVPR2020-Code" -> "extreme-assistant/cvpr2019"
"amusi/CVPR2020-Code" -> "amusi/awesome-object-detection"
"amusi/CVPR2020-Code" -> "xingyizhou/CenterNet"
"amusi/CVPR2020-Code" -> "extreme-assistant/iccv2019"
"amusi/CVPR2020-Code" -> "aim-uofa/AdelaiDet"
"amusi/CVPR2020-Code" -> "tianzhi0549/FCOS"
"amusi/CVPR2020-Code" -> "facebookresearch/detr"
"amusi/CVPR2020-Code" -> "open-mmlab/mmdetection"
"amusi/CVPR2020-Code" -> "mrgloom/awesome-semantic-segmentation"
"amusi/CVPR2020-Code" -> "lukemelas/EfficientNet-PyTorch"
"hgpvision/darknet" -> "BBuf/Darknet"
"hgpvision/darknet" -> "marvis/pytorch-caffe-darknet-convert"
"hgpvision/darknet" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"hgpvision/darknet" -> "eric612/MobileNet-YOLO"
"hgpvision/darknet" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"hgpvision/darknet" -> "ayooshkathuria/pytorch-yolo-v3"
"hgpvision/darknet" -> "ayooshkathuria/YOLO_v3_tutorial_from_scratch"
"hgpvision/darknet" -> "weiliu89/caffe"
"hgpvision/darknet" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"hgpvision/darknet" -> "pjreddie/darknet"
"hgpvision/darknet" -> "princeton-vl/CornerNet"
"hgpvision/darknet" -> "qqwweee/keras-yolo3"
"hgpvision/darknet" -> "marvis/pytorch-yolo2"
"hgpvision/darknet" -> "ChenYingpeng/caffe-yolov3"
"hgpvision/darknet" -> "eriklindernoren/PyTorch-YOLOv3"
"MegEngine/MegEngine" -> "Jittor/jittor"
"MegEngine/MegEngine" -> "alibaba/MNN"
"MegEngine/MegEngine" -> "Tencent/TNN"
"MegEngine/MegEngine" -> "Oneflow-Inc/oneflow"
"MegEngine/MegEngine" -> "mindspore-ai/mindspore" ["e"=1]
"MegEngine/MegEngine" -> "NVIDIA/TensorRT"
"MegEngine/MegEngine" -> "Tencent/ncnn"
"MegEngine/MegEngine" -> "OAID/Tengine" ["e"=1]
"MegEngine/MegEngine" -> "MegEngine/Models" ["e"=1]
"MegEngine/MegEngine" -> "NVIDIA/cutlass" ["e"=1]
"MegEngine/MegEngine" -> "bytedance/byteps" ["e"=1]
"MegEngine/MegEngine" -> "daquexian/onnx-simplifier"
"MegEngine/MegEngine" -> "openppl-public/ppl.nn" ["e"=1]
"MegEngine/MegEngine" -> "dmlc/tvm" ["e"=1]
"MegEngine/MegEngine" -> "XiaoMi/mace" ["e"=1]
"facebookresearch/mae" -> "pengzhiliang/MAE-pytorch"
"facebookresearch/mae" -> "facebookresearch/ConvNeXt"
"facebookresearch/mae" -> "microsoft/Swin-Transformer"
"facebookresearch/mae" -> "facebookresearch/moco"
"facebookresearch/mae" -> "facebookresearch/deit"
"facebookresearch/mae" -> "lucidrains/vit-pytorch"
"facebookresearch/mae" -> "facebookresearch/dino"
"facebookresearch/mae" -> "google-research/vision_transformer"
"facebookresearch/mae" -> "openai/CLIP"
"facebookresearch/mae" -> "rwightman/pytorch-image-models"
"facebookresearch/mae" -> "facebookresearch/detr"
"facebookresearch/mae" -> "facebookresearch/moco-v3"
"facebookresearch/mae" -> "microsoft/unilm"
"facebookresearch/mae" -> "mlfoundations/open_clip" ["e"=1]
"facebookresearch/mae" -> "microsoft/SimMIM"
"Tencent/ncnn" -> "alibaba/MNN"
"Tencent/ncnn" -> "Tencent/TNN"
"Tencent/ncnn" -> "deepinsight/insightface"
"Tencent/ncnn" -> "lutzroeder/netron"
"Tencent/ncnn" -> "XiaoMi/mace" ["e"=1]
"Tencent/ncnn" -> "open-mmlab/mmdetection"
"Tencent/ncnn" -> "NVIDIA/TensorRT"
"Tencent/ncnn" -> "OAID/Tengine" ["e"=1]
"Tencent/ncnn" -> "onnx/onnx"
"Tencent/ncnn" -> "RangiLyu/nanodet"
"Tencent/ncnn" -> "ShiqiYu/libfacedetection"
"Tencent/ncnn" -> "wang-xinyu/tensorrtx"
"Tencent/ncnn" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB"
"Tencent/ncnn" -> "pjreddie/darknet"
"Tencent/ncnn" -> "Megvii-BaseDetection/YOLOX"
"deepinsight/insightface" -> "davidsandberg/facenet"
"deepinsight/insightface" -> "ChanChiChoi/awesome-Face_Recognition"
"deepinsight/insightface" -> "open-mmlab/mmdetection"
"deepinsight/insightface" -> "biubug6/Pytorch_Retinaface" ["e"=1]
"deepinsight/insightface" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB"
"deepinsight/insightface" -> "Tencent/ncnn"
"deepinsight/insightface" -> "ShiqiYu/libfacedetection"
"deepinsight/insightface" -> "TreB1eN/InsightFace_Pytorch" ["e"=1]
"deepinsight/insightface" -> "xingyizhou/CenterNet"
"deepinsight/insightface" -> "ZhaoJ9014/face.evoLVe.PyTorch" ["e"=1]
"deepinsight/insightface" -> "rwightman/pytorch-image-models"
"deepinsight/insightface" -> "1adrianb/face-alignment" ["e"=1]
"deepinsight/insightface" -> "kpzhang93/MTCNN_face_detection_alignment"
"deepinsight/insightface" -> "aleju/imgaug"
"deepinsight/insightface" -> "lukemelas/EfficientNet-PyTorch"
"dmlc/gluon-cv" -> "TuSimple/simpledet"
"dmlc/gluon-cv" -> "xingyizhou/CenterNet"
"dmlc/gluon-cv" -> "amusi/awesome-object-detection"
"dmlc/gluon-cv" -> "open-mmlab/mmdetection"
"dmlc/gluon-cv" -> "facebookresearch/maskrcnn-benchmark"
"dmlc/gluon-cv" -> "msracver/Deformable-ConvNets"
"dmlc/gluon-cv" -> "tianzhi0549/FCOS"
"dmlc/gluon-cv" -> "deepinsight/insightface"
"dmlc/gluon-cv" -> "lukemelas/EfficientNet-PyTorch"
"dmlc/gluon-cv" -> "extreme-assistant/cvpr2019"
"dmlc/gluon-cv" -> "zhanghang1989/ResNeSt"
"dmlc/gluon-cv" -> "hoya012/deep_learning_object_detection"
"dmlc/gluon-cv" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"dmlc/gluon-cv" -> "aleju/imgaug"
"dmlc/gluon-cv" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"open-mmlab/mmcv" -> "open-mmlab/mmsegmentation"
"open-mmlab/mmcv" -> "open-mmlab/mmdetection"
"open-mmlab/mmcv" -> "open-mmlab/mmclassification"
"open-mmlab/mmcv" -> "open-mmlab/mmdetection3d" ["e"=1]
"open-mmlab/mmcv" -> "xingyizhou/CenterNet"
"open-mmlab/mmcv" -> "tianzhi0549/FCOS"
"open-mmlab/mmcv" -> "facebookresearch/maskrcnn-benchmark"
"open-mmlab/mmcv" -> "microsoft/Swin-Transformer"
"open-mmlab/mmcv" -> "facebookresearch/detr"
"open-mmlab/mmcv" -> "open-mmlab/mmdeploy"
"open-mmlab/mmcv" -> "open-mmlab/mmaction" ["e"=1]
"open-mmlab/mmcv" -> "facebookresearch/detectron2"
"open-mmlab/mmcv" -> "open-mmlab/mmaction2" ["e"=1]
"open-mmlab/mmcv" -> "open-mmlab/mmpose" ["e"=1]
"open-mmlab/mmcv" -> "open-mmlab/mmtracking" ["e"=1]
"zackchase/mxnet-the-straight-dope" -> "mli/gluon-tutorials-zh"
"zackchase/mxnet-the-straight-dope" -> "chinakook/Awesome-MXNet" ["e"=1]
"zackchase/mxnet-the-straight-dope" -> "awslabs/sockeye" ["e"=1]
"zackchase/mxnet-the-straight-dope" -> "TuSimple/mx-maskrcnn"
"zackchase/mxnet-the-straight-dope" -> "dmlc/nnvm" ["e"=1]
"zackchase/mxnet-the-straight-dope" -> "apache/incubator-mxnet"
"zackchase/mxnet-the-straight-dope" -> "gluon-api/gluon-api"
"zackchase/mxnet-the-straight-dope" -> "dmlc/mxnet" ["e"=1]
"zackchase/mxnet-the-straight-dope" -> "dmlc/mxnet-notebooks" ["e"=1]
"zackchase/mxnet-the-straight-dope" -> "dmlc/gluon-nlp" ["e"=1]
"zackchase/mxnet-the-straight-dope" -> "dmlc/tvm" ["e"=1]
"zackchase/mxnet-the-straight-dope" -> "msracver/Deformable-ConvNets"
"zackchase/mxnet-the-straight-dope" -> "zhreshold/mxnet-ssd" ["e"=1]
"zackchase/mxnet-the-straight-dope" -> "blei-lab/edward" ["e"=1]
"zackchase/mxnet-the-straight-dope" -> "dmlc/minpy" ["e"=1]
"jkjung-avt/tensorrt_demos" -> "enazoe/yolo-tensorrt"
"jkjung-avt/tensorrt_demos" -> "wang-xinyu/tensorrtx"
"jkjung-avt/tensorrt_demos" -> "onnx/onnx-tensorrt"
"jkjung-avt/tensorrt_demos" -> "NVIDIA-AI-IOT/torch2trt"
"jkjung-avt/tensorrt_demos" -> "ceccocats/tkDNN"
"jkjung-avt/tensorrt_demos" -> "Tianxiaomo/pytorch-YOLOv4"
"jkjung-avt/tensorrt_demos" -> "NVIDIA/TensorRT"
"jkjung-avt/tensorrt_demos" -> "dusty-nv/jetson-inference" ["e"=1]
"jkjung-avt/tensorrt_demos" -> "CaoWGG/TensorRT-YOLOv4"
"jkjung-avt/tensorrt_demos" -> "marcoslucianops/DeepStream-Yolo" ["e"=1]
"jkjung-avt/tensorrt_demos" -> "GeekAlexis/FastMOT" ["e"=1]
"jkjung-avt/tensorrt_demos" -> "linghu8812/tensorrt_inference"
"jkjung-avt/tensorrt_demos" -> "hunglc007/tensorflow-yolov4-tflite"
"jkjung-avt/tensorrt_demos" -> "NVIDIA-AI-IOT/deepstream_python_apps" ["e"=1]
"jkjung-avt/tensorrt_demos" -> "rbonghi/jetson_stats" ["e"=1]
"ipazc/mtcnn" -> "AITTSMD/MTCNN-Tensorflow"
"ipazc/mtcnn" -> "kpzhang93/MTCNN_face_detection_alignment"
"ipazc/mtcnn" -> "timesler/facenet-pytorch"
"ipazc/mtcnn" -> "davidsandberg/facenet"
"ipazc/mtcnn" -> "deepinsight/insightface"
"ipazc/mtcnn" -> "biubug6/Pytorch_Retinaface" ["e"=1]
"ipazc/mtcnn" -> "TropComplique/mtcnn-pytorch" ["e"=1]
"ipazc/mtcnn" -> "shanren7/real_time_face_recognition" ["e"=1]
"ipazc/mtcnn" -> "ZhaoJ9014/face.evoLVe.PyTorch" ["e"=1]
"ipazc/mtcnn" -> "rcmalli/keras-vggface" ["e"=1]
"ipazc/mtcnn" -> "ChanChiChoi/awesome-Face_Recognition"
"ipazc/mtcnn" -> "yeephycho/tensorflow-face-detection" ["e"=1]
"ipazc/mtcnn" -> "cleardusk/3DDFA" ["e"=1]
"ipazc/mtcnn" -> "zllrunning/face-parsing.PyTorch" ["e"=1]
"ipazc/mtcnn" -> "natanielruiz/deep-head-pose" ["e"=1]
"davidsandberg/facenet" -> "cmusatyalab/openface"
"davidsandberg/facenet" -> "deepinsight/insightface"
"davidsandberg/facenet" -> "kpzhang93/MTCNN_face_detection_alignment"
"davidsandberg/facenet" -> "ageitgey/face_recognition"
"davidsandberg/facenet" -> "davisking/dlib"
"davidsandberg/facenet" -> "facebookresearch/Detectron"
"davidsandberg/facenet" -> "AITTSMD/MTCNN-Tensorflow"
"davidsandberg/facenet" -> "ShiqiYu/libfacedetection"
"davidsandberg/facenet" -> "matterport/Mask_RCNN"
"davidsandberg/facenet" -> "ChanChiChoi/awesome-Face_Recognition"
"davidsandberg/facenet" -> "rbgirshick/py-faster-rcnn"
"davidsandberg/facenet" -> "TadasBaltrusaitis/OpenFace"
"davidsandberg/facenet" -> "tzutalin/labelImg"
"davidsandberg/facenet" -> "pjreddie/darknet"
"davidsandberg/facenet" -> "timesler/facenet-pytorch"
"nerox8664/awesome-computer-vision-models" -> "nerox8664/cat-gan"
"Microsoft/MMdnn" -> "ysh329/deep-learning-model-convertor"
"Microsoft/MMdnn" -> "dmlc/tvm" ["e"=1]
"Microsoft/MMdnn" -> "ethereon/caffe-tensorflow"
"Microsoft/MMdnn" -> "NervanaSystems/distiller" ["e"=1]
"Microsoft/MMdnn" -> "soeaver/caffe-model"
"Microsoft/MMdnn" -> "Tencent/PocketFlow" ["e"=1]
"Microsoft/MMdnn" -> "msracver/Deformable-ConvNets"
"Microsoft/MMdnn" -> "shicai/MobileNet-Caffe"
"Microsoft/MMdnn" -> "weiliu89/caffe"
"Microsoft/MMdnn" -> "hujie-frank/SENet"
"Microsoft/MMdnn" -> "Tencent/FeatherCNN" ["e"=1]
"Microsoft/MMdnn" -> "marvis/pytorch-caffe-darknet-convert"
"Microsoft/MMdnn" -> "XiaoMi/mace" ["e"=1]
"Microsoft/MMdnn" -> "TuSimple/mx-maskrcnn"
"Microsoft/MMdnn" -> "uber/horovod"
"uber/horovod" -> "uber/pyro" ["e"=1]
"uber/horovod" -> "deepmind/sonnet" ["e"=1]
"uber/horovod" -> "openai/gradient-checkpointing" ["e"=1]
"uber/horovod" -> "dmlc/tvm" ["e"=1]
"uber/horovod" -> "yahoo/TensorFlowOnSpark" ["e"=1]
"uber/horovod" -> "Microsoft/MMdnn"
"uber/horovod" -> "ppwwyyxx/tensorpack"
"uber/horovod" -> "jhfjhfj1/autokeras" ["e"=1]
"uber/horovod" -> "tensorflow/tensor2tensor" ["e"=1]
"uber/horovod" -> "PAIR-code/facets" ["e"=1]
"uber/horovod" -> "google/dopamine" ["e"=1]
"uber/horovod" -> "facebookresearch/visdom"
"uber/horovod" -> "yunjey/StarGAN" ["e"=1]
"uber/horovod" -> "vahidk/EffectiveTensorflow" ["e"=1]
"uber/horovod" -> "kubeflow/kubeflow" ["e"=1]
"facebookresearch/hydra" -> "omry/omegaconf"
"facebookresearch/hydra" -> "ashleve/lightning-hydra-template"
"facebookresearch/hydra" -> "PyTorchLightning/pytorch-lightning"
"facebookresearch/hydra" -> "arogozhnikov/einops"
"facebookresearch/hydra" -> "optuna/optuna" ["e"=1]
"facebookresearch/hydra" -> "iterative/dvc" ["e"=1]
"facebookresearch/hydra" -> "google/jax" ["e"=1]
"facebookresearch/hydra" -> "mlflow/mlflow" ["e"=1]
"facebookresearch/hydra" -> "kornia/kornia"
"facebookresearch/hydra" -> "facebookresearch/pytorch3d" ["e"=1]
"facebookresearch/hydra" -> "pytorch/captum"
"facebookresearch/hydra" -> "tiangolo/typer" ["e"=1]
"facebookresearch/hydra" -> "huggingface/accelerate" ["e"=1]
"facebookresearch/hydra" -> "NVIDIA/apex"
"facebookresearch/hydra" -> "facebookresearch/hiplot" ["e"=1]
"deepmind/deepmind-research" -> "deepmind/alphafold" ["e"=1]
"deepmind/deepmind-research" -> "google-research/google-research" ["e"=1]
"deepmind/deepmind-research" -> "google/jax" ["e"=1]
"deepmind/deepmind-research" -> "rwightman/pytorch-image-models"
"deepmind/deepmind-research" -> "lucidrains/vit-pytorch"
"deepmind/deepmind-research" -> "openai/CLIP"
"deepmind/deepmind-research" -> "PyTorchLightning/pytorch-lightning"
"deepmind/deepmind-research" -> "rusty1s/pytorch_geometric" ["e"=1]
"deepmind/deepmind-research" -> "facebookresearch/detr"
"deepmind/deepmind-research" -> "arogozhnikov/einops"
"deepmind/deepmind-research" -> "google-research/vision_transformer"
"deepmind/deepmind-research" -> "openai/baselines" ["e"=1]
"deepmind/deepmind-research" -> "pytorch/fairseq" ["e"=1]
"deepmind/deepmind-research" -> "deepmind/acme" ["e"=1]
"deepmind/deepmind-research" -> "karpathy/minGPT" ["e"=1]
"HobbitLong/SupContrast" -> "HobbitLong/PyContrast"
"HobbitLong/SupContrast" -> "sthalles/SimCLR"
"HobbitLong/SupContrast" -> "facebookresearch/moco"
"HobbitLong/SupContrast" -> "google-research/simclr"
"HobbitLong/SupContrast" -> "facebookresearch/swav"
"HobbitLong/SupContrast" -> "lucidrains/byol-pytorch"
"HobbitLong/SupContrast" -> "HobbitLong/CMC"
"HobbitLong/SupContrast" -> "PatrickHua/SimSiam"
"HobbitLong/SupContrast" -> "facebookresearch/vissl"
"HobbitLong/SupContrast" -> "jason718/awesome-self-supervised-learning"
"HobbitLong/SupContrast" -> "Spijkervet/SimCLR"
"HobbitLong/SupContrast" -> "KevinMusgrave/pytorch-metric-learning"
"HobbitLong/SupContrast" -> "open-mmlab/OpenSelfSup"
"HobbitLong/SupContrast" -> "asheeshcric/awesome-contrastive-self-supervised-learning"
"HobbitLong/SupContrast" -> "facebookresearch/barlowtwins"
"KevinMusgrave/pytorch-metric-learning" -> "rwightman/pytorch-image-models"
"KevinMusgrave/pytorch-metric-learning" -> "adambielski/siamese-triplet" ["e"=1]
"KevinMusgrave/pytorch-metric-learning" -> "lucidrains/vit-pytorch"
"KevinMusgrave/pytorch-metric-learning" -> "facebookresearch/vissl"
"KevinMusgrave/pytorch-metric-learning" -> "Confusezius/Deep-Metric-Learning-Baselines" ["e"=1]
"KevinMusgrave/pytorch-metric-learning" -> "facebookresearch/moco"
"KevinMusgrave/pytorch-metric-learning" -> "kornia/kornia"
"KevinMusgrave/pytorch-metric-learning" -> "HobbitLong/SupContrast"
"KevinMusgrave/pytorch-metric-learning" -> "lukemelas/EfficientNet-PyTorch"
"KevinMusgrave/pytorch-metric-learning" -> "arogozhnikov/einops"
"KevinMusgrave/pytorch-metric-learning" -> "albumentations-team/albumentations"
"KevinMusgrave/pytorch-metric-learning" -> "qubvel/segmentation_models.pytorch"
"KevinMusgrave/pytorch-metric-learning" -> "google-research/simclr"
"KevinMusgrave/pytorch-metric-learning" -> "jason718/awesome-self-supervised-learning"
"KevinMusgrave/pytorch-metric-learning" -> "jacobgil/pytorch-grad-cam"
"Spijkervet/SimCLR" -> "leftthomas/SimCLR"
"Spijkervet/SimCLR" -> "sthalles/SimCLR"
"Spijkervet/SimCLR" -> "google-research/simclr"
"Spijkervet/SimCLR" -> "sthalles/PyTorch-BYOL"
"Spijkervet/SimCLR" -> "HobbitLong/SupContrast"
"Spijkervet/SimCLR" -> "HobbitLong/PyContrast"
"Spijkervet/SimCLR" -> "facebookresearch/swav"
"Spijkervet/SimCLR" -> "lucidrains/byol-pytorch"
"Spijkervet/SimCLR" -> "kekmodel/FixMatch-pytorch" ["e"=1]
"Spijkervet/SimCLR" -> "mdiephuis/SimCLR"
"Spijkervet/SimCLR" -> "kakaobrain/torchlars"
"Spijkervet/SimCLR" -> "AndrewAtanov/simclr-pytorch"
"Spijkervet/SimCLR" -> "Spijkervet/BYOL"
"Spijkervet/SimCLR" -> "facebookresearch/moco"
"Spijkervet/SimCLR" -> "PatrickHua/SimSiam"
"Sungwon-Han/FEDX" -> "archon159/SELOR"
"Sungwon-Han/FEDX" -> "KSB21ST/MINI-ARC"
"Sungwon-Han/FEDX" -> "archon159/elsa"
"SwinTransformer/Transformer-SSL" -> "facebookresearch/moco-v3"
"SwinTransformer/Transformer-SSL" -> "WXinlong/DenseCL"
"SwinTransformer/Transformer-SSL" -> "microsoft/esvit"
"SwinTransformer/Transformer-SSL" -> "SwinTransformer/Swin-Transformer-Semantic-Segmentation"
"SwinTransformer/Transformer-SSL" -> "microsoft/SimMIM"
"SwinTransformer/Transformer-SSL" -> "Sara-Ahmed/SiT"
"SwinTransformer/Transformer-SSL" -> "lucidrains/byol-pytorch"
"SwinTransformer/Transformer-SSL" -> "bytedance/ibot"
"SwinTransformer/Transformer-SSL" -> "Meituan-AutoML/Twins"
"SwinTransformer/Transformer-SSL" -> "facebookresearch/dino"
"SwinTransformer/Transformer-SSL" -> "sail-sg/volo"
"SwinTransformer/Transformer-SSL" -> "SwinTransformer/Swin-Transformer-Object-Detection"
"SwinTransformer/Transformer-SSL" -> "open-mmlab/OpenSelfSup"
"SwinTransformer/Transformer-SSL" -> "SwinTransformer/Video-Swin-Transformer" ["e"=1]
"SwinTransformer/Transformer-SSL" -> "xieenze/DetCo" ["e"=1]
"facebookresearch/AugLy" -> "facebookresearch/vissl"
"facebookresearch/AugLy" -> "albumentations-team/albumentations"
"facebookresearch/AugLy" -> "makcedward/nlpaug" ["e"=1]
"facebookresearch/AugLy" -> "kornia/kornia"
"facebookresearch/AugLy" -> "huggingface/accelerate" ["e"=1]
"facebookresearch/AugLy" -> "facebookresearch/dino"
"facebookresearch/AugLy" -> "arogozhnikov/einops"
"facebookresearch/AugLy" -> "facebookresearch/pytorchvideo" ["e"=1]
"facebookresearch/AugLy" -> "speechbrain/speechbrain" ["e"=1]
"facebookresearch/AugLy" -> "lightly-ai/lightly"
"facebookresearch/AugLy" -> "pytorch/captum"
"facebookresearch/AugLy" -> "rwightman/pytorch-image-models"
"facebookresearch/AugLy" -> "PyTorchLightning/pytorch-lightning"
"facebookresearch/AugLy" -> "KevinMusgrave/pytorch-metric-learning"
"facebookresearch/AugLy" -> "evidentlyai/evidently" ["e"=1]
"google-research/simclr" -> "facebookresearch/moco"
"google-research/simclr" -> "sthalles/SimCLR"
"google-research/simclr" -> "HobbitLong/SupContrast"
"google-research/simclr" -> "facebookresearch/swav"
"google-research/simclr" -> "HobbitLong/PyContrast"
"google-research/simclr" -> "facebookresearch/vissl"
"google-research/simclr" -> "lucidrains/byol-pytorch"
"google-research/simclr" -> "jason718/awesome-self-supervised-learning"
"google-research/simclr" -> "HobbitLong/CMC"
"google-research/simclr" -> "Spijkervet/SimCLR"
"google-research/simclr" -> "open-mmlab/OpenSelfSup"
"google-research/simclr" -> "facebookresearch/dino"
"google-research/simclr" -> "leftthomas/SimCLR"
"google-research/simclr" -> "facebookresearch/detr"
"google-research/simclr" -> "facebookresearch/deit"
"microsoft/Swin-Transformer" -> "lucidrains/vit-pytorch"
"microsoft/Swin-Transformer" -> "rwightman/pytorch-image-models"
"microsoft/Swin-Transformer" -> "google-research/vision_transformer"
"microsoft/Swin-Transformer" -> "facebookresearch/detr"
"microsoft/Swin-Transformer" -> "facebookresearch/ConvNeXt"
"microsoft/Swin-Transformer" -> "open-mmlab/mmdetection"
"microsoft/Swin-Transformer" -> "facebookresearch/mae"
"microsoft/Swin-Transformer" -> "facebookresearch/deit"
"microsoft/Swin-Transformer" -> "open-mmlab/mmsegmentation"
"microsoft/Swin-Transformer" -> "openai/CLIP"
"microsoft/Swin-Transformer" -> "Megvii-BaseDetection/YOLOX"
"microsoft/Swin-Transformer" -> "SwinTransformer/Swin-Transformer-Object-Detection"
"microsoft/Swin-Transformer" -> "facebookresearch/detectron2"
"microsoft/Swin-Transformer" -> "jacobgil/pytorch-grad-cam"
"microsoft/Swin-Transformer" -> "fundamentalvision/Deformable-DETR"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/VisualDL"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/PaddleSeg"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/PaddleClas"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/PaddleHub"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/X2Paddle"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/Paddle-Lite"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/Paddle"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/Serving" ["e"=1]
"PaddlePaddle/PaddleX" -> "PaddlePaddle/FastDeploy"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/PaddleSlim"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/models"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/PaddleGAN"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/awesome-DeepLearning"
"PaddlePaddle/PaddleX" -> "PaddlePaddle/PaddleRec" ["e"=1]
"amusi/CVPR2021-Papers-with-Code" -> "extreme-assistant/CVPR2021-Paper-Code-Interpretation"
"amusi/CVPR2021-Papers-with-Code" -> "amusi/ICCV2021-Papers-with-Code"
"amusi/CVPR2021-Papers-with-Code" -> "microsoft/Swin-Transformer"
"amusi/CVPR2021-Papers-with-Code" -> "amusi/daily-paper-computer-vision"
"amusi/CVPR2021-Papers-with-Code" -> "dk-liang/Awesome-Visual-Transformer"
"amusi/CVPR2021-Papers-with-Code" -> "52CV/CVPR-2021-Papers"
"amusi/CVPR2021-Papers-with-Code" -> "xmu-xiaoma666/External-Attention-pytorch"
"amusi/CVPR2021-Papers-with-Code" -> "lucidrains/vit-pytorch"
"amusi/CVPR2021-Papers-with-Code" -> "DingXiaoH/RepVGG"
"amusi/CVPR2021-Papers-with-Code" -> "rwightman/pytorch-image-models"
"amusi/CVPR2021-Papers-with-Code" -> "facebookresearch/detr"
"amusi/CVPR2021-Papers-with-Code" -> "open-mmlab/mmsegmentation"
"amusi/CVPR2021-Papers-with-Code" -> "facebookresearch/ConvNeXt"
"amusi/CVPR2021-Papers-with-Code" -> "Megvii-BaseDetection/YOLOX"
"amusi/CVPR2021-Papers-with-Code" -> "google-research/vision_transformer"
"facebookresearch/deit" -> "google-research/vision_transformer"
"facebookresearch/deit" -> "facebookresearch/mae"
"facebookresearch/deit" -> "facebookresearch/dino"
"facebookresearch/deit" -> "microsoft/Swin-Transformer"
"facebookresearch/deit" -> "lucidrains/vit-pytorch"
"facebookresearch/deit" -> "fundamentalvision/Deformable-DETR"
"facebookresearch/deit" -> "facebookresearch/ConvNeXt"
"facebookresearch/deit" -> "facebookresearch/detr"
"facebookresearch/deit" -> "facebookresearch/moco"
"facebookresearch/deit" -> "yitu-opensource/T2T-ViT"
"facebookresearch/deit" -> "whai362/PVT"
"facebookresearch/deit" -> "rwightman/pytorch-image-models"
"facebookresearch/deit" -> "facebookresearch/vissl"
"facebookresearch/deit" -> "dk-liang/Awesome-Visual-Transformer"
"facebookresearch/deit" -> "jeonsworld/ViT-pytorch"
"52CV/CVPR-2021-Papers" -> "amusi/CVPR2021-Papers-with-Code"
"52CV/CVPR-2021-Papers" -> "extreme-assistant/CVPR2021-Paper-Code-Interpretation"
"52CV/CVPR-2021-Papers" -> "amusi/ICCV2021-Papers-with-Code"
"52CV/CVPR-2021-Papers" -> "microsoft/Swin-Transformer"
"52CV/CVPR-2021-Papers" -> "dk-liang/Awesome-Visual-Transformer"
"52CV/CVPR-2021-Papers" -> "amusi/CVPR2020-Code"
"52CV/CVPR-2021-Papers" -> "lucidrains/vit-pytorch"
"52CV/CVPR-2021-Papers" -> "52CV/CVPR-2022-Papers"
"52CV/CVPR-2021-Papers" -> "yenchenlin/awesome-NeRF" ["e"=1]
"52CV/CVPR-2021-Papers" -> "extreme-assistant/ICCV2021-Paper-Code-Interpretation"
"52CV/CVPR-2021-Papers" -> "facebookresearch/detr"
"52CV/CVPR-2021-Papers" -> "jacobgil/pytorch-grad-cam"
"52CV/CVPR-2021-Papers" -> "52CV/2021-CV-Surveys"
"52CV/CVPR-2021-Papers" -> "rwightman/pytorch-image-models"
"52CV/CVPR-2021-Papers" -> "facebookresearch/mae"
"enpeizhao/CVprojects" -> "shouxieai/tensorRT_Pro"
"enpeizhao/CVprojects" -> "Javacr/PyQt5-YOLOv5" ["e"=1]
"enpeizhao/CVprojects" -> "52CV/CV-Surveys"
"enpeizhao/CVprojects" -> "dyh/unbox_yolov5_deepsort_counting" ["e"=1]
"enpeizhao/CVprojects" -> "shouxieai/learning-cuda-trt"
"enpeizhao/CVprojects" -> "iscyy/yoloair"
"enpeizhao/CVprojects" -> "jizhishutong/YOLOU"
"enpeizhao/CVprojects" -> "Charmve/computer-vision-in-action" ["e"=1]
"enpeizhao/CVprojects" -> "wang-xinyu/tensorrtx"
"enpeizhao/CVprojects" -> "extreme-assistant/CVPR2022-Paper-Code-Interpretation"
"enpeizhao/CVprojects" -> "ppogg/YOLOv5-Lite" ["e"=1]
"enpeizhao/CVprojects" -> "GYee/CV_interviews_Q-A" ["e"=1]
"enpeizhao/CVprojects" -> "amusi/CVPR2022-Papers-with-Code"
"enpeizhao/CVprojects" -> "Sharpiless/Yolov5-Deepsort" ["e"=1]
"enpeizhao/CVprojects" -> "yeyun111/dlcv_for_beginners"
"open-mmlab/mmgeneration" -> "TommyZihao/MMGeneration_Tutorials"
"open-mmlab/mmgeneration" -> "open-mmlab/mmediting" ["e"=1]
"open-mmlab/mmgeneration" -> "open-mmlab/mim"
"open-mmlab/mmgeneration" -> "open-mmlab/mmclassification"
"open-mmlab/mmgeneration" -> "open-mmlab/mmfewshot"
"open-mmlab/mmgeneration" -> "open-mmlab/mmdeploy"
"open-mmlab/mmgeneration" -> "open-mmlab/mmrazor"
"open-mmlab/mmgeneration" -> "open-mmlab/mmflow"
"open-mmlab/mmgeneration" -> "open-mmlab/mmtracking" ["e"=1]
"open-mmlab/mmgeneration" -> "open-mmlab/mmselfsup"
"open-mmlab/mmgeneration" -> "open-mmlab/mmhuman3d" ["e"=1]
"open-mmlab/mmgeneration" -> "open-mmlab/mmcv"
"open-mmlab/mmgeneration" -> "open-mmlab/mmsegmentation"
"open-mmlab/mmgeneration" -> "open-mmlab/mmyolo"
"open-mmlab/mmgeneration" -> "open-mmlab/mmocr" ["e"=1]
"endernewton/tf-faster-rcnn" -> "smallcorgi/Faster-RCNN_TF"
"endernewton/tf-faster-rcnn" -> "rbgirshick/py-faster-rcnn"
"endernewton/tf-faster-rcnn" -> "balancap/SSD-Tensorflow"
"endernewton/tf-faster-rcnn" -> "CharlesShang/TFFRCNN"
"endernewton/tf-faster-rcnn" -> "CharlesShang/FastMaskRCNN"
"endernewton/tf-faster-rcnn" -> "tensorpack/tensorpack"
"endernewton/tf-faster-rcnn" -> "jwyang/faster-rcnn.pytorch"
"endernewton/tf-faster-rcnn" -> "msracver/Deformable-ConvNets"
"endernewton/tf-faster-rcnn" -> "ruotianluo/pytorch-faster-rcnn"
"endernewton/tf-faster-rcnn" -> "rbgirshick/fast-rcnn"
"endernewton/tf-faster-rcnn" -> "fizyr/keras-retinanet"
"endernewton/tf-faster-rcnn" -> "qqwweee/keras-yolo3"
"endernewton/tf-faster-rcnn" -> "ShaoqingRen/faster_rcnn"
"endernewton/tf-faster-rcnn" -> "weiliu89/caffe"
"endernewton/tf-faster-rcnn" -> "chenyuntc/simple-faster-rcnn-pytorch"
"philferriere/cocoapi" -> "cocodataset/cocoapi"
"philferriere/cocoapi" -> "dbolya/yolact"
"philferriere/cocoapi" -> "facebookresearch/maskrcnn-benchmark"
"philferriere/cocoapi" -> "princeton-vl/CornerNet"
"philferriere/cocoapi" -> "xingyizhou/CenterNet"
"philferriere/cocoapi" -> "leoxiaobin/deep-high-resolution-net.pytorch" ["e"=1]
"philferriere/cocoapi" -> "fizyr/keras-retinanet"
"philferriere/cocoapi" -> "ayooshkathuria/YOLO_v3_tutorial_from_scratch"
"philferriere/cocoapi" -> "ayooshkathuria/pytorch-yolo-v3"
"philferriere/cocoapi" -> "tianzhi0549/FCOS"
"philferriere/cocoapi" -> "rafaelpadilla/Object-Detection-Metrics"
"philferriere/cocoapi" -> "ShuLiu1993/PANet"
"philferriere/cocoapi" -> "amdegroot/ssd.pytorch"
"philferriere/cocoapi" -> "jwyang/faster-rcnn.pytorch"
"philferriere/cocoapi" -> "multimodallearning/pytorch-mask-rcnn"
"weiaicunzai/awesome-image-classification" -> "amusi/awesome-object-detection"
"weiaicunzai/awesome-image-classification" -> "hysts/pytorch_image_classification"
"weiaicunzai/awesome-image-classification" -> "weiaicunzai/pytorch-cifar100"
"weiaicunzai/awesome-image-classification" -> "mrgloom/awesome-semantic-segmentation"
"weiaicunzai/awesome-image-classification" -> "hoya012/deep_learning_object_detection"
"weiaicunzai/awesome-image-classification" -> "amusi/TensorFlow-From-Zero-To-One" ["e"=1]
"weiaicunzai/awesome-image-classification" -> "lukemelas/EfficientNet-PyTorch"
"weiaicunzai/awesome-image-classification" -> "extreme-assistant/cvpr2019"
"weiaicunzai/awesome-image-classification" -> "ChanChiChoi/awesome-Face_Recognition"
"weiaicunzai/awesome-image-classification" -> "Tramac/awesome-semantic-segmentation-pytorch" ["e"=1]
"weiaicunzai/awesome-image-classification" -> "amusi/daily-paper-computer-vision"
"weiaicunzai/awesome-image-classification" -> "amusi/awesome-lane-detection" ["e"=1]
"weiaicunzai/awesome-image-classification" -> "weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks"
"weiaicunzai/awesome-image-classification" -> "lxztju/pytorch_classification"
"weiaicunzai/awesome-image-classification" -> "Cadene/pretrained-models.pytorch"
"AntixK/PyTorch-VAE" -> "eriklindernoren/PyTorch-GAN" ["e"=1]
"AntixK/PyTorch-VAE" -> "heejkoo/Awesome-Diffusion-Models" ["e"=1]
"AntixK/PyTorch-VAE" -> "lucidrains/denoising-diffusion-pytorch" ["e"=1]
"AntixK/PyTorch-VAE" -> "lucidrains/vit-pytorch"
"AntixK/PyTorch-VAE" -> "wiseodd/generative-models" ["e"=1]
"AntixK/PyTorch-VAE" -> "rwightman/pytorch-image-models"
"AntixK/PyTorch-VAE" -> "rosinality/vq-vae-2-pytorch" ["e"=1]
"AntixK/PyTorch-VAE" -> "YannDubs/disentangling-vae" ["e"=1]
"AntixK/PyTorch-VAE" -> "facebookresearch/moco"
"AntixK/PyTorch-VAE" -> "facebookresearch/mae"
"AntixK/PyTorch-VAE" -> "clementchadebec/benchmark_VAE" ["e"=1]
"AntixK/PyTorch-VAE" -> "jason718/awesome-self-supervised-learning"
"AntixK/PyTorch-VAE" -> "arogozhnikov/einops"
"AntixK/PyTorch-VAE" -> "PyTorchLightning/pytorch-lightning"
"AntixK/PyTorch-VAE" -> "pytorch/examples"
"ahong007007/awesomeCV" -> "Sophia-11/Awesome-CVPR-Paper"
"ahong007007/awesomeCV" -> "pprp/SimpleCVReproduction" ["e"=1]
"ahong007007/awesomeCV" -> "ming71/CV_PaperDaily"
"ahong007007/awesomeCV" -> "extreme-assistant/iccv2019"
"ahong007007/awesomeCV" -> "huawei-noah/ghostnet"
"ahong007007/awesomeCV" -> "extreme-assistant/cvpr2020"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "google/automl"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "lukemelas/EfficientNet-PyTorch"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "toandaominh1997/EfficientDet.Pytorch"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "xingyizhou/CenterNet"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "Tianxiaomo/pytorch-YOLOv4"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "zhanghang1989/ResNeSt"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "open-mmlab/mmdetection"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "ultralytics/yolov3"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "tianzhi0549/FCOS"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "amusi/awesome-object-detection"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "facebookresearch/detr"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "RangiLyu/nanodet"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "eriklindernoren/PyTorch-YOLOv3"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "wang-xinyu/tensorrtx"
"zylo117/Yet-Another-EfficientDet-Pytorch" -> "hoya012/deep_learning_object_detection"
"KOD-Chen/YOLOv2-Tensorflow" -> "KOD-Chen/YOLOv1-Tensorflow"
"KOD-Chen/YOLOv2-Tensorflow" -> "WojciechMormul/yolo2"
"KOD-Chen/YOLOv2-Tensorflow" -> "yhcc/yolo2"
"KOD-Chen/YOLOv2-Tensorflow" -> "shishichang/yolov2-tensorflow"
"SnailTyan/deep-learning-papers-translation" -> "amusi/daily-paper-computer-vision"
"SnailTyan/deep-learning-papers-translation" -> "amusi/awesome-object-detection"
"SnailTyan/deep-learning-papers-translation" -> "hoya012/deep_learning_object_detection"
"SnailTyan/deep-learning-papers-translation" -> "extreme-assistant/cvpr2019"
"SnailTyan/deep-learning-papers-translation" -> "qqwweee/keras-yolo3"
"SnailTyan/deep-learning-papers-translation" -> "eragonruan/text-detection-ctpn" ["e"=1]
"SnailTyan/deep-learning-papers-translation" -> "chenyuntc/simple-faster-rcnn-pytorch"
"SnailTyan/deep-learning-papers-translation" -> "zergtant/pytorch-handbook" ["e"=1]
"SnailTyan/deep-learning-papers-translation" -> "chenyuntc/pytorch-book" ["e"=1]
"SnailTyan/deep-learning-papers-translation" -> "jwyang/faster-rcnn.pytorch"
"SnailTyan/deep-learning-papers-translation" -> "xiaofengShi/CHINESE-OCR" ["e"=1]
"SnailTyan/deep-learning-papers-translation" -> "open-mmlab/mmdetection"
"SnailTyan/deep-learning-papers-translation" -> "amdegroot/ssd.pytorch"
"SnailTyan/deep-learning-papers-translation" -> "rbgirshick/py-faster-rcnn"
"SnailTyan/deep-learning-papers-translation" -> "eriklindernoren/PyTorch-YOLOv3"
"allanzelener/YAD2K" -> "qqwweee/keras-yolo3"
"allanzelener/YAD2K" -> "thtrieu/darkflow"
"allanzelener/YAD2K" -> "fchollet/deep-learning-models"
"allanzelener/YAD2K" -> "experiencor/keras-yolo2"
"allanzelener/YAD2K" -> "experiencor/keras-yolo3"
"allanzelener/YAD2K" -> "gliese581gg/YOLO_tensorflow"
"allanzelener/YAD2K" -> "rykov8/ssd_keras"
"allanzelener/YAD2K" -> "fizyr/keras-retinanet"
"allanzelener/YAD2K" -> "balancap/SSD-Tensorflow"
"allanzelener/YAD2K" -> "yhenon/keras-frcnn"
"allanzelener/YAD2K" -> "experiencor/basic-yolo-keras"
"allanzelener/YAD2K" -> "iwantooxxoox/Keras-OpenFace" ["e"=1]
"allanzelener/YAD2K" -> "pjreddie/darknet"
"allanzelener/YAD2K" -> "xiaochus/YOLOv3"
"allanzelener/YAD2K" -> "hizhangp/yolo_tensorflow"
"amdegroot/ssd.pytorch" -> "jwyang/faster-rcnn.pytorch"
"amdegroot/ssd.pytorch" -> "eriklindernoren/PyTorch-YOLOv3"
"amdegroot/ssd.pytorch" -> "lufficc/SSD"
"amdegroot/ssd.pytorch" -> "weiliu89/caffe"
"amdegroot/ssd.pytorch" -> "xingyizhou/CenterNet"
"amdegroot/ssd.pytorch" -> "balancap/SSD-Tensorflow"
"amdegroot/ssd.pytorch" -> "facebookresearch/maskrcnn-benchmark"
"amdegroot/ssd.pytorch" -> "longcw/yolo2-pytorch"
"amdegroot/ssd.pytorch" -> "ayooshkathuria/pytorch-yolo-v3"
"amdegroot/ssd.pytorch" -> "tianzhi0549/FCOS"
"amdegroot/ssd.pytorch" -> "longcw/faster_rcnn_pytorch"
"amdegroot/ssd.pytorch" -> "ultralytics/yolov3"
"amdegroot/ssd.pytorch" -> "chenyuntc/simple-faster-rcnn-pytorch"
"amdegroot/ssd.pytorch" -> "ruinmessi/RFBNet"
"amdegroot/ssd.pytorch" -> "amusi/awesome-object-detection"
"amusi/awesome-object-detection" -> "hoya012/deep_learning_object_detection"
"amusi/awesome-object-detection" -> "open-mmlab/mmdetection"
"amusi/awesome-object-detection" -> "mrgloom/awesome-semantic-segmentation"
"amusi/awesome-object-detection" -> "xingyizhou/CenterNet"
"amusi/awesome-object-detection" -> "amusi/daily-paper-computer-vision"
"amusi/awesome-object-detection" -> "facebookresearch/maskrcnn-benchmark"
"amusi/awesome-object-detection" -> "jwyang/faster-rcnn.pytorch"
"amusi/awesome-object-detection" -> "eriklindernoren/PyTorch-YOLOv3"
"amusi/awesome-object-detection" -> "extreme-assistant/cvpr2019"
"amusi/awesome-object-detection" -> "TuSimple/simpledet"
"amusi/awesome-object-detection" -> "ultralytics/yolov3"
"amusi/awesome-object-detection" -> "tianzhi0549/FCOS"
"amusi/awesome-object-detection" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"amusi/awesome-object-detection" -> "amdegroot/ssd.pytorch"
"amusi/awesome-object-detection" -> "rafaelpadilla/Object-Detection-Metrics"
"mahyarnajibi/SNIPER" -> "TuSimple/simpledet"
"mahyarnajibi/SNIPER" -> "ruinmessi/RFBNet"
"mahyarnajibi/SNIPER" -> "sfzhang15/RefineDet"
"mahyarnajibi/SNIPER" -> "princeton-vl/CornerNet"
"mahyarnajibi/SNIPER" -> "qijiezhao/M2Det"
"mahyarnajibi/SNIPER" -> "tianzhi0549/FCOS"
"mahyarnajibi/SNIPER" -> "zhaoweicai/cascade-rcnn"
"mahyarnajibi/SNIPER" -> "msracver/Relation-Networks-for-Object-Detection"
"mahyarnajibi/SNIPER" -> "xingyizhou/ExtremeNet"
"mahyarnajibi/SNIPER" -> "msracver/Deformable-ConvNets"
"mahyarnajibi/SNIPER" -> "princeton-vl/CornerNet-Lite"
"mahyarnajibi/SNIPER" -> "zengarden/light_head_rcnn"
"mahyarnajibi/SNIPER" -> "Duankaiwen/CenterNet"
"mahyarnajibi/SNIPER" -> "zjhuang22/maskscoring_rcnn"
"mahyarnajibi/SNIPER" -> "ShuLiu1993/PANet"
"PaddlePaddle/models" -> "PaddlePaddle/Paddle"
"PaddlePaddle/models" -> "PaddlePaddle/ERNIE" ["e"=1]
"PaddlePaddle/models" -> "ymcui/Chinese-BERT-wwm" ["e"=1]
"PaddlePaddle/models" -> "Embedding/Chinese-Word-Vectors" ["e"=1]
"PaddlePaddle/models" -> "PaddlePaddle/book"
"PaddlePaddle/models" -> "brightmart/nlp_chinese_corpus" ["e"=1]
"PaddlePaddle/models" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/models" -> "brightmart/albert_zh" ["e"=1]
"PaddlePaddle/models" -> "shenweichen/DeepCTR" ["e"=1]
"PaddlePaddle/models" -> "PaddlePaddle/PaddleHub"
"PaddlePaddle/models" -> "baidu/AnyQ" ["e"=1]
"PaddlePaddle/models" -> "baidu/lac" ["e"=1]
"PaddlePaddle/models" -> "PaddlePaddle/Paddle-Lite"
"PaddlePaddle/models" -> "macanv/BERT-BiLSTM-CRF-NER" ["e"=1]
"PaddlePaddle/models" -> "hanxiao/bert-as-service" ["e"=1]
"akamaster/pytorch_resnet_cifar10" -> "weiaicunzai/pytorch-cifar100"
"akamaster/pytorch_resnet_cifar10" -> "kuangliu/pytorch-cifar"
"akamaster/pytorch_resnet_cifar10" -> "meliketoy/wide-resnet.pytorch"
"akamaster/pytorch_resnet_cifar10" -> "bearpaw/pytorch-classification"
"akamaster/pytorch_resnet_cifar10" -> "huyvnphan/PyTorch_CIFAR10" ["e"=1]
"akamaster/pytorch_resnet_cifar10" -> "chengyangfu/pytorch-vgg-cifar10"
"akamaster/pytorch_resnet_cifar10" -> "he-y/Awesome-Pruning" ["e"=1]
"akamaster/pytorch_resnet_cifar10" -> "junyuseu/pytorch-cifar-models"
"akamaster/pytorch_resnet_cifar10" -> "Eric-mingjie/rethinking-network-pruning" ["e"=1]
"akamaster/pytorch_resnet_cifar10" -> "aaron-xichen/pytorch-playground"
"akamaster/pytorch_resnet_cifar10" -> "Lyken17/pytorch-OpCounter"
"akamaster/pytorch_resnet_cifar10" -> "tomgoldstein/loss-landscape"
"akamaster/pytorch_resnet_cifar10" -> "amirgholami/PyHessian" ["e"=1]
"akamaster/pytorch_resnet_cifar10" -> "JiahuiYu/slimmable_networks" ["e"=1]
"akamaster/pytorch_resnet_cifar10" -> "prlz77/ResNeXt.pytorch"
"marcellodebernardi/loss-landscapes" -> "logancyang/loss-landscape-anim"
"marcellodebernardi/loss-landscapes" -> "tomgoldstein/loss-landscape"
"mosaicml/composer" -> "libffcv/ffcv"
"mosaicml/composer" -> "arogozhnikov/einops"
"mosaicml/composer" -> "HazyResearch/flash-attention" ["e"=1]
"mosaicml/composer" -> "facebookresearch/xformers" ["e"=1]
"mosaicml/composer" -> "huggingface/accelerate" ["e"=1]
"mosaicml/composer" -> "openai/triton" ["e"=1]
"mosaicml/composer" -> "facebookincubator/AITemplate" ["e"=1]
"mosaicml/composer" -> "facebookresearch/vissl"
"mosaicml/composer" -> "aimhubio/aim" ["e"=1]
"mosaicml/composer" -> "patrick-kidger/torchtyping"
"mosaicml/composer" -> "mlfoundations/open_clip" ["e"=1]
"mosaicml/composer" -> "google/flax" ["e"=1]
"mosaicml/composer" -> "cleanlab/cleanlab" ["e"=1]
"mosaicml/composer" -> "TimDettmers/bitsandbytes" ["e"=1]
"mosaicml/composer" -> "kornia/kornia"
"rwightman/pytorch-image-models" -> "lucidrains/vit-pytorch"
"rwightman/pytorch-image-models" -> "open-mmlab/mmdetection"
"rwightman/pytorch-image-models" -> "microsoft/Swin-Transformer"
"rwightman/pytorch-image-models" -> "facebookresearch/detectron2"
"rwightman/pytorch-image-models" -> "lukemelas/EfficientNet-PyTorch"
"rwightman/pytorch-image-models" -> "facebookresearch/detr"
"rwightman/pytorch-image-models" -> "albumentations-team/albumentations"
"rwightman/pytorch-image-models" -> "qubvel/segmentation_models.pytorch"
"rwightman/pytorch-image-models" -> "google-research/vision_transformer"
"rwightman/pytorch-image-models" -> "Cadene/pretrained-models.pytorch"
"rwightman/pytorch-image-models" -> "openai/CLIP"
"rwightman/pytorch-image-models" -> "jacobgil/pytorch-grad-cam"
"rwightman/pytorch-image-models" -> "pytorch/vision"
"rwightman/pytorch-image-models" -> "PyTorchLightning/pytorch-lightning"
"rwightman/pytorch-image-models" -> "ultralytics/yolov5"
"tomgoldstein/loss-landscape" -> "marcellodebernardi/loss-landscapes"
"tomgoldstein/loss-landscape" -> "amirgholami/PyHessian" ["e"=1]
"tomgoldstein/loss-landscape" -> "davda54/sam"
"tomgoldstein/loss-landscape" -> "jettify/pytorch-optimizer"
"tomgoldstein/loss-landscape" -> "google/neural-tangents" ["e"=1]
"tomgoldstein/loss-landscape" -> "rtqichen/torchdiffeq" ["e"=1]
"tomgoldstein/loss-landscape" -> "utkuozbulak/pytorch-cnn-visualizations"
"tomgoldstein/loss-landscape" -> "google-research/sam"
"tomgoldstein/loss-landscape" -> "kuangliu/pytorch-cifar"
"tomgoldstein/loss-landscape" -> "MadryLab/robustness" ["e"=1]
"tomgoldstein/loss-landscape" -> "hendrycks/robustness" ["e"=1]
"tomgoldstein/loss-landscape" -> "arogozhnikov/einops"
"tomgoldstein/loss-landscape" -> "Luolc/AdaBound"
"tomgoldstein/loss-landscape" -> "quark0/darts" ["e"=1]
"tomgoldstein/loss-landscape" -> "williamFalcon/pytorch-lightning"
"victoresque/pytorch-template" -> "moemen95/Pytorch-Project-Template"
"victoresque/pytorch-template" -> "MrGemy95/Tensorflow-Project-Template"
"victoresque/pytorch-template" -> "ashleve/lightning-hydra-template"
"victoresque/pytorch-template" -> "sksq96/pytorch-summary"
"victoresque/pytorch-template" -> "pytorch/ignite"
"victoresque/pytorch-template" -> "rwightman/pytorch-image-models"
"victoresque/pytorch-template" -> "ritchieng/the-incredible-pytorch" ["e"=1]
"victoresque/pytorch-template" -> "boostcamp-ai-tech-4/ai-tech-interview" ["e"=1]
"victoresque/pytorch-template" -> "utkuozbulak/pytorch-cnn-visualizations"
"victoresque/pytorch-template" -> "bharathgs/Awesome-pytorch-list" ["e"=1]
"victoresque/pytorch-template" -> "arogozhnikov/einops"
"victoresque/pytorch-template" -> "NVIDIA/apex"
"victoresque/pytorch-template" -> "Cadene/pretrained-models.pytorch"
"victoresque/pytorch-template" -> "PyTorchLightning/pytorch-lightning"
"victoresque/pytorch-template" -> "jason718/awesome-self-supervised-learning"
"voxel51/fiftyone" -> "obss/sahi"
"voxel51/fiftyone" -> "openvinotoolkit/cvat"
"voxel51/fiftyone" -> "kornia/kornia"
"voxel51/fiftyone" -> "facebookresearch/pytorchvideo" ["e"=1]
"voxel51/fiftyone" -> "libffcv/ffcv"
"voxel51/fiftyone" -> "opencv/cvat"
"voxel51/fiftyone" -> "airctic/icevision" ["e"=1]
"voxel51/fiftyone" -> "albumentations-team/albumentations"
"voxel51/fiftyone" -> "rafaelpadilla/review_object_detection_metrics"
"voxel51/fiftyone" -> "facebookresearch/vissl"
"voxel51/fiftyone" -> "neuralmagic/sparseml" ["e"=1]
"voxel51/fiftyone" -> "neuralmagic/deepsparse" ["e"=1]
"voxel51/fiftyone" -> "tryolabs/norfair"
"voxel51/fiftyone" -> "cleanlab/cleanlab" ["e"=1]
"voxel51/fiftyone" -> "facebookresearch/ConvNeXt"
"ashleve/lightning-hydra-template" -> "facebookresearch/hydra"
"ashleve/lightning-hydra-template" -> "victoresque/pytorch-template"
"ashleve/lightning-hydra-template" -> "arogozhnikov/einops"
"ashleve/lightning-hydra-template" -> "PyTorchLightning/deep-learning-project-template"
"ashleve/lightning-hydra-template" -> "libffcv/ffcv"
"ashleve/lightning-hydra-template" -> "PyTorchLightning/lightning-flash"
"ashleve/lightning-hydra-template" -> "aimhubio/aim" ["e"=1]
"ashleve/lightning-hydra-template" -> "Lightning-AI/lightning"
"ashleve/lightning-hydra-template" -> "PyTorchLightning/pytorch-lightning"
"ashleve/lightning-hydra-template" -> "huggingface/accelerate" ["e"=1]
"ashleve/lightning-hydra-template" -> "PyTorchLightning/metrics"
"ashleve/lightning-hydra-template" -> "TylerYep/torchinfo"
"ashleve/lightning-hydra-template" -> "kornia/kornia"
"ashleve/lightning-hydra-template" -> "KevinMusgrave/pytorch-metric-learning"
"ashleve/lightning-hydra-template" -> "mosaicml/composer"
"umautobots/vod-converter" -> "nghiattran/vod-converter"
"umautobots/vod-converter" -> "xiaohaoChen/rrc_detection"
"umautobots/vod-converter" -> "chaoqichen/HTCN" ["e"=1]
"umautobots/vod-converter" -> "manutdzou/KITTI_SSD"
"umautobots/vod-converter" -> "MarkMuth/QtKittiVisualizer" ["e"=1]
"umautobots/vod-converter" -> "zhaoweicai/mscnn"
"umautobots/vod-converter" -> "cory8249/yolo2-pytorch"
"umautobots/vod-converter" -> "kujason/avod" ["e"=1]
"umautobots/vod-converter" -> "traveller59/kitti-object-eval-python" ["e"=1]
"umautobots/vod-converter" -> "BichenWuUCB/squeezeDet" ["e"=1]
"Jumabek/darknet_scripts" -> "PaulChongPeng/darknet"
"Jumabek/darknet_scripts" -> "hjimce/darknet_mobilenet" ["e"=1]
"Jumabek/darknet_scripts" -> "zunzhumu/darknet-mobilenet" ["e"=1]
"Jumabek/darknet_scripts" -> "bendidi/Tracking-with-darkflow" ["e"=1]
"Jumabek/darknet_scripts" -> "xueeinstein/darknet-vis"
"KumaTea/pytorch-aarch64" -> "KumaTea/tensorflow-aarch64"
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "deepinsight/insightface"
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "ShiqiYu/libfacedetection"
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "alibaba/MNN"
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "biubug6/Face-Detector-1MB-with-landmark" ["e"=1]
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "biubug6/Pytorch_Retinaface" ["e"=1]
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "RangiLyu/nanodet"
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices" ["e"=1]
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "Tencent/ncnn"
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "xingyizhou/CenterNet"
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "zuoqing1988/ZQCNN"
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "Star-Clouds/CenterFace" ["e"=1]
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "daquexian/onnx-simplifier"
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "Tencent/TNN"
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "TencentYoutuResearch/FaceDetection-DSFD"
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"NVIDIA/DALI" -> "NVIDIA/apex"
"NVIDIA/DALI" -> "NVIDIA/TensorRT"
"NVIDIA/DALI" -> "NVIDIA-AI-IOT/torch2trt"
"NVIDIA/DALI" -> "horovod/horovod"
"NVIDIA/DALI" -> "lukemelas/EfficientNet-PyTorch"
"NVIDIA/DALI" -> "tanglang96/DataLoaders_DALI"
"NVIDIA/DALI" -> "onnx/onnx-tensorrt"
"NVIDIA/DALI" -> "Lyken17/pytorch-OpCounter"
"NVIDIA/DALI" -> "xingyizhou/CenterNet"
"NVIDIA/DALI" -> "facebookresearch/pycls"
"NVIDIA/DALI" -> "daquexian/onnx-simplifier"
"NVIDIA/DALI" -> "NVIDIA/nccl" ["e"=1]
"NVIDIA/DALI" -> "NervanaSystems/distiller" ["e"=1]
"NVIDIA/DALI" -> "dmlc/gluon-cv"
"NVIDIA/DALI" -> "open-mmlab/mmcv"
"Paperspace/DataAugmentationForObjectDetection" -> "maozezhong/CV_ToolBox"
"Paperspace/DataAugmentationForObjectDetection" -> "kemaloksuz/ObjectDetectionImbalance"
"Paperspace/DataAugmentationForObjectDetection" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"Paperspace/DataAugmentationForObjectDetection" -> "ruinmessi/RFBNet"
"Paperspace/DataAugmentationForObjectDetection" -> "qijiezhao/M2Det"
"Paperspace/DataAugmentationForObjectDetection" -> "ruinmessi/ASFF"
"Paperspace/DataAugmentationForObjectDetection" -> "TuSimple/simpledet"
"Paperspace/DataAugmentationForObjectDetection" -> "rafaelpadilla/Object-Detection-Metrics"
"Paperspace/DataAugmentationForObjectDetection" -> "ming71/mmdetection-annotated"
"Paperspace/DataAugmentationForObjectDetection" -> "codebox/image_augmentor"
"Paperspace/DataAugmentationForObjectDetection" -> "yhenon/pytorch-retinanet"
"Paperspace/DataAugmentationForObjectDetection" -> "ZFTurbo/Weighted-Boxes-Fusion"
"Paperspace/DataAugmentationForObjectDetection" -> "lzx1413/PytorchSSD"
"Paperspace/DataAugmentationForObjectDetection" -> "tianzhi0549/FCOS"
"Paperspace/DataAugmentationForObjectDetection" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"TencentYoutuResearch/ObjectDetection-OneStageDet" -> "Stinky-Tofu/Stronger-yolo"
"TencentYoutuResearch/ObjectDetection-OneStageDet" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"TencentYoutuResearch/ObjectDetection-OneStageDet" -> "princeton-vl/CornerNet-Lite"
"TencentYoutuResearch/ObjectDetection-OneStageDet" -> "TuSimple/simpledet"
"TencentYoutuResearch/ObjectDetection-OneStageDet" -> "Duankaiwen/CenterNet"
"TencentYoutuResearch/ObjectDetection-OneStageDet" -> "princeton-vl/CornerNet"
"TencentYoutuResearch/ObjectDetection-OneStageDet" -> "ayooshkathuria/pytorch-yolo-v3"
"TencentYoutuResearch/ObjectDetection-OneStageDet" -> "ayooshkathuria/YOLO_v3_tutorial_from_scratch"
"TencentYoutuResearch/ObjectDetection-OneStageDet" -> "ruinmessi/RFBNet"
"TencentYoutuResearch/ObjectDetection-OneStageDet" -> "tianzhi0549/FCOS"
"TencentYoutuResearch/ObjectDetection-OneStageDet" -> "ruinmessi/ASFF"
"TencentYoutuResearch/ObjectDetection-OneStageDet" -> "megvii-model/ShuffleNet-Series"
"TencentYoutuResearch/ObjectDetection-OneStageDet" -> "eriklindernoren/PyTorch-YOLOv3"
"TencentYoutuResearch/ObjectDetection-OneStageDet" -> "BobLiu20/YOLOv3_PyTorch"
"TencentYoutuResearch/ObjectDetection-OneStageDet" -> "amusi/awesome-object-detection"
"alibaba/MNN" -> "Tencent/ncnn"
"alibaba/MNN" -> "Tencent/TNN"
"alibaba/MNN" -> "XiaoMi/mace" ["e"=1]
"alibaba/MNN" -> "OAID/Tengine" ["e"=1]
"alibaba/MNN" -> "NVIDIA/TensorRT"
"alibaba/MNN" -> "daquexian/onnx-simplifier"
"alibaba/MNN" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB"
"alibaba/MNN" -> "deepinsight/insightface"
"alibaba/MNN" -> "onnx/onnx"
"alibaba/MNN" -> "xingyizhou/CenterNet"
"alibaba/MNN" -> "lutzroeder/netron"
"alibaba/MNN" -> "Tencent/PocketFlow" ["e"=1]
"alibaba/MNN" -> "RangiLyu/nanodet"
"alibaba/MNN" -> "dmlc/tvm" ["e"=1]
"alibaba/MNN" -> "ShiqiYu/libfacedetection"
"choasup/caffe-yolo9000" -> "gklz1982/caffe-yolov2"
"chuanqi305/FocalLoss" -> "sciencefans/Focal-Loss"
"chuanqi305/FocalLoss" -> "zimenglan-sysu-512/Focal-Loss"
"chuanqi305/FocalLoss" -> "canteen-man/MobileNet-SSD-Focal-loss"
"chuanqi305/FocalLoss" -> "chengyangfu/caffe"
"chuanqi305/FocalLoss" -> "farmingyard/caffe-mobilenet"
"chuanqi305/FocalLoss" -> "xialuxi/arcface-caffe" ["e"=1]
"chuanqi305/FocalLoss" -> "Longqi-S/Focal-Loss"
"experiencor/basic-yolo-keras" -> "rykov8/ssd_keras"
"experiencor/basic-yolo-keras" -> "allanzelener/YAD2K"
"experiencor/basic-yolo-keras" -> "yhenon/keras-frcnn"
"experiencor/basic-yolo-keras" -> "xslittlegrass/CarND-Vehicle-Detection" ["e"=1]
"experiencor/basic-yolo-keras" -> "Jumabek/darknet_scripts"
"experiencor/basic-yolo-keras" -> "pierluigiferrari/ssd_keras"
"experiencor/basic-yolo-keras" -> "rcmalli/keras-mobilenet" ["e"=1]
"experiencor/basic-yolo-keras" -> "ruiminshen/yolo-tf"
"experiencor/basic-yolo-keras" -> "experiencor/keras-yolo3"
"experiencor/basic-yolo-keras" -> "Guanghan/ROLO" ["e"=1]
"experiencor/basic-yolo-keras" -> "nilboy/tensorflow-yolo"
"experiencor/basic-yolo-keras" -> "puzzledqs/BBox-Label-Tool"
"experiencor/basic-yolo-keras" -> "aurora95/Keras-FCN" ["e"=1]
"experiencor/basic-yolo-keras" -> "gliese581gg/YOLO_tensorflow"
"experiencor/basic-yolo-keras" -> "stratospark/keras-multiprocess-image-data-generator" ["e"=1]
"facebookresearch/visdom" -> "lanpa/tensorboard-pytorch"
"facebookresearch/visdom" -> "lanpa/tensorboardX"
"facebookresearch/visdom" -> "soumith/ganhacks" ["e"=1]
"facebookresearch/visdom" -> "pytorch/examples"
"facebookresearch/visdom" -> "facebookresearch/Detectron"
"facebookresearch/visdom" -> "Cadene/pretrained-models.pytorch"
"facebookresearch/visdom" -> "facebookresearch/maskrcnn-benchmark"
"facebookresearch/visdom" -> "vdumoulin/conv_arithmetic"
"facebookresearch/visdom" -> "rusty1s/pytorch_geometric" ["e"=1]
"facebookresearch/visdom" -> "wiseodd/generative-models" ["e"=1]
"facebookresearch/visdom" -> "deepmind/sonnet" ["e"=1]
"facebookresearch/visdom" -> "spro/practical-pytorch" ["e"=1]
"facebookresearch/visdom" -> "ritchieng/the-incredible-pytorch" ["e"=1]
"facebookresearch/visdom" -> "NVIDIA/apex"
"facebookresearch/visdom" -> "aleju/imgaug"
"hizhangp/yolo_tensorflow" -> "nilboy/tensorflow-yolo"
"hizhangp/yolo_tensorflow" -> "gliese581gg/YOLO_tensorflow"
"hizhangp/yolo_tensorflow" -> "smallcorgi/Faster-RCNN_TF"
"hizhangp/yolo_tensorflow" -> "balancap/SSD-Tensorflow"
"hizhangp/yolo_tensorflow" -> "endernewton/tf-faster-rcnn"
"hizhangp/yolo_tensorflow" -> "ruiminshen/yolo-tf"
"hizhangp/yolo_tensorflow" -> "mystic123/tensorflow-yolo-v3"
"hizhangp/yolo_tensorflow" -> "thtrieu/darkflow"
"hizhangp/yolo_tensorflow" -> "allanzelener/YAD2K"
"hizhangp/yolo_tensorflow" -> "wizyoung/YOLOv3_TensorFlow"
"hizhangp/yolo_tensorflow" -> "YunYang1994/tensorflow-yolov3"
"hizhangp/yolo_tensorflow" -> "xiaohu2015/DeepLearning_tutorials"
"hizhangp/yolo_tensorflow" -> "CharlesShang/TFFRCNN"
"hizhangp/yolo_tensorflow" -> "seann999/ssd_tensorflow"
"hizhangp/yolo_tensorflow" -> "experiencor/keras-yolo2"
"kpzhang93/MTCNN_face_detection_alignment" -> "ydwen/caffe-face" ["e"=1]
"kpzhang93/MTCNN_face_detection_alignment" -> "AITTSMD/MTCNN-Tensorflow"
"kpzhang93/MTCNN_face_detection_alignment" -> "wy1iu/sphereface" ["e"=1]
"kpzhang93/MTCNN_face_detection_alignment" -> "davidsandberg/facenet"
"kpzhang93/MTCNN_face_detection_alignment" -> "Seanlinx/mtcnn" ["e"=1]
"kpzhang93/MTCNN_face_detection_alignment" -> "CongWeilin/mtcnn-caffe" ["e"=1]
"kpzhang93/MTCNN_face_detection_alignment" -> "dlunion/mtcnn" ["e"=1]
"kpzhang93/MTCNN_face_detection_alignment" -> "deepinsight/insightface"
"kpzhang93/MTCNN_face_detection_alignment" -> "seetaface/SeetaFaceEngine"
"kpzhang93/MTCNN_face_detection_alignment" -> "happynear/MTCNN_face_detection_alignment" ["e"=1]
"kpzhang93/MTCNN_face_detection_alignment" -> "mahyarnajibi/SSH" ["e"=1]
"kpzhang93/MTCNN_face_detection_alignment" -> "weiliu89/caffe"
"kpzhang93/MTCNN_face_detection_alignment" -> "RiweiChen/DeepFace" ["e"=1]
"kpzhang93/MTCNN_face_detection_alignment" -> "shanren7/real_time_face_recognition" ["e"=1]
"kpzhang93/MTCNN_face_detection_alignment" -> "shicai/MobileNet-Caffe"
"polarisZhao/awesome-face" -> "ChanChiChoi/awesome-Face_Recognition"
"polarisZhao/awesome-face" -> "becauseofAI/HelloFace" ["e"=1]
"polarisZhao/awesome-face" -> "wywu/LAB" ["e"=1]
"polarisZhao/awesome-face" -> "ZhaoJ9014/face.evoLVe.PyTorch" ["e"=1]
"polarisZhao/awesome-face" -> "fwang91/IMDb-Face" ["e"=1]
"polarisZhao/awesome-face" -> "wy1iu/sphereface" ["e"=1]
"polarisZhao/awesome-face" -> "happynear/FaceDatasets" ["e"=1]
"polarisZhao/awesome-face" -> "zeusees/HyperLandmark" ["e"=1]
"polarisZhao/awesome-face" -> "AlexanderParkin/ChaLearn_liveness_challenge" ["e"=1]
"polarisZhao/awesome-face" -> "ShownX/FacePaperCollection" ["e"=1]
"polarisZhao/awesome-face" -> "TencentYoutuResearch/FaceDetection-DSFD"
"polarisZhao/awesome-face" -> "cleardusk/3DDFA" ["e"=1]
"polarisZhao/awesome-face" -> "TreB1eN/InsightFace_Pytorch" ["e"=1]
"polarisZhao/awesome-face" -> "auroua/InsightFace_TF" ["e"=1]
"polarisZhao/awesome-face" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" ["e"=1]
"smallcorgi/Faster-RCNN_TF" -> "endernewton/tf-faster-rcnn"
"smallcorgi/Faster-RCNN_TF" -> "CharlesShang/TFFRCNN"
"smallcorgi/Faster-RCNN_TF" -> "rbgirshick/py-faster-rcnn"
"smallcorgi/Faster-RCNN_TF" -> "balancap/SSD-Tensorflow"
"smallcorgi/Faster-RCNN_TF" -> "CharlesShang/FastMaskRCNN"
"smallcorgi/Faster-RCNN_TF" -> "gliese581gg/YOLO_tensorflow"
"smallcorgi/Faster-RCNN_TF" -> "ShaoqingRen/faster_rcnn"
"smallcorgi/Faster-RCNN_TF" -> "rbgirshick/fast-rcnn"
"smallcorgi/Faster-RCNN_TF" -> "weiliu89/caffe"
"smallcorgi/Faster-RCNN_TF" -> "nilboy/tensorflow-yolo"
"smallcorgi/Faster-RCNN_TF" -> "hizhangp/yolo_tensorflow"
"smallcorgi/Faster-RCNN_TF" -> "msracver/Deformable-ConvNets"
"smallcorgi/Faster-RCNN_TF" -> "ethereon/caffe-tensorflow"
"smallcorgi/Faster-RCNN_TF" -> "daijifeng001/R-FCN"
"smallcorgi/Faster-RCNN_TF" -> "ry/tensorflow-resnet"
"thtrieu/darkflow" -> "pjreddie/darknet"
"thtrieu/darkflow" -> "gliese581gg/YOLO_tensorflow"
"thtrieu/darkflow" -> "allanzelener/YAD2K"
"thtrieu/darkflow" -> "balancap/SSD-Tensorflow"
"thtrieu/darkflow" -> "qqwweee/keras-yolo3"
"thtrieu/darkflow" -> "tzutalin/labelImg"
"thtrieu/darkflow" -> "rbgirshick/py-faster-rcnn"
"thtrieu/darkflow" -> "weiliu89/caffe"
"thtrieu/darkflow" -> "endernewton/tf-faster-rcnn"
"thtrieu/darkflow" -> "CharlesShang/FastMaskRCNN"
"thtrieu/darkflow" -> "facebookresearch/Detectron"
"thtrieu/darkflow" -> "smallcorgi/Faster-RCNN_TF"
"thtrieu/darkflow" -> "nilboy/tensorflow-yolo"
"thtrieu/darkflow" -> "davidsandberg/facenet"
"thtrieu/darkflow" -> "matterport/Mask_RCNN"
"Cadene/pretrained-models.pytorch" -> "lukemelas/EfficientNet-PyTorch"
"Cadene/pretrained-models.pytorch" -> "rwightman/pytorch-image-models"
"Cadene/pretrained-models.pytorch" -> "facebookresearch/maskrcnn-benchmark"
"Cadene/pretrained-models.pytorch" -> "open-mmlab/mmdetection"
"Cadene/pretrained-models.pytorch" -> "jwyang/faster-rcnn.pytorch"
"Cadene/pretrained-models.pytorch" -> "pytorch/vision"
"Cadene/pretrained-models.pytorch" -> "aleju/imgaug"
"Cadene/pretrained-models.pytorch" -> "utkuozbulak/pytorch-cnn-visualizations"
"Cadene/pretrained-models.pytorch" -> "pytorch/examples"
"Cadene/pretrained-models.pytorch" -> "amdegroot/ssd.pytorch"
"Cadene/pretrained-models.pytorch" -> "hoya012/deep_learning_object_detection"
"Cadene/pretrained-models.pytorch" -> "amusi/awesome-object-detection"
"Cadene/pretrained-models.pytorch" -> "mrgloom/awesome-semantic-segmentation"
"Cadene/pretrained-models.pytorch" -> "NVIDIA/apex"
"Cadene/pretrained-models.pytorch" -> "qubvel/segmentation_models.pytorch"
"CharlesShang/FastMaskRCNN" -> "smallcorgi/Faster-RCNN_TF"
"CharlesShang/FastMaskRCNN" -> "endernewton/tf-faster-rcnn"
"CharlesShang/FastMaskRCNN" -> "TuSimple/mx-maskrcnn"
"CharlesShang/FastMaskRCNN" -> "rbgirshick/py-faster-rcnn"
"CharlesShang/FastMaskRCNN" -> "msracver/FCIS"
"CharlesShang/FastMaskRCNN" -> "balancap/SSD-Tensorflow"
"CharlesShang/FastMaskRCNN" -> "CharlesShang/TFFRCNN"
"CharlesShang/FastMaskRCNN" -> "msracver/Deformable-ConvNets"
"CharlesShang/FastMaskRCNN" -> "matterport/Mask_RCNN"
"CharlesShang/FastMaskRCNN" -> "weiliu89/caffe"
"CharlesShang/FastMaskRCNN" -> "liuzhuang13/DenseNet"
"CharlesShang/FastMaskRCNN" -> "shelhamer/fcn.berkeleyvision.org"
"CharlesShang/FastMaskRCNN" -> "ShaoqingRen/faster_rcnn"
"CharlesShang/FastMaskRCNN" -> "MarvinTeichmann/tensorflow-fcn" ["e"=1]
"CharlesShang/FastMaskRCNN" -> "ethereon/caffe-tensorflow"
"rbgirshick/fast-rcnn" -> "rbgirshick/rcnn"
"rbgirshick/fast-rcnn" -> "rbgirshick/py-faster-rcnn"
"rbgirshick/fast-rcnn" -> "ShaoqingRen/faster_rcnn"
"rbgirshick/fast-rcnn" -> "weiliu89/caffe"
"rbgirshick/fast-rcnn" -> "KaimingHe/deep-residual-networks"
"rbgirshick/fast-rcnn" -> "daijifeng001/R-FCN"
"rbgirshick/fast-rcnn" -> "smallcorgi/Faster-RCNN_TF"
"rbgirshick/fast-rcnn" -> "endernewton/tf-faster-rcnn"
"rbgirshick/fast-rcnn" -> "shelhamer/fcn.berkeleyvision.org"
"rbgirshick/fast-rcnn" -> "CharlesShang/FastMaskRCNN"
"rbgirshick/fast-rcnn" -> "liuzhuang13/DenseNet"
"rbgirshick/fast-rcnn" -> "msracver/Deformable-ConvNets"
"rbgirshick/fast-rcnn" -> "facebook/fb.resnet.torch"
"rbgirshick/fast-rcnn" -> "ethereon/caffe-tensorflow"
"rbgirshick/fast-rcnn" -> "balancap/SSD-Tensorflow"
"albumentations-team/albumentations" -> "rwightman/pytorch-image-models"
"albumentations-team/albumentations" -> "qubvel/segmentation_models.pytorch"
"albumentations-team/albumentations" -> "aleju/imgaug"
"albumentations-team/albumentations" -> "lukemelas/EfficientNet-PyTorch"
"albumentations-team/albumentations" -> "open-mmlab/mmdetection"
"albumentations-team/albumentations" -> "kornia/kornia"
"albumentations-team/albumentations" -> "facebookresearch/detectron2"
"albumentations-team/albumentations" -> "lucidrains/vit-pytorch"
"albumentations-team/albumentations" -> "facebookresearch/detr"
"albumentations-team/albumentations" -> "microsoft/Swin-Transformer"
"albumentations-team/albumentations" -> "PyTorchLightning/pytorch-lightning"
"albumentations-team/albumentations" -> "jacobgil/pytorch-grad-cam"
"albumentations-team/albumentations" -> "open-mmlab/mmsegmentation"
"albumentations-team/albumentations" -> "pytorch/vision"
"albumentations-team/albumentations" -> "Megvii-BaseDetection/YOLOX"
"microsoft/unilm" -> "openai/CLIP"
"microsoft/unilm" -> "pytorch/fairseq" ["e"=1]
"microsoft/unilm" -> "microsoft/Swin-Transformer"
"microsoft/unilm" -> "UKPLab/sentence-transformers" ["e"=1]
"microsoft/unilm" -> "rwightman/pytorch-image-models"
"microsoft/unilm" -> "facebookresearch/llama" ["e"=1]
"microsoft/unilm" -> "lucidrains/vit-pytorch"
"microsoft/unilm" -> "salesforce/LAVIS" ["e"=1]
"microsoft/unilm" -> "facebookresearch/mae"
"microsoft/unilm" -> "microsoft/DeepSpeed" ["e"=1]
"microsoft/unilm" -> "tatsu-lab/stanford_alpaca" ["e"=1]
"microsoft/unilm" -> "ymcui/Chinese-BERT-wwm" ["e"=1]
"microsoft/unilm" -> "google-research/text-to-text-transfer-transformer" ["e"=1]
"microsoft/unilm" -> "mlfoundations/open_clip" ["e"=1]
"microsoft/unilm" -> "hpcaitech/ColossalAI" ["e"=1]
"ruinmessi/ASFF" -> "ruinmessi/RFBNet"
"ruinmessi/ASFF" -> "WongKinYiu/CrossStagePartialNetworks"
"ruinmessi/ASFF" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"ruinmessi/ASFF" -> "coldlarry/YOLOv3-complete-pruning" ["e"=1]
"ruinmessi/ASFF" -> "sfzhang15/ATSS"
"ruinmessi/ASFF" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"ruinmessi/ASFF" -> "toandaominh1997/EfficientDet.Pytorch"
"ruinmessi/ASFF" -> "CaoWGG/TensorRT-CenterNet"
"ruinmessi/ASFF" -> "tianzhi0549/FCOS"
"ruinmessi/ASFF" -> "jwchoi384/Gaussian_YOLOv3" ["e"=1]
"ruinmessi/ASFF" -> "kemaloksuz/ObjectDetectionImbalance"
"ruinmessi/ASFF" -> "Zzh-tju/DIoU-darknet" ["e"=1]
"ruinmessi/ASFF" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"ruinmessi/ASFF" -> "wlguan/Stronger-yolo-pytorch"
"ruinmessi/ASFF" -> "PengyiZhang/SlimYOLOv3" ["e"=1]
"PaddlePaddle/PaddleSeg" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/PaddleSeg" -> "open-mmlab/mmsegmentation"
"PaddlePaddle/PaddleSeg" -> "PaddlePaddle/PaddleClas"
"PaddlePaddle/PaddleSeg" -> "PaddlePaddle/PaddleX"
"PaddlePaddle/PaddleSeg" -> "Megvii-BaseDetection/YOLOX"
"PaddlePaddle/PaddleSeg" -> "qubvel/segmentation_models.pytorch"
"PaddlePaddle/PaddleSeg" -> "PaddlePaddle/PaddleHub"
"PaddlePaddle/PaddleSeg" -> "wkentaro/labelme"
"PaddlePaddle/PaddleSeg" -> "open-mmlab/mmdetection"
"PaddlePaddle/PaddleSeg" -> "mrgloom/awesome-semantic-segmentation"
"PaddlePaddle/PaddleSeg" -> "PaddlePaddle/PaddleGAN"
"PaddlePaddle/PaddleSeg" -> "PaddlePaddle/Paddle"
"PaddlePaddle/PaddleSeg" -> "microsoft/Swin-Transformer"
"PaddlePaddle/PaddleSeg" -> "facebookresearch/detectron2"
"PaddlePaddle/PaddleSeg" -> "rwightman/pytorch-image-models"
"openvinotoolkit/openvino_notebooks" -> "openvinotoolkit/open_model_zoo"
"openvinotoolkit/openvino_notebooks" -> "openvinotoolkit/openvino"
"openvinotoolkit/openvino_notebooks" -> "openvinotoolkit/model_server"
"openvinotoolkit/openvino_notebooks" -> "josepholiveira/podcastr" ["e"=1]
"openvinotoolkit/openvino_notebooks" -> "openvinotoolkit/nncf" ["e"=1]
"openvinotoolkit/openvino_notebooks" -> "openvinotoolkit/openvino_contrib"
"openvinotoolkit/openvino_notebooks" -> "RH12503/triangula" ["e"=1]
"openvinotoolkit/openvino_notebooks" -> "luxonis/depthai-experiments" ["e"=1]
"openvinotoolkit/openvino_notebooks" -> "openvinotoolkit/training_extensions"
"openvinotoolkit/openvino_notebooks" -> "PINTO0309/PINTO_model_zoo"
"openvinotoolkit/openvino_notebooks" -> "bes-dev/stable_diffusion.openvino" ["e"=1]
"openvinotoolkit/openvino_notebooks" -> "intel/openfl" ["e"=1]
"openvinotoolkit/openvino_notebooks" -> "luxonis/depthai-python" ["e"=1]
"openvinotoolkit/openvino_notebooks" -> "luxonis/depthai" ["e"=1]
"openvinotoolkit/openvino_notebooks" -> "openvinotoolkit/openvino_tensorflow"
"XuehaiPan/nvitop" -> "HazyResearch/flash-attention" ["e"=1]
"XuehaiPan/nvitop" -> "Syllo/nvtop"
"XuehaiPan/nvitop" -> "huggingface/accelerate" ["e"=1]
"XuehaiPan/nvitop" -> "wookayin/gpustat"
"XuehaiPan/nvitop" -> "rentruewang/koila"
"XuehaiPan/nvitop" -> "facebookincubator/AITemplate" ["e"=1]
"XuehaiPan/nvitop" -> "arogozhnikov/einops"
"XuehaiPan/nvitop" -> "libffcv/ffcv"
"XuehaiPan/nvitop" -> "TylerYep/torchinfo"
"XuehaiPan/nvitop" -> "patrick-kidger/torchtyping"
"XuehaiPan/nvitop" -> "openai/triton" ["e"=1]
"XuehaiPan/nvitop" -> "pytorch/torchdynamo" ["e"=1]
"XuehaiPan/nvitop" -> "facebookresearch/xformers" ["e"=1]
"XuehaiPan/nvitop" -> "aimhubio/aim" ["e"=1]
"XuehaiPan/nvitop" -> "xl0/lovely-tensors"
"JohannesBuchner/imagehash" -> "idealo/imagededup"
"JohannesBuchner/imagehash" -> "aetilius/pHash" ["e"=1]
"JohannesBuchner/imagehash" -> "bunchesofdonald/photohash"
"JohannesBuchner/imagehash" -> "jenssegers/imagehash" ["e"=1]
"JohannesBuchner/imagehash" -> "albu/albumentations"
"JohannesBuchner/imagehash" -> "philipbl/duplicate-images" ["e"=1]
"JohannesBuchner/imagehash" -> "EdjoLabs/image-match" ["e"=1]
"JohannesBuchner/imagehash" -> "jrosebr1/imutils"
"JohannesBuchner/imagehash" -> "Tencent/tencent-ml-images"
"JohannesBuchner/imagehash" -> "spotify/annoy" ["e"=1]
"JohannesBuchner/imagehash" -> "facebookresearch/faiss" ["e"=1]
"JohannesBuchner/imagehash" -> "corona10/goimagehash" ["e"=1]
"JohannesBuchner/imagehash" -> "ProvenanceLabs/image-match" ["e"=1]
"JohannesBuchner/imagehash" -> "commonsmachinery/blockhash-python"
"JohannesBuchner/imagehash" -> "thorn-oss/perception"
"HobbitLong/PyContrast" -> "HobbitLong/CMC"
"HobbitLong/PyContrast" -> "HobbitLong/SupContrast"
"HobbitLong/PyContrast" -> "facebookresearch/moco"
"HobbitLong/PyContrast" -> "open-mmlab/OpenSelfSup"
"HobbitLong/PyContrast" -> "facebookresearch/swav"
"HobbitLong/PyContrast" -> "google-research/simclr"
"HobbitLong/PyContrast" -> "lucidrains/byol-pytorch"
"HobbitLong/PyContrast" -> "asheeshcric/awesome-contrastive-self-supervised-learning"
"HobbitLong/PyContrast" -> "sthalles/SimCLR"
"HobbitLong/PyContrast" -> "jason718/awesome-self-supervised-learning"
"HobbitLong/PyContrast" -> "facebookresearch/vissl"
"HobbitLong/PyContrast" -> "zhirongw/lemniscate.pytorch"
"HobbitLong/PyContrast" -> "HobbitLong/RepDistiller" ["e"=1]
"HobbitLong/PyContrast" -> "facebookresearch/barlowtwins"
"HobbitLong/PyContrast" -> "WXinlong/DenseCL"
"PyTorchLightning/lightning-bolts" -> "PyTorchLightning/metrics"
"PyTorchLightning/lightning-bolts" -> "PyTorchLightning/lightning-flash"
"PyTorchLightning/lightning-bolts" -> "PyTorchLightning/lightning-transformers"
"PyTorchLightning/lightning-bolts" -> "PyTorchLightning/deep-learning-project-template"
"PyTorchLightning/lightning-bolts" -> "PyTorchLightning/lightning-tutorials"
"PyTorchLightning/lightning-bolts" -> "ashleve/lightning-hydra-template"
"PyTorchLightning/lightning-bolts" -> "vturrisi/solo-learn"
"PyTorchLightning/lightning-bolts" -> "facebookresearch/vissl"
"PyTorchLightning/lightning-bolts" -> "lucidrains/mlp-mixer-pytorch"
"PyTorchLightning/lightning-bolts" -> "lightly-ai/lightly"
"PyTorchLightning/lightning-bolts" -> "williamFalcon/pytorch-lightning-vae"
"PyTorchLightning/lightning-bolts" -> "pytorch/data" ["e"=1]
"PyTorchLightning/lightning-bolts" -> "asteroid-team/torch-audiomentations" ["e"=1]
"PyTorchLightning/pytorch-lightning" -> "rwightman/pytorch-image-models"
"PyTorchLightning/pytorch-lightning" -> "google/jax" ["e"=1]
"PyTorchLightning/pytorch-lightning" -> "pytorch/fairseq" ["e"=1]
"PyTorchLightning/pytorch-lightning" -> "facebookresearch/detectron2"
"PyTorchLightning/pytorch-lightning" -> "albumentations-team/albumentations"
"PyTorchLightning/pytorch-lightning" -> "arogozhnikov/einops"
"PyTorchLightning/pytorch-lightning" -> "facebookresearch/hydra"
"PyTorchLightning/pytorch-lightning" -> "pytorch/pytorch"
"PyTorchLightning/pytorch-lightning" -> "google-research/google-research" ["e"=1]
"PyTorchLightning/pytorch-lightning" -> "rusty1s/pytorch_geometric" ["e"=1]
"PyTorchLightning/pytorch-lightning" -> "ray-project/ray" ["e"=1]
"PyTorchLightning/pytorch-lightning" -> "lucidrains/vit-pytorch"
"PyTorchLightning/pytorch-lightning" -> "kornia/kornia"
"PyTorchLightning/pytorch-lightning" -> "facebookresearch/detr"
"PyTorchLightning/pytorch-lightning" -> "lutzroeder/netron"
"onnx/models" -> "onnx/tutorials"
"onnx/models" -> "onnx/onnx"
"onnx/models" -> "microsoft/onnxruntime"
"onnx/models" -> "NVIDIA/TensorRT"
"onnx/models" -> "onnx/onnx-tensorrt"
"onnx/models" -> "lutzroeder/netron"
"onnx/models" -> "daquexian/onnx-simplifier"
"onnx/models" -> "NVIDIA-AI-IOT/torch2trt"
"onnx/models" -> "onnx/tensorflow-onnx"
"onnx/models" -> "wang-xinyu/tensorrtx"
"onnx/models" -> "deepinsight/insightface"
"onnx/models" -> "dusty-nv/jetson-inference" ["e"=1]
"onnx/models" -> "apache/tvm" ["e"=1]
"onnx/models" -> "lukemelas/EfficientNet-PyTorch"
"onnx/models" -> "ultralytics/yolov3"
"vturrisi/solo-learn" -> "lightly-ai/lightly"
"vturrisi/solo-learn" -> "facebookresearch/vissl"
"vturrisi/solo-learn" -> "lucidrains/byol-pytorch"
"vturrisi/solo-learn" -> "facebookresearch/barlowtwins"
"vturrisi/solo-learn" -> "libffcv/ffcv"
"vturrisi/solo-learn" -> "open-mmlab/mmselfsup"
"vturrisi/solo-learn" -> "facebookresearch/simsiam"
"vturrisi/solo-learn" -> "facebookresearch/dino"
"vturrisi/solo-learn" -> "facebookresearch/swav"
"vturrisi/solo-learn" -> "facebookresearch/moco-v3"
"vturrisi/solo-learn" -> "HobbitLong/SupContrast"
"vturrisi/solo-learn" -> "facebookresearch/vicreg"
"vturrisi/solo-learn" -> "sthalles/SimCLR"
"vturrisi/solo-learn" -> "facebookresearch/msn"
"vturrisi/solo-learn" -> "bytedance/ibot"
"mli/gluon-tutorials-zh" -> "zackchase/mxnet-the-straight-dope"
"mli/gluon-tutorials-zh" -> "TuSimple/mx-maskrcnn"
"mli/gluon-tutorials-zh" -> "chinakook/Awesome-MXNet" ["e"=1]
"mli/gluon-tutorials-zh" -> "apache/incubator-mxnet"
"mli/gluon-tutorials-zh" -> "dmlc/gluon-cv"
"mli/gluon-tutorials-zh" -> "dmlc/tvm" ["e"=1]
"mli/gluon-tutorials-zh" -> "msracver/Deformable-ConvNets"
"mli/gluon-tutorials-zh" -> "dmlc/mxnet" ["e"=1]
"mli/gluon-tutorials-zh" -> "zhreshold/mxnet-ssd" ["e"=1]
"mli/gluon-tutorials-zh" -> "jiqizhixin/ML-Tutorial-Experiment" ["e"=1]
"mli/gluon-tutorials-zh" -> "dmlc/gluon-nlp" ["e"=1]
"mli/gluon-tutorials-zh" -> "exacity/simplified-deeplearning" ["e"=1]
"mli/gluon-tutorials-zh" -> "aksnzhy/xlearn" ["e"=1]
"mli/gluon-tutorials-zh" -> "TuSimple/simpledet"
"mli/gluon-tutorials-zh" -> "caffe2/caffe2" ["e"=1]
"toandaominh1997/EfficientDet.Pytorch" -> "signatrix/efficientdet"
"toandaominh1997/EfficientDet.Pytorch" -> "xuannianz/EfficientDet"
"toandaominh1997/EfficientDet.Pytorch" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"toandaominh1997/EfficientDet.Pytorch" -> "lukemelas/EfficientNet-PyTorch"
"toandaominh1997/EfficientDet.Pytorch" -> "ruinmessi/ASFF"
"toandaominh1997/EfficientDet.Pytorch" -> "rwightman/efficientdet-pytorch"
"toandaominh1997/EfficientDet.Pytorch" -> "google/automl"
"toandaominh1997/EfficientDet.Pytorch" -> "sfzhang15/ATSS"
"toandaominh1997/EfficientDet.Pytorch" -> "tianzhi0549/FCOS"
"toandaominh1997/EfficientDet.Pytorch" -> "yhenon/pytorch-retinanet"
"toandaominh1997/EfficientDet.Pytorch" -> "xingyizhou/CenterNet"
"toandaominh1997/EfficientDet.Pytorch" -> "zhanghang1989/ResNeSt"
"toandaominh1997/EfficientDet.Pytorch" -> "joe-siyuan-qiao/DetectoRS"
"toandaominh1997/EfficientDet.Pytorch" -> "rwightman/gen-efficientnet-pytorch"
"toandaominh1997/EfficientDet.Pytorch" -> "Duankaiwen/CenterNet"
"libffcv/ffcv" -> "facebookresearch/vissl"
"libffcv/ffcv" -> "mosaicml/composer"
"libffcv/ffcv" -> "arogozhnikov/einops"
"libffcv/ffcv" -> "facebookresearch/ConvNeXt"
"libffcv/ffcv" -> "kornia/kornia"
"libffcv/ffcv" -> "vturrisi/solo-learn"
"libffcv/ffcv" -> "rentruewang/koila"
"libffcv/ffcv" -> "mlfoundations/open_clip" ["e"=1]
"libffcv/ffcv" -> "huggingface/accelerate" ["e"=1]
"libffcv/ffcv" -> "facebookresearch/Detic" ["e"=1]
"libffcv/ffcv" -> "facebookresearch/fairscale" ["e"=1]
"libffcv/ffcv" -> "jettify/pytorch-optimizer"
"libffcv/ffcv" -> "lightly-ai/lightly"
"libffcv/ffcv" -> "facebookresearch/dino"
"libffcv/ffcv" -> "facebookresearch/deit"
"serengil/deepface" -> "deepinsight/insightface"
"serengil/deepface" -> "timesler/facenet-pytorch"
"serengil/deepface" -> "serengil/tensorflow-101" ["e"=1]
"serengil/deepface" -> "serengil/retinaface" ["e"=1]
"serengil/deepface" -> "davidsandberg/facenet"
"serengil/deepface" -> "ChanChiChoi/awesome-Face_Recognition"
"serengil/deepface" -> "exadel-inc/CompreFace" ["e"=1]
"serengil/deepface" -> "google/mediapipe"
"serengil/deepface" -> "ipazc/mtcnn"
"serengil/deepface" -> "ageitgey/face_recognition"
"serengil/deepface" -> "biubug6/Pytorch_Retinaface" ["e"=1]
"serengil/deepface" -> "zllrunning/face-parsing.PyTorch" ["e"=1]
"serengil/deepface" -> "cleardusk/3DDFA_V2" ["e"=1]
"serengil/deepface" -> "JDAI-CV/FaceX-Zoo" ["e"=1]
"serengil/deepface" -> "WongKinYiu/yolov7"
"lab-ml/nn" -> "tensortrade-org/tensortrade" ["e"=1]
"lab-ml/nn" -> "gordicaleksa/pytorch-GAT" ["e"=1]
"lab-ml/nn" -> "lab-ml/labml"
"lab-ml/nn" -> "berty/berty" ["e"=1]
"lab-ml/nn" -> "facebookresearch/AugLy"
"lab-ml/nn" -> "PyTorchLightning/pytorch-lightning"
"lab-ml/nn" -> "google/model_search" ["e"=1]
"lab-ml/nn" -> "deepmind/deepmind-research"
"lab-ml/nn" -> "facebookresearch/vissl"
"lab-ml/nn" -> "louisfb01/Best_AI_paper_2020" ["e"=1]
"lab-ml/nn" -> "activeloopai/Hub" ["e"=1]
"lab-ml/nn" -> "lucidrains/DALLE-pytorch" ["e"=1]
"lab-ml/nn" -> "arogozhnikov/einops"
"lab-ml/nn" -> "POSTECH-CVLab/PyTorch-StudioGAN" ["e"=1]
"lab-ml/nn" -> "ebhy/budgetml" ["e"=1]
"extreme-assistant/CVPR2023-Paper-Code-Interpretation" -> "amusi/CVPR2023-Papers-with-Code"
"extreme-assistant/CVPR2023-Paper-Code-Interpretation" -> "amusi/ECCV2022-Papers-with-Code"
"extreme-assistant/CVPR2023-Paper-Code-Interpretation" -> "gbstack/CVPR-2022-papers"
"extreme-assistant/CVPR2023-Paper-Code-Interpretation" -> "extreme-assistant/ICCV2021-Paper-Code-Interpretation"
"extreme-assistant/CVPR2023-Paper-Code-Interpretation" -> "DWCTOD/CVPR2023-Papers-with-Code-Demo"
"extreme-assistant/CVPR2023-Paper-Code-Interpretation" -> "extreme-assistant/ECCV2022-Paper-Code-Interpretation"
"extreme-assistant/CVPR2023-Paper-Code-Interpretation" -> "JierunChen/FasterNet"
"facebookresearch/ConvNeXt" -> "microsoft/Swin-Transformer"
"facebookresearch/ConvNeXt" -> "facebookresearch/mae"
"facebookresearch/ConvNeXt" -> "facebookresearch/deit"
"facebookresearch/ConvNeXt" -> "lucidrains/vit-pytorch"
"facebookresearch/ConvNeXt" -> "rwightman/pytorch-image-models"
"facebookresearch/ConvNeXt" -> "DingXiaoH/RepVGG"
"facebookresearch/ConvNeXt" -> "facebookresearch/detr"
"facebookresearch/ConvNeXt" -> "google-research/vision_transformer"
"facebookresearch/ConvNeXt" -> "facebookresearch/dino"
"facebookresearch/ConvNeXt" -> "open-mmlab/mmsegmentation"
"facebookresearch/ConvNeXt" -> "facebookresearch/moco"
"facebookresearch/ConvNeXt" -> "facebookresearch/ConvNeXt-V2" ["e"=1]
"facebookresearch/ConvNeXt" -> "openai/CLIP"
"facebookresearch/ConvNeXt" -> "Megvii-BaseDetection/YOLOX"
"facebookresearch/ConvNeXt" -> "pengzhiliang/MAE-pytorch"
"xmu-xiaoma666/External-Attention-pytorch" -> "MenghaoGuo/Awesome-Vision-Attentions"
"xmu-xiaoma666/External-Attention-pytorch" -> "lucidrains/vit-pytorch"
"xmu-xiaoma666/External-Attention-pytorch" -> "rwightman/pytorch-image-models"
"xmu-xiaoma666/External-Attention-pytorch" -> "microsoft/Swin-Transformer"
"xmu-xiaoma666/External-Attention-pytorch" -> "jacobgil/pytorch-grad-cam"
"xmu-xiaoma666/External-Attention-pytorch" -> "WZMIAOMIAO/deep-learning-for-image-processing"
"xmu-xiaoma666/External-Attention-pytorch" -> "facebookresearch/ConvNeXt"
"xmu-xiaoma666/External-Attention-pytorch" -> "xmu-xiaoma666/FightingCV-Paper-Reading"
"xmu-xiaoma666/External-Attention-pytorch" -> "amusi/CVPR2021-Papers-with-Code"
"xmu-xiaoma666/External-Attention-pytorch" -> "open-mmlab/mmdetection"
"xmu-xiaoma666/External-Attention-pytorch" -> "mli/paper-reading"
"xmu-xiaoma666/External-Attention-pytorch" -> "dair-ai/ml-visuals"
"xmu-xiaoma666/External-Attention-pytorch" -> "open-mmlab/mmsegmentation"
"xmu-xiaoma666/External-Attention-pytorch" -> "Megvii-BaseDetection/YOLOX"
"xmu-xiaoma666/External-Attention-pytorch" -> "iscyy/yoloair"
"BobLiu20/YOLOv3_PyTorch" -> "DeNA/PyTorch_YOLOv3"
"BobLiu20/YOLOv3_PyTorch" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"BobLiu20/YOLOv3_PyTorch" -> "andy-yun/pytorch-0.4-yolov3"
"BobLiu20/YOLOv3_PyTorch" -> "ayooshkathuria/pytorch-yolo-v3"
"BobLiu20/YOLOv3_PyTorch" -> "eriklindernoren/PyTorch-YOLOv3"
"BobLiu20/YOLOv3_PyTorch" -> "Stinky-Tofu/Stronger-yolo"
"BobLiu20/YOLOv3_PyTorch" -> "ShuangXieIrene/ssds.pytorch"
"BobLiu20/YOLOv3_PyTorch" -> "lzx1413/PytorchSSD"
"BobLiu20/YOLOv3_PyTorch" -> "ayooshkathuria/YOLO_v3_tutorial_from_scratch"
"BobLiu20/YOLOv3_PyTorch" -> "marvis/pytorch-yolo3"
"BobLiu20/YOLOv3_PyTorch" -> "marvis/pytorch-yolo2"
"BobLiu20/YOLOv3_PyTorch" -> "ruinmessi/RFBNet"
"BobLiu20/YOLOv3_PyTorch" -> "longcw/yolo2-pytorch"
"BobLiu20/YOLOv3_PyTorch" -> "princeton-vl/CornerNet"
"BobLiu20/YOLOv3_PyTorch" -> "xiongzihua/pytorch-YOLO-v1" ["e"=1]
"iscyy/yoloair" -> "jizhishutong/YOLOU"
"iscyy/yoloair" -> "WangQvQ/Yolov5_Magic"
"iscyy/yoloair" -> "Gumpest/YOLOv5-Multibackbone-Compression" ["e"=1]
"iscyy/yoloair" -> "open-mmlab/mmyolo"
"iscyy/yoloair" -> "z1069614715/objectdetection_script"
"iscyy/yoloair" -> "meituan/YOLOv6"
"iscyy/yoloair" -> "cv516Buaa/tph-yolov5" ["e"=1]
"iscyy/yoloair" -> "ppogg/YOLOv5-Lite" ["e"=1]
"iscyy/yoloair" -> "positive666/yolov5_research" ["e"=1]
"iscyy/yoloair" -> "jinfagang/yolov7"
"iscyy/yoloair" -> "WongKinYiu/yolov7"
"iscyy/yoloair" -> "Syencil/mobile-yolov5-pruning-distillation" ["e"=1]
"iscyy/yoloair" -> "iscyy/yoloair2"
"iscyy/yoloair" -> "ultralytics/ultralytics"
"iscyy/yoloair" -> "xmu-xiaoma666/External-Attention-pytorch"
"samjabrahams/tensorflow-on-raspberry-pi" -> "lhelontra/tensorflow-on-arm"
"samjabrahams/tensorflow-on-raspberry-pi" -> "DT42/BerryNet"
"samjabrahams/tensorflow-on-raspberry-pi" -> "waveform80/picamera" ["e"=1]
"samjabrahams/tensorflow-on-raspberry-pi" -> "wroscoe/donkey" ["e"=1]
"samjabrahams/tensorflow-on-raspberry-pi" -> "thtrieu/darkflow"
"samjabrahams/tensorflow-on-raspberry-pi" -> "gliese581gg/YOLO_tensorflow"
"samjabrahams/tensorflow-on-raspberry-pi" -> "RyanZotti/Self-Driving-Car" ["e"=1]
"samjabrahams/tensorflow-on-raspberry-pi" -> "wwj718/awesome-raspberry-pi-zh" ["e"=1]
"samjabrahams/tensorflow-on-raspberry-pi" -> "ethereon/caffe-tensorflow"
"samjabrahams/tensorflow-on-raspberry-pi" -> "raspberrypi/documentation" ["e"=1]
"samjabrahams/tensorflow-on-raspberry-pi" -> "movidius/ncsdk" ["e"=1]
"samjabrahams/tensorflow-on-raspberry-pi" -> "DeepScale/SqueezeNet"
"samjabrahams/tensorflow-on-raspberry-pi" -> "Microsoft/ELL"
"samjabrahams/tensorflow-on-raspberry-pi" -> "mcdona1d/RaspberryWechatPi" ["e"=1]
"samjabrahams/tensorflow-on-raspberry-pi" -> "thibmaek/awesome-raspberry-pi" ["e"=1]
"lucidrains/g-mlp-pytorch" -> "jaketae/g-mlp"
"lucidrains/g-mlp-pytorch" -> "lucidrains/mlp-mixer-pytorch"
"lucidrains/g-mlp-pytorch" -> "lucidrains/g-mlp-gpt"
"lucidrains/g-mlp-pytorch" -> "Andrew-Qibin/VisionPermutator"
"MichaelXin/Awesome-Caffe" -> "twtygqyy/caffe-augmentation"
"MichaelXin/Awesome-Caffe" -> "kevinlin311tw/caffe-augmentation"
"MichaelXin/Awesome-Caffe" -> "shicai/DenseNet-Caffe"
"MichaelXin/Awesome-Caffe" -> "shicai/Caffe_Manual"
"MichaelXin/Awesome-Caffe" -> "sciencefans/coco_loss" ["e"=1]
"fchollet/deep-learning-models" -> "fchollet/keras-resources" ["e"=1]
"fchollet/deep-learning-models" -> "allanzelener/YAD2K"
"fchollet/deep-learning-models" -> "fchollet/keras" ["e"=1]
"fchollet/deep-learning-models" -> "KaimingHe/deep-residual-networks"
"fchollet/deep-learning-models" -> "matterport/Mask_RCNN"
"fchollet/deep-learning-models" -> "keras-team/keras-applications"
"fchollet/deep-learning-models" -> "qqwweee/keras-yolo3"
"fchollet/deep-learning-models" -> "rbgirshick/py-faster-rcnn"
"fchollet/deep-learning-models" -> "aleju/imgaug"
"fchollet/deep-learning-models" -> "fizyr/keras-retinanet"
"fchollet/deep-learning-models" -> "eriklindernoren/Keras-GAN" ["e"=1]
"fchollet/deep-learning-models" -> "fchollet/deep-learning-with-python-notebooks" ["e"=1]
"fchollet/deep-learning-models" -> "liuzhuang13/DenseNet"
"fchollet/deep-learning-models" -> "davidsandberg/facenet"
"fchollet/deep-learning-models" -> "kjw0612/awesome-deep-vision" ["e"=1]
"prlz77/ResNeXt.pytorch" -> "facebookresearch/ResNeXt"
"prlz77/ResNeXt.pytorch" -> "miraclewkf/ResNeXt-PyTorch"
"prlz77/ResNeXt.pytorch" -> "clcarwin/convert_torch_to_pytorch"
"prlz77/ResNeXt.pytorch" -> "D-X-Y/ResNeXt-DenseNet"
"prlz77/ResNeXt.pytorch" -> "kuangliu/pytorch-retinanet"
"prlz77/ResNeXt.pytorch" -> "felixgwu/img_classification_pk_pytorch"
"prlz77/ResNeXt.pytorch" -> "oeway/pytorch-deform-conv"
"prlz77/ResNeXt.pytorch" -> "gpleiss/efficient_densenet_pytorch"
"prlz77/ResNeXt.pytorch" -> "isht7/pytorch-deeplab-resnet" ["e"=1]
"prlz77/ResNeXt.pytorch" -> "bearpaw/pytorch-classification"
"prlz77/ResNeXt.pytorch" -> "longcw/faster_rcnn_pytorch"
"prlz77/ResNeXt.pytorch" -> "andreasveit/densenet-pytorch"
"prlz77/ResNeXt.pytorch" -> "ShichenLiu/CondenseNet"
"prlz77/ResNeXt.pytorch" -> "rwightman/pytorch-dpn-pretrained" ["e"=1]
"prlz77/ResNeXt.pytorch" -> "moskomule/senet.pytorch" ["e"=1]
"wenxinxu/resnet-in-tensorflow" -> "ry/tensorflow-resnet"
"wenxinxu/resnet-in-tensorflow" -> "DrSleep/tensorflow-deeplab-resnet" ["e"=1]
"wenxinxu/resnet-in-tensorflow" -> "YixuanLi/densenet-tensorflow"
"wenxinxu/resnet-in-tensorflow" -> "taki0112/Densenet-Tensorflow"
"wenxinxu/resnet-in-tensorflow" -> "ppwwyyxx/tensorpack"
"wenxinxu/resnet-in-tensorflow" -> "machrisaa/tensorflow-vgg"
"wenxinxu/resnet-in-tensorflow" -> "kratzert/finetune_alexnet_with_tensorflow"
"wenxinxu/resnet-in-tensorflow" -> "raghakot/keras-resnet"
"wenxinxu/resnet-in-tensorflow" -> "liuzhuang13/DenseNet"
"wenxinxu/resnet-in-tensorflow" -> "taki0112/SENet-Tensorflow"
"wenxinxu/resnet-in-tensorflow" -> "arashno/tensorflow_multigpu_imagenet"
"wenxinxu/resnet-in-tensorflow" -> "endernewton/tf-faster-rcnn"
"wenxinxu/resnet-in-tensorflow" -> "facebook/fb.resnet.torch"
"wenxinxu/resnet-in-tensorflow" -> "smallcorgi/Faster-RCNN_TF"
"wenxinxu/resnet-in-tensorflow" -> "KaimingHe/deep-residual-networks"
"ycszen/TensorFlowLaboratory" -> "kevin28520/My-TensorFlow-tutorials"
"ycszen/TensorFlowLaboratory" -> "taki0112/ResNeXt-Tensorflow"
"Lightning-AI/lightning" -> "wandb/wandb" ["e"=1]
"Lightning-AI/lightning" -> "ashleve/lightning-hydra-template"
"Lightning-AI/lightning" -> "huggingface/diffusers" ["e"=1]
"Lightning-AI/lightning" -> "gradio-app/gradio" ["e"=1]
"Lightning-AI/lightning" -> "huggingface/accelerate" ["e"=1]
"Lightning-AI/lightning" -> "google/jax" ["e"=1]
"Lightning-AI/lightning" -> "huggingface/peft" ["e"=1]
"Lightning-AI/lightning" -> "mlfoundations/open_clip" ["e"=1]
"Lightning-AI/lightning" -> "rwightman/pytorch-image-models"
"Lightning-AI/lightning" -> "openai/CLIP"
"Lightning-AI/lightning" -> "arogozhnikov/einops"
"Lightning-AI/lightning" -> "lucidrains/imagen-pytorch" ["e"=1]
"Lightning-AI/lightning" -> "miracleyoo/pytorch-lightning-template" ["e"=1]
"Lightning-AI/lightning" -> "pyg-team/pytorch_geometric" ["e"=1]
"Lightning-AI/lightning" -> "Lightning-AI/metrics" ["e"=1]
"horovod/horovod" -> "bytedance/byteps" ["e"=1]
"horovod/horovod" -> "NVIDIA/apex"
"horovod/horovod" -> "ray-project/ray" ["e"=1]
"horovod/horovod" -> "kubeflow/kubeflow" ["e"=1]
"horovod/horovod" -> "facebookresearch/faiss" ["e"=1]
"horovod/horovod" -> "mlflow/mlflow" ["e"=1]
"horovod/horovod" -> "google/jax" ["e"=1]
"horovod/horovod" -> "onnx/onnx"
"horovod/horovod" -> "NVIDIA/DALI"
"horovod/horovod" -> "microsoft/nni" ["e"=1]
"horovod/horovod" -> "NVIDIA/Megatron-LM" ["e"=1]
"horovod/horovod" -> "lutzroeder/netron"
"horovod/horovod" -> "NVIDIA/DeepLearningExamples"
"horovod/horovod" -> "NVIDIA/TensorRT"
"horovod/horovod" -> "pytorch/fairseq" ["e"=1]
"cocodataset/cocoapi" -> "facebookresearch/maskrcnn-benchmark"
"cocodataset/cocoapi" -> "xingyizhou/CenterNet"
"cocodataset/cocoapi" -> "jwyang/faster-rcnn.pytorch"
"cocodataset/cocoapi" -> "open-mmlab/mmdetection"
"cocodataset/cocoapi" -> "rbgirshick/py-faster-rcnn"
"cocodataset/cocoapi" -> "facebookresearch/detectron2"
"cocodataset/cocoapi" -> "tianzhi0549/FCOS"
"cocodataset/cocoapi" -> "eriklindernoren/PyTorch-YOLOv3"
"cocodataset/cocoapi" -> "facebookresearch/Detectron"
"cocodataset/cocoapi" -> "open-mmlab/mmcv"
"cocodataset/cocoapi" -> "wkentaro/labelme"
"cocodataset/cocoapi" -> "amdegroot/ssd.pytorch"
"cocodataset/cocoapi" -> "rafaelpadilla/Object-Detection-Metrics"
"cocodataset/cocoapi" -> "amusi/awesome-object-detection"
"cocodataset/cocoapi" -> "matterport/Mask_RCNN"
"lakshayg/tensorflow-build" -> "mind/wheels"
"lakshayg/tensorflow-build" -> "fo40225/tensorflow-windows-wheel"
"lakshayg/tensorflow-build" -> "yaroslavvb/tensorflow-community-wheels"
"lakshayg/tensorflow-build" -> "amir-abdi/keras_to_tensorflow"
"lakshayg/tensorflow-build" -> "plaidml/plaidml" ["e"=1]
"lakshayg/tensorflow-build" -> "eragonruan/text-detection-ctpn" ["e"=1]
"lakshayg/tensorflow-build" -> "tensorflow/serving" ["e"=1]
"lakshayg/tensorflow-build" -> "tensorflow/nmt" ["e"=1]
"lakshayg/tensorflow-build" -> "raghakot/keras-vis" ["e"=1]
"lakshayg/tensorflow-build" -> "ysh329/deep-learning-model-convertor"
"lakshayg/tensorflow-build" -> "tensorpack/tensorpack"
"lakshayg/tensorflow-build" -> "tensorlayer/tensorlayer" ["e"=1]
"lakshayg/tensorflow-build" -> "philipperemy/keras-attention-mechanism" ["e"=1]
"lakshayg/tensorflow-build" -> "intel/mkl-dnn" ["e"=1]
"lakshayg/tensorflow-build" -> "pierluigiferrari/ssd_keras"
"Epiphqny/VisTR" -> "youtubevos/MaskTrackRCNN" ["e"=1]
"Epiphqny/VisTR" -> "seoungwugoh/STM" ["e"=1]
"Epiphqny/VisTR" -> "wjf5203/VNext" ["e"=1]
"Epiphqny/VisTR" -> "hustvl/QueryInst"
"Epiphqny/VisTR" -> "z-x-yang/CFBI" ["e"=1]
"Epiphqny/VisTR" -> "facebookresearch/Mask2Former"
"Epiphqny/VisTR" -> "fundamentalvision/Deformable-DETR"
"Epiphqny/VisTR" -> "facebookresearch/MaskFormer"
"Epiphqny/VisTR" -> "wjf5203/SeqFormer" ["e"=1]
"Epiphqny/VisTR" -> "youtubevos/cocoapi" ["e"=1]
"Epiphqny/VisTR" -> "JialeCao001/SipMask" ["e"=1]
"Epiphqny/VisTR" -> "hkchengrex/STCN" ["e"=1]
"Epiphqny/VisTR" -> "fudan-zvg/SETR"
"Epiphqny/VisTR" -> "sabarim/STEm-Seg" ["e"=1]
"Epiphqny/VisTR" -> "wjn922/ReferFormer" ["e"=1]
"Megvii-BaseDetection/YOLOX" -> "WongKinYiu/yolov7"
"Megvii-BaseDetection/YOLOX" -> "wang-xinyu/tensorrtx"
"Megvii-BaseDetection/YOLOX" -> "meituan/YOLOv6"
"Megvii-BaseDetection/YOLOX" -> "RangiLyu/nanodet"
"Megvii-BaseDetection/YOLOX" -> "ultralytics/yolov5"
"Megvii-BaseDetection/YOLOX" -> "open-mmlab/mmdetection"
"Megvii-BaseDetection/YOLOX" -> "microsoft/Swin-Transformer"
"Megvii-BaseDetection/YOLOX" -> "Tianxiaomo/pytorch-YOLOv4"
"Megvii-BaseDetection/YOLOX" -> "xingyizhou/CenterNet"
"Megvii-BaseDetection/YOLOX" -> "ultralytics/yolov3"
"Megvii-BaseDetection/YOLOX" -> "PaddlePaddle/PaddleDetection"
"Megvii-BaseDetection/YOLOX" -> "jinfagang/yolov7"
"Megvii-BaseDetection/YOLOX" -> "facebookresearch/detr"
"Megvii-BaseDetection/YOLOX" -> "ifzhang/ByteTrack" ["e"=1]
"Megvii-BaseDetection/YOLOX" -> "WongKinYiu/yolor"
"Tianxiaomo/pytorch-YOLOv4" -> "WongKinYiu/PyTorch_YOLOv4"
"Tianxiaomo/pytorch-YOLOv4" -> "ultralytics/yolov3"
"Tianxiaomo/pytorch-YOLOv4" -> "WongKinYiu/ScaledYOLOv4"
"Tianxiaomo/pytorch-YOLOv4" -> "wang-xinyu/tensorrtx"
"Tianxiaomo/pytorch-YOLOv4" -> "bubbliiiing/yolov4-pytorch" ["e"=1]
"Tianxiaomo/pytorch-YOLOv4" -> "eriklindernoren/PyTorch-YOLOv3"
"Tianxiaomo/pytorch-YOLOv4" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"Tianxiaomo/pytorch-YOLOv4" -> "Megvii-BaseDetection/YOLOX"
"Tianxiaomo/pytorch-YOLOv4" -> "hunglc007/tensorflow-yolov4-tflite"
"Tianxiaomo/pytorch-YOLOv4" -> "xingyizhou/CenterNet"
"Tianxiaomo/pytorch-YOLOv4" -> "AlexeyAB/darknet"
"Tianxiaomo/pytorch-YOLOv4" -> "RangiLyu/nanodet"
"Tianxiaomo/pytorch-YOLOv4" -> "NVIDIA-AI-IOT/torch2trt"
"Tianxiaomo/pytorch-YOLOv4" -> "lukemelas/EfficientNet-PyTorch"
"Tianxiaomo/pytorch-YOLOv4" -> "ultralytics/yolov5"
"WongKinYiu/PyTorch_YOLOv4" -> "Tianxiaomo/pytorch-YOLOv4"
"WongKinYiu/PyTorch_YOLOv4" -> "WongKinYiu/ScaledYOLOv4"
"WongKinYiu/PyTorch_YOLOv4" -> "argusswift/YOLOv4-pytorch" ["e"=1]
"WongKinYiu/PyTorch_YOLOv4" -> "bubbliiiing/yolov4-pytorch" ["e"=1]
"WongKinYiu/PyTorch_YOLOv4" -> "ultralytics/yolov3"
"WongKinYiu/PyTorch_YOLOv4" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"WongKinYiu/PyTorch_YOLOv4" -> "WongKinYiu/CrossStagePartialNetworks"
"WongKinYiu/PyTorch_YOLOv4" -> "WongKinYiu/yolor"
"WongKinYiu/PyTorch_YOLOv4" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"WongKinYiu/PyTorch_YOLOv4" -> "wang-xinyu/tensorrtx"
"WongKinYiu/PyTorch_YOLOv4" -> "RangiLyu/nanodet"
"WongKinYiu/PyTorch_YOLOv4" -> "dog-qiuqiu/Yolo-Fastest"
"WongKinYiu/PyTorch_YOLOv4" -> "ruinmessi/ASFF"
"WongKinYiu/PyTorch_YOLOv4" -> "Megvii-BaseDetection/YOLOX"
"WongKinYiu/PyTorch_YOLOv4" -> "tianzhi0549/FCOS"
"deepcam-cn/yolov5-face" -> "derronqi/yolov7-face" ["e"=1]
"deepcam-cn/yolov5-face" -> "biubug6/Pytorch_Retinaface" ["e"=1]
"deepcam-cn/yolov5-face" -> "xialuxi/yolov5_face_landmark" ["e"=1]
"deepcam-cn/yolov5-face" -> "biubug6/Face-Detector-1MB-with-landmark" ["e"=1]
"deepcam-cn/yolov5-face" -> "jinfagang/yolov7"
"deepcam-cn/yolov5-face" -> "DefTruth/lite.ai.toolkit"
"deepcam-cn/yolov5-face" -> "polarisZhao/PFLD-pytorch" ["e"=1]
"deepcam-cn/yolov5-face" -> "JDAI-CV/FaceX-Zoo" ["e"=1]
"deepcam-cn/yolov5-face" -> "wang-xinyu/tensorrtx"
"deepcam-cn/yolov5-face" -> "RangiLyu/nanodet"
"deepcam-cn/yolov5-face" -> "hanson-young/nniefacelib" ["e"=1]
"deepcam-cn/yolov5-face" -> "Tencent/TFace" ["e"=1]
"deepcam-cn/yolov5-face" -> "meituan/YOLOv6"
"deepcam-cn/yolov5-face" -> "minivision-ai/Silent-Face-Anti-Spoofing" ["e"=1]
"deepcam-cn/yolov5-face" -> "jizhishutong/YOLOU"
"timesler/facenet-pytorch" -> "TreB1eN/InsightFace_Pytorch" ["e"=1]
"timesler/facenet-pytorch" -> "ronghuaiyang/arcface-pytorch" ["e"=1]
"timesler/facenet-pytorch" -> "deepinsight/insightface"
"timesler/facenet-pytorch" -> "biubug6/Pytorch_Retinaface" ["e"=1]
"timesler/facenet-pytorch" -> "ZhaoJ9014/face.evoLVe.PyTorch" ["e"=1]
"timesler/facenet-pytorch" -> "ipazc/mtcnn"
"timesler/facenet-pytorch" -> "davidsandberg/facenet"
"timesler/facenet-pytorch" -> "ChanChiChoi/awesome-Face_Recognition"
"timesler/facenet-pytorch" -> "serengil/deepface"
"timesler/facenet-pytorch" -> "JDAI-CV/FaceX-Zoo" ["e"=1]
"timesler/facenet-pytorch" -> "TropComplique/mtcnn-pytorch" ["e"=1]
"timesler/facenet-pytorch" -> "zllrunning/face-parsing.PyTorch" ["e"=1]
"timesler/facenet-pytorch" -> "lukemelas/EfficientNet-PyTorch"
"timesler/facenet-pytorch" -> "1adrianb/face-alignment" ["e"=1]
"timesler/facenet-pytorch" -> "ZhaoJ9014/face.evoLVe" ["e"=1]
"PaddlePaddle/docs" -> "PaddlePaddle/community"
"wkentaro/pytorch-for-numpy-users" -> "smilli/research-advice" ["e"=1]
"wkentaro/pytorch-for-numpy-users" -> "Kaixhin/grokking-pytorch"
"wkentaro/pytorch-for-numpy-users" -> "lanpa/tensorboard-pytorch"
"wkentaro/pytorch-for-numpy-users" -> "CVBox/PyTorchCV"
"wkentaro/pytorch-for-numpy-users" -> "ncullen93/torchsample"
"wkentaro/pytorch-for-numpy-users" -> "ansleliu/LightNet" ["e"=1]
"KaimingHe/deep-residual-networks" -> "rbgirshick/py-faster-rcnn"
"KaimingHe/deep-residual-networks" -> "facebook/fb.resnet.torch"
"KaimingHe/deep-residual-networks" -> "liuzhuang13/DenseNet"
"KaimingHe/deep-residual-networks" -> "weiliu89/caffe"
"KaimingHe/deep-residual-networks" -> "rbgirshick/fast-rcnn"
"KaimingHe/deep-residual-networks" -> "ShaoqingRen/faster_rcnn"
"KaimingHe/deep-residual-networks" -> "shelhamer/fcn.berkeleyvision.org"
"KaimingHe/deep-residual-networks" -> "ry/tensorflow-resnet"
"KaimingHe/deep-residual-networks" -> "caffe2/caffe2" ["e"=1]
"KaimingHe/deep-residual-networks" -> "ethereon/caffe-tensorflow"
"KaimingHe/deep-residual-networks" -> "rbgirshick/rcnn"
"KaimingHe/deep-residual-networks" -> "kjw0612/awesome-deep-vision" ["e"=1]
"KaimingHe/deep-residual-networks" -> "KaimingHe/resnet-1k-layers"
"KaimingHe/deep-residual-networks" -> "msracver/Deformable-ConvNets"
"KaimingHe/deep-residual-networks" -> "facebookresearch/Detectron"
"extreme-assistant/cvpr2019" -> "extreme-assistant/iccv2019"
"extreme-assistant/cvpr2019" -> "amusi/awesome-object-detection"
"extreme-assistant/cvpr2019" -> "amusi/daily-paper-computer-vision"
"extreme-assistant/cvpr2019" -> "leoxiaobin/deep-high-resolution-net.pytorch" ["e"=1]
"extreme-assistant/cvpr2019" -> "msracver/Deformable-ConvNets"
"extreme-assistant/cvpr2019" -> "zjhuang22/maskscoring_rcnn"
"extreme-assistant/cvpr2019" -> "foolwood/SiamMask" ["e"=1]
"extreme-assistant/cvpr2019" -> "junfu1115/DANet" ["e"=1]
"extreme-assistant/cvpr2019" -> "facebookresearch/maskrcnn-benchmark"
"extreme-assistant/cvpr2019" -> "hoya012/deep_learning_object_detection"
"extreme-assistant/cvpr2019" -> "xingyizhou/CenterNet"
"extreme-assistant/cvpr2019" -> "tianzhi0549/FCOS"
"extreme-assistant/cvpr2019" -> "jwyang/faster-rcnn.pytorch"
"extreme-assistant/cvpr2019" -> "mrgloom/awesome-semantic-segmentation"
"extreme-assistant/cvpr2019" -> "dmlc/gluon-cv"
"qfgaohao/pytorch-ssd" -> "lufficc/SSD"
"qfgaohao/pytorch-ssd" -> "ShuangXieIrene/ssds.pytorch"
"qfgaohao/pytorch-ssd" -> "amdegroot/ssd.pytorch"
"qfgaohao/pytorch-ssd" -> "lzx1413/PytorchSSD"
"qfgaohao/pytorch-ssd" -> "chuanqi305/MobileNet-SSD"
"qfgaohao/pytorch-ssd" -> "shaoshengsong/MobileNetV3-SSD"
"qfgaohao/pytorch-ssd" -> "ruinmessi/RFBNet"
"qfgaohao/pytorch-ssd" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"qfgaohao/pytorch-ssd" -> "sgrvinod/a-PyTorch-Tutorial-to-Object-Detection"
"qfgaohao/pytorch-ssd" -> "tianzhi0549/FCOS"
"qfgaohao/pytorch-ssd" -> "Duankaiwen/CenterNet"
"qfgaohao/pytorch-ssd" -> "chuanqi305/MobileNetv2-SSDLite"
"qfgaohao/pytorch-ssd" -> "Robert-JunWang/Pelee"
"qfgaohao/pytorch-ssd" -> "qijiezhao/M2Det"
"qfgaohao/pytorch-ssd" -> "princeton-vl/CornerNet"
"justimyhxu/Dense-RepPoints" -> "Scalsol/RepPointsV2"
"microsoft/RepPoints" -> "Scalsol/RepPointsV2"
"microsoft/RepPoints" -> "zhangxiaosong18/FreeAnchor"
"microsoft/RepPoints" -> "sfzhang15/ATSS"
"microsoft/RepPoints" -> "justimyhxu/Dense-RepPoints"
"microsoft/RepPoints" -> "xingyizhou/ExtremeNet"
"microsoft/RepPoints" -> "OceanPang/Libra_R-CNN"
"microsoft/RepPoints" -> "vacancy/PreciseRoIPooling"
"microsoft/RepPoints" -> "Megvii-BaseDetection/BorderDet"
"microsoft/RepPoints" -> "ZJULearning/ttfnet"
"microsoft/RepPoints" -> "tianzhi0549/FCOS"
"microsoft/RepPoints" -> "xieenze/PolarMask"
"microsoft/RepPoints" -> "FateScript/CenterNet-better"
"microsoft/RepPoints" -> "taokong/FoveaBox"
"microsoft/RepPoints" -> "Duankaiwen/CenterNet"
"microsoft/RepPoints" -> "aim-uofa/adet"
"whai362/PVT" -> "yitu-opensource/T2T-ViT"
"whai362/PVT" -> "facebookresearch/deit"
"whai362/PVT" -> "Meituan-AutoML/Twins"
"whai362/PVT" -> "fundamentalvision/Deformable-DETR"
"whai362/PVT" -> "facebookresearch/MaskFormer"
"whai362/PVT" -> "NVlabs/SegFormer"
"whai362/PVT" -> "PeizeSun/SparseR-CNN"
"whai362/PVT" -> "fudan-zvg/SETR"
"whai362/PVT" -> "microsoft/Swin-Transformer"
"whai362/PVT" -> "d-li14/involution"
"whai362/PVT" -> "microsoft/CSWin-Transformer"
"whai362/PVT" -> "dk-liang/Awesome-Visual-Transformer"
"whai362/PVT" -> "facebookresearch/Mask2Former"
"whai362/PVT" -> "facebookresearch/ConvNeXt"
"whai362/PVT" -> "SwinTransformer/Swin-Transformer-Object-Detection"
"xieenze/PolarMask" -> "zju3dv/snake"
"xieenze/PolarMask" -> "youngwanLEE/CenterMask"
"xieenze/PolarMask" -> "WXinlong/SOLO"
"xieenze/PolarMask" -> "tianzhi0549/FCOS"
"xieenze/PolarMask" -> "aim-uofa/AdelaiDet"
"xieenze/PolarMask" -> "sfzhang15/ATSS"
"xieenze/PolarMask" -> "zjhuang22/maskscoring_rcnn"
"xieenze/PolarMask" -> "uber-research/UPSNet" ["e"=1]
"xieenze/PolarMask" -> "youngwanLEE/centermask2"
"xieenze/PolarMask" -> "Epiphqny/SOLO"
"xieenze/PolarMask" -> "microsoft/RepPoints"
"xieenze/PolarMask" -> "ShuLiu1993/PANet"
"xieenze/PolarMask" -> "dbolya/yolact"
"xieenze/PolarMask" -> "Duankaiwen/CenterNet"
"xieenze/PolarMask" -> "zhangxiaosong18/FreeAnchor"
"xingyizhou/CenterNet" -> "Duankaiwen/CenterNet"
"xingyizhou/CenterNet" -> "tianzhi0549/FCOS"
"xingyizhou/CenterNet" -> "princeton-vl/CornerNet"
"xingyizhou/CenterNet" -> "open-mmlab/mmdetection"
"xingyizhou/CenterNet" -> "xingyizhou/CenterTrack" ["e"=1]
"xingyizhou/CenterNet" -> "princeton-vl/CornerNet-Lite"
"xingyizhou/CenterNet" -> "facebookresearch/maskrcnn-benchmark"
"xingyizhou/CenterNet" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"xingyizhou/CenterNet" -> "lukemelas/EfficientNet-PyTorch"
"xingyizhou/CenterNet" -> "ultralytics/yolov3"
"xingyizhou/CenterNet" -> "eriklindernoren/PyTorch-YOLOv3"
"xingyizhou/CenterNet" -> "TuSimple/simpledet"
"xingyizhou/CenterNet" -> "facebookresearch/detr"
"xingyizhou/CenterNet" -> "ifzhang/FairMOT" ["e"=1]
"xingyizhou/CenterNet" -> "leoxiaobin/deep-high-resolution-net.pytorch" ["e"=1]
"amusi/ECCV2022-Papers-with-Code" -> "amusi/CVPR2022-Papers-with-Code"
"amusi/ECCV2022-Papers-with-Code" -> "extreme-assistant/ECCV2022-Paper-Code-Interpretation"
"amusi/ECCV2022-Papers-with-Code" -> "amusi/ICCV2021-Papers-with-Code"
"amusi/ECCV2022-Papers-with-Code" -> "extreme-assistant/ICCV2021-Paper-Code-Interpretation"
"amusi/ECCV2022-Papers-with-Code" -> "DWCTOD/ECCV2022-Papers-with-Code-Demo"
"amusi/ECCV2022-Papers-with-Code" -> "extreme-assistant/CVPR2022-Paper-Code-Interpretation"
"amusi/ECCV2022-Papers-with-Code" -> "raoyongming/HorNet" ["e"=1]
"amusi/ECCV2022-Papers-with-Code" -> "extreme-assistant/CVPR2023-Paper-Code-Interpretation"
"amusi/ECCV2022-Papers-with-Code" -> "gbstack/CVPR-2022-papers"
"amusi/ECCV2022-Papers-with-Code" -> "amusi/CVPR2023-Papers-with-Code"
"xiaohu2015/DeepLearning_tutorials" -> "gliese581gg/YOLO_tensorflow"
"xiaohu2015/DeepLearning_tutorials" -> "balancap/SSD-Tensorflow"
"xiaohu2015/DeepLearning_tutorials" -> "hizhangp/yolo_tensorflow"
"xiaohu2015/DeepLearning_tutorials" -> "yhcc/yolo2"
"xiaohu2015/DeepLearning_tutorials" -> "qqwweee/keras-yolo3"
"xiaohu2015/DeepLearning_tutorials" -> "amusi/awesome-object-detection"
"xiaohu2015/DeepLearning_tutorials" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"xiaohu2015/DeepLearning_tutorials" -> "YunYang1994/tensorflow-yolov3"
"xiaohu2015/DeepLearning_tutorials" -> "endernewton/tf-faster-rcnn"
"xiaohu2015/DeepLearning_tutorials" -> "wizyoung/YOLOv3_TensorFlow"
"xiaohu2015/DeepLearning_tutorials" -> "amdegroot/ssd.pytorch"
"xiaohu2015/DeepLearning_tutorials" -> "ayooshkathuria/YOLO_v3_tutorial_from_scratch"
"xiaohu2015/DeepLearning_tutorials" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"xiaohu2015/DeepLearning_tutorials" -> "hoya012/deep_learning_object_detection"
"xiaohu2015/DeepLearning_tutorials" -> "smallcorgi/Faster-RCNN_TF"
"NVIDIA/TensorRT" -> "onnx/onnx-tensorrt"
"NVIDIA/TensorRT" -> "wang-xinyu/tensorrtx"
"NVIDIA/TensorRT" -> "NVIDIA-AI-IOT/torch2trt"
"NVIDIA/TensorRT" -> "daquexian/onnx-simplifier"
"NVIDIA/TensorRT" -> "onnx/onnx"
"NVIDIA/TensorRT" -> "microsoft/onnxruntime"
"NVIDIA/TensorRT" -> "alibaba/MNN"
"NVIDIA/TensorRT" -> "triton-inference-server/server"
"NVIDIA/TensorRT" -> "Tencent/ncnn"
"NVIDIA/TensorRT" -> "dusty-nv/jetson-inference" ["e"=1]
"NVIDIA/TensorRT" -> "lutzroeder/netron"
"NVIDIA/TensorRT" -> "NVIDIA/apex"
"NVIDIA/TensorRT" -> "xingyizhou/CenterNet"
"NVIDIA/TensorRT" -> "NVIDIA/DALI"
"NVIDIA/TensorRT" -> "NVIDIA/DeepLearningExamples"
"longcw/yolo2-pytorch" -> "marvis/pytorch-yolo2"
"longcw/yolo2-pytorch" -> "longcw/faster_rcnn_pytorch"
"longcw/yolo2-pytorch" -> "amdegroot/ssd.pytorch"
"longcw/yolo2-pytorch" -> "ruotianluo/pytorch-faster-rcnn"
"longcw/yolo2-pytorch" -> "ayooshkathuria/pytorch-yolo-v3"
"longcw/yolo2-pytorch" -> "kuangliu/pytorch-retinanet"
"longcw/yolo2-pytorch" -> "roytseng-tw/Detectron.pytorch"
"longcw/yolo2-pytorch" -> "marvis/pytorch-yolo3"
"longcw/yolo2-pytorch" -> "ruiminshen/yolo2-pytorch"
"longcw/yolo2-pytorch" -> "lanpa/tensorboard-pytorch"
"longcw/yolo2-pytorch" -> "jwyang/faster-rcnn.pytorch"
"longcw/yolo2-pytorch" -> "msracver/Deformable-ConvNets"
"longcw/yolo2-pytorch" -> "marvis/pytorch-caffe-darknet-convert"
"longcw/yolo2-pytorch" -> "ayooshkathuria/YOLO_v3_tutorial_from_scratch"
"longcw/yolo2-pytorch" -> "eriklindernoren/PyTorch-YOLOv3"
"NVIDIA/DeepLearningExamples" -> "NVIDIA/TensorRT"
"NVIDIA/DeepLearningExamples" -> "pytorch/fairseq" ["e"=1]
"NVIDIA/DeepLearningExamples" -> "NVIDIA/apex"
"NVIDIA/DeepLearningExamples" -> "NVIDIA/NeMo" ["e"=1]
"NVIDIA/DeepLearningExamples" -> "NVIDIA/Megatron-LM" ["e"=1]
"NVIDIA/DeepLearningExamples" -> "rwightman/pytorch-image-models"
"NVIDIA/DeepLearningExamples" -> "horovod/horovod"
"NVIDIA/DeepLearningExamples" -> "NVIDIA/DALI"
"NVIDIA/DeepLearningExamples" -> "lutzroeder/netron"
"NVIDIA/DeepLearningExamples" -> "google-research/google-research" ["e"=1]
"NVIDIA/DeepLearningExamples" -> "google/jax" ["e"=1]
"NVIDIA/DeepLearningExamples" -> "NVIDIA/nvidia-docker"
"NVIDIA/DeepLearningExamples" -> "espnet/espnet" ["e"=1]
"NVIDIA/DeepLearningExamples" -> "PyTorchLightning/pytorch-lightning"
"NVIDIA/DeepLearningExamples" -> "microsoft/DeepSpeed" ["e"=1]
"andreasveit/densenet-pytorch" -> "bamos/densenet.pytorch"
"andreasveit/densenet-pytorch" -> "gpleiss/efficient_densenet_pytorch"
"andreasveit/densenet-pytorch" -> "lizhengwei1992/ResidualDenseNetwork-Pytorch" ["e"=1]
"andreasveit/densenet-pytorch" -> "prlz77/ResNeXt.pytorch"
"andreasveit/densenet-pytorch" -> "ShichenLiu/CondenseNet"
"andreasveit/densenet-pytorch" -> "xternalz/WideResNet-pytorch"
"andreasveit/densenet-pytorch" -> "felixgwu/img_classification_pk_pytorch"
"andreasveit/densenet-pytorch" -> "liuzhuang13/DenseNet"
"andreasveit/densenet-pytorch" -> "meliketoy/wide-resnet.pytorch"
"andreasveit/densenet-pytorch" -> "taki0112/Densenet-Tensorflow"
"andreasveit/densenet-pytorch" -> "dyhan0920/PyramidNet-PyTorch" ["e"=1]
"facebookresearch/maskrcnn-benchmark" -> "jwyang/faster-rcnn.pytorch"
"facebookresearch/maskrcnn-benchmark" -> "open-mmlab/mmdetection"
"facebookresearch/maskrcnn-benchmark" -> "facebookresearch/detectron2"
"facebookresearch/maskrcnn-benchmark" -> "facebookresearch/Detectron"
"facebookresearch/maskrcnn-benchmark" -> "xingyizhou/CenterNet"
"facebookresearch/maskrcnn-benchmark" -> "matterport/Mask_RCNN"
"facebookresearch/maskrcnn-benchmark" -> "roytseng-tw/Detectron.pytorch"
"facebookresearch/maskrcnn-benchmark" -> "tianzhi0549/FCOS"
"facebookresearch/maskrcnn-benchmark" -> "Cadene/pretrained-models.pytorch"
"facebookresearch/maskrcnn-benchmark" -> "eriklindernoren/PyTorch-YOLOv3"
"facebookresearch/maskrcnn-benchmark" -> "hoya012/deep_learning_object_detection"
"facebookresearch/maskrcnn-benchmark" -> "amdegroot/ssd.pytorch"
"facebookresearch/maskrcnn-benchmark" -> "amusi/awesome-object-detection"
"facebookresearch/maskrcnn-benchmark" -> "multimodallearning/pytorch-mask-rcnn"
"facebookresearch/maskrcnn-benchmark" -> "zjhuang22/maskscoring_rcnn"
"gpleiss/efficient_densenet_pytorch" -> "bamos/densenet.pytorch"
"gpleiss/efficient_densenet_pytorch" -> "liuzhuang13/DenseNet"
"gpleiss/efficient_densenet_pytorch" -> "andreasveit/densenet-pytorch"
"gpleiss/efficient_densenet_pytorch" -> "lanpa/tensorboard-pytorch"
"gpleiss/efficient_densenet_pytorch" -> "longcw/faster_rcnn_pytorch"
"gpleiss/efficient_densenet_pytorch" -> "ShichenLiu/CondenseNet"
"gpleiss/efficient_densenet_pytorch" -> "kuangliu/pytorch-retinanet"
"gpleiss/efficient_densenet_pytorch" -> "mapillary/inplace_abn" ["e"=1]
"gpleiss/efficient_densenet_pytorch" -> "szagoruyko/attention-transfer" ["e"=1]
"gpleiss/efficient_densenet_pytorch" -> "meetshah1995/pytorch-semseg" ["e"=1]
"gpleiss/efficient_densenet_pytorch" -> "msracver/Deformable-ConvNets"
"gpleiss/efficient_densenet_pytorch" -> "moskomule/senet.pytorch" ["e"=1]
"gpleiss/efficient_densenet_pytorch" -> "oeway/pytorch-deform-conv"
"gpleiss/efficient_densenet_pytorch" -> "gaohuang/MSDNet"
"gpleiss/efficient_densenet_pytorch" -> "hujie-frank/SENet"
"onnx/tutorials" -> "onnx/onnx"
"onnx/tutorials" -> "onnx/models"
"onnx/tutorials" -> "onnx/onnx-tensorrt"
"onnx/tutorials" -> "onnx/tensorflow-onnx"
"onnx/tutorials" -> "daquexian/onnx-simplifier"
"onnx/tutorials" -> "NVIDIA/TensorRT"
"onnx/tutorials" -> "microsoft/onnxruntime"
"onnx/tutorials" -> "onnx/onnx-tensorflow"
"onnx/tutorials" -> "NVIDIA-AI-IOT/torch2trt"
"onnx/tutorials" -> "lutzroeder/netron"
"onnx/tutorials" -> "ysh329/deep-learning-model-convertor"
"onnx/tutorials" -> "Microsoft/MMdnn"
"onnx/tutorials" -> "onnx/onnxmltools"
"onnx/tutorials" -> "NervanaSystems/distiller" ["e"=1]
"onnx/tutorials" -> "alibaba/MNN"
"qubvel/segmentation_models" -> "divamgupta/image-segmentation-keras" ["e"=1]
"qubvel/segmentation_models" -> "qubvel/segmentation_models.pytorch"
"qubvel/segmentation_models" -> "qubvel/classification_models"
"qubvel/segmentation_models" -> "mrgloom/awesome-semantic-segmentation"
"qubvel/segmentation_models" -> "zhixuhao/unet" ["e"=1]
"qubvel/segmentation_models" -> "albu/albumentations"
"qubvel/segmentation_models" -> "qubvel/efficientnet"
"qubvel/segmentation_models" -> "bonlime/keras-deeplab-v3-plus" ["e"=1]
"qubvel/segmentation_models" -> "MrGiovanni/UNetPlusPlus" ["e"=1]
"qubvel/segmentation_models" -> "JunMa11/SegLoss" ["e"=1]
"qubvel/segmentation_models" -> "albumentations-team/albumentations"
"qubvel/segmentation_models" -> "fizyr/keras-retinanet"
"qubvel/segmentation_models" -> "aleju/imgaug"
"qubvel/segmentation_models" -> "GeorgeSeif/Semantic-Segmentation-Suite" ["e"=1]
"qubvel/segmentation_models" -> "milesial/Pytorch-UNet" ["e"=1]
"ronghanghu/seg_every_thing" -> "skrish13/PyTorch-mask-x-rcnn"
"ronghanghu/seg_every_thing" -> "kevin-ssy/FishNet"
"ronghanghu/seg_every_thing" -> "vacancy/PreciseRoIPooling"
"scaelles/DEXTR-PyTorch" -> "scaelles/DEXTR-KerasTensorflow"
"scaelles/DEXTR-PyTorch" -> "xingyizhou/ExtremeNet"
"scaelles/DEXTR-PyTorch" -> "fidler-lab/polyrnn-pp-pytorch"
"scaelles/DEXTR-PyTorch" -> "fidler-lab/curve-gcn"
"scaelles/DEXTR-PyTorch" -> "jfzhang95/DeepGrabCut-PyTorch" ["e"=1]
"scaelles/DEXTR-PyTorch" -> "davidjesusacu/polyrnn-pp"
"scaelles/DEXTR-PyTorch" -> "fidler-lab/polyrnn-pp"
"scaelles/DEXTR-PyTorch" -> "saic-vul/fbrs_interactive_segmentation" ["e"=1]
"scaelles/DEXTR-PyTorch" -> "mapillary/inplace_abn" ["e"=1]
"scaelles/DEXTR-PyTorch" -> "shiyinzhang/Inside-Outside-Guidance" ["e"=1]
"scaelles/DEXTR-PyTorch" -> "ansleliu/LightNet" ["e"=1]
"scaelles/DEXTR-PyTorch" -> "ignacio-rocco/detectorch"
"scaelles/DEXTR-PyTorch" -> "JackieZhangdx/WeakSupervisedSegmentationList" ["e"=1]
"scaelles/DEXTR-PyTorch" -> "saic-vul/ritm_interactive_segmentation" ["e"=1]
"scaelles/DEXTR-PyTorch" -> "speedinghzl/pytorch-segmentation-toolbox" ["e"=1]
"OlafenwaMoses/ImageAI" -> "tzutalin/labelImg"
"OlafenwaMoses/ImageAI" -> "matterport/Mask_RCNN"
"OlafenwaMoses/ImageAI" -> "fizyr/keras-retinanet"
"OlafenwaMoses/ImageAI" -> "qqwweee/keras-yolo3"
"OlafenwaMoses/ImageAI" -> "ageitgey/face_recognition"
"OlafenwaMoses/ImageAI" -> "pjreddie/darknet"
"OlafenwaMoses/ImageAI" -> "facebookresearch/Detectron"
"OlafenwaMoses/ImageAI" -> "davidsandberg/facenet"
"OlafenwaMoses/ImageAI" -> "spmallick/learnopencv"
"OlafenwaMoses/ImageAI" -> "thtrieu/darkflow"
"OlafenwaMoses/ImageAI" -> "facebookresearch/detectron2"
"OlafenwaMoses/ImageAI" -> "amusi/awesome-object-detection"
"OlafenwaMoses/ImageAI" -> "hoya012/deep_learning_object_detection"
"OlafenwaMoses/ImageAI" -> "AlexeyAB/darknet"
"OlafenwaMoses/ImageAI" -> "aleju/imgaug"
"TuSimple/simpledet" -> "tianzhi0549/FCOS"
"TuSimple/simpledet" -> "xingyizhou/CenterNet"
"TuSimple/simpledet" -> "Duankaiwen/CenterNet"
"TuSimple/simpledet" -> "princeton-vl/CornerNet-Lite"
"TuSimple/simpledet" -> "princeton-vl/CornerNet"
"TuSimple/simpledet" -> "dmlc/gluon-cv"
"TuSimple/simpledet" -> "mahyarnajibi/SNIPER"
"TuSimple/simpledet" -> "msracver/Deformable-ConvNets"
"TuSimple/simpledet" -> "qijiezhao/M2Det"
"TuSimple/simpledet" -> "facebookresearch/maskrcnn-benchmark"
"TuSimple/simpledet" -> "sfzhang15/RefineDet"
"TuSimple/simpledet" -> "amusi/awesome-object-detection"
"TuSimple/simpledet" -> "zjhuang22/maskscoring_rcnn"
"TuSimple/simpledet" -> "ruinmessi/RFBNet"
"TuSimple/simpledet" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"ignacio-rocco/detectorch" -> "roytseng-tw/mask-rcnn.pytorch"
"ignacio-rocco/detectorch" -> "kuangliu/torchcv"
"ignacio-rocco/detectorch" -> "longcw/RoIAlign.pytorch"
"ignacio-rocco/detectorch" -> "c0nn3r/RetinaNet"
"ignacio-rocco/detectorch" -> "roytseng-tw/Detectron.pytorch"
"ignacio-rocco/detectorch" -> "soeaver/Pytorch_Mask_RCNN"
"ignacio-rocco/detectorch" -> "facebookresearch/R2Plus1D" ["e"=1]
"ignacio-rocco/detectorch" -> "kuangliu/pytorch-retinanet"
"ignacio-rocco/detectorch" -> "felixgwu/mask_rcnn_pytorch"
"ignacio-rocco/detectorch" -> "lanpa/tensorboard-pytorch"
"ignacio-rocco/detectorch" -> "veronikayurchuk/pretrained-models.pytorch"
"ignacio-rocco/detectorch" -> "marvis/pytorch-yolo3"
"ignacio-rocco/detectorch" -> "marvis/pytorch-yolo2"
"ignacio-rocco/detectorch" -> "youansheng/pytorch-cv" ["e"=1]
"ignacio-rocco/detectorch" -> "CVBox/PyTorchCV"
"roytseng-tw/Detectron.pytorch" -> "facebookresearch/maskrcnn-benchmark"
"roytseng-tw/Detectron.pytorch" -> "jwyang/faster-rcnn.pytorch"
"roytseng-tw/Detectron.pytorch" -> "ruotianluo/pytorch-faster-rcnn"
"roytseng-tw/Detectron.pytorch" -> "longcw/faster_rcnn_pytorch"
"roytseng-tw/Detectron.pytorch" -> "ShuLiu1993/PANet"
"roytseng-tw/Detectron.pytorch" -> "multimodallearning/pytorch-mask-rcnn"
"roytseng-tw/Detectron.pytorch" -> "msracver/Deformable-ConvNets"
"roytseng-tw/Detectron.pytorch" -> "jwyang/fpn.pytorch"
"roytseng-tw/Detectron.pytorch" -> "amdegroot/ssd.pytorch"
"roytseng-tw/Detectron.pytorch" -> "tianzhi0549/FCOS"
"roytseng-tw/Detectron.pytorch" -> "lanpa/tensorboard-pytorch"
"roytseng-tw/Detectron.pytorch" -> "longcw/yolo2-pytorch"
"roytseng-tw/Detectron.pytorch" -> "CSAILVision/semantic-segmentation-pytorch" ["e"=1]
"roytseng-tw/Detectron.pytorch" -> "TuSimple/simpledet"
"roytseng-tw/Detectron.pytorch" -> "meetshah1995/pytorch-semseg" ["e"=1]
"sfzhang15/RefineDet" -> "ruinmessi/RFBNet"
"sfzhang15/RefineDet" -> "zhaoweicai/cascade-rcnn"
"sfzhang15/RefineDet" -> "szq0214/DSOD"
"sfzhang15/RefineDet" -> "lzx1413/PytorchSSD"
"sfzhang15/RefineDet" -> "zengarden/light_head_rcnn"
"sfzhang15/RefineDet" -> "qijiezhao/M2Det"
"sfzhang15/RefineDet" -> "mahyarnajibi/SNIPER"
"sfzhang15/RefineDet" -> "princeton-vl/CornerNet-Lite"
"sfzhang15/RefineDet" -> "TuSimple/simpledet"
"sfzhang15/RefineDet" -> "Robert-JunWang/Pelee"
"sfzhang15/RefineDet" -> "princeton-vl/CornerNet"
"sfzhang15/RefineDet" -> "msracver/Relation-Networks-for-Object-Detection"
"sfzhang15/RefineDet" -> "shicai/MobileNet-Caffe"
"sfzhang15/RefineDet" -> "Duankaiwen/CenterNet"
"sfzhang15/RefineDet" -> "sfzhang15/SFD" ["e"=1]
"soeaver/caffe-model" -> "shicai/MobileNet-Caffe"
"soeaver/caffe-model" -> "shicai/DenseNet-Caffe"
"soeaver/caffe-model" -> "soeaver/py-RFCN-priv" ["e"=1]
"soeaver/caffe-model" -> "yonghenglh6/DepthwiseConvolution"
"soeaver/caffe-model" -> "ydwen/caffe-face" ["e"=1]
"soeaver/caffe-model" -> "weiliu89/caffe"
"soeaver/caffe-model" -> "farmingyard/ShuffleNet"
"soeaver/caffe-model" -> "yihui-he/channel-pruning" ["e"=1]
"soeaver/caffe-model" -> "sanghoon/pva-faster-rcnn"
"soeaver/caffe-model" -> "sfzhang15/RefineDet"
"soeaver/caffe-model" -> "yjxiong/caffe" ["e"=1]
"soeaver/caffe-model" -> "hujie-frank/SENet"
"soeaver/caffe-model" -> "daijifeng001/R-FCN"
"soeaver/caffe-model" -> "DeepScale/SqueezeNet"
"soeaver/caffe-model" -> "jay-mahadeokar/pynetbuilder"
"titu1994/Inception-v4" -> "kentsommer/keras-inceptionV4"
"titu1994/Inception-v4" -> "yuyang-huang/keras-inception-resnet-v2"
"titu1994/Inception-v4" -> "taki0112/SENet-Tensorflow"
"titu1994/Inception-v4" -> "titu1994/DenseNet"
"titu1994/Inception-v4" -> "titu1994/Keras-Classification-Models"
"titu1994/Inception-v4" -> "titu1994/Keras-ResNeXt"
"titu1994/Inception-v4" -> "raghakot/keras-resnet"
"titu1994/Inception-v4" -> "flyyufelix/DenseNet-Keras"
"titu1994/Inception-v4" -> "asmith26/wide_resnets_keras"
"DingXiaoH/RepVGG" -> "facebookresearch/ConvNeXt"
"DingXiaoH/RepVGG" -> "microsoft/Swin-Transformer"
"DingXiaoH/RepVGG" -> "RangiLyu/nanodet"
"DingXiaoH/RepVGG" -> "Megvii-BaseDetection/YOLOX"
"DingXiaoH/RepVGG" -> "zhanghang1989/ResNeSt"
"DingXiaoH/RepVGG" -> "xingyizhou/CenterNet"
"DingXiaoH/RepVGG" -> "meituan/YOLOv6"
"DingXiaoH/RepVGG" -> "daquexian/onnx-simplifier"
"DingXiaoH/RepVGG" -> "megvii-model/RepVGG"
"DingXiaoH/RepVGG" -> "facebookresearch/deit"
"DingXiaoH/RepVGG" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"DingXiaoH/RepVGG" -> "lukemelas/EfficientNet-PyTorch"
"DingXiaoH/RepVGG" -> "aim-uofa/AdelaiDet"
"DingXiaoH/RepVGG" -> "rwightman/pytorch-image-models"
"DingXiaoH/RepVGG" -> "tianzhi0549/FCOS"
"lukemelas/PyTorch-Pretrained-ViT" -> "jeonsworld/ViT-pytorch"
"lukemelas/PyTorch-Pretrained-ViT" -> "jacobgil/vit-explain"
"lukemelas/PyTorch-Pretrained-ViT" -> "asyml/vision-transformer-pytorch"
"lukemelas/PyTorch-Pretrained-ViT" -> "google-research/vision_transformer"
"lukemelas/PyTorch-Pretrained-ViT" -> "hila-chefer/Transformer-Explainability"
"lukemelas/PyTorch-Pretrained-ViT" -> "lucidrains/vit-pytorch"
"lukemelas/PyTorch-Pretrained-ViT" -> "facebookresearch/deit"
"lukemelas/PyTorch-Pretrained-ViT" -> "FrancescoSaverioZuppichini/ViT"
"lukemelas/PyTorch-Pretrained-ViT" -> "dk-liang/Awesome-Visual-Transformer"
"lukemelas/PyTorch-Pretrained-ViT" -> "DirtyHarryLYL/Transformer-in-Vision"
"lukemelas/PyTorch-Pretrained-ViT" -> "luo3300612/Visualizer"
"lukemelas/PyTorch-Pretrained-ViT" -> "TACJu/TransFG" ["e"=1]
"lukemelas/PyTorch-Pretrained-ViT" -> "yitu-opensource/T2T-ViT"
"lukemelas/PyTorch-Pretrained-ViT" -> "kentaroy47/vision-transformers-cifar10"
"lukemelas/PyTorch-Pretrained-ViT" -> "lucidrains/TimeSformer-pytorch" ["e"=1]
"pkumivision/FFC" -> "raoyongming/GFNet"
"Sophia-11/Awesome-CV-Resources" -> "Sophia-11/Awesome-ICCV2019"
"Sophia-11/Awesome-ICCV2019" -> "Sophia-11/Awesome-CV-Resources"
"Sophia-11/Awesome-ICCV2019" -> "extreme-assistant/iccv2019"
"Sophia-11/Awesome-ICCV2019" -> "Sophia-11/Awesome-NeurIPS2019-NIPS2019"
"Sophia-11/Awesome-ICCV2019" -> "hoya012/CVPR-2019-Paper-Statistics"
"hunglc007/tensorflow-yolov4-tflite" -> "Tianxiaomo/pytorch-YOLOv4"
"hunglc007/tensorflow-yolov4-tflite" -> "zzh8829/yolov3-tf2"
"hunglc007/tensorflow-yolov4-tflite" -> "YunYang1994/tensorflow-yolov3"
"hunglc007/tensorflow-yolov4-tflite" -> "WongKinYiu/ScaledYOLOv4"
"hunglc007/tensorflow-yolov4-tflite" -> "theAIGuysCode/yolov4-deepsort" ["e"=1]
"hunglc007/tensorflow-yolov4-tflite" -> "theAIGuysCode/tensorflow-yolov4-tflite" ["e"=1]
"hunglc007/tensorflow-yolov4-tflite" -> "david8862/keras-YOLOv3-model-set"
"hunglc007/tensorflow-yolov4-tflite" -> "jkjung-avt/tensorrt_demos"
"hunglc007/tensorflow-yolov4-tflite" -> "WongKinYiu/PyTorch_YOLOv4"
"hunglc007/tensorflow-yolov4-tflite" -> "YunYang1994/TensorFlow2.0-Examples"
"hunglc007/tensorflow-yolov4-tflite" -> "wizyoung/YOLOv3_TensorFlow"
"hunglc007/tensorflow-yolov4-tflite" -> "xuannianz/EfficientDet"
"hunglc007/tensorflow-yolov4-tflite" -> "miemie2013/Keras-YOLOv4" ["e"=1]
"hunglc007/tensorflow-yolov4-tflite" -> "AlexeyAB/darknet"
"hunglc007/tensorflow-yolov4-tflite" -> "qqwweee/keras-yolo3"
"microsoft/computervision-recipes" -> "facebookresearch/detectron2"
"microsoft/computervision-recipes" -> "microsoft/nlp-recipes" ["e"=1]
"microsoft/computervision-recipes" -> "rwightman/pytorch-image-models"
"microsoft/computervision-recipes" -> "ritchieng/the-incredible-pytorch" ["e"=1]
"microsoft/computervision-recipes" -> "fastai/fastbook" ["e"=1]
"microsoft/computervision-recipes" -> "facebookresearch/detr"
"microsoft/computervision-recipes" -> "jbhuang0604/awesome-computer-vision" ["e"=1]
"microsoft/computervision-recipes" -> "rasbt/deeplearning-models" ["e"=1]
"microsoft/computervision-recipes" -> "EthicalML/awesome-production-machine-learning" ["e"=1]
"microsoft/computervision-recipes" -> "open-mmlab/mmdetection"
"microsoft/computervision-recipes" -> "microsoft/recommenders" ["e"=1]
"microsoft/computervision-recipes" -> "facebookresearch/SlowFast" ["e"=1]
"microsoft/computervision-recipes" -> "kornia/kornia"
"microsoft/computervision-recipes" -> "PyTorchLightning/pytorch-lightning"
"microsoft/computervision-recipes" -> "albumentations-team/albumentations"
"tensorflow/tpu" -> "lukemelas/EfficientNet-PyTorch"
"tensorflow/tpu" -> "google/automl"
"tensorflow/tpu" -> "qubvel/efficientnet"
"tensorflow/tpu" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"tensorflow/tpu" -> "zhanghang1989/ResNeSt"
"tensorflow/tpu" -> "xingyizhou/CenterNet"
"tensorflow/tpu" -> "tianzhi0549/FCOS"
"tensorflow/tpu" -> "open-mmlab/mmdetection"
"tensorflow/tpu" -> "hujie-frank/SENet"
"tensorflow/tpu" -> "facebookresearch/maskrcnn-benchmark"
"tensorflow/tpu" -> "rwightman/pytorch-image-models"
"tensorflow/tpu" -> "TuSimple/simpledet"
"tensorflow/tpu" -> "dmlc/gluon-cv"
"tensorflow/tpu" -> "amusi/awesome-object-detection"
"tensorflow/tpu" -> "facebookresearch/detr"
"zju3dv/snake" -> "xieenze/PolarMask"
"zju3dv/snake" -> "youngwanLEE/CenterMask"
"zju3dv/snake" -> "WXinlong/SOLO"
"zju3dv/snake" -> "aim-uofa/AdelaiDet"
"zju3dv/snake" -> "fidler-lab/curve-gcn"
"zju3dv/snake" -> "youngwanLEE/centermask2"
"zju3dv/snake" -> "sfzhang15/ATSS"
"zju3dv/snake" -> "dbolya/yolact"
"zju3dv/snake" -> "zhang-tao-whu/e2ec"
"zju3dv/snake" -> "PeizeSun/SparseR-CNN"
"zju3dv/snake" -> "tianzhi0549/FCOS"
"zju3dv/snake" -> "openseg-group/openseg.pytorch" ["e"=1]
"zju3dv/snake" -> "lkevinzc/dance"
"zju3dv/snake" -> "zhanghang1989/ResNeSt"
"zju3dv/snake" -> "HRNet/HRNet-Semantic-Segmentation" ["e"=1]
"Randl/ShuffleNetV2-pytorch" -> "ericsun99/Shufflenet-v2-Pytorch"
"Randl/ShuffleNetV2-pytorch" -> "Bugdragon/ShuffleNet_v2_PyTorch"
"WangQvQ/Yolov5_Magic" -> "iscyy/yoloair"
"WangQvQ/Yolov5_Magic" -> "z1069614715/objectdetection_script"
"WangQvQ/Yolov5_Magic" -> "positive666/yolov5_research" ["e"=1]
"WangQvQ/Yolov5_Magic" -> "HuKai97/yolov5-5.x-annotations" ["e"=1]
"WangQvQ/Yolov5_Magic" -> "Gumpest/YOLOv5-Multibackbone-Compression" ["e"=1]
"WangQvQ/Yolov5_Magic" -> "mohenghui/yolov5_attention" ["e"=1]
"WangQvQ/Yolov5_Magic" -> "iscyy/yoloair2"
"WangQvQ/Yolov5_Magic" -> "Ranking666/Yolov5-Processing" ["e"=1]
"WangQvQ/Yolov5_Magic" -> "AlanLi1997/slim-neck-by-gsconv" ["e"=1]
"WangQvQ/Yolov5_Magic" -> "jizhishutong/YOLOU"
"WangQvQ/Yolov5_Magic" -> "Javacr/PyQt5-YOLOv5" ["e"=1]
"WangQvQ/Yolov5_Magic" -> "cv516Buaa/tph-yolov5" ["e"=1]
"WangQvQ/Yolov5_Magic" -> "Bobo-y/flexible-yolov5" ["e"=1]
"WangQvQ/Yolov5_Magic" -> "midasklr/yolov5prune" ["e"=1]
"WangQvQ/Yolov5_Magic" -> "Syencil/mobile-yolov5-pruning-distillation" ["e"=1]
"open-mmlab/mmyolo" -> "open-mmlab/mmdeploy"
"open-mmlab/mmyolo" -> "open-mmlab/mmrazor"
"open-mmlab/mmyolo" -> "open-mmlab/mmengine"
"open-mmlab/mmyolo" -> "open-mmlab/mmrotate" ["e"=1]
"open-mmlab/mmyolo" -> "iscyy/yoloair"
"open-mmlab/mmyolo" -> "jizhishutong/YOLOU"
"open-mmlab/mmyolo" -> "open-mmlab/mmclassification"
"open-mmlab/mmyolo" -> "open-mmlab/mmeval"
"open-mmlab/mmyolo" -> "meituan/YOLOv6"
"open-mmlab/mmyolo" -> "open-mmlab/mmfewshot"
"open-mmlab/mmyolo" -> "IDEA-Research/detrex" ["e"=1]
"open-mmlab/mmyolo" -> "open-mmlab/OpenMMLabCourse"
"open-mmlab/mmyolo" -> "ultralytics/ultralytics"
"open-mmlab/mmyolo" -> "open-mmlab/playground"
"open-mmlab/mmyolo" -> "open-mmlab/mmflow"
"DWCTOD/CVPR2022-Papers-with-Code-Demo" -> "DWCTOD/ECCV2022-Papers-with-Code-Demo"
"DWCTOD/CVPR2022-Papers-with-Code-Demo" -> "DWCTOD/ICCV2021-Papers-with-Code-Demo"
"DWCTOD/CVPR2022-Papers-with-Code-Demo" -> "amusi/CVPR2022-Papers-with-Code"
"DWCTOD/CVPR2022-Papers-with-Code-Demo" -> "extreme-assistant/CVPR2022-Paper-Code-Interpretation"
"DWCTOD/CVPR2022-Papers-with-Code-Demo" -> "amusi/ECCV2022-Papers-with-Code"
"DWCTOD/CVPR2022-Papers-with-Code-Demo" -> "amusi/ICCV2021-Papers-with-Code"
"DWCTOD/CVPR2022-Papers-with-Code-Demo" -> "gbstack/CVPR-2022-papers"
"DWCTOD/CVPR2022-Papers-with-Code-Demo" -> "extreme-assistant/ICCV2021-Paper-Code-Interpretation"
"DWCTOD/CVPR2022-Papers-with-Code-Demo" -> "extreme-assistant/CVPR2021-Paper-Code-Interpretation"
"DWCTOD/CVPR2022-Papers-with-Code-Demo" -> "ckkelvinchan/RealBasicVSR" ["e"=1]
"DWCTOD/CVPR2022-Papers-with-Code-Demo" -> "Arthur151/ROMP" ["e"=1]
"qubvel/segmentation_models.pytorch" -> "rwightman/pytorch-image-models"
"qubvel/segmentation_models.pytorch" -> "qubvel/segmentation_models"
"qubvel/segmentation_models.pytorch" -> "open-mmlab/mmsegmentation"
"qubvel/segmentation_models.pytorch" -> "albumentations-team/albumentations"
"qubvel/segmentation_models.pytorch" -> "JunMa11/SegLoss" ["e"=1]
"qubvel/segmentation_models.pytorch" -> "milesial/Pytorch-UNet" ["e"=1]
"qubvel/segmentation_models.pytorch" -> "lukemelas/EfficientNet-PyTorch"
"qubvel/segmentation_models.pytorch" -> "mrgloom/awesome-semantic-segmentation"
"qubvel/segmentation_models.pytorch" -> "MIC-DKFZ/nnUNet" ["e"=1]
"qubvel/segmentation_models.pytorch" -> "BloodAxe/pytorch-toolbelt"
"qubvel/segmentation_models.pytorch" -> "lucidrains/vit-pytorch"
"qubvel/segmentation_models.pytorch" -> "CSAILVision/semantic-segmentation-pytorch" ["e"=1]
"qubvel/segmentation_models.pytorch" -> "Cadene/pretrained-models.pytorch"
"qubvel/segmentation_models.pytorch" -> "catalyst-team/catalyst"
"qubvel/segmentation_models.pytorch" -> "open-mmlab/mmdetection"
"IgorSusmelj/pytorch-styleguide" -> "vahidk/EffectivePyTorch"
"IgorSusmelj/pytorch-styleguide" -> "victoresque/pytorch-template"
"IgorSusmelj/pytorch-styleguide" -> "moemen95/Pytorch-Project-Template"
"IgorSusmelj/pytorch-styleguide" -> "sksq96/pytorch-summary"
"IgorSusmelj/pytorch-styleguide" -> "lightly-ai/lightly"
"IgorSusmelj/pytorch-styleguide" -> "ashleve/lightning-hydra-template"
"IgorSusmelj/pytorch-styleguide" -> "TylerYep/torchinfo"
"IgorSusmelj/pytorch-styleguide" -> "arogozhnikov/einops"
"IgorSusmelj/pytorch-styleguide" -> "williamFalcon/pytorch-lightning"
"IgorSusmelj/pytorch-styleguide" -> "ritchieng/the-incredible-pytorch" ["e"=1]
"IgorSusmelj/pytorch-styleguide" -> "paperswithcode/releasing-research-code" ["e"=1]
"IgorSusmelj/pytorch-styleguide" -> "tensor-yu/PyTorch_Tutorial" ["e"=1]
"IgorSusmelj/pytorch-styleguide" -> "jason718/awesome-self-supervised-learning"
"IgorSusmelj/pytorch-styleguide" -> "Kaixhin/grokking-pytorch"
"IgorSusmelj/pytorch-styleguide" -> "bharathgs/Awesome-pytorch-list" ["e"=1]
"daquexian/onnx-simplifier" -> "onnx/onnx-tensorrt"
"daquexian/onnx-simplifier" -> "NVIDIA/TensorRT"
"daquexian/onnx-simplifier" -> "NVIDIA-AI-IOT/torch2trt"
"daquexian/onnx-simplifier" -> "alibaba/MNN"
"daquexian/onnx-simplifier" -> "wang-xinyu/tensorrtx"
"daquexian/onnx-simplifier" -> "Tencent/TNN"
"daquexian/onnx-simplifier" -> "onnx/optimizer"
"daquexian/onnx-simplifier" -> "microsoft/onnxruntime"
"daquexian/onnx-simplifier" -> "onnx/tensorflow-onnx"
"daquexian/onnx-simplifier" -> "RangiLyu/nanodet"
"daquexian/onnx-simplifier" -> "xxradon/PytorchToCaffe"
"daquexian/onnx-simplifier" -> "DingXiaoH/RepVGG"
"daquexian/onnx-simplifier" -> "openppl-public/ppl.nn" ["e"=1]
"daquexian/onnx-simplifier" -> "Tencent/ncnn"
"daquexian/onnx-simplifier" -> "DefTruth/lite.ai.toolkit"
"onnx/optimizer" -> "daquexian/onnx-simplifier"
"onnx/optimizer" -> "Tencent/TPAT"
"onnx/optimizer" -> "onnx/onnx-mlir" ["e"=1]
"onnx/optimizer" -> "ZhangGe6/onnx-modifier"
"onnx/optimizer" -> "ModelTC/MQBench" ["e"=1]
"onnx/optimizer" -> "microsoft/nnfusion" ["e"=1]
"onnx/optimizer" -> "MegEngine/MegCC" ["e"=1]
"onnx/optimizer" -> "openppl-public/ppl.cv" ["e"=1]
"onnx/optimizer" -> "microsoft/OLive"
"onnx/optimizer" -> "grimoire/torch2trt_dynamic"
"onnx/optimizer" -> "pnnx/pnnx" ["e"=1]
"onnx/optimizer" -> "openppl-public/ppq"
"onnx/optimizer" -> "microsoft/onnxconverter-common"
"onnx/optimizer" -> "alibaba/BladeDISC" ["e"=1]
"onnx/optimizer" -> "pytorch/torchdynamo" ["e"=1]
"z1069614715/objectdetection_script" -> "iscyy/yoloair"
"z1069614715/objectdetection_script" -> "WangQvQ/Yolov5_Magic"
"z1069614715/objectdetection_script" -> "ultralytics/ultralytics"
"z1069614715/objectdetection_script" -> "Gumpest/YOLOv5-Multibackbone-Compression" ["e"=1]
"z1069614715/objectdetection_script" -> "WangRongsheng/BestYOLO"
"z1069614715/objectdetection_script" -> "open-mmlab/mmyolo"
"z1069614715/objectdetection_script" -> "Javacr/PyQt5-YOLOv5" ["e"=1]
"z1069614715/objectdetection_script" -> "bubbliiiing/yolov7-pytorch" ["e"=1]
"z1069614715/objectdetection_script" -> "cv516Buaa/tph-yolov5" ["e"=1]
"z1069614715/objectdetection_script" -> "jizhishutong/YOLOU"
"z1069614715/objectdetection_script" -> "ppogg/YOLOv5-Lite" ["e"=1]
"z1069614715/objectdetection_script" -> "JierunChen/FasterNet"
"z1069614715/objectdetection_script" -> "bubbliiiing/yolov5-pytorch" ["e"=1]
"z1069614715/objectdetection_script" -> "positive666/yolov5_research" ["e"=1]
"z1069614715/objectdetection_script" -> "JackWoo0831/Yolov7-tracker" ["e"=1]
"PanJinquan/tensorflow_models_learning" -> "conan7882/GoogLeNet-Inception"
"PanJinquan/tensorflow_models_learning" -> "tslgithub/image_class" ["e"=1]
"PanJinquan/tensorflow_models_learning" -> "taki0112/SENet-Tensorflow"
"PanJinquan/tensorflow_models_learning" -> "calmisential/Basic_CNNs_TensorFlow2"
"PanJinquan/tensorflow_models_learning" -> "YunYang1994/tensorflow-yolov3"
"PanJinquan/tensorflow_models_learning" -> "weiaicunzai/pytorch-cifar100"
"PanJinquan/tensorflow_models_learning" -> "ry/tensorflow-resnet"
"PanJinquan/tensorflow_models_learning" -> "Zehaos/MobileNet"
"PanJinquan/tensorflow_models_learning" -> "NanGC/CNN"
"PanJinquan/tensorflow_models_learning" -> "Byronnar/tensorflow-serving-yolov3"
"PanJinquan/tensorflow_models_learning" -> "MachineLP/train_arch" ["e"=1]
"PanJinquan/tensorflow_models_learning" -> "weiaicunzai/awesome-image-classification"
"PanJinquan/tensorflow_models_learning" -> "SnailTyan/deep-learning-papers-translation"
"PanJinquan/tensorflow_models_learning" -> "Bisonai/mobilenetv3-tensorflow"
"pytorch/android-demo-app" -> "pytorch/ios-demo-app"
"pytorch/android-demo-app" -> "facebookresearch/d2go"
"pytorch/android-demo-app" -> "nihui/ncnn-android-yolov5" ["e"=1]
"pytorch/android-demo-app" -> "lp6m/yolov5s_android" ["e"=1]
"pytorch/android-demo-app" -> "cmdbug/YOLOv5_NCNN" ["e"=1]
"pytorch/android-demo-app" -> "johnolafenwa/PytorchMobile"
"pytorch/android-demo-app" -> "tensorflow/examples" ["e"=1]
"pytorch/android-demo-app" -> "pytorch/audio" ["e"=1]
"pytorch/android-demo-app" -> "PaddlePaddle/Paddle-Lite"
"pytorch/android-demo-app" -> "PaddlePaddle/Paddle-Lite-Demo"
"pytorch/android-demo-app" -> "WongKinYiu/ScaledYOLOv4"
"pytorch/android-demo-app" -> "onnx/tutorials"
"pytorch/android-demo-app" -> "facebookresearch/pytorchvideo" ["e"=1]
"pytorch/android-demo-app" -> "pytorch/serve" ["e"=1]
"pytorch/android-demo-app" -> "zchrissirhcz/awesome-ncnn" ["e"=1]
"tensorpack/tensorpack" -> "endernewton/tf-faster-rcnn"
"tensorpack/tensorpack" -> "facebookresearch/maskrcnn-benchmark"
"tensorpack/tensorpack" -> "TuSimple/simpledet"
"tensorpack/tensorpack" -> "smallcorgi/Faster-RCNN_TF"
"tensorpack/tensorpack" -> "rbgirshick/py-faster-rcnn"
"tensorpack/tensorpack" -> "balancap/SSD-Tensorflow"
"tensorpack/tensorpack" -> "fizyr/keras-retinanet"
"tensorpack/tensorpack" -> "xingyizhou/CenterNet"
"tensorpack/tensorpack" -> "jwyang/faster-rcnn.pytorch"
"tensorpack/tensorpack" -> "dmlc/gluon-cv"
"tensorpack/tensorpack" -> "open-mmlab/mmdetection"
"tensorpack/tensorpack" -> "tianzhi0549/FCOS"
"tensorpack/tensorpack" -> "amusi/awesome-object-detection"
"tensorpack/tensorpack" -> "facebookresearch/Detectron"
"tensorpack/tensorpack" -> "msracver/Deformable-ConvNets"
"PaddlePaddle/FastDeploy" -> "DefTruth/lite.ai.toolkit"
"PaddlePaddle/FastDeploy" -> "PaddlePaddle/PaddleSlim"
"PaddlePaddle/FastDeploy" -> "PaddlePaddle/Paddle3D"
"PaddlePaddle/FastDeploy" -> "PaddlePaddle/Paddle-Lite"
"PaddlePaddle/FastDeploy" -> "wang-xinyu/tensorrtx"
"PaddlePaddle/FastDeploy" -> "open-mmlab/mmdeploy"
"PaddlePaddle/FastDeploy" -> "shouxieai/tensorRT_Pro"
"PaddlePaddle/FastDeploy" -> "jizhishutong/YOLOU"
"PaddlePaddle/FastDeploy" -> "PaddlePaddle/Serving" ["e"=1]
"PaddlePaddle/FastDeploy" -> "PaddlePaddle/Paddle2ONNX"
"PaddlePaddle/FastDeploy" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/FastDeploy" -> "PaddlePaddle/FlyCV" ["e"=1]
"PaddlePaddle/FastDeploy" -> "PaddlePaddle/PaddleYOLO"
"PaddlePaddle/FastDeploy" -> "CVCUDA/CV-CUDA"
"PaddlePaddle/FastDeploy" -> "openppl-public/ppq"
"onnx/tensorflow-onnx" -> "onnx/onnx-tensorflow"
"onnx/tensorflow-onnx" -> "daquexian/onnx-simplifier"
"onnx/tensorflow-onnx" -> "onnx/onnx-tensorrt"
"onnx/tensorflow-onnx" -> "onnx/tutorials"
"onnx/tensorflow-onnx" -> "NVIDIA/TensorRT"
"onnx/tensorflow-onnx" -> "microsoft/onnxruntime"
"onnx/tensorflow-onnx" -> "onnx/keras-onnx"
"onnx/tensorflow-onnx" -> "onnx/onnx"
"onnx/tensorflow-onnx" -> "tensorflow/tensorrt" ["e"=1]
"onnx/tensorflow-onnx" -> "onnx/onnxmltools"
"onnx/tensorflow-onnx" -> "microsoft/MMdnn"
"onnx/tensorflow-onnx" -> "wang-xinyu/tensorrtx"
"onnx/tensorflow-onnx" -> "NVIDIA-AI-IOT/torch2trt"
"onnx/tensorflow-onnx" -> "onnx/models"
"onnx/tensorflow-onnx" -> "Tencent/TNN"
"NVlabs/SegFormer" -> "facebookresearch/MaskFormer"
"NVlabs/SegFormer" -> "open-mmlab/mmsegmentation"
"NVlabs/SegFormer" -> "SwinTransformer/Swin-Transformer-Semantic-Segmentation"
"NVlabs/SegFormer" -> "fudan-zvg/SETR"
"NVlabs/SegFormer" -> "whai362/PVT"
"NVlabs/SegFormer" -> "lucidrains/segformer-pytorch"
"NVlabs/SegFormer" -> "facebookresearch/Mask2Former"
"NVlabs/SegFormer" -> "rstrudel/segmenter"
"NVlabs/SegFormer" -> "czczup/ViT-Adapter" ["e"=1]
"NVlabs/SegFormer" -> "openseg-group/openseg.pytorch" ["e"=1]
"NVlabs/SegFormer" -> "HRNet/HRNet-Semantic-Segmentation" ["e"=1]
"NVlabs/SegFormer" -> "lhoyer/DAFormer" ["e"=1]
"NVlabs/SegFormer" -> "facebookresearch/ConvNeXt"
"NVlabs/SegFormer" -> "Visual-Attention-Network/SegNeXt" ["e"=1]
"NVlabs/SegFormer" -> "microsoft/Swin-Transformer"
"google-research/maxvit" -> "ChristophReich1996/MaxViT"
"google-research/maxvit" -> "google-research/maxim" ["e"=1]
"google-research/maxvit" -> "moabarar/qna"
"google-research/maxvit" -> "facebookresearch/ConvNeXt-V2" ["e"=1]
"google-research/maxvit" -> "snap-research/EfficientFormer"
"google-research/maxvit" -> "ggjy/CMT.pytorch"
"google-research/vision_transformer" -> "lucidrains/vit-pytorch"
"google-research/vision_transformer" -> "microsoft/Swin-Transformer"
"google-research/vision_transformer" -> "rwightman/pytorch-image-models"
"google-research/vision_transformer" -> "facebookresearch/detr"
"google-research/vision_transformer" -> "facebookresearch/deit"
"google-research/vision_transformer" -> "facebookresearch/mae"
"google-research/vision_transformer" -> "openai/CLIP"
"google-research/vision_transformer" -> "facebookresearch/ConvNeXt"
"google-research/vision_transformer" -> "dk-liang/Awesome-Visual-Transformer"
"google-research/vision_transformer" -> "facebookresearch/moco"
"google-research/vision_transformer" -> "jeonsworld/ViT-pytorch"
"google-research/vision_transformer" -> "facebookresearch/dino"
"google-research/vision_transformer" -> "jacobgil/pytorch-grad-cam"
"google-research/vision_transformer" -> "open-mmlab/mmsegmentation"
"google-research/vision_transformer" -> "fundamentalvision/Deformable-DETR"
"Cartucho/mAP" -> "rafaelpadilla/Object-Detection-Metrics"
"Cartucho/mAP" -> "qqwweee/keras-yolo3"
"Cartucho/mAP" -> "eriklindernoren/PyTorch-YOLOv3"
"Cartucho/mAP" -> "ultralytics/yolov3"
"Cartucho/mAP" -> "xingyizhou/CenterNet"
"Cartucho/mAP" -> "Tianxiaomo/pytorch-YOLOv4"
"Cartucho/mAP" -> "amdegroot/ssd.pytorch"
"Cartucho/mAP" -> "hoya012/deep_learning_object_detection"
"Cartucho/mAP" -> "amusi/awesome-object-detection"
"Cartucho/mAP" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"Cartucho/mAP" -> "jwyang/faster-rcnn.pytorch"
"Cartucho/mAP" -> "tianzhi0549/FCOS"
"Cartucho/mAP" -> "YunYang1994/tensorflow-yolov3"
"Cartucho/mAP" -> "fizyr/keras-retinanet"
"Cartucho/mAP" -> "ayooshkathuria/pytorch-yolo-v3"
"RangiLyu/nanodet" -> "Megvii-BaseDetection/YOLOX"
"RangiLyu/nanodet" -> "dog-qiuqiu/Yolo-Fastest"
"RangiLyu/nanodet" -> "wang-xinyu/tensorrtx"
"RangiLyu/nanodet" -> "xingyizhou/CenterNet"
"RangiLyu/nanodet" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"RangiLyu/nanodet" -> "DingXiaoH/RepVGG"
"RangiLyu/nanodet" -> "Tencent/ncnn"
"RangiLyu/nanodet" -> "Tianxiaomo/pytorch-YOLOv4"
"RangiLyu/nanodet" -> "tianzhi0549/FCOS"
"RangiLyu/nanodet" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB"
"RangiLyu/nanodet" -> "daquexian/onnx-simplifier"
"RangiLyu/nanodet" -> "meituan/YOLOv6"
"RangiLyu/nanodet" -> "Tencent/TNN"
"RangiLyu/nanodet" -> "aim-uofa/AdelaiDet"
"RangiLyu/nanodet" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"facebookresearch/Mask2Former" -> "facebookresearch/MaskFormer"
"facebookresearch/Mask2Former" -> "czczup/ViT-Adapter" ["e"=1]
"facebookresearch/Mask2Former" -> "fundamentalvision/Deformable-DETR"
"facebookresearch/Mask2Former" -> "ZwwWayne/K-Net"
"facebookresearch/Mask2Former" -> "facebookresearch/Detic" ["e"=1]
"facebookresearch/Mask2Former" -> "NVlabs/SegFormer"
"facebookresearch/Mask2Former" -> "wjf5203/SeqFormer" ["e"=1]
"facebookresearch/Mask2Former" -> "SHI-Labs/OneFormer" ["e"=1]
"facebookresearch/Mask2Former" -> "IDEACVR/awesome-detection-transformer" ["e"=1]
"facebookresearch/Mask2Former" -> "IDEACVR/MaskDINO" ["e"=1]
"facebookresearch/Mask2Former" -> "IDEACVR/DINO" ["e"=1]
"facebookresearch/Mask2Former" -> "Epiphqny/VisTR"
"facebookresearch/Mask2Former" -> "ShoufaChen/DiffusionDet" ["e"=1]
"facebookresearch/Mask2Former" -> "PeizeSun/SparseR-CNN"
"facebookresearch/Mask2Former" -> "facebookresearch/ConvNeXt"
"facebookresearch/mvit" -> "Chenglin-Yang/LVT"
"hysts/pytorch_image_classification" -> "bearpaw/pytorch-classification"
"hysts/pytorch_image_classification" -> "weiaicunzai/awesome-image-classification"
"hysts/pytorch_image_classification" -> "weiaicunzai/pytorch-cifar100"
"hysts/pytorch_image_classification" -> "lxztju/pytorch_classification"
"hysts/pytorch_image_classification" -> "aaron-xichen/pytorch-playground"
"hysts/pytorch_image_classification" -> "bentrevett/pytorch-image-classification"
"hysts/pytorch_image_classification" -> "clovaai/CutMix-PyTorch" ["e"=1]
"hysts/pytorch_image_classification" -> "kuangliu/pytorch-cifar"
"hysts/pytorch_image_classification" -> "miraclewkf/ImageClassification-PyTorch"
"hysts/pytorch_image_classification" -> "weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks"
"hysts/pytorch_image_classification" -> "Cadene/pretrained-models.pytorch"
"hysts/pytorch_image_classification" -> "lukemelas/EfficientNet-PyTorch"
"hysts/pytorch_image_classification" -> "facebookresearch/pycls"
"hysts/pytorch_image_classification" -> "akamaster/pytorch_resnet_cifar10"
"hysts/pytorch_image_classification" -> "kakaobrain/fast-autoaugment" ["e"=1]
"lxztju/pytorch_classification" -> "hysts/pytorch_image_classification"
"lxztju/pytorch_classification" -> "weiaicunzai/awesome-image-classification"
"lxztju/pytorch_classification" -> "weiaicunzai/pytorch-cifar100"
"lxztju/pytorch_classification" -> "wusaifei/garbage_classify" ["e"=1]
"lxztju/pytorch_classification" -> "bearpaw/pytorch-classification"
"lxztju/pytorch_classification" -> "open-mmlab/mmclassification"
"lxztju/pytorch_classification" -> "eastmountyxz/ImageProcessing-Python" ["e"=1]
"lxztju/pytorch_classification" -> "DLLXW/data-science-competition" ["e"=1]
"lxztju/pytorch_classification" -> "shanglianlm0525/PyTorch-Networks" ["e"=1]
"lxztju/pytorch_classification" -> "spytensor/pytorch_img_classification_for_competition" ["e"=1]
"lxztju/pytorch_classification" -> "BangguWu/ECANet" ["e"=1]
"lxztju/pytorch_classification" -> "iscyy/yoloair"
"lxztju/pytorch_classification" -> "spytensor/prepare_detection_dataset"
"lxztju/pytorch_classification" -> "Tramac/awesome-semantic-segmentation-pytorch" ["e"=1]
"lxztju/pytorch_classification" -> "datawhalechina/dive-into-cv-pytorch" ["e"=1]
"BBuf/Darknet" -> "hgpvision/darknet"
"BBuf/Darknet" -> "msnh2012/Msnhnet" ["e"=1]
"BBuf/Darknet" -> "ChenCVer/darknet"
"BBuf/Darknet" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"BBuf/Darknet" -> "coldlarry/YOLOv3-complete-pruning" ["e"=1]
"BBuf/Darknet" -> "Zzh-tju/DIoU-darknet" ["e"=1]
"BBuf/Darknet" -> "ruinmessi/ASFF"
"BBuf/Darknet" -> "GiantPandaCV/yolov3-point" ["e"=1]
"BBuf/Darknet" -> "talebolano/yolov3-network-slimming" ["e"=1]
"BBuf/Darknet" -> "WongKinYiu/CrossStagePartialNetworks"
"BBuf/Darknet" -> "BBuf/Image-processing-algorithm" ["e"=1]
"BBuf/Darknet" -> "enazoe/yolo-tensorrt"
"BBuf/Darknet" -> "ChenYingpeng/darknet2caffe"
"BBuf/Darknet" -> "generalized-iou/g-darknet" ["e"=1]
"BBuf/Darknet" -> "ArtyZe/yolo_quantization"
"Alibaba-MIIL/ImageNet21K" -> "Alibaba-MIIL/ASL" ["e"=1]
"Alibaba-MIIL/ImageNet21K" -> "naver-ai/relabel_imagenet" ["e"=1]
"Alibaba-MIIL/ImageNet21K" -> "google-research/reassessed-imagenet" ["e"=1]
"Alibaba-MIIL/ImageNet21K" -> "google-research/big_transfer"
"Alibaba-MIIL/ImageNet21K" -> "facebookresearch/Detic" ["e"=1]
"Alibaba-MIIL/ImageNet21K" -> "facebookresearch/xcit"
"Alibaba-MIIL/ImageNet21K" -> "raoyongming/DynamicViT"
"Alibaba-MIIL/ImageNet21K" -> "rom1504/img2dataset" ["e"=1]
"Alibaba-MIIL/ImageNet21K" -> "Alibaba-MIIL/ML_Decoder" ["e"=1]
"Alibaba-MIIL/ImageNet21K" -> "facebookresearch/fvcore"
"Alibaba-MIIL/ImageNet21K" -> "zihangJiang/TokenLabeling"
"Alibaba-MIIL/ImageNet21K" -> "Sense-GVT/DeCLIP" ["e"=1]
"Alibaba-MIIL/ImageNet21K" -> "szq0214/MEAL-V2" ["e"=1]
"Alibaba-MIIL/ImageNet21K" -> "facebookresearch/deit"
"Alibaba-MIIL/ImageNet21K" -> "facebookresearch/SLIP" ["e"=1]
"floydhub/dl-docker" -> "ufoym/deepo"
"floydhub/dl-docker" -> "floydhub/dl-setup"
"floydhub/dl-docker" -> "NVIDIA/nvidia-docker"
"floydhub/dl-docker" -> "jupyter/docker-stacks" ["e"=1]
"floydhub/dl-docker" -> "fchollet/keras-resources" ["e"=1]
"floydhub/dl-docker" -> "yosinski/deep-visualization-toolbox"
"floydhub/dl-docker" -> "facebookresearch/visdom"
"floydhub/dl-docker" -> "deepmind/sonnet" ["e"=1]
"floydhub/dl-docker" -> "thtrieu/darkflow"
"floydhub/dl-docker" -> "uber/horovod"
"floydhub/dl-docker" -> "waleedka/modern-deep-learning-docker"
"floydhub/dl-docker" -> "kjw0612/awesome-deep-vision" ["e"=1]
"floydhub/dl-docker" -> "fastai/courses" ["e"=1]
"floydhub/dl-docker" -> "ysh329/deep-learning-model-convertor"
"floydhub/dl-docker" -> "handong1587/handong1587.github.io"
"SpikeKing/keras-yolo3-detection" -> "wizyoung/YOLOv3_TensorFlow"
"SpikeKing/keras-yolo3-detection" -> "qqwweee/keras-yolo3"
"SpikeKing/keras-yolo3-detection" -> "Adamdad/keras-YOLOv3-mobilenet"
"SpikeKing/keras-yolo3-detection" -> "YunYang1994/tensorflow-yolov3"
"SpikeKing/keras-yolo3-detection" -> "xiaochus/YOLOv3"
"SpikeKing/keras-yolo3-detection" -> "experiencor/keras-yolo3"
"SpikeKing/keras-yolo3-detection" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"SpikeKing/keras-yolo3-detection" -> "Byronnar/tensorflow-serving-yolov3"
"SpikeKing/keras-yolo3-detection" -> "Stinky-Tofu/Stronger-yolo"
"SpikeKing/keras-yolo3-detection" -> "yhcc/yolo2"
"SpikeKing/keras-yolo3-detection" -> "ayooshkathuria/YOLO_v3_tutorial_from_scratch"
"SpikeKing/keras-yolo3-detection" -> "Qidian213/deep_sort_yolov3" ["e"=1]
"SpikeKing/keras-yolo3-detection" -> "bubbliiiing/yolo3-keras" ["e"=1]
"SpikeKing/keras-yolo3-detection" -> "ruinmessi/ASFF"
"SpikeKing/keras-yolo3-detection" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"amusi/daily-paper-computer-vision" -> "amusi/awesome-object-detection"
"amusi/daily-paper-computer-vision" -> "amusi/CVPR2020-Code"
"amusi/daily-paper-computer-vision" -> "extreme-assistant/cvpr2019"
"amusi/daily-paper-computer-vision" -> "amusi/Deep-Learning-Interview-Book" ["e"=1]
"amusi/daily-paper-computer-vision" -> "hoya012/deep_learning_object_detection"
"amusi/daily-paper-computer-vision" -> "amusi/AI-Job-Notes" ["e"=1]
"amusi/daily-paper-computer-vision" -> "mrgloom/awesome-semantic-segmentation"
"amusi/daily-paper-computer-vision" -> "amusi/CVPR2021-Papers-with-Code"
"amusi/daily-paper-computer-vision" -> "open-mmlab/mmdetection"
"amusi/daily-paper-computer-vision" -> "facebookresearch/maskrcnn-benchmark"
"amusi/daily-paper-computer-vision" -> "SnailTyan/deep-learning-papers-translation"
"amusi/daily-paper-computer-vision" -> "Ewenwan/MVision" ["e"=1]
"amusi/daily-paper-computer-vision" -> "jwyang/faster-rcnn.pytorch"
"amusi/daily-paper-computer-vision" -> "foolwood/benchmark_results" ["e"=1]
"amusi/daily-paper-computer-vision" -> "amusi/ECCV2020-Code"
"qubvel/classification_models" -> "qubvel/segmentation_models"
"qubvel/classification_models" -> "qubvel/efficientnet"
"qubvel/classification_models" -> "keras-team/keras-applications"
"qubvel/classification_models" -> "bonlime/keras-deeplab-v3-plus" ["e"=1]
"qubvel/classification_models" -> "titu1994/keras-squeeze-excite-network" ["e"=1]
"qubvel/classification_models" -> "titu1994/Keras-ResNeXt"
"qubvel/classification_models" -> "osmr/imgclsmob"
"qubvel/classification_models" -> "trent-b/iterative-stratification"
"qubvel/classification_models" -> "selimsef/dsb2018_topcoders" ["e"=1]
"qubvel/classification_models" -> "albu/albumentations"
"qubvel/classification_models" -> "fizyr/keras-retinanet"
"qubvel/classification_models" -> "kobiso/CBAM-keras" ["e"=1]
"qubvel/classification_models" -> "BloodAxe/pytorch-toolbelt"
"qubvel/classification_models" -> "bermanmaxim/LovaszSoftmax" ["e"=1]
"qubvel/classification_models" -> "xuannianz/EfficientDet"
"googlecodelabs/tensorflow-for-poets-2" -> "GoogleCloudPlatform/tensorflow-object-detection-example"
"BR-IDL/PaddleViT" -> "PaddlePaddle/awesome-DeepLearning"
"BR-IDL/PaddleViT" -> "PaddlePaddle/PaddleVideo" ["e"=1]
"BR-IDL/PaddleViT" -> "PaddlePaddle/X2Paddle"
"BR-IDL/PaddleViT" -> "PaddlePaddle/PaddleSlim"
"BR-IDL/PaddleViT" -> "PaddlePaddle/PASSL"
"BR-IDL/PaddleViT" -> "PaddlePaddle/PaddleSeg"
"BR-IDL/PaddleViT" -> "PaddlePaddle/PaddleClas"
"BR-IDL/PaddleViT" -> "PaddlePaddle/PaddleDetection"
"BR-IDL/PaddleViT" -> "apple/ml-cvnets"
"BR-IDL/PaddleViT" -> "PaddlePaddle/PGL" ["e"=1]
"BR-IDL/PaddleViT" -> "PaddlePaddle/VIMER" ["e"=1]
"BR-IDL/PaddleViT" -> "whai362/PVT"
"BR-IDL/PaddleViT" -> "PaddlePaddle/Paddle-Lite"
"BR-IDL/PaddleViT" -> "PaddlePaddle/FastDeploy"
"BR-IDL/PaddleViT" -> "dk-liang/Awesome-Visual-Transformer"
"longpeng2008/yousan.ai" -> "sczhengyabin/Image-Downloader" ["e"=1]
"longpeng2008/yousan.ai" -> "dongdonghy/Detection-PyTorch-Notebook"
"longpeng2008/yousan.ai" -> "donnyyou/torchcv" ["e"=1]
"longpeng2008/yousan.ai" -> "amusi/awesome-object-detection"
"longpeng2008/yousan.ai" -> "ming71/CV_PaperDaily"
"longpeng2008/yousan.ai" -> "polarisZhao/awesome-face"
"longpeng2008/yousan.ai" -> "pprp/SimpleCVReproduction" ["e"=1]
"longpeng2008/yousan.ai" -> "weiaicunzai/awesome-image-classification"
"longpeng2008/yousan.ai" -> "longpeng2008/Awesome_DNN_Researchers"
"longpeng2008/yousan.ai" -> "tensor-yu/PyTorch_Tutorial" ["e"=1]
"longpeng2008/yousan.ai" -> "HarleysZhang/2019_algorithm_intern_information" ["e"=1]
"longpeng2008/yousan.ai" -> "amusi/daily-paper-computer-vision"
"longpeng2008/yousan.ai" -> "INTERMT/Awesome-PyTorch-Chinese" ["e"=1]
"longpeng2008/yousan.ai" -> "snowkylin/tensorflow-handbook" ["e"=1]
"longpeng2008/yousan.ai" -> "datawhalechina/competition-baseline" ["e"=1]
"zhoushengisnoob/DeepClustering" -> "facebookresearch/deepcluster"
"zhoushengisnoob/DeepClustering" -> "wvangansbeke/Unsupervised-Classification"
"zhoushengisnoob/DeepClustering" -> "XifengGuo/DEC-keras" ["e"=1]
"zhoushengisnoob/DeepClustering" -> "facebookresearch/swav"
"zhoushengisnoob/DeepClustering" -> "xu-ji/IIC"
"zhoushengisnoob/DeepClustering" -> "shahsohil/DCC" ["e"=1]
"zhoushengisnoob/DeepClustering" -> "vlukiyanov/pt-dec" ["e"=1]
"zhoushengisnoob/DeepClustering" -> "piiswrong/dec" ["e"=1]
"zhoushengisnoob/DeepClustering" -> "yukimasano/self-label"
"zhoushengisnoob/DeepClustering" -> "Yunfan-Li/Contrastive-Clustering"
"zhoushengisnoob/DeepClustering" -> "facebookresearch/moco"
"zhoushengisnoob/DeepClustering" -> "jason718/awesome-self-supervised-learning"
"zhoushengisnoob/DeepClustering" -> "XifengGuo/DCEC" ["e"=1]
"zhoushengisnoob/DeepClustering" -> "wangsiwei2010/awesome-multi-view-clustering" ["e"=1]
"zhoushengisnoob/DeepClustering" -> "slim1017/VaDE" ["e"=1]
"dog-qiuqiu/Yolo-Fastest" -> "dog-qiuqiu/MobileNet-Yolo"
"dog-qiuqiu/Yolo-Fastest" -> "dog-qiuqiu/Yolo-FastestV2"
"dog-qiuqiu/Yolo-Fastest" -> "RangiLyu/nanodet"
"dog-qiuqiu/Yolo-Fastest" -> "cmdbug/YOLOv5_NCNN" ["e"=1]
"dog-qiuqiu/Yolo-Fastest" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"dog-qiuqiu/Yolo-Fastest" -> "WongKinYiu/PyTorch_YOLOv4"
"dog-qiuqiu/Yolo-Fastest" -> "WongKinYiu/ScaledYOLOv4"
"dog-qiuqiu/Yolo-Fastest" -> "enazoe/yolo-tensorrt"
"dog-qiuqiu/Yolo-Fastest" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"dog-qiuqiu/Yolo-Fastest" -> "Tianxiaomo/pytorch-YOLOv4"
"dog-qiuqiu/Yolo-Fastest" -> "Megvii-BaseDetection/YOLOX"
"dog-qiuqiu/Yolo-Fastest" -> "wang-xinyu/tensorrtx"
"dog-qiuqiu/Yolo-Fastest" -> "ppogg/YOLOv5-Lite" ["e"=1]
"dog-qiuqiu/Yolo-Fastest" -> "Syencil/mobile-yolov5-pruning-distillation" ["e"=1]
"dog-qiuqiu/Yolo-Fastest" -> "coldlarry/YOLOv3-complete-pruning" ["e"=1]
"ouyanghuiyu/Thundernet_Pytorch" -> "qixuxiang/Pytorch_Lightweight_Network"
"ouyanghuiyu/Thundernet_Pytorch" -> "mohhao/TF-Keras-ThunderNet"
"ouyanghuiyu/Thundernet_Pytorch" -> "vaesl/LRF-Net"
"ouyanghuiyu/Thundernet_Pytorch" -> "Ranchentx/EFGRNet"
"ouyanghuiyu/Thundernet_Pytorch" -> "ouyanghuiyu/Snet"
"ouyanghuiyu/Thundernet_Pytorch" -> "wlguan/Stronger-yolo-pytorch"
"jefflai108/Contrastive-Predictive-Coding-PyTorch" -> "davidtellez/contrastive-predictive-coding"
"jefflai108/Contrastive-Predictive-Coding-PyTorch" -> "facebookresearch/CPC_audio" ["e"=1]
"jefflai108/Contrastive-Predictive-Coding-PyTorch" -> "flrngel/cpc-tensorflow"
"jefflai108/Contrastive-Predictive-Coding-PyTorch" -> "ssp573/Contrastive-Predictive-Coding"
"jefflai108/Contrastive-Predictive-Coding-PyTorch" -> "Philip-Bachman/amdim-public"
"jefflai108/Contrastive-Predictive-Coding-PyTorch" -> "mf1024/Contrastive-Predictive-Coding-for-Image-Recognition-in-PyTorch"
"jefflai108/Contrastive-Predictive-Coding-PyTorch" -> "Spijkervet/contrastive-predictive-coding"
"jefflai108/Contrastive-Predictive-Coding-PyTorch" -> "iamyuanchung/Autoregressive-Predictive-Coding" ["e"=1]
"jefflai108/Contrastive-Predictive-Coding-PyTorch" -> "HobbitLong/CMC"
"jefflai108/Contrastive-Predictive-Coding-PyTorch" -> "DuaneNielsen/DeepInfomaxPytorch"
"jefflai108/Contrastive-Predictive-Coding-PyTorch" -> "rdevon/DIM"
"jefflai108/Contrastive-Predictive-Coding-PyTorch" -> "Linear95/CLUB" ["e"=1]
"jefflai108/Contrastive-Predictive-Coding-PyTorch" -> "jefflai108/pytorch-kaldi-neural-speaker-embeddings" ["e"=1]
"jefflai108/Contrastive-Predictive-Coding-PyTorch" -> "santi-pdp/pase" ["e"=1]
"jefflai108/Contrastive-Predictive-Coding-PyTorch" -> "andi611/Self-Supervised-Speech-Pretraining-and-Representation-Learning" ["e"=1]
"Arsey/keras-transfer-learning-for-oxford102" -> "sebastianbk/finetuned-resnet50-keras"
"Arsey/keras-transfer-learning-for-oxford102" -> "flyyufelix/cnn_finetune"
"Arsey/keras-transfer-learning-for-oxford102" -> "GeorgeSeif/Transfer-Learning-Suite"
"Arsey/keras-transfer-learning-for-oxford102" -> "danielvarga/keras-finetuning" ["e"=1]
"SkalskiP/make-sense" -> "microsoft/VoTT"
"SkalskiP/make-sense" -> "openvinotoolkit/cvat"
"SkalskiP/make-sense" -> "heartexlabs/awesome-data-labeling"
"SkalskiP/make-sense" -> "opencv/cvat"
"SkalskiP/make-sense" -> "l3p-cv/lost"
"SkalskiP/make-sense" -> "heartexlabs/label-studio"
"SkalskiP/make-sense" -> "jsbroks/coco-annotator"
"SkalskiP/make-sense" -> "UniversalDataTool/universal-data-tool"
"SkalskiP/make-sense" -> "bit-bots/imagetagger"
"SkalskiP/make-sense" -> "voxel51/fiftyone"
"SkalskiP/make-sense" -> "wkentaro/labelme"
"SkalskiP/make-sense" -> "abreheret/PixelAnnotationTool"
"SkalskiP/make-sense" -> "obss/sahi"
"SkalskiP/make-sense" -> "Labelbox/labelbox"
"SkalskiP/make-sense" -> "tzutalin/labelImg"
"hardikvasa/google-images-download" -> "s0md3v/Photon" ["e"=1]
"hardikvasa/google-images-download" -> "shobrook/rebound" ["e"=1]
"hardikvasa/google-images-download" -> "aleju/imgaug"
"hardikvasa/google-images-download" -> "tzutalin/labelImg"
"hardikvasa/google-images-download" -> "fastai/fastai" ["e"=1]
"hardikvasa/google-images-download" -> "sczhengyabin/Image-Downloader" ["e"=1]
"hardikvasa/google-images-download" -> "facebookresearch/Detectron"
"hardikvasa/google-images-download" -> "matterport/Mask_RCNN"
"hardikvasa/google-images-download" -> "mdbloice/Augmentor"
"hardikvasa/google-images-download" -> "YoongiKim/AutoCrawler" ["e"=1]
"hardikvasa/google-images-download" -> "Cadene/pretrained-models.pytorch"
"hardikvasa/google-images-download" -> "deepinsight/insightface"
"hardikvasa/google-images-download" -> "thtrieu/darkflow"
"hardikvasa/google-images-download" -> "tkarras/progressive_growing_of_gans" ["e"=1]
"hardikvasa/google-images-download" -> "davidsandberg/facenet"
"raghakot/keras-resnet" -> "ry/tensorflow-resnet"
"raghakot/keras-resnet" -> "broadinstitute/keras-resnet"
"raghakot/keras-resnet" -> "titu1994/DenseNet"
"raghakot/keras-resnet" -> "flyyufelix/DenseNet-Keras"
"raghakot/keras-resnet" -> "tdeboissiere/DeepLearningImplementations" ["e"=1]
"raghakot/keras-resnet" -> "fchollet/deep-learning-models"
"raghakot/keras-resnet" -> "szagoruyko/wide-residual-networks"
"raghakot/keras-resnet" -> "KaimingHe/deep-residual-networks"
"raghakot/keras-resnet" -> "jacobgil/keras-dcgan" ["e"=1]
"raghakot/keras-resnet" -> "aurora95/Keras-FCN" ["e"=1]
"raghakot/keras-resnet" -> "rykov8/ssd_keras"
"raghakot/keras-resnet" -> "raghakot/keras-vis" ["e"=1]
"raghakot/keras-resnet" -> "titu1994/Inception-v4"
"raghakot/keras-resnet" -> "yhenon/keras-frcnn"
"raghakot/keras-resnet" -> "liuzhuang13/DenseNet"
"jinfagang/yolov7" -> "meituan/YOLOv6"
"jinfagang/yolov7" -> "WongKinYiu/yolov7"
"jinfagang/yolov7" -> "Megvii-BaseDetection/YOLOX"
"jinfagang/yolov7" -> "wang-xinyu/tensorrtx"
"jinfagang/yolov7" -> "deepcam-cn/yolov5-face"
"jinfagang/yolov7" -> "WongKinYiu/yolor"
"jinfagang/yolov7" -> "jizhishutong/YOLOU"
"jinfagang/yolov7" -> "iscyy/yoloair"
"jinfagang/yolov7" -> "ultralytics/ultralytics"
"jinfagang/yolov7" -> "RangiLyu/nanodet"
"jinfagang/yolov7" -> "obss/sahi"
"jinfagang/yolov7" -> "DefTruth/lite.ai.toolkit"
"jinfagang/yolov7" -> "ppogg/YOLOv5-Lite" ["e"=1]
"jinfagang/yolov7" -> "WongKinYiu/ScaledYOLOv4"
"jinfagang/yolov7" -> "ifzhang/ByteTrack" ["e"=1]
"microsoft/mup" -> "facebookresearch/fairscale" ["e"=1]
"microsoft/mup" -> "bigscience-workshop/bigscience" ["e"=1]
"microsoft/mup" -> "microsoft/mutransformers"
"microsoft/mup" -> "HazyResearch/flash-attention" ["e"=1]
"microsoft/mup" -> "libffcv/ffcv"
"microsoft/mup" -> "google-research/long-range-arena" ["e"=1]
"microsoft/mup" -> "recognai/rubrix" ["e"=1]
"microsoft/mup" -> "srush/annotated-s4" ["e"=1]
"microsoft/mup" -> "pytorch/functorch" ["e"=1]
"microsoft/mup" -> "webdataset/webdataset" ["e"=1]
"microsoft/mup" -> "mosaicml/composer"
"microsoft/mup" -> "EleutherAI/lm-evaluation-harness" ["e"=1]
"microsoft/mup" -> "HazyResearch/state-spaces" ["e"=1]
"microsoft/mup" -> "microsoft/LMOps" ["e"=1]
"microsoft/mup" -> "TimDettmers/bitsandbytes" ["e"=1]
"apache/incubator-mxnet" -> "mli/gluon-tutorials-zh"
"apache/incubator-mxnet" -> "onnx/onnx"
"apache/incubator-mxnet" -> "dmlc/gluon-cv"
"apache/incubator-mxnet" -> "deepinsight/insightface"
"apache/incubator-mxnet" -> "facebookresearch/Detectron"
"apache/incubator-mxnet" -> "dmlc/xgboost" ["e"=1]
"apache/incubator-mxnet" -> "dmlc/tvm" ["e"=1]
"apache/incubator-mxnet" -> "Tencent/ncnn"
"apache/incubator-mxnet" -> "pytorch/pytorch"
"apache/incubator-mxnet" -> "zackchase/mxnet-the-straight-dope"
"apache/incubator-mxnet" -> "BVLC/caffe"
"apache/incubator-mxnet" -> "caffe2/caffe2" ["e"=1]
"apache/incubator-mxnet" -> "rbgirshick/py-faster-rcnn"
"apache/incubator-mxnet" -> "lutzroeder/netron"
"apache/incubator-mxnet" -> "msracver/Deformable-ConvNets"
"facebook/fb.resnet.torch" -> "KaimingHe/resnet-1k-layers"
"facebook/fb.resnet.torch" -> "gcr/torch-residual-networks" ["e"=1]
"facebook/fb.resnet.torch" -> "KaimingHe/deep-residual-networks"
"facebook/fb.resnet.torch" -> "facebookresearch/ResNeXt"
"facebook/fb.resnet.torch" -> "szagoruyko/wide-residual-networks"
"facebook/fb.resnet.torch" -> "liuzhuang13/DenseNet"
"facebook/fb.resnet.torch" -> "Element-Research/rnn" ["e"=1]
"facebook/fb.resnet.torch" -> "soumith/convnet-benchmarks" ["e"=1]
"facebook/fb.resnet.torch" -> "yueatsprograms/Stochastic_Depth" ["e"=1]
"facebook/fb.resnet.torch" -> "torchnet/torchnet" ["e"=1]
"facebook/fb.resnet.torch" -> "torch/nn" ["e"=1]
"facebook/fb.resnet.torch" -> "DeepScale/SqueezeNet"
"facebook/fb.resnet.torch" -> "ry/tensorflow-resnet"
"facebook/fb.resnet.torch" -> "soumith/dcgan.torch" ["e"=1]
"facebook/fb.resnet.torch" -> "rbgirshick/fast-rcnn"
"DWCTOD/ICCV2021-Papers-with-Code-Demo" -> "DWCTOD/CVPR2021-Papers-with-Code-Demo"
"DWCTOD/ICCV2021-Papers-with-Code-Demo" -> "DWCTOD/CVPR2022-Papers-with-Code-Demo"
"DWCTOD/ICCV2021-Papers-with-Code-Demo" -> "DrMahdiRezaei/DeepSOCIAL" ["e"=1]
"amusi/ICCV2021-Papers-with-Code" -> "amusi/CVPR2021-Papers-with-Code"
"amusi/ICCV2021-Papers-with-Code" -> "extreme-assistant/ICCV2021-Paper-Code-Interpretation"
"amusi/ICCV2021-Papers-with-Code" -> "amusi/ECCV2022-Papers-with-Code"
"amusi/ICCV2021-Papers-with-Code" -> "amusi/CVPR2022-Papers-with-Code"
"amusi/ICCV2021-Papers-with-Code" -> "amusi/ECCV2020-Code"
"amusi/ICCV2021-Papers-with-Code" -> "dk-liang/Awesome-Visual-Transformer"
"amusi/ICCV2021-Papers-with-Code" -> "extreme-assistant/CVPR2021-Paper-Code-Interpretation"
"amusi/ICCV2021-Papers-with-Code" -> "52CV/CVPR-2021-Papers"
"amusi/ICCV2021-Papers-with-Code" -> "whai362/PVT"
"amusi/ICCV2021-Papers-with-Code" -> "fudan-zvg/SETR"
"amusi/ICCV2021-Papers-with-Code" -> "microsoft/Swin-Transformer"
"amusi/ICCV2021-Papers-with-Code" -> "facebookresearch/MaskFormer"
"amusi/ICCV2021-Papers-with-Code" -> "extreme-assistant/CVPR2022-Paper-Code-Interpretation"
"amusi/ICCV2021-Papers-with-Code" -> "amusi/daily-paper-computer-vision"
"amusi/ICCV2021-Papers-with-Code" -> "fundamentalvision/Deformable-DETR"
"wucng/TensorExpand" -> "GothicAi/Instaboost"
"shouxieai/tensorRT_Pro" -> "shouxieai/learning-cuda-trt"
"shouxieai/tensorRT_Pro" -> "wang-xinyu/tensorrtx"
"shouxieai/tensorRT_Pro" -> "NVIDIA/trt-samples-for-hackathon-cn"
"shouxieai/tensorRT_Pro" -> "jizhishutong/YOLOU"
"shouxieai/tensorRT_Pro" -> "onnx/onnx-tensorrt"
"shouxieai/tensorRT_Pro" -> "NVIDIA-AI-IOT/torch2trt"
"shouxieai/tensorRT_Pro" -> "openppl-public/ppq"
"shouxieai/tensorRT_Pro" -> "open-mmlab/mmdeploy"
"shouxieai/tensorRT_Pro" -> "DefTruth/lite.ai.toolkit"
"shouxieai/tensorRT_Pro" -> "NVIDIA/TensorRT"
"shouxieai/tensorRT_Pro" -> "shouxieai/infer"
"shouxieai/tensorRT_Pro" -> "LitLeo/TensorRT_Tutorial"
"shouxieai/tensorRT_Pro" -> "enazoe/yolo-tensorrt"
"shouxieai/tensorRT_Pro" -> "ppogg/YOLOv5-Lite" ["e"=1]
"shouxieai/tensorRT_Pro" -> "deepcam-cn/yolov5-face"
"kanezaki/pytorch-unsupervised-segmentation" -> "kanezaki/pytorch-unsupervised-segmentation-tip"
"kanezaki/pytorch-unsupervised-segmentation" -> "Yonv1943/Unsupervised-Segmentation"
"kanezaki/pytorch-unsupervised-segmentation" -> "lwchen6309/unsupervised-image-segmentation-by-WNet-with-NormalizedCut"
"kanezaki/pytorch-unsupervised-segmentation" -> "mickaelChen/ReDO"
"kanezaki/pytorch-unsupervised-segmentation" -> "xu-ji/IIC"
"kanezaki/pytorch-unsupervised-segmentation" -> "Andrew-booler/W-Net"
"kanezaki/pytorch-unsupervised-segmentation" -> "wvangansbeke/Unsupervised-Semantic-Segmentation"
"elliotwaite/pytorch-to-javascript-with-onnx-js" -> "torch-js/torch-js"
"elliotwaite/pytorch-to-javascript-with-onnx-js" -> "microsoft/onnxjs"
"elliotwaite/pytorch-to-javascript-with-onnx-js" -> "microsoft/onnxjs-demo"
"PINTO0309/onnx2tf" -> "PINTO0309/openvino2tensorflow"
"PINTO0309/onnx2tf" -> "PINTO0309/simple-onnx-processing-tools"
"OliverRensu/Shunted-Transformer" -> "dingmyu/davit" ["e"=1]
"OliverRensu/Shunted-Transformer" -> "youngwanLEE/MPViT"
"OliverRensu/Shunted-Transformer" -> "ggjy/CMT.pytorch"
"OliverRensu/Shunted-Transformer" -> "raoyongming/GFNet"
"OliverRensu/Shunted-Transformer" -> "moabarar/qna"
"OliverRensu/Shunted-Transformer" -> "YehLi/ImageNetModel" ["e"=1]
"PaddlePaddle/Paddle-Lite" -> "PaddlePaddle/Paddle-Lite-Demo"
"PaddlePaddle/Paddle-Lite" -> "PaddlePaddle/PaddleSlim"
"PaddlePaddle/Paddle-Lite" -> "PaddlePaddle/Serving" ["e"=1]
"PaddlePaddle/Paddle-Lite" -> "PaddlePaddle/X2Paddle"
"PaddlePaddle/Paddle-Lite" -> "alibaba/MNN"
"PaddlePaddle/Paddle-Lite" -> "Tencent/TNN"
"PaddlePaddle/Paddle-Lite" -> "PaddlePaddle/FastDeploy"
"PaddlePaddle/Paddle-Lite" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/Paddle-Lite" -> "PaddlePaddle/models"
"PaddlePaddle/Paddle-Lite" -> "XiaoMi/mace" ["e"=1]
"PaddlePaddle/Paddle-Lite" -> "OAID/Tengine" ["e"=1]
"PaddlePaddle/Paddle-Lite" -> "PaddlePaddle/Paddle"
"PaddlePaddle/Paddle-Lite" -> "Tencent/ncnn"
"PaddlePaddle/Paddle-Lite" -> "PaddlePaddle/PaddleClas"
"PaddlePaddle/Paddle-Lite" -> "huawei-noah/bolt" ["e"=1]
"ncullen93/torchsample" -> "lanpa/tensorboard-pytorch"
"ncullen93/torchsample" -> "pytorch/ignite"
"ncullen93/torchsample" -> "pytorch/tnt"
"ncullen93/torchsample" -> "szagoruyko/functional-zoo"
"ncullen93/torchsample" -> "longcw/faster_rcnn_pytorch"
"ncullen93/torchsample" -> "facebookresearch/visdom"
"ncullen93/torchsample" -> "meetshah1995/pytorch-semseg" ["e"=1]
"ncullen93/torchsample" -> "dnouri/skorch" ["e"=1]
"ncullen93/torchsample" -> "torrvision/crayon"
"ncullen93/torchsample" -> "spro/practical-pytorch" ["e"=1]
"ncullen93/torchsample" -> "sksq96/pytorch-summary"
"ncullen93/torchsample" -> "mdbloice/Augmentor"
"ncullen93/torchsample" -> "znxlwm/pytorch-generative-model-collections" ["e"=1]
"ncullen93/torchsample" -> "ritchieng/the-incredible-pytorch" ["e"=1]
"ncullen93/torchsample" -> "zhanghang1989/PyTorch-Encoding" ["e"=1]
"YunYang1994/TensorFlow2.0-Examples" -> "YunYang1994/tensorflow-yolov3"
"YunYang1994/TensorFlow2.0-Examples" -> "zzh8829/yolov3-tf2"
"YunYang1994/TensorFlow2.0-Examples" -> "wizyoung/YOLOv3_TensorFlow"
"YunYang1994/TensorFlow2.0-Examples" -> "hunglc007/tensorflow-yolov4-tflite"
"YunYang1994/TensorFlow2.0-Examples" -> "Byronnar/tensorflow-serving-yolov3"
"YunYang1994/TensorFlow2.0-Examples" -> "calmisential/Basic_CNNs_TensorFlow2"
"YunYang1994/TensorFlow2.0-Examples" -> "czy36mengfei/tensorflow2_tutorials_chinese" ["e"=1]
"YunYang1994/TensorFlow2.0-Examples" -> "qqwweee/keras-yolo3"
"YunYang1994/TensorFlow2.0-Examples" -> "TrickyGo/Dive-into-DL-TensorFlow2.0" ["e"=1]
"YunYang1994/TensorFlow2.0-Examples" -> "dragen1860/TensorFlow-2.x-Tutorials" ["e"=1]
"YunYang1994/TensorFlow2.0-Examples" -> "calmisential/YOLOv3_TensorFlow2" ["e"=1]
"YunYang1994/TensorFlow2.0-Examples" -> "xuannianz/EfficientDet"
"YunYang1994/TensorFlow2.0-Examples" -> "mystic123/tensorflow-yolo-v3"
"YunYang1994/TensorFlow2.0-Examples" -> "ultralytics/yolov3"
"YunYang1994/TensorFlow2.0-Examples" -> "YunYang1994/CodeFun"
"bojone/infomax" -> "DuaneNielsen/DeepInfomaxPytorch"
"bojone/infomax" -> "rdevon/DIM"
"bojone/infomax" -> "rcalland/deep-INFOMAX"
"PaddlePaddle/AutoDL" -> "PaddlePaddle/Fleet"
"chingyaoc/DCL" -> "joshr17/HCL"
"chingyaoc/DCL" -> "SsnL/align_uniform"
"chingyaoc/DCL" -> "salesforce/PCL"
"chingyaoc/DCL" -> "joshr17/IFM"
"chingyaoc/DCL" -> "VainF/Awesome-Contrastive-Learning"
"chingyaoc/DCL" -> "leftthomas/SimCLR"
"davidtellez/contrastive-predictive-coding" -> "jefflai108/Contrastive-Predictive-Coding-PyTorch"
"davidtellez/contrastive-predictive-coding" -> "flrngel/cpc-tensorflow"
"davidtellez/contrastive-predictive-coding" -> "HobbitLong/CMC"
"davidtellez/contrastive-predictive-coding" -> "Philip-Bachman/amdim-public"
"davidtellez/contrastive-predictive-coding" -> "DuaneNielsen/DeepInfomaxPytorch"
"davidtellez/contrastive-predictive-coding" -> "rdevon/DIM"
"davidtellez/contrastive-predictive-coding" -> "facebookresearch/CPC_audio" ["e"=1]
"davidtellez/contrastive-predictive-coding" -> "ssp573/Contrastive-Predictive-Coding"
"davidtellez/contrastive-predictive-coding" -> "google/revisiting-self-supervised"
"davidtellez/contrastive-predictive-coding" -> "mf1024/Contrastive-Predictive-Coding-for-Image-Recognition-in-PyTorch"
"davidtellez/contrastive-predictive-coding" -> "Spijkervet/contrastive-predictive-coding"
"davidtellez/contrastive-predictive-coding" -> "google-research/simclr"
"davidtellez/contrastive-predictive-coding" -> "davidtellez/contrastive-predictive-coding-images"
"davidtellez/contrastive-predictive-coding" -> "Linear95/CLUB" ["e"=1]
"davidtellez/contrastive-predictive-coding" -> "TengdaHan/DPC" ["e"=1]
"extreme-assistant/CVPR2020-Paper-Code-Interpretation" -> "amusi/CVPR2020-Code"
"extreme-assistant/CVPR2020-Paper-Code-Interpretation" -> "amusi/ECCV2020-Code"
"extreme-assistant/CVPR2020-Paper-Code-Interpretation" -> "extreme-assistant/iccv2019"
"extreme-assistant/CVPR2020-Paper-Code-Interpretation" -> "zhanghang1989/ResNeSt"
"extreme-assistant/CVPR2020-Paper-Code-Interpretation" -> "amusi/daily-paper-computer-vision"
"extreme-assistant/CVPR2020-Paper-Code-Interpretation" -> "Sophia-11/Awesome-CVPR-Paper"
"extreme-assistant/CVPR2020-Paper-Code-Interpretation" -> "huawei-noah/ghostnet"
"extreme-assistant/CVPR2020-Paper-Code-Interpretation" -> "aim-uofa/AdelaiDet"
"extreme-assistant/CVPR2020-Paper-Code-Interpretation" -> "junfu1115/DANet" ["e"=1]
"extreme-assistant/CVPR2020-Paper-Code-Interpretation" -> "AlexHex7/Non-local_pytorch" ["e"=1]
"extreme-assistant/CVPR2020-Paper-Code-Interpretation" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"extreme-assistant/CVPR2020-Paper-Code-Interpretation" -> "sfzhang15/ATSS"
"extreme-assistant/CVPR2020-Paper-Code-Interpretation" -> "Tramac/awesome-semantic-segmentation-pytorch" ["e"=1]
"extreme-assistant/CVPR2020-Paper-Code-Interpretation" -> "tianzhi0549/FCOS"
"extreme-assistant/CVPR2020-Paper-Code-Interpretation" -> "amusi/awesome-object-detection"
"flrngel/cpc-tensorflow" -> "ssp573/Contrastive-Predictive-Coding"
"jason718/awesome-self-supervised-learning" -> "facebookresearch/moco"
"jason718/awesome-self-supervised-learning" -> "google-research/simclr"
"jason718/awesome-self-supervised-learning" -> "open-mmlab/OpenSelfSup"
"jason718/awesome-self-supervised-learning" -> "HobbitLong/PyContrast"
"jason718/awesome-self-supervised-learning" -> "facebookresearch/vissl"
"jason718/awesome-self-supervised-learning" -> "yassouali/awesome-semi-supervised-learning" ["e"=1]
"jason718/awesome-self-supervised-learning" -> "zhaoxin94/awesome-domain-adaptation" ["e"=1]
"jason718/awesome-self-supervised-learning" -> "lucidrains/vit-pytorch"
"jason718/awesome-self-supervised-learning" -> "subeeshvasu/Awesome-Learning-with-Label-Noise" ["e"=1]
"jason718/awesome-self-supervised-learning" -> "HobbitLong/CMC"
"jason718/awesome-self-supervised-learning" -> "pliang279/awesome-multimodal-ml" ["e"=1]
"jason718/awesome-self-supervised-learning" -> "dk-liang/Awesome-Visual-Transformer"
"jason718/awesome-self-supervised-learning" -> "HobbitLong/SupContrast"
"jason718/awesome-self-supervised-learning" -> "rwightman/pytorch-image-models"
"jason718/awesome-self-supervised-learning" -> "facebookresearch/swav"
"jcjohnson/pytorch-examples" -> "spro/practical-pytorch" ["e"=1]
"jcjohnson/pytorch-examples" -> "pytorch/examples"
"jcjohnson/pytorch-examples" -> "ritchieng/the-incredible-pytorch" ["e"=1]
"jcjohnson/pytorch-examples" -> "yunjey/pytorch-tutorial" ["e"=1]
"jcjohnson/pytorch-examples" -> "bharathgs/Awesome-pytorch-list" ["e"=1]
"jcjohnson/pytorch-examples" -> "pytorch/tutorials"
"jcjohnson/pytorch-examples" -> "hunkim/PyTorchZeroToAll" ["e"=1]
"jcjohnson/pytorch-examples" -> "soumith/ganhacks" ["e"=1]
"jcjohnson/pytorch-examples" -> "MorvanZhou/PyTorch-Tutorial" ["e"=1]
"jcjohnson/pytorch-examples" -> "facebookresearch/visdom"
"jcjohnson/pytorch-examples" -> "lanpa/tensorboard-pytorch"
"jcjohnson/pytorch-examples" -> "chenyuntc/pytorch-book" ["e"=1]
"jcjohnson/pytorch-examples" -> "martinarjovsky/WassersteinGAN" ["e"=1]
"jcjohnson/pytorch-examples" -> "wiseodd/generative-models" ["e"=1]
"jcjohnson/pytorch-examples" -> "vdumoulin/conv_arithmetic"
"jeonsworld/ViT-pytorch" -> "facebookresearch/deit"
"jeonsworld/ViT-pytorch" -> "google-research/vision_transformer"
"jeonsworld/ViT-pytorch" -> "yitu-opensource/T2T-ViT"
"jeonsworld/ViT-pytorch" -> "lucidrains/vit-pytorch"
"jeonsworld/ViT-pytorch" -> "lukemelas/PyTorch-Pretrained-ViT"
"jeonsworld/ViT-pytorch" -> "dk-liang/Awesome-Visual-Transformer"
"jeonsworld/ViT-pytorch" -> "jacobgil/vit-explain"
"jeonsworld/ViT-pytorch" -> "fudan-zvg/SETR"
"jeonsworld/ViT-pytorch" -> "hila-chefer/Transformer-Explainability"
"jeonsworld/ViT-pytorch" -> "asyml/vision-transformer-pytorch"
"jeonsworld/ViT-pytorch" -> "Beckschen/TransUNet" ["e"=1]
"jeonsworld/ViT-pytorch" -> "TACJu/TransFG" ["e"=1]
"jeonsworld/ViT-pytorch" -> "microsoft/Swin-Transformer"
"jeonsworld/ViT-pytorch" -> "gupta-abhay/ViT"
"jeonsworld/ViT-pytorch" -> "whai362/PVT"
"longcw/faster_rcnn_pytorch" -> "ruotianluo/pytorch-faster-rcnn"
"longcw/faster_rcnn_pytorch" -> "jwyang/faster-rcnn.pytorch"
"longcw/faster_rcnn_pytorch" -> "longcw/yolo2-pytorch"
"longcw/faster_rcnn_pytorch" -> "roytseng-tw/Detectron.pytorch"
"longcw/faster_rcnn_pytorch" -> "chenyuntc/simple-faster-rcnn-pytorch"
"longcw/faster_rcnn_pytorch" -> "amdegroot/ssd.pytorch"
"longcw/faster_rcnn_pytorch" -> "felixgwu/mask_rcnn_pytorch"
"longcw/faster_rcnn_pytorch" -> "marvis/pytorch-yolo2"
"longcw/faster_rcnn_pytorch" -> "jwyang/fpn.pytorch"
"longcw/faster_rcnn_pytorch" -> "rbgirshick/py-faster-rcnn"
"longcw/faster_rcnn_pytorch" -> "lanpa/tensorboard-pytorch"
"longcw/faster_rcnn_pytorch" -> "oeway/pytorch-deform-conv"
"longcw/faster_rcnn_pytorch" -> "kuangliu/pytorch-retinanet"
"longcw/faster_rcnn_pytorch" -> "PureDiors/pytorch_RFCN"
"longcw/faster_rcnn_pytorch" -> "msracver/Deformable-ConvNets"
"lucidrains/byol-pytorch" -> "sthalles/PyTorch-BYOL"
"lucidrains/byol-pytorch" -> "facebookresearch/moco"
"lucidrains/byol-pytorch" -> "facebookresearch/swav"
"lucidrains/byol-pytorch" -> "PatrickHua/SimSiam"
"lucidrains/byol-pytorch" -> "HobbitLong/PyContrast"
"lucidrains/byol-pytorch" -> "open-mmlab/OpenSelfSup"
"lucidrains/byol-pytorch" -> "google-research/simclr"
"lucidrains/byol-pytorch" -> "facebookresearch/vissl"
"lucidrains/byol-pytorch" -> "lucidrains/pixel-level-contrastive-learning"
"lucidrains/byol-pytorch" -> "facebookresearch/simsiam"
"lucidrains/byol-pytorch" -> "sthalles/SimCLR"
"lucidrains/byol-pytorch" -> "HobbitLong/SupContrast"
"lucidrains/byol-pytorch" -> "facebookresearch/barlowtwins"
"lucidrains/byol-pytorch" -> "HobbitLong/CMC"
"lucidrains/byol-pytorch" -> "facebookresearch/moco-v3"
"meliketoy/wide-resnet.pytorch" -> "xternalz/WideResNet-pytorch"
"meliketoy/wide-resnet.pytorch" -> "szagoruyko/wide-residual-networks"
"meliketoy/wide-resnet.pytorch" -> "akamaster/pytorch_resnet_cifar10"
"meliketoy/wide-resnet.pytorch" -> "junyuseu/pytorch-cifar-models"
"meliketoy/wide-resnet.pytorch" -> "bearpaw/pytorch-classification"
"meliketoy/wide-resnet.pytorch" -> "uoguelph-mlrg/Cutout" ["e"=1]
"meliketoy/wide-resnet.pytorch" -> "D-X-Y/ResNeXt-DenseNet"
"meliketoy/wide-resnet.pytorch" -> "hendrycks/robustness" ["e"=1]
"meliketoy/wide-resnet.pytorch" -> "fra31/auto-attack" ["e"=1]
"meliketoy/wide-resnet.pytorch" -> "facebookresearch/odin" ["e"=1]
"meliketoy/wide-resnet.pytorch" -> "leftthomas/SimCLR"
"meliketoy/wide-resnet.pytorch" -> "andreasveit/densenet-pytorch"
"meliketoy/wide-resnet.pytorch" -> "kuangliu/pytorch-cifar"
"meliketoy/wide-resnet.pytorch" -> "isht7/pytorch-deeplab-resnet" ["e"=1]
"rdevon/DIM" -> "DuaneNielsen/DeepInfomaxPytorch"
"rdevon/DIM" -> "Philip-Bachman/amdim-public"
"rdevon/DIM" -> "sungyubkim/MINE-Mutual-Information-Neural-Estimation-" ["e"=1]
"rdevon/DIM" -> "MasanoriYamada/Mine_pytorch" ["e"=1]
"rdevon/DIM" -> "HobbitLong/CMC"
"rdevon/DIM" -> "fanyun-sun/InfoGraph" ["e"=1]
"rdevon/DIM" -> "rdevon/cortex"
"rdevon/DIM" -> "bojone/infomax"
"rdevon/DIM" -> "PetarV-/DGI" ["e"=1]
"rdevon/DIM" -> "zhirongw/lemniscate.pytorch"
"rdevon/DIM" -> "Linear95/CLUB" ["e"=1]
"rdevon/DIM" -> "jefflai108/Contrastive-Predictive-Coding-PyTorch"
"rdevon/DIM" -> "HobbitLong/PyContrast"
"rdevon/DIM" -> "davidtellez/contrastive-predictive-coding"
"rdevon/DIM" -> "facebookresearch/swav"
"utkuozbulak/pytorch-custom-dataset-examples" -> "ufoym/imbalanced-dataset-sampler" ["e"=1]
"utkuozbulak/pytorch-custom-dataset-examples" -> "victoresque/pytorch-template"
"utkuozbulak/pytorch-custom-dataset-examples" -> "waleedka/hiddenlayer"
"utkuozbulak/pytorch-custom-dataset-examples" -> "kevinzakka/hypersearch" ["e"=1]
"utkuozbulak/pytorch-custom-dataset-examples" -> "sksq96/pytorch-summary"
"utkuozbulak/pytorch-custom-dataset-examples" -> "ugent-korea/pytorch-unet-segmentation" ["e"=1]
"utkuozbulak/pytorch-custom-dataset-examples" -> "hunkim/PyTorchZeroToAll" ["e"=1]
"utkuozbulak/pytorch-custom-dataset-examples" -> "mortezamg63/Accessing-and-modifying-different-layers-of-a-pretrained-model-in-pytorch" ["e"=1]
"utkuozbulak/pytorch-custom-dataset-examples" -> "szagoruyko/pytorchviz"
"utkuozbulak/pytorch-custom-dataset-examples" -> "pytorch/ignite"
"utkuozbulak/pytorch-custom-dataset-examples" -> "sgrvinod/a-PyTorch-Tutorial-to-Object-Detection"
"utkuozbulak/pytorch-custom-dataset-examples" -> "jcjohnson/pytorch-examples"
"utkuozbulak/pytorch-custom-dataset-examples" -> "Atcold/pytorch-Deep-Learning-Minicourse" ["e"=1]
"utkuozbulak/pytorch-custom-dataset-examples" -> "moemen95/Pytorch-Project-Template"
"utkuozbulak/pytorch-custom-dataset-examples" -> "usuyama/pytorch-unet" ["e"=1]
"DefTruth/lite.ai.toolkit" -> "PaddlePaddle/FastDeploy"
"DefTruth/lite.ai.toolkit" -> "deepcam-cn/yolov5-face"
"DefTruth/lite.ai.toolkit" -> "wang-xinyu/tensorrtx"
"DefTruth/lite.ai.toolkit" -> "RangiLyu/nanodet"
"DefTruth/lite.ai.toolkit" -> "daquexian/onnx-simplifier"
"DefTruth/lite.ai.toolkit" -> "open-mmlab/mmdeploy"
"DefTruth/lite.ai.toolkit" -> "shouxieai/tensorRT_Pro"
"DefTruth/lite.ai.toolkit" -> "jinfagang/yolov7"
"DefTruth/lite.ai.toolkit" -> "meituan/YOLOv6"
"DefTruth/lite.ai.toolkit" -> "Tencent/TNN"
"DefTruth/lite.ai.toolkit" -> "ppogg/YOLOv5-Lite" ["e"=1]
"DefTruth/lite.ai.toolkit" -> "Megvii-BaseDetection/YOLOX"
"DefTruth/lite.ai.toolkit" -> "jizhishutong/YOLOU"
"DefTruth/lite.ai.toolkit" -> "alibaba/MNN"
"DefTruth/lite.ai.toolkit" -> "cmdbug/YOLOv5_NCNN" ["e"=1]
"Oneflow-Inc/oneflow" -> "bytedance/byteps" ["e"=1]
"Oneflow-Inc/oneflow" -> "Jittor/jittor"
"Oneflow-Inc/oneflow" -> "mindspore-ai/mindspore" ["e"=1]
"Oneflow-Inc/oneflow" -> "NVIDIA/TensorRT"
"Oneflow-Inc/oneflow" -> "alibaba/MNN"
"Oneflow-Inc/oneflow" -> "Tencent/TNN"
"Oneflow-Inc/oneflow" -> "merrymercy/awesome-tensor-compilers" ["e"=1]
"Oneflow-Inc/oneflow" -> "NVIDIA/cutlass" ["e"=1]
"Oneflow-Inc/oneflow" -> "apache/tvm" ["e"=1]
"Oneflow-Inc/oneflow" -> "NVIDIA/Megatron-LM" ["e"=1]
"Oneflow-Inc/oneflow" -> "horovod/horovod"
"Oneflow-Inc/oneflow" -> "MegEngine/MegEngine"
"Oneflow-Inc/oneflow" -> "alibaba/BladeDISC" ["e"=1]
"Oneflow-Inc/oneflow" -> "bytedance/lightseq" ["e"=1]
"Oneflow-Inc/oneflow" -> "NVIDIA/FasterTransformer" ["e"=1]
"Tencent/TNN" -> "alibaba/MNN"
"Tencent/TNN" -> "Tencent/ncnn"
"Tencent/TNN" -> "OAID/Tengine" ["e"=1]
"Tencent/TNN" -> "daquexian/onnx-simplifier"
"Tencent/TNN" -> "XiaoMi/mace" ["e"=1]
"Tencent/TNN" -> "RangiLyu/nanodet"
"Tencent/TNN" -> "NVIDIA/TensorRT"
"Tencent/TNN" -> "huawei-noah/bolt" ["e"=1]
"Tencent/TNN" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB"
"Tencent/TNN" -> "nihui/opencv-mobile" ["e"=1]
"Tencent/TNN" -> "openppl-public/ppl.nn" ["e"=1]
"Tencent/TNN" -> "PaddlePaddle/Paddle-Lite"
"Tencent/TNN" -> "DefTruth/lite.ai.toolkit"
"Tencent/TNN" -> "Oneflow-Inc/oneflow"
"Tencent/TNN" -> "Tencent/PocketFlow" ["e"=1]
"Tongcheng/DN_CaffeScript" -> "shicai/DenseNet-Caffe"
"Tongcheng/DN_CaffeScript" -> "liuzhuang13/DenseNetCaffe"
"Tongcheng/DN_CaffeScript" -> "Tongcheng/caffe"
"Tongcheng/DN_CaffeScript" -> "knsong/caffe-mt"
"calmisential/TensorFlow2.0_ResNet" -> "calmisential/Basic_CNNs_TensorFlow2"
"calmisential/TensorFlow2.0_ResNet" -> "taki0112/ResNet-Tensorflow"
"calmisential/TensorFlow2.0_ResNet" -> "Apm5/ImageNet_ResNet_Tensorflow2.0"
"calmisential/TensorFlow2.0_ResNet" -> "calmisential/TensorFlow2.0_SSD" ["e"=1]
"liuzhuang13/DenseNetCaffe" -> "shicai/DenseNet-Caffe"
"liuzhuang13/DenseNetCaffe" -> "Tongcheng/DN_CaffeScript"
"liuzhuang13/DenseNetCaffe" -> "farmingyard/caffe-mobilenet"
"liuzhuang13/DenseNetCaffe" -> "twtygqyy/caffe-augmentation"
"liuzhuang13/DenseNetCaffe" -> "farmingyard/ShuffleNet"
"liuzhuang13/DenseNetCaffe" -> "sciencefans/Focal-Loss"
"liuzhuang13/DenseNetCaffe" -> "camel007/Caffe-ShuffleNet"
"liuzhuang13/DenseNetCaffe" -> "lim0606/caffe-googlenet-bn"
"liuzhuang13/DenseNetCaffe" -> "szq0214/DSOD"
"liuzhuang13/DenseNetCaffe" -> "shicai/MobileNet-Caffe"
"liuzhuang13/DenseNetCaffe" -> "soeaver/caffe-model"
"liuzhuang13/DenseNetCaffe" -> "terrychenism/ResNeXt"
"onnx/onnx-tensorflow" -> "onnx/tensorflow-onnx"
"onnx/onnx-tensorflow" -> "daquexian/onnx-simplifier"
"onnx/onnx-tensorflow" -> "onnx/tutorials"
"onnx/onnx-tensorflow" -> "onnx/onnx-tensorrt"
"onnx/onnx-tensorflow" -> "ysh329/deep-learning-model-convertor"
"onnx/onnx-tensorflow" -> "onnx/onnx"
"onnx/onnx-tensorflow" -> "onnx/onnxmltools"
"onnx/onnx-tensorflow" -> "MTlab/onnx2caffe"
"onnx/onnx-tensorflow" -> "cinastanbean/pytorch-onnx-tensorflow-pb"
"onnx/onnx-tensorflow" -> "NervanaSystems/distiller" ["e"=1]
"onnx/onnx-tensorflow" -> "microsoft/MMdnn"
"onnx/onnx-tensorflow" -> "NVIDIA-AI-IOT/torch2trt"
"onnx/onnx-tensorflow" -> "Tencent/TNN"
"onnx/onnx-tensorflow" -> "tensorflow/tensorrt" ["e"=1]
"onnx/onnx-tensorflow" -> "pytorch/tvm" ["e"=1]
"open-mmlab/mmclassification" -> "open-mmlab/mmsegmentation"
"open-mmlab/mmclassification" -> "open-mmlab/mmcv"
"open-mmlab/mmclassification" -> "open-mmlab/mmdeploy"
"open-mmlab/mmclassification" -> "open-mmlab/mmrazor"
"open-mmlab/mmclassification" -> "open-mmlab/mmyolo"
"open-mmlab/mmclassification" -> "open-mmlab/mmfewshot"
"open-mmlab/mmclassification" -> "open-mmlab/mmdetection3d" ["e"=1]
"open-mmlab/mmclassification" -> "open-mmlab/mmgeneration"
"open-mmlab/mmclassification" -> "open-mmlab/mmselfsup"
"open-mmlab/mmclassification" -> "open-mmlab/mmtracking" ["e"=1]
"open-mmlab/mmclassification" -> "open-mmlab/mmocr" ["e"=1]
"open-mmlab/mmclassification" -> "open-mmlab/mmaction2" ["e"=1]
"open-mmlab/mmclassification" -> "open-mmlab/mmdetection"
"open-mmlab/mmclassification" -> "open-mmlab/mmpose" ["e"=1]
"open-mmlab/mmclassification" -> "open-mmlab/mmrotate" ["e"=1]
"open-mmlab/mmdeploy" -> "open-mmlab/mmrazor"
"open-mmlab/mmdeploy" -> "open-mmlab/mmyolo"
"open-mmlab/mmdeploy" -> "open-mmlab/mmclassification"
"open-mmlab/mmdeploy" -> "open-mmlab/mmfewshot"
"open-mmlab/mmdeploy" -> "open-mmlab/mmflow"
"open-mmlab/mmdeploy" -> "open-mmlab/mmrotate" ["e"=1]
"open-mmlab/mmdeploy" -> "open-mmlab/mmselfsup"
"open-mmlab/mmdeploy" -> "open-mmlab/mmcv"
"open-mmlab/mmdeploy" -> "open-mmlab/mmengine"
"open-mmlab/mmdeploy" -> "grimoire/mmdetection-to-tensorrt"
"open-mmlab/mmdeploy" -> "openppl-public/ppl.nn" ["e"=1]
"open-mmlab/mmdeploy" -> "open-mmlab/mmdetection3d" ["e"=1]
"open-mmlab/mmdeploy" -> "open-mmlab/mim"
"open-mmlab/mmdeploy" -> "openppl-public/ppq"
"open-mmlab/mmdeploy" -> "open-mmlab/mmocr" ["e"=1]
"openvinotoolkit/openvino" -> "openvinotoolkit/open_model_zoo"
"openvinotoolkit/openvino" -> "oneapi-src/oneDNN" ["e"=1]
"openvinotoolkit/openvino" -> "NVIDIA/TensorRT"
"openvinotoolkit/openvino" -> "openvinotoolkit/openvino_notebooks"
"openvinotoolkit/openvino" -> "microsoft/onnxruntime"
"openvinotoolkit/openvino" -> "daquexian/onnx-simplifier"
"openvinotoolkit/openvino" -> "OAID/Tengine" ["e"=1]
"openvinotoolkit/openvino" -> "Tencent/TNN"
"openvinotoolkit/openvino" -> "onnx/onnx-tensorrt"
"openvinotoolkit/openvino" -> "openvinotoolkit/nncf" ["e"=1]
"openvinotoolkit/openvino" -> "apache/tvm" ["e"=1]
"openvinotoolkit/openvino" -> "MacgyverLin/GLSLRayMarching" ["e"=1]
"openvinotoolkit/openvino" -> "alibaba/MNN"
"openvinotoolkit/openvino" -> "seacms-net/CMS" ["e"=1]
"openvinotoolkit/openvino" -> "triton-inference-server/server"
"pengzhiliang/MAE-pytorch" -> "facebookresearch/mae"
"pengzhiliang/MAE-pytorch" -> "microsoft/Swin-Transformer"
"pengzhiliang/MAE-pytorch" -> "facebookresearch/moco"
"pengzhiliang/MAE-pytorch" -> "microsoft/SimMIM"
"pengzhiliang/MAE-pytorch" -> "lucidrains/vit-pytorch"
"pengzhiliang/MAE-pytorch" -> "facebookresearch/ConvNeXt"
"pengzhiliang/MAE-pytorch" -> "facebookresearch/deit"
"pengzhiliang/MAE-pytorch" -> "facebookresearch/moco-v3"
"pengzhiliang/MAE-pytorch" -> "facebookresearch/dino"
"pengzhiliang/MAE-pytorch" -> "dk-liang/Awesome-Visual-Transformer"
"pengzhiliang/MAE-pytorch" -> "google-research/vision_transformer"
"pengzhiliang/MAE-pytorch" -> "FlyEgle/MAE-pytorch"
"pengzhiliang/MAE-pytorch" -> "sail-sg/poolformer"
"pengzhiliang/MAE-pytorch" -> "microsoft/unilm"
"pengzhiliang/MAE-pytorch" -> "google-research/simclr"
"seetaface/SeetaFaceEngine" -> "kpzhang93/MTCNN_face_detection_alignment"
"seetaface/SeetaFaceEngine" -> "seetaface/SeetaFaceEngine2" ["e"=1]
"seetaface/SeetaFaceEngine" -> "ShiqiYu/libfacedetection"
"seetaface/SeetaFaceEngine" -> "ydwen/caffe-face" ["e"=1]
"seetaface/SeetaFaceEngine" -> "TadasBaltrusaitis/OpenFace"
"seetaface/SeetaFaceEngine" -> "cmusatyalab/openface"
"seetaface/SeetaFaceEngine" -> "davidsandberg/facenet"
"seetaface/SeetaFaceEngine" -> "wy1iu/sphereface" ["e"=1]
"seetaface/SeetaFaceEngine" -> "RiweiChen/DeepFace" ["e"=1]
"seetaface/SeetaFaceEngine" -> "seetafaceengine/SeetaFace2" ["e"=1]
"seetaface/SeetaFaceEngine" -> "weiliu89/caffe"
"seetaface/SeetaFaceEngine" -> "davisking/dlib"
"seetaface/SeetaFaceEngine" -> "deepinsight/insightface"
"seetaface/SeetaFaceEngine" -> "liuruoze/EasyPR" ["e"=1]
"seetaface/SeetaFaceEngine" -> "caffe2/caffe2" ["e"=1]
"xuannianz/EfficientDet" -> "toandaominh1997/EfficientDet.Pytorch"
"xuannianz/EfficientDet" -> "qubvel/efficientnet"
"xuannianz/EfficientDet" -> "google/automl"
"xuannianz/EfficientDet" -> "signatrix/efficientdet"
"xuannianz/EfficientDet" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"xuannianz/EfficientDet" -> "rwightman/efficientdet-pytorch"
"xuannianz/EfficientDet" -> "hunglc007/tensorflow-yolov4-tflite"
"xuannianz/EfficientDet" -> "fizyr/keras-retinanet"
"xuannianz/EfficientDet" -> "ruinmessi/ASFF"
"xuannianz/EfficientDet" -> "xingyizhou/CenterNet"
"xuannianz/EfficientDet" -> "lukemelas/EfficientNet-PyTorch"
"xuannianz/EfficientDet" -> "WongKinYiu/CrossStagePartialNetworks"
"xuannianz/EfficientDet" -> "sfzhang15/ATSS"
"xuannianz/EfficientDet" -> "see--/keras-centernet" ["e"=1]
"xuannianz/EfficientDet" -> "Duankaiwen/CenterNet"
"yeahkun/caffe-yolo" -> "xingwangsfu/caffe-yolo"
"yeahkun/caffe-yolo" -> "gklz1982/caffe-yolov2"
"yeahkun/caffe-yolo" -> "Banus/caffe-yolo"
"yeahkun/caffe-yolo" -> "choasup/caffe-yolo9000"
"yeahkun/caffe-yolo" -> "choasUp/caffe-yolo9000"
"yeahkun/caffe-yolo" -> "eric612/Caffe-YOLOv3-Windows"
"yeahkun/caffe-yolo" -> "karta0807913/caffe-yolo-9000"
"yeahkun/caffe-yolo" -> "hojel/caffe-yolo-model"
"yeahkun/caffe-yolo" -> "marvis/pytorch-caffe-darknet-convert"
"yeahkun/caffe-yolo" -> "camel007/Caffe-ShuffleNet"
"yeahkun/caffe-yolo" -> "pmgysel/caffe" ["e"=1]
"yeahkun/caffe-yolo" -> "farmingyard/caffe-mobilenet"
"yeahkun/caffe-yolo" -> "camel007/caffe-yolo-face-detection"
"yeahkun/caffe-yolo" -> "yonghenglh6/DepthwiseConvolution"
"zhiqwang/yolov5-rt-stack" -> "jizhishutong/YOLOU"
"zhiqwang/yolov5-rt-stack" -> "openppl-public/ppq"
"zhiqwang/yolov5-rt-stack" -> "wdhao/tensorrtCV" ["e"=1]
"zhiqwang/yolov5-rt-stack" -> "enazoe/yolo-tensorrt"
"zhiqwang/yolov5-rt-stack" -> "Syencil/mobile-yolov5-pruning-distillation" ["e"=1]
"zhiqwang/yolov5-rt-stack" -> "Syencil/tensorRT"
"zhiqwang/yolov5-rt-stack" -> "linghu8812/tensorrt_inference"
"zhiqwang/yolov5-rt-stack" -> "midasklr/yolov5prune" ["e"=1]
"zhiqwang/yolov5-rt-stack" -> "yasenh/libtorch-yolov5" ["e"=1]
"zhiqwang/yolov5-rt-stack" -> "triple-Mu/YOLOv8-TensorRT"
"zhiqwang/yolov5-rt-stack" -> "ZJU-lishuang/yolov5_prune" ["e"=1]
"zhiqwang/yolov5-rt-stack" -> "itsnine/yolov5-onnxruntime" ["e"=1]
"zhiqwang/yolov5-rt-stack" -> "ppogg/YOLOv5-Lite" ["e"=1]
"zhiqwang/yolov5-rt-stack" -> "deepcam-cn/yolov5-face"
"zhiqwang/yolov5-rt-stack" -> "WongKinYiu/ScaledYOLOv4"
"ShuangXieIrene/ssds.pytorch" -> "lzx1413/PytorchSSD"
"ShuangXieIrene/ssds.pytorch" -> "ruinmessi/RFBNet"
"ShuangXieIrene/ssds.pytorch" -> "qfgaohao/pytorch-ssd"
"ShuangXieIrene/ssds.pytorch" -> "shaoshengsong/MobileNetV3-SSD"
"ShuangXieIrene/ssds.pytorch" -> "lufficc/SSD"
"ShuangXieIrene/ssds.pytorch" -> "marvis/pytorch-yolo2"
"ShuangXieIrene/ssds.pytorch" -> "xingyizhou/ExtremeNet"
"ShuangXieIrene/ssds.pytorch" -> "uoip/SSD-variants"
"ShuangXieIrene/ssds.pytorch" -> "amdegroot/ssd.pytorch"
"ShuangXieIrene/ssds.pytorch" -> "kuangliu/torchcv"
"ShuangXieIrene/ssds.pytorch" -> "sfzhang15/RefineDet"
"ShuangXieIrene/ssds.pytorch" -> "Stinky-Tofu/Stronger-yolo"
"ShuangXieIrene/ssds.pytorch" -> "BobLiu20/YOLOv3_PyTorch"
"ShuangXieIrene/ssds.pytorch" -> "marvis/pytorch-yolo3"
"ShuangXieIrene/ssds.pytorch" -> "jinfagang/ssds_pytorch"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "ayooshkathuria/pytorch-yolo-v3"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "eriklindernoren/PyTorch-YOLOv3"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "ultralytics/yolov3"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "amdegroot/ssd.pytorch"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "princeton-vl/CornerNet"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "longcw/yolo2-pytorch"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "qqwweee/keras-yolo3"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "amusi/awesome-object-detection"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "princeton-vl/CornerNet-Lite"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "jwyang/faster-rcnn.pytorch"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "chenyuntc/simple-faster-rcnn-pytorch"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "tianzhi0549/FCOS"
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" -> "BobLiu20/YOLOv3_PyTorch"
"ayooshkathuria/pytorch-yolo-v3" -> "ayooshkathuria/YOLO_v3_tutorial_from_scratch"
"ayooshkathuria/pytorch-yolo-v3" -> "eriklindernoren/PyTorch-YOLOv3"
"ayooshkathuria/pytorch-yolo-v3" -> "ultralytics/yolov3"
"ayooshkathuria/pytorch-yolo-v3" -> "amdegroot/ssd.pytorch"
"ayooshkathuria/pytorch-yolo-v3" -> "longcw/yolo2-pytorch"
"ayooshkathuria/pytorch-yolo-v3" -> "jwyang/faster-rcnn.pytorch"
"ayooshkathuria/pytorch-yolo-v3" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"ayooshkathuria/pytorch-yolo-v3" -> "qqwweee/keras-yolo3"
"ayooshkathuria/pytorch-yolo-v3" -> "roytseng-tw/Detectron.pytorch"
"ayooshkathuria/pytorch-yolo-v3" -> "facebookresearch/maskrcnn-benchmark"
"ayooshkathuria/pytorch-yolo-v3" -> "xingyizhou/CenterNet"
"ayooshkathuria/pytorch-yolo-v3" -> "marvis/pytorch-yolo2"
"ayooshkathuria/pytorch-yolo-v3" -> "amusi/awesome-object-detection"
"ayooshkathuria/pytorch-yolo-v3" -> "princeton-vl/CornerNet-Lite"
"ayooshkathuria/pytorch-yolo-v3" -> "BobLiu20/YOLOv3_PyTorch"
"dk-liang/Awesome-Visual-Transformer" -> "DirtyHarryLYL/Transformer-in-Vision"
"dk-liang/Awesome-Visual-Transformer" -> "lucidrains/vit-pytorch"
"dk-liang/Awesome-Visual-Transformer" -> "microsoft/Swin-Transformer"
"dk-liang/Awesome-Visual-Transformer" -> "facebookresearch/deit"
"dk-liang/Awesome-Visual-Transformer" -> "google-research/vision_transformer"
"dk-liang/Awesome-Visual-Transformer" -> "fundamentalvision/Deformable-DETR"
"dk-liang/Awesome-Visual-Transformer" -> "amusi/CVPR2021-Papers-with-Code"
"dk-liang/Awesome-Visual-Transformer" -> "yitu-opensource/T2T-ViT"
"dk-liang/Awesome-Visual-Transformer" -> "cmhungsteve/Awesome-Transformer-Attention"
"dk-liang/Awesome-Visual-Transformer" -> "whai362/PVT"
"dk-liang/Awesome-Visual-Transformer" -> "facebookresearch/ConvNeXt"
"dk-liang/Awesome-Visual-Transformer" -> "jason718/awesome-self-supervised-learning"
"dk-liang/Awesome-Visual-Transformer" -> "facebookresearch/mae"
"dk-liang/Awesome-Visual-Transformer" -> "facebookresearch/detr"
"dk-liang/Awesome-Visual-Transformer" -> "jeonsworld/ViT-pytorch"
"kuangliu/pytorch-retinanet" -> "c0nn3r/RetinaNet"
"kuangliu/pytorch-retinanet" -> "yhenon/pytorch-retinanet"
"kuangliu/pytorch-retinanet" -> "longcw/yolo2-pytorch"
"kuangliu/pytorch-retinanet" -> "marvis/pytorch-yolo2"
"kuangliu/pytorch-retinanet" -> "jwyang/fpn.pytorch"
"kuangliu/pytorch-retinanet" -> "ruotianluo/pytorch-faster-rcnn"
"kuangliu/pytorch-retinanet" -> "longcw/faster_rcnn_pytorch"
"kuangliu/pytorch-retinanet" -> "roytseng-tw/Detectron.pytorch"
"kuangliu/pytorch-retinanet" -> "amdegroot/ssd.pytorch"
"kuangliu/pytorch-retinanet" -> "ruinmessi/RFBNet"
"kuangliu/pytorch-retinanet" -> "kuangliu/torchcv"
"kuangliu/pytorch-retinanet" -> "lzx1413/PytorchSSD"
"kuangliu/pytorch-retinanet" -> "kuangliu/pytorch-fpn"
"kuangliu/pytorch-retinanet" -> "ignacio-rocco/detectorch"
"kuangliu/pytorch-retinanet" -> "princeton-vl/CornerNet"
"rafaelpadilla/Object-Detection-Metrics" -> "Cartucho/mAP"
"rafaelpadilla/Object-Detection-Metrics" -> "amusi/awesome-object-detection"
"rafaelpadilla/Object-Detection-Metrics" -> "hoya012/deep_learning_object_detection"
"rafaelpadilla/Object-Detection-Metrics" -> "xingyizhou/CenterNet"
"rafaelpadilla/Object-Detection-Metrics" -> "rafaelpadilla/review_object_detection_metrics"
"rafaelpadilla/Object-Detection-Metrics" -> "eriklindernoren/PyTorch-YOLOv3"
"rafaelpadilla/Object-Detection-Metrics" -> "open-mmlab/mmdetection"
"rafaelpadilla/Object-Detection-Metrics" -> "ultralytics/yolov3"
"rafaelpadilla/Object-Detection-Metrics" -> "facebookresearch/maskrcnn-benchmark"
"rafaelpadilla/Object-Detection-Metrics" -> "tianzhi0549/FCOS"
"rafaelpadilla/Object-Detection-Metrics" -> "jwyang/faster-rcnn.pytorch"
"rafaelpadilla/Object-Detection-Metrics" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"rafaelpadilla/Object-Detection-Metrics" -> "TuSimple/simpledet"
"rafaelpadilla/Object-Detection-Metrics" -> "aleju/imgaug"
"rafaelpadilla/Object-Detection-Metrics" -> "cocodataset/cocoapi"
"tianzhi0549/FCOS" -> "xingyizhou/CenterNet"
"tianzhi0549/FCOS" -> "princeton-vl/CornerNet"
"tianzhi0549/FCOS" -> "Duankaiwen/CenterNet"
"tianzhi0549/FCOS" -> "aim-uofa/AdelaiDet"
"tianzhi0549/FCOS" -> "sfzhang15/ATSS"
"tianzhi0549/FCOS" -> "princeton-vl/CornerNet-Lite"
"tianzhi0549/FCOS" -> "TuSimple/simpledet"
"tianzhi0549/FCOS" -> "facebookresearch/maskrcnn-benchmark"
"tianzhi0549/FCOS" -> "amdegroot/ssd.pytorch"
"tianzhi0549/FCOS" -> "zjhuang22/maskscoring_rcnn"
"tianzhi0549/FCOS" -> "ruinmessi/RFBNet"
"tianzhi0549/FCOS" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"tianzhi0549/FCOS" -> "yhenon/pytorch-retinanet"
"tianzhi0549/FCOS" -> "msracver/Deformable-ConvNets"
"tianzhi0549/FCOS" -> "dbolya/yolact"
"shouxieai/makefile_tutorial_project" -> "shouxieai/cpp-proj-template"
"lukemelas/EfficientNet-PyTorch" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"lukemelas/EfficientNet-PyTorch" -> "rwightman/pytorch-image-models"
"lukemelas/EfficientNet-PyTorch" -> "Cadene/pretrained-models.pytorch"
"lukemelas/EfficientNet-PyTorch" -> "tensorflow/tpu"
"lukemelas/EfficientNet-PyTorch" -> "xingyizhou/CenterNet"
"lukemelas/EfficientNet-PyTorch" -> "open-mmlab/mmdetection"
"lukemelas/EfficientNet-PyTorch" -> "zhanghang1989/ResNeSt"
"lukemelas/EfficientNet-PyTorch" -> "facebookresearch/maskrcnn-benchmark"
"lukemelas/EfficientNet-PyTorch" -> "qubvel/segmentation_models.pytorch"
"lukemelas/EfficientNet-PyTorch" -> "NVIDIA/apex"
"lukemelas/EfficientNet-PyTorch" -> "google/automl"
"lukemelas/EfficientNet-PyTorch" -> "facebookresearch/detr"
"lukemelas/EfficientNet-PyTorch" -> "facebookresearch/detectron2"
"lukemelas/EfficientNet-PyTorch" -> "albumentations-team/albumentations"
"lukemelas/EfficientNet-PyTorch" -> "microsoft/Swin-Transformer"
"ming71/CV_PaperDaily" -> "ming71/toolbox"
"ming71/CV_PaperDaily" -> "ming71/mmdetection-annotated"
"ming71/CV_PaperDaily" -> "SJTU-Thinklab-Det/DOTA-DOAI" ["e"=1]
"ming71/CV_PaperDaily" -> "CAPTAIN-WHU/DOTA_devkit" ["e"=1]
"ming71/CV_PaperDaily" -> "csuhan/s2anet" ["e"=1]
"ming71/CV_PaperDaily" -> "Megvii-BaseDetection/BorderDet"
"ming71/CV_PaperDaily" -> "hhaAndroid/mmdetection-mini"
"ming71/CV_PaperDaily" -> "pprp/SimpleCVReproduction" ["e"=1]
"ming71/CV_PaperDaily" -> "dingjiansw101/AerialDetection" ["e"=1]
"ming71/CV_PaperDaily" -> "SJTU-Thinklab-Det/r3det-on-mmdetection" ["e"=1]
"ming71/CV_PaperDaily" -> "sfzhang15/ATSS"
"ming71/CV_PaperDaily" -> "ruinmessi/ASFF"
"ming71/CV_PaperDaily" -> "yangxue0827/RotationDetection" ["e"=1]
"ming71/CV_PaperDaily" -> "XinZhangNLPR/awesome-anchor-free-object-detection"
"ming71/CV_PaperDaily" -> "amusi/ECCV2020-Code"
"openai/CLIP" -> "mlfoundations/open_clip" ["e"=1]
"openai/CLIP" -> "lucidrains/vit-pytorch"
"openai/CLIP" -> "rwightman/pytorch-image-models"
"openai/CLIP" -> "microsoft/Swin-Transformer"
"openai/CLIP" -> "microsoft/unilm"
"openai/CLIP" -> "facebookresearch/detr"
"openai/CLIP" -> "huggingface/diffusers" ["e"=1]
"openai/CLIP" -> "lucidrains/DALLE-pytorch" ["e"=1]
"openai/CLIP" -> "CompVis/latent-diffusion" ["e"=1]
"openai/CLIP" -> "google-research/vision_transformer"
"openai/CLIP" -> "facebookresearch/mae"
"openai/CLIP" -> "facebookresearch/segment-anything" ["e"=1]
"openai/CLIP" -> "CompVis/taming-transformers" ["e"=1]
"openai/CLIP" -> "lucidrains/DALLE2-pytorch" ["e"=1]
"openai/CLIP" -> "openai/DALL-E" ["e"=1]
"sksq96/pytorch-summary" -> "szagoruyko/pytorchviz"
"sksq96/pytorch-summary" -> "Lyken17/pytorch-OpCounter"
"sksq96/pytorch-summary" -> "TylerYep/torchinfo"
"sksq96/pytorch-summary" -> "lanpa/tensorboardX"
"sksq96/pytorch-summary" -> "utkuozbulak/pytorch-cnn-visualizations"
"sksq96/pytorch-summary" -> "NVIDIA/apex"
"sksq96/pytorch-summary" -> "pytorch/ignite"
"sksq96/pytorch-summary" -> "lukemelas/EfficientNet-PyTorch"
"sksq96/pytorch-summary" -> "Cadene/pretrained-models.pytorch"
"sksq96/pytorch-summary" -> "sovrasov/flops-counter.pytorch"
"sksq96/pytorch-summary" -> "facebookresearch/visdom"
"sksq96/pytorch-summary" -> "albu/albumentations"
"sksq96/pytorch-summary" -> "williamFalcon/pytorch-lightning"
"sksq96/pytorch-summary" -> "facebookresearch/maskrcnn-benchmark"
"sksq96/pytorch-summary" -> "jwyang/faster-rcnn.pytorch"
"pytorch/hub" -> "Luolc/AdaBound"
"pytorch/hub" -> "Eurus-Holmes/LIS-YNP" ["e"=1]
"pytorch/hub" -> "facebookresearch/ClassyVision"
"pytorch/hub" -> "facebookresearch/pythia" ["e"=1]
"pytorch/hub" -> "facebookresearch/pytorch_GAN_zoo" ["e"=1]
"pytorch/hub" -> "pytorch/ignite"
"pytorch/hub" -> "zasdfgbnm/TorchSnooper"
"pytorch/hub" -> "facebookresearch/video-nonlocal-net" ["e"=1]
"pytorch/hub" -> "LiyuanLucasLiu/RAdam"
"pytorch/hub" -> "williamFalcon/pytorch-lightning"
"pytorch/hub" -> "kimiyoung/transformer-xl" ["e"=1]
"pytorch/hub" -> "pytorch/tvm" ["e"=1]
"pytorch/hub" -> "ajbrock/BigGAN-PyTorch" ["e"=1]
"pytorch/hub" -> "xingyizhou/ExtremeNet"
"pytorch/hub" -> "adobe/antialiased-cnns"
"jacobgil/pytorch-grad-cam" -> "utkuozbulak/pytorch-cnn-visualizations"
"jacobgil/pytorch-grad-cam" -> "rwightman/pytorch-image-models"
"jacobgil/pytorch-grad-cam" -> "lucidrains/vit-pytorch"
"jacobgil/pytorch-grad-cam" -> "microsoft/Swin-Transformer"
"jacobgil/pytorch-grad-cam" -> "frgfm/torch-cam" ["e"=1]
"jacobgil/pytorch-grad-cam" -> "ramprs/grad-cam" ["e"=1]
"jacobgil/pytorch-grad-cam" -> "open-mmlab/mmdetection"
"jacobgil/pytorch-grad-cam" -> "lukemelas/EfficientNet-PyTorch"
"jacobgil/pytorch-grad-cam" -> "facebookresearch/detr"
"jacobgil/pytorch-grad-cam" -> "xmu-xiaoma666/External-Attention-pytorch"
"jacobgil/pytorch-grad-cam" -> "Cadene/pretrained-models.pytorch"
"jacobgil/pytorch-grad-cam" -> "albumentations-team/albumentations"
"jacobgil/pytorch-grad-cam" -> "qubvel/segmentation_models.pytorch"
"jacobgil/pytorch-grad-cam" -> "google-research/vision_transformer"
"jacobgil/pytorch-grad-cam" -> "pytorch/vision"
"ShiqiYu/libfacedetection" -> "deepinsight/insightface"
"ShiqiYu/libfacedetection" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB"
"ShiqiYu/libfacedetection" -> "Tencent/ncnn"
"ShiqiYu/libfacedetection" -> "seetaface/SeetaFaceEngine"
"ShiqiYu/libfacedetection" -> "zuoqing1988/ZQCNN"
"ShiqiYu/libfacedetection" -> "davidsandberg/facenet"
"ShiqiYu/libfacedetection" -> "alibaba/MNN"
"ShiqiYu/libfacedetection" -> "kpzhang93/MTCNN_face_detection_alignment"
"ShiqiYu/libfacedetection" -> "TadasBaltrusaitis/OpenFace"
"ShiqiYu/libfacedetection" -> "davisking/dlib"
"ShiqiYu/libfacedetection" -> "cmusatyalab/openface"
"ShiqiYu/libfacedetection" -> "xingyizhou/CenterNet"
"ShiqiYu/libfacedetection" -> "TencentYoutuResearch/FaceDetection-DSFD"
"ShiqiYu/libfacedetection" -> "ChanChiChoi/awesome-Face_Recognition"
"ShiqiYu/libfacedetection" -> "open-mmlab/mmdetection"
"Oldpan/Pytorch-Memory-Utils" -> "Swall0w/torchstat"
"Oldpan/Pytorch-Memory-Utils" -> "Lyken17/pytorch-memonger"
"Oldpan/Pytorch-Memory-Utils" -> "Lyken17/pytorch-OpCounter"
"Oldpan/Pytorch-Memory-Utils" -> "vacancy/Synchronized-BatchNorm-PyTorch" ["e"=1]
"Oldpan/Pytorch-Memory-Utils" -> "zhanghang1989/PyTorch-Encoding" ["e"=1]
"Oldpan/Pytorch-Memory-Utils" -> "sksq96/pytorch-summary"
"Oldpan/Pytorch-Memory-Utils" -> "DIYer22/boxx"
"Oldpan/Pytorch-Memory-Utils" -> "sovrasov/flops-counter.pytorch"
"Oldpan/Pytorch-Memory-Utils" -> "zasdfgbnm/TorchSnooper"
"Oldpan/Pytorch-Memory-Utils" -> "zhengzhugithub/CV-arXiv-Daily" ["e"=1]
"Oldpan/Pytorch-Memory-Utils" -> "JiahuiYu/slimmable_networks" ["e"=1]
"Oldpan/Pytorch-Memory-Utils" -> "NVIDIA/apex"
"cmhungsteve/Awesome-Transformer-Attention" -> "dk-liang/Awesome-Visual-Transformer"
"cmhungsteve/Awesome-Transformer-Attention" -> "DirtyHarryLYL/Transformer-in-Vision"
"cmhungsteve/Awesome-Transformer-Attention" -> "Yangzhangcst/Transformer-in-Computer-Vision"
"cmhungsteve/Awesome-Transformer-Attention" -> "facebookresearch/deit"
"cmhungsteve/Awesome-Transformer-Attention" -> "heejkoo/Awesome-Diffusion-Models" ["e"=1]
"cmhungsteve/Awesome-Transformer-Attention" -> "dair-ai/Transformers-Recipe" ["e"=1]
"cmhungsteve/Awesome-Transformer-Attention" -> "lucidrains/vit-pytorch"
"cmhungsteve/Awesome-Transformer-Attention" -> "facebookresearch/ConvNeXt"
"cmhungsteve/Awesome-Transformer-Attention" -> "mlfoundations/open_clip" ["e"=1]
"cmhungsteve/Awesome-Transformer-Attention" -> "ShoufaChen/DiffusionDet" ["e"=1]
"cmhungsteve/Awesome-Transformer-Attention" -> "google-research/scenic" ["e"=1]
"cmhungsteve/Awesome-Transformer-Attention" -> "NielsRogge/Transformers-Tutorials" ["e"=1]
"cmhungsteve/Awesome-Transformer-Attention" -> "MenghaoGuo/Awesome-Vision-Attentions"
"cmhungsteve/Awesome-Transformer-Attention" -> "IDEACVR/awesome-detection-transformer" ["e"=1]
"cmhungsteve/Awesome-Transformer-Attention" -> "microsoft/Swin-Transformer"
"facebookresearch/ResNeXt" -> "facebook/fb.resnet.torch"
"facebookresearch/ResNeXt" -> "prlz77/ResNeXt.pytorch"
"facebookresearch/ResNeXt" -> "liuzhuang13/DenseNet"
"facebookresearch/ResNeXt" -> "hujie-frank/SENet"
"facebookresearch/ResNeXt" -> "daijifeng001/R-FCN"
"facebookresearch/ResNeXt" -> "KaimingHe/resnet-1k-layers"
"facebookresearch/ResNeXt" -> "msracver/Deformable-ConvNets"
"facebookresearch/ResNeXt" -> "KaimingHe/deep-residual-networks"
"facebookresearch/ResNeXt" -> "szagoruyko/wide-residual-networks"
"facebookresearch/ResNeXt" -> "felixgwu/mask_rcnn_pytorch"
"facebookresearch/ResNeXt" -> "msracver/FCIS"
"facebookresearch/ResNeXt" -> "hszhao/PSPNet" ["e"=1]
"facebookresearch/ResNeXt" -> "DeepScale/SqueezeNet"
"facebookresearch/ResNeXt" -> "Orpine/py-R-FCN"
"facebookresearch/ResNeXt" -> "facebookresearch/video-nonlocal-net" ["e"=1]
"Lyken17/pytorch-OpCounter" -> "sovrasov/flops-counter.pytorch"
"Lyken17/pytorch-OpCounter" -> "Swall0w/torchstat"
"Lyken17/pytorch-OpCounter" -> "NVIDIA/apex"
"Lyken17/pytorch-OpCounter" -> "lukemelas/EfficientNet-PyTorch"
"Lyken17/pytorch-OpCounter" -> "sksq96/pytorch-summary"
"Lyken17/pytorch-OpCounter" -> "NervanaSystems/distiller" ["e"=1]
"Lyken17/pytorch-OpCounter" -> "he-y/Awesome-Pruning" ["e"=1]
"Lyken17/pytorch-OpCounter" -> "zhanghang1989/ResNeSt"
"Lyken17/pytorch-OpCounter" -> "Cadene/pretrained-models.pytorch"
"Lyken17/pytorch-OpCounter" -> "utkuozbulak/pytorch-cnn-visualizations"
"Lyken17/pytorch-OpCounter" -> "microsoft/Swin-Transformer"
"Lyken17/pytorch-OpCounter" -> "facebookresearch/maskrcnn-benchmark"
"Lyken17/pytorch-OpCounter" -> "rwightman/pytorch-image-models"
"Lyken17/pytorch-OpCounter" -> "quark0/darts" ["e"=1]
"Lyken17/pytorch-OpCounter" -> "xingyizhou/CenterNet"
"NVIDIA/apex" -> "NVIDIA/DALI"
"NVIDIA/apex" -> "lukemelas/EfficientNet-PyTorch"
"NVIDIA/apex" -> "Lyken17/pytorch-OpCounter"
"NVIDIA/apex" -> "facebookresearch/maskrcnn-benchmark"
"NVIDIA/apex" -> "NVIDIA/TensorRT"
"NVIDIA/apex" -> "rwightman/pytorch-image-models"
"NVIDIA/apex" -> "Cadene/pretrained-models.pytorch"
"NVIDIA/apex" -> "horovod/horovod"
"NVIDIA/apex" -> "pytorch/fairseq" ["e"=1]
"NVIDIA/apex" -> "facebookresearch/detr"
"NVIDIA/apex" -> "lanpa/tensorboardX"
"NVIDIA/apex" -> "open-mmlab/mmdetection"
"NVIDIA/apex" -> "NVIDIA-AI-IOT/torch2trt"
"NVIDIA/apex" -> "rusty1s/pytorch_geometric" ["e"=1]
"NVIDIA/apex" -> "microsoft/Swin-Transformer"
"bobo0810/PytorchNetHub" -> "bobo0810/HS-ResNet"
"bobo0810/PytorchNetHub" -> "dongdonghy/Detection-PyTorch-Notebook"
"bobo0810/PytorchNetHub" -> "xiongzihua/pytorch-YOLO-v1" ["e"=1]
"longcw/RoIAlign.pytorch" -> "ignacio-rocco/detectorch"
"longcw/RoIAlign.pytorch" -> "soeaver/Pytorch_Mask_RCNN"
"longcw/RoIAlign.pytorch" -> "ruotianluo/pytorch-faster-rcnn"
"longcw/RoIAlign.pytorch" -> "multimodallearning/pytorch-mask-rcnn"
"longcw/RoIAlign.pytorch" -> "vacancy/PreciseRoIPooling"
"longcw/RoIAlign.pytorch" -> "roytseng-tw/Detectron.pytorch"
"longcw/RoIAlign.pytorch" -> "jwyang/fpn.pytorch"
"longcw/RoIAlign.pytorch" -> "wjchaoGit/Group-Activity-Recognition" ["e"=1]
"longcw/RoIAlign.pytorch" -> "fxia22/stn.pytorch" ["e"=1]
"longcw/RoIAlign.pytorch" -> "wannabeOG/Mask-RCNN"
"longcw/RoIAlign.pytorch" -> "umich-vl/CornerNet"
"longcw/RoIAlign.pytorch" -> "longcw/faster_rcnn_pytorch"
"longcw/RoIAlign.pytorch" -> "1zb/deformable-convolution-pytorch"
"longcw/RoIAlign.pytorch" -> "PureDiors/pytorch_RFCN"
"longcw/RoIAlign.pytorch" -> "isht7/pytorch-deeplab-resnet" ["e"=1]
"multimodallearning/pytorch-mask-rcnn" -> "wannabeOG/Mask-RCNN"
"multimodallearning/pytorch-mask-rcnn" -> "facebookresearch/maskrcnn-benchmark"
"multimodallearning/pytorch-mask-rcnn" -> "roytseng-tw/Detectron.pytorch"
"multimodallearning/pytorch-mask-rcnn" -> "ruotianluo/pytorch-faster-rcnn"
"multimodallearning/pytorch-mask-rcnn" -> "jwyang/faster-rcnn.pytorch"
"multimodallearning/pytorch-mask-rcnn" -> "zjhuang22/maskscoring_rcnn"
"multimodallearning/pytorch-mask-rcnn" -> "soeaver/Pytorch_Mask_RCNN"
"multimodallearning/pytorch-mask-rcnn" -> "longcw/faster_rcnn_pytorch"
"multimodallearning/pytorch-mask-rcnn" -> "chenyuntc/simple-faster-rcnn-pytorch"
"multimodallearning/pytorch-mask-rcnn" -> "longcw/RoIAlign.pytorch"
"multimodallearning/pytorch-mask-rcnn" -> "amdegroot/ssd.pytorch"
"multimodallearning/pytorch-mask-rcnn" -> "meetshah1995/pytorch-semseg" ["e"=1]
"multimodallearning/pytorch-mask-rcnn" -> "jfzhang95/pytorch-deeplab-xception" ["e"=1]
"multimodallearning/pytorch-mask-rcnn" -> "jwyang/fpn.pytorch"
"multimodallearning/pytorch-mask-rcnn" -> "wkentaro/pytorch-fcn" ["e"=1]
"openppl-public/ppq" -> "ModelTC/MQBench" ["e"=1]
"openppl-public/ppq" -> "openppl-public/ppl.nn" ["e"=1]
"openppl-public/ppq" -> "ZhangGe6/onnx-modifier"
"openppl-public/ppq" -> "openppl-public/ppl.cv" ["e"=1]
"openppl-public/ppq" -> "NVIDIA/trt-samples-for-hackathon-cn"
"openppl-public/ppq" -> "MegEngine/MegCC" ["e"=1]
"openppl-public/ppq" -> "deepglint/EasyQuant" ["e"=1]
"openppl-public/ppq" -> "open-mmlab/mmdeploy"
"openppl-public/ppq" -> "open-mmlab/mmrazor"
"openppl-public/ppq" -> "chenzomi12/DeepLearningSystem" ["e"=1]
"openppl-public/ppq" -> "quic/aimet" ["e"=1]
"openppl-public/ppq" -> "daquexian/onnx-simplifier"
"openppl-public/ppq" -> "shouxieai/tensorRT_Pro"
"openppl-public/ppq" -> "Jermmy/pytorch-quantization-demo" ["e"=1]
"openppl-public/ppq" -> "tpoisonooo/how-to-optimize-gemm" ["e"=1]
"spytensor/prepare_detection_dataset" -> "ming71/mmdetection-annotated"
"spytensor/prepare_detection_dataset" -> "ming71/toolbox"
"spytensor/prepare_detection_dataset" -> "hhaAndroid/mmdetection-mini"
"spytensor/prepare_detection_dataset" -> "dingjiansw101/AerialDetection" ["e"=1]
"spytensor/prepare_detection_dataset" -> "tianzhi0549/FCOS"
"spytensor/prepare_detection_dataset" -> "pprp/SimpleCVReproduction" ["e"=1]
"spytensor/prepare_detection_dataset" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"spytensor/prepare_detection_dataset" -> "aim-uofa/AdelaiDet"
"spytensor/prepare_detection_dataset" -> "TuSimple/simpledet"
"spytensor/prepare_detection_dataset" -> "guoruoqian/cascade-rcnn_Pytorch"
"spytensor/prepare_detection_dataset" -> "SJTU-Thinklab-Det/DOTA-DOAI" ["e"=1]
"spytensor/prepare_detection_dataset" -> "xingyizhou/CenterNet"
"spytensor/prepare_detection_dataset" -> "yhenon/pytorch-retinanet"
"spytensor/prepare_detection_dataset" -> "princeton-vl/CornerNet-Lite"
"spytensor/prepare_detection_dataset" -> "qijiezhao/M2Det"
"weiaicunzai/pytorch-cifar100" -> "kuangliu/pytorch-cifar"
"weiaicunzai/pytorch-cifar100" -> "weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks"
"weiaicunzai/pytorch-cifar100" -> "bearpaw/pytorch-classification"
"weiaicunzai/pytorch-cifar100" -> "akamaster/pytorch_resnet_cifar10"
"weiaicunzai/pytorch-cifar100" -> "weiaicunzai/awesome-image-classification"
"weiaicunzai/pytorch-cifar100" -> "aaron-xichen/pytorch-playground"
"weiaicunzai/pytorch-cifar100" -> "Cadene/pretrained-models.pytorch"
"weiaicunzai/pytorch-cifar100" -> "Lyken17/pytorch-OpCounter"
"weiaicunzai/pytorch-cifar100" -> "pytorch/vision"
"weiaicunzai/pytorch-cifar100" -> "lukemelas/EfficientNet-PyTorch"
"weiaicunzai/pytorch-cifar100" -> "jacobgil/pytorch-grad-cam"
"weiaicunzai/pytorch-cifar100" -> "moskomule/senet.pytorch" ["e"=1]
"weiaicunzai/pytorch-cifar100" -> "jwyang/faster-rcnn.pytorch"
"weiaicunzai/pytorch-cifar100" -> "hysts/pytorch_image_classification"
"weiaicunzai/pytorch-cifar100" -> "lucidrains/vit-pytorch"
"Meituan-AutoML/CPVT" -> "Meituan-AutoML/Twins"
"The-AI-Summer/self-attention-cv" -> "lucidrains/bottleneck-transformer-pytorch"
"The-AI-Summer/self-attention-cv" -> "Beckschen/TransUNet" ["e"=1]
"The-AI-Summer/self-attention-cv" -> "dk-liang/Awesome-Visual-Transformer"
"The-AI-Summer/self-attention-cv" -> "jeya-maria-jose/Medical-Transformer" ["e"=1]
"The-AI-Summer/self-attention-cv" -> "lucidrains/TimeSformer-pytorch" ["e"=1]
"The-AI-Summer/self-attention-cv" -> "leaderj1001/BottleneckTransformers"
"The-AI-Summer/self-attention-cv" -> "whai362/PVT"
"The-AI-Summer/self-attention-cv" -> "DirtyHarryLYL/Transformer-in-Vision"
"The-AI-Summer/self-attention-cv" -> "black0017/MedicalZooPytorch" ["e"=1]
"The-AI-Summer/self-attention-cv" -> "leaderj1001/Stand-Alone-Self-Attention" ["e"=1]
"The-AI-Summer/self-attention-cv" -> "jeonsworld/ViT-pytorch"
"The-AI-Summer/self-attention-cv" -> "yitu-opensource/T2T-ViT"
"The-AI-Summer/self-attention-cv" -> "csrhddlam/axial-deeplab"
"The-AI-Summer/self-attention-cv" -> "MenghaoGuo/Awesome-Vision-Attentions"
"The-AI-Summer/self-attention-cv" -> "hila-chefer/Transformer-Explainability"
"lartpang/PyTorchTricks" -> "Lyken17/Efficient-PyTorch"
"lartpang/PyTorchTricks" -> "tczhangzhi/pytorch-distributed"
"lartpang/PyTorchTricks" -> "tanglang96/DataLoaders_DALI"
"lartpang/PyTorchTricks" -> "666DZY666/model-compression" ["e"=1]
"lartpang/PyTorchTricks" -> "donnyyou/torchcv" ["e"=1]
"lartpang/PyTorchTricks" -> "dk-liang/Awesome-Visual-Transformer"
"lartpang/PyTorchTricks" -> "zhanghang1989/ResNeSt"
"lartpang/PyTorchTricks" -> "CoinCheung/pytorch-loss" ["e"=1]
"lartpang/PyTorchTricks" -> "Lyken17/pytorch-OpCounter"
"lartpang/PyTorchTricks" -> "Lyken17/pytorch-memonger"
"lartpang/PyTorchTricks" -> "zxdefying/pytorch_tricks"
"lartpang/PyTorchTricks" -> "layerism/TensorRT-Inference-Server-Tutorial"
"lartpang/PyTorchTricks" -> "ruinmessi/ASFF"
"lartpang/PyTorchTricks" -> "joe-siyuan-qiao/DetectoRS"
"lartpang/PyTorchTricks" -> "ycszen/TorchSeg" ["e"=1]
"microsoft/DynamicHead" -> "microsoft/SoftTeacher"
"microsoft/DynamicHead" -> "implus/GFocalV2"
"microsoft/DynamicHead" -> "SwinTransformer/Swin-Transformer-Object-Detection"
"microsoft/DynamicHead" -> "VDIGPKU/CBNetV2"
"microsoft/DynamicHead" -> "xingyizhou/CenterNet2"
"microsoft/DynamicHead" -> "IDEACVR/DINO" ["e"=1]
"microsoft/DynamicHead" -> "xiaohu2015/SwinT_detectron2"
"microsoft/DynamicHead" -> "PeizeSun/SparseR-CNN"
"microsoft/DynamicHead" -> "fundamentalvision/Deformable-DETR"
"microsoft/DynamicHead" -> "IDEACVR/awesome-detection-transformer" ["e"=1]
"microsoft/DynamicHead" -> "fcjian/TOOD"
"microsoft/DynamicHead" -> "microsoft/Focal-Transformer"
"microsoft/DynamicHead" -> "hyz-xmaster/swa_object_detection"
"microsoft/DynamicHead" -> "hyz-xmaster/VarifocalNet"
"microsoft/DynamicHead" -> "whai362/PVT"
"open-mmlab/mmrazor" -> "open-mmlab/mmdeploy"
"open-mmlab/mmrazor" -> "open-mmlab/mmfewshot"
"open-mmlab/mmrazor" -> "open-mmlab/mmyolo"
"open-mmlab/mmrazor" -> "HobbitLong/RepDistiller" ["e"=1]
"open-mmlab/mmrazor" -> "open-mmlab/mim"
"open-mmlab/mmrazor" -> "open-mmlab/mmclassification"
"open-mmlab/mmrazor" -> "open-mmlab/mmflow"
"open-mmlab/mmrazor" -> "open-mmlab/mmselfsup"
"open-mmlab/mmrazor" -> "open-mmlab/mmhuman3d" ["e"=1]
"open-mmlab/mmrazor" -> "open-mmlab/mmeval"
"open-mmlab/mmrazor" -> "ModelTC/MQBench" ["e"=1]
"open-mmlab/mmrazor" -> "openppl-public/ppq"
"open-mmlab/mmrazor" -> "open-mmlab/mmrotate" ["e"=1]
"open-mmlab/mmrazor" -> "yzd-v/FGD" ["e"=1]
"open-mmlab/mmrazor" -> "open-mmlab/mmengine"
"ShichenLiu/CondenseNet" -> "gaohuang/MSDNet"
"ShichenLiu/CondenseNet" -> "chenxi116/PNASNet.pytorch" ["e"=1]
"ShichenLiu/CondenseNet" -> "tonylins/pytorch-mobilenet-v2"
"ShichenLiu/CondenseNet" -> "liuzhuang13/slimming" ["e"=1]
"ShichenLiu/CondenseNet" -> "szq0214/DSOD"
"ShichenLiu/CondenseNet" -> "gpleiss/efficient_densenet_pytorch"
"ShichenLiu/CondenseNet" -> "JiahuiYu/slimmable_networks" ["e"=1]
"ShichenLiu/CondenseNet" -> "cypw/DPNs" ["e"=1]
"ShichenLiu/CondenseNet" -> "yihui-he/channel-pruning" ["e"=1]
"ShichenLiu/CondenseNet" -> "zengarden/light_head_rcnn"
"ShichenLiu/CondenseNet" -> "megvii-model/ShuffleNet-Series"
"ShichenLiu/CondenseNet" -> "homles11/IGCV3" ["e"=1]
"ShichenLiu/CondenseNet" -> "Robert-JunWang/Pelee"
"ShichenLiu/CondenseNet" -> "avirambh/MSDNet-GCN"
"ShichenLiu/CondenseNet" -> "kuangliu/pytorch-retinanet"
"facebookresearch/madgrad" -> "lessw2020/Ranger21"
"facebookresearch/madgrad" -> "jettify/pytorch-optimizer"
"facebookresearch/madgrad" -> "juntang-zhuang/Adabelief-Optimizer"
"facebookresearch/madgrad" -> "lessw2020/Best-Deep-Learning-Optimizers"
"facebookresearch/madgrad" -> "pinterest/querybook" ["e"=1]
"facebookresearch/madgrad" -> "Yonghongwei/Gradient-Centralization"
"facebookresearch/madgrad" -> "qubvel/ttach"
"facebookresearch/madgrad" -> "facebookresearch/fairscale" ["e"=1]
"facebookresearch/madgrad" -> "facebookresearch/barlowtwins"
"facebookresearch/madgrad" -> "PyTorchLightning/lightning-flash"
"facebookresearch/madgrad" -> "shinya7y/UniverseNet"
"facebookresearch/madgrad" -> "xxxnell/how-do-vits-work"
"facebookresearch/madgrad" -> "patrick-kidger/torchtyping"
"facebookresearch/madgrad" -> "ChristofHenkel/kaggle-landmark-2021-1st-place" ["e"=1]
"facebookresearch/madgrad" -> "PyTorchLightning/metrics"
"bentrevett/pytorch-rl" -> "bentrevett/pytorch-generative-models"
"haotian-liu/yolact_edge" -> "dbolya/yolact"
"haotian-liu/yolact_edge" -> "youngwanLEE/centermask2"
"haotian-liu/yolact_edge" -> "WXinlong/SOLO"
"haotian-liu/yolact_edge" -> "aim-uofa/AdelaiDet"
"haotian-liu/yolact_edge" -> "enazoe/yolo-tensorrt"
"haotian-liu/yolact_edge" -> "zju3dv/snake"
"haotian-liu/yolact_edge" -> "linghu8812/tensorrt_inference"
"haotian-liu/yolact_edge" -> "jkjung-avt/tensorrt_demos"
"haotian-liu/yolact_edge" -> "WongKinYiu/ScaledYOLOv4"
"haotian-liu/yolact_edge" -> "dog-qiuqiu/Yolo-Fastest"
"haotian-liu/yolact_edge" -> "RangiLyu/nanodet"
"haotian-liu/yolact_edge" -> "ceccocats/tkDNN"
"haotian-liu/yolact_edge" -> "wang-xinyu/tensorrtx"
"haotian-liu/yolact_edge" -> "WongKinYiu/yolor"
"jinfagang/alfred" -> "jinfagang/thor"
"jinfagang/alfred" -> "NVIDIA/runx" ["e"=1]
"jinfagang/alfred" -> "ruinmessi/ASFF"
"jinfagang/alfred" -> "jinfagang/nb" ["e"=1]
"jinfagang/alfred" -> "onnx/onnx-tensorrt"
"jinfagang/alfred" -> "CaoWGG/TensorRT-CenterNet"
"jinfagang/alfred" -> "hhaAndroid/mmdetection-mini"
"jinfagang/alfred" -> "ming71/mmdetection-annotated"
"jinfagang/alfred" -> "jinfagang/yolov7"
"jinfagang/alfred" -> "Syencil/tensorRT"
"jinfagang/alfred" -> "open-mmlab/mmdetection3d" ["e"=1]
"jinfagang/alfred" -> "grimoire/mmdetection-to-tensorrt"
"jinfagang/alfred" -> "layerism/TensorRT-Inference-Server-Tutorial"
"jinfagang/alfred" -> "fastnlp/fitlog" ["e"=1]
"jinfagang/alfred" -> "microsoft/RepPoints"
"arogozhnikov/einops" -> "lucidrains/vit-pytorch"
"arogozhnikov/einops" -> "kornia/kornia"
"arogozhnikov/einops" -> "rwightman/pytorch-image-models"
"arogozhnikov/einops" -> "google/jax" ["e"=1]
"arogozhnikov/einops" -> "huggingface/accelerate" ["e"=1]
"arogozhnikov/einops" -> "PyTorchLightning/pytorch-lightning"
"arogozhnikov/einops" -> "facebookresearch/hydra"
"arogozhnikov/einops" -> "google/flax" ["e"=1]
"arogozhnikov/einops" -> "libffcv/ffcv"
"arogozhnikov/einops" -> "lucidrains/x-transformers" ["e"=1]
"arogozhnikov/einops" -> "facebookresearch/detr"
"arogozhnikov/einops" -> "openai/triton" ["e"=1]
"arogozhnikov/einops" -> "KevinMusgrave/pytorch-metric-learning"
"arogozhnikov/einops" -> "albumentations-team/albumentations"
"arogozhnikov/einops" -> "openai/CLIP"
"BIGBALLON/CIFAR-ZOO" -> "implus/PytorchInsight" ["e"=1]
"BIGBALLON/CIFAR-ZOO" -> "BIGBALLON/cifar-10-cnn"
"BIGBALLON/CIFAR-ZOO" -> "weiaicunzai/pytorch-cifar100"
"BIGBALLON/CIFAR-ZOO" -> "tensor-yu/PyTorch_Tutorial" ["e"=1]
"BIGBALLON/CIFAR-ZOO" -> "bearpaw/pytorch-classification"
"BIGBALLON/CIFAR-ZOO" -> "weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks"
"BIGBALLON/CIFAR-ZOO" -> "lxtGH/OctaveConv_pytorch" ["e"=1]
"BIGBALLON/CIFAR-ZOO" -> "tanglang96/DataLoaders_DALI"
"BIGBALLON/CIFAR-ZOO" -> "donnyyou/torchcv" ["e"=1]
"BIGBALLON/CIFAR-ZOO" -> "MingSun-Tse/EfficientDNNs" ["e"=1]
"BIGBALLON/CIFAR-ZOO" -> "akamaster/pytorch_resnet_cifar10"
"BIGBALLON/CIFAR-ZOO" -> "Eric-mingjie/rethinking-network-pruning" ["e"=1]
"BIGBALLON/CIFAR-ZOO" -> "weiaicunzai/awesome-image-classification"
"BIGBALLON/CIFAR-ZOO" -> "hongyi-zhang/mixup" ["e"=1]
"BIGBALLON/CIFAR-ZOO" -> "implus/SKNet" ["e"=1]
"open-mmlab/OpenMMLabCourse" -> "open-mmlab/mmyolo"
"open-mmlab/OpenMMLabCourse" -> "open-mmlab/mmengine"
"open-mmlab/OpenMMLabCourse" -> "open-mmlab/mmrazor"
"open-mmlab/OpenMMLabCourse" -> "open-mmlab/mim"
"open-mmlab/OpenMMLabCourse" -> "open-mmlab/mmdeploy"
"open-mmlab/OpenMMLabCourse" -> "open-mmlab/mmfewshot"
"open-mmlab/OpenMMLabCourse" -> "open-mmlab/mmclassification"
"open-mmlab/OpenMMLabCourse" -> "open-mmlab/playground"
"open-mmlab/OpenMMLabCourse" -> "open-mmlab/OpenMMLabCamp"
"open-mmlab/OpenMMLabCourse" -> "open-mmlab/labelbee-client"
"open-mmlab/OpenMMLabCourse" -> "open-mmlab/mmselfsup"
"open-mmlab/OpenMMLabCourse" -> "open-mmlab/mmhuman3d" ["e"=1]
"open-mmlab/OpenMMLabCourse" -> "open-mmlab/labelbee"
"open-mmlab/OpenMMLabCourse" -> "open-mmlab/mmdetection3d" ["e"=1]
"open-mmlab/OpenMMLabCourse" -> "TommyZihao/MMPose_Tutorials"
"open-mmlab/mim" -> "open-mmlab/mmfewshot"
"open-mmlab/mim" -> "jshilong/FisherPruning"
"open-mmlab/mim" -> "open-mmlab/mim-example"
"open-mmlab/mim" -> "open-mmlab/mmflow"
"open-mmlab/mim" -> "open-mmlab/mmeval"
"open-mmlab/mim" -> "jshilong/GroupRCNN"
"open-mmlab/mim" -> "open-mmlab/playground"
"open-mmlab/mim" -> "open-mmlab/mmengine"
"open-mmlab/mim" -> "open-mmlab/mmrazor"
"open-mmlab/mim" -> "open-mmlab/MMGEN-FaceStylor"
"open-mmlab/mim" -> "open-mmlab/pre-commit-hooks"
"open-mmlab/mim" -> "open-mmlab/mmhuman3d" ["e"=1]
"open-mmlab/mim" -> "open-mmlab/labelbee"
"open-mmlab/mim" -> "open-mmlab/mmgeneration"
"open-mmlab/mim" -> "open-mmlab/mmdeploy"
"dBeker/Faster-RCNN-TensorFlow-Python3.5" -> "kevinjliang/tf-Faster-RCNN"
"dBeker/Faster-RCNN-TensorFlow-Python3.5" -> "smallcorgi/Faster-RCNN_TF"
"yhenon/keras-frcnn" -> "rykov8/ssd_keras"
"yhenon/keras-frcnn" -> "fizyr/keras-retinanet"
"yhenon/keras-frcnn" -> "jinfagang/keras_frcnn"
"yhenon/keras-frcnn" -> "aurora95/Keras-FCN" ["e"=1]
"yhenon/keras-frcnn" -> "CharlesShang/TFFRCNN"
"yhenon/keras-frcnn" -> "smallcorgi/Faster-RCNN_TF"
"yhenon/keras-frcnn" -> "broadinstitute/keras-rcnn" ["e"=1]
"yhenon/keras-frcnn" -> "allanzelener/YAD2K"
"yhenon/keras-frcnn" -> "flyyufelix/cnn_finetune"
"yhenon/keras-frcnn" -> "yhenon/keras-spp"
"yhenon/keras-frcnn" -> "jocicmarko/ultrasound-nerve-segmentation" ["e"=1]
"yhenon/keras-frcnn" -> "experiencor/basic-yolo-keras"
"yhenon/keras-frcnn" -> "CharlesShang/FastMaskRCNN"
"yhenon/keras-frcnn" -> "softberries/keras-frcnn"
"yhenon/keras-frcnn" -> "farizrahman4u/keras-contrib" ["e"=1]
"4uiiurz1/pytorch-deform-conv-v2" -> "chengdazhi/Deformable-Convolution-V2-PyTorch"
"4uiiurz1/pytorch-deform-conv-v2" -> "ChunhuanLin/deform_conv_pytorch"
"4uiiurz1/pytorch-deform-conv-v2" -> "oeway/pytorch-deform-conv"
"4uiiurz1/pytorch-deform-conv-v2" -> "CharlesShang/DCNv2"
"4uiiurz1/pytorch-deform-conv-v2" -> "msracver/Deformable-ConvNets"
"4uiiurz1/pytorch-deform-conv-v2" -> "XinyiYing/D3Dnet" ["e"=1]
"4uiiurz1/pytorch-deform-conv-v2" -> "speedinghzl/CCNet" ["e"=1]
"4uiiurz1/pytorch-deform-conv-v2" -> "xinntao/EDVR" ["e"=1]
"4uiiurz1/pytorch-deform-conv-v2" -> "1zb/deformable-convolution-pytorch"
"4uiiurz1/pytorch-deform-conv-v2" -> "luuuyi/CBAM.PyTorch" ["e"=1]
"4uiiurz1/pytorch-deform-conv-v2" -> "xvjiarui/GCNet" ["e"=1]
"4uiiurz1/pytorch-deform-conv-v2" -> "kastnerkyle/deform-conv"
"4uiiurz1/pytorch-deform-conv-v2" -> "jwyang/fpn.pytorch"
"Duankaiwen/CPNDet" -> "cccorn/AP-loss"
"HobbitLong/CMC" -> "HobbitLong/PyContrast"
"HobbitLong/CMC" -> "facebookresearch/moco"
"HobbitLong/CMC" -> "zhirongw/lemniscate.pytorch"
"HobbitLong/CMC" -> "open-mmlab/OpenSelfSup"
"HobbitLong/CMC" -> "Philip-Bachman/amdim-public"
"HobbitLong/CMC" -> "facebookresearch/fair_self_supervision_benchmark"
"HobbitLong/CMC" -> "google-research/simclr"
"HobbitLong/CMC" -> "sthalles/SimCLR"
"HobbitLong/CMC" -> "facebookresearch/swav"
"HobbitLong/CMC" -> "rdevon/DIM"
"HobbitLong/CMC" -> "jason718/awesome-self-supervised-learning"
"HobbitLong/CMC" -> "HobbitLong/SupContrast"
"HobbitLong/CMC" -> "lucidrains/byol-pytorch"
"HobbitLong/CMC" -> "peisuke/MomentumContrast.pytorch"
"HobbitLong/CMC" -> "TengdaHan/DPC" ["e"=1]
"MenghaoGuo/Awesome-Vision-Attentions" -> "xmu-xiaoma666/External-Attention-pytorch"
"MenghaoGuo/Awesome-Vision-Attentions" -> "dk-liang/Awesome-Visual-Transformer"
"MenghaoGuo/Awesome-Vision-Attentions" -> "FiboAI/EngineX" ["e"=1]
"MenghaoGuo/Awesome-Vision-Attentions" -> "facebookresearch/ConvNeXt"
"MenghaoGuo/Awesome-Vision-Attentions" -> "bugbearnft/bugbear" ["e"=1]
"MenghaoGuo/Awesome-Vision-Attentions" -> "Visual-Attention-Network/VAN-Classification" ["e"=1]
"MenghaoGuo/Awesome-Vision-Attentions" -> "pprp/awesome-attention-mechanism-in-cv" ["e"=1]
"MenghaoGuo/Awesome-Vision-Attentions" -> "MacgyverLin/GLSLRayMarching" ["e"=1]
"MenghaoGuo/Awesome-Vision-Attentions" -> "hypercube-lab/hypercube" ["e"=1]
"MenghaoGuo/Awesome-Vision-Attentions" -> "TinyDataML/Tiny3D" ["e"=1]
"MenghaoGuo/Awesome-Vision-Attentions" -> "AFKDAO/wrapper" ["e"=1]
"MenghaoGuo/Awesome-Vision-Attentions" -> "topling/toplingdb" ["e"=1]
"MenghaoGuo/Awesome-Vision-Attentions" -> "FxPool/FxMinerProxyV3" ["e"=1]
"MenghaoGuo/Awesome-Vision-Attentions" -> "meta-soul/MetaSpore" ["e"=1]
"MenghaoGuo/Awesome-Vision-Attentions" -> "amusi/CVPR2021-Papers-with-Code"
"PyTorchLightning/pytorch-lightning-bolts" -> "PyTorchLightning/lightning-flash"
"PyTorchLightning/pytorch-lightning-bolts" -> "PyTorchLightning/metrics"
"PyTorchLightning/pytorch-lightning-bolts" -> "PyTorchLightning/deep-learning-project-template"
"PyTorchLightning/pytorch-lightning-bolts" -> "PyTorchLightning/lightning-transformers"
"PyTorchLightning/pytorch-lightning-bolts" -> "PyTorchLightning/pytorch-lightning-conference-seed"
"PyTorchLightning/pytorch-lightning-bolts" -> "awaelchli/pytorch-lightning-snippets"
"PyTorchLightning/pytorch-lightning-bolts" -> "facebookresearch/fairscale" ["e"=1]
"PyTorchLightning/pytorch-lightning-bolts" -> "facebookresearch/swav"
"PyTorchLightning/pytorch-lightning-bolts" -> "lightly-ai/lightly"
"PyTorchLightning/pytorch-lightning-bolts" -> "PyTorchLightning/pytorch-lightning"
"PyTorchLightning/pytorch-lightning-bolts" -> "szymonmaszke/torchlayers" ["e"=1]
"PyTorchLightning/pytorch-lightning-bolts" -> "facebookresearch/vissl"
"PyTorchLightning/pytorch-lightning-bolts" -> "jettify/pytorch-optimizer"
"PyTorchLightning/pytorch-lightning-bolts" -> "facebookincubator/submitit"
"PyTorchLightning/pytorch-lightning-bolts" -> "SforAiDl/genrl" ["e"=1]
"Sophia-11/Awesome-CVPR-Paper" -> "amusi/ECCV2020-Code"
"Sophia-11/Awesome-CVPR-Paper" -> "extreme-assistant/CVPR2020-Paper-Code-Interpretation"
"Sophia-11/Awesome-CVPR-Paper" -> "amusi/CVPR2020-Code"
"Sophia-11/Awesome-CVPR-Paper" -> "amusi/ICCV2021-Papers-with-Code"
"Sophia-11/Awesome-CVPR-Paper" -> "ahong007007/awesomeCV"
"Sophia-11/Awesome-CVPR-Paper" -> "extreme-assistant/cvpr2020"
"Sophia-11/Awesome-CVPR-Paper" -> "huawei-noah/ghostnet"
"Sophia-11/Awesome-CVPR-Paper" -> "extreme-assistant/CVPR2021-Paper-Code-Interpretation"
"Sophia-11/Awesome-CVPR-Paper" -> "extreme-assistant/iccv2019"
"Sophia-11/Awesome-CVPR-Paper" -> "AlexHex7/Non-local_pytorch" ["e"=1]
"Sophia-11/Awesome-CVPR-Paper" -> "implus/PytorchInsight" ["e"=1]
"Sophia-11/Awesome-CVPR-Paper" -> "shanglianlm0525/PyTorch-Networks" ["e"=1]
"Sophia-11/Awesome-CVPR-Paper" -> "dk-liang/Awesome-Visual-Transformer"
"Sophia-11/Awesome-CVPR-Paper" -> "amusi/CVPR2021-Papers-with-Code"
"Sophia-11/Awesome-CVPR-Paper" -> "zhanghang1989/ResNeSt"
"asyml/vision-transformer-pytorch" -> "jeonsworld/ViT-pytorch"
"asyml/vision-transformer-pytorch" -> "lukemelas/PyTorch-Pretrained-ViT"
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "CharlesShang/DCNv2"
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "4uiiurz1/pytorch-deform-conv-v2"
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "oeway/pytorch-deform-conv"
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "msracver/Deformable-ConvNets"
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "ChunhuanLin/deform_conv_pytorch"
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "xvjiarui/GCNet" ["e"=1]
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "speedinghzl/CCNet" ["e"=1]
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "fundamentalvision/Deformable-DETR"
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "tianzhi0549/FCOS"
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "1zb/deformable-convolution-pytorch"
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "xinntao/EDVR" ["e"=1]
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "zhanghang1989/PyTorch-Encoding" ["e"=1]
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "princeton-vl/CornerNet"
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "vacancy/Synchronized-BatchNorm-PyTorch" ["e"=1]
"chengdazhi/Deformable-Convolution-V2-PyTorch" -> "AlexHex7/Non-local_pytorch" ["e"=1]
"d-li14/mobilenetv2.pytorch" -> "d-li14/mobilenetv3.pytorch"
"d-li14/mobilenetv2.pytorch" -> "tonylins/pytorch-mobilenet-v2"
"d-li14/mobilenetv2.pytorch" -> "Randl/MobileNetV2-pytorch"
"d-li14/mobilenetv2.pytorch" -> "xiaolai-sqlai/mobilenetv3"
"d-li14/mobilenetv2.pytorch" -> "kuan-wang/pytorch-mobilenet-v3"
"d-li14/mobilenetv2.pytorch" -> "megvii-model/ShuffleNet-Series"
"d-li14/mobilenetv2.pytorch" -> "JiahuiYu/slimmable_networks" ["e"=1]
"d-li14/mobilenetv2.pytorch" -> "rwightman/gen-efficientnet-pytorch"
"d-li14/mobilenetv2.pytorch" -> "Eric-mingjie/network-slimming" ["e"=1]
"d-li14/mobilenetv2.pytorch" -> "facebookresearch/mobile-vision" ["e"=1]
"d-li14/mobilenetv2.pytorch" -> "liuzechun/MetaPruning" ["e"=1]
"d-li14/mobilenetv2.pytorch" -> "Eric-mingjie/rethinking-network-pruning" ["e"=1]
"d-li14/mobilenetv2.pytorch" -> "megvii-model/SinglePathOneShot" ["e"=1]
"d-li14/mobilenetv2.pytorch" -> "mit-han-lab/once-for-all" ["e"=1]
"d-li14/mobilenetv2.pytorch" -> "qfgaohao/pytorch-ssd"
"d-li14/mobilenetv3.pytorch" -> "d-li14/mobilenetv2.pytorch"
"d-li14/mobilenetv3.pytorch" -> "kuan-wang/pytorch-mobilenet-v3"
"d-li14/mobilenetv3.pytorch" -> "xiaolai-sqlai/mobilenetv3"
"d-li14/mobilenetv3.pytorch" -> "Randl/MobileNetV3-pytorch"
"d-li14/mobilenetv3.pytorch" -> "leaderj1001/MobileNetV3-Pytorch"
"d-li14/mobilenetv3.pytorch" -> "rwightman/gen-efficientnet-pytorch"
"d-li14/mobilenetv3.pytorch" -> "megvii-model/ShuffleNet-Series"
"d-li14/mobilenetv3.pytorch" -> "denru01/netadapt"
"d-li14/mobilenetv3.pytorch" -> "xiaomi-automl/MoGA" ["e"=1]
"d-li14/mobilenetv3.pytorch" -> "d-li14/ghostnet.pytorch"
"facebookresearch/fair_self_supervision_benchmark" -> "google/revisiting-self-supervised"
"facebookresearch/fair_self_supervision_benchmark" -> "open-mmlab/OpenSelfSup"
"facebookresearch/fair_self_supervision_benchmark" -> "HobbitLong/CMC"
"facebookresearch/fair_self_supervision_benchmark" -> "Philip-Bachman/amdim-public"
"facebookresearch/fair_self_supervision_benchmark" -> "gidariss/FeatureLearningRotNet"
"facebookresearch/fair_self_supervision_benchmark" -> "zlai0/CorrFlow" ["e"=1]
"facebookresearch/fair_self_supervision_benchmark" -> "zhirongw/lemniscate.pytorch"
"facebookresearch/fair_self_supervision_benchmark" -> "xiaolonw/TimeCycle" ["e"=1]
"facebookresearch/fair_self_supervision_benchmark" -> "facebookresearch/DeeperCluster"
"facebookresearch/fair_self_supervision_benchmark" -> "TengdaHan/DPC" ["e"=1]
"facebookresearch/fair_self_supervision_benchmark" -> "jason718/awesome-self-supervised-learning"
"facebookresearch/fair_self_supervision_benchmark" -> "facebookresearch/vissl"
"facebookresearch/fair_self_supervision_benchmark" -> "bbrattoli/JigsawPuzzlePytorch"
"facebookresearch/fair_self_supervision_benchmark" -> "philiptheother/FeatureDecoupling"
"facebookresearch/fair_self_supervision_benchmark" -> "sthalles/PyTorch-BYOL"
"hhaAndroid/mmdetection-mini" -> "ming71/mmdetection-annotated"
"hhaAndroid/mmdetection-mini" -> "dingjiansw101/AerialDetection" ["e"=1]
"hhaAndroid/mmdetection-mini" -> "xingyizhou/CenterNet2"
"hhaAndroid/mmdetection-mini" -> "open-mmlab/mmrazor"
"hhaAndroid/mmdetection-mini" -> "ZeroE04/R-CenterNet" ["e"=1]
"hhaAndroid/mmdetection-mini" -> "ruinmessi/ASFF"
"hhaAndroid/mmdetection-mini" -> "spytensor/prepare_detection_dataset"
"hhaAndroid/mmdetection-mini" -> "grimoire/mmdetection-to-tensorrt"
"hhaAndroid/mmdetection-mini" -> "ming71/toolbox"
"hhaAndroid/mmdetection-mini" -> "hyz-xmaster/VarifocalNet"
"hhaAndroid/mmdetection-mini" -> "csuhan/s2anet" ["e"=1]
"hhaAndroid/mmdetection-mini" -> "microsoft/SoftTeacher"
"hhaAndroid/mmdetection-mini" -> "pprp/SimpleCVReproduction" ["e"=1]
"hhaAndroid/mmdetection-mini" -> "open-mmlab/mmyolo"
"hhaAndroid/mmdetection-mini" -> "hyz-xmaster/swa_object_detection"
"open-mmlab/OpenSelfSup" -> "HobbitLong/PyContrast"
"open-mmlab/OpenSelfSup" -> "facebookresearch/moco"
"open-mmlab/OpenSelfSup" -> "facebookresearch/swav"
"open-mmlab/OpenSelfSup" -> "facebookresearch/fair_self_supervision_benchmark"
"open-mmlab/OpenSelfSup" -> "HobbitLong/CMC"
"open-mmlab/OpenSelfSup" -> "facebookresearch/vissl"
"open-mmlab/OpenSelfSup" -> "lucidrains/byol-pytorch"
"open-mmlab/OpenSelfSup" -> "jason718/awesome-self-supervised-learning"
"open-mmlab/OpenSelfSup" -> "google-research/simclr"
"open-mmlab/OpenSelfSup" -> "WXinlong/DenseCL"
"open-mmlab/OpenSelfSup" -> "zhirongw/lemniscate.pytorch"
"open-mmlab/OpenSelfSup" -> "facebookresearch/deit"
"open-mmlab/OpenSelfSup" -> "HobbitLong/SupContrast"
"open-mmlab/OpenSelfSup" -> "open-mmlab/mmaction" ["e"=1]
"open-mmlab/OpenSelfSup" -> "xieenze/DetCo" ["e"=1]
"open-mmlab/mmfewshot" -> "open-mmlab/mim"
"open-mmlab/mmfewshot" -> "open-mmlab/mmrazor"
"open-mmlab/mmfewshot" -> "er-muyue/DeFRCN" ["e"=1]
"open-mmlab/mmfewshot" -> "open-mmlab/mmflow"
"open-mmlab/mmfewshot" -> "open-mmlab/mmselfsup"
"open-mmlab/mmfewshot" -> "ucbdrive/few-shot-object-detection" ["e"=1]
"open-mmlab/mmfewshot" -> "jshilong/GroupRCNN"
"open-mmlab/mmfewshot" -> "MegviiDetection/FSCE" ["e"=1]
"open-mmlab/mmfewshot" -> "open-mmlab/mmeval"
"open-mmlab/mmfewshot" -> "open-mmlab/mmhuman3d" ["e"=1]
"open-mmlab/mmfewshot" -> "fanq15/FewX" ["e"=1]
"open-mmlab/mmfewshot" -> "open-mmlab/mmdeploy"
"open-mmlab/mmfewshot" -> "open-mmlab/playground"
"open-mmlab/mmfewshot" -> "open-mmlab/mmrotate" ["e"=1]
"open-mmlab/mmfewshot" -> "jshilong/FisherPruning"
"untitled-ai/self_supervised" -> "sthalles/PyTorch-BYOL"
"untitled-ai/self_supervised" -> "lucidrains/byol-pytorch"
"untitled-ai/self_supervised" -> "HobbitLong/PyContrast"
"untitled-ai/self_supervised" -> "HobbitLong/CMC"
"untitled-ai/self_supervised" -> "Spijkervet/BYOL"
"untitled-ai/self_supervised" -> "open-mmlab/OpenSelfSup"
"untitled-ai/self_supervised" -> "Spijkervet/SimCLR"
"untitled-ai/self_supervised" -> "facebookresearch/fair_self_supervision_benchmark"
"untitled-ai/self_supervised" -> "facebookresearch/swav"
"untitled-ai/self_supervised" -> "PatrickHua/SimSiam"
"untitled-ai/self_supervised" -> "facebookresearch/vissl"
"untitled-ai/self_supervised" -> "zhirongw/lemniscate.pytorch"
"untitled-ai/self_supervised" -> "leftthomas/SimCLR"
"untitled-ai/self_supervised" -> "WXinlong/DenseCL"
"untitled-ai/self_supervised" -> "facebookresearch/barlowtwins"
"xiaolai-sqlai/mobilenetv3" -> "kuan-wang/pytorch-mobilenet-v3"
"xiaolai-sqlai/mobilenetv3" -> "megvii-model/ShuffleNet-Series"
"xiaolai-sqlai/mobilenetv3" -> "tonylins/pytorch-mobilenet-v2"
"xiaolai-sqlai/mobilenetv3" -> "d-li14/mobilenetv3.pytorch"
"xiaolai-sqlai/mobilenetv3" -> "leaderj1001/MobileNetV3-Pytorch"
"xiaolai-sqlai/mobilenetv3" -> "d-li14/mobilenetv2.pytorch"
"xiaolai-sqlai/mobilenetv3" -> "huawei-noah/ghostnet"
"xiaolai-sqlai/mobilenetv3" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"xiaolai-sqlai/mobilenetv3" -> "rwightman/gen-efficientnet-pytorch"
"xiaolai-sqlai/mobilenetv3" -> "lukemelas/EfficientNet-PyTorch"
"xiaolai-sqlai/mobilenetv3" -> "tianzhi0549/FCOS"
"xiaolai-sqlai/mobilenetv3" -> "Duankaiwen/CenterNet"
"xiaolai-sqlai/mobilenetv3" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"xiaolai-sqlai/mobilenetv3" -> "princeton-vl/CornerNet-Lite"
"xiaolai-sqlai/mobilenetv3" -> "xingyizhou/CenterNet"
"yqyao/FCOS_PLUS" -> "Lausannen/NAS-FCOS" ["e"=1]
"yqyao/FCOS_PLUS" -> "sfzhang15/ATSS"
"yqyao/FCOS_PLUS" -> "tianzhi0549/FCOS"
"yqyao/FCOS_PLUS" -> "HRNet/HRNet-FCOS" ["e"=1]
"yqyao/FCOS_PLUS" -> "yqyao/SSD_Pytorch"
"yqyao/FCOS_PLUS" -> "zhangxiaosong18/FreeAnchor"
"yqyao/FCOS_PLUS" -> "Megvii-BaseDetection/DeFCN"
"yqyao/FCOS_PLUS" -> "KiveeDong/CentripetalNet"
"yqyao/FCOS_PLUS" -> "xieenze/PolarMask"
"yqyao/FCOS_PLUS" -> "FateScript/CenterNet-better"
"yqyao/FCOS_PLUS" -> "Megvii-BaseDetection/BorderDet"
"yqyao/FCOS_PLUS" -> "vacancy/PreciseRoIPooling"
"yqyao/FCOS_PLUS" -> "yihui-he/KL-Loss"
"yqyao/FCOS_PLUS" -> "aim-uofa/adet"
"yqyao/FCOS_PLUS" -> "taokong/FoveaBox"
"zjhuang22/maskscoring_rcnn" -> "ShuLiu1993/PANet"
"zjhuang22/maskscoring_rcnn" -> "tianzhi0549/FCOS"
"zjhuang22/maskscoring_rcnn" -> "facebookresearch/maskrcnn-benchmark"
"zjhuang22/maskscoring_rcnn" -> "dbolya/yolact"
"zjhuang22/maskscoring_rcnn" -> "TuSimple/simpledet"
"zjhuang22/maskscoring_rcnn" -> "Duankaiwen/CenterNet"
"zjhuang22/maskscoring_rcnn" -> "foolwood/SiamMask" ["e"=1]
"zjhuang22/maskscoring_rcnn" -> "extreme-assistant/cvpr2019"
"zjhuang22/maskscoring_rcnn" -> "xieenze/PolarMask"
"zjhuang22/maskscoring_rcnn" -> "xingyizhou/ExtremeNet"
"zjhuang22/maskscoring_rcnn" -> "leoxiaobin/deep-high-resolution-net.pytorch" ["e"=1]
"zjhuang22/maskscoring_rcnn" -> "junfu1115/DANet" ["e"=1]
"zjhuang22/maskscoring_rcnn" -> "princeton-vl/CornerNet-Lite"
"zjhuang22/maskscoring_rcnn" -> "mahyarnajibi/SNIPER"
"zjhuang22/maskscoring_rcnn" -> "xingyizhou/CenterNet"
"Swall0w/torchstat" -> "Lyken17/pytorch-OpCounter"
"Swall0w/torchstat" -> "sovrasov/flops-counter.pytorch"
"Swall0w/torchstat" -> "megvii-model/ShuffleNet-Series"
"Swall0w/torchstat" -> "sksq96/pytorch-summary"
"Swall0w/torchstat" -> "JiahuiYu/slimmable_networks" ["e"=1]
"Swall0w/torchstat" -> "ycszen/TorchSeg" ["e"=1]
"Swall0w/torchstat" -> "speedinghzl/CCNet" ["e"=1]
"Swall0w/torchstat" -> "facebookresearch/fvcore"
"Swall0w/torchstat" -> "Eric-mingjie/rethinking-network-pruning" ["e"=1]
"Swall0w/torchstat" -> "Oldpan/Pytorch-Memory-Utils"
"Swall0w/torchstat" -> "zhanghang1989/PyTorch-Encoding" ["e"=1]
"Swall0w/torchstat" -> "NervanaSystems/distiller" ["e"=1]
"Swall0w/torchstat" -> "tanglang96/DataLoaders_DALI"
"Swall0w/torchstat" -> "tonylins/pytorch-mobilenet-v2"
"Swall0w/torchstat" -> "roytseng-tw/Detectron.pytorch"
"albanie/convnet-burden" -> "jcjohnson/cnn-benchmarks"
"albanie/convnet-burden" -> "sovrasov/flops-counter.pytorch"
"albanie/convnet-burden" -> "soeaver/caffe-model"
"albanie/convnet-burden" -> "NervanaSystems/distiller" ["e"=1]
"albanie/convnet-burden" -> "Lyken17/pytorch-OpCounter"
"albanie/convnet-burden" -> "Eric-mingjie/rethinking-network-pruning" ["e"=1]
"albanie/convnet-burden" -> "marvis/pytorch-caffe-darknet-convert"
"albanie/convnet-burden" -> "google/gemmlowp" ["e"=1]
"albanie/convnet-burden" -> "pytorch/QNNPACK" ["e"=1]
"albanie/convnet-burden" -> "yihui-he/channel-pruning" ["e"=1]
"albanie/convnet-burden" -> "Tencent/PocketFlow" ["e"=1]
"albanie/convnet-burden" -> "marvis/pytorch-caffe"
"albanie/convnet-burden" -> "JiahuiYu/slimmable_networks" ["e"=1]
"albanie/convnet-burden" -> "Microsoft/MMdnn"
"albanie/convnet-burden" -> "CeLuigi/models-comparison.pytorch"
"facebookresearch/barlowtwins" -> "facebookresearch/swav"
"facebookresearch/barlowtwins" -> "IgorSusmelj/barlowtwins"
"facebookresearch/barlowtwins" -> "facebookresearch/simsiam"
"facebookresearch/barlowtwins" -> "PatrickHua/SimSiam"
"facebookresearch/barlowtwins" -> "lucidrains/byol-pytorch"
"facebookresearch/barlowtwins" -> "facebookresearch/vissl"
"facebookresearch/barlowtwins" -> "HobbitLong/PyContrast"
"facebookresearch/barlowtwins" -> "HobbitLong/SupContrast"
"facebookresearch/barlowtwins" -> "lightly-ai/lightly"
"facebookresearch/barlowtwins" -> "vturrisi/solo-learn"
"facebookresearch/barlowtwins" -> "facebookresearch/moco"
"facebookresearch/barlowtwins" -> "WXinlong/DenseCL"
"facebookresearch/barlowtwins" -> "google-research/simclr"
"facebookresearch/barlowtwins" -> "facebookresearch/suncet"
"facebookresearch/barlowtwins" -> "facebookresearch/moco-v3"
"facebookresearch/fvcore" -> "facebookresearch/pycls"
"facebookresearch/fvcore" -> "Lyken17/pytorch-OpCounter"
"facebookresearch/fvcore" -> "rbgirshick/yacs"
"facebookresearch/fvcore" -> "facebookresearch/ClassyVision"
"facebookresearch/fvcore" -> "sovrasov/flops-counter.pytorch"
"facebookresearch/fvcore" -> "facebookresearch/deit"
"facebookresearch/fvcore" -> "facebookresearch/SlowFast" ["e"=1]
"facebookresearch/fvcore" -> "facebookresearch/vissl"
"facebookresearch/fvcore" -> "facebookresearch/pytorchvideo" ["e"=1]
"facebookresearch/fvcore" -> "fundamentalvision/Deformable-DETR"
"facebookresearch/fvcore" -> "facebookresearch/moco"
"facebookresearch/fvcore" -> "facebookresearch/pytorch3d" ["e"=1]
"facebookresearch/fvcore" -> "open-mmlab/mmcv"
"facebookresearch/fvcore" -> "facebookresearch/ConvNeXt"
"facebookresearch/fvcore" -> "NVIDIA/DALI"
"facebookresearch/simsiam" -> "PatrickHua/SimSiam"
"facebookresearch/simsiam" -> "facebookresearch/moco-v3"
"facebookresearch/simsiam" -> "facebookresearch/moco"
"facebookresearch/simsiam" -> "lucidrains/byol-pytorch"
"facebookresearch/simsiam" -> "facebookresearch/swav"
"facebookresearch/simsiam" -> "facebookresearch/barlowtwins"
"facebookresearch/simsiam" -> "sthalles/SimCLR"
"facebookresearch/simsiam" -> "WXinlong/DenseCL"
"facebookresearch/simsiam" -> "open-mmlab/mmselfsup"
"facebookresearch/simsiam" -> "HobbitLong/PyContrast"
"facebookresearch/simsiam" -> "HobbitLong/SupContrast"
"facebookresearch/simsiam" -> "google-research/simclr"
"facebookresearch/simsiam" -> "facebookresearch/mae"
"facebookresearch/simsiam" -> "vturrisi/solo-learn"
"facebookresearch/simsiam" -> "facebookresearch/dino"
"fundamentalvision/Deformable-DETR" -> "facebookresearch/detr"
"fundamentalvision/Deformable-DETR" -> "PeizeSun/SparseR-CNN"
"fundamentalvision/Deformable-DETR" -> "facebookresearch/deit"
"fundamentalvision/Deformable-DETR" -> "microsoft/Swin-Transformer"
"fundamentalvision/Deformable-DETR" -> "ShoufaChen/DiffusionDet" ["e"=1]
"fundamentalvision/Deformable-DETR" -> "whai362/PVT"
"fundamentalvision/Deformable-DETR" -> "SwinTransformer/Swin-Transformer-Object-Detection"
"fundamentalvision/Deformable-DETR" -> "facebookresearch/Mask2Former"
"fundamentalvision/Deformable-DETR" -> "IDEACVR/DINO" ["e"=1]
"fundamentalvision/Deformable-DETR" -> "facebookresearch/MaskFormer"
"fundamentalvision/Deformable-DETR" -> "zhiqi-li/BEVFormer" ["e"=1]
"fundamentalvision/Deformable-DETR" -> "dk-liang/Awesome-Visual-Transformer"
"fundamentalvision/Deformable-DETR" -> "IDEA-Research/detrex" ["e"=1]
"fundamentalvision/Deformable-DETR" -> "aim-uofa/AdelaiDet"
"fundamentalvision/Deformable-DETR" -> "xingyizhou/CenterNet2"
"huawei-noah/AdderNet" -> "huawei-noah/ghostnet"
"huawei-noah/AdderNet" -> "guoyongcs/DRN" ["e"=1]
"huawei-noah/AdderNet" -> "Eric-mingjie/rethinking-network-pruning" ["e"=1]
"huawei-noah/AdderNet" -> "huawei-noah/bolt" ["e"=1]
"huawei-noah/AdderNet" -> "iamhankai/ghostnet.pytorch"
"huawei-noah/AdderNet" -> "pkuxmq/Invertible-Image-Rescaling" ["e"=1]
"huawei-noah/AdderNet" -> "huawei-noah/vega" ["e"=1]
"huawei-noah/AdderNet" -> "zhanghang1989/ResNeSt"
"huawei-noah/AdderNet" -> "d-li14/involution"
"huawei-noah/AdderNet" -> "Xiangtaokong/ClassSR" ["e"=1]
"huawei-noah/AdderNet" -> "htqin/awesome-model-quantization" ["e"=1]
"huawei-noah/AdderNet" -> "yinboc/liif" ["e"=1]
"huawei-noah/AdderNet" -> "jiecaoyu/XNOR-Net-PyTorch" ["e"=1]
"huawei-noah/AdderNet" -> "researchmm/TTSR" ["e"=1]
"huawei-noah/AdderNet" -> "xiaolai-sqlai/mobilenetv3"
"jaxony/ShuffleNet" -> "ericsun99/Shufflenet-v2-Pytorch"
"jaxony/ShuffleNet" -> "miaow1988/ShuffleNet_V2_pytorch_caffe"
"jaxony/ShuffleNet" -> "farmingyard/ShuffleNet"
"jaxony/ShuffleNet" -> "marvis/pytorch-mobilenet"
"jaxony/ShuffleNet" -> "MG2033/ShuffleNet"
"jaxony/ShuffleNet" -> "camel007/Caffe-ShuffleNet"
"jwyang/fpn.pytorch" -> "kuangliu/pytorch-fpn"
"jwyang/fpn.pytorch" -> "ruotianluo/pytorch-faster-rcnn"
"jwyang/fpn.pytorch" -> "roytseng-tw/Detectron.pytorch"
"jwyang/fpn.pytorch" -> "lzx1413/PytorchSSD"
"jwyang/fpn.pytorch" -> "longcw/faster_rcnn_pytorch"
"jwyang/fpn.pytorch" -> "jwyang/faster-rcnn.pytorch"
"jwyang/fpn.pytorch" -> "unsky/FPN"
"jwyang/fpn.pytorch" -> "kuangliu/pytorch-retinanet"
"jwyang/fpn.pytorch" -> "guoruoqian/DetNet_pytorch"
"jwyang/fpn.pytorch" -> "princeton-vl/CornerNet"
"jwyang/fpn.pytorch" -> "yhenon/pytorch-retinanet"
"jwyang/fpn.pytorch" -> "ruinmessi/RFBNet"
"jwyang/fpn.pytorch" -> "guoruoqian/cascade-rcnn_Pytorch"
"jwyang/fpn.pytorch" -> "sfzhang15/RefineDet"
"jwyang/fpn.pytorch" -> "msracver/Relation-Networks-for-Object-Detection"
"lucidrains/lambda-networks" -> "leaderj1001/LambdaNetworks"
"lucidrains/lambda-networks" -> "facebookresearch/deit"
"lucidrains/lambda-networks" -> "lucidrains/performer-pytorch" ["e"=1]
"lucidrains/lambda-networks" -> "zhanghang1989/ResNeSt"
"lucidrains/lambda-networks" -> "facebookresearch/FixRes"
"lucidrains/lambda-networks" -> "szq0214/MEAL-V2" ["e"=1]
"lucidrains/lambda-networks" -> "juntang-zhuang/Adabelief-Optimizer"
"lucidrains/lambda-networks" -> "yitu-opensource/T2T-ViT"
"lucidrains/lambda-networks" -> "DingXiaoH/RepVGG"
"lucidrains/lambda-networks" -> "LandskapeAI/triplet-attention" ["e"=1]
"lucidrains/lambda-networks" -> "WongKinYiu/ScaledYOLOv4"
"lucidrains/lambda-networks" -> "d-li14/involution"
"lucidrains/lambda-networks" -> "PeizeSun/SparseR-CNN"
"lucidrains/lambda-networks" -> "joe-siyuan-qiao/DetectoRS"
"lucidrains/lambda-networks" -> "facebookresearch/pycls"
"ming71/mmdetection-annotated" -> "hhaAndroid/mmdetection-mini"
"ming71/mmdetection-annotated" -> "ming71/toolbox"
"ming71/mmdetection-annotated" -> "spytensor/prepare_detection_dataset"
"ming71/mmdetection-annotated" -> "ming71/CV_PaperDaily"
"ming71/mmdetection-annotated" -> "TuSimple/simpledet"
"ming71/mmdetection-annotated" -> "kemaloksuz/ObjectDetectionImbalance"
"ming71/mmdetection-annotated" -> "dingjiansw101/AerialDetection" ["e"=1]
"ming71/mmdetection-annotated" -> "ruinmessi/ASFF"
"ming71/mmdetection-annotated" -> "guoruoqian/cascade-rcnn_Pytorch"
"ming71/mmdetection-annotated" -> "Sense-X/TSD"
"ming71/mmdetection-annotated" -> "tianzhi0549/FCOS"
"ming71/mmdetection-annotated" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"ming71/mmdetection-annotated" -> "sfzhang15/ATSS"
"ming71/mmdetection-annotated" -> "foocker/mmdetection-code-analysis"
"ming71/mmdetection-annotated" -> "microsoft/RepPoints"
"open-mmlab/mmselfsup" -> "open-mmlab/mmfewshot"
"open-mmlab/mmselfsup" -> "open-mmlab/mmrazor"
"open-mmlab/mmselfsup" -> "open-mmlab/mmdeploy"
"open-mmlab/mmselfsup" -> "open-mmlab/mmclassification"
"open-mmlab/mmselfsup" -> "open-mmlab/mmyolo"
"open-mmlab/mmselfsup" -> "open-mmlab/mmflow"
"open-mmlab/mmselfsup" -> "open-mmlab/mmengine"
"open-mmlab/mmselfsup" -> "facebookresearch/mae"
"open-mmlab/mmselfsup" -> "facebookresearch/simsiam"
"open-mmlab/mmselfsup" -> "facebookresearch/moco-v3"
"open-mmlab/mmselfsup" -> "open-mmlab/mim"
"open-mmlab/mmselfsup" -> "open-mmlab/mmsegmentation"
"open-mmlab/mmselfsup" -> "open-mmlab/mmgeneration"
"open-mmlab/mmselfsup" -> "facebookresearch/moco"
"open-mmlab/mmselfsup" -> "microsoft/SimMIM"
"sovrasov/flops-counter.pytorch" -> "Lyken17/pytorch-OpCounter"
"sovrasov/flops-counter.pytorch" -> "Swall0w/torchstat"
"sovrasov/flops-counter.pytorch" -> "sksq96/pytorch-summary"
"sovrasov/flops-counter.pytorch" -> "facebookresearch/fvcore"
"sovrasov/flops-counter.pytorch" -> "DingXiaoH/RepVGG"
"sovrasov/flops-counter.pytorch" -> "he-y/Awesome-Pruning" ["e"=1]
"sovrasov/flops-counter.pytorch" -> "NVIDIA/apex"
"sovrasov/flops-counter.pytorch" -> "moskomule/senet.pytorch" ["e"=1]
"sovrasov/flops-counter.pytorch" -> "tianzhi0549/FCOS"
"sovrasov/flops-counter.pytorch" -> "NervanaSystems/distiller" ["e"=1]
"sovrasov/flops-counter.pytorch" -> "zhanghang1989/ResNeSt"
"sovrasov/flops-counter.pytorch" -> "megvii-model/ShuffleNet-Series"
"sovrasov/flops-counter.pytorch" -> "utkuozbulak/pytorch-cnn-visualizations"
"sovrasov/flops-counter.pytorch" -> "lukemelas/EfficientNet-PyTorch"
"sovrasov/flops-counter.pytorch" -> "vacancy/Synchronized-BatchNorm-PyTorch" ["e"=1]
"zhirongw/lemniscate.pytorch" -> "HobbitLong/CMC"
"zhirongw/lemniscate.pytorch" -> "mangye16/Unsupervised_Embedding_Learning"
"zhirongw/lemniscate.pytorch" -> "gidariss/FeatureLearningRotNet"
"zhirongw/lemniscate.pytorch" -> "HobbitLong/PyContrast"
"zhirongw/lemniscate.pytorch" -> "facebookresearch/swav"
"zhirongw/lemniscate.pytorch" -> "open-mmlab/OpenSelfSup"
"zhirongw/lemniscate.pytorch" -> "facebookresearch/fair_self_supervision_benchmark"
"zhirongw/lemniscate.pytorch" -> "facebookresearch/deepcluster"
"zhirongw/lemniscate.pytorch" -> "facebookresearch/moco"
"zhirongw/lemniscate.pytorch" -> "Raymond-sci/AND"
"zhirongw/lemniscate.pytorch" -> "Philip-Bachman/amdim-public"
"zhirongw/lemniscate.pytorch" -> "google-research/simclr"
"zhirongw/lemniscate.pytorch" -> "rdevon/DIM"
"zhirongw/lemniscate.pytorch" -> "sthalles/PyTorch-BYOL"
"zhirongw/lemniscate.pytorch" -> "leftthomas/SimCLR"
"dongdonghy/Detection-PyTorch-Notebook" -> "chenyuntc/simple-faster-rcnn-pytorch"
"dongdonghy/Detection-PyTorch-Notebook" -> "bobo0810/PytorchNetHub"
"dongdonghy/Detection-PyTorch-Notebook" -> "pprp/SimpleCVReproduction" ["e"=1]
"dongdonghy/Detection-PyTorch-Notebook" -> "ruinmessi/ASFF"
"dongdonghy/Detection-PyTorch-Notebook" -> "Tianxiaomo/pytorch-YOLOv4"
"dongdonghy/Detection-PyTorch-Notebook" -> "longpeng2008/yousan.ai"
"dongdonghy/Detection-PyTorch-Notebook" -> "hhaAndroid/mmdetection-mini"
"dongdonghy/Detection-PyTorch-Notebook" -> "dragen1860/Deep-Learning-with-PyTorch-Tutorials" ["e"=1]
"dongdonghy/Detection-PyTorch-Notebook" -> "bubbliiiing/yolov4-pytorch" ["e"=1]
"dongdonghy/Detection-PyTorch-Notebook" -> "jwyang/faster-rcnn.pytorch"
"dongdonghy/Detection-PyTorch-Notebook" -> "ming71/mmdetection-annotated"
"dongdonghy/Detection-PyTorch-Notebook" -> "Tencent/ObjectDetection-OneStageDet" ["e"=1]
"dongdonghy/Detection-PyTorch-Notebook" -> "WongKinYiu/PyTorch_YOLOv4"
"dongdonghy/Detection-PyTorch-Notebook" -> "ocrbook/ocrinaction" ["e"=1]
"dongdonghy/Detection-PyTorch-Notebook" -> "DataXujing/YOLO-v5" ["e"=1]
"manutdzou/KITTI_SSD" -> "jinfagang/kitti-ssd"
"manutdzou/KITTI_SSD" -> "manutdzou/KITTI_FRC_detection"
"SwinTransformer/Swin-Transformer-Object-Detection" -> "SwinTransformer/Swin-Transformer-Semantic-Segmentation"
"SwinTransformer/Swin-Transformer-Object-Detection" -> "microsoft/Swin-Transformer"
"SwinTransformer/Swin-Transformer-Object-Detection" -> "fundamentalvision/Deformable-DETR"
"SwinTransformer/Swin-Transformer-Object-Detection" -> "microsoft/SoftTeacher"
"SwinTransformer/Swin-Transformer-Object-Detection" -> "microsoft/DynamicHead"
"SwinTransformer/Swin-Transformer-Object-Detection" -> "xingyizhou/CenterNet2"
"SwinTransformer/Swin-Transformer-Object-Detection" -> "whai362/PVT"
"SwinTransformer/Swin-Transformer-Object-Detection" -> "IDEACVR/DINO" ["e"=1]
"SwinTransformer/Swin-Transformer-Object-Detection" -> "PeizeSun/SparseR-CNN"
"SwinTransformer/Swin-Transformer-Object-Detection" -> "facebookresearch/detr"
"SwinTransformer/Swin-Transformer-Object-Detection" -> "aim-uofa/AdelaiDet"
"SwinTransformer/Swin-Transformer-Object-Detection" -> "facebookresearch/ConvNeXt"
"SwinTransformer/Swin-Transformer-Object-Detection" -> "berniwal/swin-transformer-pytorch"
"SwinTransformer/Swin-Transformer-Object-Detection" -> "WongKinYiu/ScaledYOLOv4"
"SwinTransformer/Swin-Transformer-Object-Detection" -> "Megvii-BaseDetection/YOLOX"
"szq0214/DSOD" -> "sfzhang15/RefineDet"
"szq0214/DSOD" -> "taokong/RON"
"szq0214/DSOD" -> "Robert-JunWang/Pelee"
"szq0214/DSOD" -> "zengarden/light_head_rcnn"
"szq0214/DSOD" -> "bharatsingh430/soft-nms"
"szq0214/DSOD" -> "ruinmessi/RFBNet"
"szq0214/DSOD" -> "yihui-he/channel-pruning" ["e"=1]
"szq0214/DSOD" -> "bharatsingh430/Deformable-ConvNets"
"szq0214/DSOD" -> "cypw/DPNs" ["e"=1]
"szq0214/DSOD" -> "zhaoweicai/mscnn"
"szq0214/DSOD" -> "shicai/MobileNet-Caffe"
"szq0214/DSOD" -> "lyxok1/Tiny-DSOD"
"szq0214/DSOD" -> "xiaolonw/adversarial-frcnn"
"szq0214/DSOD" -> "sanghoon/pva-faster-rcnn"
"szq0214/DSOD" -> "zhaoweicai/cascade-rcnn"
"PaddlePaddle/book" -> "PaddlePaddle/models"
"PaddlePaddle/book" -> "PaddlePaddle/Paddle"
"PaddlePaddle/book" -> "alibaba/x-deeplearning" ["e"=1]
"PaddlePaddle/book" -> "baidu/Familia" ["e"=1]
"PaddlePaddle/book" -> "PaddlePaddle/VisualDL"
"PaddlePaddle/book" -> "PaddlePaddle/ERNIE" ["e"=1]
"PaddlePaddle/book" -> "yeyupiaoling/LearnPaddle" ["e"=1]
"PaddlePaddle/book" -> "Tencent/angel" ["e"=1]
"PaddlePaddle/book" -> "baidu/Paddle" ["e"=1]
"PaddlePaddle/book" -> "PaddlePaddle/LARK" ["e"=1]
"PaddlePaddle/book" -> "guestwalk/kaggle-2014-criteo" ["e"=1]
"PaddlePaddle/book" -> "Embedding/Chinese-Word-Vectors" ["e"=1]
"PaddlePaddle/book" -> "baidu/AnyQ" ["e"=1]
"PaddlePaddle/book" -> "baidu/bigflow" ["e"=1]
"PaddlePaddle/book" -> "aksnzhy/xlearn" ["e"=1]
"open-mmlab/mmengine" -> "open-mmlab/mmeval"
"open-mmlab/mmengine" -> "open-mmlab/mmyolo"
"open-mmlab/mmengine" -> "open-mmlab/mim"
"open-mmlab/mmengine" -> "open-mmlab/playground"
"open-mmlab/mmengine" -> "open-mmlab/mmdeploy"
"open-mmlab/mmengine" -> "open-mmlab/mmflow"
"open-mmlab/mmengine" -> "open-mmlab/mmrazor"
"open-mmlab/mmengine" -> "open-mmlab/mmfewshot"
"open-mmlab/mmengine" -> "open-mmlab/OpenMMLabCourse"
"open-mmlab/mmengine" -> "open-mmlab/mmselfsup"
"open-mmlab/mmengine" -> "open-mmlab/mmclassification"
"open-mmlab/mmengine" -> "open-mmlab/mmrotate" ["e"=1]
"open-mmlab/mmengine" -> "open-mmlab/mmhuman3d" ["e"=1]
"open-mmlab/mmengine" -> "IDEA-Research/detrex" ["e"=1]
"open-mmlab/mmengine" -> "open-mmlab/labelbee"
"williamFalcon/test-tube" -> "williamFalcon/pytorch-lightning"
"williamFalcon/test-tube" -> "henripal/labnotebook" ["e"=1]
"williamFalcon/test-tube" -> "PyTorchLightning/metrics"
"williamFalcon/test-tube" -> "torrvision/crayon"
"williamFalcon/test-tube" -> "zygmuntz/hyperband" ["e"=1]
"williamFalcon/test-tube" -> "PyTorchLightning/pytorch-lightning-bolts"
"williamFalcon/test-tube" -> "IDSIA/sacred" ["e"=1]
"williamFalcon/test-tube" -> "Kaixhin/FGLab"
"williamFalcon/test-tube" -> "PyTorchLightning/deep-learning-project-template"
"williamFalcon/test-tube" -> "PyTorchLightning/lightning-flash"
"williamFalcon/test-tube" -> "williamFalcon/DeepRLHacks" ["e"=1]
"PaddlePaddle/Paddle3D" -> "PaddlePaddle/PaddleRS" ["e"=1]
"PaddlePaddle/Paddle3D" -> "PaddlePaddle/FastDeploy"
"PaddlePaddle/Paddle3D" -> "PaddlePaddle/PASSL"
"PaddlePaddle/Paddle3D" -> "PaddlePaddle/PaddleYOLO"
"PaddlePaddle/Paddle3D" -> "PaddlePaddle/Paddle2ONNX"
"PaddlePaddle/Paddle3D" -> "OpenPerceptionX/BEVPerception-Survey-Recipe" ["e"=1]
"PaddlePaddle/Paddle3D" -> "nemonameless/PaddleDetection_YOLOSeries"
"PaddlePaddle/Paddle3D" -> "megvii-research/PETR" ["e"=1]
"PaddlePaddle/Paddle3D" -> "WangYueFt/detr3d" ["e"=1]
"PaddlePaddle/Paddle3D" -> "NVIDIA-AI-IOT/CUDA-PointPillars" ["e"=1]
"PaddlePaddle/Paddle3D" -> "HuangJunJie2017/BEVDet" ["e"=1]
"PaddlePaddle/Paddle3D" -> "TuSimple/centerformer" ["e"=1]
"PaddlePaddle/Paddle3D" -> "PaddlePaddle/PaddleSlim"
"PaddlePaddle/Paddle3D" -> "mit-han-lab/bevfusion" ["e"=1]
"PaddlePaddle/Paddle3D" -> "Xianpeng919/MonoCon" ["e"=1]
"PaddlePaddle/PaddleSlim" -> "PaddlePaddle/FastDeploy"
"PaddlePaddle/PaddleSlim" -> "PaddlePaddle/Paddle-Lite"
"PaddlePaddle/PaddleSlim" -> "PaddlePaddle/Serving" ["e"=1]
"PaddlePaddle/PaddleSlim" -> "PaddlePaddle/X2Paddle"
"PaddlePaddle/PaddleSlim" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"PaddlePaddle/PaddleSlim" -> "PaddlePaddle/PaddleClas"
"PaddlePaddle/PaddleSlim" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/PaddleSlim" -> "PaddlePaddle/PaddleVideo" ["e"=1]
"PaddlePaddle/PaddleSlim" -> "open-mmlab/mmrazor"
"PaddlePaddle/PaddleSlim" -> "PaddlePaddle/Paddle-Lite-Demo"
"PaddlePaddle/PaddleSlim" -> "PaddlePaddle/Paddle3D"
"PaddlePaddle/PaddleSlim" -> "666DZY666/micronet" ["e"=1]
"PaddlePaddle/PaddleSlim" -> "PaddlePaddle/Paddle2ONNX"
"PaddlePaddle/PaddleSlim" -> "openppl-public/ppq"
"PaddlePaddle/PaddleSlim" -> "DingXiaoH/RepVGG"
"trent-b/iterative-stratification" -> "qubvel/ttach"
"trent-b/iterative-stratification" -> "amirassov/kaggle-imaterialist" ["e"=1]
"trent-b/iterative-stratification" -> "pudae/kaggle-hpa" ["e"=1]
"trent-b/iterative-stratification" -> "BloodAxe/pytorch-toolbelt"
"trent-b/iterative-stratification" -> "dreamquark-ai/tabnet" ["e"=1]
"trent-b/iterative-stratification" -> "ZFTurbo/Weighted-Boxes-Fusion"
"trent-b/iterative-stratification" -> "psinger/kaggle-landmark-recognition-2020-1st-place" ["e"=1]
"trent-b/iterative-stratification" -> "nyanp/nyaggle" ["e"=1]
"trent-b/iterative-stratification" -> "rwightman/efficientdet-pytorch"
"trent-b/iterative-stratification" -> "bermanmaxim/LovaszSoftmax" ["e"=1]
"trent-b/iterative-stratification" -> "albu/albumentations"
"trent-b/iterative-stratification" -> "earhian/Humpback-Whale-Identification-1st-" ["e"=1]
"trent-b/iterative-stratification" -> "qubvel/classification_models"
"trent-b/iterative-stratification" -> "pudae/kaggle-humpback" ["e"=1]
"trent-b/iterative-stratification" -> "ybabakhin/kaggle_salt_bes_phalanx" ["e"=1]
"bearpaw/pytorch-classification" -> "kuangliu/pytorch-cifar"
"bearpaw/pytorch-classification" -> "weiaicunzai/pytorch-cifar100"
"bearpaw/pytorch-classification" -> "hysts/pytorch_image_classification"
"bearpaw/pytorch-classification" -> "aaron-xichen/pytorch-playground"
"bearpaw/pytorch-classification" -> "akamaster/pytorch_resnet_cifar10"
"bearpaw/pytorch-classification" -> "moskomule/senet.pytorch" ["e"=1]
"bearpaw/pytorch-classification" -> "junyuseu/pytorch-cifar-models"
"bearpaw/pytorch-classification" -> "Cadene/pretrained-models.pytorch"
"bearpaw/pytorch-classification" -> "peterliht/knowledge-distillation-pytorch" ["e"=1]
"bearpaw/pytorch-classification" -> "hujie-frank/SENet"
"bearpaw/pytorch-classification" -> "gpleiss/efficient_densenet_pytorch"
"bearpaw/pytorch-classification" -> "felixgwu/img_classification_pk_pytorch"
"bearpaw/pytorch-classification" -> "Eric-mingjie/rethinking-network-pruning" ["e"=1]
"bearpaw/pytorch-classification" -> "prlz77/ResNeXt.pytorch"
"bearpaw/pytorch-classification" -> "tonylins/pytorch-mobilenet-v2"
"lanpa/tensorboardX" -> "facebookresearch/visdom"
"lanpa/tensorboardX" -> "NVIDIA/apex"
"lanpa/tensorboardX" -> "utkuozbulak/pytorch-cnn-visualizations"
"lanpa/tensorboardX" -> "sksq96/pytorch-summary"
"lanpa/tensorboardX" -> "facebookresearch/maskrcnn-benchmark"
"lanpa/tensorboardX" -> "pytorch/examples"
"lanpa/tensorboardX" -> "rusty1s/pytorch_geometric" ["e"=1]
"lanpa/tensorboardX" -> "pytorch/vision"
"lanpa/tensorboardX" -> "Cadene/pretrained-models.pytorch"
"lanpa/tensorboardX" -> "jwyang/faster-rcnn.pytorch"
"lanpa/tensorboardX" -> "lukemelas/EfficientNet-PyTorch"
"lanpa/tensorboardX" -> "huggingface/pytorch-pretrained-BERT" ["e"=1]
"lanpa/tensorboardX" -> "pytorch/ignite"
"lanpa/tensorboardX" -> "Lyken17/pytorch-OpCounter"
"lanpa/tensorboardX" -> "szagoruyko/pytorchviz"
"osmr/imgclsmob" -> "lukemelas/EfficientNet-PyTorch"
"osmr/imgclsmob" -> "albu/albumentations"
"osmr/imgclsmob" -> "qubvel/segmentation_models.pytorch"
"osmr/imgclsmob" -> "BloodAxe/pytorch-toolbelt"
"osmr/imgclsmob" -> "Cadene/pretrained-models.pytorch"
"osmr/imgclsmob" -> "zhanghang1989/ResNeSt"
"osmr/imgclsmob" -> "rwightman/pytorch-image-models"
"osmr/imgclsmob" -> "dmlc/gluon-cv"
"osmr/imgclsmob" -> "xingyizhou/CenterNet"
"osmr/imgclsmob" -> "rwightman/gen-efficientnet-pytorch"
"osmr/imgclsmob" -> "facebookresearch/pycls"
"osmr/imgclsmob" -> "qubvel/efficientnet"
"osmr/imgclsmob" -> "qubvel/segmentation_models"
"osmr/imgclsmob" -> "tensorflow/tpu"
"osmr/imgclsmob" -> "amusi/awesome-object-detection"
"pytorch/captum" -> "utkuozbulak/pytorch-cnn-visualizations"
"pytorch/captum" -> "skorch-dev/skorch"
"pytorch/captum" -> "jphall663/awesome-machine-learning-interpretability" ["e"=1]
"pytorch/captum" -> "arogozhnikov/einops"
"pytorch/captum" -> "slundberg/shap" ["e"=1]
"pytorch/captum" -> "SeldonIO/alibi" ["e"=1]
"pytorch/captum" -> "KevinMusgrave/pytorch-metric-learning"
"pytorch/captum" -> "interpretml/interpret" ["e"=1]
"pytorch/captum" -> "kundajelab/deeplift" ["e"=1]
"pytorch/captum" -> "tensorflow/lucid"
"pytorch/captum" -> "facebookresearch/vissl"
"pytorch/captum" -> "marcoancona/DeepExplain" ["e"=1]
"pytorch/captum" -> "williamFalcon/pytorch-lightning"
"pytorch/captum" -> "facebookresearch/hydra"
"pytorch/captum" -> "pytorch/ignite"
"ruotianluo/pytorch-faster-rcnn" -> "longcw/faster_rcnn_pytorch"
"ruotianluo/pytorch-faster-rcnn" -> "chenyuntc/simple-faster-rcnn-pytorch"
"ruotianluo/pytorch-faster-rcnn" -> "jwyang/faster-rcnn.pytorch"
"ruotianluo/pytorch-faster-rcnn" -> "roytseng-tw/Detectron.pytorch"
"ruotianluo/pytorch-faster-rcnn" -> "longcw/yolo2-pytorch"
"ruotianluo/pytorch-faster-rcnn" -> "amdegroot/ssd.pytorch"
"ruotianluo/pytorch-faster-rcnn" -> "jwyang/fpn.pytorch"
"ruotianluo/pytorch-faster-rcnn" -> "multimodallearning/pytorch-mask-rcnn"
"ruotianluo/pytorch-faster-rcnn" -> "facebookresearch/maskrcnn-benchmark"
"ruotianluo/pytorch-faster-rcnn" -> "endernewton/tf-faster-rcnn"
"ruotianluo/pytorch-faster-rcnn" -> "rbgirshick/py-faster-rcnn"
"ruotianluo/pytorch-faster-rcnn" -> "kuangliu/pytorch-retinanet"
"ruotianluo/pytorch-faster-rcnn" -> "msracver/Deformable-ConvNets"
"ruotianluo/pytorch-faster-rcnn" -> "ayooshkathuria/pytorch-yolo-v3"
"ruotianluo/pytorch-faster-rcnn" -> "lanpa/tensorboard-pytorch"
"shelhamer/fcn.berkeleyvision.org" -> "shekkizh/FCN.tensorflow" ["e"=1]
"shelhamer/fcn.berkeleyvision.org" -> "MarvinTeichmann/tensorflow-fcn" ["e"=1]
"shelhamer/fcn.berkeleyvision.org" -> "wkentaro/pytorch-fcn" ["e"=1]
"shelhamer/fcn.berkeleyvision.org" -> "rbgirshick/py-faster-rcnn"
"shelhamer/fcn.berkeleyvision.org" -> "hszhao/PSPNet" ["e"=1]
"shelhamer/fcn.berkeleyvision.org" -> "torrvision/crfasrnn" ["e"=1]
"shelhamer/fcn.berkeleyvision.org" -> "weiliu89/caffe"
"shelhamer/fcn.berkeleyvision.org" -> "daijifeng001/R-FCN"
"shelhamer/fcn.berkeleyvision.org" -> "CharlesShang/FastMaskRCNN"
"shelhamer/fcn.berkeleyvision.org" -> "KaimingHe/deep-residual-networks"
"shelhamer/fcn.berkeleyvision.org" -> "rbgirshick/fast-rcnn"
"shelhamer/fcn.berkeleyvision.org" -> "liuzhuang13/DenseNet"
"shelhamer/fcn.berkeleyvision.org" -> "mrgloom/awesome-semantic-segmentation"
"shelhamer/fcn.berkeleyvision.org" -> "alexgkendall/caffe-segnet" ["e"=1]
"shelhamer/fcn.berkeleyvision.org" -> "msracver/Deformable-ConvNets"
"digantamisra98/Mish" -> "lessw2020/Ranger-Deep-Learning-Optimizer"
"digantamisra98/Mish" -> "LiyuanLucasLiu/RAdam"
"digantamisra98/Mish" -> "thomasbrandon/mish-cuda"
"digantamisra98/Mish" -> "WongKinYiu/CrossStagePartialNetworks"
"digantamisra98/Mish" -> "zhanghang1989/ResNeSt"
"digantamisra98/Mish" -> "digantamisra98/Echo"
"digantamisra98/Mish" -> "lessw2020/mish"
"digantamisra98/Mish" -> "aksht94/UdacityOpenSource" ["e"=1]
"digantamisra98/Mish" -> "facebookresearch/OctConv" ["e"=1]
"digantamisra98/Mish" -> "facebookresearch/pycls"
"digantamisra98/Mish" -> "mgrankin/over9000"
"digantamisra98/Mish" -> "rwightman/gen-efficientnet-pytorch"
"digantamisra98/Mish" -> "juntang-zhuang/Adabelief-Optimizer"
"digantamisra98/Mish" -> "vacancy/Synchronized-BatchNorm-PyTorch" ["e"=1]
"digantamisra98/Mish" -> "huawei-noah/ghostnet"
"meituan/YOLOv6" -> "WongKinYiu/yolov7"
"meituan/YOLOv6" -> "jinfagang/yolov7"
"meituan/YOLOv6" -> "Megvii-BaseDetection/YOLOX"
"meituan/YOLOv6" -> "ultralytics/ultralytics"
"meituan/YOLOv6" -> "wang-xinyu/tensorrtx"
"meituan/YOLOv6" -> "RangiLyu/nanodet"
"meituan/YOLOv6" -> "iscyy/yoloair"
"meituan/YOLOv6" -> "open-mmlab/mmyolo"
"meituan/YOLOv6" -> "DingXiaoH/RepVGG"
"meituan/YOLOv6" -> "WongKinYiu/yolor"
"meituan/YOLOv6" -> "jizhishutong/YOLOU"
"meituan/YOLOv6" -> "deepcam-cn/yolov5-face"
"meituan/YOLOv6" -> "ifzhang/ByteTrack" ["e"=1]
"meituan/YOLOv6" -> "PaddlePaddle/PaddleDetection"
"meituan/YOLOv6" -> "ppogg/YOLOv5-Lite" ["e"=1]
"microsoft/onnxruntime" -> "onnx/onnx"
"microsoft/onnxruntime" -> "NVIDIA/TensorRT"
"microsoft/onnxruntime" -> "daquexian/onnx-simplifier"
"microsoft/onnxruntime" -> "lutzroeder/netron"
"microsoft/onnxruntime" -> "onnx/models"
"microsoft/onnxruntime" -> "onnx/onnx-tensorrt"
"microsoft/onnxruntime" -> "triton-inference-server/server"
"microsoft/onnxruntime" -> "onnx/tensorflow-onnx"
"microsoft/onnxruntime" -> "onnx/tutorials"
"microsoft/onnxruntime" -> "Tencent/ncnn"
"microsoft/onnxruntime" -> "alibaba/MNN"
"microsoft/onnxruntime" -> "NVIDIA-AI-IOT/torch2trt"
"microsoft/onnxruntime" -> "Tencent/TNN"
"microsoft/onnxruntime" -> "openai/triton" ["e"=1]
"microsoft/onnxruntime" -> "wang-xinyu/tensorrtx"
"triton-inference-server/server" -> "NVIDIA/TensorRT"
"triton-inference-server/server" -> "pytorch/serve" ["e"=1]
"triton-inference-server/server" -> "NVIDIA/FasterTransformer" ["e"=1]
"triton-inference-server/server" -> "onnx/onnx-tensorrt"
"triton-inference-server/server" -> "wang-xinyu/tensorrtx"
"triton-inference-server/server" -> "NVIDIA-AI-IOT/torch2trt"
"triton-inference-server/server" -> "microsoft/onnxruntime"
"triton-inference-server/server" -> "triton-inference-server/client" ["e"=1]
"triton-inference-server/server" -> "openai/triton" ["e"=1]
"triton-inference-server/server" -> "daquexian/onnx-simplifier"
"triton-inference-server/server" -> "kserve/kserve" ["e"=1]
"triton-inference-server/server" -> "apache/tvm" ["e"=1]
"triton-inference-server/server" -> "facebookincubator/AITemplate" ["e"=1]
"triton-inference-server/server" -> "NVIDIA/Megatron-LM" ["e"=1]
"triton-inference-server/server" -> "horovod/horovod"
"TuSimple/mx-maskrcnn" -> "precedenceguo/mx-rcnn" ["e"=1]
"TuSimple/mx-maskrcnn" -> "msracver/FCIS"
"TuSimple/mx-maskrcnn" -> "CharlesShang/FastMaskRCNN"
"TuSimple/mx-maskrcnn" -> "msracver/Deformable-ConvNets"
"TuSimple/mx-maskrcnn" -> "zhreshold/mxnet-ssd" ["e"=1]
"TuSimple/mx-maskrcnn" -> "mli/gluon-tutorials-zh"
"TuSimple/mx-maskrcnn" -> "chinakook/Awesome-MXNet" ["e"=1]
"TuSimple/mx-maskrcnn" -> "TuSimple/TuSimple-DUC" ["e"=1]
"TuSimple/mx-maskrcnn" -> "soeaver/caffe-model"
"TuSimple/mx-maskrcnn" -> "unsky/focal-loss"
"TuSimple/mx-maskrcnn" -> "zengarden/light_head_rcnn"
"TuSimple/mx-maskrcnn" -> "sfzhang15/RefineDet"
"TuSimple/mx-maskrcnn" -> "hszhao/PSPNet" ["e"=1]
"TuSimple/mx-maskrcnn" -> "msracver/Deep-Feature-Flow" ["e"=1]
"TuSimple/mx-maskrcnn" -> "daijifeng001/R-FCN"
"tensorspace-team/tensorspace" -> "jhfjhfj1/autokeras" ["e"=1]
"tensorspace-team/tensorspace" -> "tensorflow/lucid"
"tensorspace-team/tensorspace" -> "NVIDIA/vid2vid" ["e"=1]
"tensorspace-team/tensorspace" -> "tensorflow/adanet" ["e"=1]
"tensorspace-team/tensorspace" -> "Microsoft/MMdnn"
"tensorspace-team/tensorspace" -> "google/dopamine" ["e"=1]
"tensorspace-team/tensorspace" -> "albu/albumentations"
"tensorspace-team/tensorspace" -> "deepmind/trfl" ["e"=1]
"tensorspace-team/tensorspace" -> "mdbloice/Augmentor"
"tensorspace-team/tensorspace" -> "facebookresearch/maskrcnn-benchmark"
"tensorspace-team/tensorspace" -> "Luolc/AdaBound"
"tensorspace-team/tensorspace" -> "facebookresearch/pytext" ["e"=1]
"tensorspace-team/tensorspace" -> "uber/horovod"
"tensorspace-team/tensorspace" -> "timzhang642/3D-Machine-Learning" ["e"=1]
"tensorspace-team/tensorspace" -> "facebookresearch/visdom"
"asheeshcric/awesome-contrastive-self-supervised-learning" -> "HobbitLong/PyContrast"
"asheeshcric/awesome-contrastive-self-supervised-learning" -> "HobbitLong/SupContrast"
"asheeshcric/awesome-contrastive-self-supervised-learning" -> "coder-duibai/Contrastive-Learning-Papers-Codes" ["e"=1]
"asheeshcric/awesome-contrastive-self-supervised-learning" -> "dev-sungman/Awesome-Self-Supervised-Papers"
"asheeshcric/awesome-contrastive-self-supervised-learning" -> "jason718/awesome-self-supervised-learning"
"asheeshcric/awesome-contrastive-self-supervised-learning" -> "VainF/Awesome-Contrastive-Learning"
"asheeshcric/awesome-contrastive-self-supervised-learning" -> "ContrastiveSR/Contrastive_Learning_Papers"
"asheeshcric/awesome-contrastive-self-supervised-learning" -> "yuewang-cuhk/awesome-vision-language-pretraining-papers" ["e"=1]
"asheeshcric/awesome-contrastive-self-supervised-learning" -> "dk-liang/Awesome-Visual-Transformer"
"asheeshcric/awesome-contrastive-self-supervised-learning" -> "yassouali/awesome-semi-supervised-learning" ["e"=1]
"asheeshcric/awesome-contrastive-self-supervised-learning" -> "lucidrains/byol-pytorch"
"asheeshcric/awesome-contrastive-self-supervised-learning" -> "open-mmlab/OpenSelfSup"
"asheeshcric/awesome-contrastive-self-supervised-learning" -> "salesforce/PCL"
"asheeshcric/awesome-contrastive-self-supervised-learning" -> "facebookresearch/swav"
"asheeshcric/awesome-contrastive-self-supervised-learning" -> "facebookresearch/moco"
"flyyufelix/DenseNet-Keras" -> "titu1994/DenseNet"
"flyyufelix/DenseNet-Keras" -> "flyyufelix/cnn_finetune"
"flyyufelix/DenseNet-Keras" -> "liuzhuang13/DenseNet"
"flyyufelix/DenseNet-Keras" -> "YixuanLi/densenet-tensorflow"
"flyyufelix/DenseNet-Keras" -> "taki0112/Densenet-Tensorflow"
"flyyufelix/DenseNet-Keras" -> "ikhlestov/vision_networks"
"flyyufelix/DenseNet-Keras" -> "pudae/tensorflow-densenet"
"flyyufelix/DenseNet-Keras" -> "raghakot/keras-resnet"
"flyyufelix/DenseNet-Keras" -> "kentsommer/keras-inceptionV4"
"flyyufelix/DenseNet-Keras" -> "shicai/DenseNet-Caffe"
"flyyufelix/DenseNet-Keras" -> "yhenon/keras-frcnn"
"flyyufelix/DenseNet-Keras" -> "aurora95/Keras-FCN" ["e"=1]
"flyyufelix/DenseNet-Keras" -> "SimJeg/FC-DenseNet" ["e"=1]
"flyyufelix/DenseNet-Keras" -> "tdeboissiere/DeepLearningImplementations" ["e"=1]
"flyyufelix/DenseNet-Keras" -> "taki0112/SENet-Tensorflow"
"kratzert/finetune_alexnet_with_tensorflow" -> "hjptriplebee/AlexNet_with_tensorflow"
"kratzert/finetune_alexnet_with_tensorflow" -> "dgurkaynak/tensorflow-cnn-finetune"
"kratzert/finetune_alexnet_with_tensorflow" -> "dontfollowmeimcrazy/imagenet"
"kratzert/finetune_alexnet_with_tensorflow" -> "machrisaa/tensorflow-vgg"
"kratzert/finetune_alexnet_with_tensorflow" -> "ethereon/caffe-tensorflow"
"kratzert/finetune_alexnet_with_tensorflow" -> "stephen-v/tensorflow_alexnet_classify"
"kratzert/finetune_alexnet_with_tensorflow" -> "wenxinxu/resnet-in-tensorflow"
"kratzert/finetune_alexnet_with_tensorflow" -> "joelthchao/tensorflow-finetune-flickr-style"
"kratzert/finetune_alexnet_with_tensorflow" -> "ry/tensorflow-vgg16"
"kratzert/finetune_alexnet_with_tensorflow" -> "ry/tensorflow-resnet"
"kratzert/finetune_alexnet_with_tensorflow" -> "YixuanLi/densenet-tensorflow"
"kratzert/finetune_alexnet_with_tensorflow" -> "MarvinTeichmann/tensorflow-fcn" ["e"=1]
"kratzert/finetune_alexnet_with_tensorflow" -> "rbgirshick/fast-rcnn"
"kratzert/finetune_alexnet_with_tensorflow" -> "hizhangp/yolo_tensorflow"
"kratzert/finetune_alexnet_with_tensorflow" -> "gliese581gg/YOLO_tensorflow"
"zxdefying/pytorch_tricks" -> "zasdfgbnm/TorchSnooper"
"zxdefying/pytorch_tricks" -> "quincyliang/nlp-data-augmentation" ["e"=1]
"zxdefying/pytorch_tricks" -> "pengshuang/Text-Similarity" ["e"=1]
"zxdefying/pytorch_tricks" -> "lartpang/PyTorchTricks"
"zxdefying/pytorch_tricks" -> "xiaoyufenfei/Efficient-Segmentation-Networks" ["e"=1]
"zxdefying/pytorch_tricks" -> "L1aoXingyu/Deep-Learning-Project-Template" ["e"=1]
"huawei-noah/ghostnet" -> "iamhankai/ghostnet.pytorch"
"huawei-noah/ghostnet" -> "huawei-noah/AdderNet"
"huawei-noah/ghostnet" -> "xiaolai-sqlai/mobilenetv3"
"huawei-noah/ghostnet" -> "DingXiaoH/RepVGG"
"huawei-noah/ghostnet" -> "zhanghang1989/ResNeSt"
"huawei-noah/ghostnet" -> "megvii-model/ShuffleNet-Series"
"huawei-noah/ghostnet" -> "tianzhi0549/FCOS"
"huawei-noah/ghostnet" -> "WongKinYiu/CrossStagePartialNetworks"
"huawei-noah/ghostnet" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"huawei-noah/ghostnet" -> "kuan-wang/pytorch-mobilenet-v3"
"huawei-noah/ghostnet" -> "toandaominh1997/EfficientDet.Pytorch"
"huawei-noah/ghostnet" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"huawei-noah/ghostnet" -> "RangiLyu/nanodet"
"huawei-noah/ghostnet" -> "Duankaiwen/CenterNet"
"huawei-noah/ghostnet" -> "ruinmessi/ASFF"
"NVIDIA-AI-IOT/torch2trt" -> "onnx/onnx-tensorrt"
"NVIDIA-AI-IOT/torch2trt" -> "wang-xinyu/tensorrtx"
"NVIDIA-AI-IOT/torch2trt" -> "NVIDIA/TensorRT"
"NVIDIA-AI-IOT/torch2trt" -> "daquexian/onnx-simplifier"
"NVIDIA-AI-IOT/torch2trt" -> "dusty-nv/jetson-inference" ["e"=1]
"NVIDIA-AI-IOT/torch2trt" -> "xingyizhou/CenterNet"
"NVIDIA-AI-IOT/torch2trt" -> "jkjung-avt/tensorrt_demos"
"NVIDIA-AI-IOT/torch2trt" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"NVIDIA-AI-IOT/torch2trt" -> "Megvii-BaseDetection/YOLOX"
"NVIDIA-AI-IOT/torch2trt" -> "Tianxiaomo/pytorch-YOLOv4"
"NVIDIA-AI-IOT/torch2trt" -> "shouxieai/tensorRT_Pro"
"NVIDIA-AI-IOT/torch2trt" -> "lukemelas/EfficientNet-PyTorch"
"NVIDIA-AI-IOT/torch2trt" -> "NVIDIA/apex"
"NVIDIA-AI-IOT/torch2trt" -> "NVIDIA/TRTorch"
"NVIDIA-AI-IOT/torch2trt" -> "triton-inference-server/server"
"NVIDIA/TRTorch" -> "NVIDIA-AI-IOT/torch2trt"
"NVIDIA/TRTorch" -> "onnx/onnx-tensorrt"
"NVIDIA/TRTorch" -> "pytorch/tvm" ["e"=1]
"NVIDIA/TRTorch" -> "NVIDIA/PyProf"
"NVIDIA/TRTorch" -> "microsoft/nnfusion" ["e"=1]
"NVIDIA/TRTorch" -> "zerollzeng/tiny-tensorrt"
"NVIDIA/TRTorch" -> "grimoire/torch2trt_dynamic"
"NVIDIA/TRTorch" -> "grimoire/mmdetection-to-tensorrt"
"NVIDIA/TRTorch" -> "Tencent/Forward"
"NVIDIA/TRTorch" -> "daquexian/onnx-simplifier"
"NVIDIA/TRTorch" -> "NVIDIA/TensorRT"
"NVIDIA/TRTorch" -> "CaoWGG/TensorRT-CenterNet"
"NVIDIA/TRTorch" -> "NVIDIA/retinanet-examples"
"NVIDIA/TRTorch" -> "openppl-public/ppl.nn" ["e"=1]
"NVIDIA/TRTorch" -> "NVIDIA/FasterTransformer" ["e"=1]
"apple/ml-cvnets" -> "chinhsuanwu/mobilevit-pytorch"
"apple/ml-cvnets" -> "snap-research/EfficientFormer"
"apple/ml-cvnets" -> "micronDLA/MobileViTv3"
"apple/ml-cvnets" -> "facebookresearch/ConvNeXt"
"apple/ml-cvnets" -> "mmaaz60/EdgeNeXt"
"apple/ml-cvnets" -> "huawei-noah/Efficient-AI-Backbones"
"apple/ml-cvnets" -> "murufeng/awesome_lightweight_networks"
"apple/ml-cvnets" -> "facebookresearch/LeViT"
"apple/ml-cvnets" -> "apple/ml-mobileone"
"apple/ml-cvnets" -> "microsoft/Cream"
"apple/ml-cvnets" -> "hkzhang91/ParC-Net"
"apple/ml-cvnets" -> "facebookresearch/deit"
"apple/ml-cvnets" -> "DingXiaoH/RepVGG"
"apple/ml-cvnets" -> "facebookresearch/ConvNeXt-V2" ["e"=1]
"apple/ml-cvnets" -> "sail-sg/poolformer"
"SHI-Labs/Compact-Transformers" -> "Sara-Ahmed/SiT"
"SHI-Labs/Compact-Transformers" -> "google-research/nested-transformer"
"SHI-Labs/Compact-Transformers" -> "mlpc-ucsd/CoaT"
"SHI-Labs/Compact-Transformers" -> "facebookresearch/LeViT"
"SHI-Labs/Compact-Transformers" -> "microsoft/CvT"
"facebookresearch/deepmask" -> "facebookresearch/multipathnet"
"facebookresearch/deepmask" -> "facebook/fb.resnet.torch"
"facebookresearch/deepmask" -> "torrvision/crfasrnn" ["e"=1]
"facebookresearch/deepmask" -> "daijifeng001/MNC" ["e"=1]
"facebookresearch/deepmask" -> "msracver/FCIS"
"facebookresearch/deepmask" -> "jcjohnson/densecap" ["e"=1]
"facebookresearch/deepmask" -> "shelhamer/fcn.berkeleyvision.org"
"facebookresearch/deepmask" -> "torchnet/torchnet" ["e"=1]
"facebookresearch/deepmask" -> "facebookresearch/ResNeXt"
"facebookresearch/deepmask" -> "baidu/Paddle" ["e"=1]
"facebookresearch/deepmask" -> "torch/torch7" ["e"=1]
"facebookresearch/deepmask" -> "jcjohnson/fast-neural-style" ["e"=1]
"facebookresearch/deepmask" -> "NVIDIA/DIGITS" ["e"=1]
"facebookresearch/deepmask" -> "KaimingHe/deep-residual-networks"
"facebookresearch/deepmask" -> "CharlesShang/FastMaskRCNN"
"facebookresearch/multipathnet" -> "facebookresearch/deepmask"
"facebookresearch/multipathnet" -> "torchnet/torchnet" ["e"=1]
"facebookresearch/multipathnet" -> "facebook/fb.resnet.torch"
"facebookresearch/multipathnet" -> "Orpine/py-R-FCN"
"facebookresearch/multipathnet" -> "daijifeng001/R-FCN"
"facebookresearch/multipathnet" -> "soumith/imagenet-multiGPU.torch" ["e"=1]
"facebookresearch/multipathnet" -> "jcjohnson/densecap" ["e"=1]
"facebookresearch/multipathnet" -> "soumith/dcgan.torch" ["e"=1]
"facebookresearch/multipathnet" -> "facebookresearch/ResNeXt"
"facebookresearch/multipathnet" -> "daijifeng001/MNC" ["e"=1]
"facebookresearch/multipathnet" -> "pdollar/coco" ["e"=1]
"facebookresearch/multipathnet" -> "torrvision/crfasrnn" ["e"=1]
"facebookresearch/multipathnet" -> "facebook/fb-caffe-exts" ["e"=1]
"facebookresearch/multipathnet" -> "facebook/fbcunn" ["e"=1]
"facebookresearch/multipathnet" -> "e-lab/torch-toolbox" ["e"=1]
"mind/wheels" -> "lakshayg/tensorflow-build"
"mind/wheels" -> "yaroslavvb/tensorflow-community-wheels"
"mind/wheels" -> "inoryy/tensorflow-optimized-wheels"
"mind/wheels" -> "hadim/docker-tensorflow-builder"
"mind/wheels" -> "fo40225/tensorflow-windows-wheel"
"mind/wheels" -> "evdcush/TensorFlow-wheels"
"mind/wheels" -> "Mrgemy95/Tensorflow-Project-Template" ["e"=1]
"mind/wheels" -> "taehoonlee/tensornets" ["e"=1]
"mind/wheels" -> "lanpa/tensorboard-pytorch"
"mind/wheels" -> "01org/mkl-dnn" ["e"=1]
"mind/wheels" -> "ppwwyyxx/tensorpack"
"mind/wheels" -> "openai/gradient-checkpointing" ["e"=1]
"mind/wheels" -> "Microsoft/MMdnn"
"mind/wheels" -> "batzner/indrnn" ["e"=1]
"mind/wheels" -> "uber/horovod"
"YunYang1994/tensorflow-yolov3" -> "wizyoung/YOLOv3_TensorFlow"
"YunYang1994/tensorflow-yolov3" -> "qqwweee/keras-yolo3"
"YunYang1994/tensorflow-yolov3" -> "YunYang1994/TensorFlow2.0-Examples"
"YunYang1994/tensorflow-yolov3" -> "zzh8829/yolov3-tf2"
"YunYang1994/tensorflow-yolov3" -> "eriklindernoren/PyTorch-YOLOv3"
"YunYang1994/tensorflow-yolov3" -> "ultralytics/yolov3"
"YunYang1994/tensorflow-yolov3" -> "mystic123/tensorflow-yolo-v3"
"YunYang1994/tensorflow-yolov3" -> "balancap/SSD-Tensorflow"
"YunYang1994/tensorflow-yolov3" -> "hunglc007/tensorflow-yolov4-tflite"
"YunYang1994/tensorflow-yolov3" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"YunYang1994/tensorflow-yolov3" -> "xingyizhou/CenterNet"
"YunYang1994/tensorflow-yolov3" -> "endernewton/tf-faster-rcnn"
"YunYang1994/tensorflow-yolov3" -> "Qidian213/deep_sort_yolov3" ["e"=1]
"YunYang1994/tensorflow-yolov3" -> "Byronnar/tensorflow-serving-yolov3"
"YunYang1994/tensorflow-yolov3" -> "amusi/awesome-object-detection"
"fizyr/keras-retinanet" -> "qqwweee/keras-yolo3"
"fizyr/keras-retinanet" -> "yhenon/pytorch-retinanet"
"fizyr/keras-retinanet" -> "yhenon/keras-frcnn"
"fizyr/keras-retinanet" -> "pierluigiferrari/ssd_keras"
"fizyr/keras-retinanet" -> "matterport/Mask_RCNN"
"fizyr/keras-retinanet" -> "endernewton/tf-faster-rcnn"
"fizyr/keras-retinanet" -> "balancap/SSD-Tensorflow"
"fizyr/keras-retinanet" -> "amusi/awesome-object-detection"
"fizyr/keras-retinanet" -> "xingyizhou/CenterNet"
"fizyr/keras-retinanet" -> "rbgirshick/py-faster-rcnn"
"fizyr/keras-retinanet" -> "facebookresearch/Detectron"
"fizyr/keras-retinanet" -> "rafaelpadilla/Object-Detection-Metrics"
"fizyr/keras-retinanet" -> "aleju/imgaug"
"fizyr/keras-retinanet" -> "TuSimple/simpledet"
"fizyr/keras-retinanet" -> "hoya012/deep_learning_object_detection"
"titu1994/Keras-ResNeXt" -> "yoheikikuta/senet-keras" ["e"=1]
"titu1994/Keras-ResNeXt" -> "titu1994/Keras-DualPathNetworks" ["e"=1]
"titu1994/Keras-ResNeXt" -> "rcmalli/keras-squeezenet" ["e"=1]
"titu1994/Keras-ResNeXt" -> "imlab-uiip/keras-segnet" ["e"=1]
"titu1994/Keras-ResNeXt" -> "taki0112/ResNeXt-Tensorflow"
"titu1994/Keras-ResNeXt" -> "qubvel/classification_models"
"titu1994/Keras-ResNeXt" -> "titu1994/DenseNet"
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "weiaicunzai/pytorch-cifar100"
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "weiaicunzai/awesome-image-classification"
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "clovaai/CutMix-PyTorch" ["e"=1]
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "implus/SKNet" ["e"=1]
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "SJTU-DL-lab/Bag_of_Tricks_CNN"
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "implus/PytorchInsight" ["e"=1]
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "facebookresearch/pycls"
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "hysts/pytorch_image_classification"
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "facebookresearch/mixup-cifar10" ["e"=1]
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "JDAI-CV/DCL" ["e"=1]
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "Megvii-Nanjing/BBN" ["e"=1]
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "vandit15/Class-balanced-loss-pytorch" ["e"=1]
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "DeepVoltaire/AutoAugment" ["e"=1]
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "ruinmessi/ASFF"
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" -> "tanglang96/DataLoaders_DALI"
"opencv/opencv_3rdparty" -> "opencv/opencv_extra"
"opencv/opencv_3rdparty" -> "opencv/opencv_contrib"
"opencv/opencv_3rdparty" -> "joaofaro/KCFcpp" ["e"=1]
"opencv/opencv_3rdparty" -> "ivipsourcecode/DS-SLAM" ["e"=1]
"opencv/opencv_3rdparty" -> "shaoshengsong/DeepSORT" ["e"=1]
"opencv/opencv_3rdparty" -> "HeYijia/svo_edgelet" ["e"=1]
"opencv/opencv_3rdparty" -> "BertaBescos/DynaSLAM" ["e"=1]
"opencv/opencv_3rdparty" -> "Ewenwan/ORB_SLAM2_SSD_Semantic" ["e"=1]
"geifmany/cifar-vgg" -> "mjiansun/cifar10-vgg16"
"davda54/sam" -> "google-research/sam"
"davda54/sam" -> "tomgoldstein/loss-landscape"
"davda54/sam" -> "moskomule/sam.pytorch"
"davda54/sam" -> "jettify/pytorch-optimizer"
"davda54/sam" -> "facebookresearch/deit"
"davda54/sam" -> "SamsungLabs/ASAM"
"davda54/sam" -> "libffcv/ffcv"
"davda54/sam" -> "qubvel/ttach"
"davda54/sam" -> "lucidrains/byol-pytorch"
"davda54/sam" -> "ZFTurbo/Weighted-Boxes-Fusion"
"davda54/sam" -> "juntang-zhuang/Adabelief-Optimizer"
"davda54/sam" -> "lucidrains/lambda-networks"
"davda54/sam" -> "facebookresearch/dino"
"davda54/sam" -> "facebookresearch/ConvNeXt"
"davda54/sam" -> "rwightman/efficientdet-pytorch"
"google-research/sam" -> "davda54/sam"
"google-research/sam" -> "moskomule/sam.pytorch"
"google-research/sam" -> "SamsungLabs/ASAM"
"google-research/sam" -> "tomgoldstein/loss-landscape"
"google-research/sam" -> "juntang-zhuang/GSAM"
"Slava/label-tool" -> "l3p-cv/lost"
"UniversalDataTool/universal-data-tool" -> "heartexlabs/awesome-data-labeling"
"UniversalDataTool/universal-data-tool" -> "heartexlabs/label-studio"
"UniversalDataTool/universal-data-tool" -> "doccano/doccano" ["e"=1]
"UniversalDataTool/universal-data-tool" -> "SkalskiP/make-sense"
"UniversalDataTool/universal-data-tool" -> "chakki-works/doccano" ["e"=1]
"UniversalDataTool/universal-data-tool" -> "Slava/label-tool"
"UniversalDataTool/universal-data-tool" -> "UniversalDataTool/react-image-annotate" ["e"=1]
"UniversalDataTool/universal-data-tool" -> "jsbroks/coco-annotator"
"UniversalDataTool/universal-data-tool" -> "gnes-ai/gnes" ["e"=1]
"UniversalDataTool/universal-data-tool" -> "RTIInternational/SMART"
"UniversalDataTool/universal-data-tool" -> "explosion/prodigy-recipes" ["e"=1]
"UniversalDataTool/universal-data-tool" -> "waoai/react-image-annotate" ["e"=1]
"UniversalDataTool/universal-data-tool" -> "jsbroks/awesome-dataset-tools"
"UniversalDataTool/universal-data-tool" -> "jbesomi/texthero" ["e"=1]
"UniversalDataTool/universal-data-tool" -> "taivop/awesome-data-annotation"
"jsbroks/coco-annotator" -> "jsbroks/imantics"
"jsbroks/coco-annotator" -> "visipedia/annotation_tools" ["e"=1]
"jsbroks/coco-annotator" -> "openvinotoolkit/cvat"
"jsbroks/coco-annotator" -> "waspinator/pycococreator"
"jsbroks/coco-annotator" -> "microsoft/VoTT"
"jsbroks/coco-annotator" -> "leoxiaobin/deep-high-resolution-net.pytorch" ["e"=1]
"jsbroks/coco-annotator" -> "opencv/cvat"
"jsbroks/coco-annotator" -> "dbolya/yolact"
"jsbroks/coco-annotator" -> "wkentaro/labelme"
"jsbroks/coco-annotator" -> "cocodataset/cocoapi"
"jsbroks/coco-annotator" -> "HRNet/HigherHRNet-Human-Pose-Estimation" ["e"=1]
"jsbroks/coco-annotator" -> "heartexlabs/awesome-data-labeling"
"jsbroks/coco-annotator" -> "abreheret/PixelAnnotationTool"
"jsbroks/coco-annotator" -> "SkalskiP/make-sense"
"jsbroks/coco-annotator" -> "WongKinYiu/ScaledYOLOv4"
"l3p-cv/lost" -> "bit-bots/imagetagger"
"l3p-cv/lost" -> "Slava/label-tool"
"l3p-cv/lost" -> "jsbroks/awesome-dataset-tools"
"l3p-cv/lost" -> "jveitchmichaelis/deeplabel"
"l3p-cv/lost" -> "scalabel/scalabel" ["e"=1]
"l3p-cv/lost" -> "SkalskiP/make-sense"
"l3p-cv/lost" -> "l3p-cv/lost_semi_auto_pipes"
"l3p-cv/lost" -> "l3p-cv/lost_yolov3_tf2"
"l3p-cv/lost" -> "menpo/landmarker.io" ["e"=1]
"l3p-cv/lost" -> "Labelbox/labelbox"
"l3p-cv/lost" -> "virajmavani/semi-auto-image-annotation-tool"
"l3p-cv/lost" -> "catmaid/CATMAID" ["e"=1]
"tzutalin/ImageNet_Utils" -> "christopher5106/FastAnnotationTool"
"tzutalin/ImageNet_Utils" -> "sweppner/labeld"
"tzutalin/ImageNet_Utils" -> "cvhciKIT/sloth"
"tzutalin/ImageNet_Utils" -> "puzzledqs/BBox-Label-Tool"
"tzutalin/ImageNet_Utils" -> "rykov8/ssd_keras"
"tzutalin/ImageNet_Utils" -> "Orpine/py-R-FCN"
"tzutalin/ImageNet_Utils" -> "openimages/dataset"
"tzutalin/ImageNet_Utils" -> "facebook/fb-caffe-exts" ["e"=1]
"tzutalin/ImageNet_Utils" -> "gudovskiy/yoloNCS" ["e"=1]
"DetectionTeamUCAS/Cascade-RCNN_Tensorflow" -> "DetectionTeamUCAS/Cascade_FPN_Tensorflow"
"DetectionTeamUCAS/Cascade-RCNN_Tensorflow" -> "guoruoqian/cascade-rcnn_Pytorch"
"Westlake-AI/openmixup" -> "Westlake-AI/Awesome-Mixup"
"Westlake-AI/openmixup" -> "Sense-X/TokenMix"
"Westlake-AI/openmixup" -> "ucasligang/awesome-MIM"
"Westlake-AI/openmixup" -> "sail-sg/metaformer" ["e"=1]
"Westlake-AI/openmixup" -> "open-mmlab/mmselfsup"
"Westlake-AI/openmixup" -> "LayneH/GreenMIM"
"Westlake-AI/openmixup" -> "Westlake-AI/MogaNet"
"Westlake-AI/openmixup" -> "LiheYoung/UniMatch" ["e"=1]
"Westlake-AI/openmixup" -> "lxtGH/CAE"
"Westlake-AI/openmixup" -> "snu-mllab/Co-Mixup" ["e"=1]
"Westlake-AI/openmixup" -> "bytedance/ibot"
"Westlake-AI/openmixup" -> "raoyongming/HorNet" ["e"=1]
"Westlake-AI/openmixup" -> "Westlake-AI/AutoMix"
"Westlake-AI/openmixup" -> "Visual-Attention-Network/SegNeXt" ["e"=1]
"zdaxie/PixPro" -> "lucidrains/pixel-level-contrastive-learning"
"zdaxie/PixPro" -> "WXinlong/DenseCL"
"zdaxie/PixPro" -> "tfzhou/ContrastiveSeg"
"zdaxie/PixPro" -> "wvangansbeke/Unsupervised-Semantic-Segmentation"
"zdaxie/PixPro" -> "Shathe/SemiSeg-Contrastive" ["e"=1]
"zdaxie/PixPro" -> "facebookresearch/MaskFormer"
"zdaxie/PixPro" -> "yassouali/CCT" ["e"=1]
"wookayin/gpustat" -> "Syllo/nvtop"
"wookayin/gpustat" -> "wookayin/gpustat-web"
"wookayin/gpustat" -> "facebookresearch/visdom"
"wookayin/gpustat" -> "lanpa/tensorboard-pytorch"
"wookayin/gpustat" -> "XuehaiPan/nvitop"
"wookayin/gpustat" -> "arogozhnikov/einops"
"wookayin/gpustat" -> "IDSIA/sacred" ["e"=1]
"wookayin/gpustat" -> "abhshkdz/ai-deadlines" ["e"=1]
"wookayin/gpustat" -> "sksq96/pytorch-summary"
"wookayin/gpustat" -> "NVIDIA/apex"
"wookayin/gpustat" -> "anderskm/gputil"
"wookayin/gpustat" -> "pytorch/ignite"
"wookayin/gpustat" -> "lanpa/tensorboardX"
"wookayin/gpustat" -> "kornia/kornia"
"wookayin/gpustat" -> "cupy/cupy"
"TencentYoutuResearch/FaceDetection-DSFD" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices" ["e"=1]
"TencentYoutuResearch/FaceDetection-DSFD" -> "ZhaoJ9014/face.evoLVe.PyTorch" ["e"=1]
"TencentYoutuResearch/FaceDetection-DSFD" -> "zuoqing1988/ZQCNN"
"TencentYoutuResearch/FaceDetection-DSFD" -> "princeton-vl/CornerNet-Lite"
"TencentYoutuResearch/FaceDetection-DSFD" -> "kpzhang93/MTCNN_face_detection_alignment"
"TencentYoutuResearch/FaceDetection-DSFD" -> "mahyarnajibi/SSH" ["e"=1]
"TencentYoutuResearch/FaceDetection-DSFD" -> "wywu/LAB" ["e"=1]
"TencentYoutuResearch/FaceDetection-DSFD" -> "deepinsight/insightface"
"TencentYoutuResearch/FaceDetection-DSFD" -> "SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" ["e"=1]
"TencentYoutuResearch/FaceDetection-DSFD" -> "TreB1eN/InsightFace_Pytorch" ["e"=1]
"TencentYoutuResearch/FaceDetection-DSFD" -> "zisianw/FaceBoxes.PyTorch" ["e"=1]
"TencentYoutuResearch/FaceDetection-DSFD" -> "sfzhang15/SFD" ["e"=1]
"TencentYoutuResearch/FaceDetection-DSFD" -> "ChanChiChoi/awesome-Face_Recognition"
"TencentYoutuResearch/FaceDetection-DSFD" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB"
"TencentYoutuResearch/FaceDetection-DSFD" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"jettify/pytorch-optimizer" -> "juntang-zhuang/Adabelief-Optimizer"
"jettify/pytorch-optimizer" -> "LiyuanLucasLiu/RAdam"
"jettify/pytorch-optimizer" -> "KevinMusgrave/pytorch-metric-learning"
"jettify/pytorch-optimizer" -> "arogozhnikov/einops"
"jettify/pytorch-optimizer" -> "BloodAxe/pytorch-toolbelt"
"jettify/pytorch-optimizer" -> "facebookresearch/fairscale" ["e"=1]
"jettify/pytorch-optimizer" -> "tomgoldstein/loss-landscape"
"jettify/pytorch-optimizer" -> "catalyst-team/catalyst"
"jettify/pytorch-optimizer" -> "kornia/kornia"
"jettify/pytorch-optimizer" -> "lessw2020/Ranger-Deep-Learning-Optimizer"
"jettify/pytorch-optimizer" -> "facebookresearch/vissl"
"jettify/pytorch-optimizer" -> "davda54/sam"
"jettify/pytorch-optimizer" -> "facebookresearch/pycls"
"jettify/pytorch-optimizer" -> "huggingface/accelerate" ["e"=1]
"jettify/pytorch-optimizer" -> "pytorch/captum"
"hujie-frank/SENet" -> "moskomule/senet.pytorch" ["e"=1]
"hujie-frank/SENet" -> "taki0112/SENet-Tensorflow"
"hujie-frank/SENet" -> "liuzhuang13/DenseNet"
"hujie-frank/SENet" -> "msracver/Deformable-ConvNets"
"hujie-frank/SENet" -> "sfzhang15/RefineDet"
"hujie-frank/SENet" -> "facebookresearch/ResNeXt"
"hujie-frank/SENet" -> "weiliu89/caffe"
"hujie-frank/SENet" -> "soeaver/caffe-model"
"hujie-frank/SENet" -> "junfu1115/DANet" ["e"=1]
"hujie-frank/SENet" -> "TuSimple/simpledet"
"hujie-frank/SENet" -> "princeton-vl/CornerNet"
"hujie-frank/SENet" -> "ruinmessi/RFBNet"
"hujie-frank/SENet" -> "Cadene/pretrained-models.pytorch"
"hujie-frank/SENet" -> "shicai/MobileNet-Caffe"
"hujie-frank/SENet" -> "tianzhi0549/FCOS"
"taki0112/SENet-Tensorflow" -> "hujie-frank/SENet"
"taki0112/SENet-Tensorflow" -> "taki0112/ResNeXt-Tensorflow"
"taki0112/SENet-Tensorflow" -> "taki0112/Densenet-Tensorflow"
"taki0112/SENet-Tensorflow" -> "yoheikikuta/senet-keras" ["e"=1]
"taki0112/SENet-Tensorflow" -> "titu1994/Inception-v4"
"taki0112/SENet-Tensorflow" -> "taki0112/ResNet-Tensorflow"
"taki0112/SENet-Tensorflow" -> "ry/tensorflow-resnet"
"taki0112/SENet-Tensorflow" -> "kobiso/CBAM-tensorflow" ["e"=1]
"taki0112/SENet-Tensorflow" -> "titu1994/DenseNet"
"taki0112/SENet-Tensorflow" -> "YixuanLi/densenet-tensorflow"
"taki0112/SENet-Tensorflow" -> "kobiso/SENet-tensorflow-slim"
"taki0112/SENet-Tensorflow" -> "MG2033/ShuffleNet"
"taki0112/SENet-Tensorflow" -> "kobiso/CBAM-keras" ["e"=1]
"taki0112/SENet-Tensorflow" -> "yangxue0827/FPN_Tensorflow" ["e"=1]
"taki0112/SENet-Tensorflow" -> "moskomule/senet.pytorch" ["e"=1]
"yeephycho/nasnet-tensorflow" -> "titu1994/Keras-NASNet"
"EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi" -> "EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi"
"EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi" -> "EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10"
"EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi" -> "NanoNets/RaspberryPi-ObjectDetection-TensorFlow"
"EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi" -> "lhelontra/tensorflow-on-arm"
"EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi" -> "PINTO0309/Tensorflow-bin"
"EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi" -> "samjabrahams/tensorflow-on-raspberry-pi"
"EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi" -> "hamuchiwa/AutoRCCar" ["e"=1]
"EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi" -> "dctian/DeepPiCar" ["e"=1]
"EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi" -> "EdjeElectronics/OpenCV-Playing-Card-Detector"
"EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi" -> "ahmetozlu/tensorflow_object_counting_api" ["e"=1]
"EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi" -> "llSourcell/YOLO_Object_Detection"
"EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi" -> "xyc2690/Raspberry_ObjectDetection_Camera"
"EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi" -> "datitran/object_detector_app"
"EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi" -> "jeffbass/imagezmq" ["e"=1]
"EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi" -> "PINTO0309/OpenVINO-YoloV3" ["e"=1]
"CVCUDA/CV-CUDA" -> "NVIDIA/trt-samples-for-hackathon-cn"
"CVCUDA/CV-CUDA" -> "facebookincubator/AITemplate" ["e"=1]
"CVCUDA/CV-CUDA" -> "openppl-public/ppl.nn" ["e"=1]
"CVCUDA/CV-CUDA" -> "openppl-public/ppq"
"CVCUDA/CV-CUDA" -> "onnx/onnx-tensorrt"
"CVCUDA/CV-CUDA" -> "shouxieai/tensorRT_Pro"
"CVCUDA/CV-CUDA" -> "jizhishutong/YOLOU"
"CVCUDA/CV-CUDA" -> "openppl-public/ppl.cv" ["e"=1]
"CVCUDA/CV-CUDA" -> "NVIDIA/FasterTransformer" ["e"=1]
"CVCUDA/CV-CUDA" -> "NVIDIA/TensorRT"
"CVCUDA/CV-CUDA" -> "wang-xinyu/tensorrtx"
"CVCUDA/CV-CUDA" -> "NVIDIA/VideoProcessingFramework" ["e"=1]
"CVCUDA/CV-CUDA" -> "open-mmlab/mmdeploy"
"CVCUDA/CV-CUDA" -> "daquexian/onnx-simplifier"
"CVCUDA/CV-CUDA" -> "ifzhang/ByteTrack" ["e"=1]
"sail-sg/volo" -> "yitu-opensource/T2T-ViT"
"sail-sg/volo" -> "zihangJiang/TokenLabeling"
"sail-sg/volo" -> "whai362/PVT"
"sail-sg/volo" -> "Andrew-Qibin/VisionPermutator"
"sail-sg/volo" -> "facebookresearch/convit"
"sail-sg/volo" -> "facebookresearch/deit"
"sail-sg/volo" -> "zhoudaquan/Refiner_ViT"
"sail-sg/volo" -> "microsoft/DynamicHead"
"sail-sg/volo" -> "SwinTransformer/Transformer-SSL"
"sail-sg/volo" -> "sail-sg/poolformer"
"sail-sg/volo" -> "raoyongming/DynamicViT"
"sail-sg/volo" -> "WXinlong/DenseCL"
"sail-sg/volo" -> "wofmanaf/ResT"
"sail-sg/volo" -> "microsoft/CSWin-Transformer"
"sail-sg/volo" -> "openseg-group/openseg.pytorch" ["e"=1]
"LiyuanLucasLiu/RAdam" -> "lessw2020/Ranger-Deep-Learning-Optimizer"
"LiyuanLucasLiu/RAdam" -> "Luolc/AdaBound"
"LiyuanLucasLiu/RAdam" -> "williamFalcon/pytorch-lightning"
"LiyuanLucasLiu/RAdam" -> "jettify/pytorch-optimizer"
"LiyuanLucasLiu/RAdam" -> "lukemelas/EfficientNet-PyTorch"
"LiyuanLucasLiu/RAdam" -> "digantamisra98/Mish"
"LiyuanLucasLiu/RAdam" -> "albu/albumentations"
"LiyuanLucasLiu/RAdam" -> "NVIDIA/apex"
"LiyuanLucasLiu/RAdam" -> "CyberZHG/keras-radam" ["e"=1]
"LiyuanLucasLiu/RAdam" -> "alphadl/lookahead.pytorch"
"LiyuanLucasLiu/RAdam" -> "Lyken17/pytorch-OpCounter"
"LiyuanLucasLiu/RAdam" -> "facebookresearch/pycls"
"LiyuanLucasLiu/RAdam" -> "mgrankin/over9000"
"LiyuanLucasLiu/RAdam" -> "zhanghang1989/ResNeSt"
"LiyuanLucasLiu/RAdam" -> "adobe/antialiased-cnns"
"flyyufelix/cnn_finetune" -> "flyyufelix/DenseNet-Keras"
"flyyufelix/cnn_finetune" -> "titu1994/DenseNet"
"flyyufelix/cnn_finetune" -> "yhenon/keras-frcnn"
"flyyufelix/cnn_finetune" -> "fchollet/deep-learning-models"
"flyyufelix/cnn_finetune" -> "raghakot/keras-vis" ["e"=1]
"flyyufelix/cnn_finetune" -> "liuzhuang13/DenseNet"
"flyyufelix/cnn_finetune" -> "rykov8/ssd_keras"
"flyyufelix/cnn_finetune" -> "Arsey/keras-transfer-learning-for-oxford102"
"flyyufelix/cnn_finetune" -> "tdeboissiere/DeepLearningImplementations" ["e"=1]
"flyyufelix/cnn_finetune" -> "aurora95/Keras-FCN" ["e"=1]
"flyyufelix/cnn_finetune" -> "jocicmarko/ultrasound-nerve-segmentation" ["e"=1]
"flyyufelix/cnn_finetune" -> "heuritech/convnets-keras" ["e"=1]
"flyyufelix/cnn_finetune" -> "fizyr/keras-retinanet"
"flyyufelix/cnn_finetune" -> "keras-team/keras-applications"
"flyyufelix/cnn_finetune" -> "qubvel/classification_models"
"jrosebr1/imutils" -> "davisking/dlib"
"jrosebr1/imutils" -> "aleju/imgaug"
"jrosebr1/imutils" -> "tzutalin/labelImg"
"jrosebr1/imutils" -> "albu/albumentations"
"jrosebr1/imutils" -> "spmallick/learnopencv"
"jrosebr1/imutils" -> "thtrieu/darkflow"
"jrosebr1/imutils" -> "mdbloice/Augmentor"
"jrosebr1/imutils" -> "opencv/opencv_contrib"
"jrosebr1/imutils" -> "scikit-image/scikit-image" ["e"=1]
"jrosebr1/imutils" -> "jeffbass/imagezmq" ["e"=1]
"jrosebr1/imutils" -> "fizyr/keras-retinanet"
"jrosebr1/imutils" -> "davidsandberg/facenet"
"jrosebr1/imutils" -> "cmusatyalab/openface"
"jrosebr1/imutils" -> "opencv/cvat"
"jrosebr1/imutils" -> "pjreddie/darknet"
"skorch-dev/skorch" -> "pytorch/ignite"
"skorch-dev/skorch" -> "pytorch/captum"
"skorch-dev/skorch" -> "williamFalcon/pytorch-lightning"
"skorch-dev/skorch" -> "pytorch/botorch" ["e"=1]
"skorch-dev/skorch" -> "optuna/optuna" ["e"=1]
"skorch-dev/skorch" -> "PyTorchLightning/pytorch-lightning"
"skorch-dev/skorch" -> "cornellius-gp/gpytorch" ["e"=1]
"skorch-dev/skorch" -> "automl/Auto-PyTorch" ["e"=1]
"skorch-dev/skorch" -> "catalyst-team/catalyst"
"skorch-dev/skorch" -> "scikit-optimize/scikit-optimize" ["e"=1]
"skorch-dev/skorch" -> "scikit-learn-contrib/imbalanced-learn" ["e"=1]
"skorch-dev/skorch" -> "arogozhnikov/einops"
"skorch-dev/skorch" -> "slundberg/shap" ["e"=1]
"skorch-dev/skorch" -> "hyperopt/hyperopt" ["e"=1]
"skorch-dev/skorch" -> "rapidsai/cudf" ["e"=1]
"williamFalcon/pytorch-lightning" -> "pytorch/ignite"
"williamFalcon/pytorch-lightning" -> "catalyst-team/catalyst"
"williamFalcon/pytorch-lightning" -> "microsoft/tensorwatch"
"williamFalcon/pytorch-lightning" -> "LiyuanLucasLiu/RAdam"
"williamFalcon/pytorch-lightning" -> "huggingface/pytorch-pretrained-BERT" ["e"=1]
"williamFalcon/pytorch-lightning" -> "albu/albumentations"
"williamFalcon/pytorch-lightning" -> "NVIDIA/apex"
"williamFalcon/pytorch-lightning" -> "skorch-dev/skorch"
"williamFalcon/pytorch-lightning" -> "sksq96/pytorch-summary"
"williamFalcon/pytorch-lightning" -> "facebookresearch/pythia" ["e"=1]
"williamFalcon/pytorch-lightning" -> "pytorch/captum"
"williamFalcon/pytorch-lightning" -> "huggingface/pytorch-transformers" ["e"=1]
"williamFalcon/pytorch-lightning" -> "zalandoresearch/flair" ["e"=1]
"williamFalcon/pytorch-lightning" -> "huggingface/knockknock" ["e"=1]
"williamFalcon/pytorch-lightning" -> "rusty1s/pytorch_geometric" ["e"=1]
"GothicAi/Instaboost" -> "GothicAi/InstaBoost-pypi"
"GothicAi/Instaboost" -> "DirtyHarryLYL/HAKE-Action" ["e"=1]
"GothicAi/Instaboost" -> "zhangxiaosong18/FreeAnchor"
"GothicAi/Instaboost" -> "microsoft/RepPoints"
"GothicAi/Instaboost" -> "lvis-dataset/lvis-api" ["e"=1]
"GothicAi/Instaboost" -> "thangvubk/Cascade-RPN"
"GothicAi/Instaboost" -> "DirtyHarryLYL/HAKE" ["e"=1]
"GothicAi/Instaboost" -> "aim-uofa/adet"
"GothicAi/Instaboost" -> "DirtyHarryLYL/SymNet" ["e"=1]
"GothicAi/Instaboost" -> "PKUbahuangliuhe/CBNet"
"PINTO0309/PINTO_model_zoo" -> "terryky/tflite_gles_app"
"PINTO0309/PINTO_model_zoo" -> "daquexian/onnx-simplifier"
"PINTO0309/PINTO_model_zoo" -> "PINTO0309/openvino2tensorflow"
"PINTO0309/PINTO_model_zoo" -> "iwatake2222/play_with_tflite"
"PINTO0309/PINTO_model_zoo" -> "DefTruth/lite.ai.toolkit"
"PINTO0309/PINTO_model_zoo" -> "RangiLyu/nanodet"
"PINTO0309/PINTO_model_zoo" -> "openvinotoolkit/open_model_zoo"
"PINTO0309/PINTO_model_zoo" -> "wang-xinyu/tensorrtx"
"PINTO0309/PINTO_model_zoo" -> "Megvii-BaseDetection/YOLOX"
"PINTO0309/PINTO_model_zoo" -> "axinc-ai/ailia-models" ["e"=1]
"PINTO0309/PINTO_model_zoo" -> "PINTO0309/tflite2tensorflow"
"PINTO0309/PINTO_model_zoo" -> "onnx/models"
"PINTO0309/PINTO_model_zoo" -> "ppogg/YOLOv5-Lite" ["e"=1]
"PINTO0309/PINTO_model_zoo" -> "deepcam-cn/yolov5-face"
"PINTO0309/PINTO_model_zoo" -> "Daniil-Osokin/lightweight-human-pose-estimation.pytorch" ["e"=1]
"lyxok1/Tiny-DSOD" -> "chuanqi305/SqueezeNet-SSD"
"lyxok1/Tiny-DSOD" -> "szq0214/DSOD"
"lyxok1/Tiny-DSOD" -> "Robert-JunWang/Pelee"
"lyxok1/Tiny-DSOD" -> "xialuxi/arcface-caffe" ["e"=1]
"xiaochus/MobileNetV3" -> "Bisonai/mobilenetv3-tensorflow"
"xiaochus/MobileNetV3" -> "xiaochus/MobileNetV2"
"xiaochus/MobileNetV3" -> "opconty/keras-shufflenetV2"
"xiaochus/MobileNetV3" -> "frotms/MobilenetV3-Tensorflow"
"xiaochus/MobileNetV3" -> "titu1994/keras_mixnets"
"xiaochus/MobileNetV3" -> "OniroAI/Semantic-segmentation-with-MobileNetV3"
"ysh329/deep-learning-model-convertor" -> "Microsoft/MMdnn"
"ysh329/deep-learning-model-convertor" -> "microsoft/MMdnn"
"ysh329/deep-learning-model-convertor" -> "ethereon/caffe-tensorflow"
"ysh329/deep-learning-model-convertor" -> "marvis/pytorch-caffe-darknet-convert"
"ysh329/deep-learning-model-convertor" -> "soeaver/caffe-model"
"ysh329/deep-learning-model-convertor" -> "Tencent/PocketFlow" ["e"=1]
"ysh329/deep-learning-model-convertor" -> "weiliu89/caffe"
"ysh329/deep-learning-model-convertor" -> "hujie-frank/SENet"
"ysh329/deep-learning-model-convertor" -> "msracver/Deformable-ConvNets"
"ysh329/deep-learning-model-convertor" -> "NervanaSystems/distiller" ["e"=1]
"ysh329/deep-learning-model-convertor" -> "chuanqi305/MobileNet-SSD"
"ysh329/deep-learning-model-convertor" -> "shicai/MobileNet-Caffe"
"ysh329/deep-learning-model-convertor" -> "dmlc/tvm" ["e"=1]
"ysh329/deep-learning-model-convertor" -> "liuzhuang13/DenseNet"
"ysh329/deep-learning-model-convertor" -> "handong1587/handong1587.github.io"
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "fudan-zvg/SETR"
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "SwinTransformer/Swin-Transformer-Object-Detection"
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "HuCaoFighting/Swin-Unet" ["e"=1]
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "NVlabs/SegFormer"
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "rstrudel/segmenter"
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "facebookresearch/MaskFormer"
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "open-mmlab/mmsegmentation"
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "microsoft/Swin-Transformer"
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "SwinTransformer/Transformer-SSL"
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "openseg-group/openseg.pytorch" ["e"=1]
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "Beckschen/TransUNet" ["e"=1]
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "berniwal/swin-transformer-pytorch"
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "jeya-maria-jose/Medical-Transformer" ["e"=1]
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "whai362/PVT"
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" -> "HRNet/HRNet-Semantic-Segmentation" ["e"=1]
"facebookresearch/MaskFormer" -> "facebookresearch/Mask2Former"
"facebookresearch/MaskFormer" -> "NVlabs/SegFormer"
"facebookresearch/MaskFormer" -> "ZwwWayne/K-Net"
"facebookresearch/MaskFormer" -> "fudan-zvg/SETR"
"facebookresearch/MaskFormer" -> "PeizeSun/SparseR-CNN"
"facebookresearch/MaskFormer" -> "whai362/PVT"
"facebookresearch/MaskFormer" -> "fundamentalvision/Deformable-DETR"
"facebookresearch/MaskFormer" -> "tfzhou/ContrastiveSeg"
"facebookresearch/MaskFormer" -> "SwinTransformer/Swin-Transformer-Semantic-Segmentation"
"facebookresearch/MaskFormer" -> "rstrudel/segmenter"
"facebookresearch/MaskFormer" -> "Atten4Vis/ConditionalDETR" ["e"=1]
"facebookresearch/MaskFormer" -> "Epiphqny/VisTR"
"facebookresearch/MaskFormer" -> "czczup/ViT-Adapter" ["e"=1]
"facebookresearch/MaskFormer" -> "isl-org/lang-seg" ["e"=1]
"facebookresearch/MaskFormer" -> "openseg-group/openseg.pytorch" ["e"=1]
"hila-chefer/Transformer-Explainability" -> "hila-chefer/Transformer-MM-Explainability"
"hila-chefer/Transformer-Explainability" -> "jacobgil/vit-explain"
"hila-chefer/Transformer-Explainability" -> "facebookresearch/deit"
"hila-chefer/Transformer-Explainability" -> "yitu-opensource/T2T-ViT"
"hila-chefer/Transformer-Explainability" -> "jeonsworld/ViT-pytorch"
"hila-chefer/Transformer-Explainability" -> "zihangJiang/TokenLabeling"
"hila-chefer/Transformer-Explainability" -> "luo3300612/Visualizer"
"hila-chefer/Transformer-Explainability" -> "DirtyHarryLYL/Transformer-in-Vision"
"hila-chefer/Transformer-Explainability" -> "dk-liang/Awesome-Visual-Transformer"
"hila-chefer/Transformer-Explainability" -> "facebookresearch/dino"
"hila-chefer/Transformer-Explainability" -> "whai362/PVT"
"hila-chefer/Transformer-Explainability" -> "samiraabnar/attention_flow"
"hila-chefer/Transformer-Explainability" -> "raoyongming/DynamicViT"
"hila-chefer/Transformer-Explainability" -> "fudan-zvg/SETR"
"hila-chefer/Transformer-Explainability" -> "google-research/vision_transformer"
"tfzhou/ContrastiveSeg" -> "WXinlong/DenseCL"
"tfzhou/ContrastiveSeg" -> "tfzhou/ProtoSeg" ["e"=1]
"tfzhou/ContrastiveSeg" -> "tfzhou/VS-Survey" ["e"=1]
"tfzhou/ContrastiveSeg" -> "Lixy1997/Group-WSSS" ["e"=1]
"tfzhou/ContrastiveSeg" -> "tfzhou/MATNet" ["e"=1]
"tfzhou/ContrastiveSeg" -> "openseg-group/openseg.pytorch" ["e"=1]
"tfzhou/ContrastiveSeg" -> "lorenmt/reco" ["e"=1]
"tfzhou/ContrastiveSeg" -> "fudan-zvg/SETR"
"tfzhou/ContrastiveSeg" -> "charlesCXK/TorchSemiSeg" ["e"=1]
"tfzhou/ContrastiveSeg" -> "zdaxie/PixPro"
"tfzhou/ContrastiveSeg" -> "facebookresearch/MaskFormer"
"tfzhou/ContrastiveSeg" -> "wvangansbeke/Unsupervised-Semantic-Segmentation"
"tfzhou/ContrastiveSeg" -> "yassouali/CCT" ["e"=1]
"tfzhou/ContrastiveSeg" -> "YudeWang/SEAM" ["e"=1]
"tfzhou/ContrastiveSeg" -> "ZwwWayne/K-Net"
"tensorflow/lucid" -> "pytorch/captum"
"tensorflow/lucid" -> "utkuozbulak/pytorch-cnn-visualizations"
"tensorflow/lucid" -> "raghakot/keras-vis" ["e"=1]
"tensorflow/lucid" -> "facebookresearch/visdom"
"tensorflow/lucid" -> "jphall663/awesome-machine-learning-interpretability" ["e"=1]
"tensorflow/lucid" -> "marcotcr/lime" ["e"=1]
"tensorflow/lucid" -> "tkarras/progressive_growing_of_gans" ["e"=1]
"tensorflow/lucid" -> "lmcinnes/umap" ["e"=1]
"tensorflow/lucid" -> "yosinski/deep-visualization-toolbox"
"tensorflow/lucid" -> "google/dopamine" ["e"=1]
"tensorflow/lucid" -> "albu/albumentations"
"tensorflow/lucid" -> "slundberg/shap" ["e"=1]
"tensorflow/lucid" -> "deepmind/graph_nets" ["e"=1]
"tensorflow/lucid" -> "jhfjhfj1/autokeras" ["e"=1]
"tensorflow/lucid" -> "tensorflow/probability" ["e"=1]
"enazoe/yolo-tensorrt" -> "wang-xinyu/tensorrtx"
"enazoe/yolo-tensorrt" -> "jkjung-avt/tensorrt_demos"
"enazoe/yolo-tensorrt" -> "linghu8812/tensorrt_inference"
"enazoe/yolo-tensorrt" -> "Syencil/tensorRT"
"enazoe/yolo-tensorrt" -> "ceccocats/tkDNN"
"enazoe/yolo-tensorrt" -> "zerollzeng/tiny-tensorrt"
"enazoe/yolo-tensorrt" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"enazoe/yolo-tensorrt" -> "CaoWGG/TensorRT-YOLOv4"
"enazoe/yolo-tensorrt" -> "marcoslucianops/DeepStream-Yolo" ["e"=1]
"enazoe/yolo-tensorrt" -> "NVIDIA-AI-IOT/deepstream_reference_apps" ["e"=1]
"enazoe/yolo-tensorrt" -> "Syencil/mobile-yolov5-pruning-distillation" ["e"=1]
"enazoe/yolo-tensorrt" -> "WongKinYiu/ScaledYOLOv4"
"enazoe/yolo-tensorrt" -> "onnx/onnx-tensorrt"
"enazoe/yolo-tensorrt" -> "dlunion/tensorRTIntegrate"
"enazoe/yolo-tensorrt" -> "Tianxiaomo/pytorch-YOLOv4"
"frombeijingwithlove/dlcv_for_beginners" -> "amusi/daily-paper-computer-vision"
"frombeijingwithlove/dlcv_for_beginners" -> "willard-yuan/pcv-book-code" ["e"=1]
"frombeijingwithlove/dlcv_for_beginners" -> "soeaver/caffe-model"
"frombeijingwithlove/dlcv_for_beginners" -> "jiqizhixin/ML-Tutorial-Experiment" ["e"=1]
"frombeijingwithlove/dlcv_for_beginners" -> "hujie-frank/SENet"
"frombeijingwithlove/dlcv_for_beginners" -> "shicai/MobileNet-Caffe"
"frombeijingwithlove/dlcv_for_beginners" -> "extreme-assistant/cvpr2019"
"frombeijingwithlove/dlcv_for_beginners" -> "mli/gluon-tutorials-zh"
"frombeijingwithlove/dlcv_for_beginners" -> "RiweiChen/DeepFace" ["e"=1]
"frombeijingwithlove/dlcv_for_beginners" -> "vanhuyz/CycleGAN-TensorFlow" ["e"=1]
"frombeijingwithlove/dlcv_for_beginners" -> "yahoo/open_nsfw" ["e"=1]
"frombeijingwithlove/dlcv_for_beginners" -> "hzy46/Deep-Learning-21-Examples" ["e"=1]
"frombeijingwithlove/dlcv_for_beginners" -> "rbgirshick/fast-rcnn"
"frombeijingwithlove/dlcv_for_beginners" -> "shelhamer/fcn.berkeleyvision.org"
"frombeijingwithlove/dlcv_for_beginners" -> "devnag/pytorch-generative-adversarial-networks" ["e"=1]
"xmu-xiaoma666/FightingCV-Paper-Reading" -> "xmu-xiaoma666/External-Attention-pytorch"
"xmu-xiaoma666/FightingCV-Paper-Reading" -> "iscyy/yoloair"
"xmu-xiaoma666/FightingCV-Paper-Reading" -> "xmu-xiaoma666/FightingCV-Course"
"xmu-xiaoma666/FightingCV-Paper-Reading" -> "MenghaoGuo/Awesome-Vision-Attentions"
"xmu-xiaoma666/FightingCV-Paper-Reading" -> "jizhishutong/YOLOU"
"xmu-xiaoma666/FightingCV-Paper-Reading" -> "pprp/awesome-attention-mechanism-in-cv" ["e"=1]
"xmu-xiaoma666/FightingCV-Paper-Reading" -> "huawei-noah/Efficient-AI-Backbones"
"xmu-xiaoma666/FightingCV-Paper-Reading" -> "Fafa-DL/Awesome-Backbones" ["e"=1]
"xmu-xiaoma666/FightingCV-Paper-Reading" -> "murufeng/awesome_lightweight_networks"
"xmu-xiaoma666/FightingCV-Paper-Reading" -> "Visual-Attention-Network/SegNeXt" ["e"=1]
"xmu-xiaoma666/FightingCV-Paper-Reading" -> "alibaba/EasyCV"
"catalyst-team/catalyst" -> "BloodAxe/pytorch-toolbelt"
"catalyst-team/catalyst" -> "albu/albumentations"
"catalyst-team/catalyst" -> "qubvel/segmentation_models.pytorch"
"catalyst-team/catalyst" -> "pytorch/ignite"
"catalyst-team/catalyst" -> "williamFalcon/pytorch-lightning"
"catalyst-team/catalyst" -> "jettify/pytorch-optimizer"
"catalyst-team/catalyst" -> "albumentations-team/albumentations"
"catalyst-team/catalyst" -> "KevinMusgrave/pytorch-metric-learning"
"catalyst-team/catalyst" -> "qubvel/ttach"
"catalyst-team/catalyst" -> "arogozhnikov/einops"
"catalyst-team/catalyst" -> "pytorch/captum"
"catalyst-team/catalyst" -> "yandexdataschool/Practical_RL" ["e"=1]
"catalyst-team/catalyst" -> "lukemelas/EfficientNet-PyTorch"
"catalyst-team/catalyst" -> "skorch-dev/skorch"
"catalyst-team/catalyst" -> "PyTorchLightning/pytorch-lightning"
"huawei-noah/Efficient-AI-Backbones" -> "JierunChen/FasterNet"
"huawei-noah/Efficient-AI-Backbones" -> "apple/ml-cvnets"
"huawei-noah/Efficient-AI-Backbones" -> "iscyy/yoloair"
"huawei-noah/Efficient-AI-Backbones" -> "murufeng/awesome_lightweight_networks"
"huawei-noah/Efficient-AI-Backbones" -> "facebookresearch/ConvNeXt"
"huawei-noah/Efficient-AI-Backbones" -> "sail-sg/poolformer"
"huawei-noah/Efficient-AI-Backbones" -> "amusi/CVPR2022-Papers-with-Code"
"huawei-noah/Efficient-AI-Backbones" -> "DingXiaoH/RepLKNet-pytorch" ["e"=1]
"huawei-noah/Efficient-AI-Backbones" -> "snap-research/EfficientFormer"
"huawei-noah/Efficient-AI-Backbones" -> "Visual-Attention-Network/VAN-Classification" ["e"=1]
"huawei-noah/Efficient-AI-Backbones" -> "open-mmlab/mmyolo"
"huawei-noah/Efficient-AI-Backbones" -> "jinfagang/yolov7"
"huawei-noah/Efficient-AI-Backbones" -> "DingXiaoH/RepVGG"
"huawei-noah/Efficient-AI-Backbones" -> "Visual-Attention-Network/SegNeXt" ["e"=1]
"huawei-noah/Efficient-AI-Backbones" -> "meituan/YOLOv6"
"CVBox/PyTorchCV" -> "youansheng/pytorch-cv" ["e"=1]
"CVBox/PyTorchCV" -> "umich-vl/CornerNet"
"CVBox/PyTorchCV" -> "ignacio-rocco/detectorch"
"Epiphqny/CondInst" -> "Epiphqny/SOLO"
"Epiphqny/CondInst" -> "CaoWGG/Mask-CenterNet"
"Epiphqny/CondInst" -> "Epiphqny/SOLOv2"
"NVIDIA/Torch-TensorRT" -> "openppl-public/ppl.nn" ["e"=1]
"NVIDIA/Torch-TensorRT" -> "onnx/onnx-tensorrt"
"NVIDIA/Torch-TensorRT" -> "NVIDIA-AI-IOT/torch2trt"
"NVIDIA/Torch-TensorRT" -> "zerollzeng/tiny-tensorrt"
"NVIDIA/Torch-TensorRT" -> "alibaba/BladeDISC" ["e"=1]
"NVIDIA/Torch-TensorRT" -> "pnnx/pnnx" ["e"=1]
"NVIDIA/Torch-TensorRT" -> "grimoire/mmdetection-to-tensorrt"
"NVIDIA/Torch-TensorRT" -> "LitLeo/TensorRT_Tutorial"
"NVIDIA/Torch-TensorRT" -> "grimoire/torch2trt_dynamic"
"NVIDIA/Torch-TensorRT" -> "Tencent/TPAT"
"NVIDIA/Torch-TensorRT" -> "triton-inference-server/server"
"NVIDIA/Torch-TensorRT" -> "grimoire/amirstan_plugin"
"NVIDIA/Torch-TensorRT" -> "daquexian/onnx-simplifier"
"NVIDIA/Torch-TensorRT" -> "open-mmlab/mmdeploy"
"NVIDIA/Torch-TensorRT" -> "NVIDIA/TensorRT"
"dbolya/tide" -> "kemaloksuz/ObjectDetectionImbalance"
"dbolya/tide" -> "PeizeSun/SparseR-CNN"
"dbolya/tide" -> "rafaelpadilla/review_object_detection_metrics"
"dbolya/tide" -> "Megvii-BaseDetection/cvpods"
"dbolya/tide" -> "conradry/copy-paste-aug"
"dbolya/tide" -> "xingyizhou/CenterNet2"
"dbolya/tide" -> "jshilong/SEPC"
"dbolya/tide" -> "joe-siyuan-qiao/DetectoRS"
"dbolya/tide" -> "hhaAndroid/mmdetection-mini"
"dbolya/tide" -> "ChenhongyiYang/QueryDet-PyTorch"
"dbolya/tide" -> "fcjian/TOOD"
"dbolya/tide" -> "facebookresearch/Detic" ["e"=1]
"dbolya/tide" -> "grimoire/mmdetection-to-tensorrt"
"dbolya/tide" -> "PeizeSun/OneNet"
"dbolya/tide" -> "Megvii-BaseDetection/BorderDet"
"marvis/pytorch-mobilenet" -> "tonylins/pytorch-mobilenet-v2"
"marvis/pytorch-mobilenet" -> "jaxony/ShuffleNet"
"marvis/pytorch-mobilenet" -> "Randl/MobileNetV2-pytorch"
"marvis/pytorch-mobilenet" -> "jacobgil/pytorch-pruning" ["e"=1]
"marvis/pytorch-mobilenet" -> "isht7/pytorch-deeplab-resnet" ["e"=1]
"marvis/pytorch-mobilenet" -> "kuangliu/pytorch-retinanet"
"marvis/pytorch-mobilenet" -> "shicai/MobileNet-Caffe"
"marvis/pytorch-mobilenet" -> "marvis/pytorch-yolo2"
"marvis/pytorch-mobilenet" -> "marvis/pytorch-caffe-darknet-convert"
"marvis/pytorch-mobilenet" -> "ShuangXieIrene/ssds.pytorch"
"marvis/pytorch-mobilenet" -> "PureDiors/pytorch_RFCN"
"marvis/pytorch-mobilenet" -> "Zehaos/MobileNet"
"marvis/pytorch-mobilenet" -> "starimeL/PytorchConverter"
"marvis/pytorch-mobilenet" -> "bharatsingh430/soft-nms"
"marvis/pytorch-mobilenet" -> "miaow1988/ShuffleNet_V2_pytorch_caffe"
"marvis/pytorch-yolo2" -> "longcw/yolo2-pytorch"
"marvis/pytorch-yolo2" -> "marvis/pytorch-yolo3"
"marvis/pytorch-yolo2" -> "ruiminshen/yolo2-pytorch"
"marvis/pytorch-yolo2" -> "marvis/pytorch-caffe-darknet-convert"
"marvis/pytorch-yolo2" -> "kuangliu/pytorch-retinanet"
"marvis/pytorch-yolo2" -> "longcw/faster_rcnn_pytorch"
"marvis/pytorch-yolo2" -> "ayooshkathuria/pytorch-yolo-v3"
"marvis/pytorch-yolo2" -> "andy-yun/pytorch-0.4-yolov3"
"marvis/pytorch-yolo2" -> "ruinmessi/RFBNet"
"marvis/pytorch-yolo2" -> "ShuangXieIrene/ssds.pytorch"
"marvis/pytorch-yolo2" -> "amdegroot/ssd.pytorch"
"marvis/pytorch-yolo2" -> "ruotianluo/pytorch-faster-rcnn"
"marvis/pytorch-yolo2" -> "roytseng-tw/Detectron.pytorch"
"marvis/pytorch-yolo2" -> "lzx1413/PytorchSSD"
"marvis/pytorch-yolo2" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"onnx/onnx-tensorrt" -> "NVIDIA/TensorRT"
"onnx/onnx-tensorrt" -> "NVIDIA-AI-IOT/torch2trt"
"onnx/onnx-tensorrt" -> "wang-xinyu/tensorrtx"
"onnx/onnx-tensorrt" -> "daquexian/onnx-simplifier"
"onnx/onnx-tensorrt" -> "jkjung-avt/tensorrt_demos"
"onnx/onnx-tensorrt" -> "shouxieai/tensorRT_Pro"
"onnx/onnx-tensorrt" -> "CaoWGG/TensorRT-CenterNet"
"onnx/onnx-tensorrt" -> "zerollzeng/tiny-tensorrt"
"onnx/onnx-tensorrt" -> "onnx/tensorflow-onnx"
"onnx/onnx-tensorrt" -> "LitLeo/TensorRT_Tutorial"
"onnx/onnx-tensorrt" -> "triton-inference-server/server"
"onnx/onnx-tensorrt" -> "dlunion/tensorRTIntegrate"
"onnx/onnx-tensorrt" -> "Tianxiaomo/pytorch-YOLOv4"
"onnx/onnx-tensorrt" -> "microsoft/onnxruntime"
"onnx/onnx-tensorrt" -> "xingyizhou/CenterNet"
"patrick-kidger/torchtyping" -> "google/jaxtyping" ["e"=1]
"patrick-kidger/torchtyping" -> "arogozhnikov/einops"
"patrick-kidger/torchtyping" -> "facebookresearch/torchdim" ["e"=1]
"patrick-kidger/torchtyping" -> "PyTorchLightning/metrics"
"patrick-kidger/torchtyping" -> "pytorch/functorch" ["e"=1]
"patrick-kidger/torchtyping" -> "patrick-kidger/equinox" ["e"=1]
"patrick-kidger/torchtyping" -> "google/objax" ["e"=1]
"patrick-kidger/torchtyping" -> "teddykoker/torchsort"
"patrick-kidger/torchtyping" -> "jettify/pytorch-optimizer"
"patrick-kidger/torchtyping" -> "libffcv/ffcv"
"patrick-kidger/torchtyping" -> "lucidrains/x-transformers" ["e"=1]
"patrick-kidger/torchtyping" -> "huggingface/accelerate" ["e"=1]
"patrick-kidger/torchtyping" -> "mosaicml/composer"
"patrick-kidger/torchtyping" -> "rentruewang/koila"
"patrick-kidger/torchtyping" -> "Stonesjtu/pytorch_memlab"
"princeton-vl/CornerNet-Lite" -> "princeton-vl/CornerNet"
"princeton-vl/CornerNet-Lite" -> "Duankaiwen/CenterNet"
"princeton-vl/CornerNet-Lite" -> "tianzhi0549/FCOS"
"princeton-vl/CornerNet-Lite" -> "xingyizhou/CenterNet"
"princeton-vl/CornerNet-Lite" -> "xingyizhou/ExtremeNet"
"princeton-vl/CornerNet-Lite" -> "TuSimple/simpledet"
"princeton-vl/CornerNet-Lite" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"princeton-vl/CornerNet-Lite" -> "ruinmessi/RFBNet"
"princeton-vl/CornerNet-Lite" -> "sfzhang15/RefineDet"
"princeton-vl/CornerNet-Lite" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"princeton-vl/CornerNet-Lite" -> "qijiezhao/M2Det"
"princeton-vl/CornerNet-Lite" -> "liuwei16/CSP" ["e"=1]
"princeton-vl/CornerNet-Lite" -> "STVIR/pysot" ["e"=1]
"princeton-vl/CornerNet-Lite" -> "zhaoweicai/cascade-rcnn"
"princeton-vl/CornerNet-Lite" -> "mahyarnajibi/SNIPER"
"pytorch/ignite" -> "williamFalcon/pytorch-lightning"
"pytorch/ignite" -> "pytorch/tnt"
"pytorch/ignite" -> "skorch-dev/skorch"
"pytorch/ignite" -> "ncullen93/torchsample"
"pytorch/ignite" -> "catalyst-team/catalyst"
"pytorch/ignite" -> "sksq96/pytorch-summary"
"pytorch/ignite" -> "facebookresearch/visdom"
"pytorch/ignite" -> "lanpa/tensorboard-pytorch"
"pytorch/ignite" -> "NVIDIA/apex"
"pytorch/ignite" -> "lanpa/tensorboardX"
"pytorch/ignite" -> "pytorch/text" ["e"=1]
"pytorch/ignite" -> "dnouri/skorch" ["e"=1]
"pytorch/ignite" -> "rusty1s/pytorch_geometric" ["e"=1]
"pytorch/ignite" -> "PyTorchLightning/pytorch-lightning"
"pytorch/ignite" -> "albu/albumentations"
"qijiezhao/M2Det" -> "ruinmessi/RFBNet"
"qijiezhao/M2Det" -> "lzx1413/PytorchSSD"
"qijiezhao/M2Det" -> "sfzhang15/RefineDet"
"qijiezhao/M2Det" -> "TuSimple/simpledet"
"qijiezhao/M2Det" -> "Duankaiwen/CenterNet"
"qijiezhao/M2Det" -> "mahyarnajibi/SNIPER"
"qijiezhao/M2Det" -> "princeton-vl/CornerNet"
"qijiezhao/M2Det" -> "princeton-vl/CornerNet-Lite"
"qijiezhao/M2Det" -> "xingyizhou/ExtremeNet"
"qijiezhao/M2Det" -> "zhaoweicai/cascade-rcnn"
"qijiezhao/M2Det" -> "qijiezhao/CFENet"
"qijiezhao/M2Det" -> "tianzhi0549/FCOS"
"qijiezhao/M2Det" -> "amdegroot/ssd.pytorch"
"qijiezhao/M2Det" -> "ShuLiu1993/PANet"
"qijiezhao/M2Det" -> "yihui-he/KL-Loss"
"DT42/BerryNet" -> "samjabrahams/tensorflow-on-raspberry-pi"
"DT42/BerryNet" -> "Microsoft/ELL"
"DT42/BerryNet" -> "PiSimo/PiCamNN"
"DT42/BerryNet" -> "thtrieu/darkflow"
"DT42/BerryNet" -> "digitalbrain79/darknet-nnpack" ["e"=1]
"DT42/BerryNet" -> "leehaesung/YOLO-Powered_Robot_Vision"
"DT42/BerryNet" -> "neil-tan/uTensor"
"DT42/BerryNet" -> "pauli-space/foundations_for_deep_learning" ["e"=1]
"DT42/BerryNet" -> "allenai/XNOR-Net" ["e"=1]
"DT42/BerryNet" -> "DeepScale/SqueezeNet"
"DT42/BerryNet" -> "deepsyx/home-automation" ["e"=1]
"DT42/BerryNet" -> "allanzelener/YAD2K"
"DT42/BerryNet" -> "caffe2/caffe2" ["e"=1]
"DT42/BerryNet" -> "NanoNets/RaspberryPi-ObjectDetection-TensorFlow"
"DT42/BerryNet" -> "jetpacapp/DeepBeliefSDK" ["e"=1]
"zhanghang1989/ResNeSt" -> "lukemelas/EfficientNet-PyTorch"
"zhanghang1989/ResNeSt" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"zhanghang1989/ResNeSt" -> "joe-siyuan-qiao/DetectoRS"
"zhanghang1989/ResNeSt" -> "facebookresearch/pycls"
"zhanghang1989/ResNeSt" -> "tianzhi0549/FCOS"
"zhanghang1989/ResNeSt" -> "zhanghang1989/PyTorch-Encoding" ["e"=1]
"zhanghang1989/ResNeSt" -> "junfu1115/DANet" ["e"=1]
"zhanghang1989/ResNeSt" -> "HRNet/HRNet-Semantic-Segmentation" ["e"=1]
"zhanghang1989/ResNeSt" -> "xingyizhou/CenterNet"
"zhanghang1989/ResNeSt" -> "aim-uofa/AdelaiDet"
"zhanghang1989/ResNeSt" -> "DingXiaoH/RepVGG"
"zhanghang1989/ResNeSt" -> "facebookresearch/detr"
"zhanghang1989/ResNeSt" -> "tensorflow/tpu"
"zhanghang1989/ResNeSt" -> "moskomule/senet.pytorch" ["e"=1]
"zhanghang1989/ResNeSt" -> "zhanghang1989/detectron2-ResNeSt"
"CSAILVision/LabelMeAnnotationTool" -> "wkentaro/labelme"
"CSAILVision/LabelMeAnnotationTool" -> "shelhamer/fcn.berkeleyvision.org"
"CSAILVision/LabelMeAnnotationTool" -> "opencv/cvat"
"CSAILVision/LabelMeAnnotationTool" -> "christopher5106/FastAnnotationTool"
"CSAILVision/LabelMeAnnotationTool" -> "DeepScale/SqueezeNet"
"CSAILVision/LabelMeAnnotationTool" -> "kyamagu/js-segment-annotator"
"CSAILVision/LabelMeAnnotationTool" -> "MarvinTeichmann/tensorflow-fcn" ["e"=1]
"CSAILVision/LabelMeAnnotationTool" -> "hszhao/PSPNet" ["e"=1]
"CSAILVision/LabelMeAnnotationTool" -> "CharlesShang/FastMaskRCNN"
"CSAILVision/LabelMeAnnotationTool" -> "cvondrick/vatic" ["e"=1]
"CSAILVision/LabelMeAnnotationTool" -> "abreheret/PixelAnnotationTool"
"CSAILVision/LabelMeAnnotationTool" -> "rbgirshick/py-faster-rcnn"
"CSAILVision/LabelMeAnnotationTool" -> "daijifeng001/R-FCN"
"CSAILVision/LabelMeAnnotationTool" -> "Labelbox/Labelbox"
"CSAILVision/LabelMeAnnotationTool" -> "cvhciKIT/sloth"
"christopher5106/FastAnnotationTool" -> "datitran/raccoon_dataset"
"christopher5106/FastAnnotationTool" -> "Labelbox/Labelbox"
"christopher5106/FastAnnotationTool" -> "cvhciKIT/sloth"
"christopher5106/FastAnnotationTool" -> "tzutalin/ImageNet_Utils"
"christopher5106/FastAnnotationTool" -> "Guanghan/ROLO" ["e"=1]
"christopher5106/FastAnnotationTool" -> "datitran/object_detector_app"
"christopher5106/FastAnnotationTool" -> "CSAILVision/LabelMeAnnotationTool"
"christopher5106/FastAnnotationTool" -> "BichenWuUCB/squeezeDet" ["e"=1]
"christopher5106/FastAnnotationTool" -> "soeaver/caffe-model"
"christopher5106/FastAnnotationTool" -> "openimages/dataset"
"christopher5106/FastAnnotationTool" -> "Microsoft/VoTT"
"christopher5106/FastAnnotationTool" -> "Russell91/TensorBox"
"christopher5106/FastAnnotationTool" -> "ryouchinsa/Rectlabel-support"
"christopher5106/FastAnnotationTool" -> "Zehaos/MobileNet"
"christopher5106/FastAnnotationTool" -> "tzutalin/labelImg"
"jay-mahadeokar/pynetbuilder" -> "terrychenism/ResNeXt"
"jay-mahadeokar/pynetbuilder" -> "soeaver/caffe-model"
"jay-mahadeokar/pynetbuilder" -> "HolmesShuan/ResNet-18-Caffemodel-on-ImageNet"
"jay-mahadeokar/pynetbuilder" -> "bharatsingh430/py-R-FCN-multiGPU"
"jay-mahadeokar/pynetbuilder" -> "cvjena/cnn-models"
"jay-mahadeokar/pynetbuilder" -> "liuzhuang13/DenseNetCaffe"
"jay-mahadeokar/pynetbuilder" -> "Orpine/py-R-FCN"
"jay-mahadeokar/pynetbuilder" -> "facebook/fb-caffe-exts" ["e"=1]
"jay-mahadeokar/pynetbuilder" -> "kevinlin311tw/caffe-augmentation"
"jay-mahadeokar/pynetbuilder" -> "farmingyard/caffe-mobilenet"
"jay-mahadeokar/pynetbuilder" -> "xingwangsfu/caffe-yolo"
"jay-mahadeokar/pynetbuilder" -> "shicai/MobileNet-Caffe"
"jay-mahadeokar/pynetbuilder" -> "chuanqi305/FocalLoss"
"jay-mahadeokar/pynetbuilder" -> "Tongcheng/DN_CaffeScript"
"jay-mahadeokar/pynetbuilder" -> "XiaozhiChen/resnet-generator"
"kyamagu/js-segment-annotator" -> "AKSHAYUBHAT/ImageSegmentation"
"kyamagu/js-segment-annotator" -> "commaai/commacoloring" ["e"=1]
"kyamagu/js-segment-annotator" -> "abreheret/PixelAnnotationTool"
"kyamagu/js-segment-annotator" -> "kyamagu/bbox-annotator"
"kyamagu/js-segment-annotator" -> "ZijunDeng/pytorch-semantic-segmentation" ["e"=1]
"kyamagu/js-segment-annotator" -> "CSAILVision/LabelMeAnnotationTool"
"kyamagu/js-segment-annotator" -> "bearpaw/clothing-co-parsing" ["e"=1]
"kyamagu/js-segment-annotator" -> "eBay/modanet" ["e"=1]
"kyamagu/js-segment-annotator" -> "kyamagu/js-graph-annotator"
"kyamagu/js-segment-annotator" -> "Slava/label-tool"
"kyamagu/js-segment-annotator" -> "annotorious/annotorious" ["e"=1]
"kyamagu/js-segment-annotator" -> "TimoSaemann/caffe-segnet-cudnn5" ["e"=1]
"52CV/CVPR-2022-Papers" -> "52CV/CVPR-2021-Papers"
"52CV/CVPR-2022-Papers" -> "52CV/ECCV-2022-Papers"
"52CV/CVPR-2022-Papers" -> "amusi/CVPR2022-Papers-with-Code"
"52CV/CVPR-2022-Papers" -> "amusi/ICCV2021-Papers-with-Code"
"52CV/CVPR-2022-Papers" -> "extreme-assistant/CVPR2022-Paper-Code-Interpretation"
"52CV/CVPR-2022-Papers" -> "extreme-assistant/ICCV2021-Paper-Code-Interpretation"
"52CV/CVPR-2022-Papers" -> "52CV/CV-Surveys"
"52CV/CVPR-2022-Papers" -> "52CV/ICCV-2021-Papers"
"52CV/CVPR-2022-Papers" -> "DWCTOD/ECCV2022-Papers-with-Code-Demo"
"52CV/CVPR-2022-Papers" -> "52CV/ICCV-Papers"
"52CV/CVPR-2022-Papers" -> "52CV/CVPR-2023-Papers"
"52CV/CVPR-2022-Papers" -> "52CV/WACV-2022-Papers"
"52CV/CVPR-2022-Papers" -> "swz30/Restormer" ["e"=1]
"52CV/CVPR-2022-Papers" -> "amusi/ECCV2022-Papers-with-Code"
"52CV/CVPR-2022-Papers" -> "amusi/ECCV2020-Code"
"tczhangzhi/pytorch-distributed" -> "tanglang96/DataLoaders_DALI"
"tczhangzhi/pytorch-distributed" -> "lartpang/PyTorchTricks"
"tczhangzhi/pytorch-distributed" -> "dk-liang/Awesome-Visual-Transformer"
"tczhangzhi/pytorch-distributed" -> "Lyken17/pytorch-OpCounter"
"tczhangzhi/pytorch-distributed" -> "CoinCheung/pytorch-loss" ["e"=1]
"tczhangzhi/pytorch-distributed" -> "zhanghang1989/ResNeSt"
"tczhangzhi/pytorch-distributed" -> "rentainhe/pytorch-distributed-training"
"tczhangzhi/pytorch-distributed" -> "DingXiaoH/RepVGG"
"tczhangzhi/pytorch-distributed" -> "facebookresearch/pycls"
"tczhangzhi/pytorch-distributed" -> "sovrasov/flops-counter.pytorch"
"tczhangzhi/pytorch-distributed" -> "zhanghang1989/PyTorch-Encoding" ["e"=1]
"tczhangzhi/pytorch-distributed" -> "NVIDIA/apex"
"tczhangzhi/pytorch-distributed" -> "facebookresearch/moco"
"tczhangzhi/pytorch-distributed" -> "Lyken17/Efficient-PyTorch"
"tczhangzhi/pytorch-distributed" -> "vacancy/Synchronized-BatchNorm-PyTorch" ["e"=1]
"AlexeyAB/Yolo_mark" -> "puzzledqs/BBox-Label-Tool"
"AlexeyAB/Yolo_mark" -> "AlexeyAB/darknet"
"AlexeyAB/Yolo_mark" -> "thtrieu/darkflow"
"AlexeyAB/Yolo_mark" -> "tzutalin/labelImg"
"AlexeyAB/Yolo_mark" -> "qqwweee/keras-yolo3"
"AlexeyAB/Yolo_mark" -> "YunYang1994/tensorflow-yolov3"
"AlexeyAB/Yolo_mark" -> "pjreddie/darknet"
"AlexeyAB/Yolo_mark" -> "mystic123/tensorflow-yolo-v3"
"AlexeyAB/Yolo_mark" -> "ayooshkathuria/pytorch-yolo-v3"
"AlexeyAB/Yolo_mark" -> "nwojke/deep_sort" ["e"=1]
"AlexeyAB/Yolo_mark" -> "hgpvision/darknet"
"AlexeyAB/Yolo_mark" -> "hunglc007/tensorflow-yolov4-tflite"
"AlexeyAB/Yolo_mark" -> "ultralytics/yolov3"
"AlexeyAB/Yolo_mark" -> "weiliu89/caffe"
"AlexeyAB/Yolo_mark" -> "abewley/sort" ["e"=1]
"terryky/tflite_gles_app" -> "PINTO0309/PINTO_model_zoo"
"terryky/tflite_gles_app" -> "iwatake2222/play_with_tflite"
"terryky/tflite_gles_app" -> "terryky/tfjs_webgl_app" ["e"=1]
"terryky/tflite_gles_app" -> "PINTO0309/tflite2tensorflow"
"terryky/tflite_gles_app" -> "PINTO0309/openvino2tensorflow"
"terryky/tflite_gles_app" -> "terryky/android_tflite"
"terryky/tflite_gles_app" -> "NVIDIA-AI-IOT/trt_pose" ["e"=1]
"terryky/tflite_gles_app" -> "jiuqiant/mediapipe_python_aarch64" ["e"=1]
"terryky/tflite_gles_app" -> "google-coral/project-bodypix" ["e"=1]
"terryky/tflite_gles_app" -> "asus4/tf-lite-unity-sample" ["e"=1]
"terryky/tflite_gles_app" -> "patlevin/tfjs-to-tf" ["e"=1]
"terryky/tflite_gles_app" -> "PINTO0309/TensorflowLite-bin"
"terryky/tflite_gles_app" -> "PINTO0309/mediapipe-bin" ["e"=1]
"terryky/tflite_gles_app" -> "NobuoTsukamoto/edge_tpu" ["e"=1]
"terryky/tflite_gles_app" -> "michalfaber/tensorflow_Realtime_Multi-Person_Pose_Estimation" ["e"=1]
"llSourcell/YOLO_Object_Detection" -> "thtrieu/darkflow"
"llSourcell/YOLO_Object_Detection" -> "KleinYuan/easy-yolo"
"llSourcell/YOLO_Object_Detection" -> "allanzelener/YAD2K"
"llSourcell/YOLO_Object_Detection" -> "gliese581gg/YOLO_tensorflow"
"llSourcell/YOLO_Object_Detection" -> "EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10"
"llSourcell/YOLO_Object_Detection" -> "markjay4k/YOLO-series"
"llSourcell/YOLO_Object_Detection" -> "qqwweee/keras-yolo3"
"llSourcell/YOLO_Object_Detection" -> "experiencor/keras-yolo2"
"llSourcell/YOLO_Object_Detection" -> "RiccardoGrin/darknet"
"llSourcell/YOLO_Object_Detection" -> "mystic123/tensorflow-yolo-v3"
"llSourcell/YOLO_Object_Detection" -> "llSourcell/tensorflow_chatbot" ["e"=1]
"llSourcell/YOLO_Object_Detection" -> "balancap/SSD-Tensorflow"
"llSourcell/YOLO_Object_Detection" -> "wizyoung/YOLOv3_TensorFlow"
"llSourcell/YOLO_Object_Detection" -> "ayooshkathuria/pytorch-yolo-v3"
"llSourcell/YOLO_Object_Detection" -> "llSourcell/Convolutional_neural_network" ["e"=1]
"WongKinYiu/ScaledYOLOv4" -> "WongKinYiu/PyTorch_YOLOv4"
"WongKinYiu/ScaledYOLOv4" -> "WongKinYiu/yolor"
"WongKinYiu/ScaledYOLOv4" -> "Tianxiaomo/pytorch-YOLOv4"
"WongKinYiu/ScaledYOLOv4" -> "WongKinYiu/CrossStagePartialNetworks"
"WongKinYiu/ScaledYOLOv4" -> "xingyizhou/CenterNet2"
"WongKinYiu/ScaledYOLOv4" -> "Megvii-BaseDetection/YOLOX"
"WongKinYiu/ScaledYOLOv4" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"WongKinYiu/ScaledYOLOv4" -> "wang-xinyu/tensorrtx"
"WongKinYiu/ScaledYOLOv4" -> "joe-siyuan-qiao/DetectoRS"
"WongKinYiu/ScaledYOLOv4" -> "RangiLyu/nanodet"
"WongKinYiu/ScaledYOLOv4" -> "hunglc007/tensorflow-yolov4-tflite"
"WongKinYiu/ScaledYOLOv4" -> "enazoe/yolo-tensorrt"
"WongKinYiu/ScaledYOLOv4" -> "xingyizhou/CenterNet"
"WongKinYiu/ScaledYOLOv4" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"WongKinYiu/ScaledYOLOv4" -> "DingXiaoH/RepVGG"
"yhenon/pytorch-retinanet" -> "kuangliu/pytorch-retinanet"
"yhenon/pytorch-retinanet" -> "tianzhi0549/FCOS"
"yhenon/pytorch-retinanet" -> "fizyr/keras-retinanet"
"yhenon/pytorch-retinanet" -> "amdegroot/ssd.pytorch"
"yhenon/pytorch-retinanet" -> "xingyizhou/CenterNet"
"yhenon/pytorch-retinanet" -> "princeton-vl/CornerNet"
"yhenon/pytorch-retinanet" -> "jwyang/faster-rcnn.pytorch"
"yhenon/pytorch-retinanet" -> "toandaominh1997/EfficientDet.Pytorch"
"yhenon/pytorch-retinanet" -> "sfzhang15/ATSS"
"yhenon/pytorch-retinanet" -> "lufficc/SSD"
"yhenon/pytorch-retinanet" -> "jwyang/fpn.pytorch"
"yhenon/pytorch-retinanet" -> "eriklindernoren/PyTorch-YOLOv3"
"yhenon/pytorch-retinanet" -> "Duankaiwen/CenterNet"
"yhenon/pytorch-retinanet" -> "facebookresearch/maskrcnn-benchmark"
"yhenon/pytorch-retinanet" -> "TuSimple/simpledet"
"dev-sungman/Awesome-Self-Supervised-Papers" -> "wvangansbeke/Self-Supervised-Learning-Overview"
"dev-sungman/Awesome-Self-Supervised-Papers" -> "asheeshcric/awesome-contrastive-self-supervised-learning"
"dev-sungman/Awesome-Self-Supervised-Papers" -> "VainF/Awesome-Contrastive-Learning"
"extreme-assistant/Awesome-CV-Team" -> "extreme-assistant/survey-computer-vision"
"facebookresearch/DeeperCluster" -> "facebookresearch/deepcluster"
"facebookresearch/DeeperCluster" -> "facebookresearch/fair_self_supervision_benchmark"
"facebookresearch/DeeperCluster" -> "google/revisiting-self-supervised"
"facebookresearch/DeeperCluster" -> "neuroailab/LocalAggregation"
"gbstack/CVPR-2022-papers" -> "extreme-assistant/ECCV2022-Paper-Code-Interpretation"
"gbstack/CVPR-2022-papers" -> "amusi/ECCV2022-Papers-with-Code"
"gbstack/CVPR-2022-papers" -> "extreme-assistant/CVPR2022-Paper-Code-Interpretation"
"gbstack/CVPR-2022-papers" -> "extreme-assistant/ICCV2021-Paper-Code-Interpretation"
"gbstack/CVPR-2022-papers" -> "amusi/CVPR2022-Papers-with-Code"
"gbstack/CVPR-2022-papers" -> "DWCTOD/ECCV2022-Papers-with-Code-Demo"
"gbstack/CVPR-2022-papers" -> "extreme-assistant/CVPR2023-Paper-Code-Interpretation"
"gbstack/CVPR-2022-papers" -> "DWCTOD/CVPR2022-Papers-with-Code-Demo"
"gidariss/FeatureLearningRotNet" -> "google/revisiting-self-supervised"
"gidariss/FeatureLearningRotNet" -> "bbrattoli/JigsawPuzzlePytorch"
"gidariss/FeatureLearningRotNet" -> "facebookresearch/fair_self_supervision_benchmark"
"gidariss/FeatureLearningRotNet" -> "zhirongw/lemniscate.pytorch"
"gidariss/FeatureLearningRotNet" -> "philiptheother/FeatureDecoupling"
"gidariss/FeatureLearningRotNet" -> "Philip-Bachman/amdim-public"
"gidariss/FeatureLearningRotNet" -> "google-research/s4l"
"gidariss/FeatureLearningRotNet" -> "hendrycks/ss-ood" ["e"=1]
"gidariss/FeatureLearningRotNet" -> "maple-research-lab/AET"
"gidariss/FeatureLearningRotNet" -> "mangye16/Unsupervised_Embedding_Learning"
"gidariss/FeatureLearningRotNet" -> "facebookresearch/DeeperCluster"
"gidariss/FeatureLearningRotNet" -> "HobbitLong/CMC"
"gidariss/FeatureLearningRotNet" -> "open-mmlab/OpenSelfSup"
"gidariss/FeatureLearningRotNet" -> "sthalles/PyTorch-BYOL"
"gidariss/FeatureLearningRotNet" -> "facebookresearch/deepcluster"
"leftthomas/SimCLR" -> "Spijkervet/SimCLR"
"leftthomas/SimCLR" -> "sthalles/SimCLR"
"leftthomas/SimCLR" -> "AndrewAtanov/simclr-pytorch"
"leftthomas/SimCLR" -> "google-research/simclr"
"leftthomas/SimCLR" -> "sthalles/PyTorch-BYOL"
"leftthomas/SimCLR" -> "chingyaoc/DCL"
"leftthomas/SimCLR" -> "HobbitLong/SupContrast"
"leftthomas/SimCLR" -> "zhirongw/lemniscate.pytorch"
"leftthomas/SimCLR" -> "facebookresearch/swav"
"leftthomas/SimCLR" -> "facebookresearch/moco"
"leftthomas/SimCLR" -> "lucidrains/byol-pytorch"
"leftthomas/SimCLR" -> "salesforce/PCL"
"leftthomas/SimCLR" -> "mdiephuis/SimCLR"
"leftthomas/SimCLR" -> "HobbitLong/PyContrast"
"leftthomas/SimCLR" -> "wvangansbeke/Unsupervised-Classification"
"FrancescoSaverioZuppichini/glasses" -> "FrancescoSaverioZuppichini/ViT"
"FrancescoSaverioZuppichini/glasses" -> "uvipen/SSD-pytorch" ["e"=1]
"FrancescoSaverioZuppichini/glasses" -> "FrancescoSaverioZuppichini/PyTorch-Deep-Learning-Template"
"kuan-wang/pytorch-mobilenet-v3" -> "xiaolai-sqlai/mobilenetv3"
"kuan-wang/pytorch-mobilenet-v3" -> "leaderj1001/MobileNetV3-Pytorch"
"kuan-wang/pytorch-mobilenet-v3" -> "d-li14/mobilenetv3.pytorch"
"kuan-wang/pytorch-mobilenet-v3" -> "tonylins/pytorch-mobilenet-v2"
"kuan-wang/pytorch-mobilenet-v3" -> "d-li14/mobilenetv2.pytorch"
"kuan-wang/pytorch-mobilenet-v3" -> "shaoshengsong/MobileNetV3-SSD"
"kuan-wang/pytorch-mobilenet-v3" -> "Bisonai/mobilenetv3-tensorflow"
"kuan-wang/pytorch-mobilenet-v3" -> "rwightman/gen-efficientnet-pytorch"
"kuan-wang/pytorch-mobilenet-v3" -> "huawei-noah/ghostnet"
"kuan-wang/pytorch-mobilenet-v3" -> "iamhankai/ghostnet.pytorch"
"kuan-wang/pytorch-mobilenet-v3" -> "megvii-model/ShuffleNet-Series"
"kuan-wang/pytorch-mobilenet-v3" -> "xiaomi-automl/MoGA" ["e"=1]
"kuan-wang/pytorch-mobilenet-v3" -> "princeton-vl/CornerNet-Lite"
"kuan-wang/pytorch-mobilenet-v3" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"kuan-wang/pytorch-mobilenet-v3" -> "qfgaohao/pytorch-ssd"
"suzhenghang/MobileNetv2" -> "austingg/MobileNet-v2-caffe"
"suzhenghang/MobileNetv2" -> "farmingyard/caffe-mobilenet_v2"
"suzhenghang/MobileNetv2" -> "chuanqi305/MobileNetv2-SSDLite"
"suzhenghang/MobileNetv2" -> "yonghenglh6/DepthwiseConvolution"
"suzhenghang/MobileNetv2" -> "farmingyard/ShuffleNet"
"suzhenghang/MobileNetv2" -> "shicai/MobileNet-Caffe"
"YuhaoCheng/PyAnomaly" -> "lxc86739795/parsing_platform"
"YuhaoCheng/PyAnomaly" -> "xbq1994/HAA"
"YuhaoCheng/PyAnomaly" -> "JDAI-CV/DSD-SATN"
"YuhaoCheng/PyAnomaly" -> "JDAI-CV/Partial-Person-ReID"
"Philip-Bachman/amdim-public" -> "rdevon/DIM"
"Philip-Bachman/amdim-public" -> "DuaneNielsen/DeepInfomaxPytorch"
"Philip-Bachman/amdim-public" -> "HobbitLong/CMC"
"Philip-Bachman/amdim-public" -> "facebookresearch/fair_self_supervision_benchmark"
"Philip-Bachman/amdim-public" -> "gidariss/FeatureLearningRotNet"
"Philip-Bachman/amdim-public" -> "google/revisiting-self-supervised"
"Philip-Bachman/amdim-public" -> "phecy/SSL-FEW-SHOT" ["e"=1]
"Philip-Bachman/amdim-public" -> "jefflai108/Contrastive-Predictive-Coding-PyTorch"
"Philip-Bachman/amdim-public" -> "zhirongw/lemniscate.pytorch"
"Philip-Bachman/amdim-public" -> "mf1024/Contrastive-Predictive-Coding-for-Image-Recognition-in-PyTorch"
"Philip-Bachman/amdim-public" -> "davidtellez/contrastive-predictive-coding"
"Philip-Bachman/amdim-public" -> "SsnL/align_uniform"
"Philip-Bachman/amdim-public" -> "TengdaHan/DPC" ["e"=1]
"Philip-Bachman/amdim-public" -> "flrngel/cpc-tensorflow"
"Philip-Bachman/amdim-public" -> "sthalles/PyTorch-BYOL"
"WongKinYiu/CrossStagePartialNetworks" -> "ruinmessi/ASFF"
"WongKinYiu/CrossStagePartialNetworks" -> "WongKinYiu/ScaledYOLOv4"
"WongKinYiu/CrossStagePartialNetworks" -> "WongKinYiu/PyTorch_YOLOv4"
"WongKinYiu/CrossStagePartialNetworks" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"WongKinYiu/CrossStagePartialNetworks" -> "ceccocats/tkDNN"
"WongKinYiu/CrossStagePartialNetworks" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"WongKinYiu/CrossStagePartialNetworks" -> "Tianxiaomo/pytorch-YOLOv4"
"WongKinYiu/CrossStagePartialNetworks" -> "PengyiZhang/SlimYOLOv3" ["e"=1]
"WongKinYiu/CrossStagePartialNetworks" -> "sfzhang15/ATSS"
"WongKinYiu/CrossStagePartialNetworks" -> "toandaominh1997/EfficientDet.Pytorch"
"WongKinYiu/CrossStagePartialNetworks" -> "coldlarry/YOLOv3-complete-pruning" ["e"=1]
"WongKinYiu/CrossStagePartialNetworks" -> "WongKinYiu/PartialResidualNetworks" ["e"=1]
"WongKinYiu/CrossStagePartialNetworks" -> "huawei-noah/ghostnet"
"WongKinYiu/CrossStagePartialNetworks" -> "zhanghang1989/ResNeSt"
"WongKinYiu/CrossStagePartialNetworks" -> "WongKinYiu/yolor"
"d-li14/involution" -> "Andrew-Qibin/CoordAttention" ["e"=1]
"d-li14/involution" -> "whai362/PVT"
"d-li14/involution" -> "DingXiaoH/RepVGG"
"d-li14/involution" -> "ChristophReich1996/Involution"
"d-li14/involution" -> "megvii-model/YOLOF"
"d-li14/involution" -> "yitu-opensource/T2T-ViT"
"d-li14/involution" -> "xingyizhou/CenterNet2"
"d-li14/involution" -> "facebookresearch/deit"
"d-li14/involution" -> "PeizeSun/SparseR-CNN"
"d-li14/involution" -> "dk-liang/Awesome-Visual-Transformer"
"d-li14/involution" -> "JosephKJ/OWOD" ["e"=1]
"d-li14/involution" -> "microsoft/Swin-Transformer"
"d-li14/involution" -> "implus/GFocalV2"
"d-li14/involution" -> "fudan-zvg/SETR"
"d-li14/involution" -> "BangguWu/ECANet" ["e"=1]
"juntang-zhuang/Adabelief-Optimizer" -> "jettify/pytorch-optimizer"
"juntang-zhuang/Adabelief-Optimizer" -> "lessw2020/Ranger-Deep-Learning-Optimizer"
"juntang-zhuang/Adabelief-Optimizer" -> "lucidrains/lambda-networks"
"juntang-zhuang/Adabelief-Optimizer" -> "lucidrains/performer-pytorch" ["e"=1]
"juntang-zhuang/Adabelief-Optimizer" -> "LiyuanLucasLiu/RAdam"
"juntang-zhuang/Adabelief-Optimizer" -> "Luolc/AdaBound"
"juntang-zhuang/Adabelief-Optimizer" -> "davda54/sam"
"juntang-zhuang/Adabelief-Optimizer" -> "facebookresearch/madgrad"
"juntang-zhuang/Adabelief-Optimizer" -> "idiap/fast-transformers" ["e"=1]
"juntang-zhuang/Adabelief-Optimizer" -> "lessw2020/Ranger21"
"juntang-zhuang/Adabelief-Optimizer" -> "digantamisra98/Mish"
"juntang-zhuang/Adabelief-Optimizer" -> "ml-jku/hopfield-layers" ["e"=1]
"juntang-zhuang/Adabelief-Optimizer" -> "lucidrains/linear-attention-transformer" ["e"=1]
"juntang-zhuang/Adabelief-Optimizer" -> "microsoft/fastformers" ["e"=1]
"juntang-zhuang/Adabelief-Optimizer" -> "tomgoldstein/loss-landscape"
"parrt/tensor-sensor" -> "patrick-kidger/torchtyping"
"parrt/tensor-sensor" -> "facebookresearch/hiplot" ["e"=1]
"parrt/tensor-sensor" -> "PyTorchLightning/pytorch-lightning-bolts"
"parrt/tensor-sensor" -> "PyTorchLightning/lightning-flash"
"parrt/tensor-sensor" -> "huggingface/pytorch_block_sparse" ["e"=1]
"parrt/tensor-sensor" -> "ElementAI/baal" ["e"=1]
"parrt/tensor-sensor" -> "replicate/keepsake"
"parrt/tensor-sensor" -> "PyTorchLightning/lightning-transformers"
"parrt/tensor-sensor" -> "SeldonIO/alibi-detect" ["e"=1]
"parrt/tensor-sensor" -> "arogozhnikov/einops"
"parrt/tensor-sensor" -> "Stonesjtu/pytorch_memlab"
"parrt/tensor-sensor" -> "microsoft/hummingbird" ["e"=1]
"parrt/tensor-sensor" -> "KeremTurgutlu/self_supervised" ["e"=1]
"parrt/tensor-sensor" -> "google-research/robustness_metrics" ["e"=1]
"replicate/keepsake" -> "karpathy/deep-vector-quantization" ["e"=1]
"replicate/keepsake" -> "phalanx-hk/kaggle_cv_pipeline" ["e"=1]
"replicate/keepsake" -> "patrick-kidger/torchtyping"
"replicate/keepsake" -> "princeton-vl/DeepV2D" ["e"=1]
"replicate/keepsake" -> "PyTorchLightning/lightning-flash"
"replicate/keepsake" -> "PyTorchLightning/pytorch-lightning-bolts"
"replicate/keepsake" -> "aimhubio/aim" ["e"=1]
"replicate/keepsake" -> "huggingface/autonlp" ["e"=1]
"replicate/keepsake" -> "arogozhnikov/einops"
"replicate/keepsake" -> "maiot-io/zenml" ["e"=1]
"replicate/keepsake" -> "pfnet-research/xfeat" ["e"=1]
"replicate/keepsake" -> "pfnet/pysen" ["e"=1]
"replicate/keepsake" -> "catalyst-team/catalyst"
"replicate/keepsake" -> "parrt/tensor-sensor"
"replicate/keepsake" -> "google/ml_collections" ["e"=1]
"wandb/awesome-dl-projects" -> "wandb/edu"
"priya-dwivedi/Deep-Learning" -> "fizyr/keras-retinanet"
"priya-dwivedi/Deep-Learning" -> "matterport/Mask_RCNN"
"priya-dwivedi/Deep-Learning" -> "EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10"
"priya-dwivedi/Deep-Learning" -> "datitran/raccoon_dataset"
"priya-dwivedi/Deep-Learning" -> "tzutalin/labelImg"
"priya-dwivedi/Deep-Learning" -> "thtrieu/darkflow"
"priya-dwivedi/Deep-Learning" -> "susanli2016/NLP-with-Python" ["e"=1]
"priya-dwivedi/Deep-Learning" -> "oarriaga/face_classification" ["e"=1]
"priya-dwivedi/Deep-Learning" -> "CharlesShang/FastMaskRCNN"
"priya-dwivedi/Deep-Learning" -> "udacity/deep-learning" ["e"=1]
"priya-dwivedi/Deep-Learning" -> "balancap/SSD-Tensorflow"
"priya-dwivedi/Deep-Learning" -> "qqwweee/keras-yolo3"
"priya-dwivedi/Deep-Learning" -> "abreheret/PixelAnnotationTool"
"priya-dwivedi/Deep-Learning" -> "Hvass-Labs/TensorFlow-Tutorials" ["e"=1]
"priya-dwivedi/Deep-Learning" -> "spmallick/learnopencv"
"Yonghongwei/Gradient-Centralization" -> "lessw2020/Ranger-Deep-Learning-Optimizer"
"Yonghongwei/Gradient-Centralization" -> "anonymous47823493/EagleEye" ["e"=1]
"Yonghongwei/Gradient-Centralization" -> "iamhankai/ghostnet.pytorch"
"Yonghongwei/Gradient-Centralization" -> "cccorn/AP-loss"
"Yonghongwei/Gradient-Centralization" -> "sfzhang15/ATSS"
"Yonghongwei/Gradient-Centralization" -> "liuzechun/MetaPruning" ["e"=1]
"Yonghongwei/Gradient-Centralization" -> "JiahuiYu/slimmable_networks" ["e"=1]
"Yonghongwei/Gradient-Centralization" -> "implus/GFocal"
"Yonghongwei/Gradient-Centralization" -> "hyz-xmaster/swa_object_detection"
"Yonghongwei/Gradient-Centralization" -> "kakaobrain/fast-autoaugment" ["e"=1]
"kakaobrain/torchlars" -> "noahgolmant/pytorch-lars"
"kakaobrain/torchlars" -> "cybertronai/pytorch-lamb"
"kakaobrain/torchlars" -> "sthalles/PyTorch-BYOL"
"kakaobrain/torchlars" -> "Spijkervet/SimCLR"
"kakaobrain/torchlars" -> "tonylins/simclr-converter"
"neuleaf/MobileNetV2" -> "timctho/mobilenet-v2-tensorflow"
"neuleaf/MobileNetV2" -> "ShuangXieIrene/mobilenet-v2"
"neuleaf/MobileNetV2" -> "timctho/shufflenet-v2-tensorflow"
"neuleaf/MobileNetV2" -> "ildoonet/tf-mobilenet-v2"
"nilboy/tensorflow-yolo" -> "hizhangp/yolo_tensorflow"
"nilboy/tensorflow-yolo" -> "gliese581gg/YOLO_tensorflow"
"nilboy/tensorflow-yolo" -> "ruiminshen/yolo-tf"
"nilboy/tensorflow-yolo" -> "balancap/SSD-Tensorflow"
"nilboy/tensorflow-yolo" -> "smallcorgi/Faster-RCNN_TF"
"nilboy/tensorflow-yolo" -> "CharlesShang/TFFRCNN"
"nilboy/tensorflow-yolo" -> "persistforever/yolo-tensorflow"
"nilboy/tensorflow-yolo" -> "longcw/yolo2-pytorch"
"nilboy/tensorflow-yolo" -> "thtrieu/darkflow"
"nilboy/tensorflow-yolo" -> "seann999/ssd_tensorflow"
"nilboy/tensorflow-yolo" -> "MarvinTeichmann/tensorflow-fcn" ["e"=1]
"nilboy/tensorflow-yolo" -> "xingwangsfu/caffe-yolo"
"nilboy/tensorflow-yolo" -> "georgesung/ssd_tensorflow_traffic_sign_detection" ["e"=1]
"nilboy/tensorflow-yolo" -> "endernewton/tf-faster-rcnn"
"nilboy/tensorflow-yolo" -> "CharlesShang/FastMaskRCNN"
"Kaixhin/grokking-pytorch" -> "vahidk/EffectivePyTorch"
"Kaixhin/grokking-pytorch" -> "Atcold/PyTorch-Deep-Learning-Minicourse"
"Kaixhin/grokking-pytorch" -> "lanpa/tensorboard-pytorch"
"Kaixhin/grokking-pytorch" -> "pytorch/contrib" ["e"=1]
"Kaixhin/grokking-pytorch" -> "mila-udem/welcome_tutorials" ["e"=1]
"Kaixhin/grokking-pytorch" -> "mlss-2019/tutorials"
"Kaixhin/grokking-pytorch" -> "smilli/research-advice" ["e"=1]
"Kaixhin/grokking-pytorch" -> "hardmaru/pytorch_notebooks" ["e"=1]
"Kaixhin/grokking-pytorch" -> "wkentaro/pytorch-for-numpy-users"
"Kaixhin/grokking-pytorch" -> "NirantK/best-of-jupyter" ["e"=1]
"Kaixhin/grokking-pytorch" -> "rasbt/deep-learning-book" ["e"=1]
"Kaixhin/grokking-pytorch" -> "stared/thinking-in-tensors-writing-in-pytorch" ["e"=1]
"Kaixhin/grokking-pytorch" -> "IgorSusmelj/pytorch-styleguide"
"Kaixhin/grokking-pytorch" -> "wannabeOG/Mask-RCNN"
"CharlesShang/TFFRCNN" -> "smallcorgi/Faster-RCNN_TF"
"CharlesShang/TFFRCNN" -> "endernewton/tf-faster-rcnn"
"CharlesShang/TFFRCNN" -> "CharlesShang/FastMaskRCNN"
"CharlesShang/TFFRCNN" -> "yhenon/keras-frcnn"
"CharlesShang/TFFRCNN" -> "nilboy/tensorflow-yolo"
"CharlesShang/TFFRCNN" -> "balancap/SSD-Tensorflow"
"CharlesShang/TFFRCNN" -> "rbgirshick/py-faster-rcnn"
"CharlesShang/TFFRCNN" -> "gliese581gg/YOLO_tensorflow"
"CharlesShang/TFFRCNN" -> "MarvinTeichmann/tensorflow-fcn" ["e"=1]
"CharlesShang/TFFRCNN" -> "sanghoon/pva-faster-rcnn"
"CharlesShang/TFFRCNN" -> "longcw/faster_rcnn_pytorch"
"CharlesShang/TFFRCNN" -> "daijifeng001/R-FCN"
"CharlesShang/TFFRCNN" -> "zplizzi/tensorflow-fast-rcnn"
"CharlesShang/TFFRCNN" -> "longcw/yolo2-pytorch"
"CharlesShang/TFFRCNN" -> "ry/tensorflow-resnet"
"Eniac-Xie/faster-rcnn-resnet" -> "bharatsingh430/py-R-FCN-multiGPU"
"Eniac-Xie/faster-rcnn-resnet" -> "xmyqsh/FPN"
"Eniac-Xie/faster-rcnn-resnet" -> "soeaver/py-RFCN-priv" ["e"=1]
"Eniac-Xie/faster-rcnn-resnet" -> "unsky/FPN"
"Eniac-Xie/faster-rcnn-resnet" -> "shicai/DenseNet-Caffe"
"Eniac-Xie/faster-rcnn-resnet" -> "XiaozhiChen/resnet-generator"
"Eniac-Xie/faster-rcnn-resnet" -> "abhi2610/ohem"
"ShaoqingRen/faster_rcnn" -> "rbgirshick/fast-rcnn"
"ShaoqingRen/faster_rcnn" -> "rbgirshick/py-faster-rcnn"
"ShaoqingRen/faster_rcnn" -> "rbgirshick/rcnn"
"ShaoqingRen/faster_rcnn" -> "daijifeng001/R-FCN"
"ShaoqingRen/faster_rcnn" -> "weiliu89/caffe"
"ShaoqingRen/faster_rcnn" -> "smallcorgi/Faster-RCNN_TF"
"ShaoqingRen/faster_rcnn" -> "KaimingHe/deep-residual-networks"
"ShaoqingRen/faster_rcnn" -> "CharlesShang/FastMaskRCNN"
"ShaoqingRen/faster_rcnn" -> "endernewton/tf-faster-rcnn"
"ShaoqingRen/faster_rcnn" -> "shelhamer/fcn.berkeleyvision.org"
"ShaoqingRen/faster_rcnn" -> "liuzhuang13/DenseNet"
"ShaoqingRen/faster_rcnn" -> "facebook/fb.resnet.torch"
"ShaoqingRen/faster_rcnn" -> "balancap/SSD-Tensorflow"
"ShaoqingRen/faster_rcnn" -> "msracver/Deformable-ConvNets"
"ShaoqingRen/faster_rcnn" -> "DeepScale/SqueezeNet"
"ailias/Focal-Loss-implement-on-Tensorflow" -> "CasiaFan/tensorflow_retinanet"
"ailias/Focal-Loss-implement-on-Tensorflow" -> "fudannlp16/focal-loss"
"ailias/Focal-Loss-implement-on-Tensorflow" -> "unsky/focal-loss"
"ailias/Focal-Loss-implement-on-Tensorflow" -> "unsky/RetinaNet"
"ailias/Focal-Loss-implement-on-Tensorflow" -> "zhezh/focalloss"
"ailias/Focal-Loss-implement-on-Tensorflow" -> "mkocabas/focal-loss-keras"
"ailias/Focal-Loss-implement-on-Tensorflow" -> "taki0112/SENet-Tensorflow"
"antingshen/resnet-protofiles" -> "HolmesShuan/ResNet-18-Caffemodel-on-ImageNet"
"antingshen/resnet-protofiles" -> "yihui-he/resnet-cifar10-caffe"
"antingshen/resnet-protofiles" -> "shicai/DenseNet-Caffe"
"antingshen/resnet-protofiles" -> "yihui-he/resnet-imagenet-caffe"
"antingshen/resnet-protofiles" -> "farmingyard/caffe-mobilenet"
"antingshen/resnet-protofiles" -> "xialuxi/arcface-caffe" ["e"=1]
"antingshen/resnet-protofiles" -> "Tongcheng/DN_CaffeScript"
"antingshen/resnet-protofiles" -> "shicai/SENet-Caffe"
"antingshen/resnet-protofiles" -> "soeaver/caffe-model"
"antingshen/resnet-protofiles" -> "cvjena/cnn-models"
"antingshen/resnet-protofiles" -> "davidstutz/caffe-tools"
"antingshen/resnet-protofiles" -> "chuanqi305/FocalLoss"
"antingshen/resnet-protofiles" -> "smichalowski/google_inception_v3_for_caffe"
"unsky/FPN" -> "yangxue0827/FPN_Tensorflow" ["e"=1]
"unsky/FPN" -> "xmyqsh/FPN"
"unsky/FPN" -> "jwyang/fpn.pytorch"
"unsky/FPN" -> "bharatsingh430/soft-nms"
"unsky/FPN" -> "sciencefans/Focal-Loss"
"unsky/FPN" -> "YuwenXiong/py-R-FCN"
"unsky/FPN" -> "Eniac-Xie/faster-rcnn-resnet"
"unsky/FPN" -> "sfzhang15/RefineDet"
"unsky/FPN" -> "kuangliu/pytorch-fpn"
"unsky/FPN" -> "wuzheng-sjtu/FastFPN"
"unsky/FPN" -> "shicai/DenseNet-Caffe"
"unsky/FPN" -> "vacancy/PreciseRoIPooling"
"unsky/FPN" -> "bharatsingh430/py-R-FCN-multiGPU"
"unsky/FPN" -> "chengyangfu/caffe"
"unsky/FPN" -> "chuanqi305/FocalLoss"
"zhaoweicai/cascade-rcnn" -> "zhaoweicai/Detectron-Cascade-RCNN"
"zhaoweicai/cascade-rcnn" -> "sfzhang15/RefineDet"
"zhaoweicai/cascade-rcnn" -> "guoruoqian/cascade-rcnn_Pytorch"
"zhaoweicai/cascade-rcnn" -> "ruinmessi/RFBNet"
"zhaoweicai/cascade-rcnn" -> "zengarden/light_head_rcnn"
"zhaoweicai/cascade-rcnn" -> "msracver/Relation-Networks-for-Object-Detection"
"zhaoweicai/cascade-rcnn" -> "princeton-vl/CornerNet"
"zhaoweicai/cascade-rcnn" -> "mahyarnajibi/SNIPER"
"zhaoweicai/cascade-rcnn" -> "vacancy/PreciseRoIPooling"
"zhaoweicai/cascade-rcnn" -> "bharatsingh430/soft-nms"
"zhaoweicai/cascade-rcnn" -> "msracver/Deformable-ConvNets"
"zhaoweicai/cascade-rcnn" -> "qijiezhao/M2Det"
"zhaoweicai/cascade-rcnn" -> "Duankaiwen/CenterNet"
"zhaoweicai/cascade-rcnn" -> "tianzhi0549/FCOS"
"zhaoweicai/cascade-rcnn" -> "princeton-vl/CornerNet-Lite"
"NVlabs/FreeSOLO" -> "tfzhou/ProtoSeg" ["e"=1]
"NVlabs/FreeSOLO" -> "WXinlong/DenseCL"
"NVlabs/FreeSOLO" -> "facebookresearch/Generic-Grouping" ["e"=1]
"NVlabs/FreeSOLO" -> "YangtaoWANG95/TokenCut"
"NVlabs/FreeSOLO" -> "NVlabs/MinVIS" ["e"=1]
"yaroslavvb/tensorflow-community-wheels" -> "mind/wheels"
"yaroslavvb/tensorflow-community-wheels" -> "hadim/docker-tensorflow-builder"
"yaroslavvb/tensorflow-community-wheels" -> "davidenunes/tensorflow-wheels"
"yaroslavvb/tensorflow-community-wheels" -> "lakshayg/tensorflow-build"
"yaroslavvb/tensorflow-community-wheels" -> "inoryy/tensorflow-optimized-wheels"
"yaroslavvb/tensorflow-community-wheels" -> "mtianyan/tensorflow-linux-wheel"
"yaroslavvb/tensorflow-community-wheels" -> "aluo-x/tensorflow_windows"
"PINTO0309/tflite2tensorflow" -> "iwatake2222/play_with_tflite"
"PINTO0309/tflite2tensorflow" -> "PINTO0309/TensorflowLite-bin"
"PINTO0309/tflite2tensorflow" -> "terryky/tflite_gles_app"
"PINTO0309/tflite2tensorflow" -> "PINTO0309/openvino2tensorflow"
"openvinotoolkit/open_model_zoo" -> "openvinotoolkit/openvino"
"openvinotoolkit/open_model_zoo" -> "openvinotoolkit/openvino_notebooks"
"openvinotoolkit/open_model_zoo" -> "PINTO0309/PINTO_model_zoo"
"openvinotoolkit/open_model_zoo" -> "openvinotoolkit/training_extensions"
"openvinotoolkit/open_model_zoo" -> "openvinotoolkit/model_server"
"openvinotoolkit/open_model_zoo" -> "luxonis/depthai-experiments" ["e"=1]
"openvinotoolkit/open_model_zoo" -> "onnx/models"
"openvinotoolkit/open_model_zoo" -> "openvinotoolkit/nncf" ["e"=1]
"openvinotoolkit/open_model_zoo" -> "onnx/tensorflow-onnx"
"openvinotoolkit/open_model_zoo" -> "daquexian/onnx-simplifier"
"openvinotoolkit/open_model_zoo" -> "luxonis/depthai" ["e"=1]
"openvinotoolkit/open_model_zoo" -> "RangiLyu/nanodet"
"openvinotoolkit/open_model_zoo" -> "wang-xinyu/tensorrtx"
"openvinotoolkit/open_model_zoo" -> "PINTO0309/openvino2tensorflow"
"openvinotoolkit/open_model_zoo" -> "ifzhang/ByteTrack" ["e"=1]
"microsoft/onnxruntime-training-examples" -> "pytorch/ort"
"vahidk/tfrecord" -> "Lyken17/Efficient-PyTorch"
"vahidk/tfrecord" -> "podgorskiy/DareBlopy"
"vahidk/tfrecord" -> "pgmmpk/tfrecord"
"vahidk/tfrecord" -> "webdataset/webdataset" ["e"=1]
"vahidk/tfrecord" -> "NVIDIA/runx" ["e"=1]
"vahidk/tfrecord" -> "NVIDIA/DALI"
"vahidk/tfrecord" -> "tanglang96/DataLoaders_DALI"
"vahidk/tfrecord" -> "rwightman/gen-efficientnet-pytorch"
"dgurkaynak/tensorflow-cnn-finetune" -> "kratzert/finetune_alexnet_with_tensorflow"
"dgurkaynak/tensorflow-cnn-finetune" -> "dontfollowmeimcrazy/imagenet"
"dgurkaynak/tensorflow-cnn-finetune" -> "hjptriplebee/AlexNet_with_tensorflow"
"broadinstitute/keras-resnet" -> "raghakot/keras-resnet"
"broadinstitute/keras-resnet" -> "broadinstitute/keras-rcnn" ["e"=1]
"chainer/chainer" -> "chainer/chainercv"
"chainer/chainer" -> "cupy/cupy"
"chainer/chainer" -> "chainer/chainerrl" ["e"=1]
"chainer/chainer" -> "arXivTimes/arXivTimes" ["e"=1]
"chainer/chainer" -> "pfnet/optuna" ["e"=1]
"chainer/chainer" -> "clab/dynet" ["e"=1]
"chainer/chainer" -> "HIPS/autograd" ["e"=1]
"chainer/chainer" -> "onnx/onnx"
"chainer/chainer" -> "uber/horovod"
"chainer/chainer" -> "apache/incubator-mxnet"
"chainer/chainer" -> "sony/nnabla" ["e"=1]
"chainer/chainer" -> "dmlc/tvm" ["e"=1]
"chainer/chainer" -> "chainer-community/awesome-chainer" ["e"=1]
"chainer/chainer" -> "Theano/Theano" ["e"=1]
"chainer/chainer" -> "pfnet-research/chainer-gan-lib" ["e"=1]
"chainer/chainercv" -> "chainer/chainer"
"chainer/chainercv" -> "chenyuntc/simple-faster-rcnn-pytorch"
"chainer/chainercv" -> "ruotianluo/pytorch-faster-rcnn"
"chainer/chainercv" -> "chainer/chainerrl" ["e"=1]
"chainer/chainercv" -> "roytseng-tw/Detectron.pytorch"
"chainer/chainercv" -> "kuangliu/torchcv"
"chainer/chainercv" -> "mitmul/chainer-faster-rcnn" ["e"=1]
"chainer/chainercv" -> "amdegroot/ssd.pytorch"
"chainer/chainercv" -> "sfzhang15/RefineDet"
"chainer/chainercv" -> "chainer/chainerui" ["e"=1]
"chainer/chainercv" -> "longcw/faster_rcnn_pytorch"
"chainer/chainercv" -> "jwyang/fpn.pytorch"
"chainer/chainercv" -> "ignacio-rocco/detectorch"
"chainer/chainercv" -> "facebookresearch/maskrcnn-benchmark"
"chainer/chainercv" -> "pfnet/optuna" ["e"=1]
"rbgirshick/rcnn" -> "rbgirshick/fast-rcnn"
"rbgirshick/rcnn" -> "ShaoqingRen/faster_rcnn"
"rbgirshick/rcnn" -> "rbgirshick/py-faster-rcnn"
"rbgirshick/rcnn" -> "KaimingHe/deep-residual-networks"
"rbgirshick/rcnn" -> "weiliu89/caffe"
"rbgirshick/rcnn" -> "daijifeng001/R-FCN"
"rbgirshick/rcnn" -> "ShaoqingRen/SPP_net"
"rbgirshick/rcnn" -> "shelhamer/fcn.berkeleyvision.org"
"rbgirshick/rcnn" -> "facebook/fb.resnet.torch"
"rbgirshick/rcnn" -> "rasmusbergpalm/DeepLearnToolbox" ["e"=1]
"rbgirshick/rcnn" -> "CharlesShang/FastMaskRCNN"
"rbgirshick/rcnn" -> "soumith/convnet-benchmarks" ["e"=1]
"rbgirshick/rcnn" -> "endernewton/tf-faster-rcnn"
"rbgirshick/rcnn" -> "sermanet/OverFeat" ["e"=1]
"rbgirshick/rcnn" -> "torrvision/crfasrnn" ["e"=1]
"biometrics/openbr" -> "cmusatyalab/openface"
"biometrics/openbr" -> "seetaface/SeetaFaceEngine"
"biometrics/openbr" -> "bytefish/facerec" ["e"=1]
"biometrics/openbr" -> "liuliu/ccv" ["e"=1]
"biometrics/openbr" -> "TadasBaltrusaitis/OpenFace"
"biometrics/openbr" -> "RiweiChen/DeepFace" ["e"=1]
"biometrics/openbr" -> "Itseez/opencv" ["e"=1]
"biometrics/openbr" -> "TadasBaltrusaitis/CLM-framework" ["e"=1]
"biometrics/openbr" -> "kylemcdonald/FaceTracker" ["e"=1]
"biometrics/openbr" -> "ydwen/caffe-face" ["e"=1]
"biometrics/openbr" -> "bytefish/libfacerec" ["e"=1]
"biometrics/openbr" -> "kpzhang93/MTCNN_face_detection_alignment"
"biometrics/openbr" -> "davidsandberg/facenet"
"biometrics/openbr" -> "davisking/dlib"
"biometrics/openbr" -> "liuruoze/EasyPR" ["e"=1]
"emadboctorx/yolov3-keras-tf2" -> "maudzung/Complex-YOLOv4-Pytorch" ["e"=1]
"emadboctorx/yolov3-keras-tf2" -> "david8862/keras-YOLOv3-model-set"
"emadboctorx/yolov3-keras-tf2" -> "sicara/tf2-yolov4" ["e"=1]
"emadboctorx/yolov3-keras-tf2" -> "zzh8829/yolov3-tf2"
"emadboctorx/yolov3-keras-tf2" -> "Machine-Learning-Tokyo/CNN-Architectures" ["e"=1]
"emadboctorx/yolov3-keras-tf2" -> "experiencor/keras-yolo3"
"emadboctorx/yolov3-keras-tf2" -> "hunglc007/tensorflow-yolov4-tflite"
"emadboctorx/yolov3-keras-tf2" -> "sayakpaul/TF-2.0-Hacks" ["e"=1]
"emadboctorx/yolov3-keras-tf2" -> "emadboctorx/labelpix"
"emadboctorx/yolov3-keras-tf2" -> "keras-team/keras-cv" ["e"=1]
"emadboctorx/yolov3-keras-tf2" -> "karpathy/covid-sanity" ["e"=1]
"emadboctorx/yolov3-keras-tf2" -> "balavenkatesh3322/CV-pretrained-model" ["e"=1]
"emadboctorx/yolov3-keras-tf2" -> "qubvel/efficientnet"
"emadboctorx/yolov3-keras-tf2" -> "miemie2013/Keras-YOLOv4" ["e"=1]
"Captain1986/CaptainBlackboard" -> "pprp/SimpleCVReproduction" ["e"=1]
"Captain1986/CaptainBlackboard" -> "GYee/CV_interviews_Q-A" ["e"=1]
"Captain1986/CaptainBlackboard" -> "amusi/CVPR2020-Code"
"Captain1986/CaptainBlackboard" -> "ruinmessi/ASFF"
"Captain1986/CaptainBlackboard" -> "ming71/CV_PaperDaily"
"Captain1986/CaptainBlackboard" -> "ahong007007/awesomeCV"
"Captain1986/CaptainBlackboard" -> "princeton-vl/CornerNet"
"Captain1986/CaptainBlackboard" -> "kuanhungchen/awesome-tiny-object-detection"
"Captain1986/CaptainBlackboard" -> "amusi/awesome-object-detection"
"Captain1986/CaptainBlackboard" -> "WongKinYiu/PyTorch_YOLOv4"
"Captain1986/CaptainBlackboard" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"Captain1986/CaptainBlackboard" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"Captain1986/CaptainBlackboard" -> "yizt/Grad-CAM.pytorch" ["e"=1]
"Captain1986/CaptainBlackboard" -> "amusi/AI-Job-Notes" ["e"=1]
"Captain1986/CaptainBlackboard" -> "lcylmhlcy/Awesome-algorithm-interview" ["e"=1]
"ChenYingpeng/darknet2caffe" -> "ChenYingpeng/caffe-yolov3"
"ChenYingpeng/darknet2caffe" -> "eric612/Caffe-YOLOv3-Windows"
"ChenYingpeng/darknet2caffe" -> "yangfei963158659/nnie" ["e"=1]
"ChenYingpeng/darknet2caffe" -> "hanson-young/nniefacelib" ["e"=1]
"ChenYingpeng/darknet2caffe" -> "eric612/MobileNet-YOLO"
"ChenYingpeng/darknet2caffe" -> "xxradon/PytorchToCaffe"
"Microsoft/ELL" -> "DT42/BerryNet"
"Microsoft/ELL" -> "samjabrahams/tensorflow-on-raspberry-pi"
"Microsoft/ELL" -> "Microsoft/EdgeML"
"Microsoft/ELL" -> "sony/nnabla" ["e"=1]
"Microsoft/ELL" -> "google/gemmlowp" ["e"=1]
"Microsoft/ELL" -> "caffe2/caffe2" ["e"=1]
"Microsoft/ELL" -> "Maratyszcza/NNPACK" ["e"=1]
"Microsoft/ELL" -> "ARM-software/ComputeLibrary" ["e"=1]
"Microsoft/ELL" -> "DeepScale/SqueezeNet"
"Microsoft/ELL" -> "baidu-research/DeepBench" ["e"=1]
"Microsoft/ELL" -> "Microsoft/AirSim" ["e"=1]
"Microsoft/ELL" -> "dmlc/nnvm" ["e"=1]
"Microsoft/ELL" -> "neil-tan/uTensor"
"Microsoft/ELL" -> "tiny-dnn/tiny-dnn" ["e"=1]
"Microsoft/ELL" -> "Microsoft/CNTK" ["e"=1]
"Peterisfar/YOLOV3" -> "wlguan/Stronger-yolo-pytorch"
"Peterisfar/YOLOV3" -> "yjh0410/yolov2-yolov3_PyTorch" ["e"=1]
"Peterisfar/YOLOV3" -> "ruinmessi/ASFF"
"Peterisfar/YOLOV3" -> "vaesl/LRF-Net"
"Peterisfar/YOLOV3" -> "DeNA/PyTorch_YOLOv3"
"tryolabs/luminoth" -> "smallcorgi/Faster-RCNN_TF"
"tryolabs/luminoth" -> "endernewton/tf-faster-rcnn"
"tryolabs/luminoth" -> "rbgirshick/py-faster-rcnn"
"tryolabs/luminoth" -> "allanzelener/YAD2K"
"tryolabs/luminoth" -> "balancap/SSD-Tensorflow"
"tryolabs/luminoth" -> "CharlesShang/FastMaskRCNN"
"tryolabs/luminoth" -> "CharlesShang/TFFRCNN"
"tryolabs/luminoth" -> "thtrieu/darkflow"
"tryolabs/luminoth" -> "deepmind/sonnet" ["e"=1]
"tryolabs/luminoth" -> "uber/horovod"
"tryolabs/luminoth" -> "chainer/chainercv"
"tryolabs/luminoth" -> "fizyr/keras-retinanet"
"tryolabs/luminoth" -> "facebookresearch/Detectron"
"tryolabs/luminoth" -> "openimages/dataset"
"tryolabs/luminoth" -> "jhfjhfj1/autokeras" ["e"=1]
"zzh8829/yolov3-tf2" -> "YunYang1994/tensorflow-yolov3"
"zzh8829/yolov3-tf2" -> "hunglc007/tensorflow-yolov4-tflite"
"zzh8829/yolov3-tf2" -> "YunYang1994/TensorFlow2.0-Examples"
"zzh8829/yolov3-tf2" -> "qqwweee/keras-yolo3"
"zzh8829/yolov3-tf2" -> "wizyoung/YOLOv3_TensorFlow"
"zzh8829/yolov3-tf2" -> "experiencor/keras-yolo3"
"zzh8829/yolov3-tf2" -> "microsoft/VoTT"
"zzh8829/yolov3-tf2" -> "ultralytics/yolov3"
"zzh8829/yolov3-tf2" -> "pythonlessons/TensorFlow-2.x-YOLOv3" ["e"=1]
"zzh8829/yolov3-tf2" -> "google/automl"
"zzh8829/yolov3-tf2" -> "david8862/keras-YOLOv3-model-set"
"zzh8829/yolov3-tf2" -> "fizyr/keras-retinanet"
"zzh8829/yolov3-tf2" -> "allanzelener/YAD2K"
"zzh8829/yolov3-tf2" -> "thtrieu/darkflow"
"zzh8829/yolov3-tf2" -> "Tianxiaomo/pytorch-YOLOv4"
"triple-Mu/YOLOv8-TensorRT" -> "Linaom1214/TensorRT-For-YOLO-Series"
"triple-Mu/YOLOv8-TensorRT" -> "shouxieai/infer"
"triple-Mu/YOLOv8-TensorRT" -> "FeiYull/tensorrt-alpha"
"triple-Mu/YOLOv8-TensorRT" -> "ultralytics/assets"
"triple-Mu/YOLOv8-TensorRT" -> "NVIDIA-AI-IOT/yolo_deepstream"
"triple-Mu/YOLOv8-TensorRT" -> "zhiqwang/yolov5-rt-stack"
"triple-Mu/YOLOv8-TensorRT" -> "DataXujing/YOLOv8"
"triple-Mu/YOLOv8-TensorRT" -> "Oneflow-Inc/one-yolov5" ["e"=1]
"triple-Mu/YOLOv8-TensorRT" -> "FeiYull/TensorRT-Alpha" ["e"=1]
"triple-Mu/YOLOv8-TensorRT" -> "FeiGeChuanShu/ncnn-android-yolov8" ["e"=1]
"triple-Mu/YOLOv8-TensorRT" -> "jizhishutong/YOLOU"
"triple-Mu/YOLOv8-TensorRT" -> "triple-Mu/YOLO-TensorRT8"
"triple-Mu/YOLOv8-TensorRT" -> "shouxieai/learning-cuda-trt"
"triple-Mu/YOLOv8-TensorRT" -> "open-mmlab/mmyolo"
"triple-Mu/YOLOv8-TensorRT" -> "Rex-LK/tensorrt_learning"
"fo40225/tensorflow-windows-wheel" -> "lakshayg/tensorflow-build"
"fo40225/tensorflow-windows-wheel" -> "qqwweee/keras-yolo3"
"fo40225/tensorflow-windows-wheel" -> "YunYang1994/tensorflow-yolov3"
"fo40225/tensorflow-windows-wheel" -> "mind/wheels"
"fo40225/tensorflow-windows-wheel" -> "czy36mengfei/tensorflow2_tutorials_chinese" ["e"=1]
"fo40225/tensorflow-windows-wheel" -> "eragonruan/text-detection-ctpn" ["e"=1]
"fo40225/tensorflow-windows-wheel" -> "tzutalin/labelImg"
"fo40225/tensorflow-windows-wheel" -> "fizyr/keras-retinanet"
"fo40225/tensorflow-windows-wheel" -> "lutzroeder/netron"
"fo40225/tensorflow-windows-wheel" -> "chineseocr/chineseocr" ["e"=1]
"fo40225/tensorflow-windows-wheel" -> "amusi/awesome-object-detection"
"fo40225/tensorflow-windows-wheel" -> "matterport/Mask_RCNN"
"fo40225/tensorflow-windows-wheel" -> "hoya012/deep_learning_object_detection"
"fo40225/tensorflow-windows-wheel" -> "zergtant/pytorch-handbook" ["e"=1]
"fo40225/tensorflow-windows-wheel" -> "hzy46/Deep-Learning-21-Examples" ["e"=1]
"ageitgey/face_recognition_models" -> "davisking/dlib-models"
"ageitgey/face_recognition_models" -> "ageitgey/dlib"
"ageitgey/face_recognition_models" -> "takuya-takeuchi/FaceRecognitionDotNet" ["e"=1]
"albumentations-team/albumentations_examples" -> "qubvel/ttach"
"albumentations-team/albumentations_examples" -> "albumentations-team/albumentations"
"albumentations-team/albumentations_examples" -> "ZFTurbo/Weighted-Boxes-Fusion"
"facebookresearch/FixRes" -> "clovaai/CutMix-PyTorch" ["e"=1]
"facebookresearch/FixRes" -> "rwightman/gen-efficientnet-pytorch"
"facebookresearch/FixRes" -> "lucidrains/lambda-networks"
"facebookresearch/FixRes" -> "zhanghang1989/ResNeSt"
"facebookresearch/FixRes" -> "lukemelas/EfficientNet-PyTorch"
"facebookresearch/FixRes" -> "kakaobrain/fast-autoaugment" ["e"=1]
"facebookresearch/FixRes" -> "facebookresearch/pycls"
"facebookresearch/FixRes" -> "google-research/noisystudent" ["e"=1]
"facebookresearch/FixRes" -> "szq0214/MEAL-V2" ["e"=1]
"facebookresearch/FixRes" -> "mrT23/TResNet" ["e"=1]
"facebookresearch/FixRes" -> "facebookresearch/ClassyVision"
"facebookresearch/FixRes" -> "facebookresearch/WSL-Images"
"facebookresearch/FixRes" -> "joe-siyuan-qiao/DetectoRS"
"facebookresearch/FixRes" -> "clovaai/assembled-cnn" ["e"=1]
"facebookresearch/FixRes" -> "facebookresearch/deit"
"liuzhuang13/DenseNet" -> "gpleiss/efficient_densenet_pytorch"
"liuzhuang13/DenseNet" -> "hujie-frank/SENet"
"liuzhuang13/DenseNet" -> "KaimingHe/deep-residual-networks"
"liuzhuang13/DenseNet" -> "msracver/Deformable-ConvNets"
"liuzhuang13/DenseNet" -> "facebook/fb.resnet.torch"
"liuzhuang13/DenseNet" -> "rbgirshick/py-faster-rcnn"
"liuzhuang13/DenseNet" -> "weiliu89/caffe"
"liuzhuang13/DenseNet" -> "YixuanLi/densenet-tensorflow"
"liuzhuang13/DenseNet" -> "CharlesShang/FastMaskRCNN"
"liuzhuang13/DenseNet" -> "facebookresearch/ResNeXt"
"liuzhuang13/DenseNet" -> "shelhamer/fcn.berkeleyvision.org"
"liuzhuang13/DenseNet" -> "flyyufelix/DenseNet-Keras"
"liuzhuang13/DenseNet" -> "rbgirshick/fast-rcnn"
"liuzhuang13/DenseNet" -> "facebookresearch/Detectron"
"liuzhuang13/DenseNet" -> "ppwwyyxx/tensorpack"
"uploadcare/pillow-simd" -> "NVIDIA/DALI"
"uploadcare/pillow-simd" -> "albu/albumentations"
"uploadcare/pillow-simd" -> "discordapp/lilliput" ["e"=1]
"uploadcare/pillow-simd" -> "NVIDIA/apex"
"uploadcare/pillow-simd" -> "pytorch/tnt"
"uploadcare/pillow-simd" -> "facebookresearch/pycls"
"uploadcare/pillow-simd" -> "mapillary/inplace_abn" ["e"=1]
"uploadcare/pillow-simd" -> "jettify/pytorch-optimizer"
"uploadcare/pillow-simd" -> "libffcv/ffcv"
"uploadcare/pillow-simd" -> "kornia/kornia"
"uploadcare/pillow-simd" -> "facebookresearch/visdom"
"uploadcare/pillow-simd" -> "cupy/cupy"
"uploadcare/pillow-simd" -> "jbohnslav/opencv_transforms"
"uploadcare/pillow-simd" -> "Lyken17/Efficient-PyTorch"
"uploadcare/pillow-simd" -> "pytorch/accimage"
"EdjeElectronics/OpenCV-Playing-Card-Detector" -> "geaxgx/playing-card-detection"
"EdjeElectronics/OpenCV-Playing-Card-Detector" -> "arnabdotorg/Playing-Card-Recognition"
"EdjeElectronics/OpenCV-Playing-Card-Detector" -> "EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi"
"EdjeElectronics/OpenCV-Playing-Card-Detector" -> "EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10"
"dvlab-research/Entity" -> "wjf5203/VNext" ["e"=1]
"dvlab-research/Entity" -> "hkchengrex/CascadePSP" ["e"=1]
"dvlab-research/Entity" -> "yoxu515/aot-benchmark" ["e"=1]
"dvlab-research/Entity" -> "tfzhou/ContrastiveSeg"
"dvlab-research/Entity" -> "facebookresearch/MaskFormer"
"dvlab-research/Entity" -> "isl-org/lang-seg" ["e"=1]
"dvlab-research/Entity" -> "dvlab-research/spconv-plus" ["e"=1]
"dvlab-research/Entity" -> "facebookresearch/Mask2Former"
"dvlab-research/Entity" -> "raoyongming/DenseCLIP" ["e"=1]
"davisking/dlib-models" -> "davisking/dlib"
"davisking/dlib-models" -> "ageitgey/face_recognition_models"
"davisking/dlib-models" -> "lincolnhard/head-pose-estimation" ["e"=1]
"davisking/dlib-models" -> "tzutalin/dlib-android" ["e"=1]
"davisking/dlib-models" -> "natanielruiz/deep-head-pose" ["e"=1]
"davisking/dlib-models" -> "TadasBaltrusaitis/OpenFace"
"davisking/dlib-models" -> "yinguobing/head-pose-estimation" ["e"=1]
"davisking/dlib-models" -> "mpatacchiola/deepgaze" ["e"=1]
"davisking/dlib-models" -> "kpzhang93/MTCNN_face_detection_alignment"
"davisking/dlib-models" -> "ipazc/mtcnn"
"davisking/dlib-models" -> "iwantooxxoox/Keras-OpenFace" ["e"=1]
"davisking/dlib-models" -> "jrosebr1/imutils"
"davisking/dlib-models" -> "rcmalli/keras-vggface" ["e"=1]
"davisking/dlib-models" -> "codeniko/shape_predictor_81_face_landmarks" ["e"=1]
"davisking/dlib-models" -> "yinguobing/cnn-facial-landmark" ["e"=1]
"pytorch/tnt" -> "lanpa/tensorboard-pytorch"
"pytorch/tnt" -> "pytorch/ignite"
"pytorch/tnt" -> "ncullen93/torchsample"
"pytorch/tnt" -> "facebookresearch/visdom"
"pytorch/tnt" -> "gram-ai/capsule-networks" ["e"=1]
"pytorch/tnt" -> "dnouri/skorch" ["e"=1]
"pytorch/tnt" -> "gpleiss/efficient_densenet_pytorch"
"pytorch/tnt" -> "torchnet/torchnet" ["e"=1]
"pytorch/tnt" -> "pytorch/text" ["e"=1]
"pytorch/tnt" -> "szagoruyko/attention-transfer" ["e"=1]
"pytorch/tnt" -> "sksq96/pytorch-summary"
"pytorch/tnt" -> "szagoruyko/functional-zoo"
"pytorch/tnt" -> "longcw/faster_rcnn_pytorch"
"pytorch/tnt" -> "williamFalcon/pytorch-lightning"
"pytorch/tnt" -> "torrvision/crayon"
"aaron-xichen/pytorch-playground" -> "kuangliu/pytorch-cifar"
"aaron-xichen/pytorch-playground" -> "weiaicunzai/pytorch-cifar100"
"aaron-xichen/pytorch-playground" -> "bearpaw/pytorch-classification"
"aaron-xichen/pytorch-playground" -> "NervanaSystems/distiller" ["e"=1]
"aaron-xichen/pytorch-playground" -> "Cadene/pretrained-models.pytorch"
"aaron-xichen/pytorch-playground" -> "longcw/faster_rcnn_pytorch"
"aaron-xichen/pytorch-playground" -> "hysts/pytorch_image_classification"
"aaron-xichen/pytorch-playground" -> "Lyken17/pytorch-OpCounter"
"aaron-xichen/pytorch-playground" -> "roytseng-tw/Detectron.pytorch"
"aaron-xichen/pytorch-playground" -> "gpleiss/efficient_densenet_pytorch"
"aaron-xichen/pytorch-playground" -> "jwyang/faster-rcnn.pytorch"
"aaron-xichen/pytorch-playground" -> "amdegroot/ssd.pytorch"
"aaron-xichen/pytorch-playground" -> "szagoruyko/attention-transfer" ["e"=1]
"aaron-xichen/pytorch-playground" -> "ruotianluo/pytorch-faster-rcnn"
"aaron-xichen/pytorch-playground" -> "longcw/yolo2-pytorch"
"anderskm/gputil" -> "wookayin/gpustat"
"anderskm/gputil" -> "sksq96/pytorch-summary"
"anderskm/gputil" -> "Stonesjtu/pytorch_memlab"
"anderskm/gputil" -> "uber/petastorm" ["e"=1]
"anderskm/gputil" -> "pytorch/ignite"
"anderskm/gputil" -> "Santosh-Gupta/SpeedTorch"
"Cartucho/OpenLabeling" -> "abreheret/PixelAnnotationTool"
"Cartucho/OpenLabeling" -> "AlexeyAB/Yolo_mark"
"Cartucho/OpenLabeling" -> "developer0hye/Yolo_Label"
"Cartucho/OpenLabeling" -> "ceccocats/tkDNN"
"Cartucho/OpenLabeling" -> "ivangrov/YOLOv3-Series"
"Cartucho/OpenLabeling" -> "cvhciKIT/sloth"
"Cartucho/OpenLabeling" -> "microsoft/VoTT"
"Cartucho/OpenLabeling" -> "Labelbox/Labelbox"
"Cartucho/OpenLabeling" -> "alexandre01/UltimateLabeling" ["e"=1]
"Cartucho/OpenLabeling" -> "bendidi/Tracking-with-darkflow" ["e"=1]
"Cartucho/OpenLabeling" -> "bit-bots/imagetagger"
"Cartucho/OpenLabeling" -> "Cartucho/mAP"
"Cartucho/OpenLabeling" -> "hunglc007/tensorflow-yolov4-tflite"
"Cartucho/OpenLabeling" -> "SkalskiP/make-sense"
"LitLeo/TensorRT_Tutorial" -> "NVIDIA/trt-samples-for-hackathon-cn"
"LitLeo/TensorRT_Tutorial" -> "zerollzeng/tiny-tensorrt"
"LitLeo/TensorRT_Tutorial" -> "dlunion/tensorRTIntegrate"
"LitLeo/TensorRT_Tutorial" -> "chenzhi1992/TensorRT-SSD" ["e"=1]
"LitLeo/TensorRT_Tutorial" -> "onnx/onnx-tensorrt"
"LitLeo/TensorRT_Tutorial" -> "Syencil/tensorRT"
"LitLeo/TensorRT_Tutorial" -> "Tencent/TPAT"
"LitLeo/TensorRT_Tutorial" -> "shouxieai/tensorRT_Pro"
"LitLeo/TensorRT_Tutorial" -> "CaoWGG/TensorRT-CenterNet"
"LitLeo/TensorRT_Tutorial" -> "linghu8812/tensorrt_inference"
"LitLeo/TensorRT_Tutorial" -> "shouxieai/learning-cuda-trt"
"LitLeo/TensorRT_Tutorial" -> "yonghenglh6/DepthwiseConvolution"
"LitLeo/TensorRT_Tutorial" -> "lewes6369/TensorRT-Yolov3" ["e"=1]
"LitLeo/TensorRT_Tutorial" -> "enazoe/yolo-tensorrt"
"LitLeo/TensorRT_Tutorial" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"NVIDIA/trt-samples-for-hackathon-cn" -> "Tencent/TPAT"
"NVIDIA/trt-samples-for-hackathon-cn" -> "shouxieai/tensorRT_Pro"
"NVIDIA/trt-samples-for-hackathon-cn" -> "shouxieai/learning-cuda-trt"
"NVIDIA/trt-samples-for-hackathon-cn" -> "LitLeo/TensorRT_Tutorial"
"NVIDIA/trt-samples-for-hackathon-cn" -> "openppl-public/ppq"
"NVIDIA/trt-samples-for-hackathon-cn" -> "zerollzeng/tiny-tensorrt"
"NVIDIA/trt-samples-for-hackathon-cn" -> "CVCUDA/CV-CUDA"
"NVIDIA/trt-samples-for-hackathon-cn" -> "onnx/onnx-tensorrt"
"NVIDIA/trt-samples-for-hackathon-cn" -> "NVIDIA/FasterTransformer" ["e"=1]
"NVIDIA/trt-samples-for-hackathon-cn" -> "TRT2022/MST-plus-plus-TensorRT"
"NVIDIA/trt-samples-for-hackathon-cn" -> "dingyuqing05/trt2022_wenet"
"NVIDIA/trt-samples-for-hackathon-cn" -> "wang-xinyu/tensorrtx"
"NVIDIA/trt-samples-for-hackathon-cn" -> "open-mmlab/mmdeploy"
"NVIDIA/trt-samples-for-hackathon-cn" -> "ZhangGe6/onnx-modifier"
"NVIDIA/trt-samples-for-hackathon-cn" -> "NVIDIA/TensorRT"
"zhaoweicai/mscnn" -> "xiaohaoChen/rrc_detection"
"zhaoweicai/mscnn" -> "zhangliliang/RPN_BF" ["e"=1]
"zhaoweicai/mscnn" -> "Orpine/py-R-FCN"
"zhaoweicai/mscnn" -> "sanghoon/pva-faster-rcnn"
"zhaoweicai/mscnn" -> "daijifeng001/R-FCN"
"zhaoweicai/mscnn" -> "abhi2610/ohem"
"zhaoweicai/mscnn" -> "bharatsingh430/Deformable-ConvNets"
"zhaoweicai/mscnn" -> "szq0214/DSOD"
"zhaoweicai/mscnn" -> "bharatsingh430/soft-nms"
"zhaoweicai/mscnn" -> "sciencefans/Focal-Loss"
"zhaoweicai/mscnn" -> "hengck23/didi-udacity-2017" ["e"=1]
"zhaoweicai/mscnn" -> "precedenceguo/mx-rcnn" ["e"=1]
"zhaoweicai/mscnn" -> "zhreshold/mxnet-ssd" ["e"=1]
"zhaoweicai/mscnn" -> "gidariss/mrcnn-object-detection" ["e"=1]
"zhaoweicai/mscnn" -> "xingwangsfu/caffe-yolo"
"Bjarten/early-stopping-pytorch" -> "ncullen93/torchsample"
"Bjarten/early-stopping-pytorch" -> "pytorch/ignite"
"Bjarten/early-stopping-pytorch" -> "skorch-dev/skorch"
"Bjarten/early-stopping-pytorch" -> "ufoym/imbalanced-dataset-sampler" ["e"=1]
"Bjarten/early-stopping-pytorch" -> "sksq96/pytorch-summary"
"Bjarten/early-stopping-pytorch" -> "davidtvs/pytorch-lr-finder"
"Bjarten/early-stopping-pytorch" -> "pytorch/captum"
"Bjarten/early-stopping-pytorch" -> "trent-b/iterative-stratification"
"Bjarten/early-stopping-pytorch" -> "tkipf/pygcn" ["e"=1]
"Bjarten/early-stopping-pytorch" -> "bentrevett/pytorch-seq2seq" ["e"=1]
"Bjarten/early-stopping-pytorch" -> "jadore801120/attention-is-all-you-need-pytorch" ["e"=1]
"Bjarten/early-stopping-pytorch" -> "jettify/pytorch-optimizer"
"Bjarten/early-stopping-pytorch" -> "shenweichen/DeepCTR-Torch" ["e"=1]
"Bjarten/early-stopping-pytorch" -> "facebookresearch/mixup-cifar10" ["e"=1]
"Bjarten/early-stopping-pytorch" -> "jacobgil/pytorch-grad-cam"
"wkentaro/gdown" -> "circulosmeos/gdown.pl"
"wkentaro/gdown" -> "huggingface/accelerate" ["e"=1]
"wkentaro/gdown" -> "google-research/arxiv-latex-cleaner" ["e"=1]
"wkentaro/gdown" -> "jbhuang0604/awesome-tips" ["e"=1]
"wkentaro/gdown" -> "kornia/kornia"
"wkentaro/gdown" -> "facebookresearch/fvcore"
"wkentaro/gdown" -> "arogozhnikov/einops"
"wkentaro/gdown" -> "prasmussen/gdrive" ["e"=1]
"wkentaro/gdown" -> "facebookresearch/hydra"
"wkentaro/gdown" -> "facebookresearch/ConvNeXt"
"wkentaro/gdown" -> "rom1504/img2dataset" ["e"=1]
"wkentaro/gdown" -> "NVIDIA/apex"
"wkentaro/gdown" -> "libffcv/ffcv"
"wkentaro/gdown" -> "facebookresearch/pytorch3d" ["e"=1]
"wkentaro/gdown" -> "yenchenlin/awesome-NeRF" ["e"=1]
"facebookresearch/moco-v3" -> "facebookresearch/moco"
"facebookresearch/moco-v3" -> "facebookresearch/simsiam"
"facebookresearch/moco-v3" -> "bytedance/ibot"
"facebookresearch/moco-v3" -> "facebookresearch/dino"
"facebookresearch/moco-v3" -> "facebookresearch/mae"
"facebookresearch/moco-v3" -> "facebookresearch/deit"
"facebookresearch/moco-v3" -> "SwinTransformer/Transformer-SSL"
"facebookresearch/moco-v3" -> "microsoft/SimMIM"
"facebookresearch/moco-v3" -> "facebookresearch/swav"
"facebookresearch/moco-v3" -> "facebookresearch/SLIP" ["e"=1]
"facebookresearch/moco-v3" -> "pengzhiliang/MAE-pytorch"
"facebookresearch/moco-v3" -> "WXinlong/DenseCL"
"facebookresearch/moco-v3" -> "lucidrains/byol-pytorch"
"facebookresearch/moco-v3" -> "google-research/simclr"
"facebookresearch/moco-v3" -> "microsoft/esvit"
"google-research/big_transfer" -> "facebookresearch/vissl"
"google-research/big_transfer" -> "google-research/simclr"
"google-research/big_transfer" -> "facebookresearch/swav"
"google-research/big_transfer" -> "facebookresearch/pycls"
"google-research/big_transfer" -> "facebookresearch/deit"
"google-research/big_transfer" -> "Alibaba-MIIL/ImageNet21K"
"google-research/big_transfer" -> "google-research/vision_transformer"
"google-research/big_transfer" -> "facebookresearch/moco"
"google-research/big_transfer" -> "facebookresearch/FixRes"
"google-research/big_transfer" -> "yitu-opensource/T2T-ViT"
"google-research/big_transfer" -> "HobbitLong/PyContrast"
"google-research/big_transfer" -> "facebookresearch/ClassyVision"
"google-research/big_transfer" -> "jeonsworld/ViT-pytorch"
"google-research/big_transfer" -> "szq0214/MEAL-V2" ["e"=1]
"google-research/big_transfer" -> "open-mmlab/OpenSelfSup"
"extreme-assistant/iccv2019" -> "extreme-assistant/cvpr2019"
"extreme-assistant/iccv2019" -> "Sophia-11/Awesome-ICCV2019"
"extreme-assistant/iccv2019" -> "amusi/CVPR2020-Code"
"extreme-assistant/iccv2019" -> "extreme-assistant/CVPR2020-Paper-Code-Interpretation"
"extreme-assistant/iccv2019" -> "amusi/ECCV2020-Code"
"extreme-assistant/iccv2019" -> "zjhuang22/maskscoring_rcnn"
"extreme-assistant/iccv2019" -> "hoya012/CVPR-2019-Paper-Statistics"
"extreme-assistant/iccv2019" -> "tianzhi0549/FCOS"
"extreme-assistant/iccv2019" -> "ruinmessi/RFBNet"
"extreme-assistant/iccv2019" -> "extreme-assistant/cvpr2020"
"extreme-assistant/iccv2019" -> "amusi/daily-paper-computer-vision"
"extreme-assistant/iccv2019" -> "XiaLiPKU/EMANet" ["e"=1]
"extreme-assistant/iccv2019" -> "facebookresearch/video-nonlocal-net" ["e"=1]
"extreme-assistant/iccv2019" -> "speedinghzl/CCNet" ["e"=1]
"extreme-assistant/iccv2019" -> "xvjiarui/GCNet" ["e"=1]
"pytorch/ios-demo-app" -> "pytorch/android-demo-app"
"pytorch/ios-demo-app" -> "onnx/onnx-coreml" ["e"=1]
"xxradon/PytorchToCaffe" -> "longcw/pytorch2caffe"
"xxradon/PytorchToCaffe" -> "MTlab/onnx2caffe"
"xxradon/PytorchToCaffe" -> "hahnyuan/nn_tools"
"xxradon/PytorchToCaffe" -> "starimeL/PytorchConverter"
"xxradon/PytorchToCaffe" -> "inisis/brocolli"
"xxradon/PytorchToCaffe" -> "marvis/pytorch-caffe-darknet-convert"
"xxradon/PytorchToCaffe" -> "xxradon/ONNXToCaffe"
"xxradon/PytorchToCaffe" -> "eric612/MobileNet-YOLO"
"xxradon/PytorchToCaffe" -> "ChenYingpeng/caffe-yolov3"
"xxradon/PytorchToCaffe" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"xxradon/PytorchToCaffe" -> "hanson-young/nniefacelib" ["e"=1]
"xxradon/PytorchToCaffe" -> "daquexian/onnx-simplifier"
"xxradon/PytorchToCaffe" -> "miaow1988/ShuffleNet_V2_pytorch_caffe"
"xxradon/PytorchToCaffe" -> "aovoc/nnieqat-pytorch" ["e"=1]
"xxradon/PytorchToCaffe" -> "biubug6/Face-Detector-1MB-with-landmark" ["e"=1]
"arraiyopensource/kornia" -> "joe-siyuan-qiao/WeightStandardization"
"arraiyopensource/kornia" -> "shrubb/box-convolutions" ["e"=1]
"arraiyopensource/kornia" -> "williamFalcon/pytorch-lightning"
"arraiyopensource/kornia" -> "jonbarron/robust_loss_pytorch"
"arraiyopensource/kornia" -> "adobe/antialiased-cnns"
"arraiyopensource/kornia" -> "lvis-dataset/lvis-api" ["e"=1]
"arraiyopensource/kornia" -> "NVIDIAGameWorks/kaolin" ["e"=1]
"arraiyopensource/kornia" -> "albu/albumentations"
"arraiyopensource/kornia" -> "naver/r2d2" ["e"=1]
"arraiyopensource/kornia" -> "Santosh-Gupta/SpeedTorch"
"arraiyopensource/kornia" -> "daniilidis-group/neural_renderer" ["e"=1]
"arraiyopensource/kornia" -> "MisaOgura/flashtorch" ["e"=1]
"arraiyopensource/kornia" -> "achaiah/pywick" ["e"=1]
"mlss-2019/tutorials" -> "mlss-2019/slides"
"extreme-assistant/survey-computer-vision" -> "extreme-assistant/Awesome-CV-Team"
"extreme-assistant/survey-computer-vision" -> "extreme-assistant/CVPR2021-Paper-Code-Interpretation"
"extreme-assistant/survey-computer-vision" -> "jeya-maria-jose/Medical-Transformer" ["e"=1]
"extreme-assistant/survey-computer-vision" -> "luwill/Semantic-Segmentation-Guide" ["e"=1]
"TommyZihao/MMGeneration_Tutorials" -> "open-mmlab/mmgeneration"
"xternalz/WideResNet-pytorch" -> "meliketoy/wide-resnet.pytorch"
"xternalz/WideResNet-pytorch" -> "szagoruyko/wide-residual-networks"
"PyTorchLightning/lightning-flash" -> "PyTorchLightning/metrics"
"PyTorchLightning/lightning-flash" -> "PyTorchLightning/lightning-transformers"
"PyTorchLightning/lightning-flash" -> "PyTorchLightning/lightning-bolts"
"PyTorchLightning/lightning-flash" -> "PyTorchLightning/pytorch-lightning-bolts"
"PyTorchLightning/lightning-flash" -> "PyTorchLightning/deep-learning-project-template"
"PyTorchLightning/lightning-flash" -> "airctic/icevision" ["e"=1]
"PyTorchLightning/lightning-flash" -> "ashleve/lightning-hydra-template"
"PyTorchLightning/lightning-flash" -> "lightly-ai/lightly"
"PyTorchLightning/lightning-flash" -> "pytorch/data" ["e"=1]
"PyTorchLightning/lightning-flash" -> "PyTorchLightning/pytorch-lightning"
"PyTorchLightning/lightning-flash" -> "maiot-io/zenml" ["e"=1]
"PyTorchLightning/lightning-flash" -> "patrick-kidger/torchtyping"
"PyTorchLightning/lightning-flash" -> "facebookresearch/fairscale" ["e"=1]
"PyTorchLightning/lightning-flash" -> "catalyst-team/catalyst"
"PyTorchLightning/lightning-flash" -> "manujosephv/pytorch_tabular" ["e"=1]
"joe-siyuan-qiao/DetectoRS" -> "zhanghang1989/ResNeSt"
"joe-siyuan-qiao/DetectoRS" -> "Sense-X/TSD"
"joe-siyuan-qiao/DetectoRS" -> "sfzhang15/ATSS"
"joe-siyuan-qiao/DetectoRS" -> "zhanghang1989/detectron2-ResNeSt"
"joe-siyuan-qiao/DetectoRS" -> "WongKinYiu/ScaledYOLOv4"
"joe-siyuan-qiao/DetectoRS" -> "implus/GFocal"
"joe-siyuan-qiao/DetectoRS" -> "PeizeSun/SparseR-CNN"
"joe-siyuan-qiao/DetectoRS" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"joe-siyuan-qiao/DetectoRS" -> "Megvii-BaseDetection/BorderDet"
"joe-siyuan-qiao/DetectoRS" -> "PKUbahuangliuhe/CBNet"
"joe-siyuan-qiao/DetectoRS" -> "ruinmessi/ASFF"
"joe-siyuan-qiao/DetectoRS" -> "aim-uofa/AdelaiDet"
"joe-siyuan-qiao/DetectoRS" -> "xingyizhou/CenterNet2"
"joe-siyuan-qiao/DetectoRS" -> "toandaominh1997/EfficientDet.Pytorch"
"joe-siyuan-qiao/DetectoRS" -> "WXinlong/SOLO"
"knhngchn/awesome-tiny-object-detection" -> "ispc-lab/SmallObjectDetectionList"
"knhngchn/awesome-tiny-object-detection" -> "Icecream-blue-sky/Past-and-present-small-object-detection"
"BloodAxe/pytorch-toolbelt" -> "qubvel/ttach"
"BloodAxe/pytorch-toolbelt" -> "catalyst-team/catalyst"
"BloodAxe/pytorch-toolbelt" -> "qubvel/segmentation_models.pytorch"
"BloodAxe/pytorch-toolbelt" -> "albu/albumentations"
"BloodAxe/pytorch-toolbelt" -> "ZFTurbo/Weighted-Boxes-Fusion"
"BloodAxe/pytorch-toolbelt" -> "jettify/pytorch-optimizer"
"BloodAxe/pytorch-toolbelt" -> "trent-b/iterative-stratification"
"BloodAxe/pytorch-toolbelt" -> "osmr/imgclsmob"
"BloodAxe/pytorch-toolbelt" -> "JunMa11/SegLoss" ["e"=1]
"BloodAxe/pytorch-toolbelt" -> "rwightman/gen-efficientnet-pytorch"
"BloodAxe/pytorch-toolbelt" -> "rwightman/efficientdet-pytorch"
"BloodAxe/pytorch-toolbelt" -> "amirassov/kaggle-imaterialist" ["e"=1]
"BloodAxe/pytorch-toolbelt" -> "ybabakhin/kaggle_salt_bes_phalanx" ["e"=1]
"BloodAxe/pytorch-toolbelt" -> "mapillary/inplace_abn" ["e"=1]
"BloodAxe/pytorch-toolbelt" -> "qubvel/segmentation_models"
"xiaochus/YOLOv3" -> "experiencor/keras-yolo3"
"xiaochus/YOLOv3" -> "SpikeKing/keras-yolo3-detection"
"xiaochus/YOLOv3" -> "qqwweee/keras-yolo3"
"xiaochus/YOLOv3" -> "IronMastiff/YOLOv3_tensorflow"
"xiaochus/YOLOv3" -> "allanzelener/YAD2K"
"xiaochus/YOLOv3" -> "mystic123/tensorflow-yolo-v3"
"xiaochus/YOLOv3" -> "Adamdad/keras-YOLOv3-mobilenet"
"xiaochus/YOLOv3" -> "maiminh1996/YOLOv3-tensorflow"
"xiaochus/YOLOv3" -> "experiencor/keras-yolo2"
"xiaochus/YOLOv3" -> "jinfagang/keras_frcnn"
"xiaochus/YOLOv3" -> "ayooshkathuria/pytorch-yolo-v3"
"xiaochus/YOLOv3" -> "yhcc/yolo2"
"xiaochus/YOLOv3" -> "pierluigiferrari/ssd_keras"
"xiaochus/YOLOv3" -> "wizyoung/YOLOv3_TensorFlow"
"xiaochus/YOLOv3" -> "YunYang1994/tensorflow-yolov3"
"lucidrains/axial-attention" -> "csrhddlam/axial-deeplab"
"calmisential/Basic_CNNs_TensorFlow2" -> "calmisential/TensorFlow2.0_ResNet"
"calmisential/Basic_CNNs_TensorFlow2" -> "calmisential/MobileNetV3_TensorFlow2"
"calmisential/Basic_CNNs_TensorFlow2" -> "calmisential/TensorFlow2.0_SSD" ["e"=1]
"calmisential/Basic_CNNs_TensorFlow2" -> "YunYang1994/TensorFlow2.0-Examples"
"calmisential/Basic_CNNs_TensorFlow2" -> "calmisential/EfficientNet_TensorFlow2"
"calmisential/Basic_CNNs_TensorFlow2" -> "Apm5/ImageNet_ResNet_Tensorflow2.0"
"calmisential/Basic_CNNs_TensorFlow2" -> "calmisential/YOLOv3_TensorFlow2" ["e"=1]
"calmisential/Basic_CNNs_TensorFlow2" -> "taki0112/SENet-Tensorflow"
"calmisential/Basic_CNNs_TensorFlow2" -> "xuannianz/EfficientDet"
"calmisential/Basic_CNNs_TensorFlow2" -> "hunglc007/tensorflow-yolov4-tflite"
"calmisential/Basic_CNNs_TensorFlow2" -> "Keyird/DeepLearning-TensorFlow2"
"calmisential/Basic_CNNs_TensorFlow2" -> "calmisential/TensorFlow2.0_Image_Classification"
"calmisential/Basic_CNNs_TensorFlow2" -> "Byronnar/tensorflow-serving-yolov3"
"calmisential/Basic_CNNs_TensorFlow2" -> "YunYang1994/tensorflow-yolov3"
"calmisential/Basic_CNNs_TensorFlow2" -> "wizyoung/YOLOv3_TensorFlow"
"gliese581gg/YOLO_tensorflow" -> "nilboy/tensorflow-yolo"
"gliese581gg/YOLO_tensorflow" -> "hizhangp/yolo_tensorflow"
"gliese581gg/YOLO_tensorflow" -> "balancap/SSD-Tensorflow"
"gliese581gg/YOLO_tensorflow" -> "smallcorgi/Faster-RCNN_TF"
"gliese581gg/YOLO_tensorflow" -> "thtrieu/darkflow"
"gliese581gg/YOLO_tensorflow" -> "endernewton/tf-faster-rcnn"
"gliese581gg/YOLO_tensorflow" -> "longcw/yolo2-pytorch"
"gliese581gg/YOLO_tensorflow" -> "ethereon/caffe-tensorflow"
"gliese581gg/YOLO_tensorflow" -> "xiaohu2015/DeepLearning_tutorials"
"gliese581gg/YOLO_tensorflow" -> "weiliu89/caffe"
"gliese581gg/YOLO_tensorflow" -> "allanzelener/YAD2K"
"gliese581gg/YOLO_tensorflow" -> "CharlesShang/FastMaskRCNN"
"gliese581gg/YOLO_tensorflow" -> "CharlesShang/TFFRCNN"
"gliese581gg/YOLO_tensorflow" -> "rbgirshick/fast-rcnn"
"gliese581gg/YOLO_tensorflow" -> "qqwweee/keras-yolo3"
"ijkguo/mx-rcnn" -> "xiaohaoChen/rrc_detection"
"ijkguo/mx-rcnn" -> "zhreshold/mxnet-ssd" ["e"=1]
"datitran/object_detector_app" -> "datitran/raccoon_dataset"
"datitran/object_detector_app" -> "lbeaucourt/Object-detection" ["e"=1]
"datitran/object_detector_app" -> "christopher5106/FastAnnotationTool"
"datitran/object_detector_app" -> "EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10"
"datitran/object_detector_app" -> "shanren7/real_time_face_recognition" ["e"=1]
"datitran/object_detector_app" -> "Russell91/TensorBox"
"datitran/object_detector_app" -> "balancap/SSD-Tensorflow"
"datitran/object_detector_app" -> "priya-dwivedi/Deep-Learning"
"datitran/object_detector_app" -> "GustavZ/realtime_object_detection" ["e"=1]
"datitran/object_detector_app" -> "GoogleCloudPlatform/tensorflow-object-detection-example"
"datitran/object_detector_app" -> "thtrieu/darkflow"
"datitran/object_detector_app" -> "DrewNF/Tensorflow_Object_Tracking_Video"
"datitran/object_detector_app" -> "llSourcell/YOLO_Object_Detection"
"datitran/object_detector_app" -> "gliese581gg/YOLO_tensorflow"
"datitran/object_detector_app" -> "schumanzhang/object_detection_real_time"
"ContrastiveSR/Contrastive_Learning_Papers" -> "coder-duibai/Contrastive-Learning-Papers-Codes" ["e"=1]
"ContrastiveSR/Contrastive_Learning_Papers" -> "asheeshcric/awesome-contrastive-self-supervised-learning"
"ContrastiveSR/Contrastive_Learning_Papers" -> "Shen-Lab/GraphCL" ["e"=1]
"ContrastiveSR/Contrastive_Learning_Papers" -> "joshr17/HCL"
"taki0112/Densenet-Tensorflow" -> "YixuanLi/densenet-tensorflow"
"taki0112/Densenet-Tensorflow" -> "taki0112/ResNeXt-Tensorflow"
"taki0112/Densenet-Tensorflow" -> "ikhlestov/vision_networks"
"taki0112/Densenet-Tensorflow" -> "taki0112/SENet-Tensorflow"
"taki0112/Densenet-Tensorflow" -> "pudae/tensorflow-densenet"
"taki0112/Densenet-Tensorflow" -> "flyyufelix/DenseNet-Keras"
"taki0112/Densenet-Tensorflow" -> "LaurentMazare/deep-models"
"taki0112/Densenet-Tensorflow" -> "titu1994/DenseNet"
"taki0112/Densenet-Tensorflow" -> "liuzhuang13/DenseNet"
"taki0112/Densenet-Tensorflow" -> "taki0112/ResNet-Tensorflow"
"taki0112/Densenet-Tensorflow" -> "yeephycho/densenet-tensorflow"
"taki0112/Densenet-Tensorflow" -> "wenxinxu/resnet-in-tensorflow"
"taki0112/Densenet-Tensorflow" -> "arashno/tensorflow_multigpu_imagenet"
"taki0112/Densenet-Tensorflow" -> "andreasveit/densenet-pytorch"
"taki0112/Densenet-Tensorflow" -> "MG2033/ShuffleNet"
"taki0112/ResNeXt-Tensorflow" -> "wenxinxu/ResNeXt-in-tensorflow"
"taki0112/ResNeXt-Tensorflow" -> "taki0112/Densenet-Tensorflow"
"taki0112/ResNeXt-Tensorflow" -> "taki0112/SENet-Tensorflow"
"taki0112/ResNeXt-Tensorflow" -> "taki0112/ResNet-Tensorflow"
"taki0112/ResNet-Tensorflow" -> "taki0112/ResNeXt-Tensorflow"
"taki0112/ResNet-Tensorflow" -> "taki0112/SENet-Tensorflow"
"taki0112/ResNet-Tensorflow" -> "dalgu90/resnet-18-tensorflow"
"taki0112/ResNet-Tensorflow" -> "taki0112/Densenet-Tensorflow"
"lufficc/SSD" -> "amdegroot/ssd.pytorch"
"lufficc/SSD" -> "lzx1413/PytorchSSD"
"lufficc/SSD" -> "qfgaohao/pytorch-ssd"
"lufficc/SSD" -> "ruinmessi/RFBNet"
"lufficc/SSD" -> "yhenon/pytorch-retinanet"
"lufficc/SSD" -> "ShuangXieIrene/ssds.pytorch"
"lufficc/SSD" -> "tianzhi0549/FCOS"
"lufficc/SSD" -> "ruinmessi/ASFF"
"lufficc/SSD" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"lufficc/SSD" -> "jwyang/faster-rcnn.pytorch"
"lufficc/SSD" -> "sgrvinod/a-PyTorch-Tutorial-to-Object-Detection"
"lufficc/SSD" -> "eriklindernoren/PyTorch-YOLOv3"
"lufficc/SSD" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"lufficc/SSD" -> "qijiezhao/M2Det"
"lufficc/SSD" -> "princeton-vl/CornerNet"
"yizt/cv-papers" -> "SnailTyan/deep-learning-papers-translation"
"yizt/cv-papers" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"yizt/cv-papers" -> "zeusees/HyperDL-Tutorial" ["e"=1]
"yizt/cv-papers" -> "amusi/daily-paper-computer-vision"
"yizt/cv-papers" -> "xiaofengShi/CHINESE-OCR" ["e"=1]
"yizt/cv-papers" -> "czla/daily-paper-visual-tracking" ["e"=1]
"yizt/cv-papers" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"yizt/cv-papers" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"yizt/cv-papers" -> "princeton-vl/CornerNet-Lite"
"yizt/cv-papers" -> "ruinmessi/RFBNet"
"yizt/cv-papers" -> "amusi/awesome-object-detection"
"yizt/cv-papers" -> "HarleysZhang/2019_algorithm_intern_information" ["e"=1]
"yizt/cv-papers" -> "jiangxiluning/FOTS.PyTorch" ["e"=1]
"yizt/cv-papers" -> "YCG09/chinese_ocr" ["e"=1]
"yizt/cv-papers" -> "zhengzhugithub/CV-arXiv-Daily" ["e"=1]
"extreme-assistant/survey-computer-vision-2020" -> "extreme-assistant/survey-computer-vision-2021"
"BIGBALLON/cifar-10-cnn" -> "persistforever/cifar10-tensorflow"
"BIGBALLON/cifar-10-cnn" -> "BIGBALLON/CIFAR-ZOO"
"BIGBALLON/cifar-10-cnn" -> "wenxinxu/resnet-in-tensorflow"
"BIGBALLON/cifar-10-cnn" -> "kuangliu/pytorch-cifar"
"BIGBALLON/cifar-10-cnn" -> "bearpaw/pytorch-classification"
"BIGBALLON/cifar-10-cnn" -> "machrisaa/tensorflow-vgg"
"BIGBALLON/cifar-10-cnn" -> "aaron-xichen/pytorch-playground"
"BIGBALLON/cifar-10-cnn" -> "junyuseu/pytorch-cifar-models"
"BIGBALLON/cifar-10-cnn" -> "carlini/nn_robust_attacks" ["e"=1]
"BIGBALLON/cifar-10-cnn" -> "yhlleo/tensorflow.cifar10"
"BIGBALLON/cifar-10-cnn" -> "geifmany/cifar-vgg"
"BIGBALLON/cifar-10-cnn" -> "senlinuc/caffe_ocr" ["e"=1]
"BIGBALLON/cifar-10-cnn" -> "liuzhuang13/DenseNet"
"BIGBALLON/cifar-10-cnn" -> "taki0112/SENet-Tensorflow"
"BIGBALLON/cifar-10-cnn" -> "BIGBALLON/Deep-learning-and-practices"
"PKUbahuangliuhe/CBNet" -> "VDIGPKU/CBNet"
"PKUbahuangliuhe/CBNet" -> "joe-siyuan-qiao/DetectoRS"
"PKUbahuangliuhe/CBNet" -> "sfzhang15/ATSS"
"PKUbahuangliuhe/CBNet" -> "zhangxiaosong18/FreeAnchor"
"PKUbahuangliuhe/CBNet" -> "toandaominh1997/EfficientDet.Pytorch"
"PKUbahuangliuhe/CBNet" -> "zhaoweicai/Detectron-Cascade-RCNN"
"PKUbahuangliuhe/CBNet" -> "implus/GFocalV2"
"PKUbahuangliuhe/CBNet" -> "GothicAi/Instaboost"
"PKUbahuangliuhe/CBNet" -> "arashwan/matrixnet"
"PKUbahuangliuhe/CBNet" -> "OceanPang/Libra_R-CNN"
"PKUbahuangliuhe/CBNet" -> "Sense-X/TSD"
"PKUbahuangliuhe/CBNet" -> "ZJULearning/ttfnet"
"PKUbahuangliuhe/CBNet" -> "xingyizhou/ExtremeNet"
"PKUbahuangliuhe/CBNet" -> "HRNet/HRNet-Object-Detection" ["e"=1]
"GeeshangXu/mask-rcnn-pytorch" -> "roytseng-tw/mask-rcnn.pytorch"
"leimao/ONNX-Runtime-Inference" -> "xmba15/onnx_runtime_cpp"
"leimao/ONNX-Runtime-Inference" -> "microsoft/onnxruntime-inference-examples"
"libuyu/GHM_Detection" -> "yihui-he/KL-Loss"
"libuyu/GHM_Detection" -> "vacancy/PreciseRoIPooling"
"libuyu/GHM_Detection" -> "ruinmessi/RFBNet"
"libuyu/GHM_Detection" -> "Duankaiwen/CenterNet"
"libuyu/GHM_Detection" -> "sfzhang15/ATSS"
"libuyu/GHM_Detection" -> "xingyizhou/ExtremeNet"
"libuyu/GHM_Detection" -> "zhaoweicai/cascade-rcnn"
"libuyu/GHM_Detection" -> "princeton-vl/CornerNet-Lite"
"libuyu/GHM_Detection" -> "lzx1413/PytorchSSD"
"libuyu/GHM_Detection" -> "TuSimple/simpledet"
"libuyu/GHM_Detection" -> "sfzhang15/RefineDet"
"libuyu/GHM_Detection" -> "ruinmessi/ASFF"
"libuyu/GHM_Detection" -> "qijiezhao/M2Det"
"libuyu/GHM_Detection" -> "tianzhi0549/FCOS"
"libuyu/GHM_Detection" -> "unsky/focal-loss"
"wannabeOG/Mask-RCNN" -> "multimodallearning/pytorch-mask-rcnn"
"wannabeOG/Mask-RCNN" -> "roytseng-tw/Detectron.pytorch"
"wannabeOG/Mask-RCNN" -> "soeaver/Pytorch_Mask_RCNN"
"wannabeOG/Mask-RCNN" -> "facebookresearch/maskrcnn-benchmark"
"wannabeOG/Mask-RCNN" -> "ruotianluo/pytorch-faster-rcnn"
"wannabeOG/Mask-RCNN" -> "longcw/RoIAlign.pytorch"
"wannabeOG/Mask-RCNN" -> "zjhuang22/maskscoring_rcnn"
"wannabeOG/Mask-RCNN" -> "longcw/faster_rcnn_pytorch"
"wannabeOG/Mask-RCNN" -> "Okery/PyTorch-Simple-MaskRCNN"
"wannabeOG/Mask-RCNN" -> "jwyang/fpn.pytorch"
"wannabeOG/Mask-RCNN" -> "chenyuntc/simple-faster-rcnn-pytorch"
"wannabeOG/Mask-RCNN" -> "yhenon/pytorch-retinanet"
"wannabeOG/Mask-RCNN" -> "jytime/Mask_RCNN_Pytorch"
"wannabeOG/Mask-RCNN" -> "jwyang/faster-rcnn.pytorch"
"wannabeOG/Mask-RCNN" -> "umich-vl/CornerNet"
"DirtyHarryLYL/Transformer-in-Vision" -> "dk-liang/Awesome-Visual-Transformer"
"DirtyHarryLYL/Transformer-in-Vision" -> "Yangzhangcst/Transformer-in-Computer-Vision"
"DirtyHarryLYL/Transformer-in-Vision" -> "cmhungsteve/Awesome-Transformer-Attention"
"DirtyHarryLYL/Transformer-in-Vision" -> "yuewang-cuhk/awesome-vision-language-pretraining-papers" ["e"=1]
"DirtyHarryLYL/Transformer-in-Vision" -> "facebookresearch/deit"
"DirtyHarryLYL/Transformer-in-Vision" -> "DirtyHarryLYL/HOI-Learning-List" ["e"=1]
"DirtyHarryLYL/Transformer-in-Vision" -> "hila-chefer/Transformer-Explainability"
"DirtyHarryLYL/Transformer-in-Vision" -> "ashkamath/mdetr" ["e"=1]
"DirtyHarryLYL/Transformer-in-Vision" -> "whai362/PVT"
"DirtyHarryLYL/Transformer-in-Vision" -> "KaiyangZhou/CoOp" ["e"=1]
"DirtyHarryLYL/Transformer-in-Vision" -> "salesforce/ALBEF" ["e"=1]
"DirtyHarryLYL/Transformer-in-Vision" -> "microsoft/GLIP" ["e"=1]
"DirtyHarryLYL/Transformer-in-Vision" -> "google-research/scenic" ["e"=1]
"DirtyHarryLYL/Transformer-in-Vision" -> "yitu-opensource/T2T-ViT"
"DirtyHarryLYL/Transformer-in-Vision" -> "facebookresearch/dino"
"Sara-Ahmed/SiT" -> "SwinTransformer/Transformer-SSL"
"Sara-Ahmed/SiT" -> "microsoft/esvit"
"Sara-Ahmed/SiT" -> "facebookresearch/msn"
"Sara-Ahmed/SiT" -> "rishikksh20/SiT-pytorch"
"Sara-Ahmed/SiT" -> "SHI-Labs/Compact-Transformers"
"jacobgil/vit-explain" -> "hila-chefer/Transformer-Explainability"
"jacobgil/vit-explain" -> "samiraabnar/attention_flow"
"jacobgil/vit-explain" -> "hila-chefer/Transformer-MM-Explainability"
"jacobgil/vit-explain" -> "jeonsworld/ViT-pytorch"
"jacobgil/vit-explain" -> "luo3300612/Visualizer"
"jacobgil/vit-explain" -> "sayakpaul/probing-vits"
"jacobgil/vit-explain" -> "lukemelas/PyTorch-Pretrained-ViT"
"jacobgil/vit-explain" -> "raoyongming/DynamicViT"
"jacobgil/vit-explain" -> "facebookresearch/deit"
"jacobgil/vit-explain" -> "rentainhe/visualization"
"jacobgil/vit-explain" -> "frgfm/torch-cam" ["e"=1]
"jacobgil/vit-explain" -> "Sara-Ahmed/SiT"
"jacobgil/vit-explain" -> "DirtyHarryLYL/Transformer-in-Vision"
"jacobgil/vit-explain" -> "dk-liang/Awesome-Visual-Transformer"
"jacobgil/vit-explain" -> "vasgaowei/TS-CAM" ["e"=1]
"kentaroy47/vision-transformers-cifar10" -> "omihub777/ViT-CIFAR"
"kentaroy47/vision-transformers-cifar10" -> "IcarusWizard/MAE"
"kentaroy47/vision-transformers-cifar10" -> "Cydia2018/ViT-cifar10-pruning"
"kentaroy47/vision-transformers-cifar10" -> "YisenWang/MART" ["e"=1]
"kentaroy47/vision-transformers-cifar10" -> "fra31/auto-attack" ["e"=1]
"kentaroy47/vision-transformers-cifar10" -> "zjfheart/Geometry-aware-Instance-reweighted-Adversarial-Training" ["e"=1]
"kentaroy47/vision-transformers-cifar10" -> "jeonsworld/ViT-pytorch"
"microsoft/CSWin-Transformer" -> "microsoft/Focal-Transformer"
"microsoft/CSWin-Transformer" -> "Meituan-AutoML/Twins"
"microsoft/CSWin-Transformer" -> "whai362/PVT"
"microsoft/CSWin-Transformer" -> "cheerss/CrossFormer"
"microsoft/CSWin-Transformer" -> "VDIGPKU/CBNetV2"
"microsoft/CSWin-Transformer" -> "EMI-Group/FaPN" ["e"=1]
"microsoft/CSWin-Transformer" -> "ShoufaChen/CycleMLP"
"microsoft/CSWin-Transformer" -> "raoyongming/DynamicViT"
"microsoft/CSWin-Transformer" -> "microsoft/Cream"
"microsoft/CSWin-Transformer" -> "OliverRensu/Shunted-Transformer"
"microsoft/CSWin-Transformer" -> "facebookresearch/MaskFormer"
"microsoft/CSWin-Transformer" -> "raoyongming/HorNet" ["e"=1]
"microsoft/CSWin-Transformer" -> "facebookresearch/xcit"
"microsoft/CSWin-Transformer" -> "sail-sg/poolformer"
"microsoft/CSWin-Transformer" -> "Alpha-VL/ConvMAE"
"omihub777/ViT-CIFAR" -> "kentaroy47/vision-transformers-cifar10"
"vietanhdev/open-adas" -> "YanbaruRobotics/PythonPilot"
"leaderj1001/BottleneckTransformers" -> "lucidrains/bottleneck-transformer-pytorch"
"leaderj1001/BottleneckTransformers" -> "leaderj1001/LambdaNetworks"
"nerox8664/pytorch2keras" -> "nerox8664/onnx2keras"
"nerox8664/pytorch2keras" -> "gzuidhof/nn-transfer"
"nerox8664/pytorch2keras" -> "ysh329/deep-learning-model-convertor"
"nerox8664/pytorch2keras" -> "leonidk/pytorch-tf"
"nerox8664/pytorch2keras" -> "ybabakhin/kaggle_salt_bes_phalanx" ["e"=1]
"nerox8664/pytorch2keras" -> "onnx/onnx-tensorflow"
"nerox8664/pytorch2keras" -> "microsoft/MMdnn"
"nerox8664/pytorch2keras" -> "qubvel/classification_models"
"nerox8664/pytorch2keras" -> "Microsoft/MMdnn"
"nerox8664/pytorch2keras" -> "albu/albumentations"
"nerox8664/pytorch2keras" -> "nerox8664/awesome-computer-vision-models"
"nerox8664/pytorch2keras" -> "longcw/pytorch2caffe"
"nerox8664/pytorch2keras" -> "ecs-vlc/FMix" ["e"=1]
"Zehaos/MobileNet" -> "shicai/MobileNet-Caffe"
"Zehaos/MobileNet" -> "chuanqi305/MobileNet-SSD"
"Zehaos/MobileNet" -> "DeepScale/SqueezeNet"
"Zehaos/MobileNet" -> "balancap/SSD-Tensorflow"
"Zehaos/MobileNet" -> "BichenWuUCB/squeezeDet" ["e"=1]
"Zehaos/MobileNet" -> "MG2033/ShuffleNet"
"Zehaos/MobileNet" -> "ethereon/caffe-tensorflow"
"Zehaos/MobileNet" -> "kpzhang93/MTCNN_face_detection_alignment"
"Zehaos/MobileNet" -> "weiliu89/caffe"
"Zehaos/MobileNet" -> "szq0214/DSOD"
"Zehaos/MobileNet" -> "CharlesShang/FastMaskRCNN"
"Zehaos/MobileNet" -> "soeaver/caffe-model"
"Zehaos/MobileNet" -> "xiaolai-sqlai/mobilenetv3"
"Zehaos/MobileNet" -> "ry/tensorflow-resnet"
"Zehaos/MobileNet" -> "yihui-he/channel-pruning" ["e"=1]
"kevinjliang/tf-Faster-RCNN" -> "dBeker/Faster-RCNN-TensorFlow-Python3.5"
"kevinjliang/tf-Faster-RCNN" -> "smallcorgi/Faster-RCNN_TF"
"kevinjliang/tf-Faster-RCNN" -> "DeepRNN/object_detection"
"wizyoung/YOLOv3_TensorFlow" -> "YunYang1994/tensorflow-yolov3"
"wizyoung/YOLOv3_TensorFlow" -> "qqwweee/keras-yolo3"
"wizyoung/YOLOv3_TensorFlow" -> "mystic123/tensorflow-yolo-v3"
"wizyoung/YOLOv3_TensorFlow" -> "YunYang1994/TensorFlow2.0-Examples"
"wizyoung/YOLOv3_TensorFlow" -> "zzh8829/yolov3-tf2"
"wizyoung/YOLOv3_TensorFlow" -> "SpikeKing/keras-yolo3-detection"
"wizyoung/YOLOv3_TensorFlow" -> "balancap/SSD-Tensorflow"
"wizyoung/YOLOv3_TensorFlow" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"wizyoung/YOLOv3_TensorFlow" -> "Qidian213/deep_sort_yolov3" ["e"=1]
"wizyoung/YOLOv3_TensorFlow" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"wizyoung/YOLOv3_TensorFlow" -> "hunglc007/tensorflow-yolov4-tflite"
"wizyoung/YOLOv3_TensorFlow" -> "Byronnar/tensorflow-serving-yolov3"
"wizyoung/YOLOv3_TensorFlow" -> "Stinky-Tofu/Stronger-yolo"
"wizyoung/YOLOv3_TensorFlow" -> "ayooshkathuria/pytorch-yolo-v3"
"wizyoung/YOLOv3_TensorFlow" -> "hizhangp/yolo_tensorflow"
"PaddlePaddle/X2Paddle" -> "PaddlePaddle/Paddle2ONNX"
"PaddlePaddle/X2Paddle" -> "PaddlePaddle/paddle2onnx"
"PaddlePaddle/X2Paddle" -> "PaddlePaddle/Serving" ["e"=1]
"PaddlePaddle/X2Paddle" -> "PaddlePaddle/Paddle-Lite"
"PaddlePaddle/X2Paddle" -> "PaddlePaddle/Paddle-Inference-Demo"
"PaddlePaddle/X2Paddle" -> "PaddlePaddle/PaddleSlim"
"PaddlePaddle/X2Paddle" -> "PaddleEdu/Transformer-CV-models"
"PaddlePaddle/X2Paddle" -> "PaddlePaddle/PaddleHelix" ["e"=1]
"PaddlePaddle/X2Paddle" -> "PaddlePaddle/Paddle-Lite-Demo"
"PaddlePaddle/X2Paddle" -> "PaddlePaddle/Parakeet" ["e"=1]
"PaddlePaddle/X2Paddle" -> "AgentMaker/Paddle-Image-Models" ["e"=1]
"PaddlePaddle/X2Paddle" -> "PaddlePaddle/PaddleX"
"PaddlePaddle/X2Paddle" -> "PaddlePaddle/PGL" ["e"=1]
"PaddlePaddle/X2Paddle" -> "PaddlePaddle/Paddle3D"
"frotms/MobilenetV3-Tensorflow" -> "philipgao518/Mobilenetv3-Tensorflow"
"frotms/MobilenetV3-Tensorflow" -> "Bisonai/mobilenetv3-tensorflow"
"luo3300612/Visualizer" -> "rentainhe/visualization"
"luo3300612/Visualizer" -> "jacobgil/vit-explain"
"luo3300612/Visualizer" -> "hila-chefer/Transformer-Explainability"
"luo3300612/Visualizer" -> "hila-chefer/Transformer-MM-Explainability"
"luo3300612/Visualizer" -> "LeapLabTHU/DAT"
"luo3300612/Visualizer" -> "raoyongming/DynamicViT"
"luo3300612/Visualizer" -> "dk-liang/Awesome-Visual-Transformer"
"luo3300612/Visualizer" -> "OliverRensu/Shunted-Transformer"
"luo3300612/Visualizer" -> "DirtyHarryLYL/Transformer-in-Vision"
"luo3300612/Visualizer" -> "TACJu/TransFG" ["e"=1]
"luo3300612/Visualizer" -> "SHI-Labs/Neighborhood-Attention-Transformer" ["e"=1]
"luo3300612/Visualizer" -> "whai362/PVT"
"luo3300612/Visualizer" -> "NVlabs/GroupViT" ["e"=1]
"luo3300612/Visualizer" -> "zihangJiang/TokenLabeling"
"luo3300612/Visualizer" -> "facebookresearch/deit"
"qixuxiang/Pytorch_Lightweight_Network" -> "mohhao/TF-Keras-ThunderNet"
"tongyuhome/MobileNetV3-SSD" -> "shaoshengsong/MobileNetV3-SSD"
"tongyuhome/MobileNetV3-SSD" -> "shaoshengsong/MobileNetV3-SSD-Compact-Version"
"PaddlePaddle/awesome-DeepLearning" -> "PaddlePaddle/PaddleNLP" ["e"=1]
"PaddlePaddle/awesome-DeepLearning" -> "PaddlePaddle/PaddleVideo" ["e"=1]
"PaddlePaddle/awesome-DeepLearning" -> "PaddlePaddle/FastDeploy"
"PaddlePaddle/awesome-DeepLearning" -> "PaddlePaddle/PaddleSlim"
"PaddlePaddle/awesome-DeepLearning" -> "BR-IDL/PaddleViT"
"PaddlePaddle/awesome-DeepLearning" -> "PaddlePaddle/PaddleClas"
"PaddlePaddle/awesome-DeepLearning" -> "PaddlePaddle/PaddleDetection"
"PaddlePaddle/awesome-DeepLearning" -> "PaddlePaddle/PaddleX"
"PaddlePaddle/awesome-DeepLearning" -> "DefTruth/lite.ai.toolkit"
"PaddlePaddle/awesome-DeepLearning" -> "PaddlePaddle/Paddle2ONNX"
"PaddlePaddle/awesome-DeepLearning" -> "PaddlePaddle/Paddle-Lite"
"PaddlePaddle/awesome-DeepLearning" -> "PaddlePaddle/PaddleSeg"
"PaddlePaddle/awesome-DeepLearning" -> "alibaba/EasyNLP" ["e"=1]
"PaddlePaddle/awesome-DeepLearning" -> "PaddlePaddle/Serving" ["e"=1]
"PaddlePaddle/awesome-DeepLearning" -> "km1994/nlp_paper_study" ["e"=1]
"hustvl/SparseInst" -> "zhang-tao-whu/e2ec"
"hustvl/SparseInst" -> "hustvl/MIMDet"
"hustvl/SparseInst" -> "hustvl/QueryInst"
"hustvl/SparseInst" -> "hustvl/TopFormer"
"hustvl/SparseInst" -> "SysCV/transfiner"
"hustvl/SparseInst" -> "WXinlong/SOLO"
"hustvl/SparseInst" -> "wjf5203/VNext" ["e"=1]
"hustvl/SparseInst" -> "megvii-research/SOLQ"
"hustvl/SparseInst" -> "PeizeSun/OneNet"
"hustvl/SparseInst" -> "VividLe/BackTAL" ["e"=1]
"JialeCao001/D2Det" -> "JialeCao001/D2Det-mmdet2.1"
"JialeCao001/D2Det" -> "jshilong/SEPC"
"JialeCao001/D2Det" -> "Sense-X/TSD"
"JialeCao001/D2Det" -> "csuhan/s2anet" ["e"=1]
"JialeCao001/D2Det" -> "SJTU-Thinklab-Det/r3det-on-mmdetection" ["e"=1]
"JialeCao001/D2Det" -> "Megvii-BaseDetection/DeFCN"
"JialeCao001/D2Det" -> "joe-siyuan-qiao/DetectoRS"
"JialeCao001/D2Det" -> "Thinklab-SJTU/CSL_RetinaNet_Tensorflow" ["e"=1]
"52CV/CV-Surveys" -> "52CV/CVPR-2022-Papers"
"52CV/CV-Surveys" -> "extreme-assistant/CVPR2022-Paper-Code-Interpretation"
"52CV/CV-Surveys" -> "extreme-assistant/survey-computer-vision-2020"
"52CV/CV-Surveys" -> "iscyy/yoloair"
"52CV/CV-Surveys" -> "52CV/CVPR-2023-Papers"
"52CV/CV-Surveys" -> "amusi/CVPR2022-Papers-with-Code"
"52CV/CV-Surveys" -> "extreme-assistant/ICCV2021-Paper-Code-Interpretation"
"52CV/CV-Surveys" -> "xmu-xiaoma666/FightingCV-Paper-Reading"
"52CV/CV-Surveys" -> "enpeizhao/CVprojects"
"52CV/CV-Surveys" -> "IDEA-Research/detrex" ["e"=1]
"52CV/CV-Surveys" -> "amusi/CVPR2023-Papers-with-Code"
"52CV/CV-Surveys" -> "extreme-assistant/Awesome-CV-Team"
"52CV/CV-Surveys" -> "52CV/CVPR-2021-Papers"
"bamos/densenet.pytorch" -> "andreasveit/densenet-pytorch"
"bamos/densenet.pytorch" -> "gpleiss/efficient_densenet_pytorch"
"bamos/densenet.pytorch" -> "longcw/faster_rcnn_pytorch"
"bamos/densenet.pytorch" -> "liuzhuang13/DenseNet"
"bamos/densenet.pytorch" -> "mattmacy/vnet.pytorch" ["e"=1]
"bamos/densenet.pytorch" -> "lanpa/tensorboard-pytorch"
"bamos/densenet.pytorch" -> "fxia22/stn.pytorch" ["e"=1]
"bamos/densenet.pytorch" -> "szagoruyko/wide-residual-networks"
"bamos/densenet.pytorch" -> "PureDiors/pytorch_RFCN"
"bamos/densenet.pytorch" -> "szagoruyko/attention-transfer" ["e"=1]
"bamos/densenet.pytorch" -> "longcw/yolo2-pytorch"
"bamos/densenet.pytorch" -> "kuangliu/pytorch-retinanet"
"bamos/densenet.pytorch" -> "oeway/pytorch-deform-conv"
"bamos/densenet.pytorch" -> "YixuanLi/densenet-tensorflow"
"bamos/densenet.pytorch" -> "szagoruyko/functional-zoo"
"megvii-model/ShuffleNet-Series" -> "xiaolai-sqlai/mobilenetv3"
"megvii-model/ShuffleNet-Series" -> "miaow1988/ShuffleNet_V2_pytorch_caffe"
"megvii-model/ShuffleNet-Series" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"megvii-model/ShuffleNet-Series" -> "JiahuiYu/slimmable_networks" ["e"=1]
"megvii-model/ShuffleNet-Series" -> "TuSimple/simpledet"
"megvii-model/ShuffleNet-Series" -> "D-X-Y/Awesome-NAS" ["e"=1]
"megvii-model/ShuffleNet-Series" -> "Duankaiwen/CenterNet"
"megvii-model/ShuffleNet-Series" -> "zhangxiaosong18/FreeAnchor"
"megvii-model/ShuffleNet-Series" -> "tianzhi0549/FCOS"
"megvii-model/ShuffleNet-Series" -> "mit-han-lab/ProxylessNAS" ["e"=1]
"megvii-model/ShuffleNet-Series" -> "huawei-noah/ghostnet"
"megvii-model/ShuffleNet-Series" -> "Lyken17/pytorch-OpCounter"
"megvii-model/ShuffleNet-Series" -> "facebookresearch/pycls"
"megvii-model/ShuffleNet-Series" -> "zhanghang1989/ResNeSt"
"megvii-model/ShuffleNet-Series" -> "ycszen/TorchSeg" ["e"=1]
"ChenhongyiYang/QueryDet-PyTorch" -> "Icecream-blue-sky/Past-and-present-small-object-detection"
"ChenhongyiYang/QueryDet-PyTorch" -> "Chasel-Tsui/mmdet-rfla"
"ChenhongyiYang/QueryDet-PyTorch" -> "ispc-lab/SmallObjectDetectionList"
"ChenhongyiYang/QueryDet-PyTorch" -> "ucas-vg/Effective-Fusion-Factor"
"ChenhongyiYang/QueryDet-PyTorch" -> "yzd-v/FGD" ["e"=1]
"ChenhongyiYang/QueryDet-PyTorch" -> "MCG-NJU/AdaMixer" ["e"=1]
"ChenhongyiYang/QueryDet-PyTorch" -> "kuanhungchen/awesome-tiny-object-detection"
"ChenhongyiYang/QueryDet-PyTorch" -> "strongwolf/DW"
"ChenhongyiYang/QueryDet-PyTorch" -> "ChenhongyiYang/PGD" ["e"=1]
"ChenhongyiYang/QueryDet-PyTorch" -> "LiWentomng/OrientedRepPoints" ["e"=1]
"ChenhongyiYang/QueryDet-PyTorch" -> "csuhan/ReDet" ["e"=1]
"ChenhongyiYang/QueryDet-PyTorch" -> "IDEA-opensource/DN-DETR" ["e"=1]
"ChenhongyiYang/QueryDet-PyTorch" -> "fcjian/TOOD"
"ChenhongyiYang/QueryDet-PyTorch" -> "jwwangchn/AI-TOD"
"ChenhongyiYang/QueryDet-PyTorch" -> "cv516Buaa/tph-yolov5" ["e"=1]
"amusi/CVPR2023-Papers-with-Code" -> "extreme-assistant/CVPR2023-Paper-Code-Interpretation"
"amusi/CVPR2023-Papers-with-Code" -> "amusi/ECCV2022-Papers-with-Code"
"amusi/CVPR2023-Papers-with-Code" -> "extreme-assistant/CVPR2022-Paper-Code-Interpretation"
"amusi/CVPR2023-Papers-with-Code" -> "awesome-NeRF/awesome-NeRF" ["e"=1]
"amusi/CVPR2023-Papers-with-Code" -> "heejkoo/Awesome-Diffusion-Models" ["e"=1]
"amusi/CVPR2023-Papers-with-Code" -> "openai/improved-diffusion" ["e"=1]
"amusi/CVPR2023-Papers-with-Code" -> "huggingface/pytorch-image-models"
"amusi/CVPR2023-Papers-with-Code" -> "microsoft/Swin-Transformer"
"amusi/CVPR2023-Papers-with-Code" -> "YangLing0818/Diffusion-Models-Papers-Survey-Taxonomy" ["e"=1]
"amusi/CVPR2023-Papers-with-Code" -> "swz30/Restormer" ["e"=1]
"amusi/CVPR2023-Papers-with-Code" -> "extreme-assistant/ICCV2021-Paper-Code-Interpretation"
"amusi/CVPR2023-Papers-with-Code" -> "MenghaoGuo/Awesome-Vision-Attentions"
"amusi/CVPR2023-Papers-with-Code" -> "xmu-xiaoma666/External-Attention-pytorch"
"amusi/CVPR2023-Papers-with-Code" -> "frgfm/torch-cam" ["e"=1]
"amusi/CVPR2023-Papers-with-Code" -> "baaivision/Painter" ["e"=1]
"taokong/FoveaBox" -> "zhangxiaosong18/FreeAnchor"
"taokong/FoveaBox" -> "thangvubk/Cascade-RPN"
"taokong/FoveaBox" -> "microsoft/RepPoints"
"taokong/FoveaBox" -> "yqyao/FCOS_PLUS"
"taokong/FoveaBox" -> "sfzhang15/ATSS"
"taokong/FoveaBox" -> "OceanPang/Libra_R-CNN"
"taokong/FoveaBox" -> "ZJULearning/ttfnet"
"taokong/FoveaBox" -> "tianzhi0549/FCOS"
"taokong/FoveaBox" -> "Duankaiwen/CenterNet"
"taokong/FoveaBox" -> "hdjang/Feature-Selective-Anchor-Free-Module-for-Single-Shot-Object-Detection" ["e"=1]
"taokong/FoveaBox" -> "princeton-vl/CornerNet"
"taokong/FoveaBox" -> "arashwan/matrixnet"
"taokong/FoveaBox" -> "xingyizhou/ExtremeNet"
"taokong/FoveaBox" -> "Ranchentx/EFGRNet"
"taokong/FoveaBox" -> "KiveeDong/CentripetalNet"
"LeapLabTHU/DAT" -> "lucidrains/deformable-attention"
"LeapLabTHU/DAT" -> "LeapLabTHU/ACmix" ["e"=1]
"LeapLabTHU/DAT" -> "SHI-Labs/Neighborhood-Attention-Transformer" ["e"=1]
"LeapLabTHU/DAT" -> "Chenglin-Yang/LVT"
"LeapLabTHU/DAT" -> "fundamentalvision/Deformable-DETR"
"LeapLabTHU/DAT" -> "sail-sg/poolformer"
"LeapLabTHU/DAT" -> "LeapLabTHU/AdaFocusV2" ["e"=1]
"LeapLabTHU/DAT" -> "blackfeather-wang/Dynamic-Vision-Transformer" ["e"=1]
"LeapLabTHU/DAT" -> "CASIA-IVA-Lab/DPT"
"LeapLabTHU/DAT" -> "sail-sg/iFormer" ["e"=1]
"LeapLabTHU/DAT" -> "czczup/ViT-Adapter" ["e"=1]
"LeapLabTHU/DAT" -> "microsoft/Focal-Transformer"
"LeapLabTHU/DAT" -> "Meituan-AutoML/Twins"
"LeapLabTHU/DAT" -> "OliverRensu/Shunted-Transformer"
"LeapLabTHU/DAT" -> "ziplab/LITv2" ["e"=1]
"leoxiaobin/CvT" -> "microsoft/CvT"
"leoxiaobin/CvT" -> "linhezheng19/CAT"
"leoxiaobin/CvT" -> "wofmanaf/ResT"
"lucidrains/mlp-mixer-pytorch" -> "rishikksh20/MLP-Mixer-pytorch"
"lucidrains/mlp-mixer-pytorch" -> "lucidrains/g-mlp-pytorch"
"lucidrains/mlp-mixer-pytorch" -> "lucidrains/res-mlp-pytorch"
"lucidrains/mlp-mixer-pytorch" -> "Andrew-Qibin/VisionPermutator"
"lucidrains/mlp-mixer-pytorch" -> "locuslab/convmixer"
"lucidrains/mlp-mixer-pytorch" -> "whai362/PVT"
"lucidrains/mlp-mixer-pytorch" -> "lukemelas/do-you-even-need-attention"
"lucidrains/mlp-mixer-pytorch" -> "facebookresearch/deit"
"lucidrains/mlp-mixer-pytorch" -> "lucidrains/byol-pytorch"
"lucidrains/mlp-mixer-pytorch" -> "raoyongming/DynamicViT"
"lucidrains/mlp-mixer-pytorch" -> "Meituan-AutoML/Twins"
"lucidrains/mlp-mixer-pytorch" -> "facebookresearch/xcit"
"lucidrains/mlp-mixer-pytorch" -> "google-research/vision_transformer"
"lucidrains/mlp-mixer-pytorch" -> "sail-sg/poolformer"
"lucidrains/mlp-mixer-pytorch" -> "PyTorchLightning/lightning-bolts"
"lucidrains/segformer-pytorch" -> "NVlabs/SegFormer"
"lucidrains/segformer-pytorch" -> "920232796/SETR-pytorch"
"lucidrains/segformer-pytorch" -> "camlaedtke/segmentation_pytorch"
"lucidrains/segformer-pytorch" -> "bubbliiiing/segformer-pytorch" ["e"=1]
"rishikksh20/convolution-vision-transformers" -> "microsoft/CvT"
"rishikksh20/convolution-vision-transformers" -> "rosinality/vision-transformers-pytorch"
"rishikksh20/convolution-vision-transformers" -> "rishikksh20/CeiT-pytorch"
"titu1994/DenseNet" -> "flyyufelix/DenseNet-Keras"
"titu1994/DenseNet" -> "YixuanLi/densenet-tensorflow"
"titu1994/DenseNet" -> "flyyufelix/cnn_finetune"
"titu1994/DenseNet" -> "tdeboissiere/DeepLearningImplementations" ["e"=1]
"titu1994/DenseNet" -> "liuzhuang13/DenseNet"
"titu1994/DenseNet" -> "taki0112/Densenet-Tensorflow"
"titu1994/DenseNet" -> "raghakot/keras-resnet"
"titu1994/DenseNet" -> "SimJeg/FC-DenseNet" ["e"=1]
"titu1994/DenseNet" -> "titu1994/Keras-Classification-Models"
"titu1994/DenseNet" -> "taki0112/SENet-Tensorflow"
"titu1994/DenseNet" -> "aurora95/Keras-FCN" ["e"=1]
"titu1994/DenseNet" -> "titu1994/Inception-v4"
"titu1994/DenseNet" -> "titu1994/Keras-ResNeXt"
"titu1994/DenseNet" -> "farizrahman4u/keras-contrib" ["e"=1]
"titu1994/DenseNet" -> "kentsommer/keras-inceptionV4"
"Tencent/tencent-ml-images" -> "Tencent/PocketFlow" ["e"=1]
"Tencent/tencent-ml-images" -> "facebookresearch/maskrcnn-benchmark"
"Tencent/tencent-ml-images" -> "Microsoft/MMdnn"
"Tencent/tencent-ml-images" -> "albu/albumentations"
"Tencent/tencent-ml-images" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"Tencent/tencent-ml-images" -> "dmlc/gluon-cv"
"Tencent/tencent-ml-images" -> "NVIDIA/DALI"
"Tencent/tencent-ml-images" -> "openimages/dataset"
"Tencent/tencent-ml-images" -> "hujie-frank/SENet"
"Tencent/tencent-ml-images" -> "TuSimple/simpledet"
"Tencent/tencent-ml-images" -> "zjhuang22/maskscoring_rcnn"
"Tencent/tencent-ml-images" -> "switchablenorms/DeepFashion2" ["e"=1]
"Tencent/tencent-ml-images" -> "TencentYoutuResearch/FaceDetection-DSFD"
"Tencent/tencent-ml-images" -> "NervanaSystems/distiller" ["e"=1]
"Tencent/tencent-ml-images" -> "tensorflow/tpu"
"huawei-noah/CV-Backbones" -> "whai362/PVT"
"huawei-noah/CV-Backbones" -> "sail-sg/poolformer"
"huawei-noah/CV-Backbones" -> "Andrew-Qibin/CoordAttention" ["e"=1]
"huawei-noah/CV-Backbones" -> "ZjjConan/SimAM" ["e"=1]
"huawei-noah/CV-Backbones" -> "Visual-Attention-Network/VAN-Classification" ["e"=1]
"huawei-noah/CV-Backbones" -> "facebookresearch/ConvNeXt"
"huawei-noah/CV-Backbones" -> "microsoft/CSWin-Transformer"
"huawei-noah/CV-Backbones" -> "Meituan-AutoML/Twins"
"huawei-noah/CV-Backbones" -> "DingXiaoH/RepLKNet-pytorch" ["e"=1]
"huawei-noah/CV-Backbones" -> "raoyongming/HorNet" ["e"=1]
"huawei-noah/CV-Backbones" -> "DingXiaoH/RepVGG"
"huawei-noah/CV-Backbones" -> "HuCaoFighting/Swin-Unet" ["e"=1]
"huawei-noah/CV-Backbones" -> "PeizeSun/SparseR-CNN"
"huawei-noah/CV-Backbones" -> "yzd-v/FGD" ["e"=1]
"huawei-noah/CV-Backbones" -> "MenghaoGuo/Awesome-Vision-Attentions"
"ucasligang/awesome-MIM" -> "implus/UM-MAE"
"ucasligang/awesome-MIM" -> "EdisonLeeeee/Awesome-Masked-Autoencoders"
"ucasligang/awesome-MIM" -> "zejiangh/MILAN"
"ucasligang/awesome-MIM" -> "lxtGH/CAE"
"ucasligang/awesome-MIM" -> "microsoft/SimMIM"
"ucasligang/awesome-MIM" -> "Alpha-VL/ConvMAE"
"ucasligang/awesome-MIM" -> "hustvl/MIMDet"
"ucasligang/awesome-MIM" -> "bytedance/ibot"
"ucasligang/awesome-MIM" -> "implus/mae_segmentation"
"OceanPang/Libra_R-CNN" -> "yihui-he/KL-Loss"
"OceanPang/Libra_R-CNN" -> "xingyizhou/ExtremeNet"
"OceanPang/Libra_R-CNN" -> "KimSoybean/ScratchDet"
"OceanPang/Libra_R-CNN" -> "microsoft/RepPoints"
"OceanPang/Libra_R-CNN" -> "thangvubk/Cascade-RPN"
"OceanPang/Libra_R-CNN" -> "STVIR/Grid-R-CNN"
"OceanPang/Libra_R-CNN" -> "zhaoweicai/cascade-rcnn"
"OceanPang/Libra_R-CNN" -> "sfzhang15/ATSS"
"OceanPang/Libra_R-CNN" -> "guoruoqian/DetNet_pytorch"
"OceanPang/Libra_R-CNN" -> "liuwei16/CSP" ["e"=1]
"OceanPang/Libra_R-CNN" -> "VCBE123/AnchorFreeDetection"
"OceanPang/Libra_R-CNN" -> "vacancy/PreciseRoIPooling"
"OceanPang/Libra_R-CNN" -> "zhangxiaosong18/FreeAnchor"
"OceanPang/Libra_R-CNN" -> "zhaoweicai/Detectron-Cascade-RCNN"
"OceanPang/Libra_R-CNN" -> "xvjiarui/GCNet" ["e"=1]
"Robert-JunWang/Pelee" -> "sfzhang15/RefineDet"
"Robert-JunWang/Pelee" -> "shicai/MobileNet-Caffe"
"Robert-JunWang/Pelee" -> "Robert-JunWang/PeleeNet"
"Robert-JunWang/Pelee" -> "chuanqi305/MobileNetv2-SSDLite"
"Robert-JunWang/Pelee" -> "szq0214/DSOD"
"Robert-JunWang/Pelee" -> "eric612/MobileNet-YOLO"
"Robert-JunWang/Pelee" -> "yonghenglh6/DepthwiseConvolution"
"Robert-JunWang/Pelee" -> "ruinmessi/RFBNet"
"Robert-JunWang/Pelee" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"Robert-JunWang/Pelee" -> "zengarden/light_head_rcnn"
"Robert-JunWang/Pelee" -> "zhaoweicai/cascade-rcnn"
"Robert-JunWang/Pelee" -> "lyxok1/Tiny-DSOD"
"Robert-JunWang/Pelee" -> "chuanqi305/MobileNet-SSD"
"Robert-JunWang/Pelee" -> "nnUyi/PeleeNet"
"Robert-JunWang/Pelee" -> "farmingyard/ShuffleNet"
"Russell91/ReInspect" -> "Russell91/TensorBox"
"Russell91/ReInspect" -> "aosokin/cnn_head_detection" ["e"=1]
"Russell91/ReInspect" -> "Russell91/apollocaffe" ["e"=1]
"Russell91/ReInspect" -> "TensorBox/TensorBox"
"Russell91/ReInspect" -> "Orpine/py-R-FCN"
"Russell91/ReInspect" -> "google/multibox" ["e"=1]
"Russell91/ReInspect" -> "ydwen/caffe-face" ["e"=1]
"Russell91/ReInspect" -> "anson0910/CNN_face_detection" ["e"=1]
"Russell91/ReInspect" -> "guoyilin/FaceDetection_CNN" ["e"=1]
"Russell91/ReInspect" -> "daijifeng001/R-FCN"
"Russell91/ReInspect" -> "daijifeng001/MNC" ["e"=1]
"Russell91/ReInspect" -> "xingwangsfu/caffe-yolo"
"Russell91/ReInspect" -> "zhangliliang/RPN_BF" ["e"=1]
"Russell91/ReInspect" -> "yjxiong/caffe" ["e"=1]
"Russell91/ReInspect" -> "craftGBD/craftGBD"
"bharatsingh430/soft-nms" -> "bharatsingh430/Deformable-ConvNets"
"bharatsingh430/soft-nms" -> "zhaoweicai/cascade-rcnn"
"bharatsingh430/soft-nms" -> "szq0214/DSOD"
"bharatsingh430/soft-nms" -> "sfzhang15/RefineDet"
"bharatsingh430/soft-nms" -> "sanghoon/pva-faster-rcnn"
"bharatsingh430/soft-nms" -> "daijifeng001/R-FCN"
"bharatsingh430/soft-nms" -> "zengarden/light_head_rcnn"
"bharatsingh430/soft-nms" -> "zhaoweicai/mscnn"
"bharatsingh430/soft-nms" -> "YuwenXiong/py-R-FCN"
"bharatsingh430/soft-nms" -> "abhi2610/ohem"
"bharatsingh430/soft-nms" -> "msracver/Deformable-ConvNets"
"bharatsingh430/soft-nms" -> "vacancy/PreciseRoIPooling"
"bharatsingh430/soft-nms" -> "ruinmessi/RFBNet"
"bharatsingh430/soft-nms" -> "yihui-he/softer-NMS"
"bharatsingh430/soft-nms" -> "bharatsingh430/py-R-FCN-multiGPU"
"msracver/FCIS" -> "daijifeng001/MNC" ["e"=1]
"msracver/FCIS" -> "TuSimple/mx-maskrcnn"
"msracver/FCIS" -> "msracver/Deformable-ConvNets"
"msracver/FCIS" -> "CharlesShang/FastMaskRCNN"
"msracver/FCIS" -> "msracver/Deep-Feature-Flow" ["e"=1]
"msracver/FCIS" -> "hszhao/PSPNet" ["e"=1]
"msracver/FCIS" -> "daijifeng001/R-FCN"
"msracver/FCIS" -> "precedenceguo/mx-rcnn" ["e"=1]
"msracver/FCIS" -> "felixgwu/mask_rcnn_pytorch"
"msracver/FCIS" -> "fyu/dilation" ["e"=1]
"msracver/FCIS" -> "shelhamer/fcn.berkeleyvision.org"
"msracver/FCIS" -> "cypw/DPNs" ["e"=1]
"msracver/FCIS" -> "MarvinTeichmann/tensorflow-fcn" ["e"=1]
"msracver/FCIS" -> "Orpine/py-R-FCN"
"msracver/FCIS" -> "DrSleep/tensorflow-deeplab-resnet" ["e"=1]
"msracver/Deformable-ConvNets" -> "chengdazhi/Deformable-Convolution-V2-PyTorch"
"msracver/Deformable-ConvNets" -> "oeway/pytorch-deform-conv"
"msracver/Deformable-ConvNets" -> "daijifeng001/R-FCN"
"msracver/Deformable-ConvNets" -> "hujie-frank/SENet"
"msracver/Deformable-ConvNets" -> "TuSimple/simpledet"
"msracver/Deformable-ConvNets" -> "msracver/FCIS"
"msracver/Deformable-ConvNets" -> "rbgirshick/py-faster-rcnn"
"msracver/Deformable-ConvNets" -> "tianzhi0549/FCOS"
"msracver/Deformable-ConvNets" -> "xingyizhou/CenterNet"
"msracver/Deformable-ConvNets" -> "liuzhuang13/DenseNet"
"msracver/Deformable-ConvNets" -> "facebookresearch/maskrcnn-benchmark"
"msracver/Deformable-ConvNets" -> "TuSimple/mx-maskrcnn"
"msracver/Deformable-ConvNets" -> "roytseng-tw/Detectron.pytorch"
"msracver/Deformable-ConvNets" -> "CharlesShang/DCNv2"
"msracver/Deformable-ConvNets" -> "princeton-vl/CornerNet"
"xu-ji/IIC" -> "sebastiani/IIC"
"xu-ji/IIC" -> "facebookresearch/deepcluster"
"xu-ji/IIC" -> "wvangansbeke/Unsupervised-Classification"
"xu-ji/IIC" -> "yukimasano/self-label"
"xu-ji/IIC" -> "kanezaki/pytorch-unsupervised-segmentation"
"xu-ji/IIC" -> "facebookresearch/swav"
"xu-ji/IIC" -> "zhoushengisnoob/DeepClustering"
"xu-ji/IIC" -> "kanezaki/pytorch-unsupervised-segmentation-tip"
"xu-ji/IIC" -> "jyhjinghwang/SegSort"
"xu-ji/IIC" -> "HobbitLong/CMC"
"xu-ji/IIC" -> "Yonv1943/Unsupervised-Segmentation"
"xu-ji/IIC" -> "zhirongw/lemniscate.pytorch"
"xu-ji/IIC" -> "astirn/IIC"
"xu-ji/IIC" -> "open-mmlab/OpenSelfSup"
"xu-ji/IIC" -> "Cory-M/DCCM" ["e"=1]
"facebookresearch/deepcluster" -> "facebookresearch/swav"
"facebookresearch/deepcluster" -> "zhoushengisnoob/DeepClustering"
"facebookresearch/deepcluster" -> "xu-ji/IIC"
"facebookresearch/deepcluster" -> "facebookresearch/DeeperCluster"
"facebookresearch/deepcluster" -> "yukimasano/self-label"
"facebookresearch/deepcluster" -> "zhirongw/lemniscate.pytorch"
"facebookresearch/deepcluster" -> "wvangansbeke/Unsupervised-Classification"
"facebookresearch/deepcluster" -> "HobbitLong/CMC"
"facebookresearch/deepcluster" -> "open-mmlab/OpenSelfSup"
"facebookresearch/deepcluster" -> "facebookresearch/moco"
"facebookresearch/deepcluster" -> "jason718/awesome-self-supervised-learning"
"facebookresearch/deepcluster" -> "google-research/simclr"
"facebookresearch/deepcluster" -> "XifengGuo/DEC-keras" ["e"=1]
"facebookresearch/deepcluster" -> "lucidrains/byol-pytorch"
"facebookresearch/deepcluster" -> "gidariss/FeatureLearningRotNet"
"facebookresearch/swav" -> "facebookresearch/moco"
"facebookresearch/swav" -> "facebookresearch/deepcluster"
"facebookresearch/swav" -> "open-mmlab/OpenSelfSup"
"facebookresearch/swav" -> "HobbitLong/PyContrast"
"facebookresearch/swav" -> "facebookresearch/vissl"
"facebookresearch/swav" -> "lucidrains/byol-pytorch"
"facebookresearch/swav" -> "google-research/simclr"
"facebookresearch/swav" -> "facebookresearch/barlowtwins"
"facebookresearch/swav" -> "sthalles/SimCLR"
"facebookresearch/swav" -> "wvangansbeke/Unsupervised-Classification"
"facebookresearch/swav" -> "PatrickHua/SimSiam"
"facebookresearch/swav" -> "yukimasano/self-label"
"facebookresearch/swav" -> "facebookresearch/simsiam"
"facebookresearch/swav" -> "HobbitLong/SupContrast"
"facebookresearch/swav" -> "facebookresearch/dino"
"facebookresearch/unbiased-teacher" -> "google-research/ssl_detection"
"facebookresearch/unbiased-teacher" -> "facebookresearch/unbiased-teacher-v2"
"facebookresearch/unbiased-teacher" -> "microsoft/SoftTeacher"
"facebookresearch/unbiased-teacher" -> "soo89/CSD-SSD"
"facebookresearch/unbiased-teacher" -> "facebookresearch/adaptive_teacher" ["e"=1]
"facebookresearch/unbiased-teacher" -> "Megvii-BaseDetection/DenseTeacher"
"facebookresearch/unbiased-teacher" -> "kinredon/umt" ["e"=1]
"facebookresearch/unbiased-teacher" -> "HikariTJU/LD" ["e"=1]
"facebookresearch/unbiased-teacher" -> "amirbar/DETReg" ["e"=1]
"facebookresearch/unbiased-teacher" -> "txdet/Instant-Teaching"
"facebookresearch/unbiased-teacher" -> "hikvision-research/SSOD"
"facebookresearch/unbiased-teacher" -> "NVlabs/wetectron" ["e"=1]
"facebookresearch/unbiased-teacher" -> "chengchunhsu/EveryPixelMatters" ["e"=1]
"facebookresearch/unbiased-teacher" -> "kekmodel/FixMatch-pytorch" ["e"=1]
"facebookresearch/unbiased-teacher" -> "soo89/CSD-RFCN"
"microsoft/SoftTeacher" -> "facebookresearch/unbiased-teacher"
"microsoft/SoftTeacher" -> "google-research/ssl_detection"
"microsoft/SoftTeacher" -> "VDIGPKU/CBNetV2"
"microsoft/SoftTeacher" -> "IDEACVR/DINO" ["e"=1]
"microsoft/SoftTeacher" -> "SwinTransformer/Swin-Transformer-Object-Detection"
"microsoft/SoftTeacher" -> "microsoft/DynamicHead"
"microsoft/SoftTeacher" -> "ligang-cs/PseCo"
"microsoft/SoftTeacher" -> "microsoft/SimMIM"
"microsoft/SoftTeacher" -> "xingyizhou/CenterNet2"
"microsoft/SoftTeacher" -> "Megvii-BaseDetection/cvpods"
"microsoft/SoftTeacher" -> "Megvii-BaseDetection/DenseTeacher"
"microsoft/SoftTeacher" -> "hhaAndroid/mmdetection-mini"
"microsoft/SoftTeacher" -> "ModelTC/EOD"
"microsoft/SoftTeacher" -> "amirbar/DETReg" ["e"=1]
"microsoft/SoftTeacher" -> "megvii-model/YOLOF"
"sthalles/PyTorch-BYOL" -> "lucidrains/byol-pytorch"
"sthalles/PyTorch-BYOL" -> "Spijkervet/BYOL"
"sthalles/PyTorch-BYOL" -> "sthalles/SimCLR"
"sthalles/PyTorch-BYOL" -> "untitled-ai/self_supervised"
"sthalles/PyTorch-BYOL" -> "PatrickHua/SimSiam"
"sthalles/PyTorch-BYOL" -> "Spijkervet/SimCLR"
"sthalles/PyTorch-BYOL" -> "facebookresearch/swav"
"sthalles/PyTorch-BYOL" -> "leftthomas/SimCLR"
"sthalles/PyTorch-BYOL" -> "zhirongw/lemniscate.pytorch"
"sthalles/PyTorch-BYOL" -> "HobbitLong/CMC"
"sthalles/PyTorch-BYOL" -> "kakaobrain/torchlars"
"sthalles/PyTorch-BYOL" -> "open-mmlab/OpenSelfSup"
"sthalles/PyTorch-BYOL" -> "yaox12/BYOL-PyTorch"
"sthalles/PyTorch-BYOL" -> "HobbitLong/PyContrast"
"sthalles/PyTorch-BYOL" -> "facebookresearch/fair_self_supervision_benchmark"
"sthalles/SimCLR" -> "google-research/simclr"
"sthalles/SimCLR" -> "Spijkervet/SimCLR"
"sthalles/SimCLR" -> "facebookresearch/moco"
"sthalles/SimCLR" -> "HobbitLong/SupContrast"
"sthalles/SimCLR" -> "sthalles/PyTorch-BYOL"
"sthalles/SimCLR" -> "facebookresearch/swav"
"sthalles/SimCLR" -> "leftthomas/SimCLR"
"sthalles/SimCLR" -> "HobbitLong/PyContrast"
"sthalles/SimCLR" -> "lucidrains/byol-pytorch"
"sthalles/SimCLR" -> "HobbitLong/CMC"
"sthalles/SimCLR" -> "PatrickHua/SimSiam"
"sthalles/SimCLR" -> "facebookresearch/simsiam"
"sthalles/SimCLR" -> "facebookresearch/vissl"
"sthalles/SimCLR" -> "jason718/awesome-self-supervised-learning"
"sthalles/SimCLR" -> "facebookresearch/moco-v3"
"wvangansbeke/Unsupervised-Classification" -> "facebookresearch/swav"
"wvangansbeke/Unsupervised-Classification" -> "xu-ji/IIC"
"wvangansbeke/Unsupervised-Classification" -> "yukimasano/self-label"
"wvangansbeke/Unsupervised-Classification" -> "facebookresearch/deepcluster"
"wvangansbeke/Unsupervised-Classification" -> "niuchuangnn/SPICE"
"wvangansbeke/Unsupervised-Classification" -> "deu30303/RUC"
"wvangansbeke/Unsupervised-Classification" -> "zhoushengisnoob/DeepClustering"
"wvangansbeke/Unsupervised-Classification" -> "open-mmlab/OpenSelfSup"
"wvangansbeke/Unsupervised-Classification" -> "Yunfan-Li/Contrastive-Clustering"
"wvangansbeke/Unsupervised-Classification" -> "sthalles/SimCLR"
"wvangansbeke/Unsupervised-Classification" -> "google-research/simclr"
"wvangansbeke/Unsupervised-Classification" -> "kekmodel/FixMatch-pytorch" ["e"=1]
"wvangansbeke/Unsupervised-Classification" -> "facebookresearch/moco"
"wvangansbeke/Unsupervised-Classification" -> "HobbitLong/SupContrast"
"wvangansbeke/Unsupervised-Classification" -> "leftthomas/SimCLR"
"yukimasano/self-label" -> "facebookresearch/swav"
"yukimasano/self-label" -> "facebookresearch/deepcluster"
"yukimasano/self-label" -> "wvangansbeke/Unsupervised-Classification"
"yukimasano/self-label" -> "salesforce/PCL"
"yukimasano/self-label" -> "HobbitLong/CMC"
"yukimasano/self-label" -> "xu-ji/IIC"
"yukimasano/self-label" -> "Yunfan-Li/Contrastive-Clustering"
"yukimasano/self-label" -> "k-han/AutoNovel" ["e"=1]
"yukimasano/self-label" -> "Raymond-sci/PICA"
"yukimasano/self-label" -> "zhirongw/lemniscate.pytorch"
"yukimasano/self-label" -> "facebookresearch/fair_self_supervision_benchmark"
"yukimasano/self-label" -> "HobbitLong/PyContrast"
"yukimasano/self-label" -> "open-mmlab/OpenSelfSup"
"yukimasano/self-label" -> "facebookresearch/DeeperCluster"
"yukimasano/self-label" -> "chingyaoc/DCL"
"youngwanLEE/MPViT" -> "OliverRensu/Shunted-Transformer"
"youngwanLEE/MPViT" -> "youngwanLEE/VoV3D"
"youngwanLEE/MPViT" -> "hustvl/MIMDet"
"youngwanLEE/MPViT" -> "mlpc-ucsd/CoaT"
"youngwanLEE/MPViT" -> "microsoft/Focal-Transformer"
"youngwanLEE/MPViT" -> "youngwanLEE/rc-mae"
"youngwanLEE/MPViT" -> "dingmyu/davit" ["e"=1]
"youngwanLEE/MPViT" -> "cheerss/CrossFormer"
"PaddlePaddle/Paddle.js" -> "PaddlePaddle/Paddle-Lite"
"PaddlePaddle/Paddle.js" -> "PaddlePaddle/Serving" ["e"=1]
"PaddlePaddle/Paddle.js" -> "max-team/Mars" ["e"=1]
"PaddlePaddle/Paddle.js" -> "PaddlePaddle/X2Paddle"
"PaddlePaddle/Paddle.js" -> "PaddlePaddle/Paddle2ONNX"
"PaddlePaddle/Paddle.js" -> "PaddlePaddle/Paddle-Inference-Demo"
"PaddlePaddle/Paddle.js" -> "PaddlePaddle/PaddleScience"
"PaddlePaddle/Paddle.js" -> "xr2117/bean-mapping" ["e"=1]
"PaddlePaddle/Paddle.js" -> "PaddlePaddle/Paddle-Lite-Demo"
"PaddlePaddle/Paddle.js" -> "deepkolos/wxmp-tensorflow" ["e"=1]
"PaddlePaddle/Paddle.js" -> "lihang212010/Elasticsearch-ais" ["e"=1]
"PaddlePaddle/Paddle.js" -> "PaddlePaddle/PaddleSlim"
"PaddlePaddle/Paddle.js" -> "mazouri/kvcache" ["e"=1]
"PaddlePaddle/Paddle.js" -> "PaddlePaddle/community"
"PaddlePaddle/Paddle.js" -> "chaituan/fanqie_shop" ["e"=1]
"zuoqing1988/ZQCNN" -> "zeusees/HyperLandmark" ["e"=1]
"zuoqing1988/ZQCNN" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices" ["e"=1]
"zuoqing1988/ZQCNN" -> "biubug6/Face-Detector-1MB-with-landmark" ["e"=1]
"zuoqing1988/ZQCNN" -> "TencentYoutuResearch/FaceDetection-DSFD"
"zuoqing1988/ZQCNN" -> "ShiqiYu/libfacedetection"
"zuoqing1988/ZQCNN" -> "wywu/LAB" ["e"=1]
"zuoqing1988/ZQCNN" -> "moli232777144/mtcnn_ncnn" ["e"=1]
"zuoqing1988/ZQCNN" -> "Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB"
"zuoqing1988/ZQCNN" -> "seetafaceengine/SeetaFace2" ["e"=1]
"zuoqing1988/ZQCNN" -> "MirrorYuChen/ncnn_example" ["e"=1]
"zuoqing1988/ZQCNN" -> "hanson-young/nniefacelib" ["e"=1]
"zuoqing1988/ZQCNN" -> "guoqiangqi/PFLD" ["e"=1]
"zuoqing1988/ZQCNN" -> "Star-Clouds/CenterFace" ["e"=1]
"zuoqing1988/ZQCNN" -> "ZhaoJ9014/face.evoLVe.PyTorch" ["e"=1]
"zuoqing1988/ZQCNN" -> "kpzhang93/MTCNN_face_detection_alignment"
"PatrickHua/SimSiam" -> "facebookresearch/simsiam"
"PatrickHua/SimSiam" -> "lucidrains/byol-pytorch"
"PatrickHua/SimSiam" -> "facebookresearch/swav"
"PatrickHua/SimSiam" -> "facebookresearch/barlowtwins"
"PatrickHua/SimSiam" -> "sthalles/PyTorch-BYOL"
"PatrickHua/SimSiam" -> "sthalles/SimCLR"
"PatrickHua/SimSiam" -> "facebookresearch/moco"
"PatrickHua/SimSiam" -> "HobbitLong/SupContrast"
"PatrickHua/SimSiam" -> "google-research/simclr"
"PatrickHua/SimSiam" -> "HobbitLong/PyContrast"
"PatrickHua/SimSiam" -> "taoyang1122/pytorch-SimSiam"
"PatrickHua/SimSiam" -> "open-mmlab/OpenSelfSup"
"PatrickHua/SimSiam" -> "facebookresearch/moco-v3"
"PatrickHua/SimSiam" -> "HobbitLong/CMC"
"PatrickHua/SimSiam" -> "WXinlong/DenseCL"
"lightly-ai/lightly" -> "facebookresearch/vissl"
"lightly-ai/lightly" -> "vturrisi/solo-learn"
"lightly-ai/lightly" -> "facebookresearch/barlowtwins"
"lightly-ai/lightly" -> "facebookresearch/dino"
"lightly-ai/lightly" -> "lucidrains/byol-pytorch"
"lightly-ai/lightly" -> "open-mmlab/mmselfsup"
"lightly-ai/lightly" -> "libffcv/ffcv"
"lightly-ai/lightly" -> "facebookresearch/AugLy"
"lightly-ai/lightly" -> "kornia/kornia"
"lightly-ai/lightly" -> "KevinMusgrave/pytorch-metric-learning"
"lightly-ai/lightly" -> "facebookresearch/swav"
"lightly-ai/lightly" -> "arogozhnikov/einops"
"lightly-ai/lightly" -> "PatrickHua/SimSiam"
"lightly-ai/lightly" -> "HobbitLong/SupContrast"
"lightly-ai/lightly" -> "jason718/awesome-self-supervised-learning"
"open-mmlab/labelbee-client" -> "open-mmlab/labelbee"
"open-mmlab/labelbee-client" -> "open-mmlab/mmfewshot"
"open-mmlab/labelbee-client" -> "opendatalab/opendatalab-python-sdk"
"open-mmlab/labelbee-client" -> "open-mmlab/MMGEN-FaceStylor"
"open-mmlab/labelbee-client" -> "opendatalab/dsdl-docs"
"open-mmlab/labelbee-client" -> "opendatalab/label-u"
"open-mmlab/labelbee-client" -> "open-mmlab/mim"
"open-mmlab/labelbee-client" -> "open-mmlab/mmeval"
"open-mmlab/labelbee-client" -> "open-mmlab/cocoapi"
"open-mmlab/labelbee-client" -> "open-mmlab/mmhuman3d" ["e"=1]
"open-mmlab/labelbee-client" -> "open-mmlab/pytorch_sphinx_theme"
"open-mmlab/labelbee-client" -> "jshilong/GroupRCNN"
"open-mmlab/labelbee-client" -> "open-mmlab/mmrazor"
"open-mmlab/labelbee-client" -> "open-mmlab/pre-commit-hooks"
"open-mmlab/labelbee-client" -> "open-mmlab/mmdeploy"
"albu/albumentations" -> "mdbloice/Augmentor"
"albu/albumentations" -> "BloodAxe/pytorch-toolbelt"
"albu/albumentations" -> "Cadene/pretrained-models.pytorch"
"albu/albumentations" -> "catalyst-team/catalyst"
"albu/albumentations" -> "qubvel/segmentation_models"
"albu/albumentations" -> "qubvel/segmentation_models.pytorch"
"albu/albumentations" -> "aleju/imgaug"
"albu/albumentations" -> "lukemelas/EfficientNet-PyTorch"
"albu/albumentations" -> "facebookresearch/maskrcnn-benchmark"
"albu/albumentations" -> "bermanmaxim/LovaszSoftmax" ["e"=1]
"albu/albumentations" -> "roytseng-tw/Detectron.pytorch"
"albu/albumentations" -> "meetshah1995/pytorch-semseg" ["e"=1]
"albu/albumentations" -> "NVIDIA/apex"
"albu/albumentations" -> "williamFalcon/pytorch-lightning"
"albu/albumentations" -> "osmr/imgclsmob"
"titu1994/Keras-Classification-Models" -> "titu1994/DenseNet"
"titu1994/Keras-Classification-Models" -> "titu1994/keras-squeeze-excite-network" ["e"=1]
"titu1994/Keras-Classification-Models" -> "titu1994/Fully-Connected-DenseNets-Semantic-Segmentation" ["e"=1]
"titu1994/Keras-Classification-Models" -> "titu1994/Snapshot-Ensembles" ["e"=1]
"titu1994/Keras-Classification-Models" -> "titu1994/Keras-NASNet"
"titu1994/Keras-Classification-Models" -> "WeitaoVan/L-GM-loss" ["e"=1]
"kevin28520/My-TensorFlow-tutorials" -> "ycszen/TensorFlowLaboratory"
"kevin28520/My-TensorFlow-tutorials" -> "machrisaa/tensorflow-vgg"
"kevin28520/My-TensorFlow-tutorials" -> "leihe001/tensorflow-vgg"
"kevin28520/My-TensorFlow-tutorials" -> "endernewton/tf-faster-rcnn"
"kevin28520/My-TensorFlow-tutorials" -> "nilboy/tensorflow-yolo"
"kevin28520/My-TensorFlow-tutorials" -> "wenxinxu/resnet-in-tensorflow"
"kevin28520/My-TensorFlow-tutorials" -> "ry/tensorflow-resnet"
"kevin28520/My-TensorFlow-tutorials" -> "yongyehuang/Tensorflow-Tutorial" ["e"=1]
"kevin28520/My-TensorFlow-tutorials" -> "ypwhs/dogs_vs_cats" ["e"=1]
"kevin28520/My-TensorFlow-tutorials" -> "wagamamaz/tensorlayer-tricks" ["e"=1]
"kevin28520/My-TensorFlow-tutorials" -> "smallcorgi/Faster-RCNN_TF"
"kevin28520/My-TensorFlow-tutorials" -> "CharlesShang/TFFRCNN"
"kevin28520/My-TensorFlow-tutorials" -> "kratzert/finetune_alexnet_with_tensorflow"
"kevin28520/My-TensorFlow-tutorials" -> "taki0112/Densenet-Tensorflow"
"kevin28520/My-TensorFlow-tutorials" -> "balancap/SSD-Tensorflow"
"maozezhong/focal_loss_multi_class" -> "Umi-you/FocalLoss"
"maozezhong/focal_loss_multi_class" -> "mkocabas/focal-loss-keras"
"maozezhong/focal_loss_multi_class" -> "umbertogriffo/focal-loss-keras"
"fudan-zvg/SETR" -> "SwinTransformer/Swin-Transformer-Semantic-Segmentation"
"fudan-zvg/SETR" -> "gupta-abhay/setr-pytorch"
"fudan-zvg/SETR" -> "rstrudel/segmenter"
"fudan-zvg/SETR" -> "NVlabs/SegFormer"
"fudan-zvg/SETR" -> "facebookresearch/MaskFormer"
"fudan-zvg/SETR" -> "tfzhou/ContrastiveSeg"
"fudan-zvg/SETR" -> "openseg-group/openseg.pytorch" ["e"=1]
"fudan-zvg/SETR" -> "Beckschen/TransUNet" ["e"=1]
"fudan-zvg/SETR" -> "whai362/PVT"
"fudan-zvg/SETR" -> "speedinghzl/CCNet" ["e"=1]
"fudan-zvg/SETR" -> "920232796/SETR-pytorch"
"fudan-zvg/SETR" -> "open-mmlab/mmsegmentation"
"fudan-zvg/SETR" -> "jeya-maria-jose/Medical-Transformer" ["e"=1]
"fudan-zvg/SETR" -> "lxtGH/DecoupleSegNets" ["e"=1]
"fudan-zvg/SETR" -> "csrhddlam/axial-deeplab"
"gupta-abhay/setr-pytorch" -> "920232796/SETR-pytorch"
"gupta-abhay/setr-pytorch" -> "fudan-zvg/SETR"
"gupta-abhay/setr-pytorch" -> "xieenze/Trans2Seg" ["e"=1]
"kyamagu/bbox-annotator" -> "cvondrick/torch-starter" ["e"=1]
"circulosmeos/gdown.pl" -> "wkentaro/gdown"
"circulosmeos/gdown.pl" -> "tanaikech/goodls"
"circulosmeos/gdown.pl" -> "GitHub30/gdrive.sh"
"circulosmeos/gdown.pl" -> "ThibaultGROUEIX/AtlasNet" ["e"=1]
"circulosmeos/gdown.pl" -> "facebookresearch/DPR" ["e"=1]
"circulosmeos/gdown.pl" -> "dorarad/gansformer" ["e"=1]
"tanaikech/goodls" -> "tanaikech/ggsrun" ["e"=1]
"tanaikech/goodls" -> "SahilKr24/kuebikobot" ["e"=1]
"AITTSMD/MTCNN-Tensorflow" -> "kpzhang93/MTCNN_face_detection_alignment"
"AITTSMD/MTCNN-Tensorflow" -> "Seanlinx/mtcnn" ["e"=1]
"AITTSMD/MTCNN-Tensorflow" -> "CongWeilin/mtcnn-caffe" ["e"=1]
"AITTSMD/MTCNN-Tensorflow" -> "LeslieZhoa/tensorflow-MTCNN" ["e"=1]
"AITTSMD/MTCNN-Tensorflow" -> "ipazc/mtcnn"
"AITTSMD/MTCNN-Tensorflow" -> "dlunion/mtcnn" ["e"=1]
"AITTSMD/MTCNN-Tensorflow" -> "shanren7/real_time_face_recognition" ["e"=1]
"AITTSMD/MTCNN-Tensorflow" -> "davidsandberg/facenet"
"AITTSMD/MTCNN-Tensorflow" -> "wy1iu/sphereface" ["e"=1]
"AITTSMD/MTCNN-Tensorflow" -> "TencentYoutuResearch/FaceDetection-DSFD"
"AITTSMD/MTCNN-Tensorflow" -> "auroua/InsightFace_TF" ["e"=1]
"AITTSMD/MTCNN-Tensorflow" -> "zuoqing1988/ZQCNN"
"AITTSMD/MTCNN-Tensorflow" -> "ydwen/caffe-face" ["e"=1]
"AITTSMD/MTCNN-Tensorflow" -> "AlphaQi/MTCNN-light" ["e"=1]
"AITTSMD/MTCNN-Tensorflow" -> "moli232777144/mtcnn_ncnn" ["e"=1]
"ZFTurbo/Weighted-Boxes-Fusion" -> "rwightman/efficientdet-pytorch"
"ZFTurbo/Weighted-Boxes-Fusion" -> "qubvel/ttach"
"ZFTurbo/Weighted-Boxes-Fusion" -> "joe-siyuan-qiao/DetectoRS"
"ZFTurbo/Weighted-Boxes-Fusion" -> "BloodAxe/pytorch-toolbelt"
"ZFTurbo/Weighted-Boxes-Fusion" -> "obss/sahi"
"ZFTurbo/Weighted-Boxes-Fusion" -> "WongKinYiu/ScaledYOLOv4"
"ZFTurbo/Weighted-Boxes-Fusion" -> "hhaAndroid/mmdetection-mini"
"ZFTurbo/Weighted-Boxes-Fusion" -> "shinya7y/UniverseNet"
"ZFTurbo/Weighted-Boxes-Fusion" -> "xingyizhou/CenterNet2"
"ZFTurbo/Weighted-Boxes-Fusion" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"ZFTurbo/Weighted-Boxes-Fusion" -> "WongKinYiu/yolor"
"ZFTurbo/Weighted-Boxes-Fusion" -> "trent-b/iterative-stratification"
"ZFTurbo/Weighted-Boxes-Fusion" -> "PeizeSun/SparseR-CNN"
"ZFTurbo/Weighted-Boxes-Fusion" -> "SwinTransformer/Swin-Transformer-Object-Detection"
"ZFTurbo/Weighted-Boxes-Fusion" -> "albumentations-team/albumentations"
"amusi/CVPR2019-Code" -> "extreme-assistant/cvpr2019"
"amusi/CVPR2019-Code" -> "amusi/CVPR2020-Code"
"amusi/CVPR2019-Code" -> "extreme-assistant/iccv2019"
"amusi/CVPR2019-Code" -> "amusi/PyTorch-From-Zero-To-One" ["e"=1]
"amusi/CVPR2019-Code" -> "amusi/ECCV2020-Code"
"amusi/CVPR2019-Code" -> "amusi/daily-paper-computer-vision"
"amusi/CVPR2019-Code" -> "yihui-he/KL-Loss"
"amusi/CVPR2019-Code" -> "liuwei16/CSP" ["e"=1]
"amusi/CVPR2019-Code" -> "amusi/TensorFlow-From-Zero-To-One" ["e"=1]
"amusi/CVPR2019-Code" -> "princeton-vl/CornerNet-Lite"
"amusi/CVPR2019-Code" -> "lzx1413/PytorchSSD"
"amusi/CVPR2019-Code" -> "implus/PytorchInsight" ["e"=1]
"amusi/CVPR2019-Code" -> "zhaoweicai/Detectron-Cascade-RCNN"
"amusi/CVPR2019-Code" -> "princeton-vl/CornerNet"
"amusi/CVPR2019-Code" -> "xvjiarui/GCNet" ["e"=1]
"amusi/ECCV2020-Code" -> "amusi/CVPR2020-Code"
"amusi/ECCV2020-Code" -> "extreme-assistant/CVPR2020-Paper-Code-Interpretation"
"amusi/ECCV2020-Code" -> "extreme-assistant/iccv2019"
"amusi/ECCV2020-Code" -> "amusi/daily-paper-computer-vision"
"amusi/ECCV2020-Code" -> "extreme-assistant/ICCV2021-Paper-Code-Interpretation"
"amusi/ECCV2020-Code" -> "amusi/ICCV2021-Papers-with-Code"
"amusi/ECCV2020-Code" -> "Sophia-11/Awesome-CVPR-Paper"
"amusi/ECCV2020-Code" -> "amusi/CVPR2021-Papers-with-Code"
"amusi/ECCV2020-Code" -> "extreme-assistant/CVPR2021-Paper-Code-Interpretation"
"amusi/ECCV2020-Code" -> "amusi/CVPR2019-Code"
"amusi/ECCV2020-Code" -> "aim-uofa/AdelaiDet"
"amusi/ECCV2020-Code" -> "ming71/CV_PaperDaily"
"amusi/ECCV2020-Code" -> "zhanghang1989/ResNeSt"
"amusi/ECCV2020-Code" -> "dk-liang/Awesome-Visual-Transformer"
"amusi/ECCV2020-Code" -> "huawei-noah/ghostnet"
"ethereon/caffe-tensorflow" -> "ppwwyyxx/tensorpack"
"ethereon/caffe-tensorflow" -> "ry/tensorflow-resnet"
"ethereon/caffe-tensorflow" -> "rbgirshick/py-faster-rcnn"
"ethereon/caffe-tensorflow" -> "weiliu89/caffe"
"ethereon/caffe-tensorflow" -> "KaimingHe/deep-residual-networks"
"ethereon/caffe-tensorflow" -> "Microsoft/MMdnn"
"ethereon/caffe-tensorflow" -> "CharlesShang/FastMaskRCNN"
"ethereon/caffe-tensorflow" -> "DeepScale/SqueezeNet"
"ethereon/caffe-tensorflow" -> "ysh329/deep-learning-model-convertor"
"ethereon/caffe-tensorflow" -> "shelhamer/fcn.berkeleyvision.org"
"ethereon/caffe-tensorflow" -> "MarvinTeichmann/tensorflow-fcn" ["e"=1]
"ethereon/caffe-tensorflow" -> "smallcorgi/Faster-RCNN_TF"
"ethereon/caffe-tensorflow" -> "machrisaa/tensorflow-vgg"
"ethereon/caffe-tensorflow" -> "daijifeng001/R-FCN"
"ethereon/caffe-tensorflow" -> "facebook/fb.resnet.torch"
"gaohuang/MSDNet" -> "kalviny/MSDNet-PyTorch" ["e"=1]
"gaohuang/MSDNet" -> "ShichenLiu/CondenseNet"
"gaohuang/MSDNet" -> "avirambh/MSDNet-GCN"
"gaohuang/MSDNet" -> "yangle15/RANet-pytorch" ["e"=1]
"gaohuang/MSDNet" -> "cypw/DPNs" ["e"=1]
"gaohuang/MSDNet" -> "SimJeg/FC-DenseNet" ["e"=1]
"gaohuang/MSDNet" -> "ucbdrive/skipnet" ["e"=1]
"gaohuang/MSDNet" -> "gpleiss/efficient_densenet_pytorch"
"gaohuang/MSDNet" -> "felixgwu/img_classification_pk_pytorch"
"gaohuang/MSDNet" -> "szq0214/DSOD"
"gaohuang/MSDNet" -> "happynear/NormFace" ["e"=1]
"lars76/kmeans-anchor-boxes" -> "PaulChongPeng/darknet"
"lars76/kmeans-anchor-boxes" -> "ruinmessi/ASFF"
"lars76/kmeans-anchor-boxes" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"lars76/kmeans-anchor-boxes" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"lars76/kmeans-anchor-boxes" -> "princeton-vl/CornerNet"
"lars76/kmeans-anchor-boxes" -> "PengyiZhang/SlimYOLOv3" ["e"=1]
"lars76/kmeans-anchor-boxes" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"lars76/kmeans-anchor-boxes" -> "fsx950223/mobilenetv2-yolov3"
"lars76/kmeans-anchor-boxes" -> "Stinky-Tofu/Stronger-yolo"
"lars76/kmeans-anchor-boxes" -> "ruinmessi/RFBNet"
"lars76/kmeans-anchor-boxes" -> "qijiezhao/M2Det"
"lars76/kmeans-anchor-boxes" -> "princeton-vl/CornerNet-Lite"
"lars76/kmeans-anchor-boxes" -> "guoruoqian/DetNet_pytorch"
"lars76/kmeans-anchor-boxes" -> "ChenYingpeng/caffe-yolov3"
"lars76/kmeans-anchor-boxes" -> "coldlarry/YOLOv3-complete-pruning" ["e"=1]
"fidler-lab/curve-gcn" -> "fidler-lab/polyrnn-pp-pytorch"
"fidler-lab/curve-gcn" -> "fidler-lab/polyrnn-pp"
"fidler-lab/curve-gcn" -> "zju3dv/snake"
"fidler-lab/curve-gcn" -> "scaelles/DEXTR-PyTorch"
"fidler-lab/curve-gcn" -> "dmarcosg/DSAC"
"fidler-lab/curve-gcn" -> "xieenze/PolarMask"
"fidler-lab/curve-gcn" -> "nv-tlabs/STEAL" ["e"=1]
"fidler-lab/curve-gcn" -> "openseg-group/openseg.pytorch" ["e"=1]
"fidler-lab/curve-gcn" -> "AlexMa011/pytorch-polygon-rnn"
"fidler-lab/curve-gcn" -> "zhanghang1989/PyTorch-Encoding" ["e"=1]
"fidler-lab/curve-gcn" -> "speedinghzl/pytorch-segmentation-toolbox" ["e"=1]
"fidler-lab/curve-gcn" -> "mng827/curve-gcn-cardiac-mr"
"fidler-lab/curve-gcn" -> "microsoft/RepPoints"
"fidler-lab/curve-gcn" -> "JudyYe/zero-shot-gcn" ["e"=1]
"fidler-lab/curve-gcn" -> "xvjiarui/GCNet" ["e"=1]
"fidler-lab/polyrnn-pp" -> "fidler-lab/polyrnn-pp-pytorch"
"fidler-lab/polyrnn-pp" -> "AlexMa011/pytorch-polygon-rnn"
"fidler-lab/polyrnn-pp" -> "fidler-lab/curve-gcn"
"fidler-lab/polyrnn-pp" -> "scaelles/DEXTR-PyTorch"
"fidler-lab/polyrnn-pp" -> "Angzz/awesome-panoptic-segmentation" ["e"=1]
"fidler-lab/polyrnn-pp" -> "dmarcosg/DSAC"
"fidler-lab/polyrnn-pp" -> "nv-tlabs/STEAL" ["e"=1]
"yitu-opensource/T2T-ViT" -> "whai362/PVT"
"yitu-opensource/T2T-ViT" -> "facebookresearch/deit"
"yitu-opensource/T2T-ViT" -> "sail-sg/volo"
"yitu-opensource/T2T-ViT" -> "zihangJiang/TokenLabeling"
"yitu-opensource/T2T-ViT" -> "jeonsworld/ViT-pytorch"
"yitu-opensource/T2T-ViT" -> "dk-liang/Awesome-Visual-Transformer"
"yitu-opensource/T2T-ViT" -> "lucidrains/bottleneck-transformer-pytorch"
"yitu-opensource/T2T-ViT" -> "fundamentalvision/Deformable-DETR"
"yitu-opensource/T2T-ViT" -> "fudan-zvg/SETR"
"yitu-opensource/T2T-ViT" -> "hila-chefer/Transformer-Explainability"
"yitu-opensource/T2T-ViT" -> "raoyongming/DynamicViT"
"yitu-opensource/T2T-ViT" -> "d-li14/involution"
"yitu-opensource/T2T-ViT" -> "google-research/vision_transformer"
"yitu-opensource/T2T-ViT" -> "sail-sg/poolformer"
"yitu-opensource/T2T-ViT" -> "facebookresearch/convit"
"LayneH/GreenMIM" -> "junchen14/LoMaR"
"kastnerkyle/deform-conv" -> "DHZS/tf-deformable-conv-layer"
"kastnerkyle/deform-conv" -> "Zardinality/TF_Deformable_Net"
"kastnerkyle/deform-conv" -> "Zardinality/TF-deformable-conv"
"kastnerkyle/deform-conv" -> "ChunhuanLin/deform_conv_pytorch"
"kastnerkyle/deform-conv" -> "oeway/pytorch-deform-conv"
"facebookresearch/convit" -> "yitu-opensource/T2T-ViT"
"facebookresearch/convit" -> "sail-sg/volo"
"facebookresearch/convit" -> "facebookresearch/xcit"
"facebookresearch/convit" -> "rishikksh20/convolution-vision-transformers"
"facebookresearch/convit" -> "facebookresearch/LeViT"
"facebookresearch/convit" -> "zihangJiang/TokenLabeling"
"facebookresearch/convit" -> "Meituan-AutoML/Twins"
"facebookresearch/convit" -> "microsoft/vision-longformer"
"facebookresearch/convit" -> "wofmanaf/ResT"
"facebookresearch/convit" -> "chinhsuanwu/coatnet-pytorch"
"facebookresearch/convit" -> "microsoft/SimMIM"
"facebookresearch/convit" -> "raoyongming/DynamicViT"
"facebookresearch/convit" -> "microsoft/CvT"
"facebookresearch/convit" -> "facebookresearch/deit"
"facebookresearch/convit" -> "naver-ai/pit" ["e"=1]
"Scalsol/RepPointsV2" -> "microsoft/RepPoints"
"Scalsol/RepPointsV2" -> "Megvii-BaseDetection/BorderDet"
"Scalsol/RepPointsV2" -> "justimyhxu/Dense-RepPoints"
"Scalsol/RepPointsV2" -> "hyz-xmaster/VarifocalNet"
"Scalsol/RepPointsV2" -> "PeizeSun/OneNet"
"Scalsol/RepPointsV2" -> "kkhoot/PAA"
"Scalsol/RepPointsV2" -> "hyz-xmaster/swa_object_detection"
"Scalsol/RepPointsV2" -> "implus/GFocal"
"Scalsol/RepPointsV2" -> "microsoft/RelationNet2"
"Scalsol/RepPointsV2" -> "implus/GFocalV2"
"Scalsol/RepPointsV2" -> "fcjian/TOOD"
"Scalsol/RepPointsV2" -> "sfzhang15/ATSS"
"dog-qiuqiu/Yolo-FastestV2" -> "dog-qiuqiu/Yolo-Fastest"
"dog-qiuqiu/Yolo-FastestV2" -> "dog-qiuqiu/FastestDet"
"dog-qiuqiu/Yolo-FastestV2" -> "hpc203/yolo-fastestv2-opencv"
"dog-qiuqiu/Yolo-FastestV2" -> "ppogg/YOLOv5-Lite" ["e"=1]
"dog-qiuqiu/Yolo-FastestV2" -> "dog-qiuqiu/MobileNet-Yolo"
"dog-qiuqiu/Yolo-FastestV2" -> "dog-qiuqiu/Ultralight-SimplePose" ["e"=1]
"dog-qiuqiu/Yolo-FastestV2" -> "RangiLyu/nanodet"
"dog-qiuqiu/Yolo-FastestV2" -> "cmdbug/YOLOv5_NCNN" ["e"=1]
"dog-qiuqiu/Yolo-FastestV2" -> "ZJU-lishuang/yolov5_prune" ["e"=1]
"dog-qiuqiu/Yolo-FastestV2" -> "Syencil/mobile-yolov5-pruning-distillation" ["e"=1]
"dog-qiuqiu/Yolo-FastestV2" -> "deepcam-cn/yolov5-face"
"dog-qiuqiu/Yolo-FastestV2" -> "jizhishutong/YOLOU"
"dog-qiuqiu/Yolo-FastestV2" -> "pnnx/pnnx" ["e"=1]
"dog-qiuqiu/Yolo-FastestV2" -> "midasklr/yolov5prune" ["e"=1]
"dog-qiuqiu/Yolo-FastestV2" -> "nihui/opencv-mobile" ["e"=1]
"sdoria/SimpleSelfAttention" -> "warner-benjamin/fastxtend" ["e"=1]
"ucas-vg/TinyBenchmark" -> "kuanhungchen/awesome-tiny-object-detection"
"ucas-vg/TinyBenchmark" -> "gmayday1997/SmallObjectAugmentation"
"ucas-vg/TinyBenchmark" -> "ucas-vg/TOV_mmdetection"
"ucas-vg/TinyBenchmark" -> "ucas-vg/Effective-Fusion-Factor"
"ucas-vg/TinyBenchmark" -> "ispc-lab/SmallObjectDetectionList"
"ucas-vg/TinyBenchmark" -> "ruinmessi/ASFF"
"ucas-vg/TinyBenchmark" -> "sfzhang15/ATSS"
"ucas-vg/TinyBenchmark" -> "joe-siyuan-qiao/DetectoRS"
"ucas-vg/TinyBenchmark" -> "jshilong/SEPC"
"ucas-vg/TinyBenchmark" -> "Megvii-BaseDetection/DeFCN"
"ucas-vg/TinyBenchmark" -> "dingjiansw101/AerialDetection" ["e"=1]
"ucas-vg/TinyBenchmark" -> "vaesl/LRF-Net"
"ucas-vg/TinyBenchmark" -> "Purkialo/CrowdDet" ["e"=1]
"ucas-vg/TinyBenchmark" -> "fyangneil/Clustered-Object-Detection-in-Aerial-Image"
"ucas-vg/TinyBenchmark" -> "arashwan/matrixnet"
"TylerYep/torchinfo" -> "sksq96/pytorch-summary"
"TylerYep/torchinfo" -> "PyTorchLightning/metrics"
"TylerYep/torchinfo" -> "arogozhnikov/einops"
"TylerYep/torchinfo" -> "ashleve/lightning-hydra-template"
"TylerYep/torchinfo" -> "Stonesjtu/pytorch_memlab"
"TylerYep/torchinfo" -> "xwying/torchshow" ["e"=1]
"TylerYep/torchinfo" -> "szagoruyko/pytorchviz"
"TylerYep/torchinfo" -> "kornia/kornia"
"TylerYep/torchinfo" -> "IgorSusmelj/pytorch-styleguide"
"TylerYep/torchinfo" -> "pytorch/captum"
"TylerYep/torchinfo" -> "sovrasov/flops-counter.pytorch"
"TylerYep/torchinfo" -> "albumentations-team/albumentations"
"TylerYep/torchinfo" -> "Lyken17/pytorch-OpCounter"
"TylerYep/torchinfo" -> "jettify/pytorch-optimizer"
"TylerYep/torchinfo" -> "huggingface/accelerate" ["e"=1]
"kemaloksuz/ObjectDetectionImbalance" -> "sfzhang15/ATSS"
"kemaloksuz/ObjectDetectionImbalance" -> "ruinmessi/ASFF"
"kemaloksuz/ObjectDetectionImbalance" -> "tianzhi0549/FCOS"
"kemaloksuz/ObjectDetectionImbalance" -> "zhangxiaosong18/FreeAnchor"
"kemaloksuz/ObjectDetectionImbalance" -> "TuSimple/simpledet"
"kemaloksuz/ObjectDetectionImbalance" -> "yihui-he/KL-Loss"
"kemaloksuz/ObjectDetectionImbalance" -> "princeton-vl/CornerNet"
"kemaloksuz/ObjectDetectionImbalance" -> "microsoft/RepPoints"
"kemaloksuz/ObjectDetectionImbalance" -> "Duankaiwen/CenterNet"
"kemaloksuz/ObjectDetectionImbalance" -> "dbolya/tide"
"kemaloksuz/ObjectDetectionImbalance" -> "joe-siyuan-qiao/DetectoRS"
"kemaloksuz/ObjectDetectionImbalance" -> "ChenJoya/sampling-free" ["e"=1]
"kemaloksuz/ObjectDetectionImbalance" -> "ming71/mmdetection-annotated"
"kemaloksuz/ObjectDetectionImbalance" -> "Sense-X/TSD"
"kemaloksuz/ObjectDetectionImbalance" -> "implus/GFocalV2"
"xingyizhou/CenterNet2" -> "megvii-model/YOLOF"
"xingyizhou/CenterNet2" -> "PeizeSun/SparseR-CNN"
"xingyizhou/CenterNet2" -> "FateScript/CenterNet-better"
"xingyizhou/CenterNet2" -> "xingyizhou/CenterTrack" ["e"=1]
"xingyizhou/CenterNet2" -> "implus/GFocalV2"
"xingyizhou/CenterNet2" -> "WongKinYiu/ScaledYOLOv4"
"xingyizhou/CenterNet2" -> "xingyizhou/CenterNet"
"xingyizhou/CenterNet2" -> "PeizeSun/OneNet"
"xingyizhou/CenterNet2" -> "sfzhang15/ATSS"
"xingyizhou/CenterNet2" -> "tianweiy/CenterPoint" ["e"=1]
"xingyizhou/CenterNet2" -> "aim-uofa/AdelaiDet"
"xingyizhou/CenterNet2" -> "CaoWGG/TensorRT-CenterNet"
"xingyizhou/CenterNet2" -> "Megvii-BaseDetection/DeFCN"
"xingyizhou/CenterNet2" -> "WXinlong/SOLO"
"xingyizhou/CenterNet2" -> "implus/GFocal"
"zihangJiang/TokenLabeling" -> "sail-sg/volo"
"zihangJiang/TokenLabeling" -> "raoyongming/DynamicViT"
"zihangJiang/TokenLabeling" -> "yitu-opensource/T2T-ViT"
"zihangJiang/TokenLabeling" -> "hila-chefer/Transformer-Explainability"
"zihangJiang/TokenLabeling" -> "zhoudaquan/Refiner_ViT"
"zihangJiang/TokenLabeling" -> "Andrew-Qibin/VisionPermutator"
"zihangJiang/TokenLabeling" -> "Meituan-AutoML/Twins"
"zihangJiang/TokenLabeling" -> "zhoudaquan/dvit_repo"
"zihangJiang/TokenLabeling" -> "facebookresearch/LeViT"
"zihangJiang/TokenLabeling" -> "facebookresearch/deit"
"zihangJiang/TokenLabeling" -> "facebookresearch/convit"
"EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi" -> "EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi"
"EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi" -> "EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10"
"EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi" -> "google-coral/examples-camera" ["e"=1]
"EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi" -> "tensorflow/examples" ["e"=1]
"EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi" -> "hunglc007/tensorflow-yolov4-tflite"
"EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi" -> "PINTO0309/Tensorflow-bin"
"EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi" -> "lhelontra/tensorflow-on-arm"
"EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi" -> "margaretmz/awesome-tensorflow-lite" ["e"=1]
"EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi" -> "jiteshsaini/robotics-level-4"
"EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi" -> "theAIGuysCode/tensorflow-yolov4-tflite" ["e"=1]
"EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi" -> "yehengchen/Object-Detection-and-Tracking" ["e"=1]
"EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi" -> "ahmetozlu/tensorflow_object_counting_api" ["e"=1]
"EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi" -> "PINTO0309/PINTO_model_zoo"
"EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi" -> "dusty-nv/jetson-inference" ["e"=1]
"EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi" -> "zzh8829/yolov3-tf2"
"PaddlePaddle/Paddle-Lite-Demo" -> "PaddlePaddle/Paddle-Lite"
"PaddlePaddle/Paddle-Lite-Demo" -> "PaddlePaddle/Serving" ["e"=1]
"PaddlePaddle/Paddle-Lite-Demo" -> "PaddlePaddle/Paddle-Inference-Demo"
"PaddlePaddle/Paddle-Lite-Demo" -> "PaddlePaddle/X2Paddle"
"PaddlePaddle/Paddle-Lite-Demo" -> "PaddlePaddle/PaddleSlim"
"PaddlePaddle/Paddle-Lite-Demo" -> "PaddlePaddle/Paddle2ONNX"
"PaddlePaddle/Paddle-Lite-Demo" -> "PaddlePaddle/LiteKit"
"PaddlePaddle/Paddle-Lite-Demo" -> "PaddlePaddle/hapi"
"PaddlePaddle/Paddle-Lite-Demo" -> "PaddlePaddle/benchmark"
"PaddlePaddle/Paddle-Lite-Demo" -> "nihui/opencv-mobile" ["e"=1]
"PaddlePaddle/Paddle-Lite-Demo" -> "PaddlePaddle/AutoDL"
"PaddlePaddle/Paddle-Lite-Demo" -> "PaddlePaddle/FleetX" ["e"=1]
"PaddlePaddle/Paddle-Lite-Demo" -> "ninetailskim/DodgeFace" ["e"=1]
"PaddlePaddle/Paddle-Lite-Demo" -> "PaddlePaddle/PaddleX"
"PaddlePaddle/Paddle-Lite-Demo" -> "cmdbug/YOLOv5_NCNN" ["e"=1]
"PaddlePaddle/PaddleYOLO" -> "PaddlePaddle/Paddle3D"
"PaddlePaddle/PaddleYOLO" -> "PaddlePaddle/PASSL"
"Lyken17/pytorch-memonger" -> "Lyken17/Efficient-PyTorch"
"Lyken17/pytorch-memonger" -> "mapillary/inplace_abn" ["e"=1]
"Lyken17/pytorch-memonger" -> "mit-han-lab/torchprofile" ["e"=1]
"Lyken17/pytorch-memonger" -> "vacancy/Synchronized-BatchNorm-PyTorch" ["e"=1]
"Lyken17/pytorch-memonger" -> "oeway/pytorch-deform-conv"
"Lyken17/pytorch-memonger" -> "tanglang96/DataLoaders_DALI"
"Lyken17/pytorch-memonger" -> "lartpang/PyTorchTricks"
"Lyken17/pytorch-memonger" -> "Oldpan/Pytorch-Memory-Utils"
"Okery/PyTorch-Simple-MaskRCNN" -> "jytime/Mask_RCNN_Pytorch"
"Okery/PyTorch-Simple-MaskRCNN" -> "buhuixiezuowendelihua/TorchVision_Maskrcnn"
"Okery/PyTorch-Simple-MaskRCNN" -> "wannabeOG/Mask-RCNN"
"Okery/PyTorch-Simple-MaskRCNN" -> "multimodallearning/pytorch-mask-rcnn"
"Okery/PyTorch-Simple-MaskRCNN" -> "darolt/mask_rcnn"
"bbrattoli/JigsawPuzzlePytorch" -> "MehdiNoroozi/JigsawPuzzleSolver"
"bbrattoli/JigsawPuzzlePytorch" -> "gidariss/FeatureLearningRotNet"
"bbrattoli/JigsawPuzzlePytorch" -> "amobiny/Self-Supervised_Jigsaw_Puzzle"
"bbrattoli/JigsawPuzzlePytorch" -> "philiptheother/FeatureDecoupling"
"fanq15/caffe_to_torch_to_pytorch" -> "marvis/pytorch-caffe"
"fanq15/caffe_to_torch_to_pytorch" -> "ycszen/pytorch-ss" ["e"=1]
"marvis/pytorch-caffe" -> "vadimkantorov/caffemodel2pytorch"
"marvis/pytorch-caffe" -> "fanq15/caffe_to_torch_to_pytorch"
"marvis/pytorch-caffe" -> "marvis/pytorch-caffe-darknet-convert"
"marvis/pytorch-caffe" -> "longcw/pytorch2caffe"
"marvis/pytorch-caffe" -> "jcjohnson/pytorch-vgg"
"marvis/pytorch-caffe" -> "CuriousCat-7/Caffe_torch_pytorch_converter"
"marvis/pytorch-caffe" -> "lzx1413/PytorchSSD"
"open-mmlab/mmeval" -> "jshilong/GroupRCNN"
"open-mmlab/mmeval" -> "open-mmlab/mmengine"
"open-mmlab/mmeval" -> "open-mmlab/mim"
"open-mmlab/mmeval" -> "open-mmlab/playground"
"open-mmlab/mmeval" -> "open-mmlab/mmfewshot"
"open-mmlab/mmeval" -> "open-mmlab/ecosystem"
"open-mmlab/mmeval" -> "open-mmlab/mmyolo"
"open-mmlab/mmeval" -> "open-mmlab/mmrazor"
"open-mmlab/mmeval" -> "open-mmlab/awesome-vit"
"open-mmlab/mmeval" -> "open-mmlab/MMGEN-FaceStylor"
"open-mmlab/mmeval" -> "RangiLyu/llama.mmengine"
"Lyken17/Efficient-PyTorch" -> "tanglang96/DataLoaders_DALI"
"Lyken17/Efficient-PyTorch" -> "Fangyh09/Image2LMDB"
"Lyken17/Efficient-PyTorch" -> "lartpang/PyTorchTricks"
"Lyken17/Efficient-PyTorch" -> "xunge/pytorch_lmdb_imagenet"
"Lyken17/Efficient-PyTorch" -> "Lyken17/pytorch-OpCounter"
"Lyken17/Efficient-PyTorch" -> "yuhuixu1993/PC-DARTS" ["e"=1]
"Lyken17/Efficient-PyTorch" -> "Lyken17/pytorch-memonger"
"Lyken17/Efficient-PyTorch" -> "vahidk/tfrecord"
"Lyken17/Efficient-PyTorch" -> "NVIDIA/DALI"
"Lyken17/Efficient-PyTorch" -> "mit-han-lab/ProxylessNAS" ["e"=1]
"Lyken17/Efficient-PyTorch" -> "megvii-model/ShuffleNet-Series"
"Lyken17/Efficient-PyTorch" -> "zhanghang1989/PyTorch-Encoding" ["e"=1]
"Lyken17/Efficient-PyTorch" -> "vacancy/Synchronized-BatchNorm-PyTorch" ["e"=1]
"Lyken17/Efficient-PyTorch" -> "rmccorm4/PyTorch-LMDB"
"Lyken17/Efficient-PyTorch" -> "JiahuiYu/slimmable_networks" ["e"=1]
"CharlesShang/DCNv2" -> "chengdazhi/Deformable-Convolution-V2-PyTorch"
"CharlesShang/DCNv2" -> "jinfagang/DCNv2_latest"
"CharlesShang/DCNv2" -> "lbin/DCNv2"
"CharlesShang/DCNv2" -> "msracver/Deformable-ConvNets"
"CharlesShang/DCNv2" -> "4uiiurz1/pytorch-deform-conv-v2"
"CharlesShang/DCNv2" -> "xingyizhou/CenterNet"
"CharlesShang/DCNv2" -> "xinntao/EDVR" ["e"=1]
"CharlesShang/DCNv2" -> "xingyizhou/ExtremeNet"
"CharlesShang/DCNv2" -> "oeway/pytorch-deform-conv"
"CharlesShang/DCNv2" -> "Duankaiwen/CenterNet"
"CharlesShang/DCNv2" -> "tianzhi0549/FCOS"
"CharlesShang/DCNv2" -> "CaoWGG/TensorRT-CenterNet"
"CharlesShang/DCNv2" -> "xingyizhou/CenterNet2"
"CharlesShang/DCNv2" -> "xingyizhou/CenterTrack" ["e"=1]
"CharlesShang/DCNv2" -> "princeton-vl/CornerNet-Lite"
"Chasel-Tsui/mmdet-rfla" -> "ChenhongyiYang/QueryDet-PyTorch"
"Chasel-Tsui/mmdet-rfla" -> "jwwangchn/AI-TOD"
"Chasel-Tsui/mmdet-rfla" -> "strongwolf/DW"
"Chasel-Tsui/mmdet-rfla" -> "Chasel-Tsui/mmdet-aitod"
"Westlake-AI/MogaNet" -> "Westlake-AI/Awesome-Mixup"
"berniwal/swin-transformer-pytorch" -> "SwinTransformer/Swin-Transformer-Semantic-Segmentation"
"berniwal/swin-transformer-pytorch" -> "whai362/PVT"
"berniwal/swin-transformer-pytorch" -> "fudan-zvg/SETR"
"berniwal/swin-transformer-pytorch" -> "SwinTransformer/Swin-Transformer-Object-Detection"
"berniwal/swin-transformer-pytorch" -> "Meituan-AutoML/Twins"
"berniwal/swin-transformer-pytorch" -> "microsoft/Swin-Transformer"
"berniwal/swin-transformer-pytorch" -> "HuCaoFighting/Swin-Unet" ["e"=1]
"berniwal/swin-transformer-pytorch" -> "microsoft/CSWin-Transformer"
"berniwal/swin-transformer-pytorch" -> "SwinTransformer/Transformer-SSL"
"berniwal/swin-transformer-pytorch" -> "WangFeng18/Swin-Transformer"
"berniwal/swin-transformer-pytorch" -> "facebookresearch/MaskFormer"
"berniwal/swin-transformer-pytorch" -> "d-li14/involution"
"berniwal/swin-transformer-pytorch" -> "zihangJiang/TokenLabeling"
"berniwal/swin-transformer-pytorch" -> "rstrudel/segmenter"
"berniwal/swin-transformer-pytorch" -> "PeizeSun/SparseR-CNN"
"fcjian/TOOD" -> "implus/GFocalV2"
"fcjian/TOOD" -> "hyz-xmaster/VarifocalNet"
"fcjian/TOOD" -> "Megvii-BaseDetection/DeFCN"
"fcjian/TOOD" -> "kkhoot/PAA"
"fcjian/TOOD" -> "kemaloksuz/RankSortLoss"
"fcjian/TOOD" -> "Megvii-BaseDetection/OTA"
"fcjian/TOOD" -> "txdet/FCOSPss"
"hkzhang91/ParC-Net" -> "micronDLA/MobileViTv3"
"hkzhang91/ParC-Net" -> "mmaaz60/EdgeNeXt"
"hkzhang91/ParC-Net" -> "JierunChen/FasterNet"
"hkzhang91/ParC-Net" -> "Chenglin-Yang/LVT"
"hkzhang91/ParC-Net" -> "chinhsuanwu/mobilevit-pytorch"
"obss/sahi" -> "jinfagang/yolov7"
"obss/sahi" -> "meituan/YOLOv6"
"obss/sahi" -> "Megvii-BaseDetection/YOLOX"
"obss/sahi" -> "WongKinYiu/yolor"
"obss/sahi" -> "open-mmlab/mmyolo"
"obss/sahi" -> "ZFTurbo/Weighted-Boxes-Fusion"
"obss/sahi" -> "cv516Buaa/tph-yolov5" ["e"=1]
"obss/sahi" -> "voxel51/fiftyone"
"obss/sahi" -> "WongKinYiu/yolov7"
"obss/sahi" -> "Gumpest/YOLOv5-Multibackbone-Compression" ["e"=1]
"obss/sahi" -> "ppogg/YOLOv5-Lite" ["e"=1]
"obss/sahi" -> "ifzhang/ByteTrack" ["e"=1]
"obss/sahi" -> "iscyy/yoloair"
"obss/sahi" -> "tryolabs/norfair"
"obss/sahi" -> "jizhishutong/YOLOU"
"shoutOutYangJie/MobileOne" -> "federicopozzi33/MobileOne-PyTorch"
"shoutOutYangJie/MobileOne" -> "apple/ml-mobileone"
"LSH9832/edgeyolo" -> "JierunChen/FasterNet"
"LSH9832/edgeyolo" -> "FeiYull/tensorrt-alpha"
"lbin/DCNv2" -> "jinfagang/DCNv2_latest"
"lbin/DCNv2" -> "CharlesShang/DCNv2"
"lbin/DCNv2" -> "MatthewHowe/DCNv2"
"lbin/DCNv2" -> "rathaROG/DCNv2_Windows"
"lbin/DCNv2" -> "CaptainEven/MCMOT" ["e"=1]
"lbin/DCNv2" -> "chengdazhi/Deformable-Convolution-V2-PyTorch"
"lbin/DCNv2" -> "mrnabati/CenterFusion" ["e"=1]
"lbin/DCNv2" -> "xingyizhou/CenterTrack" ["e"=1]
"linghu8812/tensorrt_inference" -> "enazoe/yolo-tensorrt"
"linghu8812/tensorrt_inference" -> "Syencil/tensorRT"
"linghu8812/tensorrt_inference" -> "zerollzeng/tiny-tensorrt"
"linghu8812/tensorrt_inference" -> "ttanzhiqiang/onnx_tensorrt_project"
"linghu8812/tensorrt_inference" -> "wang-xinyu/tensorrtx"
"linghu8812/tensorrt_inference" -> "dlunion/tensorRTIntegrate"
"linghu8812/tensorrt_inference" -> "NVIDIA-AI-IOT/yolov4_deepstream"
"linghu8812/tensorrt_inference" -> "marcoslucianops/DeepStream-Yolo" ["e"=1]
"linghu8812/tensorrt_inference" -> "CaoWGG/TensorRT-CenterNet"
"linghu8812/tensorrt_inference" -> "wdhao/tensorrtCV" ["e"=1]
"linghu8812/tensorrt_inference" -> "ceccocats/tkDNN"
"linghu8812/tensorrt_inference" -> "isarsoft/yolov4-triton-tensorrt" ["e"=1]
"linghu8812/tensorrt_inference" -> "jkjung-avt/tensorrt_demos"
"linghu8812/tensorrt_inference" -> "RichardoMrMu/yolov5-deepsort-tensorrt" ["e"=1]
"linghu8812/tensorrt_inference" -> "onnx/onnx-tensorrt"
"murufeng/awesome_lightweight_networks" -> "chinhsuanwu/mobilevit-pytorch"
"murufeng/awesome_lightweight_networks" -> "wilile26811249/MobileViT"
"murufeng/awesome_lightweight_networks" -> "apple/ml-cvnets"
"murufeng/awesome_lightweight_networks" -> "huawei-noah/Efficient-AI-Backbones"
"murufeng/awesome_lightweight_networks" -> "DingXiaoH/RepVGG"
"murufeng/awesome_lightweight_networks" -> "jizhishutong/YOLOU"
"murufeng/awesome_lightweight_networks" -> "snap-research/EfficientFormer"
"murufeng/awesome_lightweight_networks" -> "hkzhang91/ParC-Net"
"murufeng/awesome_lightweight_networks" -> "megvii-research/mdistiller" ["e"=1]
"murufeng/awesome_lightweight_networks" -> "Visual-Attention-Network/SegNeXt" ["e"=1]
"murufeng/awesome_lightweight_networks" -> "Gumpest/YOLOv5-Multibackbone-Compression" ["e"=1]
"murufeng/awesome_lightweight_networks" -> "mmaaz60/EdgeNeXt"
"murufeng/awesome_lightweight_networks" -> "miemie2013/miemiedetection"
"murufeng/awesome_lightweight_networks" -> "iscyy/yoloair"
"murufeng/awesome_lightweight_networks" -> "shouxieai/learning-cuda-trt"
"shouxieai/http_server_cpp" -> "shouxieai/bp-cpp"
"shouxieai/http_server_cpp" -> "shouxieai/minio-cpp-sdk"
"shouxieai/http_server_cpp" -> "shouxieai/hard_decode_trt"
"shouxieai/infer" -> "NVIDIA-AI-IOT/yolo_deepstream"
"shouxieai/infer" -> "shouxieai/nerf"
"shouxieai/infer" -> "yhwang-hub/dl_model_deploy"
"shouxieai/infer" -> "FeiYull/tensorrt-alpha"
"shouxieai/infer" -> "shouxieai/learning-cuda-trt"
"shouxieai/infer" -> "shouxieai/algorithm-cpp"
"snap-research/EfficientFormer" -> "apple/ml-cvnets"
"snap-research/EfficientFormer" -> "mmaaz60/EdgeNeXt"
"snap-research/EfficientFormer" -> "facebookresearch/ConvNeXt-V2" ["e"=1]
"snap-research/EfficientFormer" -> "facebookresearch/LeViT"
"snap-research/EfficientFormer" -> "chinhsuanwu/mobilevit-pytorch"
"snap-research/EfficientFormer" -> "apple/ml-mobileone"
"snap-research/EfficientFormer" -> "NVlabs/FAN" ["e"=1]
"snap-research/EfficientFormer" -> "microsoft/FocalNet" ["e"=1]
"snap-research/EfficientFormer" -> "Visual-Attention-Network/VAN-Classification" ["e"=1]
"snap-research/EfficientFormer" -> "SHI-Labs/OneFormer" ["e"=1]
"snap-research/EfficientFormer" -> "sail-sg/metaformer" ["e"=1]
"snap-research/EfficientFormer" -> "sail-sg/poolformer"
"snap-research/EfficientFormer" -> "OpenGVLab/InternImage" ["e"=1]
"snap-research/EfficientFormer" -> "facebookresearch/ToMe" ["e"=1]
"snap-research/EfficientFormer" -> "microsoft/X-Decoder" ["e"=1]
"extreme-assistant/cvpr2020" -> "extreme-assistant/iccv2019"
"extreme-assistant/cvpr2020" -> "amusi/CVPR2020-Code"
"extreme-assistant/cvpr2020" -> "Sophia-11/Awesome-CVPR-Paper"
"extreme-assistant/cvpr2020" -> "huawei-noah/ghostnet"
"extreme-assistant/cvpr2020" -> "iamhankai/ghostnet.pytorch"
"extreme-assistant/cvpr2020" -> "ahong007007/awesomeCV"
"extreme-assistant/cvpr2020" -> "hszhao/SAN" ["e"=1]
"ChristophReich1996/MaxViT" -> "google-research/maxvit"
"adobe/antialiased-cnns" -> "zhanghang1989/ResNeSt"
"adobe/antialiased-cnns" -> "MaureenZOU/Adaptive-anti-Aliasing"
"adobe/antialiased-cnns" -> "facebookresearch/pycls"
"adobe/antialiased-cnns" -> "chengdazhi/Deformable-Convolution-V2-PyTorch"
"adobe/antialiased-cnns" -> "LiyuanLucasLiu/RAdam"
"adobe/antialiased-cnns" -> "richzhang/antialiased-cnns"
"adobe/antialiased-cnns" -> "zhanghang1989/PyTorch-Encoding" ["e"=1]
"adobe/antialiased-cnns" -> "vacancy/Synchronized-BatchNorm-PyTorch" ["e"=1]
"adobe/antialiased-cnns" -> "mapillary/inplace_abn" ["e"=1]
"adobe/antialiased-cnns" -> "foolwood/SiamMask" ["e"=1]
"adobe/antialiased-cnns" -> "lukemelas/EfficientNet-PyTorch"
"adobe/antialiased-cnns" -> "switchablenorms/Switchable-Normalization"
"adobe/antialiased-cnns" -> "xingyizhou/ExtremeNet"
"adobe/antialiased-cnns" -> "google-research/augmix" ["e"=1]
"adobe/antialiased-cnns" -> "kakaobrain/fast-autoaugment" ["e"=1]
"FlyEgle/CMT-pytorch" -> "wilile26811249/CMT_CNN-meet-Vision-Transformer"
"FlyEgle/CMT-pytorch" -> "yun-liu/TransCNN"
"Megvii-BaseDetection/DeFCN" -> "PeizeSun/OneNet"
"Megvii-BaseDetection/DeFCN" -> "Megvii-BaseDetection/cvpods"
"Megvii-BaseDetection/DeFCN" -> "megvii-model/YOLOF"
"Megvii-BaseDetection/DeFCN" -> "implus/GFocalV2"
"Megvii-BaseDetection/DeFCN" -> "PeizeSun/SparseR-CNN"
"Megvii-BaseDetection/DeFCN" -> "Megvii-BaseDetection/BorderDet"
"Megvii-BaseDetection/DeFCN" -> "Megvii-BaseDetection/OTA"
"Megvii-BaseDetection/DeFCN" -> "hyz-xmaster/VarifocalNet"
"Megvii-BaseDetection/DeFCN" -> "Megvii-BaseDetection/AutoAssign"
"Megvii-BaseDetection/DeFCN" -> "sfzhang15/ATSS"
"Megvii-BaseDetection/DeFCN" -> "implus/GFocal"
"Megvii-BaseDetection/DeFCN" -> "fcjian/TOOD"
"Megvii-BaseDetection/DeFCN" -> "microsoft/RelationNet2"
"Megvii-BaseDetection/DeFCN" -> "kkhoot/PAA"
"Megvii-BaseDetection/DeFCN" -> "xingyizhou/CenterNet2"
"VDIGPKU/CBNetV2" -> "microsoft/SoftTeacher"
"VDIGPKU/CBNetV2" -> "microsoft/DynamicHead"
"VDIGPKU/CBNetV2" -> "hyz-xmaster/swa_object_detection"
"VDIGPKU/CBNetV2" -> "shinya7y/UniverseNet"
"VDIGPKU/CBNetV2" -> "EMI-Group/FaPN" ["e"=1]
"VDIGPKU/CBNetV2" -> "kemaloksuz/RankSortLoss"
"VDIGPKU/CBNetV2" -> "hustvl/QueryInst"
"VDIGPKU/CBNetV2" -> "hyz-xmaster/VarifocalNet"
"VDIGPKU/CBNetV2" -> "microsoft/CSWin-Transformer"
"VDIGPKU/CBNetV2" -> "SwinTransformer/Swin-Transformer-Object-Detection"
"VDIGPKU/CBNetV2" -> "microsoft/Focal-Transformer"
"VDIGPKU/CBNetV2" -> "conradry/copy-paste-aug"
"VDIGPKU/CBNetV2" -> "ModelTC/EOD"
"WongKinYiu/yolor" -> "WongKinYiu/ScaledYOLOv4"
"WongKinYiu/yolor" -> "Megvii-BaseDetection/YOLOX"
"WongKinYiu/yolor" -> "WongKinYiu/PyTorch_YOLOv4"
"WongKinYiu/yolor" -> "jinfagang/yolov7"
"WongKinYiu/yolor" -> "meituan/YOLOv6"
"WongKinYiu/yolor" -> "Tianxiaomo/pytorch-YOLOv4"
"WongKinYiu/yolor" -> "WongKinYiu/yolov7"
"WongKinYiu/yolor" -> "xingyizhou/CenterNet2"
"WongKinYiu/yolor" -> "hustvl/YOLOP" ["e"=1]
"WongKinYiu/yolor" -> "wang-xinyu/tensorrtx"
"WongKinYiu/yolor" -> "megvii-model/YOLOF"
"WongKinYiu/yolor" -> "obss/sahi"
"WongKinYiu/yolor" -> "ifzhang/ByteTrack" ["e"=1]
"WongKinYiu/yolor" -> "deepcam-cn/yolov5-face"
"WongKinYiu/yolor" -> "RangiLyu/nanodet"
"bharatsingh430/snip" -> "bowenc0221/Decoupled-Classification-Refinement"
"bharatsingh430/snip" -> "mahyarnajibi/SNIPER"
"extreme-assistant/ECCV2022-Paper-Code-Interpretation" -> "amusi/ECCV2022-Papers-with-Code"
"extreme-assistant/ECCV2022-Paper-Code-Interpretation" -> "extreme-assistant/ICCV2021-Paper-Code-Interpretation"
"extreme-assistant/ECCV2022-Paper-Code-Interpretation" -> "DWCTOD/ECCV2022-Papers-with-Code-Demo"
"extreme-assistant/ECCV2022-Paper-Code-Interpretation" -> "extreme-assistant/survey-computer-vision-2022"
"extreme-assistant/ECCV2022-Paper-Code-Interpretation" -> "extreme-assistant/survey-computer-vision-2021"
"extreme-assistant/ECCV2022-Paper-Code-Interpretation" -> "52CV/ECCV-2022-Papers"
"implus/GFocalV2" -> "implus/GFocal"
"implus/GFocalV2" -> "Megvii-BaseDetection/DeFCN"
"implus/GFocalV2" -> "hyz-xmaster/VarifocalNet"
"implus/GFocalV2" -> "sfzhang15/ATSS"
"implus/GFocalV2" -> "fcjian/TOOD"
"implus/GFocalV2" -> "kkhoot/PAA"
"implus/GFocalV2" -> "xingyizhou/CenterNet2"
"implus/GFocalV2" -> "PeizeSun/SparseR-CNN"
"implus/GFocalV2" -> "megvii-model/YOLOF"
"implus/GFocalV2" -> "PeizeSun/OneNet"
"implus/GFocalV2" -> "jshilong/SEPC"
"implus/GFocalV2" -> "cccorn/AP-loss"
"implus/GFocalV2" -> "Megvii-BaseDetection/BorderDet"
"implus/GFocalV2" -> "chensnathan/YOLOF"
"implus/GFocalV2" -> "Megvii-BaseDetection/OTA"
"lucidrains/bottleneck-transformer-pytorch" -> "leaderj1001/BottleneckTransformers"
"lucidrains/bottleneck-transformer-pytorch" -> "yitu-opensource/T2T-ViT"
"lucidrains/bottleneck-transformer-pytorch" -> "The-AI-Summer/self-attention-cv"
"lucidrains/bottleneck-transformer-pytorch" -> "whai362/PVT"
"lucidrains/bottleneck-transformer-pytorch" -> "leaderj1001/LambdaNetworks"
"lucidrains/bottleneck-transformer-pytorch" -> "lucidrains/lambda-networks"
"lucidrains/bottleneck-transformer-pytorch" -> "facebookresearch/deit"
"lucidrains/bottleneck-transformer-pytorch" -> "zihangJiang/TokenLabeling"
"lucidrains/bottleneck-transformer-pytorch" -> "d-li14/involution"
"lucidrains/bottleneck-transformer-pytorch" -> "facebookresearch/xcit"
"lucidrains/bottleneck-transformer-pytorch" -> "facebookresearch/FixRes"
"lucidrains/bottleneck-transformer-pytorch" -> "intel-isl/DPT" ["e"=1]
"lucidrains/bottleneck-transformer-pytorch" -> "rishikksh20/convolution-vision-transformers"
"lucidrains/bottleneck-transformer-pytorch" -> "WXinlong/DenseCL"
"lucidrains/bottleneck-transformer-pytorch" -> "fundamentalvision/Deformable-DETR"
"megvii-model/YOLOF" -> "chensnathan/YOLOF"
"megvii-model/YOLOF" -> "Megvii-BaseDetection/DeFCN"
"megvii-model/YOLOF" -> "xingyizhou/CenterNet2"
"megvii-model/YOLOF" -> "PeizeSun/SparseR-CNN"
"megvii-model/YOLOF" -> "implus/GFocalV2"
"megvii-model/YOLOF" -> "PeizeSun/OneNet"
"megvii-model/YOLOF" -> "Megvii-BaseDetection/cvpods"
"megvii-model/YOLOF" -> "sfzhang15/ATSS"
"megvii-model/YOLOF" -> "hyz-xmaster/VarifocalNet"
"megvii-model/YOLOF" -> "implus/GFocal"
"megvii-model/YOLOF" -> "JosephKJ/OWOD" ["e"=1]
"megvii-model/YOLOF" -> "Megvii-BaseDetection/BorderDet"
"megvii-model/YOLOF" -> "WongKinYiu/ScaledYOLOv4"
"megvii-model/YOLOF" -> "joe-siyuan-qiao/DetectoRS"
"megvii-model/YOLOF" -> "nightsnack/YOLObile"
"pengzhiliang/Conformer" -> "JDAI-CV/CoTNet"
"pengzhiliang/Conformer" -> "vasgaowei/TS-CAM" ["e"=1]
"pengzhiliang/Conformer" -> "whai362/PVT"
"pengzhiliang/Conformer" -> "dingmyu/davit" ["e"=1]
"pengzhiliang/Conformer" -> "LeapLabTHU/DAT"
"pengzhiliang/Conformer" -> "FlyEgle/CMT-pytorch"
"pengzhiliang/Conformer" -> "zihangJiang/TokenLabeling"
"pengzhiliang/Conformer" -> "Meituan-AutoML/Twins"
"pengzhiliang/Conformer" -> "ACheun9/Pytorch-implementation-of-Mobile-Former"
"pengzhiliang/Conformer" -> "microsoft/CvT"
"pengzhiliang/Conformer" -> "LeapLabTHU/ACmix" ["e"=1]
"pengzhiliang/Conformer" -> "wofmanaf/ResT"
"pengzhiliang/Conformer" -> "sooftware/conformer" ["e"=1]
"pengzhiliang/Conformer" -> "ZjjConan/SimAM" ["e"=1]
"pengzhiliang/Conformer" -> "Picsart-AI-Research/SeMask-Segmentation"
"maple-research-lab/AdCo" -> "maple-research-lab/CLSA"
"NaturalIntelligence/imglab" -> "nimndata/spec" ["e"=1]
"NaturalIntelligence/imglab" -> "Labelbox/Labelbox"
"NaturalIntelligence/imglab" -> "CSAILVision/LabelMeAnnotationTool"
"NaturalIntelligence/imglab" -> "NaturalIntelligence/Stubmatic" ["e"=1]
"NaturalIntelligence/imglab" -> "jsbroks/coco-annotator"
"NaturalIntelligence/imglab" -> "bit-bots/imagetagger"
"NaturalIntelligence/imglab" -> "l3p-cv/lost"
"NaturalIntelligence/imglab" -> "Slava/label-tool"
"NaturalIntelligence/imglab" -> "microsoft/VoTT"
"NaturalIntelligence/imglab" -> "NaturalIntelligence/anumargak" ["e"=1]
"NaturalIntelligence/imglab" -> "opencv/cvat"
"NaturalIntelligence/imglab" -> "abreheret/PixelAnnotationTool"
"NaturalIntelligence/imglab" -> "kinhong/OpenLabeler"
"NaturalIntelligence/imglab" -> "Labelbox/labelbox"
"NaturalIntelligence/imglab" -> "SkalskiP/make-sense"
"fsx950223/mobilenetv2-yolov3" -> "tanluren/mobilenetv3-yolov3"
"fsx950223/mobilenetv2-yolov3" -> "Adamdad/keras-YOLOv3-mobilenet"
"fsx950223/mobilenetv2-yolov3" -> "GuodongQi/yolo3_tensorflow"
"fsx950223/mobilenetv2-yolov3" -> "eric612/MobileNet-YOLO"
"fsx950223/mobilenetv2-yolov3" -> "Stinky-Tofu/Stronger-yolo"
"fsx950223/mobilenetv2-yolov3" -> "ruinmessi/ASFF"
"fsx950223/mobilenetv2-yolov3" -> "kaka-lin/object-detection"
"fsx950223/mobilenetv2-yolov3" -> "dog-qiuqiu/MobileNet-Yolo"
"fsx950223/mobilenetv2-yolov3" -> "see--/keras-centernet" ["e"=1]
"fsx950223/mobilenetv2-yolov3" -> "coldlarry/YOLOv3-complete-pruning" ["e"=1]
"fsx950223/mobilenetv2-yolov3" -> "HaloTrouvaille/YOLO-Multi-Backbones-Attention" ["e"=1]
"fsx950223/mobilenetv2-yolov3" -> "wlguan/Stronger-yolo-pytorch"
"fsx950223/mobilenetv2-yolov3" -> "lars76/kmeans-anchor-boxes"
"fsx950223/mobilenetv2-yolov3" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"fsx950223/mobilenetv2-yolov3" -> "talebolano/yolov3-network-slimming" ["e"=1]
"dalgu90/resnet-18-tensorflow" -> "taki0112/ResNet-Tensorflow"
"vadimkantorov/caffemodel2pytorch" -> "marvis/pytorch-caffe"
"vadimkantorov/caffemodel2pytorch" -> "penguinnnnn/Caffe2Pytorch"
"clcarwin/convert_torch_to_pytorch" -> "prlz77/ResNeXt.pytorch"
"clcarwin/convert_torch_to_pytorch" -> "felixgwu/mask_rcnn_pytorch"
"clcarwin/convert_torch_to_pytorch" -> "bshillingford/python-torchfile" ["e"=1]
"clcarwin/convert_torch_to_pytorch" -> "oeway/pytorch-deform-conv"
"clcarwin/convert_torch_to_pytorch" -> "fanq15/caffe_to_torch_to_pytorch"
"clcarwin/convert_torch_to_pytorch" -> "torrvision/crayon"
"clcarwin/convert_torch_to_pytorch" -> "ignacio-rocco/detectorch"
"clcarwin/convert_torch_to_pytorch" -> "facebookresearch/ResNeXt"
"clcarwin/convert_torch_to_pytorch" -> "gpleiss/efficient_densenet_pytorch"
"clcarwin/convert_torch_to_pytorch" -> "PureDiors/pytorch_RFCN"
"clcarwin/convert_torch_to_pytorch" -> "lanpa/tensorboard-pytorch"
"clcarwin/convert_torch_to_pytorch" -> "longcw/faster_rcnn_pytorch"
"clcarwin/convert_torch_to_pytorch" -> "fxia22/stn.pytorch" ["e"=1]
"clcarwin/convert_torch_to_pytorch" -> "kuangliu/pytorch-retinanet"
"clcarwin/convert_torch_to_pytorch" -> "facebookresearch/clevr-iep" ["e"=1]
"DrewNF/Tensorflow_Object_Tracking_Video" -> "myfavouritekk/T-CNN" ["e"=1]
"DrewNF/Tensorflow_Object_Tracking_Video" -> "Guanghan/ROLO" ["e"=1]
"DrewNF/Tensorflow_Object_Tracking_Video" -> "torrvision/siamfc-tf" ["e"=1]
"DrewNF/Tensorflow_Object_Tracking_Video" -> "msracver/Flow-Guided-Feature-Aggregation" ["e"=1]
"DrewNF/Tensorflow_Object_Tracking_Video" -> "gliese581gg/YOLO_tensorflow"
"DrewNF/Tensorflow_Object_Tracking_Video" -> "TensorBox/TensorBox"
"DrewNF/Tensorflow_Object_Tracking_Video" -> "msracver/Deep-Feature-Flow" ["e"=1]
"DrewNF/Tensorflow_Object_Tracking_Video" -> "Russell91/TensorBox"
"DrewNF/Tensorflow_Object_Tracking_Video" -> "feichtenhofer/Detect-Track" ["e"=1]
"DrewNF/Tensorflow_Object_Tracking_Video" -> "myfavouritekk/vdetlib" ["e"=1]
"DrewNF/Tensorflow_Object_Tracking_Video" -> "bendidi/Tracking-with-darkflow" ["e"=1]
"DrewNF/Tensorflow_Object_Tracking_Video" -> "CharlesShang/TFFRCNN"
"DrewNF/Tensorflow_Object_Tracking_Video" -> "DrewNF/Build-Deep-Learning-Env-with-Tensorflow-Python-OpenCV"
"DrewNF/Tensorflow_Object_Tracking_Video" -> "yuxng/MDP_Tracking" ["e"=1]
"DrewNF/Tensorflow_Object_Tracking_Video" -> "HyeonseobNam/py-MDNet" ["e"=1]
"Microsoft/VoTT" -> "Labelbox/Labelbox"
"Microsoft/VoTT" -> "opencv/cvat"
"Microsoft/VoTT" -> "Microsoft/AzureSearch_JFK_Files" ["e"=1]
"Microsoft/VoTT" -> "cvhciKIT/sloth"
"Microsoft/VoTT" -> "christopher5106/FastAnnotationTool"
"Microsoft/VoTT" -> "cvondrick/vatic" ["e"=1]
"Microsoft/VoTT" -> "abreheret/PixelAnnotationTool"
"Microsoft/VoTT" -> "albu/albumentations"
"Microsoft/VoTT" -> "Microsoft/code-with-engineering-playbook" ["e"=1]
"Microsoft/VoTT" -> "msracver/Deep-Feature-Flow" ["e"=1]
"Microsoft/VoTT" -> "Azure/ObjectDetectionUsingCntk"
"Microsoft/VoTT" -> "Azure/BatchAI" ["e"=1]
"Microsoft/VoTT" -> "sfzhang15/RefineDet"
"Microsoft/VoTT" -> "frederictost/images_annotation_programme"
"Microsoft/VoTT" -> "openimages/dataset"
"torrvision/crayon" -> "TeamHG-Memex/tensorboard_logger"
"torrvision/crayon" -> "lanpa/tensorboard-pytorch"
"torrvision/crayon" -> "clcarwin/convert_torch_to_pytorch"
"torrvision/crayon" -> "longcw/faster_rcnn_pytorch"
"torrvision/crayon" -> "szagoruyko/functional-zoo"
"torrvision/crayon" -> "felixgwu/mask_rcnn_pytorch"
"torrvision/crayon" -> "szagoruyko/diracnets"
"torrvision/crayon" -> "JianGoForIt/YellowFin_Pytorch"
"torrvision/crayon" -> "facebookresearch/visdom"
"torrvision/crayon" -> "ikostrikov/pytorch-a2c-ppo-acktr" ["e"=1]
"torrvision/crayon" -> "ncullen93/torchsample"
"torrvision/crayon" -> "Kaixhin/nninit" ["e"=1]
"torrvision/crayon" -> "zdevito/ATen" ["e"=1]
"torrvision/crayon" -> "longcw/yolo2-pytorch"
"torrvision/crayon" -> "facebookresearch/fairseq-py" ["e"=1]
"vahidk/EffectivePyTorch" -> "Kaixhin/grokking-pytorch"
"vahidk/EffectivePyTorch" -> "IgorSusmelj/pytorch-styleguide"
"vahidk/EffectivePyTorch" -> "rasbt/stat453-deep-learning-ss20" ["e"=1]
"vahidk/EffectivePyTorch" -> "jettify/pytorch-optimizer"
"vahidk/EffectivePyTorch" -> "dair-ai/pytorch_notebooks" ["e"=1]
"vahidk/EffectivePyTorch" -> "Machine-Learning-Tokyo/AI_Curriculum" ["e"=1]
"vahidk/EffectivePyTorch" -> "dair-ai/nlp_paper_summaries" ["e"=1]
"vahidk/EffectivePyTorch" -> "facebookresearch/pycls"
"vahidk/EffectivePyTorch" -> "ritchieng/the-incredible-pytorch" ["e"=1]
"vahidk/EffectivePyTorch" -> "dsgiitr/d2l-pytorch" ["e"=1]
"vahidk/EffectivePyTorch" -> "williamFalcon/pytorch-lightning"
"vahidk/EffectivePyTorch" -> "paperswithcode/releasing-research-code" ["e"=1]
"vahidk/EffectivePyTorch" -> "rll/deepul" ["e"=1]
"vahidk/EffectivePyTorch" -> "Atcold/pytorch-Deep-Learning-Minicourse" ["e"=1]
"vahidk/EffectivePyTorch" -> "harvardnlp/pytorch-struct" ["e"=1]
"PaddlePaddle/LiteKit" -> "PaddlePaddle/Paddle-bot"
"PaddlePaddle/LiteKit" -> "PaddlePaddle/Paddle-Inference-Demo"
"PaddlePaddle/LiteKit" -> "PaddlePaddle/hapi"
"fkodom/fft-conv-pytorch" -> "pkumivision/FFC"
"fkodom/fft-conv-pytorch" -> "zzd1992/Image-Local-Attention"
"fkodom/fft-conv-pytorch" -> "Chillee/CS344_2021"
"valeoai/LOST" -> "YangtaoWANG95/TokenCut"
"chenyuntc/pytorch-best-practice" -> "pytorch/tnt"
"chenyuntc/pytorch-best-practice" -> "chenyuntc/pytorch-book" ["e"=1]
"chenyuntc/pytorch-best-practice" -> "tensor-yu/PyTorch_Tutorial" ["e"=1]
"chenyuntc/pytorch-best-practice" -> "ShomyLiu/pytorch-relation-extraction" ["e"=1]
"chenyuntc/pytorch-best-practice" -> "chenyuntc/PyTorchText" ["e"=1]
"chenyuntc/pytorch-best-practice" -> "longcw/faster_rcnn_pytorch"
"chenyuntc/pytorch-best-practice" -> "xiongzihua/pytorch-YOLO-v1" ["e"=1]
"chenyuntc/pytorch-best-practice" -> "spytensor/pytorch-image-classification" ["e"=1]
"chenyuntc/pytorch-best-practice" -> "moskomule/senet.pytorch" ["e"=1]
"chenyuntc/pytorch-best-practice" -> "chenyuntc/simple-faster-rcnn-pytorch"
"chenyuntc/pytorch-best-practice" -> "ruotianluo/pytorch-faster-rcnn"
"chenyuntc/pytorch-best-practice" -> "jwyang/fpn.pytorch"
"chenyuntc/pytorch-best-practice" -> "miraclewkf/SENet-PyTorch" ["e"=1]
"chenyuntc/pytorch-best-practice" -> "ypwhs/dogs_vs_cats" ["e"=1]
"deu30303/RUC" -> "Sungwon-Han/FEDX"
"deu30303/RUC" -> "archon159/elsa"
"deu30303/RUC" -> "niuchuangnn/SPICE"
"deu30303/RUC" -> "DonghyunAhn/development-measure"
"deu30303/RUC" -> "dscig/urban_score"
"deu30303/RUC" -> "Sungwon-Han/TwoStageUC"
"niuchuangnn/SPICE" -> "deu30303/RUC"
"niuchuangnn/SPICE" -> "TTN-YKK/Clustering_friendly_representation_learning"
"niuchuangnn/SPICE" -> "wvangansbeke/Unsupervised-Classification"
"niuchuangnn/SPICE" -> "ZhiyuanDang/NNM"
"microsoft/MMdnn" -> "ysh329/deep-learning-model-convertor"
"microsoft/MMdnn" -> "xxradon/PytorchToCaffe"
"microsoft/MMdnn" -> "daquexian/onnx-simplifier"
"microsoft/MMdnn" -> "NVIDIA-AI-IOT/torch2trt"
"microsoft/MMdnn" -> "alibaba/MNN"
"microsoft/MMdnn" -> "onnx/onnx-tensorrt"
"microsoft/MMdnn" -> "Tencent/PocketFlow" ["e"=1]
"microsoft/MMdnn" -> "NervanaSystems/distiller" ["e"=1]
"microsoft/MMdnn" -> "onnx/tensorflow-onnx"
"microsoft/MMdnn" -> "NVIDIA/TensorRT"
"microsoft/MMdnn" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"microsoft/MMdnn" -> "lukemelas/EfficientNet-PyTorch"
"microsoft/MMdnn" -> "lutzroeder/netron"
"microsoft/MMdnn" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"microsoft/MMdnn" -> "biubug6/Pytorch_Retinaface" ["e"=1]
"MTlab/onnx2caffe" -> "xxradon/PytorchToCaffe"
"MTlab/onnx2caffe" -> "longcw/pytorch2caffe"
"MTlab/onnx2caffe" -> "hahnyuan/nn_tools"
"MTlab/onnx2caffe" -> "starimeL/PytorchConverter"
"MTlab/onnx2caffe" -> "inisis/brocolli"
"MTlab/onnx2caffe" -> "aovoc/nnieqat-pytorch" ["e"=1]
"MTlab/onnx2caffe" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"MTlab/onnx2caffe" -> "daquexian/onnx-simplifier"
"MTlab/onnx2caffe" -> "hanson-young/nniefacelib" ["e"=1]
"MTlab/onnx2caffe" -> "marvis/pytorch-caffe-darknet-convert"
"MTlab/onnx2caffe" -> "Charrin/RetinaFace-Cpp" ["e"=1]
"MTlab/onnx2caffe" -> "yihui-he/resnet-imagenet-caffe"
"Bisonai/mobilenetv3-tensorflow" -> "frotms/MobilenetV3-Tensorflow"
"Bisonai/mobilenetv3-tensorflow" -> "xiaochus/MobileNetV3"
"Bisonai/mobilenetv3-tensorflow" -> "philipgao518/Mobilenetv3-Tensorflow"
"Bisonai/mobilenetv3-tensorflow" -> "leaderj1001/MobileNetV3-Pytorch"
"Bisonai/mobilenetv3-tensorflow" -> "kuan-wang/pytorch-mobilenet-v3"
"Bisonai/mobilenetv3-tensorflow" -> "xiaochus/MobileNetV2"
"Bisonai/mobilenetv3-tensorflow" -> "shaoshengsong/MobileNetV3-SSD"
"Bisonai/mobilenetv3-tensorflow" -> "nolanliou/mobile-deeplab-v3-plus" ["e"=1]
"Bisonai/mobilenetv3-tensorflow" -> "xiaolai-sqlai/mobilenetv3"
"xiaochus/MobileNetV2" -> "xiaochus/MobileNetV3"
"xiaochus/MobileNetV2" -> "JonathanCMitchell/mobilenet_v2_keras"
"xiaochus/MobileNetV2" -> "Bisonai/mobilenetv3-tensorflow"
"xiaochus/MobileNetV2" -> "neuleaf/MobileNetV2"
"xiaochus/MobileNetV2" -> "MG2033/ShuffleNet"
"xiaochus/MobileNetV2" -> "rcmalli/keras-mobilenet" ["e"=1]
"xiaochus/MobileNetV2" -> "WillCheung2016/MobileNet_V2_Keras"
"xiaochus/MobileNetV2" -> "tanakataiki/ssd_kerasV2" ["e"=1]
"xiaochus/MobileNetV2" -> "chuanqi305/MobileNetv2-SSDLite"
"xiaochus/MobileNetV2" -> "Zehaos/MobileNet"
"xiaochus/MobileNetV2" -> "fsx950223/mobilenetv2-yolov3"
"xiaochus/MobileNetV2" -> "johnolafenwa/Pytorch-Keras-ToAndroid" ["e"=1]
"xiaochus/MobileNetV2" -> "goodluckcwl/Face-alignment-mobilenet-v2" ["e"=1]
"xiaochus/MobileNetV2" -> "tensor-yu/cascaded_mobilenet-v2" ["e"=1]
"min2209/dwt" -> "snakers4/ds_bowl_2018"
"min2209/dwt" -> "dmarcosg/DSAC"
"AlpacaDB/selectivesearch" -> "belltailjp/selective_search_py"
"AlpacaDB/selectivesearch" -> "rbgirshick/fast-rcnn"
"AlpacaDB/selectivesearch" -> "sergeyk/selective_search_ijcv_with_python"
"AlpacaDB/selectivesearch" -> "rykov8/ssd_keras"
"AlpacaDB/selectivesearch" -> "smallcorgi/Faster-RCNN_TF"
"AlpacaDB/selectivesearch" -> "rbgirshick/rcnn"
"AlpacaDB/selectivesearch" -> "saisrivatsan/selective-search"
"AlpacaDB/selectivesearch" -> "CharlesShang/TFFRCNN"
"AlpacaDB/selectivesearch" -> "rbgirshick/py-faster-rcnn"
"AlpacaDB/selectivesearch" -> "daijifeng001/R-FCN"
"AlpacaDB/selectivesearch" -> "bharatsingh430/soft-nms"
"AlpacaDB/selectivesearch" -> "MarvinTeichmann/tensorflow-fcn" ["e"=1]
"AlpacaDB/selectivesearch" -> "balancap/SSD-Tensorflow"
"AlpacaDB/selectivesearch" -> "yhenon/keras-frcnn"
"AlpacaDB/selectivesearch" -> "weiliu89/caffe"
"daijifeng001/R-FCN" -> "YuwenXiong/py-R-FCN"
"daijifeng001/R-FCN" -> "Orpine/py-R-FCN"
"daijifeng001/R-FCN" -> "msracver/Deformable-ConvNets"
"daijifeng001/R-FCN" -> "sanghoon/pva-faster-rcnn"
"daijifeng001/R-FCN" -> "weiliu89/caffe"
"daijifeng001/R-FCN" -> "ShaoqingRen/faster_rcnn"
"daijifeng001/R-FCN" -> "rbgirshick/fast-rcnn"
"daijifeng001/R-FCN" -> "msracver/FCIS"
"daijifeng001/R-FCN" -> "sfzhang15/RefineDet"
"daijifeng001/R-FCN" -> "zhaoweicai/mscnn"
"daijifeng001/R-FCN" -> "abhi2610/ohem"
"daijifeng001/R-FCN" -> "rbgirshick/py-faster-rcnn"
"daijifeng001/R-FCN" -> "bharatsingh430/soft-nms"
"daijifeng001/R-FCN" -> "daijifeng001/MNC" ["e"=1]
"daijifeng001/R-FCN" -> "shelhamer/fcn.berkeleyvision.org"
"JDAI-CV/CoTNet" -> "JDAI-CV/CoTNet-ObjectDetection-InstanceSegmentation"
"JDAI-CV/CoTNet" -> "pengzhiliang/Conformer"
"JDAI-CV/CoTNet" -> "cheerss/CrossFormer"
"JDAI-CV/CoTNet" -> "ShoufaChen/CycleMLP"
"JDAI-CV/CoTNet" -> "raoyongming/HorNet" ["e"=1]
"JDAI-CV/CoTNet" -> "microsoft/Focal-Transformer"
"JDAI-CV/CoTNet" -> "wofmanaf/ResT"
"JDAI-CV/CoTNet" -> "fcjian/TOOD"
"JDAI-CV/CoTNet" -> "wofmanaf/SA-Net" ["e"=1]
"JDAI-CV/CoTNet" -> "JDAI-CV/image-captioning" ["e"=1]
"ZhangGe6/onnx-modifier" -> "openppl-public/ppq"
"ZhangGe6/onnx-modifier" -> "daquexian/onnx-simplifier"
"ZhangGe6/onnx-modifier" -> "onnx/optimizer"
"ZhangGe6/onnx-modifier" -> "TRT2022/MST-plus-plus-TensorRT"
"ZhangGe6/onnx-modifier" -> "ThanatosShinji/onnx-tool"
"ZhangGe6/onnx-modifier" -> "zerollzeng/tiny-tensorrt"
"ZhangGe6/onnx-modifier" -> "pnnx/pnnx" ["e"=1]
"ZhangGe6/onnx-modifier" -> "NVIDIA/trt-samples-for-hackathon-cn"
"ZhangGe6/onnx-modifier" -> "MegEngine/MegCC" ["e"=1]
"ZhangGe6/onnx-modifier" -> "ModelTC/MQBench" ["e"=1]
"ZhangGe6/onnx-modifier" -> "tpoisonooo/how-to-optimize-gemm" ["e"=1]
"ZhangGe6/onnx-modifier" -> "AXERA-TECH/ax-samples" ["e"=1]
"ZhangGe6/onnx-modifier" -> "ENOT-AutoDL/onnx2torch"
"ZhangGe6/onnx-modifier" -> "NVIDIA-AI-IOT/tensorrt_plugin_generator"
"ZhangGe6/onnx-modifier" -> "Tencent/TPAT"
"facebookresearch/pycls" -> "zhanghang1989/ResNeSt"
"facebookresearch/pycls" -> "facebookresearch/ClassyVision"
"facebookresearch/pycls" -> "lukemelas/EfficientNet-PyTorch"
"facebookresearch/pycls" -> "mit-han-lab/once-for-all" ["e"=1]
"facebookresearch/pycls" -> "facebookresearch/mobile-vision" ["e"=1]
"facebookresearch/pycls" -> "facebookresearch/fvcore"
"facebookresearch/pycls" -> "facebookresearch/SlowFast" ["e"=1]
"facebookresearch/pycls" -> "megvii-model/ShuffleNet-Series"
"facebookresearch/pycls" -> "facebookresearch/moco"
"facebookresearch/pycls" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"facebookresearch/pycls" -> "kakaobrain/fast-autoaugment" ["e"=1]
"facebookresearch/pycls" -> "rwightman/gen-efficientnet-pytorch"
"facebookresearch/pycls" -> "facebookresearch/vissl"
"facebookresearch/pycls" -> "D-X-Y/Awesome-NAS" ["e"=1]
"facebookresearch/pycls" -> "facebookresearch/deit"
"grimoire/amirstan_plugin" -> "grimoire/torch2trt_dynamic"
"grimoire/amirstan_plugin" -> "grimoire/mmdetection-to-tensorrt"
"grimoire/mmdetection-to-tensorrt" -> "grimoire/torch2trt_dynamic"
"grimoire/mmdetection-to-tensorrt" -> "grimoire/amirstan_plugin"
"grimoire/mmdetection-to-tensorrt" -> "Syencil/tensorRT"
"grimoire/mmdetection-to-tensorrt" -> "open-mmlab/mmdeploy"
"grimoire/mmdetection-to-tensorrt" -> "layerism/TensorRT-Inference-Server-Tutorial"
"grimoire/mmdetection-to-tensorrt" -> "dlunion/tensorRTIntegrate"
"grimoire/mmdetection-to-tensorrt" -> "hhaAndroid/mmdetection-mini"
"grimoire/mmdetection-to-tensorrt" -> "NVIDIA-AI-IOT/torch2trt"
"grimoire/mmdetection-to-tensorrt" -> "zerollzeng/tiny-tensorrt"
"grimoire/mmdetection-to-tensorrt" -> "CaoWGG/TensorRT-CenterNet"
"grimoire/mmdetection-to-tensorrt" -> "onnx/onnx-tensorrt"
"grimoire/mmdetection-to-tensorrt" -> "Syencil/mobile-yolov5-pruning-distillation" ["e"=1]
"grimoire/mmdetection-to-tensorrt" -> "linghu8812/tensorrt_inference"
"grimoire/mmdetection-to-tensorrt" -> "wdhao/tensorrtCV" ["e"=1]
"grimoire/mmdetection-to-tensorrt" -> "threeYANG/mmdetection_libtorch"
"grimoire/torch2trt_dynamic" -> "grimoire/amirstan_plugin"
"grimoire/torch2trt_dynamic" -> "grimoire/mmdetection-to-tensorrt"
"grimoire/torch2trt_dynamic" -> "rmccorm4/tensorrt-utils" ["e"=1]
"inisis/brocolli" -> "xxradon/PytorchToCaffe"
"inisis/brocolli" -> "starimeL/PytorchConverter"
"inisis/brocolli" -> "longcw/pytorch2caffe"
"inisis/brocolli" -> "MTlab/onnx2caffe"
"inisis/brocolli" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"inisis/brocolli" -> "zhy520xp/mace-makefile-project" ["e"=1]
"inisis/brocolli" -> "hahnyuan/nn_tools"
"inisis/brocolli" -> "hanson-young/nniefacelib" ["e"=1]
"inisis/brocolli" -> "deepglint/EasyQuant" ["e"=1]
"inisis/brocolli" -> "ChenYingpeng/darknet2caffe"
"inisis/brocolli" -> "Charrin/RetinaFace-Cpp" ["e"=1]
"kuangliu/torchcv" -> "kuangliu/pytorch-ssd"
"kuangliu/torchcv" -> "ignacio-rocco/detectorch"
"kuangliu/torchcv" -> "c0nn3r/RetinaNet"
"kuangliu/torchcv" -> "kuangliu/pytorch-retinanet"
"kuangliu/torchcv" -> "roytseng-tw/mask-rcnn.pytorch"
"kuangliu/torchcv" -> "ShuangXieIrene/ssds.pytorch"
"kuangliu/torchcv" -> "marvis/pytorch-yolo2"
"kuangliu/torchcv" -> "jwyang/fpn.pytorch"
"kuangliu/torchcv" -> "lzx1413/PytorchSSD"
"kuangliu/torchcv" -> "uoip/SSD-variants"
"kuangliu/torchcv" -> "ruiminshen/yolo2-pytorch"
"kuangliu/torchcv" -> "bharatsingh430/Deformable-ConvNets"
"kuangliu/torchcv" -> "soeaver/Pytorch_Mask_RCNN"
"microsoft/OLive" -> "microsoft/onnxconverter-common"
"microsoft/OLive" -> "microsoft/onnxruntime-training-examples"
"microsoft/OLive" -> "microsoft/onnxruntime-inference-examples"
"microsoft/OLive" -> "onnx/optimizer"
"microsoft/onnxruntime-inference-examples" -> "leimao/ONNX-Runtime-Inference"
"microsoft/onnxruntime-inference-examples" -> "microsoft/OLive"
"microsoft/onnxruntime-inference-examples" -> "microsoft/onnxruntime-extensions"
"microsoft/onnxruntime-inference-examples" -> "tenglike1997/onnxruntime-projects"
"microsoft/onnxruntime-inference-examples" -> "itsnine/yolov5-onnxruntime" ["e"=1]
"microsoft/onnxruntime-inference-examples" -> "microsoft/onnxruntime"
"microsoft/onnxruntime-inference-examples" -> "xmba15/onnx_runtime_cpp"
"microsoft/onnxruntime-inference-examples" -> "ZhangGe6/onnx-modifier"
"microsoft/onnxruntime-inference-examples" -> "daquexian/onnx-simplifier"
"microsoft/onnxruntime-inference-examples" -> "pytorch/TensorRT"
"microsoft/onnxruntime-inference-examples" -> "microsoft/onnxruntime-training-examples"
"sanghoon/pva-faster-rcnn" -> "Orpine/py-R-FCN"
"sanghoon/pva-faster-rcnn" -> "daijifeng001/R-FCN"
"sanghoon/pva-faster-rcnn" -> "zhaoweicai/mscnn"
"sanghoon/pva-faster-rcnn" -> "abhi2610/ohem"
"sanghoon/pva-faster-rcnn" -> "bharatsingh430/soft-nms"
"sanghoon/pva-faster-rcnn" -> "shicai/MobileNet-Caffe"
"sanghoon/pva-faster-rcnn" -> "soeaver/caffe-model"
"sanghoon/pva-faster-rcnn" -> "yihui-he/channel-pruning" ["e"=1]
"sanghoon/pva-faster-rcnn" -> "xingwangsfu/caffe-yolo"
"sanghoon/pva-faster-rcnn" -> "yjxiong/caffe" ["e"=1]
"sanghoon/pva-faster-rcnn" -> "szq0214/DSOD"
"sanghoon/pva-faster-rcnn" -> "craftGBD/craftGBD"
"sanghoon/pva-faster-rcnn" -> "xiaohaoChen/rrc_detection"
"sanghoon/pva-faster-rcnn" -> "taokong/RON"
"sanghoon/pva-faster-rcnn" -> "bharatsingh430/py-R-FCN-multiGPU"
"PaulChongPeng/darknet" -> "lars76/kmeans-anchor-boxes"
"PaulChongPeng/darknet" -> "Jumabek/darknet_scripts"
"PaulChongPeng/darknet" -> "gklz1982/caffe-yolov2"
"PaulChongPeng/darknet" -> "yeahkun/caffe-yolo"
"PaulChongPeng/darknet" -> "hjimce/darknet_mobilenet" ["e"=1]
"PaulChongPeng/darknet" -> "bharatsingh430/soft-nms"
"PaulChongPeng/darknet" -> "makefile/frcnn"
"Robert-JunWang/PeleeNet" -> "Robert-JunWang/Pelee"
"Robert-JunWang/PeleeNet" -> "nnUyi/PeleeNet"
"shaoshengsong/MobileNetV3-SSD" -> "tongyuhome/MobileNetV3-SSD"
"shaoshengsong/MobileNetV3-SSD" -> "shaoshengsong/MobileNetV3-SSD-Compact-Version"
"shaoshengsong/MobileNetV3-SSD" -> "shaoshengsong/quarkdet"
"shaoshengsong/MobileNetV3-SSD" -> "qfgaohao/pytorch-ssd"
"shaoshengsong/MobileNetV3-SSD" -> "ShuangXieIrene/ssds.pytorch"
"shaoshengsong/MobileNetV3-SSD" -> "leaderj1001/MobileNetV3-Pytorch"
"shaoshengsong/MobileNetV3-SSD" -> "ujsyehao/mobilenetv3-ssd"
"shaoshengsong/MobileNetV3-SSD" -> "kuan-wang/pytorch-mobilenet-v3"
"shaoshengsong/MobileNetV3-SSD" -> "shaoshengsong/EfficientNet-SSD"
"shaoshengsong/MobileNetV3-SSD" -> "ZhongyuanW/SSD_mobilenetv2-with-Focal-loss"
"shaoshengsong/MobileNetV3-SSD" -> "xiaolai-sqlai/mobilenetv3"
"shaoshengsong/MobileNetV3-SSD" -> "jinfagang/ssds_pytorch"
"guoruoqian/cascade-rcnn_Pytorch" -> "guoruoqian/DetNet_pytorch"
"guoruoqian/cascade-rcnn_Pytorch" -> "zhaoweicai/cascade-rcnn"
"guoruoqian/cascade-rcnn_Pytorch" -> "zhaoweicai/Detectron-Cascade-RCNN"
"guoruoqian/cascade-rcnn_Pytorch" -> "lzx1413/PytorchSSD"
"guoruoqian/cascade-rcnn_Pytorch" -> "DetectionTeamUCAS/Cascade-RCNN_Tensorflow"
"guoruoqian/cascade-rcnn_Pytorch" -> "jwyang/fpn.pytorch"
"guoruoqian/cascade-rcnn_Pytorch" -> "ruinmessi/RFBNet"
"guoruoqian/cascade-rcnn_Pytorch" -> "ming71/mmdetection-annotated"
"guoruoqian/cascade-rcnn_Pytorch" -> "vacancy/PreciseRoIPooling"
"guoruoqian/cascade-rcnn_Pytorch" -> "guoruoqian/FPN_Pytorch"
"guoruoqian/cascade-rcnn_Pytorch" -> "unsky/FPN"
"guoruoqian/cascade-rcnn_Pytorch" -> "luuuyi/RefineDet.PyTorch"
"guoruoqian/cascade-rcnn_Pytorch" -> "mahyarnajibi/SNIPER"
"guoruoqian/cascade-rcnn_Pytorch" -> "PureDiors/pytorch_RFCN"
"guoruoqian/cascade-rcnn_Pytorch" -> "qijiezhao/M2Det"
"bytedance/ibot" -> "facebookresearch/moco-v3"
"bytedance/ibot" -> "microsoft/SimMIM"
"bytedance/ibot" -> "facebookresearch/msn"
"bytedance/ibot" -> "microsoft/esvit"
"bytedance/ibot" -> "WXinlong/DenseCL"
"bytedance/ibot" -> "ucasligang/awesome-MIM"
"bytedance/ibot" -> "facebookresearch/SLIP" ["e"=1]
"bytedance/ibot" -> "lxtGH/CAE"
"bytedance/ibot" -> "KaiyangZhou/CoOp" ["e"=1]
"bytedance/ibot" -> "baaivision/EVA" ["e"=1]
"bytedance/ibot" -> "SwinTransformer/Transformer-SSL"
"bytedance/ibot" -> "sail-sg/mugs"
"bytedance/ibot" -> "KMnP/vpt" ["e"=1]
"bytedance/ibot" -> "SwinTransformer/Feature-Distillation"
"bytedance/ibot" -> "open-mmlab/mmselfsup"
"leaderj1001/MobileNetV3-Pytorch" -> "kuan-wang/pytorch-mobilenet-v3"
"leaderj1001/MobileNetV3-Pytorch" -> "xiaolai-sqlai/mobilenetv3"
"leaderj1001/MobileNetV3-Pytorch" -> "shaoshengsong/MobileNetV3-SSD"
"leaderj1001/MobileNetV3-Pytorch" -> "tongyuhome/MobileNetV3-SSD"
"leaderj1001/MobileNetV3-Pytorch" -> "Bisonai/mobilenetv3-tensorflow"
"leaderj1001/MobileNetV3-Pytorch" -> "d-li14/mobilenetv3.pytorch"
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/X2Paddle"
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/Paddle-Inference-Demo"
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/Paddle3D"
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/CINN"
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/PaddleHelix" ["e"=1]
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/Parakeet" ["e"=1]
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/PaddleRobotics" ["e"=1]
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/FastDeploy"
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/PaddleYOLO"
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/PaddleSlim"
"PaddlePaddle/Paddle2ONNX" -> "ZhangGe6/onnx-modifier"
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/Serving" ["e"=1]
"PaddlePaddle/Paddle2ONNX" -> "jiangjiajun/PaddleUtils"
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/Paddle-Lite"
"PaddlePaddle/Paddle2ONNX" -> "PaddlePaddle/Paddle-Lite-Demo"
"Syencil/tensorRT" -> "Syencil/mobile-yolov5-pruning-distillation" ["e"=1]
"Syencil/tensorRT" -> "dlunion/tensorRTIntegrate"
"Syencil/tensorRT" -> "zerollzeng/tiny-tensorrt"
"Syencil/tensorRT" -> "linghu8812/tensorrt_inference"
"Syencil/tensorRT" -> "enazoe/yolo-tensorrt"
"Syencil/tensorRT" -> "layerism/TensorRT-Inference-Server-Tutorial"
"Syencil/tensorRT" -> "CaoWGG/TensorRT-CenterNet"
"Syencil/tensorRT" -> "CaoWGG/TensorRT-YOLOv4"
"Syencil/tensorRT" -> "grimoire/mmdetection-to-tensorrt"
"Syencil/tensorRT" -> "wdhao/tensorrtCV" ["e"=1]
"Syencil/tensorRT" -> "wang-xinyu/tensorrtx"
"Syencil/tensorRT" -> "LitLeo/TensorRT_Tutorial"
"Syencil/tensorRT" -> "JosephChenHub/CenterNet-TensorRT"
"Syencil/tensorRT" -> "ZJU-lishuang/yolov5_prune" ["e"=1]
"Syencil/tensorRT" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"dlunion/tensorRTIntegrate" -> "CaoWGG/TensorRT-CenterNet"
"dlunion/tensorRTIntegrate" -> "Syencil/tensorRT"
"dlunion/tensorRTIntegrate" -> "zerollzeng/tiny-tensorrt"
"dlunion/tensorRTIntegrate" -> "LitLeo/TensorRT_Tutorial"
"dlunion/tensorRTIntegrate" -> "onnx/onnx-tensorrt"
"dlunion/tensorRTIntegrate" -> "JosephChenHub/CenterNet-TensorRT"
"dlunion/tensorRTIntegrate" -> "linghu8812/tensorrt_inference"
"dlunion/tensorRTIntegrate" -> "enazoe/yolo-tensorrt"
"dlunion/tensorRTIntegrate" -> "dlunion/DBFace" ["e"=1]
"dlunion/tensorRTIntegrate" -> "grimoire/mmdetection-to-tensorrt"
"dlunion/tensorRTIntegrate" -> "CaoWGG/TensorRT-YOLOv4"
"dlunion/tensorRTIntegrate" -> "DataXujing/TensorRT_CV"
"dlunion/tensorRTIntegrate" -> "layerism/TensorRT-Inference-Server-Tutorial"
"dlunion/tensorRTIntegrate" -> "wdhao/tensorrtCV" ["e"=1]
"dlunion/tensorRTIntegrate" -> "shouxieai/tensorRT_cpp"
"SegmentationBLWX/sssegmentation" -> "CharlesPikachu/mcibi"
"SegmentationBLWX/sssegmentation" -> "lanyunzhu99/Learning-Statistical-Texture-for-Semantic-Segmentation"
"SegmentationBLWX/sssegmentation" -> "openseg-group/openseg.pytorch" ["e"=1]
"SegmentationBLWX/sssegmentation" -> "SwinTransformer/Swin-Transformer-Semantic-Segmentation"
"SegmentationBLWX/sssegmentation" -> "fudan-zvg/SETR"
"SegmentationBLWX/sssegmentation" -> "tfzhou/ContrastiveSeg"
"SegmentationBLWX/sssegmentation" -> "Picsart-AI-Research/SeMask-Segmentation"
"SegmentationBLWX/sssegmentation" -> "facebookresearch/MaskFormer"
"SegmentationBLWX/sssegmentation" -> "lxtGH/DecoupleSegNets" ["e"=1]
"SegmentationBLWX/sssegmentation" -> "rstrudel/segmenter"
"SegmentationBLWX/sssegmentation" -> "lxtGH/SFSegNets" ["e"=1]
"SegmentationBLWX/sssegmentation" -> "open-mmlab/mmsegmentation"
"SegmentationBLWX/sssegmentation" -> "tfzhou/ProtoSeg" ["e"=1]
"SegmentationBLWX/sssegmentation" -> "ZwwWayne/K-Net"
"SegmentationBLWX/sssegmentation" -> "NVlabs/SegFormer"
"murufeng/CVPR_2021_Papers" -> "rozumden/DeFMO" ["e"=1]
"murufeng/CVPR_2021_Papers" -> "extreme-assistant/ICCV2021-Paper-Code-Interpretation"
"murufeng/CVPR_2021_Papers" -> "extreme-assistant/CVPR2021-Paper-Code-Interpretation"
"murufeng/CVPR_2021_Papers" -> "Kobaayyy/Awesome-CVPR2021-CVPR2020-Low-Level-Vision" ["e"=1]
"murufeng/CVPR_2021_Papers" -> "yifan2/Image-Dehazing" ["e"=1]
"murufeng/CVPR_2021_Papers" -> "murufeng/awesome_lightweight_networks"
"murufeng/CVPR_2021_Papers" -> "DWCTOD/ICCV2021-Papers-with-Code-Demo"
"murufeng/CVPR_2021_Papers" -> "amusi/CVPR2021-Papers-with-Code"
"murufeng/CVPR_2021_Papers" -> "swz30/MPRNet" ["e"=1]
"murufeng/CVPR_2021_Papers" -> "misads/cv_template"
"PyTorchLightning/lightning-transformers" -> "PyTorchLightning/lightning-flash"
"PyTorchLightning/lightning-transformers" -> "PyTorchLightning/metrics"
"PyTorchLightning/lightning-transformers" -> "tunib-ai/parallelformers" ["e"=1]
"PyTorchLightning/lightning-transformers" -> "PyTorchLightning/lightning-bolts"
"PyTorchLightning/lightning-transformers" -> "kakaobrain/KorNLUDatasets" ["e"=1]
"PyTorchLightning/lightning-transformers" -> "KLUE-benchmark/KLUE" ["e"=1]
"PyTorchLightning/lightning-transformers" -> "lassl/lassl" ["e"=1]
"PyTorchLightning/lightning-transformers" -> "Huffon/nlp-startups" ["e"=1]
"PyTorchLightning/lightning-transformers" -> "hyunwoongko/kss" ["e"=1]
"PyTorchLightning/lightning-transformers" -> "kocohub/korean-hate-speech" ["e"=1]
"PyTorchLightning/lightning-transformers" -> "KLUE-benchmark/KLUE-baseline" ["e"=1]
"PyTorchLightning/lightning-transformers" -> "SeanNaren/minGPT"
"PyTorchLightning/lightning-transformers" -> "gritmind/python-nori"
"PyTorchLightning/lightning-transformers" -> "monologg/KoELECTRA" ["e"=1]
"PyTorchLightning/lightning-transformers" -> "tunib-ai/oslo" ["e"=1]
"mlpc-ucsd/CoaT" -> "ofsoundof/LocalViT"
"mlpc-ucsd/CoaT" -> "youngwanLEE/MPViT"
"mlpc-ucsd/CoaT" -> "Meituan-AutoML/CPVT"
"waleedka/hiddenlayer" -> "szagoruyko/pytorchviz"
"waleedka/hiddenlayer" -> "utkuozbulak/pytorch-cnn-visualizations"
"waleedka/hiddenlayer" -> "lanpa/tensorboardX"
"waleedka/hiddenlayer" -> "sksq96/pytorch-summary"
"waleedka/hiddenlayer" -> "microsoft/tensorwatch"
"waleedka/hiddenlayer" -> "pytorch/ignite"
"waleedka/hiddenlayer" -> "williamFalcon/pytorch-lightning"
"waleedka/hiddenlayer" -> "pytorch/tnt"
"waleedka/hiddenlayer" -> "pytorch/captum"
"waleedka/hiddenlayer" -> "albu/albumentations"
"waleedka/hiddenlayer" -> "LiyuanLucasLiu/RAdam"
"waleedka/hiddenlayer" -> "NVIDIA/apex"
"waleedka/hiddenlayer" -> "Microsoft/MMdnn"
"waleedka/hiddenlayer" -> "facebookresearch/visdom"
"waleedka/hiddenlayer" -> "Lyken17/pytorch-OpCounter"
"lucidrains/pixel-level-contrastive-learning" -> "zdaxie/PixPro"
"lucidrains/pixel-level-contrastive-learning" -> "lucidrains/byol-pytorch"
"lucidrains/pixel-level-contrastive-learning" -> "WXinlong/DenseCL"
"KimSoybean/ScratchDet" -> "qijiezhao/CFENet"
"KimSoybean/ScratchDet" -> "OceanPang/Libra_R-CNN"
"KimSoybean/ScratchDet" -> "yihui-he/KL-Loss"
"KimSoybean/ScratchDet" -> "xingyizhou/ExtremeNet"
"KimSoybean/ScratchDet" -> "liuwei16/CSP" ["e"=1]
"KimSoybean/ScratchDet" -> "generalized-iou/Detectron.pytorch" ["e"=1]
"KimSoybean/ScratchDet" -> "hli2020/feature_intertwiner"
"KimSoybean/ScratchDet" -> "guoruoqian/DetNet_pytorch"
"KimSoybean/ScratchDet" -> "sfzhang15/SFD" ["e"=1]
"KimSoybean/ScratchDet" -> "luuuyi/RefineDet.PyTorch"
"KimSoybean/ScratchDet" -> "ChiCheng123/SRN" ["e"=1]
"stigma0617/VoVNet.pytorch" -> "stigma0617/maskrcnn-benchmark-vovnet"
"mhamilton723/STEGO" -> "janghyuncho/PiCIE"
"mhamilton723/STEGO" -> "wvangansbeke/Unsupervised-Semantic-Segmentation"
"mhamilton723/STEGO" -> "NVlabs/FreeSOLO"
"mhamilton723/STEGO" -> "YangtaoWANG95/TokenCut"
"mhamilton723/STEGO" -> "Haochen-Wang409/U2PL" ["e"=1]
"mhamilton723/STEGO" -> "MkuuWaUjinga/leopart"
"mhamilton723/STEGO" -> "facebookresearch/dino"
"mhamilton723/STEGO" -> "lukemelas/deep-spectral-segmentation" ["e"=1]
"mhamilton723/STEGO" -> "czczup/ViT-Adapter" ["e"=1]
"mhamilton723/STEGO" -> "chongzhou96/MaskCLIP" ["e"=1]
"mhamilton723/STEGO" -> "facebookresearch/CutLER" ["e"=1]
"mhamilton723/STEGO" -> "yandex-research/ddpm-segmentation" ["e"=1]
"mhamilton723/STEGO" -> "lhoyer/HRDA" ["e"=1]
"mhamilton723/STEGO" -> "xu-ji/IIC"
"mhamilton723/STEGO" -> "facebookresearch/Mask2Former"
"Yunfan-Li/Contrastive-Clustering" -> "Yunfan-Li/Twin-Contrastive-Learning"
"Yunfan-Li/Contrastive-Clustering" -> "XLearning-SCU/2021-CVPR-Completer"
"Yunfan-Li/Contrastive-Clustering" -> "salesforce/PCL"
"Yunfan-Li/Contrastive-Clustering" -> "Raymond-sci/PICA"
"Yunfan-Li/Contrastive-Clustering" -> "amazon-research/sccl" ["e"=1]
"Yunfan-Li/Contrastive-Clustering" -> "yukimasano/self-label"
"Yunfan-Li/Contrastive-Clustering" -> "ZhiyuanDang/NNM"
"Yunfan-Li/Contrastive-Clustering" -> "wvangansbeke/Unsupervised-Classification"
"Yunfan-Li/Contrastive-Clustering" -> "xuyxu/Deep-Clustering-Network"
"zasdfgbnm/TorchSnooper" -> "awwong1/torchprof"
"zasdfgbnm/TorchSnooper" -> "zxdefying/pytorch_tricks"
"zasdfgbnm/TorchSnooper" -> "williamFalcon/pytorch-lightning"
"zasdfgbnm/TorchSnooper" -> "Lyken17/Efficient-PyTorch"
"zasdfgbnm/TorchSnooper" -> "szagoruyko/pytorchviz"
"zasdfgbnm/TorchSnooper" -> "xingyizhou/ExtremeNet"
"zasdfgbnm/TorchSnooper" -> "DIYer22/boxx"
"zasdfgbnm/TorchSnooper" -> "BlackHC/tfpyth" ["e"=1]
"zasdfgbnm/TorchSnooper" -> "pytorch/hub"
"zasdfgbnm/TorchSnooper" -> "microsoft/tensorwatch"
"zasdfgbnm/TorchSnooper" -> "tanglang96/DataLoaders_DALI"
"zasdfgbnm/TorchSnooper" -> "sksq96/pytorch-summary"
"zasdfgbnm/TorchSnooper" -> "Oldpan/Pytorch-Memory-Utils"
"zasdfgbnm/TorchSnooper" -> "princeton-vl/CornerNet-Lite"
"zasdfgbnm/TorchSnooper" -> "alexmojaki/snoop" ["e"=1]
"philipperemy/yolo-9000" -> "gliese581gg/YOLO_tensorflow"
"philipperemy/yolo-9000" -> "marvis/pytorch-yolo2"
"philipperemy/yolo-9000" -> "nilboy/tensorflow-yolo"
"philipperemy/yolo-9000" -> "CharlesShang/FastMaskRCNN"
"philipperemy/yolo-9000" -> "balancap/SSD-Tensorflow"
"philipperemy/yolo-9000" -> "xingwangsfu/caffe-yolo"
"philipperemy/yolo-9000" -> "szq0214/DSOD"
"philipperemy/yolo-9000" -> "longcw/yolo2-pytorch"
"philipperemy/yolo-9000" -> "allanzelener/YAD2K"
"philipperemy/yolo-9000" -> "thtrieu/darkflow"
"philipperemy/yolo-9000" -> "shicai/MobileNet-Caffe"
"philipperemy/yolo-9000" -> "Zehaos/MobileNet"
"philipperemy/yolo-9000" -> "msracver/FCIS"
"philipperemy/yolo-9000" -> "msracver/Deep-Feature-Flow" ["e"=1]
"philipperemy/yolo-9000" -> "weiliu89/caffe"
"shishichang/yolov2-tensorflow" -> "PaulChongPeng/YOLO2TensorFlow"
"shishichang/yolov2-tensorflow" -> "persistforever/yolo-tensorflow"
"shishichang/yolov2-tensorflow" -> "ruiminshen/yolo-tf"
"shishichang/yolov2-tensorflow" -> "WojciechMormul/yolo2"
"PaddlePaddle/Fleet" -> "PaddlePaddle/FluidDoc"
"wangsr126/RDSNet" -> "vaesl/LRF-Net"
"wangsr126/RDSNet" -> "KiveeDong/CentripetalNet"
"wangsr126/RDSNet" -> "zl1994/IoU-Uniform-R-CNN"
"wangsr126/RDSNet" -> "Ranchentx/EFGRNet"
"wangsr126/RDSNet" -> "jinfagang/CenterNet_Pro_Max"
"innerlee/setup" -> "open-mmlab/denseflow"
"innerlee/setup" -> "open-mmlab/mim"
"innerlee/setup" -> "open-mmlab/mmaction" ["e"=1]
"innerlee/setup" -> "open-mmlab/mmaction2" ["e"=1]
"innerlee/setup" -> "zhenyingfang/Awesome-Temporal-Action-Detection-Temporal-Action-Proposal-Generation" ["e"=1]
"innerlee/setup" -> "jshilong/FisherPruning"
"innerlee/setup" -> "open-mmlab/mmeval"
"innerlee/setup" -> "jshilong/GroupRCNN"
"innerlee/setup" -> "open-mmlab/mmfewshot"
"innerlee/setup" -> "TencentYoutuResearch/ActionDetection-AFSD" ["e"=1]
"innerlee/setup" -> "HumamAlwassel/TSP" ["e"=1]
"innerlee/setup" -> "SwinTransformer/Video-Swin-Transformer" ["e"=1]
"innerlee/setup" -> "Alvin-Zeng/PGCN" ["e"=1]
"innerlee/setup" -> "open-mmlab/mmflow"
"DeNA/PyTorch_YOLOv3" -> "BobLiu20/YOLOv3_PyTorch"
"DeNA/PyTorch_YOLOv3" -> "motokimura/PyTorch_Gaussian_YOLOv3" ["e"=1]
"DeNA/PyTorch_YOLOv3" -> "Peterisfar/YOLOV3"
"DeNA/PyTorch_YOLOv3" -> "Stinky-Tofu/Stronger-yolo"
"DeNA/PyTorch_YOLOv3" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"DeNA/PyTorch_YOLOv3" -> "qijiezhao/M2Det"
"DeNA/PyTorch_YOLOv3" -> "marvis/pytorch-yolo2"
"DeNA/PyTorch_YOLOv3" -> "jwchoi384/Gaussian_YOLOv3" ["e"=1]
"DeNA/PyTorch_YOLOv3" -> "lars76/kmeans-anchor-boxes"
"DeNA/PyTorch_YOLOv3" -> "leetenki/YOLOv2" ["e"=1]
"DeNA/PyTorch_YOLOv3" -> "ruinmessi/ASFF"
"DeNA/PyTorch_YOLOv3" -> "andy-yun/pytorch-0.4-yolov3"
"DeNA/PyTorch_YOLOv3" -> "nyoki-mtl/pytorch-segmentation" ["e"=1]
"DeNA/PyTorch_YOLOv3" -> "eriklindernoren/PyTorch-YOLOv3"
"DeNA/PyTorch_YOLOv3" -> "ruinmessi/RFBNet"
"guoruoqian/FPN_Pytorch" -> "guoruoqian/DetNet_pytorch"
"Megvii-BaseDetection/DenseTeacher" -> "chenbinghui1/DSL"
"Megvii-BaseDetection/DenseTeacher" -> "ligang-cs/PseCo"
"Megvii-BaseDetection/DenseTeacher" -> "hikvision-research/SSOD"
"Megvii-BaseDetection/DenseTeacher" -> "facebookresearch/unbiased-teacher-v2"
"Megvii-BaseDetection/cvpods" -> "Megvii-BaseDetection/DeFCN"
"Megvii-BaseDetection/cvpods" -> "Megvii-BaseDetection/OTA"
"Megvii-BaseDetection/cvpods" -> "Megvii-BaseDetection/BorderDet"
"Megvii-BaseDetection/cvpods" -> "megvii-model/YOLOF"
"Megvii-BaseDetection/cvpods" -> "chensnathan/YOLOF"
"Megvii-BaseDetection/cvpods" -> "Megvii-BaseDetection/AutoAssign"
"Megvii-BaseDetection/cvpods" -> "PeizeSun/SparseR-CNN"
"Megvii-BaseDetection/cvpods" -> "PeizeSun/OneNet"
"Megvii-BaseDetection/cvpods" -> "implus/GFocalV2"
"Megvii-BaseDetection/cvpods" -> "Megvii-BaseDetection/DisAlign" ["e"=1]
"Megvii-BaseDetection/cvpods" -> "microsoft/SoftTeacher"
"Megvii-BaseDetection/cvpods" -> "microsoft/RelationNet2"
"Megvii-BaseDetection/cvpods" -> "txdet/FCOSPss"
"Megvii-BaseDetection/cvpods" -> "kkhoot/PAA"
"Megvii-BaseDetection/cvpods" -> "xingyizhou/CenterNet2"
"amazon-research/bigdetection" -> "xingyizhou/UniDet"
"amazon-research/bigdetection" -> "hustvl/MIMDet"
"hikvision-research/SSOD" -> "ligang-cs/PseCo"
"hikvision-research/SSOD" -> "chenbinghui1/DSL"
"hikvision-research/SSOD" -> "hikvision-research/ProbabilisticTeacher" ["e"=1]
"hikvision-research/SSOD" -> "hikvision-research/SlimDA"
"hikvision-research/SSOD" -> "Megvii-BaseDetection/DenseTeacher"
"hikvision-research/SSOD" -> "HunterJ-Lin/ActiveTeacher"
"hikvision-research/SSOD" -> "facebookresearch/unbiased-teacher-v2"
"jiweibo/ImageNet" -> "akamaster/pytorch_resnet_cifar10"
"jiweibo/ImageNet" -> "jiecaoyu/pytorch_imagenet"
"soo89/CSD-SSD" -> "soo89/CSD-RFCN"
"soo89/CSD-SSD" -> "soo89/ISD-SSD"
"soo89/CSD-SSD" -> "google-research/ssl_detection"
"szagoruyko/wide-residual-networks" -> "facebook/fb.resnet.torch"
"szagoruyko/wide-residual-networks" -> "meliketoy/wide-resnet.pytorch"
"szagoruyko/wide-residual-networks" -> "xternalz/WideResNet-pytorch"
"szagoruyko/wide-residual-networks" -> "KaimingHe/resnet-1k-layers"
"szagoruyko/wide-residual-networks" -> "liuzhuang13/DenseNet"
"szagoruyko/wide-residual-networks" -> "facebookresearch/ResNeXt"
"szagoruyko/wide-residual-networks" -> "szagoruyko/attention-transfer" ["e"=1]
"szagoruyko/wide-residual-networks" -> "torchnet/torchnet" ["e"=1]
"szagoruyko/wide-residual-networks" -> "gcr/torch-residual-networks" ["e"=1]
"szagoruyko/wide-residual-networks" -> "yueatsprograms/Stochastic_Depth" ["e"=1]
"szagoruyko/wide-residual-networks" -> "szagoruyko/cifar.torch" ["e"=1]
"szagoruyko/wide-residual-networks" -> "fmassa/optimize-net" ["e"=1]
"szagoruyko/wide-residual-networks" -> "ppwwyyxx/tensorpack"
"szagoruyko/wide-residual-networks" -> "soumith/convnet-benchmarks" ["e"=1]
"szagoruyko/wide-residual-networks" -> "facebook/fb-caffe-exts" ["e"=1]
"vacancy/PreciseRoIPooling" -> "msracver/Relation-Networks-for-Object-Detection"
"vacancy/PreciseRoIPooling" -> "yihui-he/KL-Loss"
"vacancy/PreciseRoIPooling" -> "yihui-he/softer-NMS"
"vacancy/PreciseRoIPooling" -> "zhaoweicai/cascade-rcnn"
"vacancy/PreciseRoIPooling" -> "ruinmessi/RFBNet"
"vacancy/PreciseRoIPooling" -> "xingyizhou/ExtremeNet"
"vacancy/PreciseRoIPooling" -> "umich-vl/CornerNet"
"vacancy/PreciseRoIPooling" -> "zhangxiaosong18/FreeAnchor"
"vacancy/PreciseRoIPooling" -> "microsoft/RepPoints"
"vacancy/PreciseRoIPooling" -> "mahyarnajibi/SNIPER"
"vacancy/PreciseRoIPooling" -> "foolwood/DaSiamRPN" ["e"=1]
"vacancy/PreciseRoIPooling" -> "tianzhi0549/FCOS"
"vacancy/PreciseRoIPooling" -> "visionml/pytracking" ["e"=1]
"vacancy/PreciseRoIPooling" -> "bharatsingh430/soft-nms"
"vacancy/PreciseRoIPooling" -> "StrangerZhang/pysot-toolkit" ["e"=1]
"ACheun9/Pytorch-implementation-of-Mobile-Former" -> "slwang9353/MobileFormer"
"hustvl/TopFormer" -> "fudan-zvg/SeaFormer"
"hustvl/TopFormer" -> "hustvl/MIMDet"
"hustvl/TopFormer" -> "Picsart-AI-Research/SeMask-Segmentation"
"hustvl/TopFormer" -> "hustvl/Featurized-QueryRCNN"
"hustvl/TopFormer" -> "hustvl/SparseInst"
"hustvl/TopFormer" -> "mmaaz60/EdgeNeXt"
"microsoft/Cream" -> "mit-han-lab/once-for-all" ["e"=1]
"microsoft/Cream" -> "megvii-model/SinglePathOneShot" ["e"=1]
"microsoft/Cream" -> "raoyongming/DynamicViT"
"microsoft/Cream" -> "facebookresearch/deit"
"microsoft/Cream" -> "yuhuixu1993/PC-DARTS" ["e"=1]
"microsoft/Cream" -> "yitu-opensource/T2T-ViT"
"microsoft/Cream" -> "microsoft/CSWin-Transformer"
"microsoft/Cream" -> "whai362/PVT"
"microsoft/Cream" -> "facebookresearch/LeViT"
"microsoft/Cream" -> "microsoft/SimMIM"
"microsoft/Cream" -> "automl/NASLib" ["e"=1]
"microsoft/Cream" -> "dk-liang/Awesome-Visual-Transformer"
"microsoft/Cream" -> "JiahuiYu/slimmable_networks" ["e"=1]
"microsoft/Cream" -> "automl/awesome-transformer-search" ["e"=1]
"microsoft/Cream" -> "facebookresearch/AttentiveNAS" ["e"=1]
"Sophia-11/Awesome-NeurIPS2019-NIPS2019" -> "extreme-assistant/nips2019"
"raoyongming/DynamicViT" -> "youweiliang/evit"
"raoyongming/DynamicViT" -> "zihangJiang/TokenLabeling"
"raoyongming/DynamicViT" -> "blackfeather-wang/Dynamic-Vision-Transformer" ["e"=1]
"raoyongming/DynamicViT" -> "NVlabs/A-ViT"
"raoyongming/DynamicViT" -> "Meituan-AutoML/Twins"
"raoyongming/DynamicViT" -> "microsoft/Cream"
"raoyongming/DynamicViT" -> "raoyongming/DenseCLIP" ["e"=1]
"raoyongming/DynamicViT" -> "yitu-opensource/T2T-ViT"
"raoyongming/DynamicViT" -> "OliverRensu/Shunted-Transformer"
"raoyongming/DynamicViT" -> "changlin31/DS-Net" ["e"=1]
"raoyongming/DynamicViT" -> "facebookresearch/deit"
"raoyongming/DynamicViT" -> "MengLcool/AdaViT"
"raoyongming/DynamicViT" -> "facebookresearch/ToMe" ["e"=1]
"raoyongming/DynamicViT" -> "Meituan-AutoML/CPVT"
"raoyongming/DynamicViT" -> "raoyongming/GFNet"
"youngwanLEE/CenterMask" -> "youngwanLEE/centermask2"
"youngwanLEE/CenterMask" -> "xieenze/PolarMask"
"youngwanLEE/CenterMask" -> "youngwanLEE/vovnet-detectron2"
"youngwanLEE/CenterMask" -> "zju3dv/snake"
"youngwanLEE/CenterMask" -> "WXinlong/SOLO"
"youngwanLEE/CenterMask" -> "sfzhang15/ATSS"
"youngwanLEE/CenterMask" -> "aim-uofa/AdelaiDet"
"youngwanLEE/CenterMask" -> "tianzhi0549/FCOS"
"youngwanLEE/CenterMask" -> "dbolya/yolact"
"youngwanLEE/CenterMask" -> "stigma0617/VoVNet.pytorch"
"youngwanLEE/CenterMask" -> "xingyizhou/CenterTrack" ["e"=1]
"youngwanLEE/CenterMask" -> "joe-siyuan-qiao/DetectoRS"
"youngwanLEE/CenterMask" -> "JialeCao001/SipMask" ["e"=1]
"youngwanLEE/CenterMask" -> "yqyao/FCOS_PLUS"
"youngwanLEE/CenterMask" -> "PeizeSun/OneNet"
"youngwanLEE/centermask2" -> "youngwanLEE/CenterMask"
"youngwanLEE/centermask2" -> "youngwanLEE/vovnet-detectron2"
"youngwanLEE/centermask2" -> "xieenze/PolarMask"
"youngwanLEE/centermask2" -> "WXinlong/SOLO"
"youngwanLEE/centermask2" -> "sfzhang15/ATSS"
"youngwanLEE/centermask2" -> "aim-uofa/AdelaiDet"
"youngwanLEE/centermask2" -> "haotian-liu/yolact_edge"
"youngwanLEE/centermask2" -> "zju3dv/snake"
"youngwanLEE/centermask2" -> "aim-uofa/adet"
"youngwanLEE/centermask2" -> "xingyizhou/CenterNet2"
"youngwanLEE/centermask2" -> "joe-siyuan-qiao/DetectoRS"
"youngwanLEE/centermask2" -> "dbolya/yolact"
"youngwanLEE/centermask2" -> "FateScript/CenterNet-better"
"youngwanLEE/centermask2" -> "tianzhi0549/FCOS"
"youngwanLEE/centermask2" -> "DeepSceneSeg/EfficientPS" ["e"=1]
"eric612/MobileNet-YOLO" -> "ChenYingpeng/caffe-yolov3"
"eric612/MobileNet-YOLO" -> "eric612/Caffe-YOLOv3-Windows"
"eric612/MobileNet-YOLO" -> "marvis/pytorch-caffe-darknet-convert"
"eric612/MobileNet-YOLO" -> "chuanqi305/MobileNet-SSD"
"eric612/MobileNet-YOLO" -> "shicai/MobileNet-Caffe"
"eric612/MobileNet-YOLO" -> "xxradon/PytorchToCaffe"
"eric612/MobileNet-YOLO" -> "Adamdad/keras-YOLOv3-mobilenet"
"eric612/MobileNet-YOLO" -> "lewes6369/TensorRT-Yolov3" ["e"=1]
"eric612/MobileNet-YOLO" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"eric612/MobileNet-YOLO" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"eric612/MobileNet-YOLO" -> "Robert-JunWang/Pelee"
"eric612/MobileNet-YOLO" -> "chuanqi305/MobileNetv2-SSDLite"
"eric612/MobileNet-YOLO" -> "fsx950223/mobilenetv2-yolov3"
"eric612/MobileNet-YOLO" -> "yonghenglh6/DepthwiseConvolution"
"eric612/MobileNet-YOLO" -> "PengyiZhang/SlimYOLOv3" ["e"=1]
"mystic123/tensorflow-yolo-v3" -> "PINTO0309/OpenVINO-YoloV3" ["e"=1]
"mystic123/tensorflow-yolo-v3" -> "wizyoung/YOLOv3_TensorFlow"
"mystic123/tensorflow-yolo-v3" -> "YunYang1994/tensorflow-yolov3"
"mystic123/tensorflow-yolo-v3" -> "jinyu121/DW2TF"
"mystic123/tensorflow-yolo-v3" -> "maiminh1996/YOLOv3-tensorflow"
"mystic123/tensorflow-yolo-v3" -> "qqwweee/keras-yolo3"
"mystic123/tensorflow-yolo-v3" -> "Qidian213/deep_sort_yolov3" ["e"=1]
"mystic123/tensorflow-yolo-v3" -> "Adamdad/keras-YOLOv3-mobilenet"
"mystic123/tensorflow-yolo-v3" -> "hizhangp/yolo_tensorflow"
"mystic123/tensorflow-yolo-v3" -> "gliese581gg/YOLO_tensorflow"
"mystic123/tensorflow-yolo-v3" -> "experiencor/keras-yolo3"
"mystic123/tensorflow-yolo-v3" -> "thtrieu/darkflow"
"mystic123/tensorflow-yolo-v3" -> "nilboy/tensorflow-yolo"
"mystic123/tensorflow-yolo-v3" -> "xiaochus/YOLOv3"
"mystic123/tensorflow-yolo-v3" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"ry/tensorflow-resnet" -> "wenxinxu/resnet-in-tensorflow"
"ry/tensorflow-resnet" -> "ry/tensorflow-vgg16"
"ry/tensorflow-resnet" -> "ethereon/caffe-tensorflow"
"ry/tensorflow-resnet" -> "KaimingHe/deep-residual-networks"
"ry/tensorflow-resnet" -> "machrisaa/tensorflow-vgg"
"ry/tensorflow-resnet" -> "ppwwyyxx/tensorpack"
"ry/tensorflow-resnet" -> "MarvinTeichmann/tensorflow-fcn" ["e"=1]
"ry/tensorflow-resnet" -> "facebook/fb.resnet.torch"
"ry/tensorflow-resnet" -> "DrSleep/tensorflow-deeplab-resnet" ["e"=1]
"ry/tensorflow-resnet" -> "smallcorgi/Faster-RCNN_TF"
"ry/tensorflow-resnet" -> "endernewton/tf-faster-rcnn"
"ry/tensorflow-resnet" -> "raghakot/keras-resnet"
"ry/tensorflow-resnet" -> "YixuanLi/densenet-tensorflow"
"ry/tensorflow-resnet" -> "liuzhuang13/DenseNet"
"ry/tensorflow-resnet" -> "gliese581gg/YOLO_tensorflow"
"Jittor/jittor" -> "Oneflow-Inc/oneflow"
"Jittor/jittor" -> "MegEngine/MegEngine"
"Jittor/jittor" -> "mindspore-ai/mindspore" ["e"=1]
"Jittor/jittor" -> "bytedance/byteps" ["e"=1]
"Jittor/jittor" -> "merrymercy/awesome-tensor-compilers" ["e"=1]
"Jittor/jittor" -> "microsoft/nnfusion" ["e"=1]
"Jittor/jittor" -> "dmlc/tvm" ["e"=1]
"Jittor/jittor" -> "Tencent/TNN"
"Jittor/jittor" -> "alibaba/BladeDISC" ["e"=1]
"Jittor/jittor" -> "alibaba/MNN"
"Jittor/jittor" -> "HuaizhengZhang/Awesome-System-for-Machine-Learning" ["e"=1]
"Jittor/jittor" -> "NVIDIA/cutlass" ["e"=1]
"Jittor/jittor" -> "NVIDIA/TensorRT"
"Jittor/jittor" -> "flame/how-to-optimize-gemm" ["e"=1]
"Jittor/jittor" -> "halide/Halide" ["e"=1]
"chinhsuanwu/mobilevit-pytorch" -> "wilile26811249/MobileViT"
"chinhsuanwu/mobilevit-pytorch" -> "apple/ml-cvnets"
"chinhsuanwu/mobilevit-pytorch" -> "chinhsuanwu/coatnet-pytorch"
"chinhsuanwu/mobilevit-pytorch" -> "murufeng/awesome_lightweight_networks"
"chinhsuanwu/mobilevit-pytorch" -> "Chenglin-Yang/LVT"
"chinhsuanwu/mobilevit-pytorch" -> "mmaaz60/EdgeNeXt"
"chinhsuanwu/mobilevit-pytorch" -> "hkzhang91/ParC-Net"
"chinhsuanwu/mobilevit-pytorch" -> "ACheun9/Pytorch-implementation-of-Mobile-Former"
"chinhsuanwu/mobilevit-pytorch" -> "snap-research/EfficientFormer"
"chinhsuanwu/mobilevit-pytorch" -> "micronDLA/MobileViTv3"
"chinhsuanwu/mobilevit-pytorch" -> "slwang9353/MobileFormer"
"chinhsuanwu/mobilevit-pytorch" -> "hkzhang91/EdgeFormer"
"chinhsuanwu/mobilevit-pytorch" -> "Visual-Attention-Network/VAN-Classification" ["e"=1]
"rwightman/gen-efficientnet-pytorch" -> "rwightman/efficientdet-pytorch"
"rwightman/gen-efficientnet-pytorch" -> "lukemelas/EfficientNet-PyTorch"
"rwightman/gen-efficientnet-pytorch" -> "toandaominh1997/EfficientDet.Pytorch"
"rwightman/gen-efficientnet-pytorch" -> "xiaolai-sqlai/mobilenetv3"
"rwightman/gen-efficientnet-pytorch" -> "facebookresearch/pycls"
"rwightman/gen-efficientnet-pytorch" -> "facebookresearch/FixRes"
"rwightman/gen-efficientnet-pytorch" -> "facebookresearch/mobile-vision" ["e"=1]
"rwightman/gen-efficientnet-pytorch" -> "megvii-model/ShuffleNet-Series"
"rwightman/gen-efficientnet-pytorch" -> "kuan-wang/pytorch-mobilenet-v3"
"rwightman/gen-efficientnet-pytorch" -> "zhanghang1989/ResNeSt"
"rwightman/gen-efficientnet-pytorch" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"rwightman/gen-efficientnet-pytorch" -> "BloodAxe/pytorch-toolbelt"
"rwightman/gen-efficientnet-pytorch" -> "mit-han-lab/once-for-all" ["e"=1]
"rwightman/gen-efficientnet-pytorch" -> "tensorflow/tpu"
"rwightman/gen-efficientnet-pytorch" -> "osmr/imgclsmob"
"jinfagang/ssds_pytorch" -> "yczhang1017/SSD_resnet_pytorch"
"gluon-api/gluon-api" -> "zackchase/mxnet-the-straight-dope"
"gluon-api/gluon-api" -> "ilkarman/DeepLearningFrameworks"
"gluon-api/gluon-api" -> "uber/horovod"
"gluon-api/gluon-api" -> "dmlc/nnvm" ["e"=1]
"gluon-api/gluon-api" -> "uber/pyro" ["e"=1]
"gluon-api/gluon-api" -> "mli/gluon-tutorials-zh"
"gluon-api/gluon-api" -> "dmlc/tvm" ["e"=1]
"gluon-api/gluon-api" -> "dmlc/gluon-nlp" ["e"=1]
"gluon-api/gluon-api" -> "TuSimple/mx-maskrcnn"
"gluon-api/gluon-api" -> "apache/incubator-mxnet"
"gluon-api/gluon-api" -> "deepmind/sonnet" ["e"=1]
"gluon-api/gluon-api" -> "awslabs/sockeye" ["e"=1]
"gluon-api/gluon-api" -> "chinakook/Awesome-MXNet" ["e"=1]
"gluon-api/gluon-api" -> "caffe2/caffe2" ["e"=1]
"gluon-api/gluon-api" -> "PAIR-code/facets" ["e"=1]
"Gus-Guo/AugFPN" -> "jshilong/SEPC"
"Gus-Guo/AugFPN" -> "wuyuebupt/doubleheadsrcnn"
"Gus-Guo/AugFPN" -> "caiqi/sample-weighting-network"
"Gus-Guo/AugFPN" -> "KevinKecc/MAL"
"IBM/CrossViT" -> "rishikksh20/CrossViT-pytorch"
"IBM/CrossViT" -> "raoyongming/DynamicViT"
"MatthewHowe/DCNv2" -> "jinfagang/DCNv2_latest"
"MatthewHowe/DCNv2" -> "tteepe/DCNv2"
"Megvii-BaseDetection/AutoAssign" -> "Megvii-BaseDetection/OTA"
"Megvii-BaseDetection/AutoAssign" -> "Megvii-BaseDetection/DeFCN"
"Megvii-BaseDetection/BorderDet" -> "Scalsol/RepPointsV2"
"Megvii-BaseDetection/BorderDet" -> "Megvii-BaseDetection/DeFCN"
"Megvii-BaseDetection/BorderDet" -> "implus/GFocal"
"Megvii-BaseDetection/BorderDet" -> "kkhoot/PAA"
"Megvii-BaseDetection/BorderDet" -> "sfzhang15/ATSS"
"Megvii-BaseDetection/BorderDet" -> "Megvii-BaseDetection/cvpods"
"Megvii-BaseDetection/BorderDet" -> "PeizeSun/SparseR-CNN"
"Megvii-BaseDetection/BorderDet" -> "hkzhang95/DynamicRCNN"
"Megvii-BaseDetection/BorderDet" -> "implus/GFocalV2"
"Megvii-BaseDetection/BorderDet" -> "Sense-X/TSD"
"Megvii-BaseDetection/BorderDet" -> "hyz-xmaster/VarifocalNet"
"Megvii-BaseDetection/BorderDet" -> "FateScript/CenterNet-better"
"Megvii-BaseDetection/BorderDet" -> "microsoft/RepPoints"
"Megvii-BaseDetection/BorderDet" -> "joe-siyuan-qiao/DetectoRS"
"Megvii-BaseDetection/BorderDet" -> "PeizeSun/OneNet"
"VDIGPKU/CBNet" -> "PanJianning/cbnet"
"VDIGPKU/CBNet" -> "qixuxiang/mmdetection_with_SENet154"
"YixuanLi/densenet-tensorflow" -> "taki0112/Densenet-Tensorflow"
"YixuanLi/densenet-tensorflow" -> "LaurentMazare/deep-models"
"YixuanLi/densenet-tensorflow" -> "ikhlestov/vision_networks"
"YixuanLi/densenet-tensorflow" -> "titu1994/DenseNet"
"YixuanLi/densenet-tensorflow" -> "liuzhuang13/DenseNet"
"YixuanLi/densenet-tensorflow" -> "flyyufelix/DenseNet-Keras"
"YixuanLi/densenet-tensorflow" -> "ppwwyyxx/tensorpack"
"YixuanLi/densenet-tensorflow" -> "ry/tensorflow-resnet"
"YixuanLi/densenet-tensorflow" -> "pudae/tensorflow-densenet"
"YixuanLi/densenet-tensorflow" -> "MarvinTeichmann/tensorflow-fcn" ["e"=1]
"YixuanLi/densenet-tensorflow" -> "taki0112/SENet-Tensorflow"
"YixuanLi/densenet-tensorflow" -> "DrSleep/tensorflow-deeplab-resnet" ["e"=1]
"YixuanLi/densenet-tensorflow" -> "wenxinxu/resnet-in-tensorflow"
"YixuanLi/densenet-tensorflow" -> "xmyqsh/FPN"
"YixuanLi/densenet-tensorflow" -> "gpleiss/efficient_densenet_pytorch"
"bharatsingh430/Deformable-ConvNets" -> "bharatsingh430/py-R-FCN-multiGPU"
"bharatsingh430/Deformable-ConvNets" -> "terrychenism/Deformable-ConvNets"
"bharatsingh430/Deformable-ConvNets" -> "bharatsingh430/soft-nms"
"bharatsingh430/Deformable-ConvNets" -> "felixlaumon/deform-conv"
"bharatsingh430/Deformable-ConvNets" -> "xmyqsh/FPN"
"bharatsingh430/Deformable-ConvNets" -> "szq0214/DSOD"
"bharatsingh430/Deformable-ConvNets" -> "zhaoweicai/mscnn"
"bharatsingh430/Deformable-ConvNets" -> "unsky/focal-loss"
"bharatsingh430/Deformable-ConvNets" -> "cypw/DPNs" ["e"=1]
"gmayday1997/SmallObjectAugmentation" -> "zzl-pointcloud/Data_Augmentation_Zoo_for_Object_Detection"
"gmayday1997/SmallObjectAugmentation" -> "ispc-lab/SmallObjectDetectionList"
"gmayday1997/SmallObjectAugmentation" -> "ucas-vg/TinyBenchmark"
"implus/GFocal" -> "implus/GFocalV2"
"implus/GFocal" -> "sfzhang15/ATSS"
"implus/GFocal" -> "Megvii-BaseDetection/BorderDet"
"implus/GFocal" -> "PeizeSun/OneNet"
"implus/GFocal" -> "Megvii-BaseDetection/DeFCN"
"implus/GFocal" -> "joe-siyuan-qiao/DetectoRS"
"implus/GFocal" -> "kkhoot/PAA"
"implus/GFocal" -> "megvii-model/YOLOF"
"implus/GFocal" -> "PeizeSun/SparseR-CNN"
"implus/GFocal" -> "hyz-xmaster/VarifocalNet"
"implus/GFocal" -> "xingyizhou/CenterNet2"
"implus/GFocal" -> "Scalsol/RepPointsV2"
"implus/GFocal" -> "FateScript/CenterNet-better"
"implus/GFocal" -> "kemaloksuz/aLRPLoss"
"implus/GFocal" -> "ruinmessi/ASFF"
"junyuseu/pytorch-cifar-models" -> "bearpaw/pytorch-classification"
"junyuseu/pytorch-cifar-models" -> "meliketoy/wide-resnet.pytorch"
"junyuseu/pytorch-cifar-models" -> "akamaster/pytorch_resnet_cifar10"
"kkhoot/PAA" -> "implus/GFocalV2"
"kkhoot/PAA" -> "Megvii-BaseDetection/BorderDet"
"kkhoot/PAA" -> "Scalsol/RepPointsV2"
"kkhoot/PAA" -> "kemaloksuz/aLRPLoss"
"kkhoot/PAA" -> "fcjian/TOOD"
"kkhoot/PAA" -> "Megvii-BaseDetection/DeFCN"
"kkhoot/PAA" -> "implus/GFocal"
"kkhoot/PAA" -> "hyz-xmaster/VarifocalNet"
"kkhoot/PAA" -> "Megvii-BaseDetection/OTA"
"kkhoot/PAA" -> "sfzhang15/ATSS"
"kkhoot/PAA" -> "Megvii-BaseDetection/AutoAssign"
"kkhoot/PAA" -> "Zzh-tju/CIoU" ["e"=1]
"kuanhungchen/awesome-tiny-object-detection" -> "ucas-vg/TinyBenchmark"
"kuanhungchen/awesome-tiny-object-detection" -> "ispc-lab/SmallObjectDetectionList"
"kuanhungchen/awesome-tiny-object-detection" -> "ChenhongyiYang/QueryDet-PyTorch"
"kuanhungchen/awesome-tiny-object-detection" -> "XinZhangNLPR/awesome-anchor-free-object-detection"
"kuanhungchen/awesome-tiny-object-detection" -> "kemaloksuz/ObjectDetectionImbalance"
"kuanhungchen/awesome-tiny-object-detection" -> "gmayday1997/SmallObjectAugmentation"
"kuanhungchen/awesome-tiny-object-detection" -> "Icecream-blue-sky/Past-and-present-small-object-detection"
"kuanhungchen/awesome-tiny-object-detection" -> "ruinmessi/ASFF"
"kuanhungchen/awesome-tiny-object-detection" -> "hhaAndroid/mmdetection-mini"
"kuanhungchen/awesome-tiny-object-detection" -> "SJTU-Thinklab-Det/DOTA-DOAI" ["e"=1]
"kuanhungchen/awesome-tiny-object-detection" -> "cv516Buaa/tph-yolov5" ["e"=1]
"kuanhungchen/awesome-tiny-object-detection" -> "dingjiansw101/AerialDetection" ["e"=1]
"kuanhungchen/awesome-tiny-object-detection" -> "obss/sahi"
"kuanhungchen/awesome-tiny-object-detection" -> "Jakaria08/EESRGAN"
"kuanhungchen/awesome-tiny-object-detection" -> "aim-uofa/AdelaiDet"
"luuuyi/RefineDet.PyTorch" -> "lzx1413/PytorchSSD"
"luuuyi/RefineDet.PyTorch" -> "dd604/refinedet.pytorch"
"luuuyi/RefineDet.PyTorch" -> "yqyao/SSD_Pytorch"
"luuuyi/RefineDet.PyTorch" -> "sfzhang15/RefineDet"
"luuuyi/RefineDet.PyTorch" -> "Ranchentx/EFGRNet"
"luuuyi/RefineDet.PyTorch" -> "KimSoybean/ScratchDet"
"luuuyi/RefineDet.PyTorch" -> "ruinmessi/RFBNet"
"luuuyi/RefineDet.PyTorch" -> "uoip/SSD-variants"
"luuuyi/RefineDet.PyTorch" -> "qijiezhao/M2Det"
"luuuyi/RefineDet.PyTorch" -> "guoruoqian/DetNet_pytorch"
"lzx1413/PytorchSSD" -> "ShuangXieIrene/ssds.pytorch"
"lzx1413/PytorchSSD" -> "ruinmessi/RFBNet"
"lzx1413/PytorchSSD" -> "sfzhang15/RefineDet"
"lzx1413/PytorchSSD" -> "luuuyi/RefineDet.PyTorch"
"lzx1413/PytorchSSD" -> "qijiezhao/M2Det"
"lzx1413/PytorchSSD" -> "lufficc/SSD"
"lzx1413/PytorchSSD" -> "yqyao/SSD_Pytorch"
"lzx1413/PytorchSSD" -> "qfgaohao/pytorch-ssd"
"lzx1413/PytorchSSD" -> "amdegroot/ssd.pytorch"
"lzx1413/PytorchSSD" -> "princeton-vl/CornerNet"
"lzx1413/PytorchSSD" -> "jwyang/fpn.pytorch"
"lzx1413/PytorchSSD" -> "guoruoqian/cascade-rcnn_Pytorch"
"lzx1413/PytorchSSD" -> "guoruoqian/DetNet_pytorch"
"lzx1413/PytorchSSD" -> "zhaoweicai/cascade-rcnn"
"lzx1413/PytorchSSD" -> "qijiezhao/CFENet"
"miaoshuyu/object-detection-usages" -> "fcjian/TOOD"
"miaoshuyu/object-detection-usages" -> "DocF/Soft-NMS"
"rwightman/efficientdet-pytorch" -> "ZFTurbo/Weighted-Boxes-Fusion"
"rwightman/efficientdet-pytorch" -> "rwightman/gen-efficientnet-pytorch"
"rwightman/efficientdet-pytorch" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"rwightman/efficientdet-pytorch" -> "toandaominh1997/EfficientDet.Pytorch"
"rwightman/efficientdet-pytorch" -> "lukemelas/EfficientNet-PyTorch"
"rwightman/efficientdet-pytorch" -> "xuannianz/EfficientDet"
"rwightman/efficientdet-pytorch" -> "google/automl"
"rwightman/efficientdet-pytorch" -> "qubvel/ttach"
"rwightman/efficientdet-pytorch" -> "qubvel/segmentation_models.pytorch"
"rwightman/efficientdet-pytorch" -> "BloodAxe/pytorch-toolbelt"
"rwightman/efficientdet-pytorch" -> "signatrix/efficientdet"
"rwightman/efficientdet-pytorch" -> "WongKinYiu/ScaledYOLOv4"
"rwightman/efficientdet-pytorch" -> "facebookresearch/pycls"
"rwightman/efficientdet-pytorch" -> "zhanghang1989/ResNeSt"
"rwightman/efficientdet-pytorch" -> "joe-siyuan-qiao/DetectoRS"
"sfzhang15/ATSS" -> "tianzhi0549/FCOS"
"sfzhang15/ATSS" -> "implus/GFocal"
"sfzhang15/ATSS" -> "PeizeSun/SparseR-CNN"
"sfzhang15/ATSS" -> "implus/GFocalV2"
"sfzhang15/ATSS" -> "zhangxiaosong18/FreeAnchor"
"sfzhang15/ATSS" -> "ruinmessi/ASFF"
"sfzhang15/ATSS" -> "microsoft/RepPoints"
"sfzhang15/ATSS" -> "kemaloksuz/ObjectDetectionImbalance"
"sfzhang15/ATSS" -> "PeizeSun/OneNet"
"sfzhang15/ATSS" -> "Megvii-BaseDetection/DeFCN"
"sfzhang15/ATSS" -> "yqyao/FCOS_PLUS"
"sfzhang15/ATSS" -> "princeton-vl/CornerNet"
"sfzhang15/ATSS" -> "Megvii-BaseDetection/BorderDet"
"sfzhang15/ATSS" -> "aim-uofa/AdelaiDet"
"sfzhang15/ATSS" -> "Duankaiwen/CenterNet"
"unsky/RetinaNet" -> "unsky/focal-loss"
"unsky/RetinaNet" -> "terrychenism/Deformable-ConvNets"
"unsky/RetinaNet" -> "xmyqsh/RetinaNet"
"unsky/RetinaNet" -> "zimenglan-sysu-512/Focal-Loss"
"unsky/RetinaNet" -> "xmyqsh/FPN"
"unsky/RetinaNet" -> "bharatsingh430/Deformable-ConvNets"
"unsky/focal-loss" -> "unsky/RetinaNet"
"unsky/focal-loss" -> "precedenceguo/mx-rcnn" ["e"=1]
"unsky/focal-loss" -> "bharatsingh430/Deformable-ConvNets"
"unsky/focal-loss" -> "ailias/Focal-Loss-implement-on-Tensorflow"
"unsky/focal-loss" -> "TuSimple/mx-maskrcnn"
"unsky/focal-loss" -> "sciencefans/Focal-Loss"
"unsky/focal-loss" -> "szq0214/DSOD"
"unsky/focal-loss" -> "zimenglan-sysu-512/Focal-Loss"
"unsky/focal-loss" -> "bharatsingh430/soft-nms"
"unsky/focal-loss" -> "sfzhang15/RefineDet"
"unsky/focal-loss" -> "msracver/Flow-Guided-Feature-Aggregation" ["e"=1]
"unsky/focal-loss" -> "terrychenism/Deformable-ConvNets"
"unsky/focal-loss" -> "xmyqsh/FPN"
"unsky/focal-loss" -> "chinakook/Awesome-MXNet" ["e"=1]
"unsky/focal-loss" -> "cypw/DPNs" ["e"=1]
"zhangxiaosong18/FreeAnchor" -> "microsoft/RepPoints"
"zhangxiaosong18/FreeAnchor" -> "sfzhang15/ATSS"
"zhangxiaosong18/FreeAnchor" -> "Duankaiwen/CenterNet"
"zhangxiaosong18/FreeAnchor" -> "yihui-he/KL-Loss"
"zhangxiaosong18/FreeAnchor" -> "tianzhi0549/FCOS"
"zhangxiaosong18/FreeAnchor" -> "thangvubk/Cascade-RPN"
"zhangxiaosong18/FreeAnchor" -> "taokong/FoveaBox"
"zhangxiaosong18/FreeAnchor" -> "kemaloksuz/ObjectDetectionImbalance"
"zhangxiaosong18/FreeAnchor" -> "vacancy/PreciseRoIPooling"
"zhangxiaosong18/FreeAnchor" -> "princeton-vl/CornerNet-Lite"
"zhangxiaosong18/FreeAnchor" -> "yqyao/FCOS_PLUS"
"zhangxiaosong18/FreeAnchor" -> "xingyizhou/ExtremeNet"
"zhangxiaosong18/FreeAnchor" -> "princeton-vl/CornerNet"
"zhangxiaosong18/FreeAnchor" -> "ruinmessi/ASFF"
"zhangxiaosong18/FreeAnchor" -> "megvii-model/ShuffleNet-Series"
"ducha-aiki/caffenet-benchmark" -> "soeaver/caffe-model"
"ducha-aiki/caffenet-benchmark" -> "facebook/fb-caffe-exts" ["e"=1]
"ducha-aiki/caffenet-benchmark" -> "DeepScale/SqueezeNet"
"ducha-aiki/caffenet-benchmark" -> "yjxiong/caffe" ["e"=1]
"ducha-aiki/caffenet-benchmark" -> "Orpine/py-R-FCN"
"ducha-aiki/caffenet-benchmark" -> "ydwen/caffe-face" ["e"=1]
"ducha-aiki/caffenet-benchmark" -> "twtygqyy/caffe-augmentation"
"ducha-aiki/caffenet-benchmark" -> "AlfredXiangWu/face_verification_experiment" ["e"=1]
"ducha-aiki/caffenet-benchmark" -> "shicai/DenseNet-Caffe"
"ducha-aiki/caffenet-benchmark" -> "facebook/fb.resnet.torch"
"ducha-aiki/caffenet-benchmark" -> "ethereon/caffe-tensorflow"
"ducha-aiki/caffenet-benchmark" -> "ShaoqingRen/SPP_net"
"ducha-aiki/caffenet-benchmark" -> "cvjena/cnn-models"
"ducha-aiki/caffenet-benchmark" -> "kevinlin311tw/caffe-augmentation"
"ducha-aiki/caffenet-benchmark" -> "liuzhuang13/DenseNetCaffe"
"ChenYingpeng/caffe-yolov3" -> "eric612/MobileNet-YOLO"
"ChenYingpeng/caffe-yolov3" -> "eric612/Caffe-YOLOv3-Windows"
"ChenYingpeng/caffe-yolov3" -> "marvis/pytorch-caffe-darknet-convert"
"ChenYingpeng/caffe-yolov3" -> "ChenYingpeng/darknet2caffe"
"ChenYingpeng/caffe-yolov3" -> "lewes6369/TensorRT-Yolov3" ["e"=1]
"ChenYingpeng/caffe-yolov3" -> "xxradon/PytorchToCaffe"
"ChenYingpeng/caffe-yolov3" -> "hanson-young/nniefacelib" ["e"=1]
"ChenYingpeng/caffe-yolov3" -> "gklz1982/caffe-yolov2"
"ChenYingpeng/caffe-yolov3" -> "shicai/MobileNet-Caffe"
"ChenYingpeng/caffe-yolov3" -> "jasonlovescoding/YOLOv3-caffe"
"ChenYingpeng/caffe-yolov3" -> "talebolano/yolov3-network-slimming" ["e"=1]
"ChenYingpeng/caffe-yolov3" -> "yonghenglh6/DepthwiseConvolution"
"ChenYingpeng/caffe-yolov3" -> "xingwangsfu/caffe-yolo"
"ChenYingpeng/caffe-yolov3" -> "hexiangquan/tensorRTyoloV3" ["e"=1]
"ChenYingpeng/caffe-yolov3" -> "makefile/frcnn"
"PaddlePaddle/CINN" -> "PaddlePaddle/Perf"
"PaddlePaddle/CINN" -> "PaddlePaddle/benchmark"
"PaddlePaddle/CINN" -> "PaddlePaddle/PaddleScience"
"AntonMu/TrainYourOwnYOLO" -> "microsoft/VoTT"
"AntonMu/TrainYourOwnYOLO" -> "pythonlessons/TensorFlow-2.x-YOLOv3" ["e"=1]
"AntonMu/TrainYourOwnYOLO" -> "experiencor/keras-yolo3"
"AntonMu/TrainYourOwnYOLO" -> "zzh8829/yolov3-tf2"
"AntonMu/TrainYourOwnYOLO" -> "theAIGuysCode/YOLOv4-Cloud-Tutorial" ["e"=1]
"AntonMu/TrainYourOwnYOLO" -> "theAIGuysCode/tensorflow-yolov4-tflite" ["e"=1]
"AntonMu/TrainYourOwnYOLO" -> "hunglc007/tensorflow-yolov4-tflite"
"AntonMu/TrainYourOwnYOLO" -> "PacktPublishing/Hands-On-Computer-Vision-with-TensorFlow-2" ["e"=1]
"AntonMu/TrainYourOwnYOLO" -> "ssaru/convert2Yolo" ["e"=1]
"Duankaiwen/CenterNet" -> "princeton-vl/CornerNet"
"Duankaiwen/CenterNet" -> "princeton-vl/CornerNet-Lite"
"Duankaiwen/CenterNet" -> "xingyizhou/CenterNet"
"Duankaiwen/CenterNet" -> "tianzhi0549/FCOS"
"Duankaiwen/CenterNet" -> "xingyizhou/ExtremeNet"
"Duankaiwen/CenterNet" -> "TuSimple/simpledet"
"Duankaiwen/CenterNet" -> "qijiezhao/M2Det"
"Duankaiwen/CenterNet" -> "yihui-he/KL-Loss"
"Duankaiwen/CenterNet" -> "zjhuang22/maskscoring_rcnn"
"Duankaiwen/CenterNet" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"Duankaiwen/CenterNet" -> "ruinmessi/RFBNet"
"Duankaiwen/CenterNet" -> "zhangxiaosong18/FreeAnchor"
"Duankaiwen/CenterNet" -> "sfzhang15/RefineDet"
"Duankaiwen/CenterNet" -> "sfzhang15/ATSS"
"Duankaiwen/CenterNet" -> "liuwei16/CSP" ["e"=1]
"SysCV/transfiner" -> "zhang-tao-whu/e2ec"
"SysCV/transfiner" -> "hustvl/SparseInst"
"SysCV/transfiner" -> "zhanggang001/RefineMask"
"SysCV/transfiner" -> "SysCV/pcan" ["e"=1]
"SysCV/transfiner" -> "easton-cau/SOTR"
"SysCV/transfiner" -> "lkeab/BCNet"
"SysCV/transfiner" -> "facebookresearch/Mask2Former"
"TingsongYu/ghostnet_cifar10" -> "KopiSoftware/Ghost_ResNet56"
"TingsongYu/ghostnet_cifar10" -> "d-li14/ghostnet.pytorch"
"TingsongYu/ghostnet_cifar10" -> "iamhankai/ghostnet.pytorch"
"KiveeDong/CentripetalNet" -> "arashwan/matrixnet"
"KiveeDong/CentripetalNet" -> "jinfagang/CenterNet_Pro_Max"
"KiveeDong/CentripetalNet" -> "ggjy/HitDet.pytorch" ["e"=1]
"KiveeDong/CentripetalNet" -> "Megvii-BaseDetection/BorderDet"
"KiveeDong/CentripetalNet" -> "sfzhang15/ATSS"
"KiveeDong/CentripetalNet" -> "caiqi/sample-weighting-network"
"KiveeDong/CentripetalNet" -> "yqyao/FCOS_PLUS"
"KiveeDong/CentripetalNet" -> "wangsr126/RDSNet"
"ceccocats/tkDNN" -> "enazoe/yolo-tensorrt"
"ceccocats/tkDNN" -> "NVIDIA-AI-IOT/yolov4_deepstream"
"ceccocats/tkDNN" -> "jkjung-avt/tensorrt_demos"
"ceccocats/tkDNN" -> "CaoWGG/TensorRT-YOLOv4"
"ceccocats/tkDNN" -> "marcoslucianops/DeepStream-Yolo" ["e"=1]
"ceccocats/tkDNN" -> "WongKinYiu/CrossStagePartialNetworks"
"ceccocats/tkDNN" -> "wang-xinyu/tensorrtx"
"ceccocats/tkDNN" -> "linghu8812/tensorrt_inference"
"ceccocats/tkDNN" -> "lewes6369/TensorRT-Yolov3" ["e"=1]
"ceccocats/tkDNN" -> "WongKinYiu/ScaledYOLOv4"
"ceccocats/tkDNN" -> "zerollzeng/tiny-tensorrt"
"ceccocats/tkDNN" -> "Tianxiaomo/pytorch-YOLOv4"
"ceccocats/tkDNN" -> "hunglc007/tensorflow-yolov4-tflite"
"ceccocats/tkDNN" -> "NVIDIA-AI-IOT/deepstream_reference_apps" ["e"=1]
"ceccocats/tkDNN" -> "GeekAlexis/FastMOT" ["e"=1]
"microsoft/Focal-Transformer" -> "microsoft/CSWin-Transformer"
"microsoft/Focal-Transformer" -> "microsoft/vision-longformer"
"microsoft/Focal-Transformer" -> "youngwanLEE/MPViT"
"microsoft/Focal-Transformer" -> "microsoft/FocalNet" ["e"=1]
"microsoft/Focal-Transformer" -> "cheerss/CrossFormer"
"microsoft/Focal-Transformer" -> "Meituan-AutoML/Twins"
"microsoft/Focal-Transformer" -> "raoyongming/HorNet" ["e"=1]
"microsoft/Focal-Transformer" -> "OliverRensu/Shunted-Transformer"
"microsoft/Focal-Transformer" -> "microsoft/SoftTeacher"
"microsoft/Focal-Transformer" -> "microsoft/DynamicHead"
"microsoft/Focal-Transformer" -> "facebookresearch/MaskFormer"
"microsoft/Focal-Transformer" -> "ShoufaChen/CycleMLP"
"microsoft/Focal-Transformer" -> "whai362/PVT"
"microsoft/Focal-Transformer" -> "LeapLabTHU/DAT"
"microsoft/Focal-Transformer" -> "sail-sg/poolformer"
"microsoft/SimMIM" -> "bytedance/ibot"
"microsoft/SimMIM" -> "Alpha-VL/ConvMAE"
"microsoft/SimMIM" -> "pengzhiliang/MAE-pytorch"
"microsoft/SimMIM" -> "facebookresearch/mae"
"microsoft/SimMIM" -> "hustvl/MIMDet"
"microsoft/SimMIM" -> "facebookresearch/moco-v3"
"microsoft/SimMIM" -> "WXinlong/DenseCL"
"microsoft/SimMIM" -> "ucasligang/awesome-MIM"
"microsoft/SimMIM" -> "microsoft/SoftTeacher"
"microsoft/SimMIM" -> "SwinTransformer/Transformer-SSL"
"microsoft/SimMIM" -> "baaivision/EVA" ["e"=1]
"microsoft/SimMIM" -> "sail-sg/poolformer"
"microsoft/SimMIM" -> "facebookresearch/MaskFormer"
"microsoft/SimMIM" -> "implus/UM-MAE"
"microsoft/SimMIM" -> "facebookresearch/ConvNeXt-V2" ["e"=1]
"xiaohu2015/SwinT_detectron2" -> "xiaohu2015/nndet2"
"xiaohu2015/SwinT_detectron2" -> "xiaohu2015/pvt_detectron2"
"xiaohu2015/SwinT_detectron2" -> "microsoft/DynamicHead"
"cvhciKIT/sloth" -> "sweppner/labeld"
"cvhciKIT/sloth" -> "christopher5106/FastAnnotationTool"
"cvhciKIT/sloth" -> "frederictost/images_annotation_programme"
"cvhciKIT/sloth" -> "rykov8/ssd_keras"
"cvhciKIT/sloth" -> "DeepScale/SqueezeNet"
"cvhciKIT/sloth" -> "Microsoft/VoTT"
"cvhciKIT/sloth" -> "daijifeng001/MNC" ["e"=1]
"cvhciKIT/sloth" -> "Russell91/ReInspect"
"cvhciKIT/sloth" -> "tzutalin/ImageNet_Utils"
"cvhciKIT/sloth" -> "annotorious/annotorious" ["e"=1]
"cvhciKIT/sloth" -> "wincle/NPD" ["e"=1]
"cvhciKIT/sloth" -> "Orpine/py-R-FCN"
"cvhciKIT/sloth" -> "tornadomeet/mxnet-face" ["e"=1]
"cvhciKIT/sloth" -> "CSAILVision/LabelMeAnnotationTool"
"cvhciKIT/sloth" -> "xingwangsfu/caffe-yolo"
"facebookresearch/ClassyVision" -> "facebookresearch/pycls"
"facebookresearch/ClassyVision" -> "facebookresearch/SlowFast" ["e"=1]
"facebookresearch/ClassyVision" -> "facebookresearch/vissl"
"facebookresearch/ClassyVision" -> "facebookresearch/fvcore"
"facebookresearch/ClassyVision" -> "facebookresearch/fairscale" ["e"=1]
"facebookresearch/ClassyVision" -> "open-mmlab/mmaction" ["e"=1]
"facebookresearch/ClassyVision" -> "facebookresearch/mobile-vision" ["e"=1]
"facebookresearch/ClassyVision" -> "facebookresearch/pytorchvideo" ["e"=1]
"facebookresearch/ClassyVision" -> "facebookresearch/deit"
"facebookresearch/ClassyVision" -> "mit-han-lab/temporal-shift-module" ["e"=1]
"facebookresearch/ClassyVision" -> "facebookresearch/FixRes"
"facebookresearch/ClassyVision" -> "gsig/PyVideoResearch" ["e"=1]
"facebookresearch/ClassyVision" -> "facebookresearch/VMZ" ["e"=1]
"facebookresearch/ClassyVision" -> "facebookresearch/video-long-term-feature-banks" ["e"=1]
"facebookresearch/ClassyVision" -> "facebookresearch/moco"
"Nioolek/PPYOLOE_pytorch" -> "miemie2013/miemiedetection"
"ligang-cs/PseCo" -> "hikvision-research/SSOD"
"ligang-cs/PseCo" -> "Megvii-BaseDetection/DenseTeacher"
"ligang-cs/PseCo" -> "chenbinghui1/DSL"
"ligang-cs/PseCo" -> "HunterJ-Lin/ActiveTeacher"
"opconty/keras-shufflenetV2" -> "opconty/face_detection_in_realtime"
"opconty/keras-shufflenetV2" -> "opconty/keras_std"
"opconty/keras-shufflenetV2" -> "opconty/pixellink_keras"
"opconty/keras-shufflenetV2" -> "scheckmedia/keras-shufflenet"
"ruinmessi/RFBNet" -> "lzx1413/PytorchSSD"
"ruinmessi/RFBNet" -> "sfzhang15/RefineDet"
"ruinmessi/RFBNet" -> "qijiezhao/M2Det"
"ruinmessi/RFBNet" -> "princeton-vl/CornerNet"
"ruinmessi/RFBNet" -> "ruinmessi/ASFF"
"ruinmessi/RFBNet" -> "zhaoweicai/cascade-rcnn"
"ruinmessi/RFBNet" -> "tianzhi0549/FCOS"
"ruinmessi/RFBNet" -> "mahyarnajibi/SNIPER"
"ruinmessi/RFBNet" -> "ShuangXieIrene/ssds.pytorch"
"ruinmessi/RFBNet" -> "princeton-vl/CornerNet-Lite"
"ruinmessi/RFBNet" -> "amdegroot/ssd.pytorch"
"ruinmessi/RFBNet" -> "TuSimple/simpledet"
"ruinmessi/RFBNet" -> "xingyizhou/ExtremeNet"
"ruinmessi/RFBNet" -> "zengarden/light_head_rcnn"
"ruinmessi/RFBNet" -> "Duankaiwen/CenterNet"
"DataXujing/YOLOv8" -> "DataXujing/ncnn_android_yolov8" ["e"=1]
"jinfagang/yolov7_d2" -> "RizwanMunawar/yolov7-segmentation" ["e"=1]
"jinfagang/yolov7_d2" -> "iscyy/yoloair"
"jinfagang/yolov7_d2" -> "jizhishutong/YOLOU"
"jinfagang/yolov7_d2" -> "WongKinYiu/yolov7"
"jinfagang/yolov7_d2" -> "mikel-brostrom/Yolov7_StrongSORT_OSNet" ["e"=1]
"jinfagang/yolov7_d2" -> "Linaom1214/TensorRT-For-YOLO-Series"
"jinfagang/yolov7_d2" -> "bubbliiiing/yolov7-pytorch" ["e"=1]
"jinfagang/yolov7_d2" -> "iscyy/yoloair2"
"jinfagang/yolov7_d2" -> "open-mmlab/mmyolo"
"jinfagang/yolov7_d2" -> "mikel-brostrom/Yolov5_StrongSORT_OSNet" ["e"=1]
"jinfagang/yolov7_d2" -> "nanmi/yolov7-pose" ["e"=1]
"jinfagang/yolov7_d2" -> "RizwanMunawar/yolov7-pose-estimation" ["e"=1]
"jinfagang/yolov7_d2" -> "sjinzh/awesome-yolo-object-detection"
"jinfagang/yolov7_d2" -> "derronqi/yolov7-face" ["e"=1]
"jinfagang/yolov7_d2" -> "mikel-brostrom/yolov8_tracking"
"DeepScale/SqueezeNet" -> "songhan/SqueezeNet-Deep-Compression" ["e"=1]
"DeepScale/SqueezeNet" -> "shicai/MobileNet-Caffe"
"DeepScale/SqueezeNet" -> "Zehaos/MobileNet"
"DeepScale/SqueezeNet" -> "BichenWuUCB/squeezeDet" ["e"=1]
"DeepScale/SqueezeNet" -> "soeaver/caffe-model"
"DeepScale/SqueezeNet" -> "daijifeng001/R-FCN"
"DeepScale/SqueezeNet" -> "facebook/fb.resnet.torch"
"DeepScale/SqueezeNet" -> "ethereon/caffe-tensorflow"
"DeepScale/SqueezeNet" -> "weiliu89/caffe"
"DeepScale/SqueezeNet" -> "ydwen/caffe-face" ["e"=1]
"DeepScale/SqueezeNet" -> "xingwangsfu/caffe-yolo"
"DeepScale/SqueezeNet" -> "KaimingHe/deep-residual-networks"
"DeepScale/SqueezeNet" -> "liuzhuang13/DenseNet"
"DeepScale/SqueezeNet" -> "sanghoon/pva-faster-rcnn"
"DeepScale/SqueezeNet" -> "soumith/convnet-benchmarks" ["e"=1]
"HolmesShuan/ShuffleNet-An-Extremely-Efficient-CNN-for-Mobile-Devices-Caffe-Reimplementation" -> "camel007/Caffe-ShuffleNet"
"HolmesShuan/ShuffleNet-An-Extremely-Efficient-CNN-for-Mobile-Devices-Caffe-Reimplementation" -> "pby5/MobileNet_Caffe"
"camel007/Caffe-ShuffleNet" -> "HolmesShuan/ShuffleNet-An-Extremely-Efficient-CNN-for-Mobile-Devices-Caffe-Reimplementation"
"camel007/Caffe-ShuffleNet" -> "farmingyard/ShuffleNet"
"camel007/Caffe-ShuffleNet" -> "pby5/MobileNet_Caffe"
"camel007/Caffe-ShuffleNet" -> "farmingyard/caffe-mobilenet"
"cccorn/AP-loss" -> "kemaloksuz/aLRPLoss"
"cccorn/AP-loss" -> "implus/GFocalV2"
"cccorn/AP-loss" -> "Duankaiwen/CPNDet"
"farmingyard/ShuffleNet" -> "camel007/Caffe-ShuffleNet"
"farmingyard/ShuffleNet" -> "shicai/MobileNet-Caffe"
"farmingyard/ShuffleNet" -> "miaow1988/ShuffleNet_V2_pytorch_caffe"
"farmingyard/ShuffleNet" -> "farmingyard/caffe-mobilenet"
"farmingyard/ShuffleNet" -> "yonghenglh6/DepthwiseConvolution"
"farmingyard/ShuffleNet" -> "HolmesShuan/ShuffleNet-An-Extremely-Efficient-CNN-for-Mobile-Devices-Caffe-Reimplementation"
"farmingyard/ShuffleNet" -> "suzhenghang/MobileNetv2"
"farmingyard/ShuffleNet" -> "shicai/DenseNet-Caffe"
"farmingyard/ShuffleNet" -> "soeaver/caffe-model"
"farmingyard/ShuffleNet" -> "gklz1982/caffe-yolov2"
"farmingyard/ShuffleNet" -> "liuzhuang13/DenseNetCaffe"
"farmingyard/ShuffleNet" -> "chuanqi305/MobileNetv2-SSDLite"
"farmingyard/ShuffleNet" -> "MG2033/ShuffleNet"
"farmingyard/ShuffleNet" -> "HolmesShuan/ResNet-18-Caffemodel-on-ImageNet"
"farmingyard/ShuffleNet" -> "chuanqi305/FocalLoss"
"felixgwu/mask_rcnn_pytorch" -> "ycszen/pytorch-ss" ["e"=1]
"felixgwu/mask_rcnn_pytorch" -> "longcw/faster_rcnn_pytorch"
"felixgwu/mask_rcnn_pytorch" -> "PureDiors/pytorch_RFCN"
"felixgwu/mask_rcnn_pytorch" -> "hangzhaomit/semantic-segmentation-pytorch" ["e"=1]
"felixgwu/mask_rcnn_pytorch" -> "ZijunDeng/pytorch-semantic-segmentation" ["e"=1]
"felixgwu/mask_rcnn_pytorch" -> "CharlesShang/FastMaskRCNN"
"felixgwu/mask_rcnn_pytorch" -> "msracver/FCIS"
"felixgwu/mask_rcnn_pytorch" -> "clcarwin/convert_torch_to_pytorch"
"felixgwu/mask_rcnn_pytorch" -> "markdtw/vqa-winner-cvprw-2017" ["e"=1]
"felixgwu/mask_rcnn_pytorch" -> "voidrank/FastMask" ["e"=1]
"felixgwu/mask_rcnn_pytorch" -> "jasjeetIM/Mask-RCNN"
"felixgwu/mask_rcnn_pytorch" -> "ignacio-rocco/detectorch"
"felixgwu/mask_rcnn_pytorch" -> "ptrblck/prog_gans_pytorch_inference" ["e"=1]
"felixgwu/mask_rcnn_pytorch" -> "TuSimple/mx-maskrcnn"
"felixgwu/mask_rcnn_pytorch" -> "pdollar/coco" ["e"=1]
"gklz1982/caffe-yolov2" -> "hustzxd/z1"
"gklz1982/caffe-yolov2" -> "hustzxd/z0"
"gklz1982/caffe-yolov2" -> "yeahkun/caffe-yolo"
"gklz1982/caffe-yolov2" -> "choasup/caffe-yolo9000"
"gklz1982/caffe-yolov2" -> "lwplw/caffe_yolov2"
"gklz1982/caffe-yolov2" -> "xingwangsfu/caffe-yolo"
"gklz1982/caffe-yolov2" -> "karta0807913/caffe-yolo-9000"
"gklz1982/caffe-yolov2" -> "Banus/caffe-yolo"
"gklz1982/caffe-yolov2" -> "choasUp/caffe-yolo9000"
"gklz1982/caffe-yolov2" -> "marvis/pytorch-caffe-darknet-convert"
"gklz1982/caffe-yolov2" -> "nodefluxio/caffe-yolov2"
"gklz1982/caffe-yolov2" -> "camel007/Caffe-ShuffleNet"
"gklz1982/caffe-yolov2" -> "farmingyard/ShuffleNet"
"gklz1982/caffe-yolov2" -> "ChenYingpeng/caffe-yolov3"
"gklz1982/caffe-yolov2" -> "farmingyard/caffe-mobilenet"
"ikhlestov/vision_networks" -> "LaurentMazare/deep-models"
"ikhlestov/vision_networks" -> "YixuanLi/densenet-tensorflow"
"ikhlestov/vision_networks" -> "taki0112/Densenet-Tensorflow"
"ikhlestov/vision_networks" -> "pudae/tensorflow-densenet"
"ikhlestov/vision_networks" -> "flyyufelix/DenseNet-Keras"
"jasjeetIM/Mask-RCNN" -> "mmclkv/caffe-mask-rcnn"
"jasjeetIM/Mask-RCNN" -> "camel007/Caffe-ShuffleNet"
"jasjeetIM/Mask-RCNN" -> "bharatsingh430/py-R-FCN-multiGPU"
"jasjeetIM/Mask-RCNN" -> "sciencefans/Focal-Loss"
"jasjeetIM/Mask-RCNN" -> "felixgwu/mask_rcnn_pytorch"
"jasjeetIM/Mask-RCNN" -> "choasUp/caffe-yolo9000"
"jasjeetIM/Mask-RCNN" -> "twtygqyy/caffe-augmentation"
"jshilong/SEPC" -> "Sense-X/TSD"
"jshilong/SEPC" -> "JialeCao001/D2Det"
"jshilong/SEPC" -> "Gus-Guo/AugFPN"
"jshilong/SEPC" -> "implus/GFocalV2"
"jshilong/SEPC" -> "caiqi/sample-weighting-network"
"jshilong/SEPC" -> "thangvubk/Cascade-RPN"
"jshilong/SEPC" -> "sfzhang15/ATSS"
"jshilong/SEPC" -> "Caojunxu/AC-FPN"
"jshilong/SEPC" -> "ggjy/HitDet.pytorch" ["e"=1]
"jshilong/SEPC" -> "jshilong/FisherPruning"
"jshilong/SEPC" -> "Megvii-BaseDetection/DeFCN"
"jshilong/SEPC" -> "implus/GFocal"
"jshilong/SEPC" -> "hyz-xmaster/swa_object_detection"
"jshilong/SEPC" -> "PeizeSun/OneNet"
"jshilong/SEPC" -> "kkhoot/PAA"
"sciencefans/Focal-Loss" -> "zimenglan-sysu-512/Focal-Loss"
"sciencefans/Focal-Loss" -> "chuanqi305/FocalLoss"
"sciencefans/Focal-Loss" -> "bharatsingh430/py-R-FCN-multiGPU"
"sciencefans/Focal-Loss" -> "Longqi-S/Focal-Loss"
"sciencefans/Focal-Loss" -> "unsky/Deformable-ConvNets-caffe"
"shicai/Caffe_Manual" -> "ydwen/caffe-face" ["e"=1]
"shicai/Caffe_Manual" -> "shicai/DenseNet-Caffe"
"shicai/Caffe_Manual" -> "xingwangsfu/caffe-yolo"
"shicai/Caffe_Manual" -> "shicai/MobileNet-Caffe"
"shicai/Caffe_Manual" -> "MichaelXin/Awesome-Caffe"
"shicai/Caffe_Manual" -> "tornadomeet/mxnet-face" ["e"=1]
"shicai/Caffe_Manual" -> "yonghenglh6/DepthwiseConvolution"
"shicai/Caffe_Manual" -> "happynear/caffe-windows" ["e"=1]
"shicai/Caffe_Manual" -> "Microsoft/caffe" ["e"=1]
"shicai/Caffe_Manual" -> "BUPTLdy/Caffe_Code_Analysis"
"shicai/Caffe_Manual" -> "twtygqyy/caffe-augmentation"
"shicai/Caffe_Manual" -> "HolmesShuan/ResNet-18-Caffemodel-on-ImageNet"
"shicai/Caffe_Manual" -> "farmingyard/ShuffleNet"
"shicai/Caffe_Manual" -> "soeaver/caffe-model"
"shicai/Caffe_Manual" -> "happynear/FaceVerification" ["e"=1]
"shicai/DenseNet-Caffe" -> "liuzhuang13/DenseNetCaffe"
"shicai/DenseNet-Caffe" -> "Tongcheng/DN_CaffeScript"
"shicai/DenseNet-Caffe" -> "soeaver/caffe-model"
"shicai/DenseNet-Caffe" -> "shicai/SENet-Caffe"
"shicai/DenseNet-Caffe" -> "shicai/MobileNet-Caffe"
"shicai/DenseNet-Caffe" -> "sciencefans/Focal-Loss"
"shicai/DenseNet-Caffe" -> "farmingyard/ShuffleNet"
"shicai/DenseNet-Caffe" -> "twtygqyy/caffe-augmentation"
"shicai/DenseNet-Caffe" -> "farmingyard/caffe-mobilenet"
"shicai/DenseNet-Caffe" -> "unsky/Deformable-ConvNets-caffe"
"shicai/DenseNet-Caffe" -> "HolmesShuan/ResNet-18-Caffemodel-on-ImageNet"
"shicai/DenseNet-Caffe" -> "taokong/RON"
"shicai/DenseNet-Caffe" -> "yjxiong/caffe" ["e"=1]
"shicai/DenseNet-Caffe" -> "yonghenglh6/DepthwiseConvolution"
"shicai/DenseNet-Caffe" -> "camel007/Caffe-ShuffleNet"
"shicai/MobileNet-Caffe" -> "yonghenglh6/DepthwiseConvolution"
"shicai/MobileNet-Caffe" -> "chuanqi305/MobileNet-SSD"
"shicai/MobileNet-Caffe" -> "farmingyard/ShuffleNet"
"shicai/MobileNet-Caffe" -> "soeaver/caffe-model"
"shicai/MobileNet-Caffe" -> "chuanqi305/MobileNetv2-SSDLite"
"shicai/MobileNet-Caffe" -> "Zehaos/MobileNet"
"shicai/MobileNet-Caffe" -> "shicai/DenseNet-Caffe"
"shicai/MobileNet-Caffe" -> "eric612/MobileNet-YOLO"
"shicai/MobileNet-Caffe" -> "weiliu89/caffe"
"shicai/MobileNet-Caffe" -> "ydwen/caffe-face" ["e"=1]
"shicai/MobileNet-Caffe" -> "farmingyard/caffe-mobilenet"
"shicai/MobileNet-Caffe" -> "Robert-JunWang/Pelee"
"shicai/MobileNet-Caffe" -> "CongWeilin/mtcnn-caffe" ["e"=1]
"shicai/MobileNet-Caffe" -> "sfzhang15/RefineDet"
"shicai/MobileNet-Caffe" -> "suzhenghang/MobileNetv2"
"xingwangsfu/caffe-yolo" -> "yeahkun/caffe-yolo"
"xingwangsfu/caffe-yolo" -> "gklz1982/caffe-yolov2"
"xingwangsfu/caffe-yolo" -> "Banus/caffe-yolo"
"xingwangsfu/caffe-yolo" -> "choasUp/caffe-yolo9000"
"xingwangsfu/caffe-yolo" -> "marvis/pytorch-caffe-darknet-convert"
"xingwangsfu/caffe-yolo" -> "sanghoon/pva-faster-rcnn"
"xingwangsfu/caffe-yolo" -> "shicai/MobileNet-Caffe"
"xingwangsfu/caffe-yolo" -> "camel007/Caffe-ShuffleNet"
"xingwangsfu/caffe-yolo" -> "ydwen/caffe-face" ["e"=1]
"xingwangsfu/caffe-yolo" -> "soeaver/caffe-model"
"xingwangsfu/caffe-yolo" -> "daijifeng001/R-FCN"
"xingwangsfu/caffe-yolo" -> "DeepScale/SqueezeNet"
"xingwangsfu/caffe-yolo" -> "yonghenglh6/DepthwiseConvolution"
"xingwangsfu/caffe-yolo" -> "szq0214/DSOD"
"xingwangsfu/caffe-yolo" -> "ChenYingpeng/caffe-yolov3"
"arashno/tensorflow_multigpu_imagenet" -> "dontfollowmeimcrazy/imagenet"
"arashno/tensorflow_multigpu_imagenet" -> "pudae/tensorflow-densenet"
"arashno/tensorflow_multigpu_imagenet" -> "Evolving-AI-Lab/deep_learning_for_camera_trap_images" ["e"=1]
"conan7882/CNN-Visualization" -> "InFoCusp/tf_cnnvis"
"conan7882/CNN-Visualization" -> "insikk/Grad-CAM-tensorflow" ["e"=1]
"alibaba/EasyCV" -> "IDEA-Research/detrex" ["e"=1]
"alibaba/EasyCV" -> "alibaba/EasyNLP" ["e"=1]
"alibaba/EasyCV" -> "open-mmlab/mmyolo"
"alibaba/EasyCV" -> "meituan/YOLOv6"
"alibaba/EasyCV" -> "iscyy/yoloair"
"alibaba/EasyCV" -> "jinfagang/yolov7"
"alibaba/EasyCV" -> "jizhishutong/YOLOU"
"alibaba/EasyCV" -> "IDEACVR/DINO" ["e"=1]
"alibaba/EasyCV" -> "CVCUDA/CV-CUDA"
"alibaba/EasyCV" -> "open-mmlab/mmdeploy"
"alibaba/EasyCV" -> "facebookresearch/ConvNeXt-V2" ["e"=1]
"alibaba/EasyCV" -> "PaddlePaddle/FastDeploy"
"alibaba/EasyCV" -> "ShoufaChen/DiffusionDet" ["e"=1]
"alibaba/EasyCV" -> "miemie2013/miemiedetection"
"alibaba/EasyCV" -> "open-mmlab/mmselfsup"
"BGU-CS-VIL/DeepDPM" -> "wvangansbeke/Unsupervised-Classification"
"BGU-CS-VIL/DeepDPM" -> "zhoushengisnoob/DeepClustering"
"BGU-CS-VIL/DeepDPM" -> "mhamilton723/STEGO"
"BGU-CS-VIL/DeepDPM" -> "microsoft/mup"
"BGU-CS-VIL/DeepDPM" -> "salesforce/OmniXAI" ["e"=1]
"BGU-CS-VIL/DeepDPM" -> "niuchuangnn/SPICE"
"BGU-CS-VIL/DeepDPM" -> "NVlabs/FAN" ["e"=1]
"BGU-CS-VIL/DeepDPM" -> "facebookresearch/deepcluster"
"BGU-CS-VIL/DeepDPM" -> "xxxnell/how-do-vits-work"
"BGU-CS-VIL/DeepDPM" -> "BGU-CS-VIL/DeepMCBM"
"BGU-CS-VIL/DeepDPM" -> "facebookresearch/vissl"
"BGU-CS-VIL/DeepDPM" -> "yukimasano/self-label"
"BGU-CS-VIL/DeepDPM" -> "facebookresearch/swav"
"BGU-CS-VIL/DeepDPM" -> "neuralmagic/deepsparse" ["e"=1]
"BGU-CS-VIL/DeepDPM" -> "open-mmlab/mmselfsup"
"NVIDIA/PyProf" -> "NVIDIA/TRTorch"
"NVIDIA/PyProf" -> "pytorch/kineto" ["e"=1]
"NVIDIA/PyProf" -> "awwong1/torchprof"
"NVIDIA/PyProf" -> "adityaiitb/pyprof2"
"NVIDIA/PyProf" -> "Stonesjtu/pytorch_memlab"
"NVIDIA/PyProf" -> "ezyang/nvprof2json"
"DWCTOD/CVPR2021-Papers-with-Code-Demo" -> "DWCTOD/ICCV2021-Papers-with-Code-Demo"
"DWCTOD/CVPR2021-Papers-with-Code-Demo" -> "JunnHan/SLATracker"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "LiyuanLucasLiu/RAdam"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "mgrankin/over9000"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "lessw2020/Ranger21"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "digantamisra98/Mish"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "alphadl/lookahead.pytorch"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "juntang-zhuang/Adabelief-Optimizer"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "lonePatient/lookahead_pytorch"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "lessw2020/Ranger-Mish-ImageWoof-5"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "lessw2020/mish"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "jettify/pytorch-optimizer"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "lessw2020/Best-Deep-Learning-Optimizers"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "Yonghongwei/Gradient-Centralization"
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "clovaai/CutMix-PyTorch" ["e"=1]
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "kakaobrain/fast-autoaugment" ["e"=1]
"lessw2020/Ranger-Deep-Learning-Optimizer" -> "facebookresearch/pycls"
"miemie2013/miemiedetection" -> "Nioolek/PPYOLOE_pytorch"
"miemie2013/miemiedetection" -> "jizhishutong/YOLOU"
"miemie2013/miemiedetection" -> "tinyvision/AIRDet" ["e"=1]
"miemie2013/miemiedetection" -> "nemonameless/PaddleDetection_YOLOSeries"
"miemie2013/miemiedetection" -> "Oneflow-Inc/one-yolov5" ["e"=1]
"miemie2013/miemiedetection" -> "iloveai8086/YOLOC"
"jizhishutong/YOLOU" -> "iscyy/yoloair"
"jizhishutong/YOLOU" -> "shouxieai/tensorRT_Pro"
"jizhishutong/YOLOU" -> "open-mmlab/mmyolo"
"jizhishutong/YOLOU" -> "shouxieai/learning-cuda-trt"
"jizhishutong/YOLOU" -> "Linaom1214/TensorRT-For-YOLO-Series"
"jizhishutong/YOLOU" -> "miemie2013/miemiedetection"
"jizhishutong/YOLOU" -> "meituan/YOLOv6"
"jizhishutong/YOLOU" -> "zhiqwang/yolov5-rt-stack"
"jizhishutong/YOLOU" -> "Gumpest/YOLOv5-Multibackbone-Compression" ["e"=1]
"jizhishutong/YOLOU" -> "shouxieai/tensorRT_cpp"
"jizhishutong/YOLOU" -> "Syencil/mobile-yolov5-pruning-distillation" ["e"=1]
"jizhishutong/YOLOU" -> "jinfagang/yolov7"
"jizhishutong/YOLOU" -> "ppogg/YOLOv5-Lite" ["e"=1]
"jizhishutong/YOLOU" -> "shouxieai/infer"
"jizhishutong/YOLOU" -> "NVIDIA-AI-IOT/yolo_deepstream"
"xiaolonw/adversarial-frcnn" -> "szq0214/DSOD"
"xiaolonw/adversarial-frcnn" -> "abhi2610/ohem"
"xiaolonw/adversarial-frcnn" -> "xiaohaoChen/rrc_detection"
"xiaolonw/adversarial-frcnn" -> "taokong/RON"
"xiaolonw/adversarial-frcnn" -> "umich-vl/CornerNet"
"xiaolonw/adversarial-frcnn" -> "itijyou/ademxapp" ["e"=1]
"xiaolonw/adversarial-frcnn" -> "Orpine/py-R-FCN"
"xiaolonw/adversarial-frcnn" -> "zengarden/light_head_rcnn"
"xiaolonw/adversarial-frcnn" -> "bharatsingh430/soft-nms"
"xiaolonw/adversarial-frcnn" -> "daijifeng001/R-FCN"
"xiaolonw/adversarial-frcnn" -> "bharatsingh430/Deformable-ConvNets"
"xiaolonw/adversarial-frcnn" -> "facebook/fb-caffe-exts" ["e"=1]
"xiaolonw/adversarial-frcnn" -> "guojunq/lsgan" ["e"=1]
"xiaolonw/adversarial-frcnn" -> "felixgwu/mask_rcnn_pytorch"
"xiaolonw/adversarial-frcnn" -> "xmyqsh/FPN"
"MG2033/ShuffleNet" -> "TropComplique/shufflenet-v2-tensorflow"
"MG2033/ShuffleNet" -> "scheckmedia/keras-shufflenet"
"MG2033/ShuffleNet" -> "farmingyard/ShuffleNet"
"MG2033/ShuffleNet" -> "Zehaos/MobileNet"
"MG2033/ShuffleNet" -> "timctho/shufflenet-v2-tensorflow"
"MG2033/ShuffleNet" -> "miaow1988/ShuffleNet_V2_pytorch_caffe"
"MG2033/ShuffleNet" -> "jaxony/ShuffleNet"
"MG2033/ShuffleNet" -> "neuleaf/MobileNetV2"
"MG2033/ShuffleNet" -> "xiaochus/MobileNetV2"
"MG2033/ShuffleNet" -> "MG2033/MobileNet-V2"
"MG2033/ShuffleNet" -> "MG2033/MobileNet"
"MG2033/ShuffleNet" -> "TropComplique/ShuffleNet-tensorflow"
"MG2033/ShuffleNet" -> "Seanlinx/mtcnn" ["e"=1]
"MG2033/ShuffleNet" -> "camel007/Caffe-ShuffleNet"
"MG2033/ShuffleNet" -> "taki0112/SENet-Tensorflow"
"timctho/shufflenet-v2-tensorflow" -> "TropComplique/shufflenet-v2-tensorflow"
"PaddlePaddle/Paddle-Inference-Demo" -> "PaddlePaddle/CINN"
"PaddlePaddle/Paddle-Inference-Demo" -> "PaddlePaddle/LiteKit"
"PaddlePaddle/Paddle-Inference-Demo" -> "PaddlePaddle/Paddle2ONNX"
"PaddlePaddle/Paddle-Inference-Demo" -> "PaddlePaddle/Paddle-bot"
"PaddlePaddle/Paddle-Inference-Demo" -> "PaddlePaddle/benchmark"
"PaddlePaddle/Paddle-Inference-Demo" -> "PaddlePaddle/hapi"
"PaddlePaddle/Paddle-Inference-Demo" -> "PaddlePaddle/FluidDoc"
"PaddlePaddle/Paddle-Inference-Demo" -> "PaddlePaddle/continuous_integration"
"PaddlePaddle/Paddle-Inference-Demo" -> "PaddlePaddle/community"
"PaddlePaddle/Paddle-Inference-Demo" -> "PaddlePaddle/PaddleScience"
"rbgirshick/yacs" -> "facebookresearch/fvcore"
"rbgirshick/yacs" -> "omry/omegaconf"
"rbgirshick/yacs" -> "facebookresearch/pycls"
"rbgirshick/yacs" -> "open-mmlab/mmcv"
"rbgirshick/yacs" -> "mapillary/inplace_abn" ["e"=1]
"rbgirshick/yacs" -> "facebookresearch/maskrcnn-benchmark"
"rbgirshick/yacs" -> "facebookresearch/ClassyVision"
"rbgirshick/yacs" -> "facebookresearch/MaskFormer"
"rbgirshick/yacs" -> "tianzhi0549/FCOS"
"rbgirshick/yacs" -> "roytseng-tw/Detectron.pytorch"
"rbgirshick/yacs" -> "lvis-dataset/lvis-api" ["e"=1]
"rbgirshick/yacs" -> "Lyken17/pytorch-OpCounter"
"rbgirshick/yacs" -> "michuanhaohao/reid-strong-baseline" ["e"=1]
"rbgirshick/yacs" -> "Microsoft/human-pose-estimation.pytorch" ["e"=1]
"rbgirshick/yacs" -> "vacancy/Synchronized-BatchNorm-PyTorch" ["e"=1]
"HolmesShuan/ResNet-18-Caffemodel-on-ImageNet" -> "yihui-he/resnet-imagenet-caffe"
"HolmesShuan/ResNet-18-Caffemodel-on-ImageNet" -> "antingshen/resnet-protofiles"
"HolmesShuan/ResNet-18-Caffemodel-on-ImageNet" -> "yihui-he/resnet-cifar10-caffe"
"HolmesShuan/ResNet-18-Caffemodel-on-ImageNet" -> "camel007/Caffe-ShuffleNet"
"HolmesShuan/ResNet-18-Caffemodel-on-ImageNet" -> "yonghenglh6/DepthwiseConvolution"
"HolmesShuan/ResNet-18-Caffemodel-on-ImageNet" -> "shicai/DenseNet-Caffe"
"HolmesShuan/ResNet-18-Caffemodel-on-ImageNet" -> "farmingyard/caffe-mobilenet"
"HolmesShuan/ResNet-18-Caffemodel-on-ImageNet" -> "farmingyard/ShuffleNet"
"HolmesShuan/ResNet-18-Caffemodel-on-ImageNet" -> "gklz1982/caffe-yolov2"
"HolmesShuan/ResNet-18-Caffemodel-on-ImageNet" -> "HolmesShuan/ShuffleNet-An-Extremely-Efficient-CNN-for-Mobile-Devices-Caffe-Reimplementation"
"HolmesShuan/ResNet-18-Caffemodel-on-ImageNet" -> "shicai/MobileNet-Caffe"
"HolmesShuan/ResNet-18-Caffemodel-on-ImageNet" -> "zimenglan-sysu-512/Focal-Loss"
"HolmesShuan/ResNet-18-Caffemodel-on-ImageNet" -> "twtygqyy/caffe-augmentation"
"HolmesShuan/ResNet-18-Caffemodel-on-ImageNet" -> "Zhouaojun/Incremental-Network-Quantization" ["e"=1]
"HolmesShuan/ResNet-18-Caffemodel-on-ImageNet" -> "SnailTyan/caffe-model-zoo"
"SnailTyan/caffe-model-zoo" -> "soeaver/caffe-model"
"SnailTyan/caffe-model-zoo" -> "HolmesShuan/ResNet-18-Caffemodel-on-ImageNet"
"SnailTyan/caffe-model-zoo" -> "GeekLiB/caffe-model"
"SnailTyan/caffe-model-zoo" -> "xialuxi/arcface-caffe" ["e"=1]
"SnailTyan/caffe-model-zoo" -> "longcw/pytorch2caffe"
"SnailTyan/caffe-model-zoo" -> "yihui-he/resnet-imagenet-caffe"
"SnailTyan/caffe-model-zoo" -> "shicai/DenseNet-Caffe"
"SnailTyan/caffe-model-zoo" -> "eric612/MobileNet-YOLO"
"SnailTyan/caffe-model-zoo" -> "shicai/MobileNet-Caffe"
"SnailTyan/caffe-model-zoo" -> "eric612/Caffe-YOLOv3-Windows"
"SnailTyan/caffe-model-zoo" -> "ChenYingpeng/caffe-yolov3"
"SnailTyan/caffe-model-zoo" -> "liuzhuang13/DenseNetCaffe"
"SnailTyan/caffe-model-zoo" -> "farmingyard/caffe-mobilenet"
"SnailTyan/caffe-model-zoo" -> "lwplw/caffe_yolov2"
"CaoWGG/TensorRT-CenterNet" -> "dlunion/tensorRTIntegrate"
"CaoWGG/TensorRT-CenterNet" -> "kimyoon-young/centerNet-deep-sort" ["e"=1]
"CaoWGG/TensorRT-CenterNet" -> "bleakie/CenterMulti" ["e"=1]
"CaoWGG/TensorRT-CenterNet" -> "Syencil/tensorRT"
"CaoWGG/TensorRT-CenterNet" -> "Star-Clouds/CenterFace" ["e"=1]
"CaoWGG/TensorRT-CenterNet" -> "ruinmessi/ASFF"
"CaoWGG/TensorRT-CenterNet" -> "tensorboy/centerpose" ["e"=1]
"CaoWGG/TensorRT-CenterNet" -> "xingyizhou/CenterTrack" ["e"=1]
"CaoWGG/TensorRT-CenterNet" -> "onnx/onnx-tensorrt"
"CaoWGG/TensorRT-CenterNet" -> "zerollzeng/tiny-tensorrt"
"CaoWGG/TensorRT-CenterNet" -> "FateScript/CenterNet-better"
"CaoWGG/TensorRT-CenterNet" -> "JosephChenHub/CenterNet-TensorRT"
"CaoWGG/TensorRT-CenterNet" -> "lewes6369/TensorRT-Yolov3" ["e"=1]
"CaoWGG/TensorRT-CenterNet" -> "xingyizhou/CenterNet2"
"CaoWGG/TensorRT-CenterNet" -> "xingyizhou/CenterNet"
"OpenGVLab/gv-benchmark" -> "OpenGVLab/opengvlab.github.io"
"OpenGVLab/gv-benchmark" -> "jshilong/GroupRCNN"
"OpenGVLab/gv-benchmark" -> "open-mmlab/mim"
"xxradon/ONNXToCaffe" -> "xxradon/PytorchToCaffe"
"xxradon/ONNXToCaffe" -> "MTLab/onnx2caffe"
"xxradon/ONNXToCaffe" -> "woodsgao/pytorch2caffe"
"xxradon/ONNXToCaffe" -> "asiryan/caffe2onnx"
"ayoolaolafenwa/PixelLib" -> "divamgupta/image-segmentation-keras" ["e"=1]
"ayoolaolafenwa/PixelLib" -> "obss/sahi"
"ayoolaolafenwa/PixelLib" -> "airctic/icevision" ["e"=1]
"ayoolaolafenwa/PixelLib" -> "haotian-liu/yolact_edge"
"ayoolaolafenwa/PixelLib" -> "bonlime/keras-deeplab-v3-plus" ["e"=1]
"ayoolaolafenwa/PixelLib" -> "dbolya/yolact"
"ayoolaolafenwa/PixelLib" -> "qubvel/segmentation_models"
"ayoolaolafenwa/PixelLib" -> "google-research-datasets/Objectron" ["e"=1]
"ayoolaolafenwa/PixelLib" -> "WXinlong/SOLO"
"ayoolaolafenwa/PixelLib" -> "codebox/image_augmentor"
"ayoolaolafenwa/PixelLib" -> "hkchengrex/MiVOS" ["e"=1]
"ayoolaolafenwa/PixelLib" -> "youngwanLEE/CenterMask"
"ayoolaolafenwa/PixelLib" -> "Borda/pyImSegm" ["e"=1]
"ayoolaolafenwa/PixelLib" -> "streamlit/demo-face-gan" ["e"=1]
"hoya012/CVPR-2019-Paper-Statistics" -> "extreme-assistant/iccv2019"
"hoya012/CVPR-2019-Paper-Statistics" -> "shaohua0116/ICLR2019-OpenReviewData" ["e"=1]
"hoya012/CVPR-2019-Paper-Statistics" -> "extreme-assistant/cvpr2019"
"hoya012/CVPR-2019-Paper-Statistics" -> "xiaolonw/TimeCycle" ["e"=1]
"hoya012/CVPR-2019-Paper-Statistics" -> "hoya012/ICCV-2019-Paper-Statistics"
"hoya012/CVPR-2019-Paper-Statistics" -> "Sophia-11/Awesome-ICCV2019"
"HardLaugh/EfficientDet-bifpn" -> "yoneken1/pytorch_bifpn_for_mmdetection"
"Stinky-Tofu/Stronger-yolo" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"Stinky-Tofu/Stronger-yolo" -> "wlguan/Stronger-yolo-pytorch"
"Stinky-Tofu/Stronger-yolo" -> "talebolano/yolov3-network-slimming" ["e"=1]
"Stinky-Tofu/Stronger-yolo" -> "Lam1360/YOLOv3-model-pruning" ["e"=1]
"Stinky-Tofu/Stronger-yolo" -> "fsx950223/mobilenetv2-yolov3"
"Stinky-Tofu/Stronger-yolo" -> "eric612/MobileNet-YOLO"
"Stinky-Tofu/Stronger-yolo" -> "lzx1413/PytorchSSD"
"Stinky-Tofu/Stronger-yolo" -> "generalized-iou/g-darknet" ["e"=1]
"Stinky-Tofu/Stronger-yolo" -> "ruinmessi/ASFF"
"Stinky-Tofu/Stronger-yolo" -> "ruinmessi/RFBNet"
"Stinky-Tofu/Stronger-yolo" -> "princeton-vl/CornerNet-Lite"
"Stinky-Tofu/Stronger-yolo" -> "Adamdad/keras-YOLOv3-mobilenet"
"Stinky-Tofu/Stronger-yolo" -> "ShuangXieIrene/ssds.pytorch"
"Stinky-Tofu/Stronger-yolo" -> "BobLiu20/YOLOv3_PyTorch"
"Stinky-Tofu/Stronger-yolo" -> "libuyu/GHM_Detection"
"maiminh1996/YOLOv3-tensorflow" -> "aloyschen/tensorflow-yolo3"
"maiminh1996/YOLOv3-tensorflow" -> "raytroop/YOLOv3_tf"
"maiminh1996/YOLOv3-tensorflow" -> "IronMastiff/YOLOv3_tensorflow"
"maiminh1996/YOLOv3-tensorflow" -> "mystic123/tensorflow-yolo-v3"
"rbgirshick/caffe-fast-rcnn" -> "D-X-Y/caffe-faster-rcnn"
"rbgirshick/caffe-fast-rcnn" -> "daijifeng001/R-FCN"
"rbgirshick/caffe-fast-rcnn" -> "xingwangsfu/caffe-yolo"
"rbgirshick/caffe-fast-rcnn" -> "ShaoqingRen/SPP_net"
"rbgirshick/caffe-fast-rcnn" -> "rbgirshick/fast-rcnn"
"rbgirshick/caffe-fast-rcnn" -> "ShaoqingRen/faster_rcnn"
"rbgirshick/caffe-fast-rcnn" -> "ydwen/caffe-face" ["e"=1]
"rbgirshick/caffe-fast-rcnn" -> "shicai/Caffe_Manual"
"rbgirshick/caffe-fast-rcnn" -> "daijifeng001/caffe-rfcn"
"rbgirshick/caffe-fast-rcnn" -> "yeahkun/caffe-yolo"
"rbgirshick/caffe-fast-rcnn" -> "ShaoqingRen/caffe"
"tonylins/pytorch-mobilenet-v2" -> "marvis/pytorch-mobilenet"
"tonylins/pytorch-mobilenet-v2" -> "xiaolai-sqlai/mobilenetv3"
"tonylins/pytorch-mobilenet-v2" -> "d-li14/mobilenetv2.pytorch"
"tonylins/pytorch-mobilenet-v2" -> "kuan-wang/pytorch-mobilenet-v3"
"tonylins/pytorch-mobilenet-v2" -> "ericsun99/Shufflenet-v2-Pytorch"
"tonylins/pytorch-mobilenet-v2" -> "Randl/MobileNetV2-pytorch"
"tonylins/pytorch-mobilenet-v2" -> "ShichenLiu/CondenseNet"
"tonylins/pytorch-mobilenet-v2" -> "MG2033/MobileNet-V2"
"tonylins/pytorch-mobilenet-v2" -> "megvii-model/ShuffleNet-Series"
"tonylins/pytorch-mobilenet-v2" -> "Lyken17/pytorch-OpCounter"
"tonylins/pytorch-mobilenet-v2" -> "miaow1988/ShuffleNet_V2_pytorch_caffe"
"tonylins/pytorch-mobilenet-v2" -> "NervanaSystems/distiller" ["e"=1]
"tonylins/pytorch-mobilenet-v2" -> "kuangliu/pytorch-retinanet"
"tonylins/pytorch-mobilenet-v2" -> "shicai/MobileNet-Caffe"
"tonylins/pytorch-mobilenet-v2" -> "ShuangXieIrene/ssds.pytorch"
"zhaoweicai/Detectron-Cascade-RCNN" -> "zhaoweicai/cascade-rcnn"
"zhaoweicai/Detectron-Cascade-RCNN" -> "guoruoqian/cascade-rcnn_Pytorch"
"zhaoweicai/Detectron-Cascade-RCNN" -> "yihui-he/KL-Loss"
"zhaoweicai/Detectron-Cascade-RCNN" -> "PKUbahuangliuhe/CBNet"
"zhaoweicai/Detectron-Cascade-RCNN" -> "xingyizhou/ExtremeNet"
"zhaoweicai/Detectron-Cascade-RCNN" -> "OceanPang/Libra_R-CNN"
"zhaoweicai/Detectron-Cascade-RCNN" -> "joe-siyuan-qiao/DetectoRS"
"zhaoweicai/Detectron-Cascade-RCNN" -> "sfzhang15/RefineDet"
"zhaoweicai/Detectron-Cascade-RCNN" -> "ruinmessi/RFBNet"
"zhaoweicai/Detectron-Cascade-RCNN" -> "princeton-vl/CornerNet-Lite"
"zhaoweicai/Detectron-Cascade-RCNN" -> "Duankaiwen/CenterNet"
"zhaoweicai/Detectron-Cascade-RCNN" -> "umich-vl/CornerNet"
"zhaoweicai/Detectron-Cascade-RCNN" -> "ShuLiu1993/PANet"
"zhaoweicai/Detectron-Cascade-RCNN" -> "zhangxiaosong18/FreeAnchor"
"zhaoweicai/Detectron-Cascade-RCNN" -> "TuSimple/simpledet"
"zzl-pointcloud/Data_Augmentation_Zoo_for_Object_Detection" -> "gmayday1997/SmallObjectAugmentation"
"zzl-pointcloud/Data_Augmentation_Zoo_for_Object_Detection" -> "finepix/small_object_augmentation"
"zzl-pointcloud/Data_Augmentation_Zoo_for_Object_Detection" -> "Jasonlee1995/AutoAugment_Detection"
"jing-vision/lightnet" -> "xueeinstein/darknet-vis"
"pytorch/TensorRT" -> "openppl-public/ppq"
"pytorch/TensorRT" -> "NVIDIA/trt-samples-for-hackathon-cn"
"pytorch/TensorRT" -> "onnx/onnx-tensorrt"
"pytorch/TensorRT" -> "NVIDIA/TransformerEngine" ["e"=1]
"pytorch/TensorRT" -> "NVIDIA/FasterTransformer" ["e"=1]
"pytorch/TensorRT" -> "NVIDIA-AI-IOT/torch2trt"
"pytorch/TensorRT" -> "NVIDIA/TensorRT"
"pytorch/TensorRT" -> "facebookincubator/AITemplate" ["e"=1]
"pytorch/TensorRT" -> "Tencent/TPAT"
"pytorch/TensorRT" -> "isarsoft/yolov4-triton-tensorrt" ["e"=1]
"pytorch/TensorRT" -> "zhiqwang/yolov5-rt-stack"
"pytorch/TensorRT" -> "triple-Mu/YOLOv8-TensorRT"
"pytorch/TensorRT" -> "pytorch/torchdynamo" ["e"=1]
"pytorch/TensorRT" -> "shouxieai/tensorRT_Pro"
"pytorch/TensorRT" -> "microsoft/onnxruntime-inference-examples"
"microsoft/CvT" -> "leoxiaobin/CvT"
"microsoft/CvT" -> "rishikksh20/convolution-vision-transformers"
"microsoft/CvT" -> "rishikksh20/CeiT-pytorch"
"microsoft/CvT" -> "whai362/PVT"
"microsoft/CvT" -> "microsoft/vision-longformer"
"microsoft/CvT" -> "yitu-opensource/T2T-ViT"
"microsoft/CvT" -> "wofmanaf/ResT"
"microsoft/CvT" -> "zihangJiang/TokenLabeling"
"microsoft/CvT" -> "microsoft/Focal-Transformer"
"microsoft/CvT" -> "sail-sg/poolformer"
"microsoft/CvT" -> "facebookresearch/convit"
"microsoft/CvT" -> "microsoft/CSWin-Transformer"
"microsoft/CvT" -> "raoyongming/DynamicViT"
"microsoft/CvT" -> "pengzhiliang/Conformer"
"TropComplique/shufflenet-v2-tensorflow" -> "timctho/shufflenet-v2-tensorflow"
"TropComplique/shufflenet-v2-tensorflow" -> "MG2033/ShuffleNet"
"TropComplique/shufflenet-v2-tensorflow" -> "opconty/keras-shufflenetV2"
"52CV/CVPR-2023-Papers" -> "52CV/CVPR-2022-Papers"
"soeaver/Pytorch_Mask_RCNN" -> "soeaver/AirNet-PyTorch" ["e"=1]
"soeaver/Pytorch_Mask_RCNN" -> "soeaver/mxnet-model" ["e"=1]
"soeaver/Pytorch_Mask_RCNN" -> "soeaver/py-RFCN-priv" ["e"=1]
"soeaver/Pytorch_Mask_RCNN" -> "soeaver/pytorch-priv" ["e"=1]
"soeaver/Pytorch_Mask_RCNN" -> "soeaver/Parsing-R-CNN" ["e"=1]
"soeaver/Pytorch_Mask_RCNN" -> "soeaver/CrossNet-PyTorch" ["e"=1]
"soeaver/Pytorch_Mask_RCNN" -> "multimodallearning/pytorch-mask-rcnn"
"soeaver/Pytorch_Mask_RCNN" -> "longcw/RoIAlign.pytorch"
"soeaver/Pytorch_Mask_RCNN" -> "ignacio-rocco/detectorch"
"soeaver/Pytorch_Mask_RCNN" -> "wannabeOG/Mask-RCNN"
"soeaver/Pytorch_Mask_RCNN" -> "skrish13/PyTorch-mask-x-rcnn"
"soeaver/Pytorch_Mask_RCNN" -> "roytseng-tw/mask-rcnn.pytorch"
"soeaver/Pytorch_Mask_RCNN" -> "kuangliu/torchcv"
"puzzledqs/BBox-Label-Tool" -> "Guanghan/darknet"
"puzzledqs/BBox-Label-Tool" -> "AlexeyAB/Yolo_mark"
"puzzledqs/BBox-Label-Tool" -> "weiliu89/caffe"
"puzzledqs/BBox-Label-Tool" -> "xingwangsfu/caffe-yolo"
"puzzledqs/BBox-Label-Tool" -> "gliese581gg/YOLO_tensorflow"
"puzzledqs/BBox-Label-Tool" -> "thtrieu/darkflow"
"puzzledqs/BBox-Label-Tool" -> "Guanghan/ROLO" ["e"=1]
"puzzledqs/BBox-Label-Tool" -> "balancap/SSD-Tensorflow"
"puzzledqs/BBox-Label-Tool" -> "smallcorgi/Faster-RCNN_TF"
"puzzledqs/BBox-Label-Tool" -> "tzutalin/labelImg"
"puzzledqs/BBox-Label-Tool" -> "allanzelener/YAD2K"
"puzzledqs/BBox-Label-Tool" -> "experiencor/basic-yolo-keras"
"puzzledqs/BBox-Label-Tool" -> "longcw/yolo2-pytorch"
"puzzledqs/BBox-Label-Tool" -> "daijifeng001/R-FCN"
"puzzledqs/BBox-Label-Tool" -> "zhreshold/mxnet-ssd" ["e"=1]
"jia-zhuang/pytorch-multi-gpu-training" -> "tczhangzhi/pytorch-distributed"
"dontfollowmeimcrazy/imagenet" -> "hjptriplebee/AlexNet_with_tensorflow"
"dontfollowmeimcrazy/imagenet" -> "jireh-father/tensorflow-alexnet"
"dontfollowmeimcrazy/imagenet" -> "arashno/tensorflow_multigpu_imagenet"
"dontfollowmeimcrazy/imagenet" -> "kratzert/finetune_alexnet_with_tensorflow"
"dontfollowmeimcrazy/imagenet" -> "dgurkaynak/tensorflow-cnn-finetune"
"chuanqi305/MobileNetv2-SSDLite" -> "yonghenglh6/DepthwiseConvolution"
"chuanqi305/MobileNetv2-SSDLite" -> "chuanqi305/MobileNet-SSD"
"chuanqi305/MobileNetv2-SSDLite" -> "shicai/MobileNet-Caffe"
"chuanqi305/MobileNetv2-SSDLite" -> "suzhenghang/MobileNetv2"
"chuanqi305/MobileNetv2-SSDLite" -> "Robert-JunWang/Pelee"
"chuanqi305/MobileNetv2-SSDLite" -> "eric612/MobileNet-YOLO"
"chuanqi305/MobileNetv2-SSDLite" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"chuanqi305/MobileNetv2-SSDLite" -> "farmingyard/ShuffleNet"
"chuanqi305/MobileNetv2-SSDLite" -> "miaow1988/ShuffleNet_V2_pytorch_caffe"
"chuanqi305/MobileNetv2-SSDLite" -> "chuanqi305/SqueezeNet-SSD"
"chuanqi305/MobileNetv2-SSDLite" -> "chenzhi1992/TensorRT-SSD" ["e"=1]
"chuanqi305/MobileNetv2-SSDLite" -> "austingg/MobileNet-v2-caffe"
"chuanqi305/MobileNetv2-SSDLite" -> "farmingyard/caffe-mobilenet"
"chuanqi305/MobileNetv2-SSDLite" -> "chuanqi305/FocalLoss"
"chuanqi305/MobileNetv2-SSDLite" -> "dlunion/mtcnn" ["e"=1]
"ilkarman/DeepLearningFrameworks" -> "mila-udem/welcome_tutorials" ["e"=1]
"ilkarman/DeepLearningFrameworks" -> "lanpa/tensorboard-pytorch"
"ilkarman/DeepLearningFrameworks" -> "Microsoft/MMdnn"
"ilkarman/DeepLearningFrameworks" -> "zackchase/mxnet-the-straight-dope"
"ilkarman/DeepLearningFrameworks" -> "gluon-api/gluon-api"
"ilkarman/DeepLearningFrameworks" -> "facebookresearch/fairseq-py" ["e"=1]
"ilkarman/DeepLearningFrameworks" -> "uber/horovod"
"ilkarman/DeepLearningFrameworks" -> "soumith/convnet-benchmarks" ["e"=1]
"ilkarman/DeepLearningFrameworks" -> "ysh329/deep-learning-model-convertor"
"ilkarman/DeepLearningFrameworks" -> "openai/gradient-checkpointing" ["e"=1]
"ilkarman/DeepLearningFrameworks" -> "TuSimple/mx-maskrcnn"
"ilkarman/DeepLearningFrameworks" -> "rasbt/deep-learning-book" ["e"=1]
"ilkarman/DeepLearningFrameworks" -> "yunjey/StarGAN" ["e"=1]
"ilkarman/DeepLearningFrameworks" -> "tensorflow/lucid"
"ilkarman/DeepLearningFrameworks" -> "uber-common/deep-neuroevolution" ["e"=1]
"ispc-lab/SmallObjectDetectionList" -> "Icecream-blue-sky/Past-and-present-small-object-detection"
"ispc-lab/SmallObjectDetectionList" -> "ChenhongyiYang/QueryDet-PyTorch"
"ispc-lab/SmallObjectDetectionList" -> "gmayday1997/SmallObjectAugmentation"
"ispc-lab/SmallObjectDetectionList" -> "kuanhungchen/awesome-tiny-object-detection"
"ispc-lab/SmallObjectDetectionList" -> "knhngchn/awesome-tiny-object-detection"
"ispc-lab/SmallObjectDetectionList" -> "ucas-vg/TinyBenchmark"
"ispc-lab/SmallObjectDetectionList" -> "Jakaria08/EESRGAN"
"ispc-lab/SmallObjectDetectionList" -> "jwwangchn/AI-TOD"
"geaxgx/playing-card-detection" -> "EdjeElectronics/OpenCV-Playing-Card-Detector"
"Meituan-AutoML/Twins" -> "Meituan-AutoML/CPVT"
"Meituan-AutoML/Twins" -> "whai362/PVT"
"Meituan-AutoML/Twins" -> "microsoft/CSWin-Transformer"
"Meituan-AutoML/Twins" -> "wofmanaf/ResT"
"Meituan-AutoML/Twins" -> "mulinmeng/Shuffle-Transformer"
"Meituan-AutoML/Twins" -> "microsoft/Focal-Transformer"
"Meituan-AutoML/Twins" -> "facebookresearch/LeViT"
"Meituan-AutoML/Twins" -> "facebookresearch/MaskFormer"
"Meituan-AutoML/Twins" -> "raoyongming/DynamicViT"
"Meituan-AutoML/Twins" -> "cheerss/CrossFormer"
"Meituan-AutoML/Twins" -> "ZwwWayne/K-Net"
"Meituan-AutoML/Twins" -> "fudan-zvg/SETR"
"Meituan-AutoML/Twins" -> "hustvl/YOLOS"
"Meituan-AutoML/Twins" -> "zihangJiang/TokenLabeling"
"Meituan-AutoML/Twins" -> "microsoft/vision-longformer"
"iamhankai/ghostnet.pytorch" -> "huawei-noah/ghostnet"
"iamhankai/ghostnet.pytorch" -> "d-li14/ghostnet.pytorch"
"iamhankai/ghostnet.pytorch" -> "TingsongYu/ghostnet_cifar10"
"iamhankai/ghostnet.pytorch" -> "iamhankai/ghostnet" ["e"=1]
"iamhankai/ghostnet.pytorch" -> "sfzhang15/ATSS"
"iamhankai/ghostnet.pytorch" -> "xiaolai-sqlai/mobilenetv3"
"iamhankai/ghostnet.pytorch" -> "kuan-wang/pytorch-mobilenet-v3"
"iamhankai/ghostnet.pytorch" -> "megvii-model/ShuffleNet-Series"
"iamhankai/ghostnet.pytorch" -> "zhanghang1989/ResNeSt"
"iamhankai/ghostnet.pytorch" -> "DingXiaoH/ACNet" ["e"=1]
"iamhankai/ghostnet.pytorch" -> "Star-Clouds/CenterFace" ["e"=1]
"kentsommer/keras-inceptionV4" -> "titu1994/Inception-v4"
"kentsommer/keras-inceptionV4" -> "farizrahman4u/keras-contrib" ["e"=1]
"kentsommer/keras-inceptionV4" -> "flyyufelix/DenseNet-Keras"
"kentsommer/keras-inceptionV4" -> "titu1994/DenseNet"
"kentsommer/keras-inceptionV4" -> "myutwo150/keras-inception-resnet-v2"
"kentsommer/keras-inceptionV4" -> "rcmalli/keras-squeezenet" ["e"=1]
"kentsommer/keras-inceptionV4" -> "titu1994/Keras-ResNeXt"
"kentsommer/keras-inceptionV4" -> "kentsommer/keras-inception-resnetV2"
"kentsommer/keras-inceptionV4" -> "raghakot/keras-resnet"
"kentsommer/keras-inceptionV4" -> "flyyufelix/cnn_finetune"
"kentsommer/keras-inceptionV4" -> "rykov8/ssd_keras"
"kentsommer/keras-inceptionV4" -> "yhenon/keras-frcnn"
"msracver/Relation-Networks-for-Object-Detection" -> "zhaoweicai/cascade-rcnn"
"msracver/Relation-Networks-for-Object-Detection" -> "vacancy/PreciseRoIPooling"
"msracver/Relation-Networks-for-Object-Detection" -> "sfzhang15/RefineDet"
"msracver/Relation-Networks-for-Object-Detection" -> "mahyarnajibi/SNIPER"
"msracver/Relation-Networks-for-Object-Detection" -> "msracver/Deformable-ConvNets"
"msracver/Relation-Networks-for-Object-Detection" -> "heefe92/Relation_Networks-pytorch"
"msracver/Relation-Networks-for-Object-Detection" -> "roytseng-tw/Detectron.pytorch"
"msracver/Relation-Networks-for-Object-Detection" -> "umich-vl/CornerNet"
"msracver/Relation-Networks-for-Object-Detection" -> "choasup/SIN" ["e"=1]
"msracver/Relation-Networks-for-Object-Detection" -> "ShuLiu1993/PANet"
"msracver/Relation-Networks-for-Object-Detection" -> "princeton-vl/CornerNet"
"msracver/Relation-Networks-for-Object-Detection" -> "zengarden/light_head_rcnn"
"msracver/Relation-Networks-for-Object-Detection" -> "xingyizhou/ExtremeNet"
"msracver/Relation-Networks-for-Object-Detection" -> "ruinmessi/RFBNet"
"msracver/Relation-Networks-for-Object-Detection" -> "lzx1413/PytorchSSD"
"astirn/IIC" -> "nathanin/IIC"
"XinZhangNLPR/awesome-anchor-free-object-detection" -> "Megvii-BaseDetection/DeFCN"
"XinZhangNLPR/awesome-anchor-free-object-detection" -> "sfzhang15/ATSS"
"XinZhangNLPR/awesome-anchor-free-object-detection" -> "kuanhungchen/awesome-tiny-object-detection"
"XinZhangNLPR/awesome-anchor-free-object-detection" -> "Megvii-BaseDetection/BorderDet"
"XinZhangNLPR/awesome-anchor-free-object-detection" -> "VCBE123/AnchorFreeDetection"
"XinZhangNLPR/awesome-anchor-free-object-detection" -> "Scalsol/RepPointsV2"
"XinZhangNLPR/awesome-anchor-free-object-detection" -> "PeizeSun/SparseR-CNN"
"XinZhangNLPR/awesome-anchor-free-object-detection" -> "microsoft/RepPoints"
"XinZhangNLPR/awesome-anchor-free-object-detection" -> "Duankaiwen/CPNDet"
"XinZhangNLPR/awesome-anchor-free-object-detection" -> "FateScript/CenterNet-better"
"XinZhangNLPR/awesome-anchor-free-object-detection" -> "kemaloksuz/ObjectDetectionImbalance"
"XinZhangNLPR/awesome-anchor-free-object-detection" -> "clobotics/piou" ["e"=1]
"XinZhangNLPR/awesome-anchor-free-object-detection" -> "implus/GFocal"
"XinZhangNLPR/awesome-anchor-free-object-detection" -> "kkhoot/PAA"
"XinZhangNLPR/awesome-anchor-free-object-detection" -> "knhngchn/awesome-tiny-object-detection"
"signatrix/efficientdet" -> "toandaominh1997/EfficientDet.Pytorch"
"signatrix/efficientdet" -> "xuannianz/EfficientDet"
"signatrix/efficientdet" -> "WongKinYiu/CrossStagePartialNetworks"
"signatrix/efficientdet" -> "SweetyTian/efficientdet"
"signatrix/efficientdet" -> "zylo117/Yet-Another-EfficientDet-Pytorch"
"signatrix/efficientdet" -> "rwightman/efficientdet-pytorch"
"signatrix/efficientdet" -> "ruinmessi/ASFF"
"signatrix/efficientdet" -> "kentaroy47/efficientdet.pytorch"
"signatrix/efficientdet" -> "youngwanLEE/vovnet-detectron2"
"signatrix/efficientdet" -> "google/automl"
"signatrix/efficientdet" -> "rwightman/gen-efficientnet-pytorch"
"signatrix/efficientdet" -> "PKUbahuangliuhe/CBNet"
"signatrix/efficientdet" -> "sfzhang15/ATSS"
"signatrix/efficientdet" -> "implus/GFocal"
"signatrix/efficientdet" -> "coderhss/efficientdet-pytorch"
"qijiezhao/pytorch-ssd" -> "lopuhin/ssd.pytorch"
"qijiezhao/pytorch-ssd" -> "qijiezhao/CFENet"
"taokong/RON" -> "szq0214/DSOD"
"taokong/RON" -> "tshizys/CoupleNet"
"taokong/RON" -> "zimenglan-sysu-512/Focal-Loss"
"taokong/RON" -> "shicai/DenseNet-Caffe"
"taokong/RON" -> "sciencefans/RSA-for-object-detection" ["e"=1]
"taokong/RON" -> "sanghoon/pva-faster-rcnn"
"taokong/RON" -> "xiaohaoChen/rrc_detection"
"taokong/RON" -> "xiaolonw/adversarial-frcnn"
"taokong/RON" -> "craftGBD/craftGBD"
"taokong/RON" -> "bharatsingh430/soft-nms"
"taokong/RON" -> "bharatsingh430/Deformable-ConvNets"
"taokong/RON" -> "sfzhang15/RefineDet"
"taokong/RON" -> "sciencefans/Focal-Loss"
"taokong/RON" -> "daijifeng001/R-FCN"
"taokong/RON" -> "myfavouritekk/T-CNN" ["e"=1]
"vaesl/LRF-Net" -> "vaesl/LFIP"
"vaesl/LRF-Net" -> "Ranchentx/EFGRNet"
"vaesl/LRF-Net" -> "zl1994/IoU-Uniform-R-CNN"
"vaesl/LRF-Net" -> "wei-yuma/multitrident"
"vaesl/LRF-Net" -> "wangsr126/RDSNet"
"wei-yuma/multitrident" -> "Ranchentx/EFGRNet"
"wei-yuma/multitrident" -> "vaesl/LFIP"
"yczhang1017/SSD_resnet_pytorch" -> "koreadhkim/ResNet_SSD_Pytorch"
"Microsoft/EdgeML" -> "metastableB/GradSchoolTemplates"
"Microsoft/EdgeML" -> "Microsoft/ELL"
"leaderj1001/LambdaNetworks" -> "d-li14/lambda.pytorch"
"yqyao/SSD_Pytorch" -> "yqyao/DRFNet"
"yqyao/SSD_Pytorch" -> "yqyao/YOLOv3_Pytorch"
"yqyao/SSD_Pytorch" -> "lzx1413/PytorchSSD"
"yqyao/SSD_Pytorch" -> "luuuyi/RefineDet.PyTorch"
"yqyao/SSD_Pytorch" -> "yqyao/FCOS_PLUS"
"52CV/2021-CV-Surveys" -> "52CV/CVPR-2021-Papers"
"52CV/2021-CV-Surveys" -> "amusi/CVPR2021-Papers-with-Code"
"52CV/2021-CV-Surveys" -> "extreme-assistant/CVPR2021-Paper-Code-Interpretation"
"52CV/2021-CV-Surveys" -> "52CV/ICCV-Papers"
"52CV/2021-CV-Surveys" -> "amusi/ICCV2021-Papers-with-Code"
"52CV/2021-CV-Surveys" -> "DingXiaoH/RepVGG"
"52CV/2021-CV-Surveys" -> "deepcam-cn/yolov5-face"
"52CV/2021-CV-Surveys" -> "PyRetri/PyRetri" ["e"=1]
"52CV/2021-CV-Surveys" -> "dk-liang/Awesome-Visual-Transformer"
"52CV/2021-CV-Surveys" -> "amusi/ECCV2020-Code"
"52CV/2021-CV-Surveys" -> "extreme-assistant/survey-computer-vision"
"52CV/2021-CV-Surveys" -> "52CV/CVPR-2022-Papers"
"52CV/2021-CV-Surveys" -> "dongdonghy/Detection-PyTorch-Notebook"
"JierunChen/FasterNet" -> "hkzhang91/ParC-Net"
"JierunChen/FasterNet" -> "LSH9832/edgeyolo"
"JierunChen/FasterNet" -> "HVision-NKU/Conv2Former" ["e"=1]
"JierunChen/FasterNet" -> "micronDLA/MobileViTv3"
"JierunChen/FasterNet" -> "apple/ml-mobileone"
"JierunChen/FasterNet" -> "huawei-noah/Efficient-AI-Backbones"
"JierunChen/FasterNet" -> "ofsoundof/GRL-Image-Restoration" ["e"=1]
"JierunChen/FasterNet" -> "DingXiaoH/DiverseBranchBlock" ["e"=1]
"mgrankin/over9000" -> "lessw2020/Ranger-Deep-Learning-Optimizer"
"mgrankin/over9000" -> "lessw2020/mish"
"mgrankin/over9000" -> "lonePatient/lookahead_pytorch"
"mgrankin/over9000" -> "lessw2020/Ranger-Mish-ImageWoof-5"
"mgrankin/over9000" -> "mrT23/TResNet" ["e"=1]
"mgrankin/over9000" -> "michaelrzhang/lookahead"
"mgrankin/over9000" -> "LiyuanLucasLiu/RAdam"
"mgrankin/over9000" -> "lessw2020/Best-Deep-Learning-Optimizers"
"mgrankin/over9000" -> "sdoria/SimpleSelfAttention"
"mgrankin/over9000" -> "pabloppp/pytorch-tools"
"mgrankin/over9000" -> "alphadl/lookahead.pytorch"
"mgrankin/over9000" -> "lessw2020/Ranger21"
"mgrankin/over9000" -> "amirassov/kaggle-imaterialist" ["e"=1]
"mgrankin/over9000" -> "clovaai/assembled-cnn" ["e"=1]
"openvinotoolkit/model_server" -> "openvinotoolkit/operator"
"openvinotoolkit/model_server" -> "openvinotoolkit/openvino_contrib"
"openvinotoolkit/model_server" -> "openvinotoolkit/openvino_notebooks"
"openvinotoolkit/model_server" -> "openvinotoolkit/docker_ci"
"openvinotoolkit/model_server" -> "openvinotoolkit/training_extensions"
"openvinotoolkit/model_server" -> "openvinotoolkit/openvino"
"marvis/pytorch-caffe-darknet-convert" -> "longcw/pytorch2caffe"
"marvis/pytorch-caffe-darknet-convert" -> "ChenYingpeng/caffe-yolov3"
"marvis/pytorch-caffe-darknet-convert" -> "eric612/MobileNet-YOLO"
"marvis/pytorch-caffe-darknet-convert" -> "xxradon/PytorchToCaffe"
"marvis/pytorch-caffe-darknet-convert" -> "marvis/pytorch-yolo2"
"marvis/pytorch-caffe-darknet-convert" -> "gklz1982/caffe-yolov2"
"marvis/pytorch-caffe-darknet-convert" -> "xingwangsfu/caffe-yolo"
"marvis/pytorch-caffe-darknet-convert" -> "shicai/MobileNet-Caffe"
"marvis/pytorch-caffe-darknet-convert" -> "starimeL/PytorchConverter"
"marvis/pytorch-caffe-darknet-convert" -> "lewes6369/TensorRT-Yolov3" ["e"=1]
"marvis/pytorch-caffe-darknet-convert" -> "marvis/pytorch-caffe"
"marvis/pytorch-caffe-darknet-convert" -> "soeaver/caffe-model"
"marvis/pytorch-caffe-darknet-convert" -> "hahnyuan/nn_tools"
"marvis/pytorch-caffe-darknet-convert" -> "ysh329/deep-learning-model-convertor"
"marvis/pytorch-caffe-darknet-convert" -> "yonghenglh6/DepthwiseConvolution"
"shaoshengsong/MobileNetV3-SSD-Compact-Version" -> "shaoshengsong/MobileNetV3-SSD"
"shaoshengsong/MobileNetV3-SSD-Compact-Version" -> "tongyuhome/MobileNetV3-SSD"
"Alpha-VL/ConvMAE" -> "hustvl/MIMDet"
"Alpha-VL/ConvMAE" -> "Alpha-VL/FastConvMAE"
"Alpha-VL/ConvMAE" -> "implus/UM-MAE"
"Alpha-VL/ConvMAE" -> "microsoft/SimMIM"
"Alpha-VL/ConvMAE" -> "ucasligang/awesome-MIM"
"Alpha-VL/ConvMAE" -> "microsoft/X-Decoder" ["e"=1]
"Alpha-VL/ConvMAE" -> "implus/mae_segmentation"
"Alpha-VL/ConvMAE" -> "czczup/ViT-Adapter" ["e"=1]
"Alpha-VL/ConvMAE" -> "facebookresearch/msn"
"Alpha-VL/ConvMAE" -> "dingmyu/davit" ["e"=1]
"Alpha-VL/ConvMAE" -> "baaivision/EVA" ["e"=1]
"Alpha-VL/ConvMAE" -> "lxtGH/CAE"
"Alpha-VL/ConvMAE" -> "EPFL-VILAB/MultiMAE"
"Alpha-VL/ConvMAE" -> "IDEACVR/awesome-detection-transformer" ["e"=1]
"Alpha-VL/ConvMAE" -> "ViTAE-Transformer/ViTDet" ["e"=1]
"Epiphqny/SOLOv2" -> "Epiphqny/CondInst"
"Epiphqny/SOLOv2" -> "WXinlong/SOLO"
"Epiphqny/SOLOv2" -> "Epiphqny/SOLO"
"EscVM/OIDv4_ToolKit" -> "theAIGuysCode/OIDv4_ToolKit" ["e"=1]
"EscVM/OIDv4_ToolKit" -> "AtriSaxena/OIDv4_to_VOC"
"EscVM/OIDv4_ToolKit" -> "cvdfoundation/open-images-dataset"
"EscVM/OIDv4_ToolKit" -> "WyattAutomation/Train-YOLOv3-with-OpenImagesV4"
"EscVM/OIDv4_ToolKit" -> "harshilpatel312/open-images-downloader"
"EscVM/OIDv4_ToolKit" -> "hunglc007/tensorflow-yolov4-tflite"
"EscVM/OIDv4_ToolKit" -> "WongKinYiu/ScaledYOLOv4"
"EscVM/OIDv4_ToolKit" -> "openimages/dataset"
"EscVM/OIDv4_ToolKit" -> "theAIGuysCode/tensorflow-yolov4-tflite" ["e"=1]
"EscVM/OIDv4_ToolKit" -> "pythonlessons/TensorFlow-2.x-YOLOv3" ["e"=1]
"EscVM/OIDv4_ToolKit" -> "experiencor/keras-yolo3"
"EscVM/OIDv4_ToolKit" -> "zamblauskas/oidv4-toolkit-tfrecord-generator"
"EscVM/OIDv4_ToolKit" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices" ["e"=1]
"EscVM/OIDv4_ToolKit" -> "ceccocats/tkDNN"
"EscVM/OIDv4_ToolKit" -> "qfgaohao/pytorch-ssd"
"cheerss/CrossFormer" -> "microsoft/Focal-Transformer"
"cheerss/CrossFormer" -> "OliverRensu/Shunted-Transformer"
"cheerss/CrossFormer" -> "Meituan-AutoML/Twins"
"cheerss/CrossFormer" -> "microsoft/CSWin-Transformer"
"cheerss/CrossFormer" -> "CASIA-IVA-Lab/DPT"
"facebookresearch/msn" -> "bytedance/ibot"
"facebookresearch/msn" -> "microsoft/esvit"
"facebookresearch/msn" -> "facebookresearch/suncet"
"facebookresearch/msn" -> "facebookresearch/moco-v3"
"facebookresearch/msn" -> "Alpha-VL/ConvMAE"
"facebookresearch/msn" -> "implus/UM-MAE"
"facebookresearch/msn" -> "MCG-NJU/VideoMAE" ["e"=1]
"facebookresearch/msn" -> "Sara-Ahmed/SiT"
"facebookresearch/msn" -> "facebookresearch/barlowtwins"
"facebookresearch/msn" -> "facebookresearch/VICRegL"
"facebookresearch/msn" -> "EPFL-VILAB/MultiMAE"
"facebookresearch/msn" -> "hustvl/MIMDet"
"facebookresearch/msn" -> "microsoft/SimMIM"
"facebookresearch/msn" -> "facebookresearch/ToMe" ["e"=1]
"hustvl/MIMDet" -> "Alpha-VL/ConvMAE"
"hustvl/MIMDet" -> "implus/mae_segmentation"
"hustvl/MIMDet" -> "ShoufaChen/AdaptFormer" ["e"=1]
"hustvl/MIMDet" -> "hustvl/TeViT" ["e"=1]
"hustvl/MIMDet" -> "youngwanLEE/MPViT"
"hustvl/MIMDet" -> "jshilong/DDQ" ["e"=1]
"hustvl/MIMDet" -> "hustvl/TopFormer"
"hustvl/MIMDet" -> "microsoft/SimMIM"
"hustvl/MIMDet" -> "hustvl/Featurized-QueryRCNN"
"kevin-ssy/FishNet" -> "chengyangfu/retinamask"
"kevin-ssy/FishNet" -> "switchablenorms/Switchable-Normalization"
"kevin-ssy/FishNet" -> "OceanPang/Libra_R-CNN"
"kevin-ssy/FishNet" -> "umich-vl/CornerNet"
"kevin-ssy/FishNet" -> "libuyu/GHM_Detection"
"kevin-ssy/FishNet" -> "shrubb/box-convolutions" ["e"=1]
"kevin-ssy/FishNet" -> "ronghanghu/seg_every_thing"
"kevin-ssy/FishNet" -> "lxtGH/OctaveConv_pytorch" ["e"=1]
"kevin-ssy/FishNet" -> "xingyizhou/ExtremeNet"
"kevin-ssy/FishNet" -> "ruinmessi/RFBNet"
"yihui-he/softer-NMS" -> "yihui-he/KL-Loss"
"yihui-he/softer-NMS" -> "vacancy/PreciseRoIPooling"
"yihui-he/softer-NMS" -> "umich-vl/CornerNet"
"yihui-he/softer-NMS" -> "bharatsingh430/soft-nms"
"yihui-he/softer-NMS" -> "qijiezhao/CFENet"
"yihui-he/softer-NMS" -> "ruinmessi/RFBNet"
"yihui-he/softer-NMS" -> "xingyizhou/ExtremeNet"
"yihui-he/softer-NMS" -> "OceanPang/Libra_R-CNN"
"yihui-he/softer-NMS" -> "guoruoqian/DetNet_pytorch"
"yihui-he/softer-NMS" -> "lzx1413/PytorchSSD"
"yihui-he/softer-NMS" -> "hosang/gossipnet"
"codebox/image_augmentor" -> "Paperspace/DataAugmentationForObjectDetection"
"codebox/image_augmentor" -> "vxy10/ImageAugmentation"
"codebox/image_augmentor" -> "mdbloice/Augmentor"
"codebox/image_augmentor" -> "kevinlin311tw/caffe-augmentation"
"CaoWGG/TensorRT-YOLOv4" -> "lewes6369/TensorRT-Yolov3" ["e"=1]
"CaoWGG/TensorRT-YOLOv4" -> "Syencil/tensorRT"
"CaoWGG/TensorRT-YOLOv4" -> "enazoe/yolo-tensorrt"
"CaoWGG/TensorRT-YOLOv4" -> "ceccocats/tkDNN"
"CaoWGG/TensorRT-YOLOv4" -> "dongfangduoshou123/YoloV3-TensorRT" ["e"=1]
"CaoWGG/TensorRT-YOLOv4" -> "CaoWGG/TensorRT-CenterNet"
"CaoWGG/TensorRT-YOLOv4" -> "jkjung-avt/tensorrt_demos"
"CaoWGG/TensorRT-YOLOv4" -> "dlunion/tensorRTIntegrate"
"CaoWGG/TensorRT-YOLOv4" -> "bleakie/CenterMulti" ["e"=1]
"CaoWGG/TensorRT-YOLOv4" -> "NVIDIA-AI-IOT/yolov4_deepstream"
"CaoWGG/TensorRT-YOLOv4" -> "zombie0117/yolov3-tiny-onnx-TensorRT" ["e"=1]
"CaoWGG/TensorRT-YOLOv4" -> "TrojanXu/yolov5-tensorrt" ["e"=1]
"CaoWGG/TensorRT-YOLOv4" -> "Stephenfang51/tracklite" ["e"=1]
"CaoWGG/TensorRT-YOLOv4" -> "linghu8812/tensorrt_inference"
"CaoWGG/TensorRT-YOLOv4" -> "Cw-zero/TensorRT_yolo3" ["e"=1]
"ZJULearning/ttfnet" -> "FateScript/CenterNet-better"
"ZJULearning/ttfnet" -> "jinfagang/CenterNet_Pro_Max"
"ZJULearning/ttfnet" -> "microsoft/RepPoints"
"ZJULearning/ttfnet" -> "sfzhang15/ATSS"
"ZJULearning/ttfnet" -> "xingyizhou/CenterNet2"
"ZJULearning/ttfnet" -> "ruinmessi/ASFF"
"ZJULearning/ttfnet" -> "CaoWGG/TensorRT-CenterNet"
"ZJULearning/ttfnet" -> "Megvii-BaseDetection/BorderDet"
"ZJULearning/ttfnet" -> "CPFLAME/centerX"
"ZJULearning/ttfnet" -> "PeizeSun/OneNet"
"ZJULearning/ttfnet" -> "implus/GFocalV2"
"ZJULearning/ttfnet" -> "zhangxiaosong18/FreeAnchor"
"ZJULearning/ttfnet" -> "KiveeDong/CentripetalNet"
"ZJULearning/ttfnet" -> "implus/GFocal"
"ZJULearning/ttfnet" -> "kimyoon-young/centerNet-deep-sort" ["e"=1]
"eric612/Caffe-YOLOv3-Windows" -> "eric612/MobileNet-YOLO"
"eric612/Caffe-YOLOv3-Windows" -> "ChenYingpeng/caffe-yolov3"
"eric612/Caffe-YOLOv3-Windows" -> "eric612/MobileNet-SSD-windows"
"eric612/Caffe-YOLOv3-Windows" -> "yeahkun/caffe-yolo"
"eric612/Caffe-YOLOv3-Windows" -> "ChenYingpeng/darknet2caffe"
"eric612/Caffe-YOLOv3-Windows" -> "lwplw/caffe_yolov2"
"eric612/Caffe-YOLOv3-Windows" -> "gklz1982/caffe-yolov2"
"nightsnack/YOLObile" -> "megvii-model/YOLOF"
"nightsnack/YOLObile" -> "implus/GFocal"
"nightsnack/YOLObile" -> "KiveeDong/CentripetalNet"
"nightsnack/YOLObile" -> "PeizeSun/OneNet"
"nightsnack/YOLObile" -> "Purkialo/CrowdDet" ["e"=1]
"nightsnack/YOLObile" -> "idstcv/ZenNAS" ["e"=1]
"tanluren/mobilenetv3-yolov3" -> "fsx950223/mobilenetv2-yolov3"
"tanluren/mobilenetv3-yolov3" -> "taynoel84/YOLOv3-Mobilenetv2"
"virajmavani/semi-auto-image-annotation-tool" -> "scaelles/DEXTR-PyTorch"
"virajmavani/semi-auto-image-annotation-tool" -> "fidler-lab/curve-gcn"
"virajmavani/semi-auto-image-annotation-tool" -> "fidler-lab/polyrnn-pp-pytorch"
"virajmavani/semi-auto-image-annotation-tool" -> "l3p-cv/lost"
"virajmavani/semi-auto-image-annotation-tool" -> "kemaloksuz/ObjectDetectionImbalance"
"raytroop/YOLOv3_tf" -> "IronMastiff/YOLOv3_tensorflow"
"johannesu/NASNet-keras" -> "titu1994/Keras-NASNet"
"rentainhe/visualization" -> "luo3300612/Visualizer"
"rentainhe/visualization" -> "Meituan-AutoML/Twins"
"FateScript/CenterNet-better" -> "jinfagang/CenterNet_Pro_Max"
"FateScript/CenterNet-better" -> "zzzxxxttt/pytorch_simple_CenterNet_45"
"FateScript/CenterNet-better" -> "xingyizhou/CenterNet2"
"FateScript/CenterNet-better" -> "ZJULearning/ttfnet"
"FateScript/CenterNet-better" -> "PeizeSun/OneNet"
"FateScript/CenterNet-better" -> "CaoWGG/TensorRT-CenterNet"
"FateScript/CenterNet-better" -> "CPFLAME/centerX"
"FateScript/CenterNet-better" -> "Megvii-BaseDetection/BorderDet"
"FateScript/CenterNet-better" -> "kimyoon-young/centerNet-deep-sort" ["e"=1]
"FateScript/CenterNet-better" -> "lbin/CenterNet-better-plus"
"FateScript/CenterNet-better" -> "bleakie/CenterMulti" ["e"=1]
"FateScript/CenterNet-better" -> "microsoft/RepPoints"
"FateScript/CenterNet-better" -> "implus/GFocal"
"FateScript/CenterNet-better" -> "tensorboy/centerpose" ["e"=1]
"FateScript/CenterNet-better" -> "JDAI-CV/centerX"
"JDAI-CV/DSD-SATN" -> "lxc86739795/parsing_platform"
"JDAI-CV/DSD-SATN" -> "JDAI-CV/Partial-Person-ReID"
"JDAI-CV/DSD-SATN" -> "xbq1994/HAA"
"JDAI-CV/DSD-SATN" -> "Arthur151/CenterHMR" ["e"=1]
"JDAI-CV/DSD-SATN" -> "YuhaoCheng/PyAnomaly"
"DocF/Soft-NMS" -> "bharatsingh430/soft-nms"
"DocF/Soft-NMS" -> "OneDirection9/soft-nms"
"DocF/Soft-NMS" -> "miaoshuyu/object-detection-usages"
"DocF/Soft-NMS" -> "wushuang01/soft-nms"
"yonghenglh6/DepthwiseConvolution" -> "shicai/MobileNet-Caffe"
"yonghenglh6/DepthwiseConvolution" -> "farmingyard/caffe-mobilenet"
"yonghenglh6/DepthwiseConvolution" -> "chuanqi305/MobileNetv2-SSDLite"
"yonghenglh6/DepthwiseConvolution" -> "farmingyard/ShuffleNet"
"yonghenglh6/DepthwiseConvolution" -> "chuanqi305/MobileNet-SSD"
"yonghenglh6/DepthwiseConvolution" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"yonghenglh6/DepthwiseConvolution" -> "soeaver/caffe-model"
"yonghenglh6/DepthwiseConvolution" -> "suzhenghang/MobileNetv2"
"yonghenglh6/DepthwiseConvolution" -> "yihui-he/channel-pruning" ["e"=1]
"yonghenglh6/DepthwiseConvolution" -> "xialuxi/arcface-caffe" ["e"=1]
"yonghenglh6/DepthwiseConvolution" -> "miaow1988/ShuffleNet_V2_pytorch_caffe"
"yonghenglh6/DepthwiseConvolution" -> "zuoqing1988/ZQCNN-v0.0" ["e"=1]
"yonghenglh6/DepthwiseConvolution" -> "luoyetx/mini-caffe" ["e"=1]
"yonghenglh6/DepthwiseConvolution" -> "dlunion/mtcnn" ["e"=1]
"yonghenglh6/DepthwiseConvolution" -> "ydwen/caffe-face" ["e"=1]
"zengarden/light_head_rcnn" -> "chenyilun95/tf-cpn" ["e"=1]
"zengarden/light_head_rcnn" -> "sfzhang15/RefineDet"
"zengarden/light_head_rcnn" -> "zhaoweicai/cascade-rcnn"
"zengarden/light_head_rcnn" -> "ruinmessi/RFBNet"
"zengarden/light_head_rcnn" -> "szq0214/DSOD"
"zengarden/light_head_rcnn" -> "terrychenism/Deformable-ConvNets"
"zengarden/light_head_rcnn" -> "bharatsingh430/soft-nms"
"zengarden/light_head_rcnn" -> "mahyarnajibi/SNIPER"
"zengarden/light_head_rcnn" -> "HiKapok/X-Detector"
"zengarden/light_head_rcnn" -> "Robert-JunWang/Pelee"
"zengarden/light_head_rcnn" -> "qijiezhao/M2Det"
"zengarden/light_head_rcnn" -> "msracver/Relation-Networks-for-Object-Detection"
"zengarden/light_head_rcnn" -> "msracver/Flow-Guided-Feature-Aggregation" ["e"=1]
"zengarden/light_head_rcnn" -> "TuSimple/simpledet"
"zengarden/light_head_rcnn" -> "TuSimple/mx-maskrcnn"
"yihui-he/KL-Loss" -> "yihui-he/softer-NMS"
"yihui-he/KL-Loss" -> "xingyizhou/ExtremeNet"
"yihui-he/KL-Loss" -> "vacancy/PreciseRoIPooling"
"yihui-he/KL-Loss" -> "OceanPang/Libra_R-CNN"
"yihui-he/KL-Loss" -> "Duankaiwen/CenterNet"
"yihui-he/KL-Loss" -> "zhangxiaosong18/FreeAnchor"
"yihui-he/KL-Loss" -> "princeton-vl/CornerNet"
"yihui-he/KL-Loss" -> "zhaoweicai/cascade-rcnn"
"yihui-he/KL-Loss" -> "KimSoybean/ScratchDet"
"yihui-he/KL-Loss" -> "ruinmessi/RFBNet"
"yihui-he/KL-Loss" -> "princeton-vl/CornerNet-Lite"
"yihui-he/KL-Loss" -> "tianzhi0549/FCOS"
"yihui-he/KL-Loss" -> "kemaloksuz/ObjectDetectionImbalance"
"yihui-he/KL-Loss" -> "libuyu/GHM_Detection"
"yihui-he/KL-Loss" -> "sfzhang15/ATSS"
"chenbinghui1/DSL" -> "Megvii-BaseDetection/DenseTeacher"
"chenbinghui1/DSL" -> "hikvision-research/SSOD"
"chenbinghui1/DSL" -> "HunterJ-Lin/ActiveTeacher"
"chenbinghui1/DSL" -> "ligang-cs/PseCo"
"conan7882/GoogLeNet-Inception" -> "PanJinquan/tensorflow_models_learning"
"acm5656/ssd_pytorch" -> "lzx1413/PytorchSSD"
"Andrew-Qibin/VisionPermutator" -> "zhoudaquan/Refiner_ViT"
"Andrew-Qibin/VisionPermutator" -> "ShoufaChen/CycleMLP"
"implus/mae_segmentation" -> "junchen14/LoMaR"
"implus/mae_segmentation" -> "hustvl/MIMDet"
"jacobkimmel/pytorch_modelsize" -> "Stonesjtu/pytorch_memlab"
"raoyongming/GFNet" -> "OliverRensu/Shunted-Transformer"
"raoyongming/GFNet" -> "pkumivision/FFC"
"raoyongming/GFNet" -> "NVlabs/AFNO-transformer" ["e"=1]
"raoyongming/GFNet" -> "raoyongming/DynamicViT"
"raoyongming/GFNet" -> "YehLi/ImageNetModel" ["e"=1]
"sail-sg/poolformer" -> "sail-sg/metaformer" ["e"=1]
"sail-sg/poolformer" -> "Sense-X/UniFormer" ["e"=1]
"sail-sg/poolformer" -> "facebookresearch/ConvNeXt"
"sail-sg/poolformer" -> "microsoft/SimMIM"
"sail-sg/poolformer" -> "SHI-Labs/Neighborhood-Attention-Transformer" ["e"=1]
"sail-sg/poolformer" -> "whai362/PVT"
"sail-sg/poolformer" -> "facebookresearch/Mask2Former"
"sail-sg/poolformer" -> "Visual-Attention-Network/VAN-Classification" ["e"=1]
"sail-sg/poolformer" -> "pengzhiliang/MAE-pytorch"
"sail-sg/poolformer" -> "LeapLabTHU/DAT"
"sail-sg/poolformer" -> "yitu-opensource/T2T-ViT"
"sail-sg/poolformer" -> "facebookresearch/deit"
"sail-sg/poolformer" -> "ShoufaChen/DiffusionDet" ["e"=1]
"sail-sg/poolformer" -> "facebookresearch/MaskFormer"
"sail-sg/poolformer" -> "ShoufaChen/CycleMLP"
"svip-lab/AS-MLP" -> "ShoufaChen/CycleMLP"
"DWCTOD/ECCV2022-Papers-with-Code-Demo" -> "DWCTOD/CVPR2022-Papers-with-Code-Demo"
"DWCTOD/ECCV2022-Papers-with-Code-Demo" -> "extreme-assistant/ECCV2022-Paper-Code-Interpretation"
"DWCTOD/ECCV2022-Papers-with-Code-Demo" -> "amusi/ECCV2022-Papers-with-Code"
"DWCTOD/ECCV2022-Papers-with-Code-Demo" -> "52CV/ECCV-2022-Papers"
"tensorflow/embedding-projector-standalone" -> "tensorflow/tensorboard-plugin-example"
"tensorflow/embedding-projector-standalone" -> "cnzeki/embedding-projector"
"huaze555/windows-caffe-faster-rcnn" -> "D-X-Y/caffe-faster-rcnn"
"PaddlePaddle/FluidDoc" -> "PaddlePaddle/benchmark"
"PaddlePaddle/FluidDoc" -> "PaddlePaddle/Fleet"
"ttanzhiqiang/onnx_tensorrt_project" -> "linghu8812/tensorrt_inference"
"ttanzhiqiang/onnx_tensorrt_project" -> "tjuskyzhang/Scaled-YOLOv4-TensorRT"
"MrGemy95/Tensorflow-Project-Template" -> "victoresque/pytorch-template"
"MrGemy95/Tensorflow-Project-Template" -> "Ahmkel/Keras-Project-Template"
"MrGemy95/Tensorflow-Project-Template" -> "jtoy/awesome-tensorflow" ["e"=1]
"MrGemy95/Tensorflow-Project-Template" -> "vahidk/EffectiveTensorflow" ["e"=1]
"MrGemy95/Tensorflow-Project-Template" -> "SpikeKing/DL-Project-Template"
"MrGemy95/Tensorflow-Project-Template" -> "moemen95/Pytorch-Project-Template"
"MrGemy95/Tensorflow-Project-Template" -> "chiphuyen/stanford-tensorflow-tutorials" ["e"=1]
"MrGemy95/Tensorflow-Project-Template" -> "PaddlePaddle/VisualDL"
"MrGemy95/Tensorflow-Project-Template" -> "hwalsuklee/tensorflow-generative-model-collections" ["e"=1]
"MrGemy95/Tensorflow-Project-Template" -> "AppliedDataSciencePartners/DeepReinforcementLearning" ["e"=1]
"MrGemy95/Tensorflow-Project-Template" -> "tensorflow/minigo" ["e"=1]
"MrGemy95/Tensorflow-Project-Template" -> "taki0112/Tensorflow-Cookbook" ["e"=1]
"MrGemy95/Tensorflow-Project-Template" -> "Sarasra/models" ["e"=1]
"MrGemy95/Tensorflow-Project-Template" -> "Microsoft/MMdnn"
"MrGemy95/Tensorflow-Project-Template" -> "sksq96/pytorch-summary"
"YihangLou/fast-rcnn-train-another-dataset" -> "YihangLou/FasterRCNN-Encapsulation-Cplusplus"
"YihangLou/fast-rcnn-train-another-dataset" -> "Liu-Yicheng/Fast-RCNN" ["e"=1]
"abhi2610/ohem" -> "daijifeng001/R-FCN"
"abhi2610/ohem" -> "sanghoon/pva-faster-rcnn"
"abhi2610/ohem" -> "zhaoweicai/mscnn"
"abhi2610/ohem" -> "Orpine/py-R-FCN"
"abhi2610/ohem" -> "bharatsingh430/soft-nms"
"abhi2610/ohem" -> "xiaolonw/adversarial-frcnn"
"abhi2610/ohem" -> "sfzhang15/RefineDet"
"abhi2610/ohem" -> "szq0214/DSOD"
"abhi2610/ohem" -> "YuwenXiong/py-R-FCN"
"abhi2610/ohem" -> "xingwangsfu/caffe-yolo"
"abhi2610/ohem" -> "zhangliliang/RPN_BF" ["e"=1]
"abhi2610/ohem" -> "ruinmessi/RFBNet"
"abhi2610/ohem" -> "daijifeng001/caffe-rfcn"
"abhi2610/ohem" -> "zhaoweicai/cascade-rcnn"
"abhi2610/ohem" -> "taokong/RON"
"liuruiyang98/Jittor-MLP" -> "liuruiyang98/Jittor-summary"
"liuruiyang98/Jittor-MLP" -> "svip-lab/AS-MLP"
"sjinzh/awesome-yolo-object-detection" -> "iscyy/yoloair"
"sjinzh/awesome-yolo-object-detection" -> "iloveai8086/YOLOC"
"sjinzh/awesome-yolo-object-detection" -> "Linaom1214/TensorRT-For-YOLO-Series"
"sjinzh/awesome-yolo-object-detection" -> "jizhishutong/YOLOU"
"sjinzh/awesome-yolo-object-detection" -> "Bobo-y/flexible-yolov5" ["e"=1]
"sjinzh/awesome-yolo-object-detection" -> "triple-Mu/YOLOv8-TensorRT"
"sjinzh/awesome-yolo-object-detection" -> "Gumpest/YOLOv5-Multibackbone-Compression" ["e"=1]
"sjinzh/awesome-yolo-object-detection" -> "open-mmlab/mmyolo"
"sjinzh/awesome-yolo-object-detection" -> "Syencil/mobile-yolov5-pruning-distillation" ["e"=1]
"sjinzh/awesome-yolo-object-detection" -> "NVIDIA-AI-IOT/yolo_deepstream"
"sjinzh/awesome-yolo-object-detection" -> "ZJU-lishuang/yolov5_prune" ["e"=1]
"sjinzh/awesome-yolo-object-detection" -> "WangQvQ/Yolov5_Magic"
"opendatacam/opendatacam" -> "NVIDIA-AI-IOT/deepstream_python_apps" ["e"=1]
"opendatacam/opendatacam" -> "LeonLok/Multi-Camera-Live-Object-Tracking" ["e"=1]
"opendatacam/opendatacam" -> "marcoslucianops/DeepStream-Yolo" ["e"=1]
"opendatacam/opendatacam" -> "ceccocats/tkDNN"
"opendatacam/opendatacam" -> "opendatacam/node-moving-things-tracker"
"opendatacam/opendatacam" -> "Azure-Samples/NVIDIA-Deepstream-Azure-IoT-Edge-on-a-NVIDIA-Jetson-Nano" ["e"=1]
"opendatacam/opendatacam" -> "jkjung-avt/tensorrt_demos"
"opendatacam/opendatacam" -> "rbonghi/jetson_stats" ["e"=1]
"opendatacam/opendatacam" -> "dusty-nv/jetson-inference" ["e"=1]
"opendatacam/opendatacam" -> "theAIGuysCode/yolov4-deepsort" ["e"=1]
"opendatacam/opendatacam" -> "bochinski/iou-tracker" ["e"=1]
"opendatacam/opendatacam" -> "NVIDIA-AI-IOT/yolov4_deepstream"
"opendatacam/opendatacam" -> "dataplayer12/homesecurity" ["e"=1]
"opendatacam/opendatacam" -> "NVIDIA-AI-IOT/trt_pose" ["e"=1]
"opendatacam/opendatacam" -> "bdtinc/maskcam" ["e"=1]
"hujunxianligong/Tensorflow-CNN-Tutorial" -> "NanGC/CNN"
"wandb/examples" -> "wandb/client" ["e"=1]
"wandb/examples" -> "wandb/awesome-dl-projects"
"wandb/examples" -> "PyTorchLightning/deep-learning-project-template"
"wandb/examples" -> "wandb/edu"
"wandb/examples" -> "wandb/wandb" ["e"=1]
"wandb/examples" -> "huggingface/notebooks" ["e"=1]
"wandb/examples" -> "jungwoo-ha/WeeklyArxivTalk" ["e"=1]
"wandb/examples" -> "PyTorchLightning/lightning-flash"
"wandb/examples" -> "huggingface/accelerate" ["e"=1]
"wandb/examples" -> "subinium/Misc-Cheatsheet" ["e"=1]
"wandb/examples" -> "e3nn/e3nn" ["e"=1]
"wandb/examples" -> "google/objax" ["e"=1]
"wandb/examples" -> "n2cholas/awesome-jax" ["e"=1]
"wandb/examples" -> "jettify/pytorch-optimizer"
"wandb/examples" -> "NielsRogge/Transformers-Tutorials" ["e"=1]
"yihui-he/resnet-imagenet-caffe" -> "HolmesShuan/ResNet-18-Caffemodel-on-ImageNet"
"yihui-he/resnet-imagenet-caffe" -> "yihui-he/resnet-cifar10-caffe"
"yihui-he/resnet-imagenet-caffe" -> "yihui-he/Xception-caffe"
"zhanghang1989/detectron2-ResNeSt" -> "joe-siyuan-qiao/DetectoRS"
"zhanghang1989/detectron2-ResNeSt" -> "zhanghang1989/ResNeSt"
"zhanghang1989/detectron2-ResNeSt" -> "Sense-X/TSD"
"zhanghang1989/detectron2-ResNeSt" -> "poodarchu/DETR.detectron2"
"zhanghang1989/detectron2-ResNeSt" -> "youngwanLEE/CenterMask"
"zhanghang1989/detectron2-ResNeSt" -> "GothicAi/Instaboost"
"facebookarchive/fb.resnet.torch" -> "KaimingHe/resnet-1k-layers"
"facebookarchive/fb.resnet.torch" -> "weiaicunzai/pytorch-cifar100"
"PaddlePaddle/InterpretDL" -> "PaddlePaddle/TrustAI"
"PaddlePaddle/InterpretDL" -> "PaddlePaddle/benchmark"
"jinfagang/DCNv2_latest" -> "lbin/DCNv2"
"jinfagang/DCNv2_latest" -> "CharlesShang/DCNv2"
"jinfagang/DCNv2_latest" -> "MatthewHowe/DCNv2"
"jinfagang/DCNv2_latest" -> "CaoWGG/TensorRT-CenterNet"
"jinfagang/DCNv2_latest" -> "chengdazhi/Deformable-Convolution-V2-PyTorch"
"jinfagang/DCNv2_latest" -> "xingyizhou/CenterNet2"
"jinfagang/DCNv2_latest" -> "tteepe/DCNv2"
"jinfagang/DCNv2_latest" -> "xingyizhou/CenterTrack" ["e"=1]
"jinfagang/DCNv2_latest" -> "mrnabati/CenterFusion" ["e"=1]
"jinfagang/DCNv2_latest" -> "dlunion/tensorRTIntegrate"
"jinfagang/DCNv2_latest" -> "JonathonLuiten/TrackEval" ["e"=1]
"jinfagang/DCNv2_latest" -> "FateScript/CenterNet-better"
"jinfagang/DCNv2_latest" -> "CaptainEven/FairMOTVehicle" ["e"=1]
"jinfagang/DCNv2_latest" -> "JialianW/TraDeS" ["e"=1]
"jinfagang/DCNv2_latest" -> "tensorboy/centerpose" ["e"=1]
"NVIDIA-AI-IOT/yolo_deepstream" -> "shouxieai/infer"
"NVIDIA-AI-IOT/yolo_deepstream" -> "yhwang-hub/dl_model_deploy"
"NVIDIA-AI-IOT/yolo_deepstream" -> "shouxieai/nerf"
"NVIDIA-AI-IOT/yolo_deepstream" -> "shouxieai/algorithm-cpp"
"NVIDIA-AI-IOT/yolo_deepstream" -> "FeiYull/tensorrt-alpha"
"NVIDIA-AI-IOT/yolo_deepstream" -> "NVIDIA-AI-IOT/tensorrt_plugin_generator"
"NVIDIA-AI-IOT/yolo_deepstream" -> "shouxieai/learning-cuda-trt"
"NVIDIA-AI-IOT/yolo_deepstream" -> "shouxieai/makefile_tutorial_project"
"shouxieai/learning-cuda-trt" -> "shouxieai/tensorRT_Pro"
"shouxieai/learning-cuda-trt" -> "NVIDIA/trt-samples-for-hackathon-cn"
"shouxieai/learning-cuda-trt" -> "NVIDIA-AI-IOT/yolo_deepstream"
"shouxieai/learning-cuda-trt" -> "shouxieai/infer"
"shouxieai/learning-cuda-trt" -> "NVIDIA-AI-IOT/tensorrt_plugin_generator"
"shouxieai/learning-cuda-trt" -> "shouxieai/algorithm-cpp"
"shouxieai/learning-cuda-trt" -> "jizhishutong/YOLOU"
"shouxieai/learning-cuda-trt" -> "Rex-LK/tensorrt_learning"
"shouxieai/learning-cuda-trt" -> "yhwang-hub/dl_model_deploy"
"shouxieai/learning-cuda-trt" -> "openppl-public/ppq"
"shouxieai/learning-cuda-trt" -> "shouxieai/tensorRT_cpp"
"shouxieai/learning-cuda-trt" -> "LitLeo/TensorRT_Tutorial"
"shouxieai/learning-cuda-trt" -> "Guanbin-Huang/tensorRT_Pro_co-comments"
"shouxieai/learning-cuda-trt" -> "shouxieai/nerf"
"shouxieai/learning-cuda-trt" -> "iwatake2222/self-driving-ish_computer_vision_system"
"jwwangchn/NWD" -> "jwwangchn/AI-TOD"
"fyangneil/Clustered-Object-Detection-in-Aerial-Image" -> "Cli98/DMNet"
"Ranchentx/EFGRNet" -> "vaesl/LRF-Net"
"Ranchentx/EFGRNet" -> "wei-yuma/multitrident"
"GKalliatakis/Keras-VGG16-places365" -> "CSAILVision/places365"
"GKalliatakis/Keras-VGG16-places365" -> "GKalliatakis/Keras-Application-Zoo"
"GKalliatakis/Keras-VGG16-places365" -> "vpulab/Semantic-Aware-Scene-Recognition"
"asmith26/wide_resnets_keras" -> "titu1994/Wide-Residual-Networks"
"titu1994/Keras-NASNet" -> "johannesu/NASNet-keras"
"titu1994/Keras-NASNet" -> "yeephycho/nasnet-tensorflow"
"PaddlePaddle/PaddleSports" -> "FeixiangLu/PaddleSports"
"EdisonLeeeee/Awesome-Masked-Autoencoders" -> "ucasligang/awesome-MIM"
"EdisonLeeeee/Awesome-Masked-Autoencoders" -> "lxtGH/CAE"
"EdisonLeeeee/Awesome-Masked-Autoencoders" -> "implus/UM-MAE"
"EdisonLeeeee/Awesome-Masked-Autoencoders" -> "microsoft/SimMIM"
"EdisonLeeeee/Awesome-Masked-Autoencoders" -> "OliverRensu/TinyMIM" ["e"=1]
"EdisonLeeeee/Awesome-Masked-Autoencoders" -> "THUDM/GraphMAE" ["e"=1]
"EdisonLeeeee/Awesome-Masked-Autoencoders" -> "bytedance/ibot"
"EdisonLeeeee/Awesome-Masked-Autoencoders" -> "Westlake-AI/openmixup"
"EdisonLeeeee/Awesome-Masked-Autoencoders" -> "LightDXY/FT-CLIP" ["e"=1]
"EdisonLeeeee/Awesome-Masked-Autoencoders" -> "MCG-NJU/VideoMAE" ["e"=1]
"EdisonLeeeee/Awesome-Masked-Autoencoders" -> "AbrahamYabo/SdAE"
"EdisonLeeeee/Awesome-Masked-Autoencoders" -> "facebookresearch/mae"
"NVIDIA-AI-IOT/tensorrt_plugin_generator" -> "NVIDIA-AI-IOT/yolo_deepstream"
"NVIDIA-AI-IOT/tensorrt_plugin_generator" -> "shouxieai/nerf"
"NVIDIA-AI-IOT/tensorrt_plugin_generator" -> "shouxieai/learning-cuda-trt"
"thangvubk/Cascade-RPN" -> "zhangxiaosong18/FreeAnchor"
"thangvubk/Cascade-RPN" -> "jshilong/SEPC"
"thangvubk/Cascade-RPN" -> "OceanPang/Libra_R-CNN"
"thangvubk/Cascade-RPN" -> "taokong/FoveaBox"
"1zb/deformable-convolution-pytorch" -> "oeway/pytorch-deform-conv"
"1zb/deformable-convolution-pytorch" -> "ChunhuanLin/deform_conv_pytorch"
"1zb/deformable-convolution-pytorch" -> "chengdazhi/Deformable-Convolution-V2-PyTorch"
"1zb/deformable-convolution-pytorch" -> "isht7/pytorch-deeplab-resnet" ["e"=1]
"1zb/deformable-convolution-pytorch" -> "bharatsingh430/Deformable-ConvNets"
"1zb/deformable-convolution-pytorch" -> "msracver/Deformable-ConvNets"
"1zb/deformable-convolution-pytorch" -> "fxia22/stn.pytorch" ["e"=1]
"1zb/deformable-convolution-pytorch" -> "longcw/RoIAlign.pytorch"
"1zb/deformable-convolution-pytorch" -> "felixgwu/mask_rcnn_pytorch"
"1zb/deformable-convolution-pytorch" -> "lanpa/tensorboard-pytorch"
"1zb/deformable-convolution-pytorch" -> "vacancy/Synchronized-BatchNorm-PyTorch" ["e"=1]
"1zb/deformable-convolution-pytorch" -> "CharlesShang/DCNv2"
"1zb/deformable-convolution-pytorch" -> "PureDiors/pytorch_RFCN"
"1zb/deformable-convolution-pytorch" -> "kuangliu/torchcv"
"1zb/deformable-convolution-pytorch" -> "ShichenLiu/CondenseNet"
"awwong1/torchprof" -> "mit-han-lab/torchprofile" ["e"=1]
"awwong1/torchprof" -> "NVIDIA/PyProf"
"awwong1/torchprof" -> "Stonesjtu/pytorch_memlab"
"awwong1/torchprof" -> "zasdfgbnm/TorchSnooper"
"awwong1/torchprof" -> "facebookresearch/mobile-vision" ["e"=1]
"awwong1/torchprof" -> "Tramac/torchscope"
"uoip/SSD-variants" -> "chenyuntc/dsod.pytorch"
"uoip/SSD-variants" -> "lzx1413/PytorchSSD"
"uoip/SSD-variants" -> "szq0214/DSOD"
"uoip/SSD-variants" -> "ShuangXieIrene/ssds.pytorch"
"uoip/SSD-variants" -> "luuuyi/RefineDet.PyTorch"
"uoip/SSD-variants" -> "jiangzhengkai/Video-Detection" ["e"=1]
"uoip/SSD-variants" -> "kuangliu/torchcv"
"uoip/SSD-variants" -> "qijiezhao/pytorch-ssd"
"uoip/SSD-variants" -> "yqyao/SSD_Pytorch"
"xxxnell/how-do-vits-work" -> "Sense-X/UniFormer" ["e"=1]
"xxxnell/how-do-vits-work" -> "facebookresearch/ToMe" ["e"=1]
"xxxnell/how-do-vits-work" -> "sail-sg/poolformer"
"xxxnell/how-do-vits-work" -> "DingXiaoH/RepLKNet-pytorch" ["e"=1]
"xxxnell/how-do-vits-work" -> "youweiliang/evit"
"xxxnell/how-do-vits-work" -> "hila-chefer/Transformer-Explainability"
"xxxnell/how-do-vits-work" -> "SHI-Labs/Neighborhood-Attention-Transformer" ["e"=1]
"xxxnell/how-do-vits-work" -> "facebookresearch/ConvNeXt"
"xxxnell/how-do-vits-work" -> "Alpha-VL/ConvMAE"
"xxxnell/how-do-vits-work" -> "xxxnell/spatial-smoothing"
"xxxnell/how-do-vits-work" -> "facebookresearch/ConvNeXt-V2" ["e"=1]
"xxxnell/how-do-vits-work" -> "facebookresearch/xcit"
"xxxnell/how-do-vits-work" -> "facebookresearch/Detic" ["e"=1]
"xxxnell/how-do-vits-work" -> "facebookresearch/vissl"
"xxxnell/how-do-vits-work" -> "microsoft/SimMIM"
"Sense-X/TSD" -> "jshilong/SEPC"
"Sense-X/TSD" -> "joe-siyuan-qiao/DetectoRS"
"Sense-X/TSD" -> "Megvii-BaseDetection/BorderDet"
"Sense-X/TSD" -> "JialeCao001/D2Det"
"Sense-X/TSD" -> "implus/GFocalV2"
"Sense-X/TSD" -> "tztztztztz/eql.detectron2" ["e"=1]
"Sense-X/TSD" -> "Megvii-BaseDetection/DeFCN"
"Sense-X/TSD" -> "zhanghang1989/detectron2-ResNeSt"
"Sense-X/TSD" -> "sfzhang15/ATSS"
"Sense-X/TSD" -> "KiveeDong/CentripetalNet"
"Sense-X/TSD" -> "kemaloksuz/ObjectDetectionImbalance"
"Sense-X/TSD" -> "implus/GFocal"
"Sense-X/TSD" -> "microsoft/RepPoints"
"Sense-X/TSD" -> "PeizeSun/SparseR-CNN"
"Sense-X/TSD" -> "thangvubk/Cascade-RPN"
"hyz-xmaster/VarifocalNet" -> "implus/GFocalV2"
"hyz-xmaster/VarifocalNet" -> "hyz-xmaster/swa_object_detection"
"hyz-xmaster/VarifocalNet" -> "Scalsol/RepPointsV2"
"hyz-xmaster/VarifocalNet" -> "Megvii-BaseDetection/DeFCN"
"hyz-xmaster/VarifocalNet" -> "fcjian/TOOD"
"hyz-xmaster/VarifocalNet" -> "megvii-model/YOLOF"
"hyz-xmaster/VarifocalNet" -> "Megvii-BaseDetection/BorderDet"
"hyz-xmaster/VarifocalNet" -> "PeizeSun/OneNet"
"hyz-xmaster/VarifocalNet" -> "implus/GFocal"
"hyz-xmaster/VarifocalNet" -> "kkhoot/PAA"
"hyz-xmaster/VarifocalNet" -> "ming71/DAL" ["e"=1]
"hyz-xmaster/VarifocalNet" -> "strongwolf/DW"
"hyz-xmaster/VarifocalNet" -> "Megvii-BaseDetection/OTA"
"hyz-xmaster/VarifocalNet" -> "kemaloksuz/RankSortLoss"
"hyz-xmaster/VarifocalNet" -> "sfzhang15/ATSS"
"strongwolf/DW" -> "lzh420202/FCOSR" ["e"=1]
"Keyird/DeepLearning-TensorFlow2" -> "calmisential/Basic_CNNs_TensorFlow2"
"hwalsuklee/tensorflow-mnist-cnn" -> "zonghua94/mnist"
"Byronnar/tensorflow-serving-yolov3" -> "YunYang1994/tensorflow-yolov3"
"Byronnar/tensorflow-serving-yolov3" -> "YunYang1994/TensorFlow2.0-Examples"
"Byronnar/tensorflow-serving-yolov3" -> "wizyoung/YOLOv3_TensorFlow"
"Byronnar/tensorflow-serving-yolov3" -> "SpikeKing/keras-yolo3-detection"
"Byronnar/tensorflow-serving-yolov3" -> "coldlarry/YOLOv3-complete-pruning" ["e"=1]
"Byronnar/tensorflow-serving-yolov3" -> "calmisential/YOLOv3_TensorFlow2" ["e"=1]
"Byronnar/tensorflow-serving-yolov3" -> "YunYang1994/cv-notebooks"
"Byronnar/tensorflow-serving-yolov3" -> "panguxiaoshen/tiny_yolov3"
"Byronnar/tensorflow-serving-yolov3" -> "tanluren/yolov3-channel-and-layer-pruning" ["e"=1]
"Byronnar/tensorflow-serving-yolov3" -> "DataXujing/YOLO-V3-Tensorflow" ["e"=1]
"Byronnar/tensorflow-serving-yolov3" -> "mystic123/tensorflow-yolo-v3"
"Byronnar/tensorflow-serving-yolov3" -> "rrddcc/YOLOv4_tensorflow" ["e"=1]
"Byronnar/tensorflow-serving-yolov3" -> "PengyiZhang/SlimYOLOv3" ["e"=1]
"Byronnar/tensorflow-serving-yolov3" -> "fsx950223/mobilenetv2-yolov3"
"openvinotoolkit/training_extensions" -> "openvinotoolkit/model_preparation_algorithm"
"openvinotoolkit/training_extensions" -> "openvinotoolkit/datumaro"
"openvinotoolkit/training_extensions" -> "openvinotoolkit/mmdetection"
"openvinotoolkit/training_extensions" -> "openvinotoolkit/nncf" ["e"=1]
"openvinotoolkit/training_extensions" -> "openvinotoolkit/open_model_zoo"
"openvinotoolkit/training_extensions" -> "openvinotoolkit/deep-object-reid"
"openvinotoolkit/training_extensions" -> "openvinotoolkit/model_server"
"openvinotoolkit/training_extensions" -> "openvinotoolkit/geti-sdk"
"cvdfoundation/open-images-dataset" -> "openimages/dataset"
"cvdfoundation/open-images-dataset" -> "cvdfoundation/google-landmark" ["e"=1]
"cvdfoundation/open-images-dataset" -> "EscVM/OIDv4_ToolKit"
"cvdfoundation/open-images-dataset" -> "Megvii-BaseDetection/cvpods"
"cvdfoundation/open-images-dataset" -> "Tencent/tencent-ml-images"
"cvdfoundation/open-images-dataset" -> "Duankaiwen/CenterNet"
"cvdfoundation/open-images-dataset" -> "Robert-JunWang/Pelee"
"jinfagang/keras_frcnn" -> "you359/Keras-FasterRCNN" ["e"=1]
"jinfagang/keras_frcnn" -> "yhenon/keras-frcnn"
"jinfagang/keras_frcnn" -> "kbardool/keras-frcnn" ["e"=1]
"jinfagang/keras_frcnn" -> "fizyr/keras-retinanet"
"jinfagang/keras_frcnn" -> "akshaylamba/FasterRCNN_KERAS"
"jinfagang/keras_frcnn" -> "pierluigiferrari/ssd_keras"
"jinfagang/keras_frcnn" -> "rykov8/ssd_keras"
"jinfagang/keras_frcnn" -> "broadinstitute/keras-rcnn" ["e"=1]
"jinfagang/keras_frcnn" -> "endernewton/tf-faster-rcnn"
"jinfagang/keras_frcnn" -> "smallcorgi/Faster-RCNN_TF"
"jinfagang/keras_frcnn" -> "RockyXu66/Faster_RCNN_for_Open_Images_Dataset_Keras" ["e"=1]
"jinfagang/keras_frcnn" -> "moyiliyi/keras-faster-rcnn"
"jinfagang/keras_frcnn" -> "aurora95/Keras-FCN" ["e"=1]
"jinfagang/keras_frcnn" -> "xiaochus/YOLOv3"
"jinfagang/keras_frcnn" -> "CharlesShang/TFFRCNN"
"jytime/Mask_RCNN_Pytorch" -> "Okery/PyTorch-Simple-MaskRCNN"
"jolibrain/deepdetect" -> "starimeL/PytorchConverter"
"jolibrain/deepdetect" -> "marvis/pytorch-caffe-darknet-convert"
"jolibrain/deepdetect" -> "eric612/MobileNet-YOLO"
"jolibrain/deepdetect" -> "zerollzeng/tiny-tensorrt"
"jolibrain/deepdetect" -> "hahnyuan/nn_tools"
"jolibrain/deepdetect" -> "hanson-young/nniefacelib" ["e"=1]
"jolibrain/deepdetect" -> "xxradon/PytorchToCaffe"
"jolibrain/deepdetect" -> "xialuxi/arcface-caffe" ["e"=1]
"jolibrain/deepdetect" -> "soeaver/caffe-model"
"jolibrain/deepdetect" -> "moli232777144/mtcnn_ncnn" ["e"=1]
"jolibrain/deepdetect" -> "shicai/MobileNet-Caffe"
"jolibrain/deepdetect" -> "longcw/pytorch2caffe"
"jolibrain/deepdetect" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"jolibrain/deepdetect" -> "ChenYingpeng/caffe-yolov3"
"jolibrain/deepdetect" -> "YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices" ["e"=1]
"moemen95/Pytorch-Project-Template" -> "victoresque/pytorch-template"
"moemen95/Pytorch-Project-Template" -> "L1aoXingyu/Deep-Learning-Project-Template" ["e"=1]
"moemen95/Pytorch-Project-Template" -> "FrancescoSaverioZuppichini/PyTorch-Deep-Learning-Template"
"moemen95/Pytorch-Project-Template" -> "lyakaap/pytorch-template"
"moemen95/Pytorch-Project-Template" -> "MrGemy95/Tensorflow-Project-Template"
"moemen95/Pytorch-Project-Template" -> "IgorSusmelj/pytorch-styleguide"
"moemen95/Pytorch-Project-Template" -> "bighuang624/AI-research-tools" ["e"=1]
"moemen95/Pytorch-Project-Template" -> "aisolab/nlp_implementation" ["e"=1]
"moemen95/Pytorch-Project-Template" -> "cs230-stanford/cs230-code-examples" ["e"=1]
"moemen95/Pytorch-Project-Template" -> "sksq96/pytorch-summary"
"moemen95/Pytorch-Project-Template" -> "ryul99/pytorch-project-template"
"moemen95/Pytorch-Project-Template" -> "vahidk/EffectivePyTorch"
"moemen95/Pytorch-Project-Template" -> "utkuozbulak/pytorch-custom-dataset-examples"
"PINTO0309/TensorflowLite-bin" -> "PINTO0309/Tensorflow-bin"
"kaka-lin/object-detection" -> "fsx950223/mobilenetv2-yolov3"
"onnx/keras-onnx" -> "onnx/tensorflow-onnx"
"onnx/keras-onnx" -> "onnx/onnxmltools"
"onnx/keras-onnx" -> "NVIDIA-AI-IOT/tf_to_trt_image_classification" ["e"=1]
"onnx/keras-onnx" -> "ZFTurbo/Keras-inference-time-optimizer"
"shouxieai/shouxie_RNN" -> "shouxieai/hard_decode_trt"
"shouxieai/shouxie_RNN" -> "Guanbin-Huang/tensorRT_Pro_comments" ["e"=1]
"KaimingHe/resnet-1k-layers" -> "facebook/fb.resnet.torch"
"KaimingHe/resnet-1k-layers" -> "yueatsprograms/Stochastic_Depth" ["e"=1]
"KaimingHe/resnet-1k-layers" -> "gcr/torch-residual-networks" ["e"=1]
"KaimingHe/resnet-1k-layers" -> "szagoruyko/wide-residual-networks"
"KaimingHe/resnet-1k-layers" -> "KaimingHe/deep-residual-networks"
"KaimingHe/resnet-1k-layers" -> "facebookresearch/ResNeXt"
"KaimingHe/resnet-1k-layers" -> "facebook/fb-caffe-exts" ["e"=1]
"KaimingHe/resnet-1k-layers" -> "daijifeng001/R-FCN"
"KaimingHe/resnet-1k-layers" -> "ry/tensorflow-resnet"
"KaimingHe/resnet-1k-layers" -> "DeepMark/deepmark" ["e"=1]
"KaimingHe/resnet-1k-layers" -> "soumith/convnet-benchmarks" ["e"=1]
"KaimingHe/resnet-1k-layers" -> "DeepScale/SqueezeNet"
"KaimingHe/resnet-1k-layers" -> "liuzhuang13/DenseNet"
"KaimingHe/resnet-1k-layers" -> "fyu/dilation" ["e"=1]
"KaimingHe/resnet-1k-layers" -> "torchnet/torchnet" ["e"=1]
"Guanbin-Huang/tensorRT_Pro_co-comments" -> "shouxieai/hard_decode_trt"
"kuhung/SSD_keras" -> "wikke/SSD_Keras"
"kuhung/SSD_keras" -> "rykov8/ssd_keras"
"Caojunxu/AC-FPN" -> "jshilong/SEPC"
"JDAI-CV/centerX" -> "FateScript/CenterNet-better"
"JDAI-CV/centerX" -> "lbin/CenterNet-better-plus"
"fidler-lab/polyrnn-pp-pytorch" -> "fidler-lab/polyrnn-pp"
"fidler-lab/polyrnn-pp-pytorch" -> "fidler-lab/curve-gcn"
"fidler-lab/polyrnn-pp-pytorch" -> "AlexMa011/pytorch-polygon-rnn"
"fidler-lab/polyrnn-pp-pytorch" -> "davidjesusacu/polyrnn-pp"
"fidler-lab/polyrnn-pp-pytorch" -> "scaelles/DEXTR-PyTorch"
"fidler-lab/polyrnn-pp-pytorch" -> "nv-tlabs/STEAL" ["e"=1]
"fidler-lab/polyrnn-pp-pytorch" -> "dmarcosg/DSAC"
"fidler-lab/polyrnn-pp-pytorch" -> "ShuLiu1993/PANet"
"fidler-lab/polyrnn-pp-pytorch" -> "abreheret/PixelAnnotationTool"
"fidler-lab/polyrnn-pp-pytorch" -> "zju3dv/snake"
"fidler-lab/polyrnn-pp-pytorch" -> "ronghanghu/seg_every_thing"
"fidler-lab/polyrnn-pp-pytorch" -> "ZhouYanzhao/PRM" ["e"=1]
"fidler-lab/polyrnn-pp-pytorch" -> "ignacio-rocco/detectorch"
"fidler-lab/polyrnn-pp-pytorch" -> "jfzhang95/DeepGrabCut-PyTorch" ["e"=1]
"PaddlePaddle/hapi" -> "PaddlePaddle/benchmark"
"shinya7y/UniverseNet" -> "VDIGPKU/CBNetV2"
"shinya7y/UniverseNet" -> "hyz-xmaster/VarifocalNet"
"shinya7y/UniverseNet" -> "amirassov/kaggle-global-wheat-detection" ["e"=1]
"shinya7y/UniverseNet" -> "implus/GFocalV2"
"shinya7y/UniverseNet" -> "ZFTurbo/Weighted-Boxes-Fusion"
"shinya7y/UniverseNet" -> "hyz-xmaster/swa_object_detection"
"shinya7y/UniverseNet" -> "shinya7y/WaymoCOCO"
"shinya7y/UniverseNet" -> "microsoft/DynamicHead"
"shinya7y/UniverseNet" -> "microsoft/SoftTeacher"
"shinya7y/UniverseNet" -> "Sense-X/TSD"
"shinya7y/UniverseNet" -> "ModelTC/EOD"
"tryolabs/norfair" -> "obss/sahi"
"tryolabs/norfair" -> "ifzhang/ByteTrack" ["e"=1]
"tryolabs/norfair" -> "voxel51/fiftyone"
"tryolabs/norfair" -> "GeekAlexis/FastMOT" ["e"=1]
"tryolabs/norfair" -> "WongKinYiu/yolor"
"tryolabs/norfair" -> "mikel-brostrom/Yolov5_StrongSORT_OSNet" ["e"=1]
"tryolabs/norfair" -> "abewley/sort" ["e"=1]
"tryolabs/norfair" -> "ZFTurbo/Weighted-Boxes-Fusion"
"tryolabs/norfair" -> "wmuron/motpy" ["e"=1]
"tryolabs/norfair" -> "microsoft/hummingbird" ["e"=1]
"tryolabs/norfair" -> "onelivesleft/PrettyErrors" ["e"=1]
"tryolabs/norfair" -> "bdtinc/maskcam" ["e"=1]
"tryolabs/norfair" -> "airctic/icevision" ["e"=1]
"tryolabs/norfair" -> "MasterBin-IIAU/Unicorn" ["e"=1]
"tryolabs/norfair" -> "dyhBUPT/StrongSORT" ["e"=1]
"CasiaFan/tensorflow_retinanet" -> "ailias/Focal-Loss-implement-on-Tensorflow"
"CasiaFan/tensorflow_retinanet" -> "v-shmyhlo/retinanet-tensorflow"
"PureDiors/pytorch_RFCN" -> "felixgwu/mask_rcnn_pytorch"
"PureDiors/pytorch_RFCN" -> "xdever/RFCN-tensorflow"
"PureDiors/pytorch_RFCN" -> "princewang1994/R-FCN.pytorch"
"PureDiors/pytorch_RFCN" -> "longcw/faster_rcnn_pytorch"
"PureDiors/pytorch_RFCN" -> "daijifeng001/caffe-rfcn"
"PureDiors/pytorch_RFCN" -> "YuwenXiong/py-R-FCN"
"PureDiors/pytorch_RFCN" -> "longcw/yolo2-pytorch"
"PureDiors/pytorch_RFCN" -> "guoruoqian/DetNet_pytorch"
"PureDiors/pytorch_RFCN" -> "bharatsingh430/Deformable-ConvNets"
"PureDiors/pytorch_RFCN" -> "ZijunDeng/pytorch-semantic-segmentation" ["e"=1]
"PureDiors/pytorch_RFCN" -> "Orpine/py-R-FCN"
"PureDiors/pytorch_RFCN" -> "kuangliu/pytorch-retinanet"
"linhezheng19/CAT" -> "yun-liu/TransCNN"
"lonePatient/lookahead_pytorch" -> "alphadl/lookahead.pytorch"
"lonePatient/lookahead_pytorch" -> "mgrankin/over9000"
"layerism/TensorRT-Inference-Server-Tutorial" -> "Syencil/tensorRT"
"layerism/TensorRT-Inference-Server-Tutorial" -> "isarsoft/yolov4-triton-tensorrt" ["e"=1]
"layerism/TensorRT-Inference-Server-Tutorial" -> "CaoWGG/TensorRT-CenterNet"
"layerism/TensorRT-Inference-Server-Tutorial" -> "grimoire/mmdetection-to-tensorrt"
"layerism/TensorRT-Inference-Server-Tutorial" -> "zerollzeng/tiny-tensorrt"
"layerism/TensorRT-Inference-Server-Tutorial" -> "dlunion/tensorRTIntegrate"
"layerism/TensorRT-Inference-Server-Tutorial" -> "RizhaoCai/PyTorch_ONNX_TensorRT"
"layerism/TensorRT-Inference-Server-Tutorial" -> "linghu8812/tensorrt_inference"
"layerism/TensorRT-Inference-Server-Tutorial" -> "LitLeo/TensorRT_Tutorial"
"layerism/TensorRT-Inference-Server-Tutorial" -> "wuba/dl_inference" ["e"=1]
"layerism/TensorRT-Inference-Server-Tutorial" -> "onnx/onnx-tensorrt"
"layerism/TensorRT-Inference-Server-Tutorial" -> "jizhishutong/YOLOU"
"layerism/TensorRT-Inference-Server-Tutorial" -> "grimoire/amirstan_plugin"
"layerism/TensorRT-Inference-Server-Tutorial" -> "rmccorm4/tensorrt-utils" ["e"=1]
"MG2033/MobileNet" -> "ildoonet/tf-mobilenet-v2"
"xdever/RFCN-tensorflow" -> "alfonsolink/tf_rfcn"
"xdever/RFCN-tensorflow" -> "PureDiors/pytorch_RFCN"
"xdever/RFCN-tensorflow" -> "YuwenXiong/py-R-FCN"
"xdever/RFCN-tensorflow" -> "daijifeng001/caffe-rfcn"
"xdever/RFCN-tensorflow" -> "daijifeng001/R-FCN"
"xdever/RFCN-tensorflow" -> "Orpine/py-R-FCN"
"xdever/RFCN-tensorflow" -> "xmyqsh/FPN"
"xdever/RFCN-tensorflow" -> "bharatsingh430/Deformable-ConvNets"
"xdever/RFCN-tensorflow" -> "szq0214/DSOD"
"xdever/RFCN-tensorflow" -> "parap1uie-s/Keras-RFCN"
"xdever/RFCN-tensorflow" -> "yangxue0827/FPN_Tensorflow" ["e"=1]
"xdever/RFCN-tensorflow" -> "princewang1994/R-FCN.pytorch"
"xdever/RFCN-tensorflow" -> "CharlesShang/TFFRCNN"
"microsoft/onnxjs" -> "microsoft/onnxjs-demo"
"microsoft/onnxjs" -> "elliotwaite/pytorch-to-javascript-with-onnx-js"
"microsoft/onnxjs" -> "torch-js/torch-js"
"microsoft/onnxjs" -> "microsoft/onnxruntime"
"microsoft/onnxjs" -> "chaosmail/tfjs-onnx"
"microsoft/onnxjs" -> "microsoft/onnxruntime-inference-examples"
"microsoft/onnxjs" -> "onnx/models"
"microsoft/onnxjs" -> "davidpfahler/react-ml-app"
"microsoft/onnxjs" -> "sonos/tract" ["e"=1]
"microsoft/onnxjs" -> "daquexian/onnx-simplifier"
"microsoft/onnxjs" -> "google/XNNPACK" ["e"=1]
"microsoft/onnxjs" -> "facebookresearch/ClassyVision"
"microsoft/onnxjs" -> "onnx/sklearn-onnx"
"microsoft/onnxjs" -> "microsoft/DMTK" ["e"=1]
"torch-js/torch-js" -> "elliotwaite/pytorch-to-javascript-with-onnx-js"
"artemmavrin/focal-loss" -> "umbertogriffo/focal-loss-keras"
"Tony607/Keras_Bag_of_Tricks" -> "SJTU-DL-lab/Bag_of_Tricks_CNN"
"JianGoForIt/YellowFin" -> "JianGoForIt/YellowFin_Pytorch"
"JianGoForIt/YellowFin" -> "hexiangnan/neural_factorization_machine" ["e"=1]
"JianGoForIt/YellowFin" -> "ChenglongChen/tensorflow-DeepFM" ["e"=1]
"JianGoForIt/YellowFin" -> "lambdaji/tf_repos" ["e"=1]
"JianGoForIt/YellowFin" -> "Johnson0722/CTR_Prediction" ["e"=1]
"datitran/raccoon_dataset" -> "datitran/object_detector_app"
"datitran/raccoon_dataset" -> "EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10"
"datitran/raccoon_dataset" -> "christopher5106/FastAnnotationTool"
"datitran/raccoon_dataset" -> "tzutalin/labelImg"
"datitran/raccoon_dataset" -> "pierluigiferrari/ssd_keras"
"datitran/raccoon_dataset" -> "fizyr/keras-retinanet"
"datitran/raccoon_dataset" -> "balancap/SSD-Tensorflow"
"datitran/raccoon_dataset" -> "priya-dwivedi/Deep-Learning"
"datitran/raccoon_dataset" -> "endernewton/tf-faster-rcnn"
"datitran/raccoon_dataset" -> "thtrieu/darkflow"
"datitran/raccoon_dataset" -> "victordibia/handtracking" ["e"=1]
"datitran/raccoon_dataset" -> "mystic123/tensorflow-yolo-v3"
"datitran/raccoon_dataset" -> "bourdakos1/Custom-Object-Detection" ["e"=1]
"miaow1988/ShuffleNet_V2_pytorch_caffe" -> "ericsun99/Shufflenet-v2-Pytorch"
"miaow1988/ShuffleNet_V2_pytorch_caffe" -> "farmingyard/ShuffleNet"
"miaow1988/ShuffleNet_V2_pytorch_caffe" -> "longcw/pytorch2caffe"
"miaow1988/ShuffleNet_V2_pytorch_caffe" -> "shicai/MobileNet-Caffe"
"miaow1988/ShuffleNet_V2_pytorch_caffe" -> "yonghenglh6/DepthwiseConvolution"
"miaow1988/ShuffleNet_V2_pytorch_caffe" -> "megvii-model/ShuffleNet-Series"
"miaow1988/ShuffleNet_V2_pytorch_caffe" -> "jaxony/ShuffleNet"
"miaow1988/ShuffleNet_V2_pytorch_caffe" -> "xxradon/PytorchToCaffe"
"miaow1988/ShuffleNet_V2_pytorch_caffe" -> "chuanqi305/MobileNetv2-SSDLite"
"miaow1988/ShuffleNet_V2_pytorch_caffe" -> "starimeL/PytorchConverter"
"miaow1988/ShuffleNet_V2_pytorch_caffe" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"miaow1988/ShuffleNet_V2_pytorch_caffe" -> "zengarden/light_head_rcnn"
"miaow1988/ShuffleNet_V2_pytorch_caffe" -> "TropComplique/shufflenet-v2-tensorflow"
"miaow1988/ShuffleNet_V2_pytorch_caffe" -> "xialuxi/arcface-caffe" ["e"=1]
"miaow1988/ShuffleNet_V2_pytorch_caffe" -> "homles11/IGCV3" ["e"=1]
"titu1994/Wide-Residual-Networks" -> "asmith26/wide_resnets_keras"
"yaysummeriscoming/DALI_pytorch_demo" -> "tanglang96/DataLoaders_DALI"
"floydhub/dl-setup" -> "floydhub/dl-docker"
"marvis/pytorch-yolo3" -> "marvis/pytorch-yolo2"
"marvis/pytorch-yolo3" -> "andy-yun/pytorch-0.4-yolov3"
"marvis/pytorch-yolo3" -> "longcw/yolo2-pytorch"
"marvis/pytorch-yolo3" -> "umich-vl/CornerNet"
"marvis/pytorch-yolo3" -> "lzx1413/PytorchSSD"
"marvis/pytorch-yolo3" -> "ignacio-rocco/detectorch"
"marvis/pytorch-yolo3" -> "ShuangXieIrene/ssds.pytorch"
"marvis/pytorch-yolo3" -> "BobLiu20/YOLOv3_PyTorch"
"marvis/pytorch-yolo3" -> "ayooshkathuria/pytorch-yolo-v3"
"marvis/pytorch-yolo3" -> "ruiminshen/yolo2-pytorch"
"marvis/pytorch-yolo3" -> "ruinmessi/RFBNet"
"marvis/pytorch-yolo3" -> "bendidi/Tracking-with-darkflow" ["e"=1]
"marvis/pytorch-yolo3" -> "soeaver/Pytorch_Mask_RCNN"
"marvis/pytorch-yolo3" -> "miaow1988/ShuffleNet_V2_pytorch_caffe"
"marvis/pytorch-yolo3" -> "marvis/pytorch-caffe-darknet-convert"
"peisuke/MomentumContrast.pytorch" -> "dddzg/MoCo"
"peisuke/MomentumContrast.pytorch" -> "ssp573/Contrastive-Predictive-Coding"
"mangye16/Unsupervised_Embedding_Learning" -> "zhirongw/lemniscate.pytorch"
"Yonv1943/Unsupervised-Segmentation" -> "kanezaki/pytorch-unsupervised-segmentation"
"Yonv1943/Unsupervised-Segmentation" -> "kanezaki/pytorch-unsupervised-segmentation-tip"
"Yonv1943/Unsupervised-Segmentation" -> "lwchen6309/unsupervised-image-segmentation-by-WNet-with-NormalizedCut"
"Yonv1943/Unsupervised-Segmentation" -> "mickaelChen/ReDO"
"bharatsingh430/py-R-FCN-multiGPU" -> "sciencefans/Focal-Loss"
"bharatsingh430/py-R-FCN-multiGPU" -> "bharatsingh430/Deformable-ConvNets"
"bharatsingh430/py-R-FCN-multiGPU" -> "soeaver/py-RFCN-priv" ["e"=1]
"bharatsingh430/py-R-FCN-multiGPU" -> "terrychenism/Deformable-ConvNets"
"bharatsingh430/py-R-FCN-multiGPU" -> "Eniac-Xie/faster-rcnn-resnet"
"bharatsingh430/py-R-FCN-multiGPU" -> "sciencefans/CaffeMex_v2" ["e"=1]
"bharatsingh430/py-R-FCN-multiGPU" -> "zimenglan-sysu-512/Focal-Loss"
"bharatsingh430/py-R-FCN-multiGPU" -> "jasjeetIM/Mask-RCNN"
"bharatsingh430/py-R-FCN-multiGPU" -> "D-X-Y/caffe-faster-rcnn"
"janghyuncho/PiCIE" -> "wvangansbeke/Unsupervised-Semantic-Segmentation"
"janghyuncho/PiCIE" -> "mhamilton723/STEGO"
"janghyuncho/PiCIE" -> "halbielee/EPS" ["e"=1]
"janghyuncho/PiCIE" -> "damo-cv/TransFGU"
"kanezaki/pytorch-unsupervised-segmentation-tip" -> "kanezaki/pytorch-unsupervised-segmentation"
"kanezaki/pytorch-unsupervised-segmentation-tip" -> "Yonv1943/Unsupervised-Segmentation"
"kanezaki/pytorch-unsupervised-segmentation-tip" -> "wvangansbeke/Unsupervised-Semantic-Segmentation"
"kanezaki/pytorch-unsupervised-segmentation-tip" -> "mickaelChen/ReDO"
"kanezaki/pytorch-unsupervised-segmentation-tip" -> "xu-ji/IIC"
"shouxieai/tensorRT_cpp" -> "shouxieai/hard_decode_trt"
"shouxieai/tensorRT_cpp" -> "jizhishutong/YOLOU"
"shouxieai/tensorRT_cpp" -> "shouxieai/http_server_cpp"
"shouxieai/tensorRT_cpp" -> "shouxieai/infer"
"shouxieai/tensorRT_cpp" -> "NVIDIA-AI-IOT/yolo_deepstream"
"shouxieai/tensorRT_cpp" -> "shouxieai/bp-cpp"
"shouxieai/tensorRT_cpp" -> "dlunion/tensorRTIntegrate"
"shouxieai/tensorRT_cpp" -> "shouxieai/learning-cuda-trt"
"Icecream-blue-sky/Past-and-present-small-object-detection" -> "ChenhongyiYang/QueryDet-PyTorch"
"Icecream-blue-sky/Past-and-present-small-object-detection" -> "ispc-lab/SmallObjectDetectionList"
"Icecream-blue-sky/Past-and-present-small-object-detection" -> "ucas-vg/Effective-Fusion-Factor"
"Icecream-blue-sky/Past-and-present-small-object-detection" -> "kuanhungchen/awesome-tiny-object-detection"
"Icecream-blue-sky/Past-and-present-small-object-detection" -> "knhngchn/awesome-tiny-object-detection"
"Icecream-blue-sky/Past-and-present-small-object-detection" -> "cv516Buaa/tph-yolov5" ["e"=1]
"Icecream-blue-sky/Past-and-present-small-object-detection" -> "fcakyon/small-object-detection-benchmark"
"Icecream-blue-sky/Past-and-present-small-object-detection" -> "RuiZhang97/ISNet" ["e"=1]
"mmaaz60/EdgeNeXt" -> "hanoonaR/object-centric-ovd" ["e"=1]
"mmaaz60/EdgeNeXt" -> "mmaaz60/mvits_for_class_agnostic_od" ["e"=1]
"mmaaz60/EdgeNeXt" -> "Amshaker/SwiftFormer" ["e"=1]
"mmaaz60/EdgeNeXt" -> "snap-research/EfficientFormer"
"mmaaz60/EdgeNeXt" -> "muzairkhattak/ViFi-CLIP" ["e"=1]
"mmaaz60/EdgeNeXt" -> "Chenglin-Yang/LVT"
"mmaaz60/EdgeNeXt" -> "hkzhang91/ParC-Net"
"mmaaz60/EdgeNeXt" -> "muzairkhattak/multimodal-prompt-learning" ["e"=1]
"mmaaz60/EdgeNeXt" -> "chinhsuanwu/mobilevit-pytorch"
"mmaaz60/EdgeNeXt" -> "hustvl/TopFormer"
"mmaaz60/EdgeNeXt" -> "hunto/image_classification_sota"
"mmaaz60/EdgeNeXt" -> "Alibaba-MIIL/Solving_ImageNet"
"mmaaz60/EdgeNeXt" -> "hunto/LightViT"
"mmaaz60/EdgeNeXt" -> "dongbo811/AFFormer"
"mmaaz60/EdgeNeXt" -> "apple/ml-cvnets"
"labmlai/labml" -> "PyTorchLightning/lightning-flash"
"labmlai/labml" -> "labmlai/annotated_deep_learning_paper_implementations"
"labmlai/labml" -> "microsoft/torchscale" ["e"=1]
"labmlai/labml" -> "ashleve/lightning-hydra-template"
"labmlai/labml" -> "lightly-ai/lightly"
"labmlai/labml" -> "csinva/imodels" ["e"=1]
"labmlai/labml" -> "microsoft/FLAML" ["e"=1]
"labmlai/labml" -> "clementchadebec/benchmark_VAE" ["e"=1]
"labmlai/labml" -> "rentruewang/koila"
"labmlai/labml" -> "libffcv/ffcv"
"labmlai/labml" -> "karpathy/arxiv-sanity-lite" ["e"=1]
"labmlai/labml" -> "evidentlyai/evidently" ["e"=1]
"labmlai/labml" -> "PyTorchLightning/deep-learning-project-template"
"labmlai/labml" -> "webis-de/small-text" ["e"=1]
"ShuLiu1993/PANet" -> "zjhuang22/maskscoring_rcnn"
"ShuLiu1993/PANet" -> "roytseng-tw/Detectron.pytorch"
"ShuLiu1993/PANet" -> "tianzhi0549/FCOS"
"ShuLiu1993/PANet" -> "TuSimple/simpledet"
"ShuLiu1993/PANet" -> "princeton-vl/CornerNet"
"ShuLiu1993/PANet" -> "mahyarnajibi/SNIPER"
"ShuLiu1993/PANet" -> "qijiezhao/M2Det"
"ShuLiu1993/PANet" -> "facebookresearch/maskrcnn-benchmark"
"ShuLiu1993/PANet" -> "msracver/Relation-Networks-for-Object-Detection"
"ShuLiu1993/PANet" -> "uber-research/UPSNet" ["e"=1]
"ShuLiu1993/PANet" -> "sfzhang15/RefineDet"
"ShuLiu1993/PANet" -> "Duankaiwen/CenterNet"
"ShuLiu1993/PANet" -> "xieenze/PolarMask"
"ShuLiu1993/PANet" -> "zhaoweicai/cascade-rcnn"
"ShuLiu1993/PANet" -> "zhanghang1989/PyTorch-Encoding" ["e"=1]
"facebookincubator/submitit" -> "facebookresearch/fairscale" ["e"=1]
"facebookincubator/submitit" -> "patrick-kidger/torchtyping"
"facebookincubator/submitit" -> "webdataset/webdataset" ["e"=1]
"facebookincubator/submitit" -> "google/gin-config" ["e"=1]
"facebookincubator/submitit" -> "facebookresearch/hydra"
"facebookincubator/submitit" -> "libffcv/ffcv"
"facebookincubator/submitit" -> "facebookresearch/fvcore"
"facebookincubator/submitit" -> "omry/omegaconf"
"facebookincubator/submitit" -> "PySlurm/pyslurm" ["e"=1]
"facebookincubator/submitit" -> "facebookresearch/vissl"
"facebookincubator/submitit" -> "facebookresearch/nevergrad" ["e"=1]
"facebookincubator/submitit" -> "facebookresearch/higher" ["e"=1]
"facebookincubator/submitit" -> "PyTorchLightning/pytorch-lightning-bolts"
"facebookincubator/submitit" -> "xl0/lovely-tensors"
"facebookincubator/submitit" -> "Stonesjtu/pytorch_memlab"
"AndrewAtanov/simclr-pytorch" -> "leftthomas/SimCLR"
"AndrewAtanov/simclr-pytorch" -> "AidenDurrant/SimCLR-Pytorch"
"ZwwWayne/K-Net" -> "facebookresearch/MaskFormer"
"ZwwWayne/K-Net" -> "lxtGH/Video-K-Net" ["e"=1]
"ZwwWayne/K-Net" -> "facebookresearch/Mask2Former"
"ZwwWayne/K-Net" -> "jshilong/GroupRCNN"
"ZwwWayne/K-Net" -> "Tai-Wang/Depth-from-Motion" ["e"=1]
"ZwwWayne/K-Net" -> "zhiqi-li/Panoptic-SegFormer"
"ZwwWayne/K-Net" -> "tfzhou/ContrastiveSeg"
"ZwwWayne/K-Net" -> "jshilong/DDQ" ["e"=1]
"ZwwWayne/K-Net" -> "EMI-Group/FaPN" ["e"=1]
"ZwwWayne/K-Net" -> "open-mmlab/mim"
"ZwwWayne/K-Net" -> "czczup/ViT-Adapter" ["e"=1]
"ZwwWayne/K-Net" -> "hustvl/QueryInst"
"ZwwWayne/K-Net" -> "PeizeSun/SparseR-CNN"
"ZwwWayne/K-Net" -> "IDEACVR/MaskDINO" ["e"=1]
"ZwwWayne/K-Net" -> "PeizeSun/OneNet"
"FeiYull/tensorrt-alpha" -> "yhwang-hub/dl_model_deploy"
"FeiYull/tensorrt-alpha" -> "shouxieai/infer"
"FeiYull/tensorrt-alpha" -> "huangzongmou/yolov8-pytorch_quantization"
"hustvl/MSG-Transformer" -> "hustvl/NeuSample"
"hustvl/MSG-Transformer" -> "hustvl/Featurized-QueryRCNN"
"Stonesjtu/pytorch_memlab" -> "NVIDIA/PyProf"
"Stonesjtu/pytorch_memlab" -> "awwong1/torchprof"
"Stonesjtu/pytorch_memlab" -> "patrick-kidger/torchtyping"
"Stonesjtu/pytorch_memlab" -> "facebookresearch/fairscale" ["e"=1]
"Stonesjtu/pytorch_memlab" -> "jacobkimmel/pytorch_modelsize"
"Stonesjtu/pytorch_memlab" -> "TylerYep/torchinfo"
"Stonesjtu/pytorch_memlab" -> "facebookresearch/higher" ["e"=1]
"Stonesjtu/pytorch_memlab" -> "jettify/pytorch-optimizer"
"Stonesjtu/pytorch_memlab" -> "kakaobrain/torchgpipe" ["e"=1]
"Stonesjtu/pytorch_memlab" -> "bayesiains/nflows" ["e"=1]
"Stonesjtu/pytorch_memlab" -> "teddykoker/torchsort"
"Stonesjtu/pytorch_memlab" -> "rusty1s/pytorch_scatter" ["e"=1]
"Stonesjtu/pytorch_memlab" -> "pytorch/extension-cpp" ["e"=1]
"Stonesjtu/pytorch_memlab" -> "pytorch/kineto" ["e"=1]
"Stonesjtu/pytorch_memlab" -> "facebookincubator/submitit"
"Orpine/py-R-FCN" -> "daijifeng001/R-FCN"
"Orpine/py-R-FCN" -> "sanghoon/pva-faster-rcnn"
"Orpine/py-R-FCN" -> "daijifeng001/TA-FCN" ["e"=1]
"Orpine/py-R-FCN" -> "zhaoweicai/mscnn"
"Orpine/py-R-FCN" -> "daijifeng001/MNC" ["e"=1]
"Orpine/py-R-FCN" -> "precedenceguo/mx-rcnn" ["e"=1]
"Orpine/py-R-FCN" -> "abhi2610/ohem"
"Orpine/py-R-FCN" -> "daijifeng001/caffe-rfcn"
"Orpine/py-R-FCN" -> "terrychenism/ResNeXt"
"Orpine/py-R-FCN" -> "Russell91/ReInspect"
"Orpine/py-R-FCN" -> "craftGBD/craftGBD"
"Orpine/py-R-FCN" -> "soeaver/caffe-model"
"Orpine/py-R-FCN" -> "zhreshold/mxnet-ssd" ["e"=1]
"Orpine/py-R-FCN" -> "msracver/FCIS"
"Orpine/py-R-FCN" -> "szq0214/DSOD"
"facebookresearch/WSL-Images" -> "facebookresearch/semi-supervised-ImageNet1K-models"
"facebookresearch/WSL-Images" -> "facebookresearch/FixRes"
"facebookresearch/WSL-Images" -> "appian42/kaggle-rsna-intracranial-hemorrhage" ["e"=1]
"facebookresearch/WSL-Images" -> "facebookresearch/pycls"
"facebookresearch/WSL-Images" -> "joe-siyuan-qiao/WeightStandardization"
"facebookresearch/WSL-Images" -> "naver-ai/relabel_imagenet" ["e"=1]
"facebookresearch/WSL-Images" -> "facebookresearch/ClassyVision"
"facebookresearch/WSL-Images" -> "lxtGH/OctaveConv_pytorch" ["e"=1]
"lanpa/tensorboard-pytorch" -> "torrvision/crayon"
"lanpa/tensorboard-pytorch" -> "facebookresearch/visdom"
"lanpa/tensorboard-pytorch" -> "TeamHG-Memex/tensorboard_logger"
"lanpa/tensorboard-pytorch" -> "ncullen93/torchsample"
"lanpa/tensorboard-pytorch" -> "roytseng-tw/Detectron.pytorch"
"lanpa/tensorboard-pytorch" -> "longcw/faster_rcnn_pytorch"
"lanpa/tensorboard-pytorch" -> "dnouri/skorch" ["e"=1]
"lanpa/tensorboard-pytorch" -> "spro/practical-pytorch" ["e"=1]
"lanpa/tensorboard-pytorch" -> "longcw/yolo2-pytorch"
"lanpa/tensorboard-pytorch" -> "pytorch/tnt"
"lanpa/tensorboard-pytorch" -> "uber/pyro" ["e"=1]
"lanpa/tensorboard-pytorch" -> "ikostrikov/pytorch-a2c-ppo-acktr" ["e"=1]
"lanpa/tensorboard-pytorch" -> "salesforce/pytorch-qrnn" ["e"=1]
"lanpa/tensorboard-pytorch" -> "martinarjovsky/WassersteinGAN" ["e"=1]
"lanpa/tensorboard-pytorch" -> "ruotianluo/pytorch-faster-rcnn"
"ruotianluo/pytorch-resnet" -> "jcjohnson/pytorch-vgg"
"ruotianluo/pytorch-resnet" -> "ruotianluo/Faster-RCNN-Densecap-torch" ["e"=1]
"switchablenorms/Switchable-Normalization" -> "XingangPan/IBN-Net" ["e"=1]
"switchablenorms/Switchable-Normalization" -> "vacancy/Synchronized-BatchNorm-PyTorch" ["e"=1]
"switchablenorms/Switchable-Normalization" -> "kevin-ssy/FishNet"
"switchablenorms/Switchable-Normalization" -> "lxtGH/OctaveConv_pytorch" ["e"=1]
"switchablenorms/Switchable-Normalization" -> "miguelvr/dropblock" ["e"=1]
"switchablenorms/Switchable-Normalization" -> "oeway/pytorch-deform-conv"
"switchablenorms/Switchable-Normalization" -> "mapillary/inplace_abn" ["e"=1]
"switchablenorms/Switchable-Normalization" -> "switchablenorms/SwitchNorm_Detection"
"switchablenorms/Switchable-Normalization" -> "joe-siyuan-qiao/WeightStandardization"
"switchablenorms/Switchable-Normalization" -> "dstamoulis/single-path-nas" ["e"=1]
"switchablenorms/Switchable-Normalization" -> "libuyu/GHM_Detection"
"switchablenorms/Switchable-Normalization" -> "PkuRainBow/OCNet" ["e"=1]
"switchablenorms/Switchable-Normalization" -> "ShuLiu1993/PANet"
"switchablenorms/Switchable-Normalization" -> "adobe/antialiased-cnns"
"switchablenorms/Switchable-Normalization" -> "roytseng-tw/Detectron.pytorch"
"terrychenism/ResNeXt" -> "terrychenism/mx-rfcn"
"terrychenism/ResNeXt" -> "craftGBD/caffe-GBD"
"ModelTC/EOD" -> "hyz-xmaster/swa_object_detection"
"ModelTC/EOD" -> "ModelTC/MQBench" ["e"=1]
"pudae/tensorflow-densenet" -> "taki0112/Densenet-Tensorflow"
"pudae/tensorflow-densenet" -> "ikhlestov/vision_networks"
"pudae/tensorflow-densenet" -> "arashno/tensorflow_multigpu_imagenet"
"pudae/tensorflow-densenet" -> "YixuanLi/densenet-tensorflow"
"wvangansbeke/Self-Supervised-Learning-Overview" -> "dev-sungman/Awesome-Self-Supervised-Papers"
"wvangansbeke/Self-Supervised-Learning-Overview" -> "dthiagarajan/simclr_pytorch" ["e"=1]
"zzzxxxttt/pytorch_simple_CenterNet_45" -> "FateScript/CenterNet-better"
"zzzxxxttt/pytorch_simple_CenterNet_45" -> "ZeroE04/R-CenterNet" ["e"=1]
"zzzxxxttt/pytorch_simple_CenterNet_45" -> "yjh0410/CenterNet-Lite"
"zzzxxxttt/pytorch_simple_CenterNet_45" -> "lbin/CenterNet-better-plus"
"zzzxxxttt/pytorch_simple_CenterNet_45" -> "jinfagang/CenterNet_Pro_Max"
"zzzxxxttt/pytorch_simple_CenterNet_45" -> "bubbliiiing/centernet-pytorch" ["e"=1]
"zzzxxxttt/pytorch_simple_CenterNet_45" -> "CaoWGG/TensorRT-CenterNet"
"zzzxxxttt/pytorch_simple_CenterNet_45" -> "yjh0410/CenterNet-plus"
"zzzxxxttt/pytorch_simple_CenterNet_45" -> "bleakie/CenterMulti" ["e"=1]
"zzzxxxttt/pytorch_simple_CenterNet_45" -> "kimyoon-young/centerNet-deep-sort" ["e"=1]
"chinhsuanwu/coatnet-pytorch" -> "chinhsuanwu/mobilevit-pytorch"
"chinhsuanwu/coatnet-pytorch" -> "facebookresearch/convit"
"chinhsuanwu/coatnet-pytorch" -> "mmaaz60/EdgeNeXt"
"jinfagang/CenterNet_Pro_Max" -> "FateScript/CenterNet-better"
"jinfagang/CenterNet_Pro_Max" -> "bleakie/CenterMulti" ["e"=1]
"jinfagang/CenterNet_Pro_Max" -> "wlguan/Stronger-yolo-pytorch"
"jinfagang/CenterNet_Pro_Max" -> "lbin/CenterNet-better-plus"
"jinfagang/CenterNet_Pro_Max" -> "tensorboy/centerpose" ["e"=1]
"jinfagang/CenterNet_Pro_Max" -> "KiveeDong/CentripetalNet"
"jinfagang/CenterNet_Pro_Max" -> "ZJULearning/ttfnet"
"jinfagang/CenterNet_Pro_Max" -> "CaoWGG/TensorRT-CenterNet"
"jinfagang/CenterNet_Pro_Max" -> "ruinmessi/ASFF"
"jinfagang/CenterNet_Pro_Max" -> "ZeroE04/R-CenterNet" ["e"=1]
"jinfagang/CenterNet_Pro_Max" -> "CaoWGG/Mask-CenterNet"
"jinfagang/CenterNet_Pro_Max" -> "xggIoU/centernet_tensorflow_wilderface_voc" ["e"=1]
"onnx/onnxmltools" -> "onnx/sklearn-onnx"
"onnx/onnxmltools" -> "onnx/keras-onnx"
"onnx/onnxmltools" -> "onnx/tensorflow-onnx"
"onnx/onnxmltools" -> "Microsoft/onnxruntime" ["e"=1]
"onnx/onnxmltools" -> "onnx/tutorials"
"onnx/onnxmltools" -> "microsoft/onnxconverter-common"
"onnx/onnxmltools" -> "onnx/onnx-coreml" ["e"=1]
"onnx/onnxmltools" -> "onnx/onnx-tensorflow"
"onnx/onnxmltools" -> "microsoft/OLive"
"onnx/onnxmltools" -> "onnx/onnx-docker"
"onnx/onnxmltools" -> "microsoft/onnxruntime-training-examples"
"onnx/onnxmltools" -> "onnx/optimizer"
"onnx/onnxmltools" -> "onnx/models"
"onnx/onnxmltools" -> "scailable/sclblonnx"
"onnx/onnxmltools" -> "microsoft/onnxruntime-inference-examples"
"Labelbox/labelbox" -> "Labelbox/labelbox-python"
"Labelbox/labelbox" -> "bit-bots/imagetagger"
"Labelbox/labelbox" -> "l3p-cv/lost"
"yhcc/yolo2" -> "KOD-Chen/YOLOv2-Tensorflow"
"yhcc/yolo2" -> "shishichang/yolov2-tensorflow"
"yhcc/yolo2" -> "WojciechMormul/yolo2"
"lessw2020/mish" -> "lessw2020/Ranger-Mish-ImageWoof-5"
"VCBE123/AnchorFreeDetection" -> "OceanPang/Libra_R-CNN"
"open-mmlab/MMGEN-FaceStylor" -> "open-mmlab/mim-example"
"open-mmlab/MMGEN-FaceStylor" -> "open-mmlab/pre-commit-hooks"
"open-mmlab/MMGEN-FaceStylor" -> "open-mmlab/mim"
"open-mmlab/MMGEN-FaceStylor" -> "open-mmlab/pytorch_sphinx_theme"
"open-mmlab/MMGEN-FaceStylor" -> "open-mmlab/mmhuman3d" ["e"=1]
"open-mmlab/MMGEN-FaceStylor" -> "open-mmlab/labelbee-client"
"Santosh-Gupta/SpeedTorch" -> "NVIDIA/TRTorch"
"Santosh-Gupta/SpeedTorch" -> "tanglang96/DataLoaders_DALI"
"Santosh-Gupta/SpeedTorch" -> "arraiyopensource/kornia"
"Santosh-Gupta/SpeedTorch" -> "NVIDIA/runx" ["e"=1]
"Cli98/DMNet" -> "we1pingyu/DSHNet"
"Cli98/DMNet" -> "fyangneil/Clustered-Object-Detection-in-Aerial-Image"
"youngwanLEE/vovnet-detectron2" -> "youngwanLEE/centermask2"
"youngwanLEE/vovnet-detectron2" -> "youngwanLEE/CenterMask"
"youngwanLEE/vovnet-detectron2" -> "sxhxliang/detectron2_backbone"
"youngwanLEE/vovnet-detectron2" -> "stigma0617/VoVNet.pytorch"
"youngwanLEE/vovnet-detectron2" -> "youngwanLEE/VoV3D"
"youngwanLEE/vovnet-detectron2" -> "Sense-X/TSD"
"youngwanLEE/vovnet-detectron2" -> "implus/GFocal"
"youngwanLEE/vovnet-detectron2" -> "joe-siyuan-qiao/DetectoRS"
"youngwanLEE/vovnet-detectron2" -> "signatrix/efficientdet"
"KevinMuyaoGuo/yolov5s_for_satellite_imagery" -> "postor/DOTA-yolov3"
"KevinMuyaoGuo/yolov5s_for_satellite_imagery" -> "jwwangchn/AI-TOD"
"Randl/MobileNetV2-pytorch" -> "d-li14/mobilenetv2.pytorch"
"Randl/MobileNetV2-pytorch" -> "miraclewkf/MobileNetV2-PyTorch"
"Randl/MobileNetV2-pytorch" -> "tonylins/pytorch-mobilenet-v2"
"Randl/MobileNetV2-pytorch" -> "ericsun99/Shufflenet-v2-Pytorch"
"Randl/MobileNetV2-pytorch" -> "MG2033/MobileNet-V2"
"Randl/MobileNetV2-pytorch" -> "marvis/pytorch-mobilenet"
"Randl/MobileNetV2-pytorch" -> "Randl/ShuffleNetV2-pytorch"
"Randl/MobileNetV2-pytorch" -> "miaow1988/ShuffleNet_V2_pytorch_caffe"
"Randl/MobileNetV2-pytorch" -> "xiaolai-sqlai/mobilenetv3"
"guoruoqian/DetNet_pytorch" -> "guoruoqian/cascade-rcnn_Pytorch"
"guoruoqian/DetNet_pytorch" -> "guoruoqian/FPN_Pytorch"
"guoruoqian/DetNet_pytorch" -> "ruinmessi/RFBNet"
"guoruoqian/DetNet_pytorch" -> "lzx1413/PytorchSSD"
"guoruoqian/DetNet_pytorch" -> "jwyang/fpn.pytorch"
"guoruoqian/DetNet_pytorch" -> "zhaoweicai/cascade-rcnn"
"guoruoqian/DetNet_pytorch" -> "KimSoybean/ScratchDet"
"guoruoqian/DetNet_pytorch" -> "bailvwangzi/repulsion_loss_ssd" ["e"=1]
"guoruoqian/DetNet_pytorch" -> "OceanPang/Libra_R-CNN"
"guoruoqian/DetNet_pytorch" -> "szq0214/DSOD"
"guoruoqian/DetNet_pytorch" -> "xingyizhou/ExtremeNet"
"guoruoqian/DetNet_pytorch" -> "vacancy/PreciseRoIPooling"
"guoruoqian/DetNet_pytorch" -> "msracver/Relation-Networks-for-Object-Detection"
"guoruoqian/DetNet_pytorch" -> "zengarden/light_head_rcnn"
"guoruoqian/DetNet_pytorch" -> "qijiezhao/CFENet"
"starimeL/PytorchConverter" -> "longcw/pytorch2caffe"
"starimeL/PytorchConverter" -> "xxradon/PytorchToCaffe"
"starimeL/PytorchConverter" -> "inisis/brocolli"
"starimeL/PytorchConverter" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"starimeL/PytorchConverter" -> "hahnyuan/nn_tools"
"starimeL/PytorchConverter" -> "moli232777144/mtcnn_ncnn" ["e"=1]
"starimeL/PytorchConverter" -> "ElegantGod/ncnn" ["e"=1]
"starimeL/PytorchConverter" -> "MTlab/onnx2caffe"
"starimeL/PytorchConverter" -> "moli232777144/mobilefacenet-mxnet" ["e"=1]
"starimeL/PytorchConverter" -> "marvis/pytorch-caffe-darknet-convert"
"starimeL/PytorchConverter" -> "xialuxi/arcface-caffe" ["e"=1]
"starimeL/PytorchConverter" -> "yonghenglh6/DepthwiseConvolution"
"starimeL/PytorchConverter" -> "miaow1988/ShuffleNet_V2_pytorch_caffe"
"starimeL/PytorchConverter" -> "BUG1989/ncnn-benchmark" ["e"=1]
"starimeL/PytorchConverter" -> "dlunion/mtcnn" ["e"=1]
"D-X-Y/caffe-faster-rcnn" -> "huaze555/windows-caffe-faster-rcnn"
"D-X-Y/caffe-faster-rcnn" -> "YihangLou/FasterRCNN-Encapsulation-Cplusplus"
"D-X-Y/caffe-faster-rcnn" -> "zhanglaplace/Faster_rcnn_Cplusplus_vs2013"
"D-X-Y/caffe-faster-rcnn" -> "bharatsingh430/py-R-FCN-multiGPU"
"D-X-Y/caffe-faster-rcnn" -> "makefile/frcnn"
"D-X-Y/caffe-faster-rcnn" -> "D-X-Y/caffe-reid" ["e"=1]
"D-X-Y/caffe-faster-rcnn" -> "manutdzou/faster-rcnn-pure-c-plus-implement"
"D-X-Y/caffe-faster-rcnn" -> "D-X-Y/SAN" ["e"=1]
"google-research/fast-soft-sort" -> "teddykoker/torchsort"
"google-research/fast-soft-sort" -> "johnhw/differentiable_sorting"
"google-research/fast-soft-sort" -> "technicolor-research/sodeep"
"google-research/fast-soft-sort" -> "getkeops/keops" ["e"=1]
"JianGoForIt/YellowFin_Pytorch" -> "JianGoForIt/YellowFin"
"JianGoForIt/YellowFin_Pytorch" -> "szagoruyko/diracnets"
"JianGoForIt/YellowFin_Pytorch" -> "szagoruyko/pyinn" ["e"=1]
"JianGoForIt/YellowFin_Pytorch" -> "oval-group/logger"
"JianGoForIt/YellowFin_Pytorch" -> "ycszen/pytorch-ss" ["e"=1]
"kevinlin311tw/caffe-augmentation" -> "twtygqyy/caffe-augmentation"
"kevinlin311tw/caffe-augmentation" -> "ShaharKatz/Caffe-Data-Augmentation"
"kevinlin311tw/caffe-augmentation" -> "ChenglongChen/caffe-windows"
"kevinlin311tw/caffe-augmentation" -> "daerduoCarey/SpatialTransformerLayer"
"c0nn3r/RetinaNet" -> "kuangliu/pytorch-retinanet"
"c0nn3r/RetinaNet" -> "andreaazzini/retinanet.pytorch"
"c0nn3r/RetinaNet" -> "roytseng-tw/mask-rcnn.pytorch"
"c0nn3r/RetinaNet" -> "ignacio-rocco/detectorch"
"c0nn3r/RetinaNet" -> "kuangliu/torchcv"
"c0nn3r/RetinaNet" -> "veronikayurchuk/pretrained-models.pytorch"
"c0nn3r/RetinaNet" -> "felixgwu/mask_rcnn_pytorch"
"c0nn3r/RetinaNet" -> "PureDiors/pytorch_RFCN"
"heefe92/Relation_Networks-pytorch" -> "msracver/Relation-Networks-for-Object-Detection"
"princewang1994/R-FCN.pytorch" -> "princewang1994/RFCN_CoupleNet.pytorch"
"switchablenorms/SwitchNorm_Detection" -> "switchablenorms/SwitchNorm_Segmentation"
"Linaom1214/TensorRT-For-YOLO-Series" -> "triple-Mu/YOLOv8-TensorRT"
"Linaom1214/TensorRT-For-YOLO-Series" -> "jizhishutong/YOLOU"
"Linaom1214/TensorRT-For-YOLO-Series" -> "FeiYull/TensorRT-Alpha" ["e"=1]
"Linaom1214/TensorRT-For-YOLO-Series" -> "marcoslucianops/DeepStream-Yolo" ["e"=1]
"Linaom1214/TensorRT-For-YOLO-Series" -> "linghu8812/tensorrt_inference"
"Linaom1214/TensorRT-For-YOLO-Series" -> "RichardoMrMu/yolov5-deepsort-tensorrt" ["e"=1]
"Linaom1214/TensorRT-For-YOLO-Series" -> "ZJU-lishuang/yolov5_prune" ["e"=1]
"Linaom1214/TensorRT-For-YOLO-Series" -> "derronqi/yolov7-face" ["e"=1]
"Linaom1214/TensorRT-For-YOLO-Series" -> "midasklr/yolov5prune" ["e"=1]
"Linaom1214/TensorRT-For-YOLO-Series" -> "shouxieai/tensorRT_Pro"
"Linaom1214/TensorRT-For-YOLO-Series" -> "DataXujing/YOLOv8"
"Linaom1214/TensorRT-For-YOLO-Series" -> "dog-qiuqiu/FastestDet"
"Linaom1214/TensorRT-For-YOLO-Series" -> "sjinzh/awesome-yolo-object-detection"
"Linaom1214/TensorRT-For-YOLO-Series" -> "shouxieai/infer"
"Linaom1214/TensorRT-For-YOLO-Series" -> "zhiqwang/yolov5-rt-stack"
"SpikeKing/DL-Project-Template" -> "SpikeKing/triplet-loss-mnist" ["e"=1]
"SpikeKing/DL-Project-Template" -> "MrGemy95/Tensorflow-Project-Template"
"SpikeKing/DL-Project-Template" -> "lifeomic/sparkflow"
"SpikeKing/DL-Project-Template" -> "Ahmkel/Keras-Project-Template"
"Tencent/TPAT" -> "NVIDIA/trt-samples-for-hackathon-cn"
"Tencent/TPAT" -> "zerollzeng/tiny-tensorrt"
"Tencent/TPAT" -> "NVIDIA-AI-IOT/tensorrt_plugin_generator"
"Tencent/TPAT" -> "dingyuqing05/trt2022_wenet"
"Tencent/TPAT" -> "alibaba/BladeDISC" ["e"=1]
"Tencent/TPAT" -> "onnx/optimizer"
"Tencent/TPAT" -> "openppl-public/ppl.cv" ["e"=1]
"Tencent/TPAT" -> "LitLeo/TensorRT_Tutorial"
"Tencent/TPAT" -> "Tencent/Forward"
"Tencent/TPAT" -> "TrojanXu/onnxparser-trt-plugin-sample"
"Tencent/TPAT" -> "openppl-public/ppq"
"Tencent/TPAT" -> "NVIDIA/FasterTransformer" ["e"=1]
"Tencent/TPAT" -> "DerryHub/BEVFormer_tensorrt"
"Tencent/TPAT" -> "tensorflow/mlir-hlo" ["e"=1]
"Tencent/TPAT" -> "openppl-public/ppl.nn" ["e"=1]
"joe-siyuan-qiao/WeightStandardization" -> "umich-vl/CornerNet"
"joe-siyuan-qiao/WeightStandardization" -> "GothicAi/Instaboost"
"joe-siyuan-qiao/WeightStandardization" -> "dstamoulis/single-path-nas" ["e"=1]
"joe-siyuan-qiao/WeightStandardization" -> "vacancy/Synchronized-BatchNorm-PyTorch" ["e"=1]
"joe-siyuan-qiao/WeightStandardization" -> "lxtGH/OctaveConv_pytorch" ["e"=1]
"joe-siyuan-qiao/WeightStandardization" -> "xvjiarui/GCNet" ["e"=1]
"joe-siyuan-qiao/WeightStandardization" -> "mcahny/vps" ["e"=1]
"joe-siyuan-qiao/WeightStandardization" -> "JaminFong/DenseNAS" ["e"=1]
"joe-siyuan-qiao/WeightStandardization" -> "switchablenorms/Switchable-Normalization"
"joe-siyuan-qiao/WeightStandardization" -> "yuhuixu1993/PC-DARTS" ["e"=1]
"joe-siyuan-qiao/WeightStandardization" -> "vacancy/PreciseRoIPooling"
"joe-siyuan-qiao/WeightStandardization" -> "wuhuikai/FastFCN" ["e"=1]
"joe-siyuan-qiao/WeightStandardization" -> "miguelvr/dropblock" ["e"=1]
"joe-siyuan-qiao/WeightStandardization" -> "mapillary/inplace_abn" ["e"=1]
"joe-siyuan-qiao/WeightStandardization" -> "csrhddlam/pytorch-checkpoint" ["e"=1]
"easton-cau/SOTR" -> "hujiecpp/ISTR"
"kemaloksuz/aLRPLoss" -> "cancam/LRP"
"kemaloksuz/aLRPLoss" -> "kemaloksuz/LRP-Error"
"jwwangchn/AI-TOD" -> "Chasel-Tsui/mmdet-aitod"
"jwwangchn/AI-TOD" -> "ming71/HRSC2016_SOTA" ["e"=1]
"jwwangchn/AI-TOD" -> "jwwangchn/NWD"
"opconty/face_detection_in_realtime" -> "opconty/keras_std"
"scaelles/DEXTR-KerasTensorflow" -> "scaelles/DEXTR-PyTorch"
"dmmiller612/sparktorch" -> "lifeomic/sparkflow"
"facebookresearch/d2go" -> "facebookresearch/mobile-vision" ["e"=1]
"facebookresearch/d2go" -> "pytorch/android-demo-app"
"facebookresearch/d2go" -> "Shopify/upgrow" ["e"=1]
"facebookresearch/d2go" -> "Megvii-BaseDetection/DeFCN"
"facebookresearch/d2go" -> "Megvii-BaseDetection/cvpods"
"facebookresearch/d2go" -> "youngwanLEE/centermask2"
"facebookresearch/d2go" -> "facebookresearch/ClassyVision"
"facebookresearch/d2go" -> "youngwanLEE/vovnet-detectron2"
"facebookresearch/d2go" -> "sxhxliang/detectron2_backbone"
"facebookresearch/d2go" -> "connor-create/wsbtrades"
"facebookresearch/d2go" -> "xingyizhou/CenterNet2"
"facebookresearch/d2go" -> "aim-uofa/adet"
"facebookresearch/d2go" -> "dbolya/tide"
"facebookresearch/d2go" -> "megvii-model/YOLOF"
"facebookresearch/d2go" -> "facebookresearch/Detic" ["e"=1]
"implus/UM-MAE" -> "implus/mae_segmentation"
"implus/UM-MAE" -> "ucasligang/awesome-MIM"
"implus/UM-MAE" -> "Alpha-VL/ConvMAE"
"implus/UM-MAE" -> "Alpha-VL/FastConvMAE"
"tenglike1997/onnxruntime-projects" -> "xmba15/onnx_runtime_cpp"
"davidtvs/pytorch-lr-finder" -> "qubvel/ttach"
"davidtvs/pytorch-lr-finder" -> "trent-b/iterative-stratification"
"davidtvs/pytorch-lr-finder" -> "BloodAxe/pytorch-toolbelt"
"davidtvs/pytorch-lr-finder" -> "lessw2020/Ranger-Deep-Learning-Optimizer"
"davidtvs/pytorch-lr-finder" -> "ildoonet/pytorch-gradual-warmup-lr" ["e"=1]
"davidtvs/pytorch-lr-finder" -> "dkumazaw/onecyclelr"
"davidtvs/pytorch-lr-finder" -> "nachiket273/One_Cycle_Policy"
"davidtvs/pytorch-lr-finder" -> "jettify/pytorch-optimizer"
"davidtvs/pytorch-lr-finder" -> "ufoym/imbalanced-dataset-sampler" ["e"=1]
"davidtvs/pytorch-lr-finder" -> "LiyuanLucasLiu/RAdam"
"davidtvs/pytorch-lr-finder" -> "clovaai/CutMix-PyTorch" ["e"=1]
"davidtvs/pytorch-lr-finder" -> "sksq96/pytorch-summary"
"davidtvs/pytorch-lr-finder" -> "MisaOgura/flashtorch" ["e"=1]
"davidtvs/pytorch-lr-finder" -> "timgaripov/swa" ["e"=1]
"davidtvs/pytorch-lr-finder" -> "davidcpage/cifar10-fast" ["e"=1]
"qubvel/ttach" -> "BloodAxe/pytorch-toolbelt"
"qubvel/ttach" -> "ZFTurbo/Weighted-Boxes-Fusion"
"qubvel/ttach" -> "trent-b/iterative-stratification"
"qubvel/ttach" -> "qubvel/segmentation_models.pytorch"
"qubvel/ttach" -> "rwightman/efficientdet-pytorch"
"qubvel/ttach" -> "bermanmaxim/LovaszSoftmax" ["e"=1]
"qubvel/ttach" -> "andrewekhalel/edafa"
"qubvel/ttach" -> "ecs-vlc/FMix" ["e"=1]
"qubvel/ttach" -> "JunMa11/SegLoss" ["e"=1]
"qubvel/ttach" -> "catalyst-team/catalyst"
"qubvel/ttach" -> "sneddy/pneumothorax-segmentation" ["e"=1]
"qubvel/ttach" -> "clovaai/CutMix-PyTorch" ["e"=1]
"qubvel/ttach" -> "davda54/sam"
"qubvel/ttach" -> "davidtvs/pytorch-lr-finder"
"qubvel/ttach" -> "ufoym/imbalanced-dataset-sampler" ["e"=1]
"PyTorchLightning/metrics" -> "PyTorchLightning/lightning-flash"
"PyTorchLightning/metrics" -> "PyTorchLightning/lightning-transformers"
"PyTorchLightning/metrics" -> "PyTorchLightning/lightning-bolts"
"PyTorchLightning/metrics" -> "PyTorchLightning/deep-learning-project-template"
"PyTorchLightning/metrics" -> "PyTorchLightning/pytorch-lightning-bolts"
"PyTorchLightning/metrics" -> "patrick-kidger/torchtyping"
"PyTorchLightning/metrics" -> "omry/omegaconf"
"PyTorchLightning/metrics" -> "pytorch/data" ["e"=1]
"PyTorchLightning/metrics" -> "TylerYep/torchinfo"
"PyTorchLightning/metrics" -> "ashleve/lightning-hydra-template"
"PyTorchLightning/metrics" -> "teddykoker/torchsort"
"PyTorchLightning/metrics" -> "facebookresearch/functorch"
"PyTorchLightning/metrics" -> "facebookresearch/hydra"
"PyTorchLightning/metrics" -> "huggingface/accelerate" ["e"=1]
"PyTorchLightning/metrics" -> "facebookresearch/fairscale" ["e"=1]
"ppwwyyxx/tensorpack" -> "ethereon/caffe-tensorflow"
"ppwwyyxx/tensorpack" -> "ry/tensorflow-resnet"
"ppwwyyxx/tensorpack" -> "YixuanLi/densenet-tensorflow"
"ppwwyyxx/tensorpack" -> "liuzhuang13/DenseNet"
"ppwwyyxx/tensorpack" -> "CharlesShang/FastMaskRCNN"
"ppwwyyxx/tensorpack" -> "facebook/fb.resnet.torch"
"ppwwyyxx/tensorpack" -> "zsdonghao/tensorlayer" ["e"=1]
"ppwwyyxx/tensorpack" -> "KaimingHe/deep-residual-networks"
"ppwwyyxx/tensorpack" -> "reinforceio/tensorforce" ["e"=1]
"ppwwyyxx/tensorpack" -> "carpedm20/deep-rl-tensorflow" ["e"=1]
"ppwwyyxx/tensorpack" -> "lanpa/tensorboard-pytorch"
"ppwwyyxx/tensorpack" -> "devsisters/DQN-tensorflow" ["e"=1]
"ppwwyyxx/tensorpack" -> "TuSimple/mx-maskrcnn"
"ppwwyyxx/tensorpack" -> "soumith/convnet-benchmarks" ["e"=1]
"ppwwyyxx/tensorpack" -> "uber/horovod"
"szagoruyko/diracnets" -> "JianGoForIt/YellowFin_Pytorch"
"szagoruyko/diracnets" -> "szagoruyko/functional-zoo"
"szagoruyko/diracnets" -> "kimhc6028/relational-networks" ["e"=1]
"szagoruyko/diracnets" -> "facebookresearch/clevr-iep" ["e"=1]
"szagoruyko/diracnets" -> "ZhouYanzhao/ORN" ["e"=1]
"szagoruyko/diracnets" -> "felixgwu/mask_rcnn_pytorch"
"szagoruyko/diracnets" -> "rwightman/pytorch-dpn-pretrained" ["e"=1]
"szagoruyko/diracnets" -> "torrvision/crayon"
"szagoruyko/diracnets" -> "ars-ashuha/variational-dropout-sparsifies-dnn" ["e"=1]
"szagoruyko/diracnets" -> "locuslab/pytorch_fft"
"scanner-research/scanner" -> "scanner-research/esper"
"scanner-research/scanner" -> "scanner-research/scannertools"
"scanner-research/scanner" -> "scanner-research/rekall"
"scanner-research/scanner" -> "stanford-futuredata/noscope"
"Labelbox/Labelbox" -> "Microsoft/VoTT"
"Labelbox/Labelbox" -> "abreheret/PixelAnnotationTool"
"Labelbox/Labelbox" -> "opencv/cvat"
"Labelbox/Labelbox" -> "christopher5106/FastAnnotationTool"
"Labelbox/Labelbox" -> "NaturalIntelligence/imglab"
"Labelbox/Labelbox" -> "CSAILVision/LabelMeAnnotationTool"
"Labelbox/Labelbox" -> "Hitachi-Automotive-And-Industry-Lab/semantic-segmentation-editor" ["e"=1]
"Labelbox/Labelbox" -> "jsbroks/coco-annotator"
"Labelbox/Labelbox" -> "fidler-lab/polyrnn-pp-pytorch"
"Labelbox/Labelbox" -> "chakki-works/doccano" ["e"=1]
"Labelbox/Labelbox" -> "virajmavani/semi-auto-image-annotation-tool"
"Labelbox/Labelbox" -> "visipedia/annotation_tools" ["e"=1]
"Labelbox/Labelbox" -> "albu/albumentations"
"Labelbox/Labelbox" -> "Microsoft/human-pose-estimation.pytorch" ["e"=1]
"Labelbox/Labelbox" -> "wkentaro/labelme"
"leihe001/tensorflow-vgg" -> "leihe001/tensorflow-resnet"
"alphadl/lookahead.pytorch" -> "lonePatient/lookahead_pytorch"
"alphadl/lookahead.pytorch" -> "lessw2020/Ranger-Deep-Learning-Optimizer"
"alphadl/lookahead.pytorch" -> "LiyuanLucasLiu/RAdam"
"alphadl/lookahead.pytorch" -> "bojone/keras_lookahead" ["e"=1]
"alphadl/lookahead.pytorch" -> "michaelrzhang/lookahead"
"alphadl/lookahead.pytorch" -> "mgrankin/over9000"
"alphadl/lookahead.pytorch" -> "gasvn/Res2Net" ["e"=1]
"WXinlong/DenseCL" -> "zdaxie/PixPro"
"WXinlong/DenseCL" -> "tfzhou/ContrastiveSeg"
"WXinlong/DenseCL" -> "limbo0000/InstanceLoc" ["e"=1]
"WXinlong/DenseCL" -> "SwinTransformer/Transformer-SSL"
"WXinlong/DenseCL" -> "open-mmlab/OpenSelfSup"
"WXinlong/DenseCL" -> "xieenze/DetCo" ["e"=1]
"WXinlong/DenseCL" -> "microsoft/SimMIM"
"WXinlong/DenseCL" -> "lucidrains/pixel-level-contrastive-learning"
"WXinlong/DenseCL" -> "NVlabs/FreeSOLO"
"WXinlong/DenseCL" -> "bytedance/ibot"
"WXinlong/DenseCL" -> "facebookresearch/moco-v3"
"WXinlong/DenseCL" -> "hustvl/MIMDet"
"WXinlong/DenseCL" -> "facebookresearch/simsiam"
"WXinlong/DenseCL" -> "dddzg/up-detr" ["e"=1]
"WXinlong/DenseCL" -> "HobbitLong/PyContrast"
"facebookresearch/vicreg" -> "facebookresearch/VICRegL"
"facebookresearch/vicreg" -> "vturrisi/solo-learn"
"facebookresearch/vicreg" -> "facebookresearch/barlowtwins"
"facebookresearch/vicreg" -> "lucidrains/byol-pytorch"
"facebookresearch/vicreg" -> "ali-design/GenRep"
"hila-chefer/Transformer-MM-Explainability" -> "hila-chefer/Transformer-Explainability"
"hila-chefer/Transformer-MM-Explainability" -> "jacobgil/vit-explain"
"hila-chefer/Transformer-MM-Explainability" -> "salesforce/ALBEF" ["e"=1]
"hila-chefer/Transformer-MM-Explainability" -> "ashkamath/mdetr" ["e"=1]
"hila-chefer/Transformer-MM-Explainability" -> "luo3300612/Visualizer"
"hila-chefer/Transformer-MM-Explainability" -> "haofanwang/natural-language-joint-query-search" ["e"=1]
"hila-chefer/Transformer-MM-Explainability" -> "facebookresearch/SLIP" ["e"=1]
"hila-chefer/Transformer-MM-Explainability" -> "rmokady/CLIP_prefix_caption" ["e"=1]
"hila-chefer/Transformer-MM-Explainability" -> "samiraabnar/attention_flow"
"hila-chefer/Transformer-MM-Explainability" -> "KaiyangZhou/CoOp" ["e"=1]
"hila-chefer/Transformer-MM-Explainability" -> "microsoft/GLIP" ["e"=1]
"hila-chefer/Transformer-MM-Explainability" -> "gaopengcuhk/Tip-Adapter" ["e"=1]
"hila-chefer/Transformer-MM-Explainability" -> "hila-chefer/RobustViT"
"hila-chefer/Transformer-MM-Explainability" -> "dandelin/ViLT" ["e"=1]
"hila-chefer/Transformer-MM-Explainability" -> "raoyongming/DenseCLIP" ["e"=1]
"lkeab/BCNet" -> "hustvl/QueryInst"
"lkeab/BCNet" -> "Epiphqny/VisTR"
"lkeab/BCNet" -> "SysCV/pcan" ["e"=1]
"lkeab/BCNet" -> "SysCV/transfiner"
"lkeab/BCNet" -> "zhanggang001/RefineMask"
"lkeab/BCNet" -> "XiaohangZhan/deocclusion" ["e"=1]
"lkeab/BCNet" -> "tinyalpha/BPR"
"lkeab/BCNet" -> "WXinlong/SOLO"
"lkeab/BCNet" -> "hujiecpp/ISTR"
"lkeab/BCNet" -> "ZwwWayne/K-Net"
"lkeab/BCNet" -> "megvii-research/SOLQ"
"lkeab/BCNet" -> "conradry/copy-paste-aug"
"chrisranderson/beholder" -> "JianGoForIt/YellowFin_Pytorch"
"chrisranderson/beholder" -> "tensorflow/tensorboard-plugin-example"
"chrisranderson/beholder" -> "TeamHG-Memex/tensorboard_logger"
"chrisranderson/beholder" -> "bioinf-jku/SNNs" ["e"=1]
"chrisranderson/beholder" -> "keon/speed"
"xl0/lovely-tensors" -> "google/learned_optimization" ["e"=1]
"xl0/lovely-tensors" -> "xl0/lovely-numpy"
"xl0/lovely-tensors" -> "run-ai/genv"
"xl0/lovely-tensors" -> "patrick-kidger/torchtyping"
"xl0/lovely-tensors" -> "lucidrains/lion-pytorch" ["e"=1]
"xl0/lovely-tensors" -> "libffcv/ffcv"
"xl0/lovely-tensors" -> "mosaicml/composer"
"xl0/lovely-tensors" -> "pytorch/functorch" ["e"=1]
"xl0/lovely-tensors" -> "lucidrains/vector-quantize-pytorch" ["e"=1]
"xl0/lovely-tensors" -> "lucidrains/x-transformers" ["e"=1]
"xl0/lovely-tensors" -> "arogozhnikov/einops"
"xl0/lovely-tensors" -> "srush/Tensor-Puzzles" ["e"=1]
"xl0/lovely-tensors" -> "pnkraemer/tueplots" ["e"=1]
"xl0/lovely-tensors" -> "archinetai/surgeon-pytorch"
"xl0/lovely-tensors" -> "rentruewang/koila"
"yjh0410/CenterNet-Lite" -> "yjh0410/CenterNet-plus"
"open-mmlab/playground" -> "open-mmlab/mim"
"open-mmlab/playground" -> "open-mmlab/mmeval"
"open-mmlab/playground" -> "jshilong/GroupRCNN"
"open-mmlab/playground" -> "open-mmlab/mmengine"
"open-mmlab/playground" -> "open-mmlab/mmfewshot"
"open-mmlab/playground" -> "jshilong/FisherPruning"
"open-mmlab/playground" -> "Li-Qingyun/sam-mmrotate"
"open-mmlab/playground" -> "UX-Decoder/Segment-Everything-Everywhere-All-At-Once" ["e"=1]
"open-mmlab/playground" -> "VainF/Awesome-Anything" ["e"=1]
"open-mmlab/playground" -> "RockeyCoss/Prompt-Segment-Anything"
"open-mmlab/playground" -> "open-mmlab/mmyolo"
"open-mmlab/playground" -> "yeungchenwa/OCR-SAM" ["e"=1]
"open-mmlab/playground" -> "ttengwang/Caption-Anything" ["e"=1]
"open-mmlab/playground" -> "Megvii-BaseDetection/DenseTeacher"
"open-mmlab/playground" -> "open-mmlab/mmrazor"
"Westlake-AI/Awesome-Mixup" -> "Westlake-AI/MogaNet"
"cinastanbean/pytorch-onnx-tensorflow-pb" -> "leonidk/pytorch-tf"
"dog-qiuqiu/FastestDet" -> "dog-qiuqiu/Yolo-FastestV2"
"dog-qiuqiu/FastestDet" -> "dog-qiuqiu/Ultralight-SimplePose" ["e"=1]
"dog-qiuqiu/FastestDet" -> "dog-qiuqiu/Yolo-Fastest"
"dog-qiuqiu/FastestDet" -> "pnnx/pnnx" ["e"=1]
"dog-qiuqiu/FastestDet" -> "hpc203/FastestDet-opencv-dnn"
"dog-qiuqiu/FastestDet" -> "cmdbug/YOLOv5_NCNN" ["e"=1]
"dog-qiuqiu/FastestDet" -> "jizhishutong/YOLOU"
"dog-qiuqiu/FastestDet" -> "LSH9832/edgeyolo"
"dog-qiuqiu/FastestDet" -> "deepcam-cn/yolov5-face"
"dog-qiuqiu/FastestDet" -> "Linaom1214/TensorRT-For-YOLO-Series"
"dog-qiuqiu/FastestDet" -> "ppogg/YOLOv5-Lite" ["e"=1]
"dog-qiuqiu/FastestDet" -> "AnthonyF333/FaceLandmark_PFLD_UltraLight" ["e"=1]
"dog-qiuqiu/FastestDet" -> "DingXiaoH/RepOptimizers" ["e"=1]
"dog-qiuqiu/FastestDet" -> "RangiLyu/nanodet"
"dog-qiuqiu/FastestDet" -> "nihui/opencv-mobile" ["e"=1]
"iwatake2222/InferenceHelper" -> "iwatake2222/play_with_tflite"
"iwatake2222/InferenceHelper" -> "iwatake2222/play_with_tensorrt"
"iwatake2222/InferenceHelper" -> "iwatake2222/self-driving-ish_computer_vision_system"
"iwatake2222/InferenceHelper" -> "ValYouW/tflite-dist" ["e"=1]
"ming71/toolbox" -> "SJTU-Thinklab-Det/r3det-on-mmdetection" ["e"=1]
"ming71/toolbox" -> "ming71/mmdetection-annotated"
"ming71/toolbox" -> "ming71/CV_PaperDaily"
"ming71/toolbox" -> "SJTU-Thinklab-Det/DOTA-DOAI" ["e"=1]
"ming71/toolbox" -> "csuhan/ReDet" ["e"=1]
"ming71/toolbox" -> "csuhan/s2anet" ["e"=1]
"ming71/toolbox" -> "spytensor/prepare_detection_dataset"
"ming71/toolbox" -> "dingjiansw101/AerialDetection" ["e"=1]
"ming71/toolbox" -> "yangxue0827/RotationDetection" ["e"=1]
"ming71/toolbox" -> "ming71/DAL" ["e"=1]
"ming71/toolbox" -> "hhaAndroid/mmdetection-mini"
"ming71/toolbox" -> "ming71/rotate-yolov3" ["e"=1]
"ming71/toolbox" -> "ZeroE04/R-CenterNet" ["e"=1]
"ming71/toolbox" -> "hukaixuan19970627/YOLOv5_DOTA_OBB" ["e"=1]
"ming71/toolbox" -> "ming71/yolov3-polygon" ["e"=1]
"kuangliu/pytorch-fpn" -> "jwyang/fpn.pytorch"
"kuangliu/pytorch-fpn" -> "kuangliu/pytorch-retinanet"
"kuangliu/pytorch-fpn" -> "unsky/FPN"
"kuangliu/pytorch-fpn" -> "wuzheng-sjtu/FastFPN"
"kuangliu/pytorch-fpn" -> "xmyqsh/FPN"
"kuangliu/pytorch-fpn" -> "rwightman/pytorch-dpn-pretrained" ["e"=1]
"kuangliu/pytorch-fpn" -> "c0nn3r/RetinaNet"
"kuangliu/pytorch-fpn" -> "soeaver/Pytorch_Mask_RCNN"
"kuangliu/pytorch-fpn" -> "ruotianluo/pytorch-faster-rcnn"
"kuangliu/pytorch-fpn" -> "oeway/pytorch-deform-conv"
"kuangliu/pytorch-fpn" -> "guoruoqian/FPN_Pytorch"
"mkocabas/focal-loss-keras" -> "umbertogriffo/focal-loss-keras"
"mkocabas/focal-loss-keras" -> "maozezhong/focal_loss_multi_class"
"mkocabas/focal-loss-keras" -> "ailias/Focal-Loss-implement-on-Tensorflow"
"mkocabas/focal-loss-keras" -> "titu1994/keras-squeeze-excite-network" ["e"=1]
"mkocabas/focal-loss-keras" -> "unsky/focal-loss"
"mkocabas/focal-loss-keras" -> "Umi-you/FocalLoss"
"mkocabas/focal-loss-keras" -> "Atomwh/FocalLoss_Keras"
"facebookresearch/suncet" -> "facebookresearch/dino"
"facebookresearch/suncet" -> "facebookresearch/msn"
"facebookresearch/suncet" -> "facebookresearch/barlowtwins"
"facebookresearch/suncet" -> "facebookresearch/vissl"
"facebookresearch/suncet" -> "salesforce/CoMatch" ["e"=1]
"facebookresearch/suncet" -> "wvangansbeke/Unsupervised-Semantic-Segmentation"
"facebookresearch/suncet" -> "kekmodel/FixMatch-pytorch" ["e"=1]
"facebookresearch/suncet" -> "facebookresearch/moco-v3"
"facebookresearch/suncet" -> "sthalles/PyTorch-BYOL"
"facebookresearch/xcit" -> "facebookresearch/SLIP" ["e"=1]
"facebookresearch/xcit" -> "facebookresearch/convit"
"facebookresearch/xcit" -> "facebookresearch/deit"
"facebookresearch/xcit" -> "facebookresearch/LeViT"
"facebookresearch/xcit" -> "microsoft/CSWin-Transformer"
"facebookresearch/xcit" -> "facebookresearch/dino"
"facebookresearch/xcit" -> "microsoft/SimMIM"
"facebookresearch/xcit" -> "facebookresearch/moco-v3"
"facebookresearch/xcit" -> "facebookresearch/MaskFormer"
"facebookresearch/xcit" -> "yitu-opensource/T2T-ViT"
"facebookresearch/xcit" -> "facebookresearch/vissl"
"facebookresearch/xcit" -> "Meituan-AutoML/Twins"
"facebookresearch/xcit" -> "Alibaba-MIIL/ImageNet21K"
"facebookresearch/xcit" -> "microsoft/Cream"
"facebookresearch/xcit" -> "TheBobPony/getwindows11.tech"
"hjptriplebee/AlexNet_with_tensorflow" -> "jireh-father/tensorflow-alexnet"
"hjptriplebee/AlexNet_with_tensorflow" -> "dontfollowmeimcrazy/imagenet"
"hjptriplebee/AlexNet_with_tensorflow" -> "kratzert/finetune_alexnet_with_tensorflow"
"hjptriplebee/AlexNet_with_tensorflow" -> "stephen-v/tensorflow_alexnet_classify"
"lucidrains/res-mlp-pytorch" -> "rishikksh20/ResMLP-pytorch"
"facebookresearch/LeViT" -> "Meituan-AutoML/Twins"
"facebookresearch/LeViT" -> "snap-research/EfficientFormer"
"facebookresearch/LeViT" -> "wofmanaf/ResT"
"facebookresearch/LeViT" -> "mlpc-ucsd/CoaT"
"facebookresearch/LeViT" -> "facebookresearch/xcit"
"facebookresearch/LeViT" -> "naver-ai/pit" ["e"=1]
"facebookresearch/LeViT" -> "facebookresearch/convit"
"facebookresearch/LeViT" -> "zihangJiang/TokenLabeling"
"facebookresearch/LeViT" -> "microsoft/Cream"
"facebookresearch/LeViT" -> "ShoufaChen/CycleMLP"
"facebookresearch/LeViT" -> "mmaaz60/EdgeNeXt"
"facebookresearch/LeViT" -> "raoyongming/DynamicViT"
"facebookresearch/LeViT" -> "microsoft/CSWin-Transformer"
"facebookresearch/LeViT" -> "Meituan-AutoML/CPVT"
"facebookresearch/LeViT" -> "apple/ml-cvnets"
"micronDLA/MobileViTv3" -> "hkzhang91/ParC-Net"
"slwang9353/MobileFormer" -> "ACheun9/Pytorch-implementation-of-Mobile-Former"
"Yangzhangcst/Transformer-in-Computer-Vision" -> "DirtyHarryLYL/Transformer-in-Vision"
"Yangzhangcst/Transformer-in-Computer-Vision" -> "dk-liang/Awesome-Visual-Transformer"
"Yangzhangcst/Transformer-in-Computer-Vision" -> "cmhungsteve/Awesome-Transformer-Attention"
"Yangzhangcst/Transformer-in-Computer-Vision" -> "LeapLabTHU/DAT"
"Yangzhangcst/Transformer-in-Computer-Vision" -> "hila-chefer/Transformer-Explainability"
"Yangzhangcst/Transformer-in-Computer-Vision" -> "sail-sg/poolformer"
"Yangzhangcst/Transformer-in-Computer-Vision" -> "Meituan-AutoML/Twins"
"Yangzhangcst/Transformer-in-Computer-Vision" -> "microsoft/Focal-Transformer"
"Yangzhangcst/Transformer-in-Computer-Vision" -> "fahadshamshad/awesome-transformers-in-medical-imaging" ["e"=1]
"Yangzhangcst/Transformer-in-Computer-Vision" -> "microsoft/CSWin-Transformer"
"Yangzhangcst/Transformer-in-Computer-Vision" -> "wofmanaf/ResT"
"Yangzhangcst/Transformer-in-Computer-Vision" -> "microsoft/CvT"
"Yangzhangcst/Transformer-in-Computer-Vision" -> "microsoft/FocalNet" ["e"=1]
"Yangzhangcst/Transformer-in-Computer-Vision" -> "linhezheng19/CAT"
"Yangzhangcst/Transformer-in-Computer-Vision" -> "youngwanLEE/MPViT"
"waspinator/pycococreator" -> "jsbroks/imantics"
"waspinator/pycococreator" -> "youngwanLEE/CenterMask"
"waspinator/pycococreator" -> "zjhuang22/maskscoring_rcnn"
"waspinator/pycococreator" -> "xieenze/PolarMask"
"waspinator/pycococreator" -> "roytseng-tw/Detectron.pytorch"
"waspinator/pycococreator" -> "saic-vul/adaptis" ["e"=1]
"waspinator/pycococreator" -> "multimodallearning/pytorch-mask-rcnn"
"waspinator/pycococreator" -> "jsbroks/coco-annotator"
"waspinator/pycococreator" -> "ShuLiu1993/PANet"
"waspinator/pycococreator" -> "cocodataset/cocoapi"
"waspinator/pycococreator" -> "openseg-group/openseg.pytorch" ["e"=1]
"waspinator/pycococreator" -> "ming71/mmdetection-annotated"
"waspinator/pycococreator" -> "WXinlong/SOLO"
"waspinator/pycococreator" -> "GothicAi/Instaboost"
"waspinator/pycococreator" -> "facebookresearch/maskrcnn-benchmark"
"openvinotoolkit/openvino_tensorflow" -> "intel/ocm"
"HiKapok/SSD.TensorFlow" -> "ljanyst/ssd-tensorflow"
"HiKapok/SSD.TensorFlow" -> "balancap/SSD-Tensorflow"
"HiKapok/SSD.TensorFlow" -> "lslcode/SSD_for_Tensorflow" ["e"=1]
"HiKapok/SSD.TensorFlow" -> "HiKapok/RON_Tensorflow"
"HiKapok/SSD.TensorFlow" -> "pierluigiferrari/ssd_keras"
"HiKapok/SSD.TensorFlow" -> "LevinJ/SSD_tensorflow_VOC"
"HiKapok/SSD.TensorFlow" -> "yangxue0827/FPN_Tensorflow" ["e"=1]
"HiKapok/SSD.TensorFlow" -> "zengarden/light_head_rcnn"
"HiKapok/SSD.TensorFlow" -> "seann999/ssd_tensorflow"
"HiKapok/SSD.TensorFlow" -> "nnUyi/PeleeNet"
"HiKapok/SSD.TensorFlow" -> "ruinmessi/RFBNet"
"HiKapok/SSD.TensorFlow" -> "ailias/Focal-Loss-implement-on-Tensorflow"
"HiKapok/SSD.TensorFlow" -> "neuleaf/MobileNetV2"
"rishikksh20/MLP-Mixer-pytorch" -> "lucidrains/mlp-mixer-pytorch"
"jcjohnson/pytorch-vgg" -> "ruotianluo/pytorch-resnet"
"MG2033/MobileNet-V2" -> "Randl/MobileNetV2-pytorch"
"MG2033/MobileNet-V2" -> "tonylins/pytorch-mobilenet-v2"
"andy-yun/pytorch-0.4-yolov3" -> "marvis/pytorch-yolo3"
"andy-yun/pytorch-0.4-yolov3" -> "BobLiu20/YOLOv3_PyTorch"
"andy-yun/pytorch-0.4-yolov3" -> "marvis/pytorch-yolo2"
"andy-yun/pytorch-0.4-yolov3" -> "yqyao/YOLOv3_Pytorch"
"chengyangfu/retinamask" -> "ShuLiu1993/PANet"
"chengyangfu/retinamask" -> "kevin-ssy/FishNet"
"chengyangfu/retinamask" -> "zengarden/light_head_rcnn"
"ericsun99/Shufflenet-v2-Pytorch" -> "miaow1988/ShuffleNet_V2_pytorch_caffe"
"ericsun99/Shufflenet-v2-Pytorch" -> "jaxony/ShuffleNet"
"ericsun99/Shufflenet-v2-Pytorch" -> "Randl/ShuffleNetV2-pytorch"
"ericsun99/Shufflenet-v2-Pytorch" -> "tonylins/pytorch-mobilenet-v2"
"ericsun99/Shufflenet-v2-Pytorch" -> "Randl/MobileNetV2-pytorch"
"ericsun99/Shufflenet-v2-Pytorch" -> "ericsun99/ShuffleNet-1g8-Pytorch"
"ericsun99/Shufflenet-v2-Pytorch" -> "megvii-model/ShuffleNet-Series"
"ericsun99/Shufflenet-v2-Pytorch" -> "farmingyard/ShuffleNet"
"ericsun99/Shufflenet-v2-Pytorch" -> "TropComplique/shufflenet-v2-tensorflow"
"ericsun99/Shufflenet-v2-Pytorch" -> "xiaolai-sqlai/mobilenetv3"
"ericsun99/Shufflenet-v2-Pytorch" -> "sacmehta/ESPNetv2" ["e"=1]
"ericsun99/Shufflenet-v2-Pytorch" -> "ShuangXieIrene/ssds.pytorch"
"ericsun99/Shufflenet-v2-Pytorch" -> "zengarden/light_head_rcnn"
"ericsun99/Shufflenet-v2-Pytorch" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"wlguan/Stronger-yolo-pytorch" -> "jinfagang/CenterNet_Pro_Max"
"wlguan/Stronger-yolo-pytorch" -> "Stinky-Tofu/Stronger-yolo"
"wlguan/Stronger-yolo-pytorch" -> "ruinmessi/ASFF"
"wlguan/Stronger-yolo-pytorch" -> "Peterisfar/YOLOV3"
"yqyao/YOLOv3_Pytorch" -> "yqyao/DRFNet"
"xuyxu/Deep-Clustering-Network" -> "guenthereder/Deep-Clustering-Network"
"Archiconda/build-tools" -> "yqlbu/jetson-packages-family"
"nmilosev/pytorch-arm-builds" -> "sungjuGit/PyTorch-and-Vision-for-Raspberry-Pi-4B"
"nmilosev/pytorch-arm-builds" -> "isakbosman/pytorch_arm_builds"
"hustvl/QueryInst" -> "hustvl/TeViT" ["e"=1]
"hustvl/QueryInst" -> "Epiphqny/VisTR"
"hustvl/QueryInst" -> "hujiecpp/ISTR"
"hustvl/QueryInst" -> "hustvl/CrossVIS" ["e"=1]
"hustvl/QueryInst" -> "zhanggang001/RefineMask"
"hustvl/QueryInst" -> "wjf5203/VNext" ["e"=1]
"hustvl/QueryInst" -> "PeizeSun/SparseR-CNN"
"hustvl/QueryInst" -> "hustvl/MIMDet"
"hustvl/QueryInst" -> "hustvl/SparseInst"
"hustvl/QueryInst" -> "hustvl/YOLOS"
"hustvl/QueryInst" -> "lkeab/BCNet"
"hustvl/QueryInst" -> "facebookresearch/Mask2Former"
"hustvl/QueryInst" -> "wjf5203/SeqFormer" ["e"=1]
"hustvl/QueryInst" -> "ZwwWayne/K-Net"
"hustvl/QueryInst" -> "megvii-research/SOLQ"
"Rex-LK/tensorrt_learning" -> "huangzongmou/yolov8-pytorch_quantization"
"ildoonet/tf-mobilenet-v2" -> "timctho/mobilenet-v2-tensorflow"
"openvinotoolkit/datumaro" -> "openvinotoolkit/training_extensions"
"openvinotoolkit/datumaro" -> "openvinotoolkit/model_preparation_algorithm"
"openvinotoolkit/datumaro" -> "openvinotoolkit/cvat"
"Picsart-AI-Research/SeMask-Segmentation" -> "hustvl/TopFormer"
"Picsart-AI-Research/SeMask-Segmentation" -> "yan-hao-tian/lawin" ["e"=1]
"Picsart-AI-Research/SeMask-Segmentation" -> "EMI-Group/FaPN" ["e"=1]
"AKSHAYUBHAT/ImageSegmentation" -> "kyamagu/js-segment-annotator"
"AKSHAYUBHAT/ImageSegmentation" -> "Joker316701882/Deep-Image-Matting" ["e"=1]
"AKSHAYUBHAT/ImageSegmentation" -> "martinkersner/train-CRF-RNN" ["e"=1]
"AKSHAYUBHAT/ImageSegmentation" -> "guosheng/refinenet" ["e"=1]
"soo89/CSD-RFCN" -> "soo89/CSD-SSD"
"shouxieai/hard_decode_trt" -> "shouxieai/http_server_cpp"
"shouxieai/hard_decode_trt" -> "shouxieai/minio-cpp-sdk"
"shouxieai/minio-cpp-sdk" -> "shouxieai/CTC_loss_pytorch"
"DataXujing/TensorRT_CV" -> "dlunion/tensorRTIntegrate"
"qijiezhao/CFENet" -> "qijiezhao/pytorch-ssd"
"qijiezhao/CFENet" -> "KimSoybean/ScratchDet"
"qijiezhao/CFENet" -> "qijiezhao/M2Det"
"qijiezhao/CFENet" -> "umich-vl/CornerNet"
"Tencent/Forward" -> "zerollzeng/tiny-tensorrt"
"Tencent/Forward" -> "openppl-public/ppl.nn" ["e"=1]
"Tencent/Forward" -> "Tencent/TPAT"
"Tencent/Forward" -> "Tencent/TurboTransformers" ["e"=1]
"Tencent/Forward" -> "deepglint/EasyQuant" ["e"=1]
"Tencent/Forward" -> "NVIDIA/TRTorch"
"Tencent/Forward" -> "pnnx/pnnx" ["e"=1]
"Tencent/Forward" -> "Tencent/WeChat-TFCC"
"Tencent/Forward" -> "grimoire/mmdetection-to-tensorrt"
"Tencent/Forward" -> "nihui/opencv-mobile" ["e"=1]
"Tencent/Forward" -> "Syencil/tensorRT"
"Tencent/Forward" -> "microsoft/nnfusion" ["e"=1]
"Tencent/Forward" -> "openppl-public/ppq"
"Tencent/Forward" -> "NVIDIA-AI-IOT/tensorrt_plugin_generator"
"Tencent/Forward" -> "onnx/optimizer"
"MTCloudVision/mxnet-dssd" -> "chengyangfu/caffe"
"dvlab-research/SA-AutoAug" -> "kemaloksuz/RankSortLoss"
"DuaneNielsen/DeepInfomaxPytorch" -> "rdevon/DIM"
"DuaneNielsen/DeepInfomaxPytorch" -> "bojone/infomax"
"DuaneNielsen/DeepInfomaxPytorch" -> "sungyubkim/MINE-Mutual-Information-Neural-Estimation-" ["e"=1]
"DuaneNielsen/DeepInfomaxPytorch" -> "Philip-Bachman/amdim-public"
"DuaneNielsen/DeepInfomaxPytorch" -> "MasanoriYamada/Mine_pytorch" ["e"=1]
"DuaneNielsen/DeepInfomaxPytorch" -> "rcalland/deep-INFOMAX"
"DuaneNielsen/DeepInfomaxPytorch" -> "11-626/Deep-INFOMAX"
"DuaneNielsen/DeepInfomaxPytorch" -> "rdevon/cortex"
"DuaneNielsen/DeepInfomaxPytorch" -> "davidtellez/contrastive-predictive-coding"
"DuaneNielsen/DeepInfomaxPytorch" -> "jefflai108/Contrastive-Predictive-Coding-PyTorch"
"terrychenism/Deformable-ConvNets" -> "bharatsingh430/Deformable-ConvNets"
"terrychenism/Deformable-ConvNets" -> "xmyqsh/FPN"
"terrychenism/Deformable-ConvNets" -> "bharatsingh430/py-R-FCN-multiGPU"
"terrychenism/Deformable-ConvNets" -> "zengarden/light_head_rcnn"
"terrychenism/Deformable-ConvNets" -> "unsky/RetinaNet"
"RizhaoCai/PyTorch_ONNX_TensorRT" -> "Syencil/tensorRT"
"RizhaoCai/PyTorch_ONNX_TensorRT" -> "zerollzeng/tiny-tensorrt"
"RizhaoCai/PyTorch_ONNX_TensorRT" -> "Rapternmn/PyTorch-Onnx-Tensorrt"
"RizhaoCai/PyTorch_ONNX_TensorRT" -> "layerism/TensorRT-Inference-Server-Tutorial"
"RizhaoCai/PyTorch_ONNX_TensorRT" -> "dlunion/tensorRTIntegrate"
"zerollzeng/tiny-tensorrt" -> "Syencil/tensorRT"
"zerollzeng/tiny-tensorrt" -> "dlunion/tensorRTIntegrate"
"zerollzeng/tiny-tensorrt" -> "enazoe/yolo-tensorrt"
"zerollzeng/tiny-tensorrt" -> "linghu8812/tensorrt_inference"
"zerollzeng/tiny-tensorrt" -> "LitLeo/TensorRT_Tutorial"
"zerollzeng/tiny-tensorrt" -> "Tencent/TPAT"
"zerollzeng/tiny-tensorrt" -> "CaoWGG/TensorRT-CenterNet"
"zerollzeng/tiny-tensorrt" -> "onnx/onnx-tensorrt"
"zerollzeng/tiny-tensorrt" -> "NVIDIA/trt-samples-for-hackathon-cn"
"zerollzeng/tiny-tensorrt" -> "lewes6369/TensorRT-Yolov3" ["e"=1]
"zerollzeng/tiny-tensorrt" -> "NVIDIA-AI-IOT/torch2trt"
"zerollzeng/tiny-tensorrt" -> "Tencent/Forward"
"zerollzeng/tiny-tensorrt" -> "zerollzeng/tensorrt-zoo" ["e"=1]
"zerollzeng/tiny-tensorrt" -> "layerism/TensorRT-Inference-Server-Tutorial"
"zerollzeng/tiny-tensorrt" -> "daquexian/onnx-simplifier"
"open-mmlab/labelbee" -> "open-mmlab/labelbee-client"
"open-mmlab/labelbee" -> "open-mmlab/pre-commit-hooks"
"open-mmlab/labelbee" -> "open-mmlab/pytorch_sphinx_theme"
"open-mmlab/labelbee" -> "opendatalab/opendatalab-datasets"
"open-mmlab/labelbee" -> "opendatalab/opendatalab-python-sdk"
"open-mmlab/labelbee" -> "opendatalab/dsdl-docs"
"open-mmlab/labelbee" -> "open-mmlab/mmstyles"
"open-mmlab/labelbee" -> "open-mmlab/mim"
"open-mmlab/labelbee" -> "open-mmlab/gkmeans"
"open-mmlab/labelbee" -> "open-mmlab/cocoapi"
"open-mmlab/labelbee" -> "opendatalab/label-u"
"open-mmlab/labelbee" -> "open-mmlab/caffe"
"open-mmlab/pre-commit-hooks" -> "open-mmlab/pytorch_sphinx_theme"
"open-mmlab/pytorch_sphinx_theme" -> "open-mmlab/pre-commit-hooks"
"open-mmlab/pytorch_sphinx_theme" -> "open-mmlab/gkmeans"
"microsoft/RelationNet2" -> "Megvii-BaseDetection/DeFCN"
"microsoft/RelationNet2" -> "Scalsol/RepPointsV2"
"microsoft/RelationNet2" -> "PeizeSun/OneNet"
"microsoft/RelationNet2" -> "Megvii-BaseDetection/BorderDet"
"NVIDIA/retinanet-examples" -> "onnx/onnx-tensorrt"
"NVIDIA/retinanet-examples" -> "NVIDIA-AI-IOT/torch2trt"
"NVIDIA/retinanet-examples" -> "CaoWGG/TensorRT-CenterNet"
"NVIDIA/retinanet-examples" -> "ruinmessi/ASFF"
"NVIDIA/retinanet-examples" -> "yhenon/pytorch-retinanet"
"NVIDIA/retinanet-examples" -> "NVIDIA-AI-IOT/deepstream_reference_apps" ["e"=1]
"NVIDIA/retinanet-examples" -> "dlunion/tensorRTIntegrate"
"NVIDIA/retinanet-examples" -> "NVIDIA/TRTorch"
"NVIDIA/retinanet-examples" -> "wang-xinyu/tensorrtx"
"NVIDIA/retinanet-examples" -> "TuSimple/simpledet"
"NVIDIA/retinanet-examples" -> "biubug6/Pytorch_Retinaface" ["e"=1]
"NVIDIA/retinanet-examples" -> "zhangxiaosong18/FreeAnchor"
"NVIDIA/retinanet-examples" -> "TencentYoutuResearch/ObjectDetection-OneStageDet"
"NVIDIA/retinanet-examples" -> "WongKinYiu/CrossStagePartialNetworks"
"NVIDIA/retinanet-examples" -> "marcoslucianops/DeepStream-Yolo" ["e"=1]
"zhanggang001/RefineMask" -> "bowenc0221/boundary-iou-api"
"zhanggang001/RefineMask" -> "hustvl/QueryInst"
"zhanggang001/RefineMask" -> "tinyalpha/BPR"
"megvii-model/RepVGG" -> "DingXiaoH/RepVGG"
"megvii-model/RepVGG" -> "fxmeng/RMNet" ["e"=1]
"megvii-model/RepVGG" -> "DingXiaoH/DiverseBranchBlock" ["e"=1]
"megvii-model/RepVGG" -> "DingXiaoH/RepOptimizers" ["e"=1]
"wofmanaf/ResT" -> "yun-liu/TransCNN"
"wofmanaf/ResT" -> "Meituan-AutoML/Twins"
"wofmanaf/ResT" -> "ofsoundof/LocalViT"
"wofmanaf/ResT" -> "OliverRensu/Shunted-Transformer"
"merantix/picasso" -> "jakebian/quiver" ["e"=1]
"merantix/picasso" -> "InFoCusp/tf_cnnvis"
"merantix/picasso" -> "thomasj02/DeepLearningProjectWorkflow" ["e"=1]
"merantix/picasso" -> "yosinski/deep-visualization-toolbox"
"merantix/picasso" -> "raghakot/keras-vis" ["e"=1]
"merantix/picasso" -> "felixlaumon/deform-conv"
"merantix/picasso" -> "khanrc/tf.gans-comparison" ["e"=1]
"merantix/picasso" -> "chrisranderson/beholder"
"merantix/picasso" -> "reiinakano/xcessiv" ["e"=1]
"merantix/picasso" -> "msracver/Deep-Feature-Flow" ["e"=1]
"merantix/picasso" -> "jacobgil/keras-grad-cam" ["e"=1]
"merantix/picasso" -> "facebookresearch/ResNeXt"
"merantix/picasso" -> "ppwwyyxx/tensorpack"
"merantix/picasso" -> "rasbt/deep-learning-book" ["e"=1]
"merantix/picasso" -> "keplr-io/quiver" ["e"=1]
"felixgwu/img_classification_pk_pytorch" -> "felixgwu/mask_rcnn_pytorch"
"felixgwu/img_classification_pk_pytorch" -> "avirambh/MSDNet-GCN"
"felixgwu/img_classification_pk_pytorch" -> "ycszen/pytorch-ss" ["e"=1]
"felixgwu/img_classification_pk_pytorch" -> "prlz77/ResNeXt.pytorch"
"felixgwu/img_classification_pk_pytorch" -> "gaohuang/MSDNet"
"felixgwu/img_classification_pk_pytorch" -> "bearpaw/pytorch-classification"
"felixgwu/img_classification_pk_pytorch" -> "woozzu/dong_iccv_2017" ["e"=1]
"Guanghan/darknet" -> "puzzledqs/BBox-Label-Tool"
"Guanghan/darknet" -> "cvjena/darknet"
"Guanghan/darknet" -> "xingwangsfu/caffe-yolo"
"Guanghan/darknet" -> "quanhua92/darknet" ["e"=1]
"Guanghan/darknet" -> "weichengkuo/DeepBox"
"Guanghan/darknet" -> "Guanghan/ROLO" ["e"=1]
"HamedMP/ImageFlow" -> "sthomp/tensorflow_transfer_cifar10"
"ChunhuanLin/deform_conv_pytorch" -> "oeway/pytorch-deform-conv"
"ChunhuanLin/deform_conv_pytorch" -> "4uiiurz1/pytorch-deform-conv-v2"
"ChunhuanLin/deform_conv_pytorch" -> "chengdazhi/Deformable-Convolution-V2-PyTorch"
"ChunhuanLin/deform_conv_pytorch" -> "1zb/deformable-convolution-pytorch"
"ChunhuanLin/deform_conv_pytorch" -> "kastnerkyle/deform-conv"
"ChunhuanLin/deform_conv_pytorch" -> "CharlesShang/DCNv2"
"ChunhuanLin/deform_conv_pytorch" -> "msracver/Deformable-ConvNets"
"ChunhuanLin/deform_conv_pytorch" -> "XiangLi-Shaun/deformableConvolution_3D"
"chensnathan/YOLOF" -> "megvii-model/YOLOF"
"chensnathan/YOLOF" -> "implus/GFocalV2"
"chensnathan/YOLOF" -> "Megvii-BaseDetection/OTA"
"chensnathan/YOLOF" -> "Megvii-BaseDetection/cvpods"
"chensnathan/YOLOF" -> "PeizeSun/OneNet"
"chensnathan/YOLOF" -> "Megvii-BaseDetection/DeFCN"
"chensnathan/YOLOF" -> "fcjian/TOOD"
"chensnathan/YOLOF" -> "Jia-Research-Lab/SA-AutoAug" ["e"=1]
"kemaloksuz/RankSortLoss" -> "dvlab-research/SA-AutoAug"
"kemaloksuz/RankSortLoss" -> "fcjian/TOOD"
"kemaloksuz/RankSortLoss" -> "hyz-xmaster/VarifocalNet"
"kemaloksuz/RankSortLoss" -> "kemaloksuz/aLRPLoss"
"TensorBox/TensorBox" -> "Russell91/ReInspect"
"TensorBox/TensorBox" -> "DrewNF/Tensorflow_Object_Tracking_Video"
"TensorBox/TensorBox" -> "gliese581gg/YOLO_tensorflow"
"TensorBox/TensorBox" -> "DeepRNN/object_detection"
"TensorBox/TensorBox" -> "seann999/ssd_tensorflow"
"TensorBox/TensorBox" -> "nilboy/tensorflow-yolo"
"TensorBox/TensorBox" -> "BichenWuUCB/squeezeDet" ["e"=1]
"TensorBox/TensorBox" -> "jazzsaxmafia/Weakly_detector" ["e"=1]
"TensorBox/TensorBox" -> "zhaoweicai/mscnn"
"TensorBox/TensorBox" -> "warmspringwinds/tf-image-segmentation" ["e"=1]
"TensorBox/TensorBox" -> "sunshineatnoon/Darknet.keras" ["e"=1]
"TensorBox/TensorBox" -> "quanhua92/darknet" ["e"=1]
"TensorBox/TensorBox" -> "CharlesShang/TFFRCNN"
"TensorBox/TensorBox" -> "Joker316701882/Salience-Object-Detection"
"TensorBox/TensorBox" -> "caocuong0306/awesome-object-proposals"
"GitHub30/gdrive.sh" -> "mzramna/easy-google-drive-downloader"
"wookayin/gpustat-web" -> "wookayin/dotfiles" ["e"=1]
"zhiqi-li/Panoptic-SegFormer" -> "VIPSeg-Dataset/VIPSeg-Dataset" ["e"=1]
"cybertronai/pytorch-lamb" -> "ymcui/LAMB_Optimizer_TF"
"cybertronai/pytorch-lamb" -> "kakaobrain/torchlars"
"cybertronai/pytorch-lamb" -> "titu1994/keras-LAMB-Optimizer"
"cybertronai/pytorch-lamb" -> "noahgolmant/pytorch-lars"
"cybertronai/pytorch-lamb" -> "clovaai/AdamP" ["e"=1]
"TeamHG-Memex/tensorboard_logger" -> "torrvision/crayon"
"TeamHG-Memex/tensorboard_logger" -> "lanpa/tensorboard-pytorch"
"TeamHG-Memex/tensorboard_logger" -> "dmlc/tensorboard" ["e"=1]
"TeamHG-Memex/tensorboard_logger" -> "JianGoForIt/YellowFin_Pytorch"
"TeamHG-Memex/tensorboard_logger" -> "szagoruyko/functional-zoo"
"TeamHG-Memex/tensorboard_logger" -> "martinarjovsky/WassersteinGAN" ["e"=1]
"TeamHG-Memex/tensorboard_logger" -> "pytorch/tnt"
"TeamHG-Memex/tensorboard_logger" -> "ikostrikov/pytorch-a2c-ppo-acktr" ["e"=1]
"TeamHG-Memex/tensorboard_logger" -> "chrisranderson/beholder"
"TeamHG-Memex/tensorboard_logger" -> "szagoruyko/pyinn" ["e"=1]
"TeamHG-Memex/tensorboard_logger" -> "facebookresearch/visdom"
"TeamHG-Memex/tensorboard_logger" -> "ppwwyyxx/tensorpack"
"TeamHG-Memex/tensorboard_logger" -> "twitter/torch-autograd" ["e"=1]
"TeamHG-Memex/tensorboard_logger" -> "facebook/fblualib" ["e"=1]
"TeamHG-Memex/tensorboard_logger" -> "facebook/fb.resnet.torch"
"locuslab/pytorch_fft" -> "DeepInsight-PCALab/CompactBilinearPooling-Pytorch" ["e"=1]
"locuslab/pytorch_fft" -> "sniklaus/pytorch-extension" ["e"=1]
"locuslab/pytorch_fft" -> "szagoruyko/diracnets"
"locuslab/pytorch_fft" -> "jhjacobsen/pytorch-i-revnet" ["e"=1]
"locuslab/pytorch_fft" -> "edouardoyallon/pyscatwave" ["e"=1]
"wuzheng-sjtu/FastFPN" -> "xmyqsh/FPN"
"wuzheng-sjtu/FastFPN" -> "unsky/FPN-caffe"
"conradry/copy-paste-aug" -> "RocketFlash/CAP_augmentation"
"conradry/copy-paste-aug" -> "xingyizhou/CenterNet2"
"conradry/copy-paste-aug" -> "qq995431104/Copy-Paste-for-Semantic-Segmentation"
"conradry/copy-paste-aug" -> "microsoft/SoftTeacher"
"conradry/copy-paste-aug" -> "hustvl/QueryInst"
"conradry/copy-paste-aug" -> "dbolya/tide"
"conradry/copy-paste-aug" -> "VDIGPKU/CBNetV2"
"conradry/copy-paste-aug" -> "fcjian/TOOD"
"conradry/copy-paste-aug" -> "hyz-xmaster/swa_object_detection"
"conradry/copy-paste-aug" -> "dvlab-research/SA-AutoAug"
"conradry/copy-paste-aug" -> "ZFTurbo/Weighted-Boxes-Fusion"
"conradry/copy-paste-aug" -> "debidatta/syndata-generation" ["e"=1]
"conradry/copy-paste-aug" -> "lkeab/BCNet"
"conradry/copy-paste-aug" -> "joe-siyuan-qiao/DetectoRS"
"lwplw/darknet2caffe" -> "lwplw/caffe_yolov2"
"mohhao/TF-Keras-ThunderNet" -> "qixuxiang/Pytorch_Lightweight_Network"
"seann999/ssd_tensorflow" -> "LevinJ/SSD_tensorflow_VOC"
"seann999/ssd_tensorflow" -> "georgesung/ssd_tensorflow_traffic_sign_detection" ["e"=1]
"seann999/ssd_tensorflow" -> "ljanyst/ssd-tensorflow"
"seann999/ssd_tensorflow" -> "sunshineatnoon/Darknet.keras" ["e"=1]
"seann999/ssd_tensorflow" -> "nilboy/tensorflow-yolo"
"teddykoker/torchsort" -> "google-research/fast-soft-sort"
"teddykoker/torchsort" -> "patrick-kidger/torchtyping"
"teddykoker/torchsort" -> "bayesiains/nflows" ["e"=1]
"teddykoker/torchsort" -> "facebookresearch/bitsandbytes" ["e"=1]
"teddykoker/torchsort" -> "getkeops/keops" ["e"=1]
"teddykoker/torchsort" -> "assafshocher/ResizeRight" ["e"=1]
"teddykoker/torchsort" -> "adefossez/julius" ["e"=1]
"teddykoker/torchsort" -> "PyTorchLightning/metrics"
"teddykoker/torchsort" -> "pytorch-labs/tensordict" ["e"=1]
"teddykoker/torchsort" -> "facebookincubator/flowtorch" ["e"=1]
"teddykoker/torchsort" -> "Lezcano/geotorch" ["e"=1]
"teddykoker/torchsort" -> "lucidrains/perceiver-pytorch" ["e"=1]
"teddykoker/torchsort" -> "lucidrains/performer-pytorch" ["e"=1]
"YihangLou/FasterRCNN-Encapsulation-Cplusplus" -> "D-X-Y/caffe-faster-rcnn"
"YihangLou/FasterRCNN-Encapsulation-Cplusplus" -> "zhanglaplace/Faster_rcnn_Cplusplus_vs2013"
"YihangLou/FasterRCNN-Encapsulation-Cplusplus" -> "sciencefans/CaffeMex_v2" ["e"=1]
"daijifeng001/caffe-rfcn" -> "daijifeng001/R-FCN"
"daijifeng001/caffe-rfcn" -> "Orpine/py-R-FCN"
"daijifeng001/caffe-rfcn" -> "sciencefans/Focal-Loss"
"daijifeng001/caffe-rfcn" -> "YuwenXiong/py-R-FCN"
"daijifeng001/caffe-rfcn" -> "PureDiors/pytorch_RFCN"
"daijifeng001/caffe-rfcn" -> "unsky/Deformable-ConvNets-caffe"
"xingyizhou/UniDet" -> "xingyizhou/CenterNet2"
"xingyizhou/UniDet" -> "amazon-research/bigdetection"
"xingyizhou/UniDet" -> "facebookresearch/Detic" ["e"=1]
"xingyizhou/UniDet" -> "Megvii-BaseDetection/DeFCN"
"xingyizhou/UniDet" -> "PeizeSun/OneNet"
"xingyizhou/UniDet" -> "jshilong/DDQ" ["e"=1]
"xingyizhou/UniDet" -> "tztztztztz/eqlv2" ["e"=1]
"xingyizhou/UniDet" -> "microsoft/SoftTeacher"
"xingyizhou/UniDet" -> "jshilong/FisherPruning"
"xingyizhou/UniDet" -> "facebookresearch/unbiased-teacher"
"xmyqsh/FPN" -> "wuzheng-sjtu/FastFPN"
"xmyqsh/FPN" -> "xmyqsh/RetinaNet"
"xmyqsh/FPN" -> "terrychenism/Deformable-ConvNets"
"xmyqsh/FPN" -> "unsky/FPN"
"xmyqsh/FPN" -> "sciencefans/Focal-Loss"
"xmyqsh/FPN" -> "bharatsingh430/Deformable-ConvNets"
"xmyqsh/FPN" -> "unsky/FPN-caffe"
"google/revisiting-self-supervised" -> "facebookresearch/fair_self_supervision_benchmark"
"google/revisiting-self-supervised" -> "gidariss/FeatureLearningRotNet"
"google/revisiting-self-supervised" -> "philiptheother/FeatureDecoupling"
"google/revisiting-self-supervised" -> "Philip-Bachman/amdim-public"
"google/revisiting-self-supervised" -> "TengdaHan/DPC" ["e"=1]
"google/revisiting-self-supervised" -> "zlai0/CorrFlow" ["e"=1]
"google/revisiting-self-supervised" -> "HobbitLong/CMC"
"google/revisiting-self-supervised" -> "facebookresearch/DeeperCluster"
"google/revisiting-self-supervised" -> "open-mmlab/OpenSelfSup"
"google/revisiting-self-supervised" -> "mangye16/Unsupervised_Embedding_Learning"
"google/revisiting-self-supervised" -> "google-research/s4l"
"google/revisiting-self-supervised" -> "xiaolonw/TimeCycle" ["e"=1]
"google/revisiting-self-supervised" -> "neuroailab/LocalAggregation-Pytorch"
"tonylins/simclr-converter" -> "Separius/SimCLRv2-Pytorch"
"markjay4k/YOLO-series" -> "markjay4k/Mask-RCNN-series" ["e"=1]
"maple-research-lab/AET" -> "philiptheother/FeatureDecoupling"
"miraclewkf/ResNeXt-PyTorch" -> "prlz77/ResNeXt.pytorch"
"miraclewkf/ResNeXt-PyTorch" -> "miraclewkf/SENet-PyTorch" ["e"=1]
"miraclewkf/ResNeXt-PyTorch" -> "pppLang/SKNet" ["e"=1]
"miraclewkf/ResNeXt-PyTorch" -> "taki0112/ResNeXt-Tensorflow"
"taivop/awesome-data-annotation" -> "jsbroks/awesome-dataset-tools"
"taivop/awesome-data-annotation" -> "heartexlabs/awesome-data-labeling"
"taivop/awesome-data-annotation" -> "RTIInternational/SMART"
"taivop/awesome-data-annotation" -> "doccano/awesome-annotation-tools"
"CPFLAME/centerX" -> "lxc86739795/parsing_platform"
"CPFLAME/centerX" -> "FateScript/CenterNet-better"
"CPFLAME/centerX" -> "xbq1994/HAA"
"CPFLAME/centerX" -> "YuhaoCheng/PyAnomaly"
"CPFLAME/centerX" -> "PeizeSun/OneNet"
"CPFLAME/centerX" -> "ZJULearning/ttfnet"
"CPFLAME/centerX" -> "JDAI-CV/DSD-SATN"
"CPFLAME/centerX" -> "ruinmessi/ASFF"
"CPFLAME/centerX" -> "JDAI-CV/Partial-Person-ReID"
"CPFLAME/centerX" -> "Arthur151/CenterHMR" ["e"=1]
"CPFLAME/centerX" -> "CaoWGG/TensorRT-CenterNet"
"CPFLAME/centerX" -> "xingyizhou/CenterNet2"
"CPFLAME/centerX" -> "lxc86739795/vehicle_reid_by_parsing"
"CPFLAME/centerX" -> "jinfagang/CenterNet_Pro_Max"
"PeizeSun/OneNet" -> "Megvii-BaseDetection/DeFCN"
"PeizeSun/OneNet" -> "PeizeSun/SparseR-CNN"
"PeizeSun/OneNet" -> "Scalsol/RepPointsV2"
"PeizeSun/OneNet" -> "sfzhang15/ATSS"
"PeizeSun/OneNet" -> "megvii-model/YOLOF"
"PeizeSun/OneNet" -> "implus/GFocalV2"
"PeizeSun/OneNet" -> "xingyizhou/CenterNet2"
"PeizeSun/OneNet" -> "implus/GFocal"
"PeizeSun/OneNet" -> "FateScript/CenterNet-better"
"PeizeSun/OneNet" -> "hyz-xmaster/VarifocalNet"
"PeizeSun/OneNet" -> "Megvii-BaseDetection/BorderDet"
"PeizeSun/OneNet" -> "aim-uofa/AdelaiDet"
"PeizeSun/OneNet" -> "Purkialo/CrowdDet" ["e"=1]
"PeizeSun/OneNet" -> "CPFLAME/centerX"
"PeizeSun/OneNet" -> "microsoft/RelationNet2"
"hyz-xmaster/swa_object_detection" -> "hyz-xmaster/VarifocalNet"
"hyz-xmaster/swa_object_detection" -> "Scalsol/RepPointsV2"
"hyz-xmaster/swa_object_detection" -> "zwl-max/underwater-detection" ["e"=1]
"hyz-xmaster/swa_object_detection" -> "zhengye1995/kesci-2021-underwater-optics" ["e"=1]
"hyz-xmaster/swa_object_detection" -> "VDIGPKU/CBNetV2"
"hyz-xmaster/swa_object_detection" -> "ModelTC/EOD"
"hyz-xmaster/swa_object_detection" -> "EMI-Group/FaPN" ["e"=1]
"hyz-xmaster/swa_object_detection" -> "Megvii-BaseDetection/DeFCN"
"hyz-xmaster/swa_object_detection" -> "PeizeSun/OneNet"
"hyz-xmaster/swa_object_detection" -> "Wakinguup/Underwater_detection" ["e"=1]
"hyz-xmaster/swa_object_detection" -> "jshilong/SEPC"
"open-mmlab/ecosystem" -> "open-mmlab/pre-commit-hooks"
"open-mmlab/mim-example" -> "open-mmlab/pytorch_sphinx_theme"
"open-mmlab/mim-example" -> "open-mmlab/pre-commit-hooks"
"open-mmlab/mim-example" -> "open-mmlab/mmstyles"
"open-mmlab/mim-example" -> "jshilong/FisherPruning"
"open-mmlab/mim-example" -> "open-mmlab/gkmeans"
"FlyEgle/MAE-pytorch" -> "IcarusWizard/MAE"
"FlyEgle/MAE-pytorch" -> "pengzhiliang/MAE-pytorch"
"FlyEgle/MAE-pytorch" -> "FlyEgle/SDWNet"
"FlyEgle/MAE-pytorch" -> "BUPT-PRIV/MAE-priv"
"FlyEgle/MAE-pytorch" -> "ariG23498/mae-scalable-vision-learners"
"microsoft/vision-longformer" -> "microsoft/Focal-Transformer"
"Megvii-BaseDetection/OTA" -> "Megvii-BaseDetection/DeFCN"
"Megvii-BaseDetection/OTA" -> "Megvii-BaseDetection/AutoAssign"
"Megvii-BaseDetection/OTA" -> "Megvii-BaseDetection/cvpods"
"Megvii-BaseDetection/OTA" -> "fcjian/TOOD"
"Megvii-BaseDetection/OTA" -> "implus/GFocalV2"
"Megvii-BaseDetection/OTA" -> "chensnathan/YOLOF"
"Megvii-BaseDetection/OTA" -> "strongwolf/DW"
"Megvii-BaseDetection/OTA" -> "Megvii-BaseDetection/LLA"
"ChenglongChen/caffe-windows" -> "senecaur/caffe-rta"
"ChenglongChen/caffe-windows" -> "kevinlin311tw/caffe-augmentation"
"ChenglongChen/caffe-windows" -> "shiyemin/ResNet-Generator-for-caffe"
"52CV/ECCV-2022-Papers" -> "52CV/ICCV-2021-Papers"
"ppplinday/tensorflow-vgg16-train-and-test" -> "LiMingda92/VGG16_TF"
"rafaelpadilla/review_object_detection_metrics" -> "rafaelpadilla/Object-Detection-Metrics"
"rafaelpadilla/review_object_detection_metrics" -> "dbolya/tide"
"rafaelpadilla/review_object_detection_metrics" -> "WongKinYiu/yolor"
"rafaelpadilla/review_object_detection_metrics" -> "obss/sahi"
"rafaelpadilla/review_object_detection_metrics" -> "voxel51/fiftyone"
"rafaelpadilla/review_object_detection_metrics" -> "Cartucho/mAP"
"rafaelpadilla/review_object_detection_metrics" -> "ZFTurbo/Weighted-Boxes-Fusion"
"rafaelpadilla/review_object_detection_metrics" -> "NVIDIA/retinanet-examples"
"rafaelpadilla/review_object_detection_metrics" -> "WongKinYiu/ScaledYOLOv4"
"rafaelpadilla/review_object_detection_metrics" -> "WongKinYiu/CrossStagePartialNetworks"
"rafaelpadilla/review_object_detection_metrics" -> "rwightman/efficientdet-pytorch"
"rafaelpadilla/review_object_detection_metrics" -> "microsoft/SoftTeacher"
"rafaelpadilla/review_object_detection_metrics" -> "airctic/icevision" ["e"=1]
"rafaelpadilla/review_object_detection_metrics" -> "ceccocats/tkDNN"
"rafaelpadilla/review_object_detection_metrics" -> "bes-dev/mean_average_precision" ["e"=1]
"megvii-research/SOLQ" -> "hujiecpp/ISTR"
"rstrudel/segmenter" -> "fudan-zvg/SETR"
"rstrudel/segmenter" -> "SwinTransformer/Swin-Transformer-Semantic-Segmentation"
"rstrudel/segmenter" -> "NVlabs/SegFormer"
"rstrudel/segmenter" -> "facebookresearch/MaskFormer"
"rstrudel/segmenter" -> "facebookresearch/Mask2Former"
"rstrudel/segmenter" -> "HuCaoFighting/Swin-Unet" ["e"=1]
"rstrudel/segmenter" -> "tfzhou/ContrastiveSeg"
"rstrudel/segmenter" -> "lucidrains/segformer-pytorch"
"rstrudel/segmenter" -> "Picsart-AI-Research/SeMask-Segmentation"
"rstrudel/segmenter" -> "Epiphqny/VisTR"
"rstrudel/segmenter" -> "SegmentationBLWX/sssegmentation"
"rstrudel/segmenter" -> "open-mmlab/mmsegmentation"
"rstrudel/segmenter" -> "isl-org/lang-seg" ["e"=1]
"rstrudel/segmenter" -> "openseg-group/openseg.pytorch" ["e"=1]
"rstrudel/segmenter" -> "SwinTransformer/Transformer-SSL"
"JDAI-CV/Partial-Person-ReID" -> "xbq1994/HAA"
"JDAI-CV/Partial-Person-ReID" -> "lxc86739795/parsing_platform"
"JDAI-CV/Partial-Person-ReID" -> "JDAI-CV/DSD-SATN"
"JDAI-CV/Partial-Person-ReID" -> "YuhaoCheng/PyAnomaly"
"SsnL/align_uniform" -> "SsnL/moco_align_uniform"
"SsnL/align_uniform" -> "chingyaoc/DCL"
"SsnL/align_uniform" -> "HobbitLong/PyContrast"
"SsnL/align_uniform" -> "mbaradad/learning_with_noise"
"SsnL/align_uniform" -> "salesforce/PCL"
"SsnL/align_uniform" -> "facebookresearch/luckmatters"
"lab-ml/labml" -> "lab-ml/python_autocomplete"
"lab-ml/labml" -> "lab-ml/app"
"federicopozzi33/MobileOne-PyTorch" -> "shoutOutYangJie/MobileOne"
"hahnyuan/nn_tools" -> "xxradon/PytorchToCaffe"
"hahnyuan/nn_tools" -> "longcw/pytorch2caffe"
"hahnyuan/nn_tools" -> "starimeL/PytorchConverter"
"hahnyuan/nn_tools" -> "MTlab/onnx2caffe"
"hahnyuan/nn_tools" -> "marvis/pytorch-caffe-darknet-convert"
"hahnyuan/nn_tools" -> "inisis/brocolli"
"hahnyuan/nn_tools" -> "BUG1989/caffe-int8-convert-tools" ["e"=1]
"hahnyuan/nn_tools" -> "luoyetx/mini-caffe" ["e"=1]
"DerryHub/BEVFormer_tensorrt" -> "Sense-GVT/Fast-BEV" ["e"=1]
"DerryHub/BEVFormer_tensorrt" -> "Yibin122/TensorRT-SMOKE"
"FrancescoSaverioZuppichini/PyTorch-Deep-Learning-Template" -> "moemen95/Pytorch-Project-Template"
"FrancescoSaverioZuppichini/PyTorch-Deep-Learning-Template" -> "victoresque/pytorch-template"
"FrancescoSaverioZuppichini/PyTorch-Deep-Learning-Template" -> "FrancescoSaverioZuppichini/glasses"
"FrancescoSaverioZuppichini/PyTorch-Deep-Learning-Template" -> "FrancescoSaverioZuppichini/mirror" ["e"=1]
"FrancescoSaverioZuppichini/PyTorch-Deep-Learning-Template" -> "zzsza/Boostcamp-AI-Tech-Product-Serving" ["e"=1]
"ry/tensorflow-vgg16" -> "machrisaa/tensorflow-vgg"
"ry/tensorflow-vgg16" -> "ry/tensorflow-resnet"
"ry/tensorflow-vgg16" -> "ethereon/caffe-tensorflow"
"ry/tensorflow-vgg16" -> "jazzsaxmafia/show_attend_and_tell.tensorflow" ["e"=1]
"ry/tensorflow-vgg16" -> "jazzsaxmafia/show_and_tell.tensorflow" ["e"=1]
"ry/tensorflow-vgg16" -> "HamedMP/ImageFlow"
"ry/tensorflow-vgg16" -> "MarvinTeichmann/tensorflow-fcn" ["e"=1]
"ry/tensorflow-vgg16" -> "ppplinday/tensorflow-vgg16-train-and-test"
"ry/tensorflow-vgg16" -> "huyng/tensorflow-vgg"
"ry/tensorflow-vgg16" -> "kratzert/finetune_alexnet_with_tensorflow"
"ry/tensorflow-vgg16" -> "Zehaos/MobileNet"
"ry/tensorflow-vgg16" -> "facebook/fb.resnet.torch"
"ry/tensorflow-vgg16" -> "smallcorgi/Faster-RCNN_TF"
"ry/tensorflow-vgg16" -> "leihe001/tensorflow-vgg"
"ry/tensorflow-vgg16" -> "shekkizh/FCN.tensorflow" ["e"=1]
"EPFL-VILAB/MultiMAE" -> "facebookresearch/omnivore" ["e"=1]
"EPFL-VILAB/MultiMAE" -> "Sense-GVT/DeCLIP" ["e"=1]
"EPFL-VILAB/MultiMAE" -> "hustvl/MIMDet"
"EPFL-VILAB/MultiMAE" -> "yikaiw/TokenFusion" ["e"=1]
"EPFL-VILAB/MultiMAE" -> "Alpha-VL/ConvMAE"
"EPFL-VILAB/MultiMAE" -> "ucasligang/awesome-MIM"
"EPFL-VILAB/MultiMAE" -> "MCG-NJU/VideoMAE" ["e"=1]
"EPFL-VILAB/MultiMAE" -> "microsoft/SimMIM"
"EPFL-VILAB/MultiMAE" -> "facebookresearch/msn"
"EPFL-VILAB/MultiMAE" -> "facebookresearch/SLIP" ["e"=1]
"EPFL-VILAB/MultiMAE" -> "czczup/ViT-Adapter" ["e"=1]
"yjh0410/CenterNet-plus" -> "yjh0410/CenterNet-Lite"
"stanford-futuredata/noscope" -> "stanford-futuredata/tensorflow-noscope"
"stanford-futuredata/noscope" -> "myfavouritekk/T-CNN" ["e"=1]
"stanford-futuredata/noscope" -> "sanghoon/pva-faster-rcnn"
"stanford-futuredata/noscope" -> "taokong/RON"
"stanford-futuredata/noscope" -> "camel007/Caffe-ShuffleNet"
"stanford-futuredata/noscope" -> "happynear/NormFace" ["e"=1]
"stanford-futuredata/noscope" -> "zhaoweicai/mscnn"
"makefile/frcnn" -> "D-X-Y/caffe-faster-rcnn"
"makefile/frcnn" -> "yonghenglh6/DepthwiseConvolution"
"twtygqyy/caffe-augmentation" -> "kevinlin311tw/caffe-augmentation"
"twtygqyy/caffe-augmentation" -> "farmingyard/caffe-mobilenet"
"twtygqyy/caffe-augmentation" -> "KaleidoZhouYN/Angular-Triplet-Loss" ["e"=1]
"twtygqyy/caffe-augmentation" -> "MichaelXin/Awesome-Caffe"
"twtygqyy/caffe-augmentation" -> "zimenglan-sysu-512/Focal-Loss"
"twtygqyy/caffe-augmentation" -> "sciencefans/coco_loss" ["e"=1]
"twtygqyy/caffe-augmentation" -> "shicai/DenseNet-Caffe"
"twtygqyy/caffe-augmentation" -> "yonghenglh6/DepthwiseConvolution"
"twtygqyy/caffe-augmentation" -> "liuzhuang13/DenseNetCaffe"
"twtygqyy/caffe-augmentation" -> "xialuxi/arcface-caffe" ["e"=1]
"twtygqyy/caffe-augmentation" -> "sciencefans/RSA-for-object-detection" ["e"=1]
"yhenon/keras-spp" -> "peace195/sppnet" ["e"=1]
"yhenon/keras-spp" -> "yhenon/keras-frcnn"
"yhenon/keras-spp" -> "ShaoqingRen/SPP_net"
"yhenon/keras-spp" -> "yueruchen/sppnet-pytorch" ["e"=1]
"yhenon/keras-spp" -> "rykov8/ssd_keras"
"yhenon/keras-spp" -> "DeepRNN/object_detection"
"yhenon/keras-spp" -> "osh/KerasGAN" ["e"=1]
"yhenon/keras-spp" -> "belltailjp/selective_search_py"
"yhenon/keras-spp" -> "heuritech/convnets-keras" ["e"=1]
"yhenon/keras-spp" -> "titu1994/Keras-ResNeXt"
"DHZS/tf-deformable-conv-layer" -> "kastnerkyle/deform-conv"
"omry/omegaconf" -> "facebookresearch/hydra"
"omry/omegaconf" -> "rbgirshick/yacs"
"omry/omegaconf" -> "PyTorchLightning/metrics"
"omry/omegaconf" -> "facebookresearch/hiplot" ["e"=1]
"omry/omegaconf" -> "ashleve/lightning-hydra-template"
"omry/omegaconf" -> "patrick-kidger/torchtyping"
"omry/omegaconf" -> "facebookincubator/submitit"
"omry/omegaconf" -> "facebookresearch/fairscale" ["e"=1]
"omry/omegaconf" -> "onelivesleft/PrettyErrors" ["e"=1]
"omry/omegaconf" -> "google/gin-config" ["e"=1]
"omry/omegaconf" -> "arogozhnikov/einops"
"omry/omegaconf" -> "aimhubio/aim" ["e"=1]
"omry/omegaconf" -> "PyTorchLightning/lightning-flash"
"omry/omegaconf" -> "pytorch/hydra-torch"
"omry/omegaconf" -> "microsoft/hummingbird" ["e"=1]
"szagoruyko/functional-zoo" -> "szagoruyko/attention-transfer" ["e"=1]
"szagoruyko/functional-zoo" -> "szagoruyko/diracnets"
"szagoruyko/functional-zoo" -> "ncullen93/torchsample"
"szagoruyko/functional-zoo" -> "lanpa/tensorboard-pytorch"
"szagoruyko/functional-zoo" -> "isht7/pytorch-deeplab-resnet" ["e"=1]
"szagoruyko/functional-zoo" -> "torrvision/crayon"
"szagoruyko/functional-zoo" -> "jacobgil/pytorch-explain-black-box" ["e"=1]
"szagoruyko/functional-zoo" -> "felixgwu/mask_rcnn_pytorch"
"szagoruyko/functional-zoo" -> "edouardoyallon/pyscatwave" ["e"=1]
"szagoruyko/functional-zoo" -> "ignacio-rocco/detectorch"
"szagoruyko/functional-zoo" -> "cemoody/topicsne" ["e"=1]
"szagoruyko/functional-zoo" -> "fxia22/stn.pytorch" ["e"=1]
"szagoruyko/functional-zoo" -> "carpedm20/BEGAN-pytorch" ["e"=1]
"szagoruyko/functional-zoo" -> "ycszen/pytorch-ss" ["e"=1]
"szagoruyko/functional-zoo" -> "andreasveit/conditional-similarity-networks" ["e"=1]
"STVIR/Grid-R-CNN" -> "OceanPang/Libra_R-CNN"
"STVIR/Grid-R-CNN" -> "zhangxiaosong18/FreeAnchor"
"STVIR/Grid-R-CNN" -> "thangvubk/Cascade-RPN"
"STVIR/Grid-R-CNN" -> "microsoft/RepPoints"
"STVIR/Grid-R-CNN" -> "Hwang64/PSIS"
"STVIR/Grid-R-CNN" -> "yqyao/FCOS_PLUS"
"STVIR/Grid-R-CNN" -> "xingyizhou/ExtremeNet"
"STVIR/Grid-R-CNN" -> "yihui-he/KL-Loss"
"denru01/netadapt" -> "madoibito80/NetAdapt"
"open-mmlab/awesome-vit" -> "jshilong/GroupRCNN"
"open-mmlab/awesome-vit" -> "open-mmlab/mmeval"
"open-mmlab/awesome-vit" -> "open-mmlab/mim"
"open-mmlab/awesome-vit" -> "open-mmlab/mmfewshot"
"open-mmlab/awesome-vit" -> "open-mmlab/playground"
"open-mmlab/awesome-vit" -> "open-mmlab/mmrazor"
"open-mmlab/awesome-vit" -> "open-mmlab/pre-commit-hooks"
"open-mmlab/awesome-vit" -> "fcjian/TOOD"
"open-mmlab/awesome-vit" -> "open-mmlab/mmengine"
"open-mmlab/awesome-vit" -> "open-mmlab/MMGEN-FaceStylor"
"open-mmlab/awesome-vit" -> "jshilong/FisherPruning"
"ShaoqingRen/SPP_net" -> "ShaoqingRen/caffe"
"ShaoqingRen/SPP_net" -> "weichengkuo/DeepBox"
"ShaoqingRen/SPP_net" -> "purine/purine2" ["e"=1]
"ShaoqingRen/SPP_net" -> "rbgirshick/rcnn"
"ShaoqingRen/SPP_net" -> "sermanet/OverFeat" ["e"=1]
"ShaoqingRen/SPP_net" -> "pdollar/coco" ["e"=1]
"ShaoqingRen/SPP_net" -> "google/multibox" ["e"=1]
"ShaoqingRen/SPP_net" -> "daijifeng001/R-FCN"
"ShaoqingRen/SPP_net" -> "zplizzi/tensorflow-fast-rcnn"
"ShaoqingRen/SPP_net" -> "rbgirshick/fast-rcnn"
"ShaoqingRen/SPP_net" -> "zhaoweicai/mscnn"
"ShaoqingRen/SPP_net" -> "gidariss/mrcnn-object-detection" ["e"=1]
"ShaoqingRen/SPP_net" -> "yhenon/keras-spp"
"ShaoqingRen/SPP_net" -> "xingwangsfu/caffe-yolo"
"ShaoqingRen/SPP_net" -> "ShaoqingRen/faster_rcnn"
"ShaoqingRen/caffe" -> "ShaoqingRen/SPP_net"
"BVLC/caffe-tutorial" -> "BVLC/raptor"
"BVLC/caffe-tutorial" -> "ShaoqingRen/SPP_net"
"google-research/ssl_detection" -> "facebookresearch/unbiased-teacher"
"google-research/ssl_detection" -> "soo89/CSD-SSD"
"google-research/ssl_detection" -> "microsoft/SoftTeacher"
"google-research/ssl_detection" -> "soo89/CSD-RFCN"
"google-research/ssl_detection" -> "wonheeML/mtl-ssl"
"google-research/ssl_detection" -> "amirbar/DETReg" ["e"=1]
"google-research/ssl_detection" -> "ligang-cs/PseCo"
"google-research/ssl_detection" -> "NVlabs/wetectron" ["e"=1]
"google-research/ssl_detection" -> "google-research/fixmatch" ["e"=1]
"google-research/ssl_detection" -> "chenbinghui1/DSL"
"google-research/ssl_detection" -> "kekmodel/FixMatch-pytorch" ["e"=1]
"google-research/ssl_detection" -> "FishYuLi/BalancedGroupSoftmax" ["e"=1]
"google-research/ssl_detection" -> "chengchunhsu/EveryPixelMatters" ["e"=1]
"google-research/ssl_detection" -> "facebookresearch/unbiased-teacher-v2"
"google-research/ssl_detection" -> "YU1ut/MixMatch-pytorch" ["e"=1]
"caocuong0306/awesome-object-proposals" -> "zhaoweicai/mscnn"
"caocuong0306/awesome-object-proposals" -> "terrychenism/ResNeXt"
"caocuong0306/awesome-object-proposals" -> "davheld/GOTURN" ["e"=1]
"caocuong0306/awesome-object-proposals" -> "BichenWuUCB/squeezeDet" ["e"=1]
"caocuong0306/awesome-object-proposals" -> "felixgwu/mask_rcnn_pytorch"
"ucas-vg/TOV_mmdetection" -> "ucas-vg/Instance-level-Scale-Match"
"ucas-vg/TOV_mmdetection" -> "ucas-vg/Effective-Fusion-Factor"
"IronMastiff/YOLOv3_tensorflow" -> "raytroop/YOLOv3_tf"
"iwatake2222/play_with_tflite" -> "iwatake2222/InferenceHelper"
"iwatake2222/play_with_tflite" -> "ValYouW/tflite-dist" ["e"=1]
"iwatake2222/play_with_tflite" -> "PINTO0309/tflite2tensorflow"
"iwatake2222/play_with_tflite" -> "terryky/tflite_gles_app"
"iwatake2222/play_with_tflite" -> "ValYouW/tflite-win-c" ["e"=1]
"iwatake2222/play_with_tflite" -> "terryky/android_tflite"
"iwatake2222/play_with_tflite" -> "iwatake2222/play_with_tensorrt"
"iwatake2222/play_with_tflite" -> "PINTO0309/PINTO_model_zoo"
"iwatake2222/play_with_tflite" -> "PINTO0309/simple-onnx-processing-tools"
"iwatake2222/play_with_tflite" -> "iwatake2222/self-driving-ish_computer_vision_system"
"TheBobPony/getwindows11.tech" -> "githubdev03/RDP"
"githubdev03/RDP" -> "TheBobPony/getwindows11.tech"
"ruiminshen/yolo-tf" -> "persistforever/yolo-tensorflow"
"ruiminshen/yolo-tf" -> "shishichang/yolov2-tensorflow"
"ruiminshen/yolo-tf" -> "nilboy/tensorflow-yolo"
"ruiminshen/yolo-tf" -> "wenxichen/tensorflow_yolo2"
"ruiminshen/yolo-tf" -> "PaulChongPeng/YOLO2TensorFlow"
"ruiminshen/yolo-tf" -> "johnwlambert/YoloTensorFlow229"
"ruiminshen/yolo-tf" -> "ruiminshen/yolo2-pytorch"
"zhang-tao-whu/e2ec" -> "lkevinzc/dance"
"zhang-tao-whu/e2ec" -> "hustvl/SparseInst"
"zhang-tao-whu/e2ec" -> "SysCV/transfiner"
"skrish13/PyTorch-mask-x-rcnn" -> "ronghanghu/seg_every_thing"
"920232796/SETR-pytorch" -> "gupta-abhay/setr-pytorch"
"920232796/SETR-pytorch" -> "lucidrains/segformer-pytorch"
"920232796/SETR-pytorch" -> "fudan-zvg/SETR"
"Chenglin-Yang/LVT" -> "hunto/LightViT"
"locuslab/convmixer" -> "locuslab/convmixer-cifar10"
"lucidrains/deformable-attention" -> "LeapLabTHU/DAT"
"microsoft/esvit" -> "bytedance/ibot"
"microsoft/esvit" -> "facebookresearch/msn"
"microsoft/esvit" -> "SwinTransformer/Transformer-SSL"
"microsoft/esvit" -> "sail-sg/mugs"
"microsoft/esvit" -> "facebookresearch/moco-v3"
"microsoft/esvit" -> "microsoft/vision-longformer"
"microsoft/esvit" -> "Sara-Ahmed/SiT"
"rishikksh20/CeiT-pytorch" -> "coeusguo/ceit"
"AlexMa011/pytorch-polygon-rnn" -> "fidler-lab/polyrnn-pp"
"AlexMa011/pytorch-polygon-rnn" -> "dmarcosg/DSAC"
"AlexMa011/pytorch-polygon-rnn" -> "fidler-lab/polyrnn-pp-pytorch"
"Ahmkel/Keras-Project-Template" -> "MrGemy95/Tensorflow-Project-Template"
"Ahmkel/Keras-Project-Template" -> "PetrochukM/PyTorch-NLP" ["e"=1]
"Ahmkel/Keras-Project-Template" -> "outcastofmusic/quick-nlp" ["e"=1]
"Ahmkel/Keras-Project-Template" -> "SpikeKing/DL-Project-Template"
"Ahmkel/Keras-Project-Template" -> "victoresque/pytorch-template"
"Ahmkel/Keras-Project-Template" -> "jindongwang/transferlearning-tutorial" ["e"=1]
"Ahmkel/Keras-Project-Template" -> "GauravBh1010tt/DeepLearn" ["e"=1]
"Ahmkel/Keras-Project-Template" -> "Mrgemy95/Tensorflow-Project-Template" ["e"=1]
"Ahmkel/Keras-Project-Template" -> "fchollet/keras-resources" ["e"=1]
"Ahmkel/Keras-Project-Template" -> "taehoonlee/tensornets" ["e"=1]
"Ahmkel/Keras-Project-Template" -> "cameronfabbri/Compute-Features"
"Ahmkel/Keras-Project-Template" -> "Waikato/meka" ["e"=1]
"Ahmkel/Keras-Project-Template" -> "stared/livelossplot" ["e"=1]
"Ahmkel/Keras-Project-Template" -> "orsinium/textdistance" ["e"=1]
"Ahmkel/Keras-Project-Template" -> "maxpumperla/hyperas" ["e"=1]
"Zardinality/TF_Deformable_Net" -> "Zardinality/TF-deformable-conv"
"Zardinality/TF_Deformable_Net" -> "felixlaumon/deform-conv"
"Zardinality/TF_Deformable_Net" -> "kastnerkyle/deform-conv"
"aloyschen/tensorflow-yolo3" -> "maiminh1996/YOLOv3-tensorflow"
"aloyschen/tensorflow-yolo3" -> "raytroop/YOLOv3_tf"
"aloyschen/tensorflow-yolo3" -> "HMS-IDAC/YOLO3D"
"PaddlePaddle/TrustAI" -> "PaddlePaddle/InterpretDL"
"ChristophReich1996/Involution" -> "shikishima-TasakiLab/Involution-PyTorch"
"ChristophReich1996/Involution" -> "shuuchen/involution.pytorch"
"umich-vl/CornerNet" -> "yihui-he/softer-NMS"
"umich-vl/CornerNet" -> "ruinmessi/RFBNet"
"umich-vl/CornerNet" -> "vacancy/PreciseRoIPooling"
"umich-vl/CornerNet" -> "zhaoweicai/cascade-rcnn"
"umich-vl/CornerNet" -> "qijiezhao/CFENet"
"umich-vl/CornerNet" -> "bowenc0221/Decoupled-Classification-Refinement"
"umich-vl/CornerNet" -> "sfzhang15/RefineDet"
"umich-vl/CornerNet" -> "msracver/Relation-Networks-for-Object-Detection"
"umich-vl/CornerNet" -> "szq0214/DSOD"
"umich-vl/CornerNet" -> "marvis/pytorch-yolo3"
"umich-vl/CornerNet" -> "zengarden/light_head_rcnn"
"umich-vl/CornerNet" -> "Microsoft/human-pose-estimation.pytorch" ["e"=1]
"umich-vl/CornerNet" -> "xingyizhou/ExtremeNet"
"umich-vl/CornerNet" -> "xiaolonw/adversarial-frcnn"
"umich-vl/CornerNet" -> "unsky/Deformable-ConvNets-caffe"
"lessw2020/Ranger-Mish-ImageWoof-5" -> "lessw2020/mish"
"belltailjp/selective_search_py" -> "AlpacaDB/selectivesearch"
"belltailjp/selective_search_py" -> "sergeyk/selective_search_ijcv_with_python"
"belltailjp/selective_search_py" -> "saisrivatsan/selective-search"
"belltailjp/selective_search_py" -> "Orpine/py-R-FCN"
"belltailjp/selective_search_py" -> "mitmul/chainer-faster-rcnn" ["e"=1]
"belltailjp/selective_search_py" -> "ShaoqingRen/SPP_net"
"belltailjp/selective_search_py" -> "pdollar/edges" ["e"=1]
"madhawav/YOLO3-4-Py" -> "digitalbrain79/pyyolo"
"madhawav/YOLO3-4-Py" -> "explosion/lightnet"
"madhawav/YOLO3-4-Py" -> "mystic123/tensorflow-yolo-v3"
"madhawav/YOLO3-4-Py" -> "danielgatis/darknetpy"
"madhawav/YOLO3-4-Py" -> "xiaochus/YOLOv3"
"madhawav/YOLO3-4-Py" -> "Qidian213/deep_sort_yolov3" ["e"=1]
"madhawav/YOLO3-4-Py" -> "Adamdad/keras-YOLOv3-mobilenet"
"madhawav/YOLO3-4-Py" -> "raytroop/YOLOv3_tf"
"madhawav/YOLO3-4-Py" -> "radekosmulski/yolo_open_images" ["e"=1]
"madhawav/YOLO3-4-Py" -> "ayooshkathuria/pytorch-yolo-v3"
"madhawav/YOLO3-4-Py" -> "Guanghan/ROLO" ["e"=1]
"madhawav/YOLO3-4-Py" -> "PINTO0309/OpenVINO-YoloV3" ["e"=1]
"madhawav/YOLO3-4-Py" -> "cfotache/pytorch_objectdetecttrack" ["e"=1]
"yinghdb/EmbedMask" -> "aim-uofa/adet"
"yinghdb/EmbedMask" -> "NaiyuGao/SSAP"
"sergeyk/selective_search_ijcv_with_python" -> "belltailjp/selective_search_py"
"sergeyk/selective_search_ijcv_with_python" -> "dculibrk/edge_boxes_with_python"
"sergeyk/selective_search_ijcv_with_python" -> "vasgaowei/pytorch_MELM" ["e"=1]
"chuanqi305/SqueezeNet-SSD" -> "lampsonSong/tinySSD"
"Kaixhin/FGLab" -> "Kaixhin/FGMachine"
"Kaixhin/FGMachine" -> "Kaixhin/FGLab"
"joshr17/HCL" -> "chingyaoc/DCL"
"joshr17/HCL" -> "kavehhassani/mvgrl" ["e"=1]
"joshr17/HCL" -> "google-research/fnc"
"hkzhang95/DynamicRCNN" -> "hkzhang95/Awesome-CV-bibfiles"
"hkzhang95/DynamicRCNN" -> "Megvii-BaseDetection/BorderDet"
"PyTorchLightning/deep-learning-project-template" -> "PyTorchLightning/metrics"
"PyTorchLightning/deep-learning-project-template" -> "PyTorchLightning/lightning-bolts"
"PyTorchLightning/deep-learning-project-template" -> "PyTorchLightning/lightning-flash"
"PyTorchLightning/deep-learning-project-template" -> "PyTorchLightning/pytorch-lightning-bolts"
"PyTorchLightning/deep-learning-project-template" -> "ashleve/lightning-hydra-template"
"PyTorchLightning/deep-learning-project-template" -> "PyTorchLightning/lightning-transformers"
"PyTorchLightning/deep-learning-project-template" -> "PyTorchLightning/lightning-tutorials"
"PyTorchLightning/deep-learning-project-template" -> "patrick-kidger/torchtyping"
"PyTorchLightning/deep-learning-project-template" -> "lucmos/nn-template" ["e"=1]
"PyTorchLightning/deep-learning-project-template" -> "miracleyoo/pytorch-lightning-template" ["e"=1]
"PyTorchLightning/deep-learning-project-template" -> "wandb/examples"
"PyTorchLightning/deep-learning-project-template" -> "lkhphuc/lightning-hydra-template"
"PyTorchLightning/deep-learning-project-template" -> "PyTorchLightning/pytorch-lightning"
"PyTorchLightning/deep-learning-project-template" -> "lightly-ai/lightly"
"PyTorchLightning/deep-learning-project-template" -> "awaelchli/pytorch-lightning-snippets"
"PINTO0309/openvino2tensorflow" -> "PINTO0309/onnx2tf"
"PINTO0309/openvino2tensorflow" -> "PINTO0309/simple-onnx-processing-tools"
"PINTO0309/openvino2tensorflow" -> "PINTO0309/PINTO_model_zoo"
"PINTO0309/openvino2tensorflow" -> "PINTO0309/tflite2tensorflow"
"PINTO0309/openvino2tensorflow" -> "iwatake2222/InferenceHelper"
"PINTO0309/openvino2tensorflow" -> "terryky/tflite_gles_app"
"PINTO0309/openvino2tensorflow" -> "NobuoTsukamoto/tflite-cv-example"
"chengyangfu/pytorch-vgg-cifar10" -> "akamaster/pytorch_resnet_cifar10"
"chengyangfu/pytorch-vgg-cifar10" -> "mjiansun/cifar10-vgg16"
"chengyangfu/pytorch-vgg-cifar10" -> "geifmany/cifar-vgg"
"chengyangfu/pytorch-vgg-cifar10" -> "jcjohnson/pytorch-vgg"
"chengyangfu/pytorch-vgg-cifar10" -> "huyvnphan/PyTorch_CIFAR10" ["e"=1]
"LaurentMazare/deep-models" -> "ikhlestov/vision_networks"
"LaurentMazare/deep-models" -> "YixuanLi/densenet-tensorflow"
"bit-bots/imagetagger" -> "l3p-cv/lost"
"YangtaoWANG95/TokenCut" -> "YangtaoWANG95/TokenCut_video"
"YangtaoWANG95/TokenCut" -> "valeoai/LOST"
"YangtaoWANG95/TokenCut" -> "lukemelas/deep-spectral-segmentation" ["e"=1]
"YangtaoWANG95/TokenCut" -> "NVlabs/FreeSOLO"
"YangtaoWANG95/TokenCut" -> "XiSHEN0220/WatermarkReco" ["e"=1]
"stephen-v/tensorflow_alexnet_classify" -> "jireh-father/tensorflow-alexnet"
"stephen-v/tensorflow_alexnet_classify" -> "hjptriplebee/AlexNet_with_tensorflow"
"lxtGH/CAE" -> "cmu-enyac/supmae"
"jbohnslav/opencv_transforms" -> "YU-Zhiyang/opencv_transforms_torchvision"
"NVIDIA-AI-IOT/yolov4_deepstream" -> "DanaHan/Yolov5-in-Deepstream-5.0" ["e"=1]
"NVIDIA-AI-IOT/yolov4_deepstream" -> "marcoslucianops/DeepStream-Yolo" ["e"=1]
"NVIDIA-AI-IOT/yolov4_deepstream" -> "NVIDIA-AI-IOT/deepstream-occupancy-analytics" ["e"=1]
"NVIDIA-AI-IOT/yolov4_deepstream" -> "NVIDIA-AI-IOT/deepstream_tlt_apps" ["e"=1]
"NVIDIA-AI-IOT/yolov4_deepstream" -> "ceccocats/tkDNN"
"NVIDIA-AI-IOT/yolov4_deepstream" -> "NVIDIA-AI-IOT/deepstream_reference_apps" ["e"=1]
"NVIDIA-AI-IOT/yolov4_deepstream" -> "NVIDIA-AI-IOT/deepstream_python_apps" ["e"=1]
"NVIDIA-AI-IOT/yolov4_deepstream" -> "linghu8812/tensorrt_inference"
"NVIDIA-AI-IOT/yolov4_deepstream" -> "thatbrguy/Deep-Stream-ONNX" ["e"=1]
"NVIDIA-AI-IOT/yolov4_deepstream" -> "NVIDIA-AI-IOT/deepstream_pose_estimation" ["e"=1]
"NVIDIA-AI-IOT/yolov4_deepstream" -> "CaoWGG/TensorRT-YOLOv4"
"NVIDIA-AI-IOT/yolov4_deepstream" -> "isarsoft/yolov4-triton-tensorrt" ["e"=1]
"NVIDIA-AI-IOT/yolov4_deepstream" -> "enazoe/yolo-tensorrt"
"NVIDIA-AI-IOT/yolov4_deepstream" -> "NVIDIA-AI-IOT/deepstream_lpr_app" ["e"=1]
"NVIDIA-AI-IOT/yolov4_deepstream" -> "jkjung-avt/tensorrt_demos"
"mlss-2019/slides" -> "mlss-2019/tutorials"
"IcarusWizard/MAE" -> "FlyEgle/MAE-pytorch"
"fudannlp16/focal-loss" -> "zhezh/focalloss"
"fudannlp16/focal-loss" -> "ailias/Focal-Loss-implement-on-Tensorflow"
"umbertogriffo/focal-loss-keras" -> "mkocabas/focal-loss-keras"
"umbertogriffo/focal-loss-keras" -> "maozezhong/focal_loss_multi_class"
"umbertogriffo/focal-loss-keras" -> "artemmavrin/focal-loss"
"umbertogriffo/focal-loss-keras" -> "nabsabraham/focal-tversky-unet" ["e"=1]
"umbertogriffo/focal-loss-keras" -> "kobiso/CBAM-keras" ["e"=1]
"umbertogriffo/focal-loss-keras" -> "Umi-you/FocalLoss"
"umbertogriffo/focal-loss-keras" -> "Tony607/Focal_Loss_Keras"
"Epiphqny/SOLO" -> "Epiphqny/CondInst"
"Epiphqny/SOLO" -> "Epiphqny/Yolact_fcos"
"NanoNets/RaspberryPi-ObjectDetection-TensorFlow" -> "NanoNets/TF-OD-Pi-Test"
"NanoNets/RaspberryPi-ObjectDetection-TensorFlow" -> "NanoNets/IndianRoadsObjectDetectionDataset"
"NanoNets/RaspberryPi-ObjectDetection-TensorFlow" -> "NanoNets/object-detection-sample-python"
"1adrianb/pytorch-estimate-flops" -> "sovrasov/flops-counter.pytorch"
"jsbroks/awesome-dataset-tools" -> "taivop/awesome-data-annotation"
"jsbroks/awesome-dataset-tools" -> "heartexlabs/awesome-data-labeling"
"jsbroks/awesome-dataset-tools" -> "l3p-cv/lost"
"jsbroks/awesome-dataset-tools" -> "jsbroks/coco-annotator"
"jsbroks/awesome-dataset-tools" -> "Labelbox/labelbox"
"jsbroks/awesome-dataset-tools" -> "jveitchmichaelis/deeplabel"
"jsbroks/imantics" -> "waspinator/pycococreator"
"jsbroks/imantics" -> "chrise96/image-to-coco-json-converter"
"jsbroks/imantics" -> "jsbroks/coco-annotator"
"jinfagang/kitti-ssd" -> "manutdzou/KITTI_SSD"
"MkuuWaUjinga/leopart" -> "damo-cv/TransFGU"
"arashwan/matrixnet" -> "KiveeDong/CentripetalNet"
"arashwan/matrixnet" -> "CaoWGG/Mask-CenterNet"
"arashwan/matrixnet" -> "Ranchentx/EFGRNet"
"pytorch/hydra-torch" -> "romesco/hydra-lightning"
"wvangansbeke/Unsupervised-Semantic-Segmentation" -> "janghyuncho/PiCIE"
"wvangansbeke/Unsupervised-Semantic-Segmentation" -> "tfzhou/ContrastiveSeg"
"wvangansbeke/Unsupervised-Semantic-Segmentation" -> "kanezaki/pytorch-unsupervised-segmentation-tip"
"wvangansbeke/Unsupervised-Semantic-Segmentation" -> "zdaxie/PixPro"
"wvangansbeke/Unsupervised-Semantic-Segmentation" -> "mhamilton723/STEGO"
"wvangansbeke/Unsupervised-Semantic-Segmentation" -> "lukemelas/deep-spectral-segmentation" ["e"=1]
"wvangansbeke/Unsupervised-Semantic-Segmentation" -> "WXinlong/DenseCL"
"wvangansbeke/Unsupervised-Semantic-Segmentation" -> "YudeWang/SEAM" ["e"=1]
"wvangansbeke/Unsupervised-Semantic-Segmentation" -> "vlfom/RNCDL"
"wvangansbeke/Unsupervised-Semantic-Segmentation" -> "visinf/dense-ulearn-vos" ["e"=1]
"wvangansbeke/Unsupervised-Semantic-Segmentation" -> "lucidrains/pixel-level-contrastive-learning"
"wvangansbeke/Unsupervised-Semantic-Segmentation" -> "facebookresearch/MaskFormer"
"wvangansbeke/Unsupervised-Semantic-Segmentation" -> "dvlab-research/Entity"
"sxhxliang/detectron2_backbone" -> "youngwanLEE/vovnet-detectron2"
"sxhxliang/detectron2_backbone" -> "zzzxxxttt/simple_detectron2_EfficientDet"
"wandb/edu" -> "wandb/awesome-dl-projects"
"eric612/MobileNet-SSD-windows" -> "eric612/Caffe-YOLOv3-Windows"
"salesforce/PCL" -> "Yunfan-Li/Contrastive-Clustering"
"salesforce/PCL" -> "chingyaoc/DCL"
"salesforce/PCL" -> "facebookresearch/swav"
"salesforce/PCL" -> "yukimasano/self-label"
"salesforce/PCL" -> "WXinlong/DenseCL"
"salesforce/PCL" -> "SsnL/align_uniform"
"salesforce/PCL" -> "zhirongw/lemniscate.pytorch"
"salesforce/PCL" -> "yxgeee/SpCL" ["e"=1]
"salesforce/PCL" -> "HobbitLong/SupContrast"
"salesforce/PCL" -> "joshr17/HCL"
"salesforce/PCL" -> "HobbitLong/PyContrast"
"salesforce/PCL" -> "maple-research-lab/AdCo"
"salesforce/PCL" -> "open-mmlab/OpenSelfSup"
"salesforce/PCL" -> "leftthomas/SimCLR"
"salesforce/PCL" -> "iCGY96/awesome_OpenSetRecognition_list" ["e"=1]
"JosephChenHub/CenterNet-TensorRT" -> "xi11xi19/CenterNet2TorchScript"
"JosephChenHub/CenterNet-TensorRT" -> "CaoWGG/TensorRT-CenterNet"
"JosephChenHub/CenterNet-TensorRT" -> "dlunion/tensorRTIntegrate"
"JosephChenHub/CenterNet-TensorRT" -> "eweill-nv/dcnv2_trt"
"onnx/sklearn-onnx" -> "onnx/onnxmltools"
"onnx/sklearn-onnx" -> "jpmml/sklearn2pmml" ["e"=1]
"yihui-he/resnet-cifar10-caffe" -> "yihui-he/resnet-imagenet-caffe"
"yihui-he/resnet-cifar10-caffe" -> "HolmesShuan/ResNet-18-Caffemodel-on-ImageNet"
"yihui-he/resnet-cifar10-caffe" -> "junyuseu/ResNet-on-Cifar10"
"yihui-he/resnet-cifar10-caffe" -> "antingshen/resnet-protofiles"
"yihui-he/resnet-cifar10-caffe" -> "yihui-he/Xception-caffe"
"yihui-he/resnet-cifar10-caffe" -> "twtygqyy/resnet-cifar10"
"XLearning-SCU/2021-CVPR-Completer" -> "XLearning-SCU/2022-TPAMI-DCP"
"XLearning-SCU/2021-CVPR-Completer" -> "XLearning-SCU/2021-CVPR-MvCLN"
"XLearning-SCU/2021-CVPR-Completer" -> "XLearning-SCU/2022-TPAMI-SURE"
"fudan-zvg/SeaFormer" -> "hustvl/TopFormer"
"ucas-vg/Effective-Fusion-Factor" -> "ucas-vg/TOV_mmdetection"
"ucas-vg/Effective-Fusion-Factor" -> "ucas-vg/Instance-level-Scale-Match"
"ShoufaChen/CycleMLP" -> "svip-lab/AS-MLP"
"ShoufaChen/CycleMLP" -> "Andrew-Qibin/VisionPermutator"
"ShoufaChen/CycleMLP" -> "SHI-Labs/Convolutional-MLPs"
"ShoufaChen/CycleMLP" -> "dingmyu/davit" ["e"=1]
"RockeyCoss/Prompt-Segment-Anything" -> "IDEA-Research/Stable-DINO" ["e"=1]
"timctho/mobilenet-v2-tensorflow" -> "ildoonet/tf-mobilenet-v2"
"timctho/mobilenet-v2-tensorflow" -> "neuleaf/MobileNetV2"
"scheckmedia/keras-shufflenet" -> "opconty/keras-shufflenetV2"
"scheckmedia/keras-shufflenet" -> "TropComplique/ShuffleNet-tensorflow"
"nachiket273/One_Cycle_Policy" -> "dkumazaw/onecyclelr"
"zengwang430521/TCFormer" -> "NVlabs/A-ViT"
"WojciechMormul/yolo2" -> "KOD-Chen/YOLOv2-Tensorflow"
"WojciechMormul/yolo2" -> "shishichang/yolov2-tensorflow"
"WojciechMormul/yolo2" -> "yhcc/yolo2"
"facebookresearch/semi-supervised-ImageNet1K-models" -> "facebookresearch/WSL-Images"
"switchablenorms/Sparse_SwitchNorm" -> "switchablenorms/SwitchNorm_Segmentation"
"Raymond-sci/AND" -> "neuroailab/LocalAggregation"
"iwatake2222/self-driving-ish_computer_vision_system" -> "iwatake2222/InferenceHelper"
"iwatake2222/self-driving-ish_computer_vision_system" -> "NobuoTsukamoto/tensorrt-examples"
"iwatake2222/self-driving-ish_computer_vision_system" -> "shouxieai/learning-cuda-trt"
"iwatake2222/self-driving-ish_computer_vision_system" -> "YanbaruRobotics/PythonPilot"
"iwatake2222/self-driving-ish_computer_vision_system" -> "voldemortX/pytorch-auto-drive" ["e"=1]
"iwatake2222/self-driving-ish_computer_vision_system" -> "hpc203/YOLOP-opencv-dnn" ["e"=1]
"xiaohaoChen/rrc_detection" -> "zhaoweicai/mscnn"
"xiaohaoChen/rrc_detection" -> "bharatsingh430/Deformable-ConvNets"
"xiaohaoChen/rrc_detection" -> "sanghoon/pva-faster-rcnn"
"xiaohaoChen/rrc_detection" -> "xiaolonw/adversarial-frcnn"
"xiaohaoChen/rrc_detection" -> "taokong/RON"
"xiaohaoChen/rrc_detection" -> "smallcorgi/3D-Deepbox" ["e"=1]
"xiaohaoChen/rrc_detection" -> "Orpine/py-R-FCN"
"xiaohaoChen/rrc_detection" -> "bharatsingh430/soft-nms"
"xiaohaoChen/rrc_detection" -> "szq0214/DSOD"
"xiaohaoChen/rrc_detection" -> "felixgwu/mask_rcnn_pytorch"
"xiaohaoChen/rrc_detection" -> "umautobots/vod-converter"
"xiaohaoChen/rrc_detection" -> "BichenWuUCB/squeezeDet" ["e"=1]
"xiaohaoChen/rrc_detection" -> "daijifeng001/R-FCN"
"youweiliang/evit" -> "raoyongming/DynamicViT"
"Atcold/PyTorch-Deep-Learning-Minicourse" -> "Kaixhin/grokking-pytorch"
"PaddlePaddle/PASSL" -> "PaddlePaddle/VIMER" ["e"=1]
"PaddlePaddle/PASSL" -> "PaddlePaddle/PaddleSports"
"PaddlePaddle/PASSL" -> "PaddlePaddle/Paddle3D"
"PaddlePaddle/PASSL" -> "PaddlePaddle/hapi"
"PaddlePaddle/PASSL" -> "PaddlePaddle/CINN"
"PaddlePaddle/PASSL" -> "PaddlePaddle/InterpretDL"
"jinfagang/thor" -> "jinfagang/alfred"
"jinfagang/thor" -> "jinfagang/CenterNet_Pro_Max"
"jinfagang/thor" -> "dongfangduoshou123/YoloV3-TensorRT" ["e"=1]
"dingyuqing05/trt2022_wenet" -> "huismiling/wenet_trt8"
"dingyuqing05/trt2022_wenet" -> "TRT2022/MST-plus-plus-TensorRT"
"nerox8664/onnx2keras" -> "lain-m21/pytorch-to-tflite-example"
"PINTO0309/Tensorflow-bin" -> "PINTO0309/TensorflowLite-bin"
"PINTO0309/Tensorflow-bin" -> "lhelontra/tensorflow-on-arm"
"PINTO0309/Tensorflow-bin" -> "nmilosev/pytorch-arm-builds"
"PINTO0309/Tensorflow-bin" -> "PINTO0309/Bazel_bin"
"PINTO0309/Tensorflow-bin" -> "QuantuMobileSoftware/mobile_detector"
"PINTO0309/Tensorflow-bin" -> "EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi"
"PINTO0309/Tensorflow-bin" -> "EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi"
"hujiecpp/YOSO" -> "hujiecpp/ISTR"
"hujiecpp/YOSO" -> "ChenhongyiYang/GPViT"
"facebookresearch/unbiased-teacher-v2" -> "facebookresearch/unbiased-teacher"
"facebookresearch/unbiased-teacher-v2" -> "hikvision-research/SSOD"
"FrancescoSaverioZuppichini/ViT" -> "FrancescoSaverioZuppichini/glasses"
"jinyu121/DW2TF" -> "mystic123/tensorflow-yolo-v3"
"PINTO0309/simple-onnx-processing-tools" -> "fateshelled/OnnxGraphQt"
"digantamisra98/Echo" -> "digantamisra98/Mila"
"Sense-X/MixMIM" -> "Alpha-VL/FastConvMAE"
"ENOT-AutoDL/onnx2torch" -> "ZhangGe6/onnx-modifier"
"ENOT-AutoDL/onnx2torch" -> "OML-Team/open-metric-learning" ["e"=1]
"gupta-abhay/ViT" -> "jeonsworld/ViT-pytorch"
"ShuangXieIrene/mobilenet-v2" -> "timctho/mobilenet-v2-tensorflow"
"d-li14/lambda.pytorch" -> "d-li14/dot-product-attention"
"pytorch/ort" -> "microsoft/onnxruntime-training-examples"
"jshilong/GroupRCNN" -> "jshilong/DDQ" ["e"=1]
"jshilong/GroupRCNN" -> "jshilong/FisherPruning"
"jshilong/GroupRCNN" -> "open-mmlab/mmeval"
"jshilong/GroupRCNN" -> "open-mmlab/mim"
"jshilong/GroupRCNN" -> "open-mmlab/mim-example"
"NVlabs/A-ViT" -> "MengLcool/AdaViT"
"NVlabs/A-ViT" -> "adaptivetokensampling/ATS"
"lwchen6309/unsupervised-image-segmentation-by-WNet-with-NormalizedCut" -> "taoroalin/WNet"
"lwchen6309/unsupervised-image-segmentation-by-WNet-with-NormalizedCut" -> "Andrew-booler/W-Net"
"lwchen6309/unsupervised-image-segmentation-by-WNet-with-NormalizedCut" -> "zwenaing/unsupervised-image-segmentation"
"lessw2020/Ranger21" -> "lessw2020/Ranger-Deep-Learning-Optimizer"
"lessw2020/Ranger21" -> "lessw2020/Best-Deep-Learning-Optimizers"
"lessw2020/Ranger21" -> "amirgholami/adahessian" ["e"=1]
"lessw2020/Ranger21" -> "facebookresearch/madgrad"
"lessw2020/Ranger21" -> "lucidrains/Adan-pytorch" ["e"=1]
"lessw2020/Ranger21" -> "lessw2020/Ranger22"
"beniz/deepdetect" -> "DeepScale/SqueezeNet"
"beniz/deepdetect" -> "soumith/convnet-benchmarks" ["e"=1]
"beniz/deepdetect" -> "facebook/fb.resnet.torch"
"beniz/deepdetect" -> "ydwen/caffe-face" ["e"=1]
"beniz/deepdetect" -> "soeaver/caffe-model"
"beniz/deepdetect" -> "jay-mahadeokar/pynetbuilder"
"beniz/deepdetect" -> "Orpine/py-R-FCN"
"beniz/deepdetect" -> "daijifeng001/MNC" ["e"=1]
"beniz/deepdetect" -> "daijifeng001/R-FCN"
"beniz/deepdetect" -> "torrvision/crfasrnn" ["e"=1]
"beniz/deepdetect" -> "facebook/fb-caffe-exts" ["e"=1]
"beniz/deepdetect" -> "NervanaSystems/neon" ["e"=1]
"beniz/deepdetect" -> "tornadomeet/mxnet-face" ["e"=1]
"beniz/deepdetect" -> "yahoo/CaffeOnSpark" ["e"=1]
"beniz/deepdetect" -> "zer0n/deepframeworks" ["e"=1]
"felixlaumon/deform-conv" -> "Zardinality/TF-deformable-conv"
"felixlaumon/deform-conv" -> "bharatsingh430/Deformable-ConvNets"
"felixlaumon/deform-conv" -> "oeway/pytorch-deform-conv"
"felixlaumon/deform-conv" -> "Zardinality/TF_Deformable_Net"
"felixlaumon/deform-conv" -> "msracver/Deformable-ConvNets"
"felixlaumon/deform-conv" -> "ericlin79119/IC-STN"
"felixlaumon/deform-conv" -> "xmyqsh/FPN"
"felixlaumon/deform-conv" -> "bharatsingh430/soft-nms"
"felixlaumon/deform-conv" -> "bharatsingh430/py-R-FCN-multiGPU"
"felixlaumon/deform-conv" -> "felixgwu/mask_rcnn_pytorch"
"felixlaumon/deform-conv" -> "daijifeng001/MNC" ["e"=1]
"felixlaumon/deform-conv" -> "MarvinTeichmann/tensorflow-fcn" ["e"=1]
"felixlaumon/deform-conv" -> "msracver/Deep-Feature-Flow" ["e"=1]
"felixlaumon/deform-conv" -> "msracver/FCIS"
"felixlaumon/deform-conv" -> "Orpine/py-R-FCN"
"archinetai/surgeon-pytorch" -> "lucidrains/Adan-pytorch" ["e"=1]
"archinetai/surgeon-pytorch" -> "archinetai/audio-diffusion-pytorch" ["e"=1]
"archinetai/surgeon-pytorch" -> "archinetai/audio-data-pytorch" ["e"=1]
"archinetai/surgeon-pytorch" -> "assafshocher/ResizeRight" ["e"=1]
"archinetai/surgeon-pytorch" -> "lucidrains/lion-pytorch" ["e"=1]
"archinetai/surgeon-pytorch" -> "csteinmetz1/auraloss" ["e"=1]
"archinetai/surgeon-pytorch" -> "crowsonkb/k-diffusion" ["e"=1]
"aim-uofa/adet" -> "yinghdb/EmbedMask"
"aim-uofa/adet" -> "xhzdeng/stela" ["e"=1]
"aim-uofa/adet" -> "poodarchu/DETR.detectron2"
"aim-uofa/adet" -> "Yuliang-Liu/Box_Discretization_Network" ["e"=1]
"aim-uofa/adet" -> "Yuliang-Liu/bezier_curve_text_spotting" ["e"=1]
"aim-uofa/adet" -> "StevenGrove/TreeFilter-Torch"
"IgorSusmelj/barlowtwins" -> "yaohungt/Barlow-Twins-HSIC"
"IgorSusmelj/barlowtwins" -> "IgorSusmelj/simsiam-cifar10"
"christopher5106/last_caffe_with_stn" -> "daerduoCarey/SpatialTransformerLayer"
"christopher5106/last_caffe_with_stn" -> "XiaoxiaoGuo/caffe-stn"
"SamsungLabs/ASAM" -> "juntang-zhuang/GSAM"
"sayakpaul/probing-vits" -> "jacobgil/vit-explain"
"lim0606/caffe-googlenet-bn" -> "smichalowski/google_inception_v3_for_caffe"
"lim0606/caffe-googlenet-bn" -> "ChenglongChen/caffe-windows"
"hadim/docker-tensorflow-builder" -> "yaroslavvb/tensorflow-community-wheels"
"opconty/pixellink_keras" -> "opconty/keras_std"
"apple/ml-mobileone" -> "shoutOutYangJie/MobileOne"
"apple/ml-mobileone" -> "federicopozzi33/MobileOne-PyTorch"
"apple/ml-mobileone" -> "JierunChen/FasterNet"
"apple/ml-mobileone" -> "DingXiaoH/RepOptimizers" ["e"=1]
"apple/ml-mobileone" -> "snap-research/EfficientFormer"
"apple/ml-mobileone" -> "apple/ml-cvnets"
"apple/ml-mobileone" -> "hkzhang91/ParC-Net"
"apple/ml-mobileone" -> "ChengpengChen/RepGhost"
"lifeomic/sparkflow" -> "dmmiller612/sparktorch"
"daerduoCarey/SpatialTransformerLayer" -> "XiaoxiaoGuo/caffe-stn"
"daerduoCarey/SpatialTransformerLayer" -> "christopher5106/last_caffe_with_stn"
"daerduoCarey/SpatialTransformerLayer" -> "kevinlin311tw/caffe-augmentation"
"daerduoCarey/SpatialTransformerLayer" -> "knsong/caffe-mt"
"daerduoCarey/SpatialTransformerLayer" -> "qassemoquab/stnbhwd" ["e"=1]
"hustzxd/z0" -> "hustzxd/z1"
"shicai/SENet-Caffe" -> "shicai/DenseNet-Caffe"
"shicai/SENet-Caffe" -> "sciencefans/Focal-Loss"
"shicai/SENet-Caffe" -> "chuanqi305/SqueezeNet-SSD"
"unsky/Deformable-ConvNets-caffe" -> "sciencefans/Focal-Loss"
"unsky/Deformable-ConvNets-caffe" -> "shicai/DenseNet-Caffe"
"unsky/Deformable-ConvNets-caffe" -> "zimenglan-sysu-512/Focal-Loss"
"open-mmlab/cocoapi" -> "open-mmlab/gkmeans"
"open-mmlab/cocoapi" -> "open-mmlab/caffe"
"open-mmlab/cocoapi" -> "open-mmlab/pytorch_sphinx_theme"
"wenxinxu/ResNeXt-in-tensorflow" -> "taki0112/ResNeXt-Tensorflow"
"Separius/SimCLRv2-Pytorch" -> "tonylins/simclr-converter"
"samiraabnar/attention_flow" -> "jacobgil/vit-explain"
"hikvision-research/DomainGeneralization" -> "hikvision-research/SlimDA"
"jshilong/FisherPruning" -> "open-mmlab/mim-example"
"jshilong/FisherPruning" -> "jshilong/GroupRCNN"
"jshilong/FisherPruning" -> "open-mmlab/mim"
"Zardinality/TF-deformable-conv" -> "Zardinality/TF_Deformable_Net"
"Zardinality/TF-deformable-conv" -> "felixlaumon/deform-conv"
"Zardinality/TF-deformable-conv" -> "DHZS/tf-deformable-conv-layer"
"Zardinality/TF-deformable-conv" -> "BIGKnight/deformable_conv2d_v2_tensorflow"
"microsoft/onnxruntime-extensions" -> "microsoft/onnxconverter-common"
"hujiecpp/ISTR" -> "hujiecpp/YOSO"
"hujiecpp/ISTR" -> "megvii-research/SOLQ"
"hujiecpp/ISTR" -> "easton-cau/SOTR"
"hujiecpp/ISTR" -> "hustvl/QueryInst"
"nitnelave/pycaffe_tutorial" -> "davidstutz/caffe-tools"
"run-ai/docs" -> "run-ai/rntop"
"run-ai/genv" -> "run-ai/rntop"
"run-ai/genv" -> "run-ai/docs"
"run-ai/genv" -> "run-ai/jupyterlab_genv"
"run-ai/genv" -> "run-ai/vscode-genv"
"run-ai/genv" -> "xl0/lovely-tensors"
"ljanyst/ssd-tensorflow" -> "HiKapok/SSD.TensorFlow"
"ljanyst/ssd-tensorflow" -> "LevinJ/SSD_tensorflow_VOC"
"ljanyst/ssd-tensorflow" -> "seann999/ssd_tensorflow"
"open-mmlab/denseflow" -> "innerlee/setup"
"open-mmlab/denseflow" -> "zhenyingfang/Awesome-Temporal-Action-Detection-Temporal-Action-Proposal-Generation" ["e"=1]
"open-mmlab/denseflow" -> "HumamAlwassel/TSP" ["e"=1]
"open-mmlab/denseflow" -> "MCG-NJU/RTD-Action" ["e"=1]
"open-mmlab/denseflow" -> "TencentYoutuResearch/ActionDetection-AFSD" ["e"=1]
"open-mmlab/denseflow" -> "yjxiong/dense_flow" ["e"=1]
"open-mmlab/denseflow" -> "open-mmlab/pre-commit-hooks"
"open-mmlab/denseflow" -> "SDOlivia/FineGym"
"open-mmlab/denseflow" -> "open-mmlab/mim"
"open-mmlab/denseflow" -> "amazon-research/long-short-term-transformer" ["e"=1]
"open-mmlab/denseflow" -> "MCG-NJU/TDN" ["e"=1]
"zplizzi/tensorflow-fast-rcnn" -> "yuxng/tensorflow"
"zplizzi/tensorflow-fast-rcnn" -> "DeepRNN/object_detection"
"xmba15/onnx_runtime_cpp" -> "tenglike1997/onnxruntime-projects"
"xmba15/onnx_runtime_cpp" -> "leimao/ONNX-Runtime-Inference"
"davidjesusacu/polyrnn-pp" -> "fidler-lab/polyrnn-pp-pytorch"
"davidjesusacu/polyrnn-pp" -> "scaelles/DEXTR-PyTorch"
"persistforever/yolo-tensorflow" -> "ruiminshen/yolo-tf"
"persistforever/yolo-tensorflow" -> "PaulChongPeng/YOLO2TensorFlow"
"persistforever/yolo-tensorflow" -> "shishichang/yolov2-tensorflow"
"persistforever/yolo-tensorflow" -> "wenxichen/tensorflow_yolo2"
"persistforever/yolo-tensorflow" -> "dshahrokhian/YOLO_tensorflow"
"HiKapok/X-Detector" -> "TropComplique/light-head-rcnn"
"HiKapok/X-Detector" -> "HiKapok/PSROIAlign"
"YU-Zhiyang/opencv_transforms_torchvision" -> "jbohnslav/opencv_transforms"
"hunto/image_classification_sota" -> "hunto/DyRep" ["e"=1]
"archon159/SELOR" -> "Sungwon-Han/FEDX"
"archon159/SELOR" -> "KSB21ST/MINI-ARC"
"craftGBD/craftGBD" -> "byangderek/CRAFT"
"craftGBD/craftGBD" -> "terrychenism/ResNeXt"
"craftGBD/craftGBD" -> "sanghoon/pva-faster-rcnn"
"craftGBD/craftGBD" -> "yjxiong/caffe" ["e"=1]
"craftGBD/craftGBD" -> "Orpine/py-R-FCN"
"extreme-assistant/survey-computer-vision-2021" -> "extreme-assistant/survey-computer-vision-2020"
"revilokeb/inception_resnetv2_caffe" -> "lim0606/torch-inception-resnet-v2"
"TRT2022/MST-plus-plus-TensorRT" -> "dingyuqing05/trt2022_wenet"
"TRT2022/MST-plus-plus-TensorRT" -> "chenlamei/MobileVit_TensorRT"
"TRT2022/MST-plus-plus-TensorRT" -> "huismiling/wenet_trt8"
"huismiling/wenet_trt8" -> "dingyuqing05/trt2022_wenet"
"xbq1994/HAA" -> "lxc86739795/parsing_platform"
"xbq1994/HAA" -> "JDAI-CV/Partial-Person-ReID"
"xbq1994/HAA" -> "JDAI-CV/DSD-SATN"
"xbq1994/HAA" -> "YuhaoCheng/PyAnomaly"
"xbq1994/HAA" -> "lxc86739795/vehicle_reid_by_parsing"
"hustzxd/z1" -> "hustzxd/z0"
"hustzxd/z1" -> "gklz1982/caffe-yolov2"
"shicai/Weighted_Softmax_Loss" -> "Longqi-S/Focal-Loss"
"shicai/Weighted_Softmax_Loss" -> "silver-rush/Weighted_Softmax_Loss"
"smichalowski/google_inception_v3_for_caffe" -> "n3011/Inception_v3_GoogLeNet"
"smichalowski/google_inception_v3_for_caffe" -> "lim0606/caffe-googlenet-bn"
"smichalowski/google_inception_v3_for_caffe" -> "pertusa/InceptionBN-21K-for-Caffe" ["e"=1]
"smichalowski/google_inception_v3_for_caffe" -> "revilokeb/inception_resnetv2_caffe"
"PaddlePaddle/PaddleScience" -> "PaddlePaddle/CINN"
"PaddlePaddle/PaddleScience" -> "PaddlePaddle/community"
"SwinTransformer/Feature-Distillation" -> "SwinTransformer/Simple-21K-Detection"
"HiKapok/PSROIAlign" -> "HiKapok/X-Detector"
"alfonsolink/tf_rfcn" -> "alfonsolink/tensorflow_user_ops"
"zimenglan-sysu-512/Focal-Loss" -> "sciencefans/Focal-Loss"
"zimenglan-sysu-512/Focal-Loss" -> "Longqi-S/Focal-Loss"
"zimenglan-sysu-512/Focal-Loss" -> "chuanqi305/FocalLoss"
"switchablenorms/SwitchNorm_Segmentation" -> "switchablenorms/Sparse_SwitchNorm"
"SweetyTian/efficientdet" -> "HardLaugh/EfficientDet-bifpn"
"SweetyTian/efficientdet" -> "kentaroy47/efficientdet.pytorch"
"microsoft/onnxconverter-common" -> "microsoft/OLive"
"microsoft/onnxconverter-common" -> "microsoft/onnxruntime-extensions"
"SsnL/moco_align_uniform" -> "SsnL/align_uniform"
"lxc86739795/parsing_platform" -> "xbq1994/HAA"
"lxc86739795/parsing_platform" -> "JDAI-CV/DSD-SATN"
"lxc86739795/parsing_platform" -> "YuhaoCheng/PyAnomaly"
"lxc86739795/parsing_platform" -> "lxc86739795/vehicle_reid_by_parsing"
"lxc86739795/parsing_platform" -> "JDAI-CV/Partial-Person-ReID"
"PaddlePaddle/benchmark" -> "PaddlePaddle/paddle-ce-latest-kpis"
"PaddlePaddle/benchmark" -> "PaddlePaddle/continuous_evaluation"
"PaddlePaddle/benchmark" -> "PaddlePaddle/PaddleTest"
"NobuoTsukamoto/tensorrt-examples" -> "NobuoTsukamoto/benchmarks"
"commonsmachinery/blockhash-python" -> "commonsmachinery/blockhash"
"opendatalab/dsdl-docs" -> "opendatalab/opendatalab-python-sdk"
"opendatalab/dsdl-docs" -> "opendatalab/opendatalab-datasets"
"opendatalab/dsdl-docs" -> "opendatalab/label-u"
"opendatalab/opendatalab-datasets" -> "opendatalab/opendatalab-python-sdk"
"opendatalab/opendatalab-datasets" -> "opendatalab/dsdl-docs"
"opendatalab/opendatalab-datasets" -> "opendatalab/label-u"
"opendatalab/opendatalab-python-sdk" -> "opendatalab/dsdl-docs"
"opendatalab/opendatalab-python-sdk" -> "opendatalab/opendatalab-datasets"
"opendatalab/opendatalab-python-sdk" -> "opendatalab/label-u"
"kuangliu/pytorch-ssd" -> "kuangliu/torchcv"
"kuangliu/pytorch-ssd" -> "kuangliu/pytorch-yolov2"
"lab-ml/app" -> "lab-ml/remote"
"PaddlePaddle/paddle-ce-latest-kpis" -> "PaddlePaddle/continuous_evaluation"
"junyuseu/ResNet-on-Cifar10" -> "yihui-he/resnet-cifar10-caffe"
"lim0606/torch-inception-resnet-v2" -> "revilokeb/inception_resnetv2_caffe"
"roytseng-tw/mask-rcnn.pytorch" -> "tensorboy/Pytorch_Mask_RCNN"
"kobiso/SENet-tensorflow-slim" -> "kobiso/Image-Rotation-and-Cropping-tensorflow"
"wilile26811249/MobileViT" -> "chinhsuanwu/mobilevit-pytorch"
"alfonsolink/tensorflow_user_ops" -> "alfonsolink/tf_rfcn"
"hkzhang95/Awesome-CV-bibfiles" -> "PeizeSun/ApplicationMaterial"
"austingg/MobileNet-v2-caffe" -> "suzhenghang/MobileNetv2"
"austingg/MobileNet-v2-caffe" -> "farmingyard/caffe-mobilenet_v2"
"neuroailab/LocalAggregation-Pytorch" -> "neuroailab/LocalAggregation"
"zhezh/focalloss" -> "fudannlp16/focal-loss"
"yhwang-hub/dl_model_deploy" -> "huangzongmou/yolov8-pytorch_quantization"
"dcheng-utoronto/darnet" -> "ahatamiz/dals"
"dmarcosg/DSAC" -> "dcheng-utoronto/darnet"
"dmarcosg/DSAC" -> "shirgur/ACDRNet" ["e"=1]
"dmarcosg/DSAC" -> "fidler-lab/delse" ["e"=1]
"opendatalab/label-u" -> "opendatalab/dsdl-docs"
"opendatalab/label-u" -> "opendatalab/opendatalab-python-sdk"
"opendatalab/label-u" -> "opendatalab/opendatalab-datasets"
"neuroailab/LocalAggregation" -> "neuroailab/LocalAggregation-Pytorch"
"lampsonSong/tinySSD" -> "chuanqi305/SqueezeNet-SSD"
"FeixiangLu/PaddleSports" -> "PaddlePaddle/PaddleSports"
"hunto/LightViT" -> "hunto/image_classification_sota"
"avirambh/MSDNet-GCN" -> "gaohuang/MSDNet"
"l3p-cv/lost_semi_auto_pipes" -> "l3p-cv/lost_yolov3_tf2"
"l3p-cv/lost_yolov3_tf2" -> "l3p-cv/lost_semi_auto_pipes"
"kobiso/Image-Rotation-and-Cropping-tensorflow" -> "kobiso/Super-convergence-tensorflow-slim"
"open-mmlab/CLUE" -> "open-mmlab/gkmeans"
"open-mmlab/caffe" -> "open-mmlab/gkmeans"
"open-mmlab/mmstyles" -> "open-mmlab/gkmeans"
"open-mmlab/mmstyles" -> "open-mmlab/caffe"
"open-mmlab/mmstyles" -> "open-mmlab/polynet"
"open-mmlab/polynet" -> "open-mmlab/gkmeans"
"open-mmlab/polynet" -> "open-mmlab/caffe"
"opconty/keras_std" -> "opconty/keras_std_plus_plus"
"opconty/keras_std_plus_plus" -> "opconty/keras_std"
"Spijkervet/BYOL" -> "sthalles/PyTorch-BYOL"
"lwplw/caffe_yolov2" -> "lwplw/darknet2caffe"
"PaulChongPeng/YOLO2TensorFlow" -> "shishichang/yolov2-tensorflow"
"Yibin122/TensorRT-SMOKE" -> "storrrrrrrrm/tensorrt_smoke"
"JuliaLang/julia" ["l"="33.342,35.418"]
"rust-lang/rust" ["l"="-9.065,4.407"]
"fonsp/Pluto.jl" ["l"="17.127,39.042"]
"FluxML/Flux.jl" ["l"="17.083,38.994"]
"pytorch/pytorch" ["l"="33.791,35.479"]
"scikit-learn/scikit-learn" ["l"="33.568,35.426"]
"numpy/numpy" ["l"="23.057,4.516"]
"tensorflow/tensorflow" ["l"="33.533,35.343"]
"python/cpython" ["l"="23.098,4.354"]
"google/jax" ["l"="30.277,32.484"]
"neovim/neovim" ["l"="-10.754,-22.69"]
"vlang/v" ["l"="-8.933,4.149"]
"golang/go" ["l"="-13.114,0.681"]
"JuliaLang/IJulia.jl" ["l"="17.054,38.953"]
"ziglang/zig" ["l"="-8.917,4.292"]
"matplotlib/matplotlib" ["l"="22.999,4.569"]
"opencv/opencv" ["l"="33.742,35.407"]
"opencv/opencv_contrib" ["l"="33.965,35.312"]
"tensorflow/models" ["l"="33.821,35.342"]
"spmallick/learnopencv" ["l"="34.008,35.414"]
"BVLC/caffe" ["l"="33.749,35.334"]
"keras-team/keras" ["l"="33.65,35.369"]
"tesseract-ocr/tesseract" ["l"="33.686,35.533"]
"pjreddie/darknet" ["l"="34.122,35.348"]
"ageitgey/face_recognition" ["l"="33.833,35.397"]
"FFmpeg/FFmpeg" ["l"="-27.531,-16.947"]
"ultralytics/yolov5" ["l"="34.228,35.577"]
"CMU-Perceptual-Computing-Lab/openpose" ["l"="33.917,35.42"]
"facebookresearch/Detectron" ["l"="34.121,35.392"]
"aymericdamien/TensorFlow-Examples" ["l"="23.614,31.017"]
"torvalds/linux" ["l"="28.985,-20.074"]
"josephmisiti/awesome-machine-learning" ["l"="23.451,30.873"]
"vinta/awesome-python" ["l"="28.565,-20.426"]
"TheAlgorithms/Python" ["l"="28.308,-20.556"]
"facebook/react" ["l"="27.099,-26.824"]
"kubernetes/kubernetes" ["l"="-10.647,-0.52"]
"sindresorhus/awesome" ["l"="28.545,-20.207"]
"Russell91/TensorBox" ["l"="34.353,35.043"]
"Russell91/ReInspect" ["l"="34.43,35.039"]
"gliese581gg/YOLO_tensorflow" ["l"="34.341,35.122"]
"DrewNF/Tensorflow_Object_Tracking_Video" ["l"="34.355,35.013"]
"zplizzi/tensorflow-fast-rcnn" ["l"="34.375,34.978"]
"mitmul/chainer-faster-rcnn" ["l"="34.053,30.426"]
"nivwusquorum/tensorflow-deepq" ["l"="24.832,35.894"]
"ethereon/caffe-tensorflow" ["l"="34.278,35.111"]
"ppwwyyxx/tensorpack" ["l"="34.217,35.125"]
"Guanghan/ROLO" ["l"="32.477,36.101"]
"Orpine/py-R-FCN" ["l"="34.464,35.072"]
"precedenceguo/mx-rcnn" ["l"="32.994,35.797"]
"MarvinTeichmann/tensorflow-fcn" ["l"="31.562,36.805"]
"BichenWuUCB/squeezeDet" ["l"="31.458,36.84"]
"CharlesShang/TFFRCNN" ["l"="34.36,35.105"]
"jazzsaxmafia/show_attend_and_tell.tensorflow" ["l"="31.5,34.5"]
"pandas-dev/pandas" ["l"="23.049,4.563"]
"dmlc/xgboost" ["l"="25.345,33.814"]
"fchollet/keras" ["l"="23.498,31.087"]
"scrapy/scrapy" ["l"="22.724,4.445"]
"openai/gym" ["l"="24.91,36.054"]
"scipy/scipy" ["l"="23.004,4.525"]
"ufoym/deepo" ["l"="34.063,35.331"]
"floydhub/dl-docker" ["l"="34.062,35.245"]
"NVIDIA/nvidia-docker" ["l"="34.026,35.469"]
"RedditSota/state-of-the-art-result-for-machine-learning-problems" ["l"="23.542,31.075"]
"vahidk/EffectiveTensorflow" ["l"="23.439,31.055"]
"aleju/imgaug" ["l"="34.228,35.448"]
"Microsoft/MMdnn" ["l"="34.266,35.282"]
"facebookresearch/visdom" ["l"="34.137,35.481"]
"facebookresearch/maskrcnn-benchmark" ["l"="34.349,35.43"]
"uber/horovod" ["l"="34.123,35.271"]
"jhfjhfj1/autokeras" ["l"="25.619,33.813"]
"uber/pyro" ["l"="25.461,33.65"]
"PAIR-code/facets" ["l"="25.452,33.857"]
"kjw0612/awesome-deep-vision" ["l"="23.42,31"]
"kailashahirwar/cheatsheets-ai" ["l"="23.479,30.954"]
"facebookresearch/dino" ["l"="34.483,35.939"]
"facebookresearch/deit" ["l"="34.543,35.888"]
"facebookresearch/vissl" ["l"="34.44,35.967"]
"facebookresearch/mae" ["l"="34.492,35.902"]
"facebookresearch/moco" ["l"="34.484,35.975"]
"lucidrains/vit-pytorch" ["l"="34.403,35.805"]
"microsoft/Swin-Transformer" ["l"="34.463,35.776"]
"facebookresearch/ConvNeXt" ["l"="34.507,35.844"]
"facebookresearch/detr" ["l"="34.415,35.715"]
"facebookresearch/moco-v3" ["l"="34.561,35.993"]
"facebookresearch/swav" ["l"="34.474,36.06"]
"google-research/simclr" ["l"="34.478,36.023"]
"openai/CLIP" ["l"="34.392,35.886"]
"google-research/vision_transformer" ["l"="34.476,35.866"]
"rwightman/pytorch-image-models" ["l"="34.304,35.711"]
"mlfoundations/open_clip" ["l"="31.811,34.814"]
"WZMIAOMIAO/deep-learning-for-image-processing" ["l"="34.353,35.772"]
"mli/paper-reading" ["l"="34.376,35.844"]
"xmu-xiaoma666/External-Attention-pytorch" ["l"="34.458,35.803"]
"open-mmlab/mmdetection" ["l"="34.286,35.537"]
"pytorch/vision" ["l"="34.155,35.568"]
"d2l-ai/d2l-zh" ["l"="24.114,30.939"]
"jacobgil/pytorch-grad-cam" ["l"="34.353,35.723"]
"labmlai/annotated_deep_learning_paper_implementations" ["l"="34.339,35.965"]
"ultralytics/yolov3" ["l"="34.352,35.452"]
"ShusenTang/Dive-into-DL-PyTorch" ["l"="24.088,31.028"]
"Megvii-BaseDetection/YOLOX" ["l"="34.431,35.633"]
"TingsongYu/PyTorch_Tutorial" ["l"="24.231,31.037"]
"cmusatyalab/openface" ["l"="33.917,35.305"]
"davidsandberg/facenet" ["l"="34.008,35.319"]
"TadasBaltrusaitis/OpenFace" ["l"="33.916,35.271"]
"davisking/dlib" ["l"="33.927,35.342"]
"deepinsight/insightface" ["l"="34.075,35.427"]
"kpzhang93/MTCNN_face_detection_alignment" ["l"="34.08,35.262"]
"seetaface/SeetaFaceEngine" ["l"="33.971,35.264"]
"ShiqiYu/libfacedetection" ["l"="34.023,35.379"]
"rbgirshick/py-faster-rcnn" ["l"="34.264,35.232"]
"keras-team/keras-applications" ["l"="34.298,35.258"]
"keras-team/keras-preprocessing" ["l"="25.717,34.21"]
"fchollet/deep-learning-models" ["l"="34.197,35.172"]
"keras-team/keras-contrib" ["l"="31.317,31.6"]
"qubvel/classification_models" ["l"="34.365,35.367"]
"qubvel/efficientnet" ["l"="34.418,35.442"]
"fizyr/keras-retinanet" ["l"="34.32,35.27"]
"keras-team/keras-tuner" ["l"="25.588,33.958"]
"qqwweee/keras-yolo3" ["l"="34.344,35.271"]
"bonlime/keras-deeplab-v3-plus" ["l"="31.547,36.877"]
"qubvel/segmentation_models" ["l"="34.349,35.487"]
"pierluigiferrari/ssd_keras" ["l"="34.389,35.169"]
"flyyufelix/cnn_finetune" ["l"="34.294,35.076"]
"eriklindernoren/Keras-GAN" ["l"="33.795,32.766"]
"keras-team/autokeras" ["l"="25.515,33.928"]
"tensorpack/tensorpack" ["l"="34.319,35.309"]
"deepfakes/faceswap" ["l"="33.508,33.375"]
"matterport/Mask_RCNN" ["l"="34.179,35.346"]
"iperov/DeepFaceLab" ["l"="33.409,33.299"]
"AlexeyAB/darknet" ["l"="34.224,35.408"]
"tzutalin/labelImg" ["l"="34.224,35.359"]
"facebookresearch/detectron2" ["l"="34.249,35.548"]
"Tianxiaomo/pytorch-YOLOv4" ["l"="34.455,35.513"]
"eriklindernoren/PyTorch-YOLOv3" ["l"="34.411,35.368"]
"lutzroeder/netron" ["l"="34.178,35.522"]
"hoya012/deep_learning_object_detection" ["l"="34.305,35.4"]
"david8862/keras-YOLOv3-model-set" ["l"="34.505,35.309"]
"hunglc007/tensorflow-yolov4-tflite" ["l"="34.475,35.349"]
"Ma-Dan/keras-yolo4" ["l"="29.548,35.371"]
"miemie2013/Keras-YOLOv4" ["l"="29.578,35.378"]
"xuannianz/EfficientDet" ["l"="34.51,35.432"]
"zzh8829/yolov3-tf2" ["l"="34.423,35.287"]
"emadboctorx/yolov3-keras-tf2" ["l"="34.479,35.298"]
"fsx950223/mobilenetv2-yolov3" ["l"="34.645,35.249"]
"bubbliiiing/yolov4-keras" ["l"="29.616,35.351"]
"WongKinYiu/CrossStagePartialNetworks" ["l"="34.589,35.5"]
"YunYang1994/TensorFlow2.0-Examples" ["l"="34.456,35.253"]
"experiencor/keras-yolo3" ["l"="34.435,35.213"]
"Adamdad/keras-YOLOv3-mobilenet" ["l"="34.533,35.225"]
"TNTWEN/OpenVINO-YOLOV4" ["l"="32.212,35.806"]
"PengyiZhang/SlimYOLOv3" ["l"="30.97,35.715"]
"PINTO0309/OpenVINO-YoloV3" ["l"="32.221,35.708"]
"tanglang96/DataLoaders_DALI" ["l"="34.391,35.603"]
"Lyken17/Efficient-PyTorch" ["l"="34.4,35.639"]
"megvii-model/ShuffleNet-Series" ["l"="34.559,35.432"]
"NVIDIA/DALI" ["l"="34.321,35.609"]
"JiahuiYu/slimmable_networks" ["l"="28.42,34.421"]
"yaysummeriscoming/DALI_pytorch_demo" ["l"="34.368,35.658"]
"chenxin061/pdarts" ["l"="28.458,34.379"]
"Lyken17/pytorch-OpCounter" ["l"="34.344,35.589"]
"tczhangzhi/pytorch-distributed" ["l"="34.448,35.718"]
"facebookresearch/mobile-vision" ["l"="28.408,34.409"]
"facebookresearch/pycls" ["l"="34.458,35.673"]
"liuzechun/MetaPruning" ["l"="30.876,35.585"]
"mit-han-lab/ProxylessNAS" ["l"="28.442,34.385"]
"guan-yuan/awesome-AutoML-and-Lightweight-Models" ["l"="28.407,34.361"]
"tanglang96/MDENAS" ["l"="28.48,34.41"]
"khanrc/pt.darts" ["l"="28.476,34.37"]
"xingyizhou/CenterNet" ["l"="34.436,35.461"]
"ayooshkathuria/pytorch-yolo-v3" ["l"="34.443,35.305"]
"zylo117/Yet-Another-EfficientDet-Pytorch" ["l"="34.484,35.51"]
"jwyang/faster-rcnn.pytorch" ["l"="34.349,35.388"]
"amusi/CVPR2022-Papers-with-Code" ["l"="34.557,35.829"]
"extreme-assistant/CVPR2022-Paper-Code-Interpretation" ["l"="34.534,35.817"]
"amusi/ECCV2022-Papers-with-Code" ["l"="34.59,35.839"]
"amusi/ICCV2021-Papers-with-Code" ["l"="34.57,35.778"]
"MenghaoGuo/Awesome-Vision-Attentions" ["l"="34.57,35.869"]
"extreme-assistant/ICCV2021-Paper-Code-Interpretation" ["l"="34.577,35.812"]
"dk-liang/Awesome-Visual-Transformer" ["l"="34.543,35.858"]
"yenchenlin/awesome-NeRF" ["l"="33.333,43.109"]
"open-mmlab/mmsegmentation" ["l"="34.499,35.766"]
"huawei-noah/Efficient-AI-Backbones" ["l"="34.656,35.811"]
"amusi/CVPR2021-Papers-with-Code" ["l"="34.515,35.747"]
"52CV/CVPR-2021-Papers" ["l"="34.521,35.786"]
"DWCTOD/CVPR2022-Papers-with-Code-Demo" ["l"="34.629,35.831"]
"dair-ai/ml-visuals" ["l"="34.293,35.778"]
"facebookresearch/segment-anything" ["l"="27.141,30.822"]
"kaixindelele/ChatPaper" ["l"="26.935,30.945"]
"zergtant/pytorch-handbook" ["l"="24.031,31.011"]
"hpcaitech/ColossalAI" ["l"="27.124,30.864"]
"microsoft/VoTT" ["l"="34.49,35.402"]
"openvinotoolkit/cvat" ["l"="34.5,35.481"]
"opencv/cvat" ["l"="34.458,35.432"]
"SkalskiP/make-sense" ["l"="34.591,35.424"]
"wkentaro/labelme" ["l"="34.381,35.445"]
"heartexlabs/awesome-data-labeling" ["l"="34.591,35.444"]
"jsbroks/coco-annotator" ["l"="34.575,35.409"]
"YunYang1994/tensorflow-yolov3" ["l"="34.415,35.247"]
"heartexlabs/label-studio" ["l"="34.418,35.533"]
"abewley/sort" ["l"="32.323,36.112"]
"AlexeyAB/Yolo_mark" ["l"="34.372,35.273"]
"albumentations-team/albumentations" ["l"="34.34,35.673"]
"nwojke/deep_sort" ["l"="32.295,36.107"]
"thtrieu/darkflow" ["l"="34.249,35.2"]
"weiliu89/caffe" ["l"="34.325,35.17"]
"BUPTLdy/Caffe_Code_Analysis" ["l"="34.542,35.16"]
"soeaver/caffe-model" ["l"="34.479,35.12"]
"shicai/Caffe_Manual" ["l"="34.565,35.076"]
"shicai/MobileNet-Caffe" ["l"="34.517,35.142"]
"MichaelXin/Awesome-Caffe" ["l"="34.591,35.029"]
"farmingyard/ShuffleNet" ["l"="34.587,35.106"]
"xialuxi/arcface-caffe" ["l"="35.047,33.412"]
"xxradon/PytorchToCaffe" ["l"="34.61,35.216"]
"yonghenglh6/DepthwiseConvolution" ["l"="34.578,35.129"]
"flame/how-to-optimize-gemm" ["l"="27.734,35.454"]
"hgpvision/darknet" ["l"="34.48,35.248"]
"LitLeo/TensorRT_Tutorial" ["l"="34.628,35.55"]
"D-X-Y/ResNeXt-DenseNet" ["l"="34.435,35.15"]
"prlz77/ResNeXt.pytorch" ["l"="34.36,35.214"]
"D-X-Y/SAN" ["l"="34.826,33.373"]
"D-X-Y/GDAS" ["l"="28.475,34.382"]
"visinf/dpp" ["l"="31.908,33.813"]
"D-X-Y/caffe-faster-rcnn" ["l"="34.569,34.976"]
"InFoCusp/tf_cnnvis" ["l"="34.194,35.102"]
"conan7882/CNN-Visualization" ["l"="34.135,35.055"]
"yosinski/deep-visualization-toolbox" ["l"="34.17,35.228"]
"raghakot/keras-vis" ["l"="25.702,33.779"]
"kvfrans/feature-visualization" ["l"="28.592,34.965"]
"insikk/Grad-CAM-tensorflow" ["l"="28.662,34.93"]
"merantix/picasso" ["l"="34.169,35.106"]
"jacobgil/keras-cam" ["l"="28.647,34.963"]
"keplr-io/quiver" ["l"="25.77,33.733"]
"gaohuang/MSDNet" ["l"="34.412,35.197"]
"smallcorgi/Faster-RCNN_TF" ["l"="34.316,35.111"]
"ry/tensorflow-resnet" ["l"="34.276,35.062"]
"buriburisuri/ac-gan" ["l"="33.783,32.578"]
"chenyuntc/simple-faster-rcnn-pytorch" ["l"="34.393,35.343"]
"ruotianluo/pytorch-faster-rcnn" ["l"="34.407,35.304"]
"longcw/faster_rcnn_pytorch" ["l"="34.393,35.287"]
"amdegroot/ssd.pytorch" ["l"="34.43,35.327"]
"amusi/awesome-object-detection" ["l"="34.384,35.388"]
"endernewton/tf-faster-rcnn" ["l"="34.313,35.186"]
"roytseng-tw/Detectron.pytorch" ["l"="34.447,35.349"]
"tianzhi0549/FCOS" ["l"="34.542,35.426"]
"chainer/chainercv" ["l"="34.376,35.309"]
"ayooshkathuria/YOLO_v3_tutorial_from_scratch" ["l"="34.464,35.313"]
"Lam1360/YOLOv3-model-pruning" ["l"="30.943,35.669"]
"handong1587/handong1587.github.io" ["l"="34.293,35.289"]
"KaiyangZhou/deep-person-reid" ["l"="33.125,36.876"]
"msracver/Deformable-ConvNets" ["l"="34.396,35.26"]
"foolwood/benchmark_results" ["l"="32.461,36.139"]
"Cysu/open-reid" ["l"="33.086,36.835"]
"layumi/Person_reID_baseline_pytorch" ["l"="33.117,36.849"]
"tangzhenyu/SemanticSegmentation_DL" ["l"="31.624,36.913"]
"mrgloom/awesome-semantic-segmentation" ["l"="34.308,35.479"]
"chongyangtao/Awesome-Scene-Text-Recognition" ["l"="29.46,34.112"]
"extreme-assistant/cvpr2019" ["l"="34.419,35.397"]
"michuanhaohao/reid-strong-baseline" ["l"="33.08,36.856"]
"nightrome/really-awesome-gan" ["l"="33.734,32.721"]
"jcjohnson/cnn-benchmarks" ["l"="34.288,35.159"]
"soumith/convnet-benchmarks" ["l"="27.037,34.104"]
"facebook/fb.resnet.torch" ["l"="34.268,35.084"]
"KaimingHe/deep-residual-networks" ["l"="34.248,35.108"]
"openimages/dataset" ["l"="34.372,35.185"]
"daijifeng001/R-FCN" ["l"="34.418,35.11"]
"liuzhuang13/DenseNet" ["l"="34.277,35.134"]
"DeepScale/SqueezeNet" ["l"="34.356,35.084"]
"facebookresearch/ResNeXt" ["l"="34.301,35.125"]
"albanie/convnet-burden" ["l"="34.359,35.29"]
"kuangliu/pytorch-cifar" ["l"="34.268,35.47"]
"weiaicunzai/pytorch-cifar100" ["l"="34.286,35.444"]
"Cadene/pretrained-models.pytorch" ["l"="34.264,35.503"]
"bearpaw/pytorch-classification" ["l"="34.307,35.342"]
"akamaster/pytorch_resnet_cifar10" ["l"="34.253,35.388"]
"pytorch/examples" ["l"="34.032,35.559"]
"aaron-xichen/pytorch-playground" ["l"="34.308,35.369"]
"utkuozbulak/pytorch-cnn-visualizations" ["l"="34.241,35.609"]
"lukemelas/EfficientNet-PyTorch" ["l"="34.368,35.563"]
"eriklindernoren/PyTorch-GAN" ["l"="33.845,32.765"]
"oeway/pytorch-deform-conv" ["l"="34.482,35.282"]
"chengdazhi/Deformable-Convolution-V2-PyTorch" ["l"="34.541,35.356"]
"1zb/deformable-convolution-pytorch" ["l"="34.495,35.265"]
"ChunhuanLin/deform_conv_pytorch" ["l"="34.533,35.273"]
"4uiiurz1/pytorch-deform-conv-v2" ["l"="34.527,35.301"]
"felixlaumon/deform-conv" ["l"="34.495,35.132"]
"isht7/pytorch-deeplab-resnet" ["l"="31.612,36.923"]
"vacancy/Synchronized-BatchNorm-PyTorch" ["l"="31.632,37.03"]
"CharlesShang/DCNv2" ["l"="34.571,35.379"]
"fxia22/stn.pytorch" ["l"="26.707,34.425"]
"ruinmessi/RFBNet" ["l"="34.577,35.3"]
"jwyang/fpn.pytorch" ["l"="34.515,35.289"]
"kastnerkyle/deform-conv" ["l"="34.551,35.2"]
"huggingface/transformers" ["l"="27.114,30.584"]
"yunjey/pytorch-tutorial" ["l"="23.801,30.989"]
"google-research/bert" ["l"="30.054,32.634"]
"ruiminshen/yolo2-pytorch" ["l"="34.505,35.199"]
"marvis/pytorch-yolo2" ["l"="34.518,35.253"]
"longcw/yolo2-pytorch" ["l"="34.43,35.261"]
"glample/Arnold" ["l"="24.982,35.778"]
"ruiminshen/yolo-tf" ["l"="34.442,35.055"]
"kuangliu/torchcv" ["l"="34.558,35.227"]
"marvis/pytorch-yolo3" ["l"="34.542,35.24"]
"ZijunDeng/pytorch-semantic-segmentation" ["l"="31.582,36.91"]
"felixgwu/mask_rcnn_pytorch" ["l"="34.419,35.179"]
"ignacio-rocco/detectorch" ["l"="34.5,35.251"]
"soeaver/Pytorch_Mask_RCNN" ["l"="34.541,35.258"]
"Breakend/gym-extensions" ["l"="24.934,35.768"]
"longcw/RoIAlign.pytorch" ["l"="34.5,35.282"]
"PureDiors/pytorch_RFCN" ["l"="34.491,35.189"]
"c0nn3r/RetinaNet" ["l"="34.523,35.207"]
"marvis/pytorch-caffe" ["l"="34.488,35.143"]
"szagoruyko/pytorchviz" ["l"="34.195,35.62"]
"sksq96/pytorch-summary" ["l"="34.234,35.639"]
"waleedka/hiddenlayer" ["l"="34.212,35.607"]
"lanpa/tensorboardX" ["l"="34.185,35.59"]
"NVIDIA/apex" ["l"="34.265,35.634"]
"lanpa/tensorboard-pytorch" ["l"="34.262,35.363"]
"pytorch/ignite" ["l"="34.197,35.641"]
"arogozhnikov/einops" ["l"="34.25,35.847"]
"meetshah1995/pytorch-semseg" ["l"="31.648,36.966"]
"pytorch/captum" ["l"="34.22,35.754"]
"ncullen93/torchsample" ["l"="34.206,35.464"]
"pytorch/tnt" ["l"="34.234,35.473"]
"NVIDIA/DIGITS" ["l"="27.012,33.964"]
"Newmu/dcgan_code" ["l"="33.7,32.543"]
"vdumoulin/conv_arithmetic" ["l"="34.086,35.491"]
"HarisIqbal88/PlotNeuralNet" ["l"="34.106,35.683"]
"PyTorchLightning/pytorch-lightning" ["l"="34.221,35.789"]
"rusty1s/pytorch_geometric" ["l"="21.704,38.639"]
"google-research/google-research" ["l"="30.263,32.554"]
"onnx/onnx" ["l"="34.214,35.502"]
"Tencent/ncnn" ["l"="34.142,35.514"]
"NVIDIA/TensorRT" ["l"="34.329,35.568"]
"alibaba/MNN" ["l"="34.206,35.543"]
"scutan90/DeepLearning-500-questions" ["l"="23.999,30.98"]
"Syllo/nvtop" ["l"="34.146,35.663"]
"wookayin/gpustat" ["l"="34.149,35.698"]
"XuehaiPan/nvitop" ["l"="34.195,35.848"]
"cupy/cupy" ["l"="34.072,35.653"]
"albu/albumentations" ["l"="34.315,35.522"]
"aristocratos/btop" ["l"="-11.765,-18.129"]
"IDSIA/sacred" ["l"="25.315,33.896"]
"flightlessmango/MangoHud" ["l"="-34.801,3.686"]
"PaddlePaddle/PaddleHub" ["l"="33.98,35.806"]
"PaddlePaddle/PaddleOCR" ["l"="33.971,35.687"]
"PaddlePaddle/Paddle" ["l"="33.971,35.736"]
"PaddlePaddle/PaddleNLP" ["l"="31.988,30.294"]
"PaddlePaddle/PaddleDetection" ["l"="34.191,35.707"]
"PaddlePaddle/models" ["l"="33.951,35.783"]
"PaddlePaddle/PaddleSeg" ["l"="34.143,35.728"]
"PaddlePaddle/PaddleX" ["l"="34.066,35.797"]
"PaddlePaddle/PaddleGAN" ["l"="34.015,35.787"]
"PaddlePaddle/PaddleClas" ["l"="34.083,35.768"]
"ymcui/Chinese-BERT-wwm" ["l"="32.087,30.221"]
"PaddlePaddle/Paddle-Lite" ["l"="34.117,35.755"]
"PaddlePaddle/ERNIE" ["l"="32.035,30.284"]
"fighting41love/funNLP" ["l"="31.715,30.146"]
"PaddlePaddle/PaddleSpeech" ["l"="0.45,39.969"]
"babysor/MockingBird" ["l"="33.357,33.441"]
"PaddlePaddle/VisualDL" ["l"="34.04,35.741"]
"PaddlePaddle/Serving" ["l"="33.177,37.561"]
"PaddlePaddle/PaddleSlim" ["l"="34.19,35.798"]
"PaddlePaddle/X2Paddle" ["l"="34.088,35.831"]
"PaddlePaddle/PGL" ["l"="21.852,38.533"]
"PaddlePaddle/FleetX" ["l"="33.206,37.598"]
"fastai/fastai" ["l"="23.664,30.845"]
"fchollet/deep-learning-with-python-notebooks" ["l"="23.621,30.85"]
"pytorch/tutorials" ["l"="33.892,35.575"]
"bharathgs/Awesome-pytorch-list" ["l"="23.839,30.973"]
"junyanz/pytorch-CycleGAN-and-pix2pix" ["l"="33.69,32.789"]
"soumith/ganhacks" ["l"="33.757,32.709"]
"chenyuntc/pytorch-book" ["l"="23.961,31.063"]
"jcjohnson/pytorch-examples" ["l"="33.961,35.55"]
"eric612/MobileNet-YOLO" ["l"="34.591,35.175"]
"Adamdad/Object-Detection-Metrics" ["l"="34.67,35.172"]
"Stinky-Tofu/Stronger-yolo" ["l"="34.616,35.285"]
"SpikeKing/keras-yolo3-detection" ["l"="34.488,35.229"]
"TencentYoutuResearch/ObjectDetection-OneStageDet" ["l"="34.526,35.34"]
"mystic123/tensorflow-yolo-v3" ["l"="34.432,35.179"]
"wizyoung/YOLOv3_TensorFlow" ["l"="34.44,35.229"]
"tanluren/mobilenetv3-yolov3" ["l"="34.673,35.205"]
"Qidian213/deep_sort_yolov3" ["l"="32.317,36.077"]
"ruinmessi/ASFF" ["l"="34.648,35.427"]
"EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10" ["l"="34.205,35.199"]
"datitran/raccoon_dataset" ["l"="34.281,35.193"]
"EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi" ["l"="34.145,35.182"]
"EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi" ["l"="34.091,35.083"]
"priya-dwivedi/Deep-Learning" ["l"="34.233,35.247"]
"llSourcell/YOLO_Object_Detection" ["l"="34.253,35.153"]
"datitran/object_detector_app" ["l"="34.245,35.128"]
"OlafenwaMoses/ImageAI" ["l"="34.161,35.315"]
"NVIDIA/DeepLearningExamples" ["l"="34.095,35.627"]
"kubeflow/kubeflow" ["l"="25.333,34.122"]
"facebookresearch/faiss" ["l"="30.106,32.606"]
"horovod/horovod" ["l"="34.127,35.595"]
"WXinlong/SOLO" ["l"="34.717,35.545"]
"aim-uofa/AdelaiDet" ["l"="34.636,35.565"]
"xieenze/PolarMask" ["l"="34.684,35.46"]
"dbolya/yolact" ["l"="34.542,35.47"]
"zju3dv/snake" ["l"="34.731,35.503"]
"Epiphqny/SOLOv2" ["l"="34.868,35.498"]
"PeizeSun/SparseR-CNN" ["l"="34.727,35.654"]
"youngwanLEE/CenterMask" ["l"="34.708,35.505"]
"xingyizhou/CenterNet2" ["l"="34.724,35.591"]
"youngwanLEE/centermask2" ["l"="34.715,35.519"]
"sfzhang15/ATSS" ["l"="34.705,35.492"]
"joe-siyuan-qiao/DetectoRS" ["l"="34.69,35.555"]
"zhanghang1989/ResNeSt" ["l"="34.538,35.573"]
"openseg-group/openseg.pytorch" ["l"="31.729,37.032"]
"PeizeSun/OneNet" ["l"="34.785,35.582"]
"abreheret/PixelAnnotationTool" ["l"="34.578,35.363"]
"Hitachi-Automotive-And-Industry-Lab/semantic-segmentation-editor" ["l"="30.562,44.386"]
"Labelbox/Labelbox" ["l"="34.547,35.318"]
"fidler-lab/polyrnn-pp-pytorch" ["l"="34.749,35.33"]
"kyamagu/js-segment-annotator" ["l"="34.711,35.23"]
"Cartucho/OpenLabeling" ["l"="34.581,35.335"]
"scaelles/DEXTR-PyTorch" ["l"="34.78,35.317"]
"fidler-lab/curve-gcn" ["l"="34.793,35.37"]
"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network" ["l"="34.177,35.776"]
"gwding/draw_convnet" ["l"="23.355,31.198"]
"alexlenail/NN-SVG" ["l"="23.496,30.37"]
"paulgavrikov/visualkeras" ["l"="34.08,35.87"]
"kornia/kornia" ["l"="34.296,35.808"]
"optuna/optuna" ["l"="25.432,33.933"]
"deepmind/deepmind-research" ["l"="34.272,35.889"]
"graviraja/MLOps-Basics" ["l"="23.751,30.381"]
"balancap/SSD-Tensorflow" ["l"="34.345,35.178"]
"CharlesShang/FastMaskRCNN" ["l"="34.309,35.151"]
"rykov8/ssd_keras" ["l"="34.377,35.082"]
"nilboy/tensorflow-yolo" ["l"="34.377,35.111"]
"mlpack/mlpack" ["l"="23.914,30.838"]
"davisking/dlib-models" ["l"="33.929,35.242"]
"zjhuang22/maskscoring_rcnn" ["l"="34.53,35.397"]
"haotian-liu/yolact_edge" ["l"="34.626,35.531"]
"foolwood/SiamMask" ["l"="32.418,36.148"]
"TuSimple/simpledet" ["l"="34.513,35.359"]
"princeton-vl/CornerNet-Lite" ["l"="34.557,35.366"]
"dog-qiuqiu/MobileNet-Yolo" ["l"="34.664,35.484"]
"dog-qiuqiu/Yolo-Fastest" ["l"="34.571,35.575"]
"CoderFM/FMFormSubmitKit" ["l"="-26.056,18.873"]
"ZhangGang12/MultiThreadLearning" ["l"="-26.117,18.965"]
"ron0115/vscode-image-snippets" ["l"="-25.844,18.873"]
"charmJiang/front-end-knowledge-systems" ["l"="-25.731,18.897"]
"CoderFM/FMLayoutKit" ["l"="-26.095,18.96"]
"GoodLuckAlien/blogs" ["l"="-25.706,18.879"]
"Voyzz/MyCompany-miniProgram" ["l"="-25.678,18.895"]
"linlicro/leetcode-java" ["l"="-25.734,18.878"]
"giswangsj/QrCodeScanner" ["l"="-25.999,18.805"]
"bdf1/bdf1" ["l"="-25.758,18.849"]
"lonesafe/roubsite" ["l"="-25.771,19.011"]
"Jinxqq/sql-note" ["l"="-25.979,18.874"]
"keguoyu/MiniJVM" ["l"="-25.754,18.873"]
"l-zoy/zmi-nerd" ["l"="-25.676,18.913"]
"experiencor/keras-yolo2" ["l"="34.392,35.153"]
"allanzelener/YAD2K" ["l"="34.339,35.152"]
"hizhangp/yolo_tensorflow" ["l"="34.367,35.141"]
"xiaochus/YOLOv3" ["l"="34.451,35.171"]
"WojciechMormul/yolo2" ["l"="34.45,35.027"]
"jsbroks/awesome-dataset-tools" ["l"="34.732,35.385"]
"taivop/awesome-data-annotation" ["l"="34.771,35.395"]
"UniversalDataTool/universal-data-tool" ["l"="34.698,35.406"]
"visenger/awesome-mlops" ["l"="23.713,30.51"]
"doccano/doccano" ["l"="32.158,30.113"]
"jonbarron/robust_loss_pytorch" ["l"="34.29,35.662"]
"JiawangBian/SC-SfMLearner-Release" ["l"="31.77,43.243"]
"NVlabs/pacnet" ["l"="36.098,32.377"]
"ClementPinard/Pytorch-Correlation-extension" ["l"="31.754,43.146"]
"arraiyopensource/kornia" ["l"="34.364,35.608"]
"YvanYin/VNL_Monocular_Depth_Prediction" ["l"="31.822,43.257"]
"fangchangma/self-supervised-depth-completion" ["l"="31.857,43.203"]
"google-research/tuning_playbook" ["l"="27.335,30.792"]
"heejkoo/Awesome-Diffusion-Models" ["l"="34.436,28.855"]
"huggingface/diffusers" ["l"="27.252,30.798"]
"floodsung/Deep-Learning-Papers-Reading-Roadmap" ["l"="23.68,30.877"]
"eugeneyan/applied-ml" ["l"="23.66,30.557"]
"lhelontra/tensorflow-on-arm" ["l"="34.011,35.032"]
"samjabrahams/tensorflow-on-raspberry-pi" ["l"="34.143,35.018"]
"PINTO0309/Tensorflow-bin" ["l"="34.027,35.134"]
"movidius/ncsdk" ["l"="32.168,35.68"]
"nmilosev/pytorch-arm-builds" ["l"="33.936,35.03"]
"snipsco/tensorflow-build" ["l"="33.937,34.978"]
"lherman-cs/tensorflow-aarch64" ["l"="33.975,35.006"]
"NVIDIA-AI-IOT/tf_trt_models" ["l"="29.901,38.181"]
"peterlee0127/tensorflow-nvJetson" ["l"="29.79,38.283"]
"movidius/ncappzoo" ["l"="32.186,35.692"]
"Archiconda/build-tools" ["l"="33.909,34.922"]
"KumaTea/tensorflow-aarch64" ["l"="33.902,34.952"]
"ARM-software/armnn" ["l"="27.544,35.464"]
"ARM-software/ML-examples" ["l"="27.427,35.518"]
"CSAILVision/semantic-segmentation-pytorch" ["l"="31.614,36.999"]
"Tramac/awesome-semantic-segmentation-pytorch" ["l"="31.7,37.017"]
"qubvel/segmentation_models.pytorch" ["l"="34.344,35.644"]
"milesial/Pytorch-UNet" ["l"="29.163,36.548"]
"jfzhang95/pytorch-deeplab-xception" ["l"="31.648,36.997"]
"GeorgeSeif/Semantic-Segmentation-Suite" ["l"="31.644,36.925"]
"open-mmlab/mmcv" ["l"="34.484,35.647"]
"voxel51/fiftyone" ["l"="34.514,35.659"]
"wang-xinyu/tensorrtx" ["l"="34.486,35.591"]
"openvinotoolkit/datumaro" ["l"="34.509,35.5"]
"jinfagang/keras_frcnn" ["l"="34.389,35.1"]
"yhenon/keras-frcnn" ["l"="34.348,35.069"]
"chuanqi305/MobileNet-SSD" ["l"="34.475,35.175"]
"tanakataiki/ssd_kerasV2" ["l"="34.825,33.649"]
"HiKapok/SSD.TensorFlow" ["l"="34.521,35.096"]
"lufficc/SSD" ["l"="34.523,35.323"]
"experiencor/basic-yolo-keras" ["l"="34.406,35.085"]
"zhreshold/mxnet-ssd" ["l"="33.012,35.78"]
"kuhung/SSD_keras" ["l"="34.388,34.963"]
"seann999/ssd_tensorflow" ["l"="34.427,35.061"]
"georgesung/ssd_tensorflow_traffic_sign_detection" ["l"="29.389,43.081"]
"sgrvinod/a-PyTorch-Tutorial-to-Object-Detection" ["l"="34.444,35.404"]
"sgrvinod/Deep-Tutorials-for-PyTorch" ["l"="31.445,34.584"]
"qfgaohao/pytorch-ssd" ["l"="34.574,35.285"]
"rafaelpadilla/Object-Detection-Metrics" ["l"="34.43,35.421"]
"yhenon/pytorch-retinanet" ["l"="34.509,35.38"]
"sgrvinod/a-PyTorch-Tutorial-to-Image-Captioning" ["l"="31.516,34.558"]
"WongKinYiu/yolov7" ["l"="34.422,35.662"]
"ultralytics/ultralytics" ["l"="34.486,35.683"]
"cocodataset/cocoapi" ["l"="34.396,35.416"]
"zetane/viewer" ["l"="34.666,35.705"]
"onnx/optimizer" ["l"="34.633,35.627"]
"julrog/nn_vis" ["l"="24.239,30.949"]
"apple/ml-cvnets" ["l"="34.719,35.87"]
"microsoft/onnxruntime-inference-examples" ["l"="34.677,35.635"]
"murufeng/awesome_lightweight_networks" ["l"="34.715,35.818"]
"ZhangGe6/onnx-modifier" ["l"="34.629,35.666"]
"openppl-public/ppq" ["l"="34.591,35.682"]
"jizhishutong/YOLOU" ["l"="34.62,35.701"]
"zju3dv/LoFTR" ["l"="32.469,42.311"]
"daquexian/onnx-simplifier" ["l"="34.45,35.564"]
"MVIG-SJTU/AlphaPose" ["l"="36.05,35.183"]
"ZheC/Realtime_Multi-Person_Pose_Estimation" ["l"="36.088,35.207"]
"google/mediapipe" ["l"="33.995,35.51"]
"facebookresearch/DensePose" ["l"="36.005,35.214"]
"ildoonet/tf-pose-estimation" ["l"="36.09,35.183"]
"PaddlePaddle/book" ["l"="33.874,35.789"]
"fxsjy/jieba" ["l"="31.785,30.143"]
"exacity/deeplearningbook-chinese" ["l"="23.896,31.118"]
"RangiLyu/nanodet" ["l"="34.455,35.588"]
"meituan/YOLOv6" ["l"="34.518,35.697"]
"thunlp/GNNPapers" ["l"="21.716,38.607"]
"garrettj403/SciencePlots" ["l"="23.284,30.448"]
"jindongwang/transferlearning" ["l"="30.138,35.069"]
"dmlc/dgl" ["l"="21.758,38.603"]
"amir-abdi/keras_to_tensorflow" ["l"="34.296,35.212"]
"pplonski/keras2cpp" ["l"="30.804,31.76"]
"ysh329/deep-learning-model-convertor" ["l"="34.329,35.239"]
"bitbionic/keras-to-tensorflow" ["l"="30.84,31.759"]
"YCG09/chinese_ocr" ["l"="29.505,34.151"]
"Dobiasd/frugally-deep" ["l"="30.756,31.762"]
"ChanChiChoi/awesome-Face_Recognition" ["l"="34.068,35.389"]
"ZhaoJ9014/face.evoLVe.PyTorch" ["l"="35.139,33.361"]
"polarisZhao/awesome-face" ["l"="34.171,35.393"]
"TreB1eN/InsightFace_Pytorch" ["l"="35.133,33.38"]
"biubug6/Pytorch_Retinaface" ["l"="35.048,33.299"]
"cleardusk/3DDFA" ["l"="34.704,31.688"]
"YadiraF/PRNet" ["l"="34.684,31.645"]
"JDAI-CV/FaceX-Zoo" ["l"="35.133,33.298"]
"1adrianb/face-alignment" ["l"="34.644,31.72"]
"YadiraF/face3d" ["l"="34.731,31.675"]
"TencentYoutuResearch/FaceDetection-DSFD" ["l"="34.157,35.37"]
"SoftwareGift/FeatherNets_Face-Anti-spoofing-Attack-Detection-Challenge-CVPR2019" ["l"="35.151,33.255"]
"Linzaer/Ultra-Light-Fast-Generic-Face-Detector-1MB" ["l"="34.171,35.466"]
"naptha/tesseract.js" ["l"="26.602,-26.562"]
"tesseract-ocr/tessdata" ["l"="29.341,34.354"]
"madmaze/pytesseract" ["l"="29.364,34.378"]
"JaidedAI/EasyOCR" ["l"="33.941,35.623"]
"fatedier/frp" ["l"="-27.036,-17.227"]
"electron/electron" ["l"="27.067,-26.918"]
"NVIDIA-AI-IOT/torch2trt" ["l"="34.478,35.566"]
"onnx/onnx-tensorrt" ["l"="34.519,35.561"]
"shouxieai/tensorRT_Pro" ["l"="34.567,35.647"]
"enazoe/yolo-tensorrt" ["l"="34.61,35.548"]
"jkjung-avt/tensorrt_demos" ["l"="34.577,35.524"]
"dusty-nv/jetson-inference" ["l"="29.847,38.117"]
"persistforever/cifar10-tensorflow" ["l"="34.178,34.997"]
"yhlleo/tensorflow.cifar10" ["l"="34.162,35.048"]
"BIGBALLON/cifar-10-cnn" ["l"="34.225,35.177"]
"wenxinxu/resnet-in-tensorflow" ["l"="34.26,35.046"]
"Ecohnoch/tensorflow-cifar100" ["l"="34.151,34.907"]
"dontfollowmeimcrazy/imagenet" ["l"="34.205,34.96"]
"hwalsuklee/tensorflow-mnist-cnn" ["l"="34.125,34.859"]
"NanGC/CNN" ["l"="34.216,35.015"]
"hujunxianligong/Tensorflow-CNN-Tutorial" ["l"="34.161,34.949"]
"wolfib/image-classification-CIFAR10-tf" ["l"="35.38,34.137"]
"clovaai/deep-text-recognition-benchmark" ["l"="29.587,34.136"]
"chineseocr/chineseocr" ["l"="29.533,34.186"]
"clovaai/CRAFT-pytorch" ["l"="29.559,34.109"]
"Belval/TextRecognitionDataGenerator" ["l"="29.555,34.154"]
"ouyanghuiyu/chineseocr_lite" ["l"="29.56,34.208"]
"open-mmlab/mmocr" ["l"="29.659,34.147"]
"streamlit/streamlit" ["l"="23.305,4.234"]
"willmcgugan/rich" ["l"="23.277,4.105"]
"HobbitLong/PyContrast" ["l"="34.518,36.064"]
"HobbitLong/CMC" ["l"="34.498,36.103"]
"sthalles/SimCLR" ["l"="34.491,36.047"]
"lucidrains/byol-pytorch" ["l"="34.514,36.035"]
"HobbitLong/SupContrast" ["l"="34.462,36.04"]
"open-mmlab/OpenSelfSup" ["l"="34.495,36.074"]
"jason718/awesome-self-supervised-learning" ["l"="34.428,36.001"]
"microsoft/unilm" ["l"="34.387,35.927"]
"MhLiao/DB" ["l"="29.587,34.098"]
"Yuliang-Liu/bezier_curve_text_spotting" ["l"="29.632,34.044"]
"patrikhuber/eos" ["l"="34.715,31.661"]
"natanielruiz/deep-head-pose" ["l"="34.86,33.259"]
"TadasBaltrusaitis/CLM-framework" ["l"="34.79,33.463"]
"Rudrabha/Wav2Lip" ["l"="35.005,31.584"]
"PeterL1n/BackgroundMattingV2" ["l"="33.532,33.2"]
"microsoft/Bringing-Old-Photos-Back-to-Life" ["l"="33.432,33.221"]
"open-mmlab/mmediting" ["l"="35.928,32.332"]
"minivision-ai/photo2cartoon" ["l"="33.441,33.073"]
"machrisaa/tensorflow-vgg" ["l"="34.242,35.07"]
"ry/tensorflow-vgg16" ["l"="34.257,34.994"]
"kratzert/finetune_alexnet_with_tensorflow" ["l"="34.237,35.004"]
"carpedm20/DCGAN-tensorflow" ["l"="33.729,32.615"]
"shekkizh/FCN.tensorflow" ["l"="31.565,36.847"]
"shelhamer/fcn.berkeleyvision.org" ["l"="34.324,35.133"]
"rbgirshick/fast-rcnn" ["l"="34.305,35.096"]
"fundamentalvision/Deformable-DETR" ["l"="34.63,35.791"]
"facebookresearch/SlowFast" ["l"="32.54,34.973"]
"spro/practical-pytorch" ["l"="30.067,32.568"]
"pytorch/text" ["l"="30.002,32.562"]
"ritchieng/the-incredible-pytorch" ["l"="23.763,30.707"]
"MorvanZhou/PyTorch-Tutorial" ["l"="23.923,31.03"]
"hunkim/PyTorchZeroToAll" ["l"="23.912,30.925"]
"udacity/deep-learning-v2-pytorch" ["l"="23.769,30.84"]
"allenai/allennlp" ["l"="29.939,32.599"]
"OpenNMT/OpenNMT-py" ["l"="30.01,32.499"]
"jadore801120/attention-is-all-you-need-pytorch" ["l"="30.059,32.495"]
"hustvl/YOLOS" ["l"="34.74,35.767"]
"hustvl/QueryInst" ["l"="34.842,35.787"]
"naver-ai/vidt" ["l"="31.693,35.071"]
"hustvl/MIMDet" ["l"="34.772,35.945"]
"IDEACVR/awesome-detection-transformer" ["l"="31.738,34.985"]
"Meituan-AutoML/Twins" ["l"="34.727,35.927"]
"megvii-model/YOLOF" ["l"="34.768,35.611"]
"SwinTransformer/Swin-Transformer-Object-Detection" ["l"="34.657,35.761"]
"baaivision/EVA" ["l"="31.804,34.915"]
"Atten4Vis/ConditionalDETR" ["l"="31.71,35.027"]
"WongKinYiu/yolor" ["l"="34.577,35.612"]
"whai362/PVT" ["l"="34.65,35.866"]
"ashkamath/mdetr" ["l"="31.697,34.805"]
"microsoft/onnxruntime" ["l"="34.397,35.571"]
"onnx/tutorials" ["l"="34.371,35.512"]
"onnx/models" ["l"="34.377,35.539"]
"dmlc/tvm" ["l"="27.643,35.424"]
"dmlc/gluon-cv" ["l"="34.367,35.411"]
"jinfagang/yolov7" ["l"="34.557,35.672"]
"iscyy/yoloair" ["l"="34.582,35.721"]
"gradio-app/gradio" ["l"="27.271,30.741"]
"iterative/dvc" ["l"="25.307,34.041"]
"mlflow/mlflow" ["l"="25.373,34.026"]
"UKPLab/sentence-transformers" ["l"="29.808,32.535"]
"deepset-ai/haystack" ["l"="29.634,32.485"]
"chengyangfu/caffe" ["l"="34.638,35.065"]
"MTCloudVision/mxnet-dssd" ["l"="34.693,35.019"]
"chuanqi305/FocalLoss" ["l"="34.626,35.052"]
"sciencefans/Focal-Loss" ["l"="34.586,35.062"]
"zimenglan-sysu-512/Focal-Loss" ["l"="34.599,35.043"]
"szq0214/DSOD" ["l"="34.545,35.143"]
"PointCloudLibrary/pcl" ["l"="30.363,44.501"]
"raulmur/ORB_SLAM2" ["l"="30.3,43.05"]
"gaoxiang12/slambook" ["l"="30.272,43.086"]
"opencv/opencv_extra" ["l"="34.003,35.214"]
"ceres-solver/ceres-solver" ["l"="30.314,43.03"]
"HKUST-Aerial-Robotics/VINS-Mono" ["l"="30.339,43.087"]
"RainerKuemmerle/g2o" ["l"="30.345,43.053"]
"openMVG/openMVG" ["l"="30.285,42.945"]
"xingyizhou/ExtremeNet" ["l"="34.626,35.371"]
"princeton-vl/CornerNet" ["l"="34.562,35.343"]
"Duankaiwen/CenterNet" ["l"="34.595,35.383"]
"yihui-he/KL-Loss" ["l"="34.664,35.367"]
"qijiezhao/M2Det" ["l"="34.603,35.328"]
"microsoft/RepPoints" ["l"="34.732,35.45"]
"OceanPang/Libra_R-CNN" ["l"="34.707,35.373"]
"sfzhang15/RefineDet" ["l"="34.558,35.247"]
"mahyarnajibi/SNIPER" ["l"="34.594,35.312"]
"vacancy/PreciseRoIPooling" ["l"="34.646,35.312"]
"jbhuang0604/awesome-computer-vision" ["l"="23.458,30.988"]
"gzr2017/ImageProcessing100Wen" ["l"="30.186,36.695"]
"extreme-assistant/CVPR2021-Paper-Code-Interpretation" ["l"="34.546,35.737"]
"extreme-assistant/survey-computer-vision" ["l"="34.595,35.78"]
"amusi/daily-paper-computer-vision" ["l"="34.455,35.486"]
"amusi/ECCV2020-Code" ["l"="34.555,35.615"]
"DingXiaoH/RepVGG" ["l"="34.533,35.684"]
"amusi/CVPR2020-Code" ["l"="34.505,35.539"]
"extreme-assistant/ECCV2022-Paper-Code-Interpretation" ["l"="34.614,35.86"]
"extreme-assistant/Awesome-CV-Team" ["l"="34.626,35.814"]
"Kobaayyy/Awesome-CVPR2021-CVPR2020-Low-Level-Vision" ["l"="35.965,32.4"]
"pengzhiliang/MAE-pytorch" ["l"="34.525,35.927"]
"extreme-assistant/survey-computer-vision-2021" ["l"="34.597,35.873"]
"open-mmlab/mmflow" ["l"="34.731,35.783"]
"open-mmlab/mim" ["l"="34.783,35.794"]
"open-mmlab/mmfewshot" ["l"="34.752,35.784"]
"open-mmlab/mmrazor" ["l"="34.704,35.765"]
"open-mmlab/mmhuman3d" ["l"="35.776,35.04"]
"zacjiang/GMA" ["l"="31.755,43.086"]
"open-mmlab/mmdeploy" ["l"="34.658,35.732"]
"open-mmlab/mmengine" ["l"="34.739,35.793"]
"open-mmlab/mmyolo" ["l"="34.674,35.747"]
"jshilong/FisherPruning" ["l"="34.823,35.759"]
"princeton-vl/RAFT" ["l"="31.73,43.166"]
"open-mmlab/mmeval" ["l"="34.779,35.78"]
"open-mmlab/mmselfsup" ["l"="34.637,35.858"]
"open-mmlab/MMGEN-FaceStylor" ["l"="34.815,35.802"]
"lliuz/ARFlow" ["l"="31.743,43.126"]
"open-mmlab/mmgeneration" ["l"="34.696,35.786"]
"numba/numba" ["l"="23.047,4.391"]
"rapidsai/cudf" ["l"="25.298,33.93"]
"chainer/chainer" ["l"="34.121,35.439"]
"HIPS/autograd" ["l"="25.428,33.663"]
"rapidsai/cuml" ["l"="25.357,33.884"]
"dask/dask" ["l"="23.129,4.517"]
"ray-project/ray" ["l"="25.254,33.964"]
"pybind/pybind11" ["l"="-11.867,21.884"]
"maozezhong/CV_ToolBox" ["l"="34.685,35.335"]
"maozezhong/TIANCHI_XUELANG_AI" ["l"="22.122,35.339"]
"lzx1413/PytorchSSD" ["l"="34.602,35.288"]
"Paperspace/DataAugmentationForObjectDetection" ["l"="34.618,35.389"]
"pureyangcry/tools" ["l"="34.803,35.288"]
"cizhenshi/TianchiGuangdong2019_2th" ["l"="22.087,35.363"]
"maozezhong/TIANCHI_XUELANG_AI_2" ["l"="22.116,35.324"]
"guoruoqian/cascade-rcnn_Pytorch" ["l"="34.638,35.298"]
"zhengye1995/Tianchi-2019-Guangdong-Intelligent-identification-of-cloth-defects-rank5" ["l"="22.079,35.317"]
"shiyemin/voc2coco" ["l"="25.566,-21.38"]
"spytensor/prepare_detection_dataset" ["l"="34.621,35.441"]
"opendatalab/labelU" ["l"="34.945,35.86"]
"opendatalab/opendatalab-python-sdk" ["l"="34.905,35.841"]
"opendatalab/dsdl-docs" ["l"="34.899,35.851"]
"opendatalab/opendatalab-datasets" ["l"="34.917,35.85"]
"opendatalab/label-u" ["l"="34.894,35.843"]
"opendatalab/labelbeePro" ["l"="34.981,35.874"]
"YuwenXiong/py-R-FCN" ["l"="34.525,35.17"]
"zhaoweicai/cascade-rcnn" ["l"="34.591,35.28"]
"bharatsingh430/soft-nms" ["l"="34.558,35.163"]
"xdever/RFCN-tensorflow" ["l"="34.498,35.097"]
"daijifeng001/caffe-rfcn" ["l"="34.507,35.11"]
"unsky/FPN" ["l"="34.578,35.151"]
"abhi2610/ohem" ["l"="34.522,35.124"]
"msracver/Relation-Networks-for-Object-Detection" ["l"="34.608,35.27"]
"bharatsingh430/Deformable-ConvNets" ["l"="34.535,35.112"]
"chuanqi305/MobileNetv2-SSDLite" ["l"="34.597,35.134"]
"Zehaos/MobileNet" ["l"="34.439,35.128"]
"Robert-JunWang/Pelee" ["l"="34.574,35.177"]
"marvis/pytorch-caffe-darknet-convert" ["l"="34.538,35.178"]
"cvjena/cnn-models" ["l"="34.57,35.032"]
"lim0606/caffe-googlenet-bn" ["l"="34.658,34.961"]
"HolmesShuan/ResNet-18-Caffemodel-on-ImageNet" ["l"="34.612,35.052"]
"jay-mahadeokar/pynetbuilder" ["l"="34.542,35.037"]
"shicai/DenseNet-Caffe" ["l"="34.567,35.061"]
"antingshen/resnet-protofiles" ["l"="34.632,35.01"]
"liuzhuang13/DenseNetCaffe" ["l"="34.573,35.048"]
"twtygqyy/caffe-augmentation" ["l"="34.585,35.04"]
"kevinlin311tw/caffe-augmentation" ["l"="34.61,35.001"]
"xiaolonw/adversarial-frcnn" ["l"="34.542,35.121"]
"sciencefans/coco_loss" ["l"="35.098,33.474"]
"ydwen/caffe-face" ["l"="34.991,33.488"]
"wenwei202/caffe" ["l"="30.685,35.579"]
"ShaoqingRen/faster_rcnn" ["l"="34.336,35.101"]
"PaddlePaddle/PaddleVideo" ["l"="-25.789,18.98"]
"PaddlePaddle/FastDeploy" ["l"="34.309,35.76"]
"tensorflow/tfjs-models" ["l"="27.931,27.663"]
"HRNet/HRNet-Semantic-Segmentation" ["l"="31.683,37.041"]
"open-mmlab/mmclassification" ["l"="34.624,35.739"]
"NVlabs/SegFormer" ["l"="34.674,35.864"]
"JunMa11/SegLoss" ["l"="29.259,36.575"]
"open-mmlab/mmdetection3d" ["l"="30.542,44.316"]
"idealo/imagededup" ["l"="34.296,35.623"]
"idealo/image-quality-assessment" ["l"="35.23,32.377"]
"JohannesBuchner/imagehash" ["l"="34.059,35.522"]
"idealo/image-super-resolution" ["l"="35.932,32.139"]
"philipbl/duplicate-images" ["l"="-33.448,-22.831"]
"BloodAxe/pytorch-toolbelt" ["l"="34.403,35.615"]
"PyRetri/PyRetri" ["l"="32.774,34.266"]
"KevinMusgrave/pytorch-metric-learning" ["l"="34.341,35.861"]
"Jakaria08/EESRGAN" ["l"="35.012,35.524"]
"ispc-lab/SmallObjectDetectionList" ["l"="34.965,35.522"]
"Chasel-Tsui/mmdet-rfla" ["l"="35.022,35.563"]
"chaozhong2010/VHR-10_dataset_coco" ["l"="35.092,35.522"]
"gmayday1997/SmallObjectAugmentation" ["l"="34.991,35.499"]
"CSAILVision/places365" ["l"="34.262,35.256"]
"GKalliatakis/Keras-VGG16-places365" ["l"="34.133,35.147"]
"metalbubble/CAM" ["l"="28.638,34.94"]
"filipradenovic/cnnimageretrieval-pytorch" ["l"="32.799,34.276"]
"wanglimin/MRCNN-Scene-Recognition" ["l"="32.558,34.707"]
"hujie-frank/SENet" ["l"="34.395,35.23"]
"yjxiong/temporal-segment-networks" ["l"="32.529,34.868"]
"Relja/netvlad" ["l"="32.605,42.312"]
"Tencent/tencent-ml-images" ["l"="34.337,35.356"]
"bentrevett/pytorch-image-classification" ["l"="34.233,35.519"]
"hysts/pytorch_image_classification" ["l"="34.302,35.457"]
"bentrevett/pytorch-sentiment-analysis" ["l"="29.96,32.625"]
"bentrevett/a-tour-of-pytorch-optimizers" ["l"="34.113,35.515"]
"bentrevett/pytorch-seq2seq" ["l"="30.012,32.542"]
"bentrevett/pytorch-generative-models" ["l"="34.008,35.585"]
"weiaicunzai/awesome-image-classification" ["l"="34.315,35.436"]
"utkuozbulak/pytorch-custom-dataset-examples" ["l"="34.15,35.64"]
"bentrevett/machine-learning-courses" ["l"="34.158,35.542"]
"Mayurji/Image-Classification-PyTorch" ["l"="34.08,35.543"]
"lxztju/pytorch_classification" ["l"="34.393,35.494"]
"davidtvs/pytorch-lr-finder" ["l"="34.336,35.696"]
"farmingyard/caffe-mobilenet" ["l"="34.597,35.077"]
"camel007/Caffe-ShuffleNet" ["l"="34.598,35.055"]
"HolmesShuan/ShuffleNet-An-Extremely-Efficient-CNN-for-Mobile-Devices-Caffe-Reimplementation" ["l"="34.634,35.04"]
"farmingyard/caffe-mobilenet_v2" ["l"="34.652,35.077"]
"longcw/pytorch2caffe" ["l"="34.599,35.164"]
"starimeL/PytorchConverter" ["l"="34.616,35.177"]
"MTlab/onnx2caffe" ["l"="34.599,35.225"]
"hahnyuan/nn_tools" ["l"="34.632,35.18"]
"miaow1988/ShuffleNet_V2_pytorch_caffe" ["l"="34.605,35.19"]
"inisis/brocolli" ["l"="34.648,35.181"]
"happynear/MTCNN_face_detection_alignment" ["l"="34.984,33.469"]
"BUG1989/caffe-int8-convert-tools" ["l"="27.615,35.405"]
"ChenYingpeng/caffe-yolov3" ["l"="34.612,35.141"]
"facebookresearch/pytorch3d" ["l"="33.28,43.058"]
"NVIDIAGameWorks/kaolin" ["l"="33.204,43.1"]
"viscom-ulm/Net2Vis" ["l"="34.019,35.938"]
"rbgirshick/rcnn" ["l"="34.316,35.07"]
"hindupuravinash/the-gan-zoo" ["l"="33.796,32.723"]
"Megvii-BaseDetection/DeFCN" ["l"="34.804,35.577"]
"implus/GFocalV2" ["l"="34.785,35.593"]
"facebookresearch/MaskFormer" ["l"="34.696,35.879"]
"Megvii-BaseDetection/BorderDet" ["l"="34.783,35.55"]
"implus/GFocal" ["l"="34.772,35.564"]
"huggingface/pytorch-image-models" ["l"="34.498,35.821"]
"OpenGVLab/InternImage" ["l"="31.815,34.976"]
"amusi/CVPR2023-Papers-with-Code" ["l"="34.566,35.848"]
"z1069614715/objectdetection_script" ["l"="34.634,35.766"]
"huggingface/peft" ["l"="27.406,31.119"]
"huggingface/accelerate" ["l"="27.589,31.035"]
"Lightning-AI/lightning" ["l"="34.208,35.927"]
"salesforce/LAVIS" ["l"="31.777,34.792"]
"Luolc/AdaBound" ["l"="34.304,35.575"]
"LiyuanLucasLiu/RAdam" ["l"="34.372,35.686"]
"huggingface/pytorch-pretrained-BERT" ["l"="29.956,32.549"]
"ajbrock/BigGAN-PyTorch" ["l"="33.5,32.824"]
"zihangdai/xlnet" ["l"="29.925,32.544"]
"williamFalcon/pytorch-lightning" ["l"="34.242,35.678"]
"tensorflow/lingvo" ["l"="29.947,32.455"]
"taki0112/Tensorflow-Cookbook" ["l"="23.863,31.055"]
"csrhddlam/axial-deeplab" ["l"="34.731,35.972"]
"lucidrains/axial-attention" ["l"="34.792,36.025"]
"bowenc0221/panoptic-deeplab" ["l"="31.859,36.972"]
"lxtGH/DecoupleSegNets" ["l"="31.79,37.101"]
"fudan-zvg/SETR" ["l"="34.686,35.9"]
"speedinghzl/CCNet" ["l"="31.684,37.063"]
"conradry/max-deeplab" ["l"="34.8,36.051"]
"jeya-maria-jose/Medical-Transformer" ["l"="29.373,36.522"]
"joe-siyuan-qiao/ViP-DeepLab" ["l"="31.922,36.945"]
"DeepSceneSeg/EfficientPS" ["l"="31.872,36.954"]
"yitu-opensource/T2T-ViT" ["l"="34.636,35.913"]
"lightly-ai/lightly" ["l"="34.388,35.971"]
"vturrisi/solo-learn" ["l"="34.474,36"]
"facebookresearch/fairscale" ["l"="27.651,31.057"]
"libffcv/ffcv" ["l"="34.343,35.921"]
"facebookresearch/barlowtwins" ["l"="34.499,36.021"]
"google/automl" ["l"="34.468,35.536"]
"tensorflow/tpu" ["l"="34.423,35.49"]
"toandaominh1997/EfficientDet.Pytorch" ["l"="34.563,35.485"]
"WongKinYiu/ScaledYOLOv4" ["l"="34.57,35.555"]
"lessw2020/Best-Deep-Learning-Optimizers" ["l"="34.418,35.864"]
"amirgholami/adahessian" ["l"="23.892,34.426"]
"shivram1987/diffGrad" ["l"="34.426,35.931"]
"mdbloice/Augmentor" ["l"="34.261,35.428"]
"titu1994/keras-efficientnets" ["l"="31.773,37.436"]
"osmr/imgclsmob" ["l"="34.395,35.517"]
"rwightman/efficientdet-pytorch" ["l"="34.51,35.578"]
"rwightman/gen-efficientnet-pytorch" ["l"="34.522,35.522"]
"rentruewang/koila" ["l"="34.272,35.925"]
"patrick-kidger/torchtyping" ["l"="34.237,35.935"]
"jettify/pytorch-optimizer" ["l"="34.329,35.803"]
"HazyResearch/flash-attention" ["l"="27.553,31.056"]
"mosaicml/composer" ["l"="34.285,35.974"]
"lucidrains/x-transformers" ["l"="27.599,30.992"]
"lucidrains/vector-quantize-pytorch" ["l"="0.243,39.958"]
"assafshocher/ResizeRight" ["l"="33.09,32.959"]
"facebookincubator/AITemplate" ["l"="27.609,31.05"]
"lucidrains/DALLE-pytorch" ["l"="34.342,28.843"]
"dmlc/mxnet" ["l"="27.064,33.96"]
"Theano/Theano" ["l"="27.133,33.93"]
"torch/torch7" ["l"="27.062,34.026"]
"Microsoft/CNTK" ["l"="27.089,33.876"]
"heartexlabs/labelImg" ["l"="34.475,35.612"]
"mikel-brostrom/Yolov5_StrongSORT_OSNet" ["l"="32.225,36.263"]
"cnyvfang/labelGo-Yolov5AutoLabelImg" ["l"="31.174,35.707"]
"nicknochnack/TFODCourse" ["l"="31.083,32.503"]
"ifzhang/ByteTrack" ["l"="32.28,36.21"]
"mikel-brostrom/yolov8_tracking" ["l"="34.583,35.696"]
"triple-Mu/YOLOv8-TensorRT" ["l"="34.693,35.692"]
"JackWoo0831/Yolov7-tracker" ["l"="32.237,36.294"]
"Linaom1214/TensorRT-For-YOLO-Series" ["l"="34.672,35.679"]
"Sharpiless/Yolov5-Deepsort" ["l"="32.13,36.217"]
"dyhBUPT/StrongSORT" ["l"="32.303,36.273"]
"mikel-brostrom/Yolov7_StrongSORT_OSNet" ["l"="32.252,36.3"]
"MuhammadMoinFaisal/YOLOv8-DeepSORT-Object-Tracking" ["l"="25.683,-21.612"]
"HowieMa/DeepSORT_YOLOv5_Pytorch" ["l"="32.111,36.225"]
"noahcao/OC_SORT" ["l"="32.311,36.289"]
"deepcam-cn/yolov5-face" ["l"="34.543,35.659"]
"microsoft/tensorwatch" ["l"="34.19,35.667"]
"microsoft/interpret" ["l"="25.623,33.969"]
"TDAmeritrade/stumpy" ["l"="22.465,36.059"]
"timsainb/tensorflow2-generative-models" ["l"="33.734,32.763"]
"benedekrozemberczki/awesome-decision-tree-papers" ["l"="22.069,38.81"]
"tensorflow/lucid" ["l"="34.11,35.539"]
"catalyst-team/catalyst" ["l"="34.27,35.72"]
"facebookresearch/pythia" ["l"="29.848,32.531"]
"rasbt/deeplearning-models" ["l"="23.833,30.861"]
"allegroai/trains" ["l"="25.623,36.954"]
"opencv/opencv_3rdparty" ["l"="33.925,35.2"]
"opencv/open_model_zoo" ["l"="32.231,35.732"]
"davheld/GOTURN" ["l"="32.54,36.114"]
"zeusees/Mobilenet-SSD-License-Plate-Detection" ["l"="30.794,34.833"]
"opencv/opencv_zoo" ["l"="34.982,33.189"]
"rbgirshick/voc-dpm" ["l"="30.15,37.027"]
"meiqua/shape_based_matching" ["l"="-9.357,22.014"]
"gloomyfish1998/opencv_tutorial" ["l"="30.119,36.657"]
"cvdfoundation/open-images-dataset" ["l"="34.554,35.276"]
"caffe2/caffe2" ["l"="27.02,33.871"]
"extreme-assistant/CVPR2020-Paper-Code-Interpretation" ["l"="34.557,35.525"]
"extreme-assistant/iccv2019" ["l"="34.51,35.464"]
"BBuf/Darknet" ["l"="34.658,35.329"]
"tanluren/yolov3-channel-and-layer-pruning" ["l"="30.988,35.678"]
"MegEngine/MegEngine" ["l"="34.084,35.58"]
"Jittor/jittor" ["l"="34.028,35.611"]
"Tencent/TNN" ["l"="34.265,35.587"]
"Oneflow-Inc/oneflow" ["l"="34.058,35.604"]
"mindspore-ai/mindspore" ["l"="14.232,-9.888"]
"OAID/Tengine" ["l"="22.158,27.375"]
"MegEngine/Models" ["l"="1.22,19.321"]
"NVIDIA/cutlass" ["l"="27.805,35.454"]
"bytedance/byteps" ["l"="22.578,37.111"]
"openppl-public/ppl.nn" ["l"="27.745,35.47"]
"XiaoMi/mace" ["l"="27.535,35.408"]
"microsoft/SimMIM" ["l"="34.662,35.966"]
"open-mmlab/mmaction" ["l"="32.546,34.933"]
"open-mmlab/mmaction2" ["l"="32.566,34.986"]
"open-mmlab/mmpose" ["l"="35.982,35.09"]
"open-mmlab/mmtracking" ["l"="32.375,36.183"]
"zackchase/mxnet-the-straight-dope" ["l"="34.123,35.207"]
"mli/gluon-tutorials-zh" ["l"="34.209,35.232"]
"chinakook/Awesome-MXNet" ["l"="33.059,35.732"]
"awslabs/sockeye" ["l"="29.983,32.375"]
"TuSimple/mx-maskrcnn" ["l"="34.365,35.164"]
"dmlc/nnvm" ["l"="27.714,35.41"]
"apache/incubator-mxnet" ["l"="34.07,35.299"]
"gluon-api/gluon-api" ["l"="34.09,35.2"]
"dmlc/mxnet-notebooks" ["l"="33.104,35.748"]
"dmlc/gluon-nlp" ["l"="29.895,32.533"]
"blei-lab/edward" ["l"="25.451,33.61"]
"dmlc/minpy" ["l"="33.138,35.776"]
"ceccocats/tkDNN" ["l"="34.616,35.502"]
"CaoWGG/TensorRT-YOLOv4" ["l"="34.649,35.537"]
"marcoslucianops/DeepStream-Yolo" ["l"="30.009,38.079"]
"GeekAlexis/FastMOT" ["l"="32.228,36.129"]
"linghu8812/tensorrt_inference" ["l"="34.654,35.556"]
"NVIDIA-AI-IOT/deepstream_python_apps" ["l"="29.934,38.075"]
"rbonghi/jetson_stats" ["l"="29.84,38.091"]
"ipazc/mtcnn" ["l"="33.971,35.346"]
"AITTSMD/MTCNN-Tensorflow" ["l"="34.01,35.28"]
"timesler/facenet-pytorch" ["l"="33.968,35.392"]
"TropComplique/mtcnn-pytorch" ["l"="35.145,33.428"]
"shanren7/real_time_face_recognition" ["l"="35.052,33.539"]
"rcmalli/keras-vggface" ["l"="35.077,33.539"]
"yeephycho/tensorflow-face-detection" ["l"="34.927,33.489"]
"zllrunning/face-parsing.PyTorch" ["l"="33.456,33.02"]
"nerox8664/awesome-computer-vision-models" ["l"="34.234,35.286"]
"nerox8664/cat-gan" ["l"="34.194,35.29"]
"NervanaSystems/distiller" ["l"="27.573,35.45"]
"Tencent/PocketFlow" ["l"="27.564,35.401"]
"Tencent/FeatherCNN" ["l"="27.605,35.394"]
"deepmind/sonnet" ["l"="24.865,35.774"]
"openai/gradient-checkpointing" ["l"="27.562,35.345"]
"yahoo/TensorFlowOnSpark" ["l"="11.133,23.94"]
"tensorflow/tensor2tensor" ["l"="30.047,32.545"]
"google/dopamine" ["l"="25.013,35.966"]
"yunjey/StarGAN" ["l"="33.625,32.692"]
"facebookresearch/hydra" ["l"="34.182,35.879"]
"omry/omegaconf" ["l"="34.244,35.905"]
"ashleve/lightning-hydra-template" ["l"="34.22,35.904"]
"tiangolo/typer" ["l"="23.164,3.879"]
"facebookresearch/hiplot" ["l"="25.512,33.989"]
"deepmind/alphafold" ["l"="17.452,37.781"]
"openai/baselines" ["l"="25.044,35.992"]
"pytorch/fairseq" ["l"="29.978,32.515"]
"deepmind/acme" ["l"="25.208,35.868"]
"karpathy/minGPT" ["l"="27.394,30.872"]
"PatrickHua/SimSiam" ["l"="34.514,36.05"]
"Spijkervet/SimCLR" ["l"="34.527,36.086"]
"asheeshcric/awesome-contrastive-self-supervised-learning" ["l"="34.549,36.08"]
"adambielski/siamese-triplet" ["l"="24.069,35.5"]
"Confusezius/Deep-Metric-Learning-Baselines" ["l"="33.566,34.24"]
"leftthomas/SimCLR" ["l"="34.498,36.061"]
"sthalles/PyTorch-BYOL" ["l"="34.525,36.106"]
"kekmodel/FixMatch-pytorch" ["l"="33.851,36.742"]
"mdiephuis/SimCLR" ["l"="34.545,36.112"]
"kakaobrain/torchlars" ["l"="34.602,36.199"]
"AndrewAtanov/simclr-pytorch" ["l"="34.559,36.111"]
"Spijkervet/BYOL" ["l"="34.543,36.126"]
"Sungwon-Han/FEDX" ["l"="34.383,36.307"]
"archon159/SELOR" ["l"="34.384,36.331"]
"KSB21ST/MINI-ARC" ["l"="34.375,36.338"]
"archon159/elsa" ["l"="34.383,36.279"]
"SwinTransformer/Transformer-SSL" ["l"="34.638,35.975"]
"WXinlong/DenseCL" ["l"="34.603,36.03"]
"microsoft/esvit" ["l"="34.661,36.012"]
"SwinTransformer/Swin-Transformer-Semantic-Segmentation" ["l"="34.664,35.88"]
"Sara-Ahmed/SiT" ["l"="34.684,36.029"]
"bytedance/ibot" ["l"="34.653,36.023"]
"sail-sg/volo" ["l"="34.68,35.947"]
"SwinTransformer/Video-Swin-Transformer" ["l"="32.478,35.024"]
"xieenze/DetCo" ["l"="31.59,35.048"]
"facebookresearch/AugLy" ["l"="34.32,35.896"]
"makcedward/nlpaug" ["l"="29.681,32.5"]
"facebookresearch/pytorchvideo" ["l"="32.522,35.021"]
"speechbrain/speechbrain" ["l"="0.467,39.899"]
"evidentlyai/evidently" ["l"="25.475,34.139"]
"PaddlePaddle/awesome-DeepLearning" ["l"="34.153,35.801"]
"PaddlePaddle/PaddleRec" ["l"="22.092,27.268"]
"jeonsworld/ViT-pytorch" ["l"="34.559,35.926"]
"52CV/CVPR-2022-Papers" ["l"="34.587,35.799"]
"52CV/2021-CV-Surveys" ["l"="34.566,35.732"]
"enpeizhao/CVprojects" ["l"="34.605,35.76"]
"Javacr/PyQt5-YOLOv5" ["l"="32.023,36.207"]
"52CV/CV-Surveys" ["l"="34.595,35.817"]
"dyh/unbox_yolov5_deepsort_counting" ["l"="32.07,36.208"]
"shouxieai/learning-cuda-trt" ["l"="34.66,35.687"]
"Charmve/computer-vision-in-action" ["l"="24.371,31.233"]
"ppogg/YOLOv5-Lite" ["l"="16.149,-7.069"]
"GYee/CV_interviews_Q-A" ["l"="24.3,31.293"]
"yeyun111/dlcv_for_beginners" ["l"="34.673,35.799"]
"TommyZihao/MMGeneration_Tutorials" ["l"="34.747,35.814"]
"philferriere/cocoapi" ["l"="34.466,35.375"]
"leoxiaobin/deep-high-resolution-net.pytorch" ["l"="36.045,35.137"]
"ShuLiu1993/PANet" ["l"="34.595,35.351"]
"multimodallearning/pytorch-mask-rcnn" ["l"="34.486,35.328"]
"amusi/TensorFlow-From-Zero-To-One" ["l"="24.002,31.185"]
"amusi/awesome-lane-detection" ["l"="31.996,44.095"]
"weiaicunzai/Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks" ["l"="34.376,35.477"]
"AntixK/PyTorch-VAE" ["l"="34.3,35.865"]
"lucidrains/denoising-diffusion-pytorch" ["l"="34.475,28.87"]
"wiseodd/generative-models" ["l"="33.742,32.685"]
"rosinality/vq-vae-2-pytorch" ["l"="25.007,32.534"]
"YannDubs/disentangling-vae" ["l"="25.044,32.605"]
"clementchadebec/benchmark_VAE" ["l"="23.638,30.231"]
"ahong007007/awesomeCV" ["l"="34.622,35.515"]
"Sophia-11/Awesome-CVPR-Paper" ["l"="34.565,35.597"]
"pprp/SimpleCVReproduction" ["l"="31.505,37.24"]
"ming71/CV_PaperDaily" ["l"="34.681,35.501"]
"huawei-noah/ghostnet" ["l"="34.598,35.489"]
"extreme-assistant/cvpr2020" ["l"="34.597,35.517"]
"KOD-Chen/YOLOv2-Tensorflow" ["l"="34.466,34.998"]
"KOD-Chen/YOLOv1-Tensorflow" ["l"="34.48,34.933"]
"yhcc/yolo2" ["l"="34.448,35.074"]
"shishichang/yolov2-tensorflow" ["l"="34.458,35.01"]
"SnailTyan/deep-learning-papers-translation" ["l"="34.361,35.342"]
"eragonruan/text-detection-ctpn" ["l"="29.487,34.168"]
"xiaofengShi/CHINESE-OCR" ["l"="29.524,34.158"]
"iwantooxxoox/Keras-OpenFace" ["l"="35.072,33.621"]
"zengarden/light_head_rcnn" ["l"="34.579,35.214"]
"Embedding/Chinese-Word-Vectors" ["l"="32.012,30.196"]
"brightmart/nlp_chinese_corpus" ["l"="32.018,30.231"]
"brightmart/albert_zh" ["l"="32.122,30.219"]
"shenweichen/DeepCTR" ["l"="22.73,37.113"]
"baidu/AnyQ" ["l"="32.03,30.155"]
"baidu/lac" ["l"="31.98,30.232"]
"macanv/BERT-BiLSTM-CRF-NER" ["l"="32.174,30.151"]
"hanxiao/bert-as-service" ["l"="29.94,32.577"]
"meliketoy/wide-resnet.pytorch" ["l"="34.286,35.323"]
"huyvnphan/PyTorch_CIFAR10" ["l"="21.449,14.012"]
"chengyangfu/pytorch-vgg-cifar10" ["l"="34.149,35.206"]
"he-y/Awesome-Pruning" ["l"="30.872,35.601"]
"junyuseu/pytorch-cifar-models" ["l"="34.256,35.317"]
"Eric-mingjie/rethinking-network-pruning" ["l"="30.883,35.616"]
"tomgoldstein/loss-landscape" ["l"="34.319,35.741"]
"amirgholami/PyHessian" ["l"="23.896,34.407"]
"marcellodebernardi/loss-landscapes" ["l"="34.236,35.818"]
"logancyang/loss-landscape-anim" ["l"="34.138,35.887"]
"facebookresearch/xformers" ["l"="27.567,31.023"]
"openai/triton" ["l"="27.636,30.995"]
"aimhubio/aim" ["l"="25.402,34.165"]
"google/flax" ["l"="23.509,33.746"]
"cleanlab/cleanlab" ["l"="25.524,34.193"]
"TimDettmers/bitsandbytes" ["l"="27.542,31.094"]
"davda54/sam" ["l"="34.436,35.819"]
"google/neural-tangents" ["l"="23.427,33.808"]
"rtqichen/torchdiffeq" ["l"="23.281,33.842"]
"google-research/sam" ["l"="34.406,35.853"]
"MadryLab/robustness" ["l"="21.456,14.047"]
"hendrycks/robustness" ["l"="21.373,14.011"]
"quark0/darts" ["l"="28.415,34.333"]
"victoresque/pytorch-template" ["l"="34.143,35.775"]
"moemen95/Pytorch-Project-Template" ["l"="34.102,35.791"]
"MrGemy95/Tensorflow-Project-Template" ["l"="34.011,35.753"]
"boostcamp-ai-tech-4/ai-tech-interview" ["l"="44.542,-15.089"]
"obss/sahi" ["l"="34.595,35.641"]
"airctic/icevision" ["l"="22.738,28.989"]
"rafaelpadilla/review_object_detection_metrics" ["l"="34.593,35.561"]
"neuralmagic/sparseml" ["l"="27.728,31.009"]
"neuralmagic/deepsparse" ["l"="27.696,31.027"]
"tryolabs/norfair" ["l"="34.609,35.665"]
"PyTorchLightning/deep-learning-project-template" ["l"="34.226,35.979"]
"PyTorchLightning/lightning-flash" ["l"="34.241,35.954"]
"PyTorchLightning/metrics" ["l"="34.217,35.952"]
"TylerYep/torchinfo" ["l"="34.25,35.796"]
"umautobots/vod-converter" ["l"="34.529,34.927"]
"nghiattran/vod-converter" ["l"="34.542,34.88"]
"xiaohaoChen/rrc_detection" ["l"="34.515,35.052"]
"chaoqichen/HTCN" ["l"="29.569,34.884"]
"manutdzou/KITTI_SSD" ["l"="34.543,34.787"]
"MarkMuth/QtKittiVisualizer" ["l"="30.38,44.365"]
"zhaoweicai/mscnn" ["l"="34.505,35.064"]
"cory8249/yolo2-pytorch" ["l"="34.529,34.872"]
"kujason/avod" ["l"="30.466,44.321"]
"traveller59/kitti-object-eval-python" ["l"="30.433,44.243"]
"Jumabek/darknet_scripts" ["l"="34.614,35.015"]
"PaulChongPeng/darknet" ["l"="34.642,35.101"]
"hjimce/darknet_mobilenet" ["l"="48.228,-4.966"]
"zunzhumu/darknet-mobilenet" ["l"="48.198,-4.976"]
"bendidi/Tracking-with-darkflow" ["l"="32.391,36.085"]
"xueeinstein/darknet-vis" ["l"="34.69,34.924"]
"KumaTea/pytorch-aarch64" ["l"="33.845,34.907"]
"biubug6/Face-Detector-1MB-with-landmark" ["l"="35.032,33.323"]
"YonghaoHe/A-Light-and-Fast-Face-Detector-for-Edge-Devices" ["l"="35.023,33.305"]
"zuoqing1988/ZQCNN" ["l"="34.038,35.349"]
"Star-Clouds/CenterFace" ["l"="35.03,33.281"]
"NVIDIA/nccl" ["l"="27.872,35.378"]
"kemaloksuz/ObjectDetectionImbalance" ["l"="34.708,35.454"]
"ming71/mmdetection-annotated" ["l"="34.674,35.441"]
"codebox/image_augmentor" ["l"="34.575,35.319"]
"ZFTurbo/Weighted-Boxes-Fusion" ["l"="34.567,35.629"]
"BobLiu20/YOLOv3_PyTorch" ["l"="34.542,35.287"]
"choasup/caffe-yolo9000" ["l"="34.661,35.037"]
"gklz1982/caffe-yolov2" ["l"="34.622,35.074"]
"canteen-man/MobileNet-SSD-Focal-loss" ["l"="34.685,34.981"]
"Longqi-S/Focal-Loss" ["l"="34.656,35.007"]
"xslittlegrass/CarND-Vehicle-Detection" ["l"="30.911,36.267"]
"rcmalli/keras-mobilenet" ["l"="31.011,31.706"]
"puzzledqs/BBox-Label-Tool" ["l"="34.381,35.134"]
"aurora95/Keras-FCN" ["l"="31.533,36.807"]
"stratospark/keras-multiprocess-image-data-generator" ["l"="31.024,31.689"]
"xiaohu2015/DeepLearning_tutorials" ["l"="34.4,35.211"]
"wy1iu/sphereface" ["l"="35.062,33.46"]
"Seanlinx/mtcnn" ["l"="34.972,33.471"]
"CongWeilin/mtcnn-caffe" ["l"="34.959,33.455"]
"dlunion/mtcnn" ["l"="34.948,33.458"]
"mahyarnajibi/SSH" ["l"="34.974,33.445"]
"RiweiChen/DeepFace" ["l"="34.982,33.516"]
"becauseofAI/HelloFace" ["l"="-33.608,-15.902"]
"wywu/LAB" ["l"="34.921,33.352"]
"fwang91/IMDb-Face" ["l"="35.101,33.443"]
"happynear/FaceDatasets" ["l"="35.106,33.452"]
"zeusees/HyperLandmark" ["l"="34.953,33.355"]
"AlexanderParkin/ChaLearn_liveness_challenge" ["l"="35.177,33.231"]
"ShownX/FacePaperCollection" ["l"="34.633,31.611"]
"auroua/InsightFace_TF" ["l"="35.085,33.5"]
"msracver/FCIS" ["l"="34.396,35.121"]
"facebookresearch/llama" ["l"="27.227,30.945"]
"microsoft/DeepSpeed" ["l"="27.225,30.897"]
"tatsu-lab/stanford_alpaca" ["l"="27.192,30.96"]
"google-research/text-to-text-transfer-transformer" ["l"="29.891,32.455"]
"coldlarry/YOLOv3-complete-pruning" ["l"="30.97,35.681"]
"CaoWGG/TensorRT-CenterNet" ["l"="34.681,35.524"]
"jwchoi384/Gaussian_YOLOv3" ["l"="30.992,35.745"]
"Zzh-tju/DIoU-darknet" ["l"="31.003,35.809"]
"wlguan/Stronger-yolo-pytorch" ["l"="34.731,35.361"]
"openvinotoolkit/openvino_notebooks" ["l"="34.316,35.548"]
"openvinotoolkit/open_model_zoo" ["l"="34.369,35.584"]
"openvinotoolkit/openvino" ["l"="34.344,35.548"]
"openvinotoolkit/model_server" ["l"="34.347,35.525"]
"josepholiveira/podcastr" ["l"="-11.444,28.379"]
"openvinotoolkit/nncf" ["l"="30.836,35.722"]
"openvinotoolkit/openvino_contrib" ["l"="34.301,35.508"]
"RH12503/triangula" ["l"="-11.45,28.244"]
"luxonis/depthai-experiments" ["l"="-11.182,39.341"]
"openvinotoolkit/training_extensions" ["l"="34.428,35.513"]
"PINTO0309/PINTO_model_zoo" ["l"="34.296,35.597"]
"bes-dev/stable_diffusion.openvino" ["l"="34.297,29.141"]
"intel/openfl" ["l"="21.099,27.08"]
"luxonis/depthai-python" ["l"="-11.201,39.333"]
"luxonis/depthai" ["l"="-11.185,39.362"]
"openvinotoolkit/openvino_tensorflow" ["l"="34.118,35.563"]
"pytorch/torchdynamo" ["l"="27.777,35.578"]
"xl0/lovely-tensors" ["l"="34.197,35.994"]
"aetilius/pHash" ["l"="32.819,34.07"]
"bunchesofdonald/photohash" ["l"="33.901,35.531"]
"jenssegers/imagehash" ["l"="-24.456,-42.847"]
"EdjoLabs/image-match" ["l"="32.815,34.149"]
"jrosebr1/imutils" ["l"="34.086,35.358"]
"spotify/annoy" ["l"="30.151,32.66"]
"corona10/goimagehash" ["l"="-15.088,-4.144"]
"ProvenanceLabs/image-match" ["l"="32.839,34.127"]
"commonsmachinery/blockhash-python" ["l"="33.866,35.553"]
"thorn-oss/perception" ["l"="33.925,35.527"]
"zhirongw/lemniscate.pytorch" ["l"="34.506,36.124"]
"HobbitLong/RepDistiller" ["l"="30.86,35.48"]
"PyTorchLightning/lightning-bolts" ["l"="34.313,36.005"]
"PyTorchLightning/lightning-transformers" ["l"="34.218,36.01"]
"PyTorchLightning/lightning-tutorials" ["l"="34.252,36.048"]
"lucidrains/mlp-mixer-pytorch" ["l"="34.565,36.017"]
"williamFalcon/pytorch-lightning-vae" ["l"="34.27,36.092"]
"pytorch/data" ["l"="23.396,33.65"]
"asteroid-team/torch-audiomentations" ["l"="0.287,39.881"]
"onnx/tensorflow-onnx" ["l"="34.442,35.545"]
"apache/tvm" ["l"="27.785,35.51"]
"facebookresearch/simsiam" ["l"="34.526,36.007"]
"facebookresearch/vicreg" ["l"="34.447,36.07"]
"facebookresearch/msn" ["l"="34.637,36.029"]
"jiqizhixin/ML-Tutorial-Experiment" ["l"="23.733,31.22"]
"exacity/simplified-deeplearning" ["l"="23.764,31.246"]
"aksnzhy/xlearn" ["l"="22.788,37.244"]
"signatrix/efficientdet" ["l"="34.641,35.499"]
"facebookresearch/Detic" ["l"="31.772,34.878"]
"serengil/deepface" ["l"="33.953,35.455"]
"serengil/tensorflow-101" ["l"="35.032,33.567"]
"serengil/retinaface" ["l"="35.002,33.342"]
"exadel-inc/CompreFace" ["l"="-39.062,39.995"]
"cleardusk/3DDFA_V2" ["l"="34.76,31.718"]
"lab-ml/nn" ["l"="34.244,36.012"]
"tensortrade-org/tensortrade" ["l"="21.691,32.558"]
"gordicaleksa/pytorch-GAT" ["l"="21.82,38.579"]
"lab-ml/labml" ["l"="34.121,36.186"]
"berty/berty" ["l"="32.705,-26.334"]
"google/model_search" ["l"="25.43,34.054"]
"louisfb01/Best_AI_paper_2020" ["l"="23.87,30.429"]
"activeloopai/Hub" ["l"="25.27,34.195"]
"POSTECH-CVLab/PyTorch-StudioGAN" ["l"="33.372,32.917"]
"ebhy/budgetml" ["l"="25.429,34.126"]
"extreme-assistant/CVPR2023-Paper-Code-Interpretation" ["l"="34.62,35.876"]
"gbstack/CVPR-2022-papers" ["l"="34.599,35.855"]
"DWCTOD/CVPR2023-Papers-with-Code-Demo" ["l"="34.614,35.916"]
"JierunChen/FasterNet" ["l"="34.752,35.838"]
"facebookresearch/ConvNeXt-V2" ["l"="31.849,34.977"]
"xmu-xiaoma666/FightingCV-Paper-Reading" ["l"="34.606,35.8"]
"DeNA/PyTorch_YOLOv3" ["l"="34.621,35.313"]
"andy-yun/pytorch-0.4-yolov3" ["l"="34.591,35.246"]
"ShuangXieIrene/ssds.pytorch" ["l"="34.594,35.261"]
"xiongzihua/pytorch-YOLO-v1" ["l"="34.544,33.87"]
"WangQvQ/Yolov5_Magic" ["l"="34.646,35.745"]
"Gumpest/YOLOv5-Multibackbone-Compression" ["l"="31.112,35.695"]
"cv516Buaa/tph-yolov5" ["l"="31.101,35.709"]
"positive666/yolov5_research" ["l"="16.483,-6.855"]
"Syencil/mobile-yolov5-pruning-distillation" ["l"="31.042,35.677"]
"iscyy/yoloair2" ["l"="34.641,35.727"]
"DT42/BerryNet" ["l"="34.141,34.976"]
"waveform80/picamera" ["l"="-32.201,40.063"]
"wroscoe/donkey" ["l"="29.182,42.861"]
"RyanZotti/Self-Driving-Car" ["l"="29.132,42.841"]
"wwj718/awesome-raspberry-pi-zh" ["l"="1.245,40.546"]
"raspberrypi/documentation" ["l"="-32.094,40.043"]
"Microsoft/ELL" ["l"="34.123,34.924"]
"mcdona1d/RaspberryWechatPi" ["l"="1.197,40.552"]
"thibmaek/awesome-raspberry-pi" ["l"="27.926,-19.425"]
"lucidrains/g-mlp-pytorch" ["l"="34.665,36.092"]
"jaketae/g-mlp" ["l"="34.7,36.133"]
"lucidrains/g-mlp-gpt" ["l"="34.713,36.153"]
"Andrew-Qibin/VisionPermutator" ["l"="34.701,36.01"]
"fchollet/keras-resources" ["l"="23.44,31.02"]
"miraclewkf/ResNeXt-PyTorch" ["l"="34.335,35.079"]
"clcarwin/convert_torch_to_pytorch" ["l"="34.376,35.24"]
"kuangliu/pytorch-retinanet" ["l"="34.478,35.265"]
"felixgwu/img_classification_pk_pytorch" ["l"="34.365,35.227"]
"gpleiss/efficient_densenet_pytorch" ["l"="34.355,35.24"]
"andreasveit/densenet-pytorch" ["l"="34.327,35.201"]
"ShichenLiu/CondenseNet" ["l"="34.467,35.227"]
"rwightman/pytorch-dpn-pretrained" ["l"="32.944,35.78"]
"moskomule/senet.pytorch" ["l"="31.633,37.12"]
"DrSleep/tensorflow-deeplab-resnet" ["l"="31.588,36.86"]
"YixuanLi/densenet-tensorflow" ["l"="34.307,35.042"]
"taki0112/Densenet-Tensorflow" ["l"="34.333,35.02"]
"raghakot/keras-resnet" ["l"="34.265,35.018"]
"taki0112/SENet-Tensorflow" ["l"="34.376,35.036"]
"arashno/tensorflow_multigpu_imagenet" ["l"="34.249,34.97"]
"ycszen/TensorFlowLaboratory" ["l"="34.277,34.953"]
"kevin28520/My-TensorFlow-tutorials" ["l"="34.286,35.033"]
"taki0112/ResNeXt-Tensorflow" ["l"="34.344,34.986"]
"wandb/wandb" ["l"="25.388,34.234"]
"lucidrains/imagen-pytorch" ["l"="34.341,28.925"]
"miracleyoo/pytorch-lightning-template" ["l"="32.154,30.422"]
"pyg-team/pytorch_geometric" ["l"="21.808,38.545"]
"Lightning-AI/metrics" ["l"="32.054,30.752"]
"microsoft/nni" ["l"="25.357,33.918"]
"NVIDIA/Megatron-LM" ["l"="27.533,31.04"]
"lakshayg/tensorflow-build" ["l"="34.161,35.157"]
"mind/wheels" ["l"="34.113,35.17"]
"fo40225/tensorflow-windows-wheel" ["l"="34.202,35.273"]
"yaroslavvb/tensorflow-community-wheels" ["l"="34.047,35.102"]
"plaidml/plaidml" ["l"="27.583,35.499"]
"tensorflow/serving" ["l"="25.476,34.212"]
"tensorflow/nmt" ["l"="30.085,32.546"]
"tensorlayer/tensorlayer" ["l"="25.013,36.102"]
"philipperemy/keras-attention-mechanism" ["l"="31.325,31.567"]
"intel/mkl-dnn" ["l"="27.654,35.382"]
"Epiphqny/VisTR" ["l"="34.776,35.847"]
"youtubevos/MaskTrackRCNN" ["l"="31.827,33.286"]
"seoungwugoh/STM" ["l"="31.862,33.242"]
"wjf5203/VNext" ["l"="31.842,33.341"]
"z-x-yang/CFBI" ["l"="31.853,33.259"]
"facebookresearch/Mask2Former" ["l"="34.733,35.856"]
"wjf5203/SeqFormer" ["l"="31.825,33.377"]
"youtubevos/cocoapi" ["l"="31.807,33.316"]
"JialeCao001/SipMask" ["l"="31.807,33.275"]
"hkchengrex/STCN" ["l"="31.849,33.277"]
"sabarim/STEm-Seg" ["l"="31.808,33.292"]
"wjn922/ReferFormer" ["l"="31.19,33.932"]
"WongKinYiu/PyTorch_YOLOv4" ["l"="34.542,35.511"]
"bubbliiiing/yolov4-pytorch" ["l"="29.734,35.347"]
"argusswift/YOLOv4-pytorch" ["l"="-25.775,19.139"]
"derronqi/yolov7-face" ["l"="31.009,34.744"]
"xialuxi/yolov5_face_landmark" ["l"="30.5,38.105"]
"DefTruth/lite.ai.toolkit" ["l"="34.451,35.652"]
"polarisZhao/PFLD-pytorch" ["l"="34.974,33.293"]
"hanson-young/nniefacelib" ["l"="34.963,33.343"]
"Tencent/TFace" ["l"="35.143,33.279"]
"minivision-ai/Silent-Face-Anti-Spoofing" ["l"="35.121,33.256"]
"ronghuaiyang/arcface-pytorch" ["l"="35.158,33.393"]
"ZhaoJ9014/face.evoLVe" ["l"="35.178,33.302"]
"PaddlePaddle/docs" ["l"="33.913,35.969"]
"PaddlePaddle/community" ["l"="33.981,35.924"]
"wkentaro/pytorch-for-numpy-users" ["l"="34.19,35.443"]
"smilli/research-advice" ["l"="31.283,-22.261"]
"Kaixhin/grokking-pytorch" ["l"="34.133,35.621"]
"CVBox/PyTorchCV" ["l"="34.454,35.282"]
"ansleliu/LightNet" ["l"="31.689,36.937"]
"KaimingHe/resnet-1k-layers" ["l"="34.23,35.09"]
"junfu1115/DANet" ["l"="31.661,37.058"]
"shaoshengsong/MobileNetV3-SSD" ["l"="34.717,35.272"]
"justimyhxu/Dense-RepPoints" ["l"="34.82,35.51"]
"Scalsol/RepPointsV2" ["l"="34.804,35.558"]
"zhangxiaosong18/FreeAnchor" ["l"="34.678,35.416"]
"ZJULearning/ttfnet" ["l"="34.768,35.496"]
"FateScript/CenterNet-better" ["l"="34.791,35.508"]
"taokong/FoveaBox" ["l"="34.725,35.418"]
"aim-uofa/adet" ["l"="34.838,35.473"]
"d-li14/involution" ["l"="34.67,35.783"]
"microsoft/CSWin-Transformer" ["l"="34.725,35.912"]
"uber-research/UPSNet" ["l"="31.854,36.947"]
"Epiphqny/SOLO" ["l"="34.903,35.456"]
"xingyizhou/CenterTrack" ["l"="32.297,36.171"]
"ifzhang/FairMOT" ["l"="32.301,36.152"]
"DWCTOD/ECCV2022-Papers-with-Code-Demo" ["l"="34.622,35.848"]
"raoyongming/HorNet" ["l"="31.888,35.034"]
"triton-inference-server/server" ["l"="34.432,35.603"]
"NVIDIA/NeMo" ["l"="0.485,39.938"]
"espnet/espnet" ["l"="0.517,39.96"]
"bamos/densenet.pytorch" ["l"="34.34,35.217"]
"lizhengwei1992/ResidualDenseNetwork-Pytorch" ["l"="35.756,32.169"]
"xternalz/WideResNet-pytorch" ["l"="34.234,35.218"]
"dyhan0920/PyramidNet-PyTorch" ["l"="33.949,36.583"]
"mapillary/inplace_abn" ["l"="31.67,36.971"]
"szagoruyko/attention-transfer" ["l"="30.825,35.477"]
"onnx/onnx-tensorflow" ["l"="34.463,35.466"]
"onnx/onnxmltools" ["l"="34.594,35.576"]
"divamgupta/image-segmentation-keras" ["l"="29.095,36.56"]
"zhixuhao/unet" ["l"="29.16,36.579"]
"MrGiovanni/UNetPlusPlus" ["l"="29.206,36.55"]
"ronghanghu/seg_every_thing" ["l"="34.749,35.28"]
"skrish13/PyTorch-mask-x-rcnn" ["l"="34.729,35.244"]
"kevin-ssy/FishNet" ["l"="34.689,35.315"]
"scaelles/DEXTR-KerasTensorflow" ["l"="34.856,35.295"]
"jfzhang95/DeepGrabCut-PyTorch" ["l"="31.534,33.301"]
"davidjesusacu/polyrnn-pp" ["l"="34.824,35.3"]
"fidler-lab/polyrnn-pp" ["l"="34.836,35.328"]
"saic-vul/fbrs_interactive_segmentation" ["l"="31.746,33.276"]
"shiyinzhang/Inside-Outside-Guidance" ["l"="31.708,33.275"]
"JackieZhangdx/WeakSupervisedSegmentationList" ["l"="30.789,37.537"]
"saic-vul/ritm_interactive_segmentation" ["l"="31.732,33.295"]
"speedinghzl/pytorch-segmentation-toolbox" ["l"="31.692,36.999"]
"roytseng-tw/mask-rcnn.pytorch" ["l"="34.599,35.202"]
"facebookresearch/R2Plus1D" ["l"="32.446,34.833"]
"veronikayurchuk/pretrained-models.pytorch" ["l"="34.531,35.193"]
"youansheng/pytorch-cv" ["l"="36.212,35.155"]
"sfzhang15/SFD" ["l"="34.967,33.42"]
"soeaver/py-RFCN-priv" ["l"="34.355,32.336"]
"yihui-he/channel-pruning" ["l"="30.813,35.612"]
"sanghoon/pva-faster-rcnn" ["l"="34.496,35.079"]
"yjxiong/caffe" ["l"="32.532,34.785"]
"titu1994/Inception-v4" ["l"="34.313,34.958"]
"kentsommer/keras-inceptionV4" ["l"="34.308,34.984"]
"yuyang-huang/keras-inception-resnet-v2" ["l"="34.316,34.866"]
"titu1994/DenseNet" ["l"="34.313,35.001"]
"titu1994/Keras-Classification-Models" ["l"="34.294,34.883"]
"titu1994/Keras-ResNeXt" ["l"="34.333,35.058"]
"flyyufelix/DenseNet-Keras" ["l"="34.316,35.02"]
"asmith26/wide_resnets_keras" ["l"="34.305,34.823"]
"megvii-model/RepVGG" ["l"="34.608,35.716"]
"lukemelas/PyTorch-Pretrained-ViT" ["l"="34.541,35.951"]
"jacobgil/vit-explain" ["l"="34.613,35.978"]
"asyml/vision-transformer-pytorch" ["l"="34.547,35.975"]
"hila-chefer/Transformer-Explainability" ["l"="34.612,35.95"]
"FrancescoSaverioZuppichini/ViT" ["l"="34.281,36.024"]
"DirtyHarryLYL/Transformer-in-Vision" ["l"="34.599,35.93"]
"luo3300612/Visualizer" ["l"="34.649,35.955"]
"TACJu/TransFG" ["l"="34.303,36.559"]
"kentaroy47/vision-transformers-cifar10" ["l"="34.427,36.04"]
"lucidrains/TimeSformer-pytorch" ["l"="32.453,35.024"]
"pkumivision/FFC" ["l"="34.919,36.11"]
"raoyongming/GFNet" ["l"="34.834,36.038"]
"Sophia-11/Awesome-CV-Resources" ["l"="34.273,35.339"]
"Sophia-11/Awesome-ICCV2019" ["l"="34.328,35.372"]
"Sophia-11/Awesome-NeurIPS2019-NIPS2019" ["l"="34.121,35.245"]
"hoya012/CVPR-2019-Paper-Statistics" ["l"="34.341,35.406"]
"theAIGuysCode/yolov4-deepsort" ["l"="32.216,36.09"]
"theAIGuysCode/tensorflow-yolov4-tflite" ["l"="32.168,36.034"]
"microsoft/computervision-recipes" ["l"="34.252,35.749"]
"microsoft/nlp-recipes" ["l"="29.713,32.593"]
"fastai/fastbook" ["l"="23.712,30.694"]
"EthicalML/awesome-production-machine-learning" ["l"="23.71,30.559"]
"microsoft/recommenders" ["l"="22.837,37.109"]
"zhang-tao-whu/e2ec" ["l"="34.882,35.695"]
"lkevinzc/dance" ["l"="34.846,35.609"]
"Randl/ShuffleNetV2-pytorch" ["l"="34.713,35.186"]
"ericsun99/Shufflenet-v2-Pytorch" ["l"="34.641,35.216"]
"Bugdragon/ShuffleNet_v2_PyTorch" ["l"="34.779,35.155"]
"HuKai97/yolov5-5.x-annotations" ["l"="31.099,35.724"]
"mohenghui/yolov5_attention" ["l"="16.531,-6.847"]
"Ranking666/Yolov5-Processing" ["l"="31.087,35.696"]
"AlanLi1997/slim-neck-by-gsconv" ["l"="31.31,35.756"]
"Bobo-y/flexible-yolov5" ["l"="31.124,35.733"]
"midasklr/yolov5prune" ["l"="31.074,35.683"]
"open-mmlab/mmrotate" ["l"="35.08,36.89"]
"IDEA-Research/detrex" ["l"="31.781,34.982"]
"open-mmlab/OpenMMLabCourse" ["l"="34.76,35.8"]
"open-mmlab/playground" ["l"="34.799,35.78"]
"DWCTOD/ICCV2021-Papers-with-Code-Demo" ["l"="34.768,35.864"]
"ckkelvinchan/RealBasicVSR" ["l"="35.906,32.377"]
"Arthur151/ROMP" ["l"="35.787,35.054"]
"MIC-DKFZ/nnUNet" ["l"="29.285,36.584"]
"IgorSusmelj/pytorch-styleguide" ["l"="34.189,35.815"]
"vahidk/EffectivePyTorch" ["l"="34.17,35.752"]
"paperswithcode/releasing-research-code" ["l"="27.645,30.086"]
"tensor-yu/PyTorch_Tutorial" ["l"="23.978,31.126"]
"Tencent/TPAT" ["l"="34.67,35.622"]
"onnx/onnx-mlir" ["l"="27.69,35.556"]
"ModelTC/MQBench" ["l"="30.816,35.727"]
"microsoft/nnfusion" ["l"="27.733,35.51"]
"MegEngine/MegCC" ["l"="27.754,35.548"]
"openppl-public/ppl.cv" ["l"="27.756,35.443"]
"microsoft/OLive" ["l"="34.7,35.629"]
"grimoire/torch2trt_dynamic" ["l"="34.644,35.609"]
"pnnx/pnnx" ["l"="31.552,36.291"]
"microsoft/onnxconverter-common" ["l"="34.711,35.621"]
"alibaba/BladeDISC" ["l"="27.746,35.534"]
"WangRongsheng/BestYOLO" ["l"="34.7,35.806"]
"bubbliiiing/yolov7-pytorch" ["l"="29.759,35.37"]
"bubbliiiing/yolov5-pytorch" ["l"="29.739,35.376"]
"PanJinquan/tensorflow_models_learning" ["l"="34.403,35.183"]
"conan7882/GoogLeNet-Inception" ["l"="34.439,35.104"]
"tslgithub/image_class" ["l"="30.305,36.588"]
"calmisential/Basic_CNNs_TensorFlow2" ["l"="34.464,35.156"]
"Byronnar/tensorflow-serving-yolov3" ["l"="34.475,35.201"]
"MachineLP/train_arch" ["l"="31.359,31.417"]
"Bisonai/mobilenetv3-tensorflow" ["l"="34.693,35.221"]
"pytorch/android-demo-app" ["l"="34.454,35.699"]
"pytorch/ios-demo-app" ["l"="34.486,35.737"]
"facebookresearch/d2go" ["l"="34.733,35.615"]
"nihui/ncnn-android-yolov5" ["l"="31.635,36.318"]
"lp6m/yolov5s_android" ["l"="31.653,36.353"]
"cmdbug/YOLOv5_NCNN" ["l"="31.707,36.278"]
"johnolafenwa/PytorchMobile" ["l"="34.451,35.74"]
"tensorflow/examples" ["l"="25.686,34.285"]
"pytorch/audio" ["l"="0.402,39.884"]
"PaddlePaddle/Paddle-Lite-Demo" ["l"="34.096,35.848"]
"pytorch/serve" ["l"="25.291,34.17"]
"zchrissirhcz/awesome-ncnn" ["l"="31.63,36.297"]
"PaddlePaddle/Paddle3D" ["l"="34.175,35.84"]
"PaddlePaddle/Paddle2ONNX" ["l"="34.15,35.831"]
"PaddlePaddle/FlyCV" ["l"="-25.5,19.593"]
"PaddlePaddle/PaddleYOLO" ["l"="34.141,35.858"]
"CVCUDA/CV-CUDA" ["l"="34.533,35.644"]
"onnx/keras-onnx" ["l"="34.591,35.54"]
"tensorflow/tensorrt" ["l"="29.943,38.191"]
"microsoft/MMdnn" ["l"="34.401,35.466"]
"lucidrains/segformer-pytorch" ["l"="34.759,35.908"]
"rstrudel/segmenter" ["l"="34.709,35.893"]
"czczup/ViT-Adapter" ["l"="31.793,34.954"]
"lhoyer/DAFormer" ["l"="29.906,34.82"]
"Visual-Attention-Network/SegNeXt" ["l"="31.871,34.995"]
"google-research/maxvit" ["l"="34.937,36.009"]
"ChristophReich1996/MaxViT" ["l"="34.979,36.035"]
"google-research/maxim" ["l"="35.98,32.417"]
"moabarar/qna" ["l"="34.907,36.017"]
"snap-research/EfficientFormer" ["l"="34.791,35.903"]
"ggjy/CMT.pytorch" ["l"="34.892,36.001"]
"Cartucho/mAP" ["l"="34.446,35.383"]
"ZwwWayne/K-Net" ["l"="34.784,35.829"]
"SHI-Labs/OneFormer" ["l"="31.827,34.954"]
"IDEACVR/MaskDINO" ["l"="31.753,35"]
"IDEACVR/DINO" ["l"="31.756,34.972"]
"ShoufaChen/DiffusionDet" ["l"="31.798,34.939"]
"facebookresearch/mvit" ["l"="34.989,35.971"]
"Chenglin-Yang/LVT" ["l"="34.871,35.93"]
"clovaai/CutMix-PyTorch" ["l"="33.843,36.65"]
"miraclewkf/ImageClassification-PyTorch" ["l"="34.15,35.443"]
"kakaobrain/fast-autoaugment" ["l"="33.839,36.627"]
"wusaifei/garbage_classify" ["l"="14.019,-10.21"]
"eastmountyxz/ImageProcessing-Python" ["l"="30.25,36.688"]
"DLLXW/data-science-competition" ["l"="21.326,37.212"]
"shanglianlm0525/PyTorch-Networks" ["l"="31.563,37.143"]
"spytensor/pytorch_img_classification_for_competition" ["l"="-40.496,41.246"]
"BangguWu/ECANet" ["l"="31.602,37.171"]
"datawhalechina/dive-into-cv-pytorch" ["l"="24.338,31.193"]
"msnh2012/Msnhnet" ["l"="27.766,35.384"]
"ChenCVer/darknet" ["l"="34.763,35.293"]
"GiantPandaCV/yolov3-point" ["l"="31.419,37.317"]
"talebolano/yolov3-network-slimming" ["l"="30.939,35.696"]
"BBuf/Image-processing-algorithm" ["l"="36.076,33.45"]
"ChenYingpeng/darknet2caffe" ["l"="34.657,35.164"]
"generalized-iou/g-darknet" ["l"="30.996,35.784"]
"ArtyZe/yolo_quantization" ["l"="34.743,35.298"]
"Alibaba-MIIL/ImageNet21K" ["l"="34.581,35.948"]
"Alibaba-MIIL/ASL" ["l"="33.632,36.523"]
"naver-ai/relabel_imagenet" ["l"="44.246,-15.134"]
"google-research/reassessed-imagenet" ["l"="24.119,34.387"]
"google-research/big_transfer" ["l"="34.519,35.945"]
"facebookresearch/xcit" ["l"="34.629,35.959"]
"raoyongming/DynamicViT" ["l"="34.708,35.981"]
"rom1504/img2dataset" ["l"="31.811,34.781"]
"Alibaba-MIIL/ML_Decoder" ["l"="33.559,36.51"]
"facebookresearch/fvcore" ["l"="34.442,35.762"]
"zihangJiang/TokenLabeling" ["l"="34.693,35.954"]
"Sense-GVT/DeCLIP" ["l"="31.744,34.818"]
"szq0214/MEAL-V2" ["l"="30.884,35.455"]
"facebookresearch/SLIP" ["l"="31.756,34.811"]
"floydhub/dl-setup" ["l"="33.979,35.187"]
"jupyter/docker-stacks" ["l"="21.25,28.679"]
"waleedka/modern-deep-learning-docker" ["l"="33.953,35.171"]
"fastai/courses" ["l"="23.416,31.033"]
"bubbliiiing/yolo3-keras" ["l"="29.624,35.335"]
"amusi/Deep-Learning-Interview-Book" ["l"="24.235,31.246"]
"amusi/AI-Job-Notes" ["l"="24.207,31.283"]
"Ewenwan/MVision" ["l"="30.233,43.113"]
"titu1994/keras-squeeze-excite-network" ["l"="31.752,37.383"]
"trent-b/iterative-stratification" ["l"="34.41,35.593"]
"selimsef/dsb2018_topcoders" ["l"="29.416,35.94"]
"kobiso/CBAM-keras" ["l"="31.725,37.328"]
"bermanmaxim/LovaszSoftmax" ["l"="31.646,37.016"]
"googlecodelabs/tensorflow-for-poets-2" ["l"="34.008,34.856"]
"GoogleCloudPlatform/tensorflow-object-detection-example" ["l"="34.087,34.959"]
"BR-IDL/PaddleViT" ["l"="34.261,35.821"]
"PaddlePaddle/PASSL" ["l"="34.091,35.909"]
"PaddlePaddle/VIMER" ["l"="29.802,34.14"]
"longpeng2008/yousan.ai" ["l"="34.488,35.442"]
"sczhengyabin/Image-Downloader" ["l"="15.726,5.661"]
"dongdonghy/Detection-PyTorch-Notebook" ["l"="34.586,35.469"]
"donnyyou/torchcv" ["l"="31.711,37.066"]
"longpeng2008/Awesome_DNN_Researchers" ["l"="34.522,35.416"]
"HarleysZhang/2019_algorithm_intern_information" ["l"="24.199,31.328"]
"INTERMT/Awesome-PyTorch-Chinese" ["l"="24.003,31.075"]
"snowkylin/tensorflow-handbook" ["l"="24.064,31.064"]
"datawhalechina/competition-baseline" ["l"="24.256,31.189"]
"zhoushengisnoob/DeepClustering" ["l"="34.431,36.141"]
"facebookresearch/deepcluster" ["l"="34.472,36.118"]
"wvangansbeke/Unsupervised-Classification" ["l"="34.447,36.123"]
"XifengGuo/DEC-keras" ["l"="24.789,32.766"]
"xu-ji/IIC" ["l"="34.479,36.168"]
"shahsohil/DCC" ["l"="24.766,32.791"]
"vlukiyanov/pt-dec" ["l"="24.785,32.725"]
"piiswrong/dec" ["l"="24.766,32.766"]
"yukimasano/self-label" ["l"="34.472,36.14"]
"Yunfan-Li/Contrastive-Clustering" ["l"="34.439,36.187"]
"XifengGuo/DCEC" ["l"="24.801,32.777"]
"wangsiwei2010/awesome-multi-view-clustering" ["l"="7.643,10.189"]
"slim1017/VaDE" ["l"="24.847,32.747"]
"dog-qiuqiu/Yolo-FastestV2" ["l"="34.624,35.611"]
"ouyanghuiyu/Thundernet_Pytorch" ["l"="34.946,35.337"]
"qixuxiang/Pytorch_Lightweight_Network" ["l"="35.024,35.328"]
"mohhao/TF-Keras-ThunderNet" ["l"="35.024,35.313"]
"vaesl/LRF-Net" ["l"="34.91,35.382"]
"Ranchentx/EFGRNet" ["l"="34.872,35.37"]
"ouyanghuiyu/Snet" ["l"="34.987,35.325"]
"jefflai108/Contrastive-Predictive-Coding-PyTorch" ["l"="34.561,36.209"]
"davidtellez/contrastive-predictive-coding" ["l"="34.55,36.195"]
"facebookresearch/CPC_audio" ["l"="0.422,39.876"]
"flrngel/cpc-tensorflow" ["l"="34.546,36.225"]
"ssp573/Contrastive-Predictive-Coding" ["l"="34.554,36.238"]
"Philip-Bachman/amdim-public" ["l"="34.53,36.177"]
"mf1024/Contrastive-Predictive-Coding-for-Image-Recognition-in-PyTorch" ["l"="34.561,36.227"]
"Spijkervet/contrastive-predictive-coding" ["l"="34.574,36.239"]
"iamyuanchung/Autoregressive-Predictive-Coding" ["l"="0.407,39.847"]
"DuaneNielsen/DeepInfomaxPytorch" ["l"="34.578,36.22"]
"rdevon/DIM" ["l"="34.554,36.173"]
"Linear95/CLUB" ["l"="28.867,33.079"]
"jefflai108/pytorch-kaldi-neural-speaker-embeddings" ["l"="0.338,39.848"]
"santi-pdp/pase" ["l"="0.454,39.845"]
"andi611/Self-Supervised-Speech-Pretraining-and-Representation-Learning" ["l"="0.453,39.866"]
"Arsey/keras-transfer-learning-for-oxford102" ["l"="34.262,34.919"]
"sebastianbk/finetuned-resnet50-keras" ["l"="34.253,34.845"]
"GeorgeSeif/Transfer-Learning-Suite" ["l"="34.242,34.821"]
"danielvarga/keras-finetuning" ["l"="-33.703,-22.273"]
"l3p-cv/lost" ["l"="34.748,35.357"]
"bit-bots/imagetagger" ["l"="34.708,35.351"]
"Labelbox/labelbox" ["l"="34.768,35.363"]
"hardikvasa/google-images-download" ["l"="34.113,35.31"]
"s0md3v/Photon" ["l"="-7.728,-43.436"]
"shobrook/rebound" ["l"="21.986,2.212"]
"YoongiKim/AutoCrawler" ["l"="21.98,2.117"]
"tkarras/progressive_growing_of_gans" ["l"="33.642,32.721"]
"broadinstitute/keras-resnet" ["l"="34.234,34.938"]
"tdeboissiere/DeepLearningImplementations" ["l"="33.813,32.637"]
"szagoruyko/wide-residual-networks" ["l"="34.228,35.146"]
"jacobgil/keras-dcgan" ["l"="33.797,32.619"]
"microsoft/mup" ["l"="34.323,36.069"]
"bigscience-workshop/bigscience" ["l"="27.619,31.192"]
"microsoft/mutransformers" ["l"="34.3,36.115"]
"google-research/long-range-arena" ["l"="29.627,30.739"]
"recognai/rubrix" ["l"="29.535,32.529"]
"srush/annotated-s4" ["l"="29.699,30.733"]
"pytorch/functorch" ["l"="23.422,33.75"]
"webdataset/webdataset" ["l"="31.786,34.83"]
"EleutherAI/lm-evaluation-harness" ["l"="27.568,31.207"]
"HazyResearch/state-spaces" ["l"="29.672,30.74"]
"microsoft/LMOps" ["l"="27.367,31.189"]
"gcr/torch-residual-networks" ["l"="26.91,34.231"]
"Element-Research/rnn" ["l"="26.985,34.298"]
"yueatsprograms/Stochastic_Depth" ["l"="26.918,34.293"]
"torchnet/torchnet" ["l"="26.93,34.311"]
"torch/nn" ["l"="26.922,34.251"]
"soumith/dcgan.torch" ["l"="33.63,32.571"]
"DWCTOD/CVPR2021-Papers-with-Code-Demo" ["l"="34.882,35.887"]
"DrMahdiRezaei/DeepSOCIAL" ["l"="27.253,28.125"]
"wucng/TensorExpand" ["l"="34.959,35.401"]
"GothicAi/Instaboost" ["l"="34.784,35.439"]
"NVIDIA/trt-samples-for-hackathon-cn" ["l"="34.614,35.634"]
"shouxieai/infer" ["l"="34.693,35.702"]
"kanezaki/pytorch-unsupervised-segmentation" ["l"="34.519,36.225"]
"kanezaki/pytorch-unsupervised-segmentation-tip" ["l"="34.53,36.196"]
"Yonv1943/Unsupervised-Segmentation" ["l"="34.506,36.244"]
"lwchen6309/unsupervised-image-segmentation-by-WNet-with-NormalizedCut" ["l"="34.506,36.295"]
"mickaelChen/ReDO" ["l"="34.517,36.262"]
"Andrew-booler/W-Net" ["l"="34.513,36.281"]
"wvangansbeke/Unsupervised-Semantic-Segmentation" ["l"="34.633,36.078"]
"elliotwaite/pytorch-to-javascript-with-onnx-js" ["l"="34.797,35.673"]
"torch-js/torch-js" ["l"="34.842,35.671"]
"microsoft/onnxjs" ["l"="34.682,35.653"]
"microsoft/onnxjs-demo" ["l"="34.784,35.684"]
"PINTO0309/onnx2tf" ["l"="34.063,35.692"]
"PINTO0309/openvino2tensorflow" ["l"="34.169,35.647"]
"PINTO0309/simple-onnx-processing-tools" ["l"="34.082,35.707"]
"OliverRensu/Shunted-Transformer" ["l"="34.801,35.972"]
"dingmyu/davit" ["l"="31.928,35.028"]
"youngwanLEE/MPViT" ["l"="34.811,35.934"]
"YehLi/ImageNetModel" ["l"="31.986,35.049"]
"huawei-noah/bolt" ["l"="27.68,35.426"]
"szagoruyko/functional-zoo" ["l"="34.241,35.307"]
"dnouri/skorch" ["l"="25.512,33.671"]
"torrvision/crayon" ["l"="34.236,35.333"]
"znxlwm/pytorch-generative-model-collections" ["l"="33.674,32.712"]
"zhanghang1989/PyTorch-Encoding" ["l"="31.67,37.005"]
"czy36mengfei/tensorflow2_tutorials_chinese" ["l"="23.994,31.052"]
"TrickyGo/Dive-into-DL-TensorFlow2.0" ["l"="24.053,30.989"]
"dragen1860/TensorFlow-2.x-Tutorials" ["l"="24.085,30.964"]
"calmisential/YOLOv3_TensorFlow2" ["l"="29.489,35.462"]
"YunYang1994/CodeFun" ["l"="34.629,35.163"]
"bojone/infomax" ["l"="34.598,36.225"]
"rcalland/deep-INFOMAX" ["l"="34.61,36.249"]
"PaddlePaddle/AutoDL" ["l"="33.956,35.92"]
"PaddlePaddle/Fleet" ["l"="33.92,35.95"]
"chingyaoc/DCL" ["l"="34.543,36.156"]
"joshr17/HCL" ["l"="34.582,36.178"]
"SsnL/align_uniform" ["l"="34.538,36.209"]
"salesforce/PCL" ["l"="34.519,36.138"]
"joshr17/IFM" ["l"="34.582,36.195"]
"VainF/Awesome-Contrastive-Learning" ["l"="34.594,36.158"]
"google/revisiting-self-supervised" ["l"="34.492,36.184"]
"davidtellez/contrastive-predictive-coding-images" ["l"="34.567,36.252"]
"TengdaHan/DPC" ["l"="31.978,33.125"]
"AlexHex7/Non-local_pytorch" ["l"="31.669,37.128"]
"yassouali/awesome-semi-supervised-learning" ["l"="33.836,36.728"]
"zhaoxin94/awesome-domain-adaptation" ["l"="30.124,35.005"]
"subeeshvasu/Awesome-Learning-with-Label-Noise" ["l"="33.927,36.74"]
"pliang279/awesome-multimodal-ml" ["l"="31.618,34.721"]
"martinarjovsky/WassersteinGAN" ["l"="33.712,32.647"]
"Beckschen/TransUNet" ["l"="29.318,36.534"]
"gupta-abhay/ViT" ["l"="34.571,35.972"]
"lucidrains/pixel-level-contrastive-learning" ["l"="34.602,36.06"]
"uoguelph-mlrg/Cutout" ["l"="33.874,36.64"]
"fra31/auto-attack" ["l"="21.434,14.044"]
"facebookresearch/odin" ["l"="23.438,34.905"]
"sungyubkim/MINE-Mutual-Information-Neural-Estimation-" ["l"="28.885,33.06"]
"MasanoriYamada/Mine_pytorch" ["l"="28.874,33.043"]
"fanyun-sun/InfoGraph" ["l"="21.999,38.591"]
"rdevon/cortex" ["l"="34.593,36.245"]
"PetarV-/DGI" ["l"="21.958,38.626"]
"ufoym/imbalanced-dataset-sampler" ["l"="33.72,36.616"]
"kevinzakka/hypersearch" ["l"="25.707,33.631"]
"ugent-korea/pytorch-unet-segmentation" ["l"="29.131,36.475"]
"mortezamg63/Accessing-and-modifying-different-layers-of-a-pretrained-model-in-pytorch" ["l"="29.58,35.677"]
"Atcold/pytorch-Deep-Learning-Minicourse" ["l"="23.809,30.818"]
"usuyama/pytorch-unet" ["l"="29.174,36.513"]
"merrymercy/awesome-tensor-compilers" ["l"="27.732,35.525"]
"bytedance/lightseq" ["l"="32.085,30.367"]
"NVIDIA/FasterTransformer" ["l"="27.628,31.069"]
"nihui/opencv-mobile" ["l"="31.6,36.303"]
"Tongcheng/DN_CaffeScript" ["l"="34.594,35"]
"Tongcheng/caffe" ["l"="34.621,34.951"]
"knsong/caffe-mt" ["l"="34.636,34.936"]
"calmisential/TensorFlow2.0_ResNet" ["l"="34.45,35.041"]
"taki0112/ResNet-Tensorflow" ["l"="34.363,34.968"]
"Apm5/ImageNet_ResNet_Tensorflow2.0" ["l"="34.48,35.059"]
"calmisential/TensorFlow2.0_SSD" ["l"="29.461,35.481"]
"terrychenism/ResNeXt" ["l"="34.531,34.982"]
"cinastanbean/pytorch-onnx-tensorflow-pb" ["l"="34.553,35.404"]
"pytorch/tvm" ["l"="27.654,35.538"]
"grimoire/mmdetection-to-tensorrt" ["l"="34.662,35.597"]
"oneapi-src/oneDNN" ["l"="27.771,35.473"]
"MacgyverLin/GLSLRayMarching" ["l"="22.066,27.382"]
"seacms-net/CMS" ["l"="22.044,27.561"]
"FlyEgle/MAE-pytorch" ["l"="34.406,36.052"]
"sail-sg/poolformer" ["l"="34.67,35.919"]
"seetaface/SeetaFaceEngine2" ["l"="35.074,33.357"]
"seetafaceengine/SeetaFace2" ["l"="35.125,33.322"]
"liuruoze/EasyPR" ["l"="30.832,34.906"]
"see--/keras-centernet" ["l"="31.834,37.612"]
"yeahkun/caffe-yolo" ["l"="34.61,35.063"]
"xingwangsfu/caffe-yolo" ["l"="34.514,35.083"]
"Banus/caffe-yolo" ["l"="34.605,35.031"]
"choasUp/caffe-yolo9000" ["l"="34.579,35.02"]
"eric612/Caffe-YOLOv3-Windows" ["l"="34.657,35.109"]
"karta0807913/caffe-yolo-9000" ["l"="34.657,35.025"]
"hojel/caffe-yolo-model" ["l"="34.654,34.991"]
"pmgysel/caffe" ["l"="30.635,35.584"]
"camel007/caffe-yolo-face-detection" ["l"="34.67,35.015"]
"zhiqwang/yolov5-rt-stack" ["l"="34.644,35.642"]
"wdhao/tensorrtCV" ["l"="16.248,-7.118"]
"Syencil/tensorRT" ["l"="34.661,35.574"]
"yasenh/libtorch-yolov5" ["l"="32.123,35.863"]
"ZJU-lishuang/yolov5_prune" ["l"="31.063,35.688"]
"itsnine/yolov5-onnxruntime" ["l"="30.377,38.139"]
"uoip/SSD-variants" ["l"="34.661,35.234"]
"jinfagang/ssds_pytorch" ["l"="34.761,35.223"]
"cmhungsteve/Awesome-Transformer-Attention" ["l"="34.577,35.904"]
"kuangliu/pytorch-fpn" ["l"="34.542,35.211"]
"shouxieai/makefile_tutorial_project" ["l"="34.834,35.722"]
"shouxieai/cpp-proj-template" ["l"="34.892,35.723"]
"ming71/toolbox" ["l"="34.712,35.476"]
"SJTU-Thinklab-Det/DOTA-DOAI" ["l"="35.043,36.886"]
"CAPTAIN-WHU/DOTA_devkit" ["l"="35.045,36.854"]
"csuhan/s2anet" ["l"="35.027,36.883"]
"hhaAndroid/mmdetection-mini" ["l"="34.717,35.566"]
"dingjiansw101/AerialDetection" ["l"="35.035,36.864"]
"SJTU-Thinklab-Det/r3det-on-mmdetection" ["l"="35.033,36.875"]
"yangxue0827/RotationDetection" ["l"="35.06,36.873"]
"XinZhangNLPR/awesome-anchor-free-object-detection" ["l"="34.808,35.525"]
"CompVis/latent-diffusion" ["l"="34.407,28.925"]
"CompVis/taming-transformers" ["l"="34.389,28.843"]
"lucidrains/DALLE2-pytorch" ["l"="34.334,28.871"]
"openai/DALL-E" ["l"="34.346,28.804"]
"sovrasov/flops-counter.pytorch" ["l"="34.38,35.621"]
"pytorch/hub" ["l"="34.377,35.64"]
"Eurus-Holmes/LIS-YNP" ["l"="22.038,31.649"]
"facebookresearch/ClassyVision" ["l"="34.535,35.768"]
"facebookresearch/pytorch_GAN_zoo" ["l"="33.512,32.799"]
"zasdfgbnm/TorchSnooper" ["l"="34.321,35.641"]
"facebookresearch/video-nonlocal-net" ["l"="32.537,34.905"]
"kimiyoung/transformer-xl" ["l"="29.94,32.481"]
"adobe/antialiased-cnns" ["l"="34.537,35.541"]
"frgfm/torch-cam" ["l"="28.667,34.852"]
"ramprs/grad-cam" ["l"="28.652,34.889"]
"Oldpan/Pytorch-Memory-Utils" ["l"="34.347,35.62"]
"Swall0w/torchstat" ["l"="34.418,35.562"]
"Lyken17/pytorch-memonger" ["l"="34.428,35.583"]
"DIYer22/boxx" ["l"="34.272,35.671"]
"zhengzhugithub/CV-arXiv-Daily" ["l"="8.866,17.177"]
"Yangzhangcst/Transformer-in-Computer-Vision" ["l"="34.704,35.938"]
"dair-ai/Transformers-Recipe" ["l"="23.664,30.29"]
"google-research/scenic" ["l"="32.503,35.062"]
"NielsRogge/Transformers-Tutorials" ["l"="23.726,30.283"]
"hszhao/PSPNet" ["l"="31.636,36.875"]
"bobo0810/PytorchNetHub" ["l"="34.755,35.455"]
"bobo0810/HS-ResNet" ["l"="34.827,35.432"]
"wjchaoGit/Group-Activity-Recognition" ["l"="32.594,35.049"]
"wannabeOG/Mask-RCNN" ["l"="34.467,35.331"]
"umich-vl/CornerNet" ["l"="34.612,35.251"]
"wkentaro/pytorch-fcn" ["l"="31.664,36.947"]
"deepglint/EasyQuant" ["l"="30.798,35.71"]
"chenzomi12/DeepLearningSystem" ["l"="27.78,35.539"]
"quic/aimet" ["l"="30.84,35.704"]
"Jermmy/pytorch-quantization-demo" ["l"="30.813,35.71"]
"tpoisonooo/how-to-optimize-gemm" ["l"="27.772,35.445"]
"Meituan-AutoML/CPVT" ["l"="34.764,35.979"]
"The-AI-Summer/self-attention-cv" ["l"="34.632,35.93"]
"lucidrains/bottleneck-transformer-pytorch" ["l"="34.638,35.894"]
"leaderj1001/BottleneckTransformers" ["l"="34.654,35.935"]
"black0017/MedicalZooPytorch" ["l"="29.308,36.581"]
"leaderj1001/Stand-Alone-Self-Attention" ["l"="31.731,37.19"]
"lartpang/PyTorchTricks" ["l"="34.498,35.628"]
"666DZY666/model-compression" ["l"="30.908,35.659"]
"CoinCheung/pytorch-loss" ["l"="33.748,36.589"]
"zxdefying/pytorch_tricks" ["l"="34.396,35.677"]
"layerism/TensorRT-Inference-Server-Tutorial" ["l"="34.649,35.588"]
"ycszen/TorchSeg" ["l"="31.708,37.004"]
"microsoft/DynamicHead" ["l"="34.771,35.738"]
"microsoft/SoftTeacher" ["l"="34.81,35.714"]
"VDIGPKU/CBNetV2" ["l"="34.796,35.733"]
"xiaohu2015/SwinT_detectron2" ["l"="34.878,35.735"]
"fcjian/TOOD" ["l"="34.839,35.624"]
"microsoft/Focal-Transformer" ["l"="34.767,35.893"]
"hyz-xmaster/swa_object_detection" ["l"="34.801,35.635"]
"hyz-xmaster/VarifocalNet" ["l"="34.807,35.608"]
"yzd-v/FGD" ["l"="30.954,35.407"]
"chenxi116/PNASNet.pytorch" ["l"="28.38,34.389"]
"tonylins/pytorch-mobilenet-v2" ["l"="34.558,35.298"]
"liuzhuang13/slimming" ["l"="30.855,35.635"]
"cypw/DPNs" ["l"="32.981,35.778"]
"homles11/IGCV3" ["l"="33.214,35.871"]
"avirambh/MSDNet-GCN" ["l"="34.443,35.194"]
"facebookresearch/madgrad" ["l"="34.438,35.855"]
"lessw2020/Ranger21" ["l"="34.418,35.831"]
"juntang-zhuang/Adabelief-Optimizer" ["l"="34.42,35.776"]
"pinterest/querybook" ["l"="13.763,23.697"]
"Yonghongwei/Gradient-Centralization" ["l"="34.658,35.652"]
"qubvel/ttach" ["l"="34.414,35.691"]
"shinya7y/UniverseNet" ["l"="34.747,35.678"]
"xxxnell/how-do-vits-work" ["l"="34.589,35.985"]
"ChristofHenkel/kaggle-landmark-2021-1st-place" ["l"="32.683,34.316"]
"bentrevett/pytorch-rl" ["l"="33.858,35.628"]
"jinfagang/alfred" ["l"="34.7,35.533"]
"jinfagang/thor" ["l"="34.808,35.492"]
"NVIDIA/runx" ["l"="31.709,37.086"]
"jinfagang/nb" ["l"="31.074,35.732"]
"fastnlp/fitlog" ["l"="32.083,30.336"]
"BIGBALLON/CIFAR-ZOO" ["l"="34.281,35.37"]
"implus/PytorchInsight" ["l"="31.617,37.157"]
"lxtGH/OctaveConv_pytorch" ["l"="31.646,37.215"]
"MingSun-Tse/EfficientDNNs" ["l"="30.831,35.622"]
"hongyi-zhang/mixup" ["l"="33.815,36.707"]
"implus/SKNet" ["l"="31.636,37.162"]
"open-mmlab/OpenMMLabCamp" ["l"="34.836,35.835"]
"open-mmlab/labelbee-client" ["l"="34.824,35.815"]
"open-mmlab/labelbee" ["l"="34.858,35.826"]
"TommyZihao/MMPose_Tutorials" ["l"="34.863,35.847"]
"open-mmlab/mim-example" ["l"="34.858,35.8"]
"jshilong/GroupRCNN" ["l"="34.818,35.789"]
"open-mmlab/pre-commit-hooks" ["l"="34.847,35.808"]
"dBeker/Faster-RCNN-TensorFlow-Python3.5" ["l"="34.301,34.943"]
"kevinjliang/tf-Faster-RCNN" ["l"="34.328,34.947"]
"broadinstitute/keras-rcnn" ["l"="29.332,35.978"]
"yhenon/keras-spp" ["l"="34.373,34.996"]
"jocicmarko/ultrasound-nerve-segmentation" ["l"="29.115,36.577"]
"softberries/keras-frcnn" ["l"="34.329,34.921"]
"farizrahman4u/keras-contrib" ["l"="31.059,31.606"]
"XinyiYing/D3Dnet" ["l"="35.933,32.266"]
"xinntao/EDVR" ["l"="35.934,32.246"]
"luuuyi/CBAM.PyTorch" ["l"="31.641,37.177"]
"xvjiarui/GCNet" ["l"="31.661,37.11"]
"Duankaiwen/CPNDet" ["l"="34.903,35.586"]
"cccorn/AP-loss" ["l"="34.858,35.614"]
"facebookresearch/fair_self_supervision_benchmark" ["l"="34.494,36.139"]
"peisuke/MomentumContrast.pytorch" ["l"="34.53,36.242"]
"FiboAI/EngineX" ["l"="22.008,27.509"]
"bugbearnft/bugbear" ["l"="22.019,27.411"]
"Visual-Attention-Network/VAN-Classification" ["l"="22.094,27.695"]
"pprp/awesome-attention-mechanism-in-cv" ["l"="31.569,37.219"]
"hypercube-lab/hypercube" ["l"="22.051,27.396"]
"TinyDataML/Tiny3D" ["l"="21.985,27.448"]
"AFKDAO/wrapper" ["l"="21.999,27.458"]
"topling/toplingdb" ["l"="22.001,27.483"]
"FxPool/FxMinerProxyV3" ["l"="22.02,27.434"]
"meta-soul/MetaSpore" ["l"="22.015,27.523"]
"PyTorchLightning/pytorch-lightning-bolts" ["l"="34.257,35.969"]
"PyTorchLightning/pytorch-lightning-conference-seed" ["l"="34.217,36.066"]
"awaelchli/pytorch-lightning-snippets" ["l"="34.212,36.031"]
"szymonmaszke/torchlayers" ["l"="23.474,33.972"]
"facebookincubator/submitit" ["l"="34.272,35.942"]
"SforAiDl/genrl" ["l"="31.019,35.443"]
"d-li14/mobilenetv2.pytorch" ["l"="34.629,35.345"]
"d-li14/mobilenetv3.pytorch" ["l"="34.689,35.36"]
"Randl/MobileNetV2-pytorch" ["l"="34.641,35.238"]
"xiaolai-sqlai/mobilenetv3" ["l"="34.608,35.369"]
"kuan-wang/pytorch-mobilenet-v3" ["l"="34.645,35.369"]
"Eric-mingjie/network-slimming" ["l"="30.896,35.639"]
"megvii-model/SinglePathOneShot" ["l"="28.455,34.409"]
"mit-han-lab/once-for-all" ["l"="28.388,34.373"]
"Randl/MobileNetV3-pytorch" ["l"="34.808,35.333"]
"leaderj1001/MobileNetV3-Pytorch" ["l"="34.698,35.303"]
"denru01/netadapt" ["l"="34.884,35.289"]
"xiaomi-automl/MoGA" ["l"="28.534,34.431"]
"d-li14/ghostnet.pytorch" ["l"="34.741,35.409"]
"gidariss/FeatureLearningRotNet" ["l"="34.5,36.166"]
"zlai0/CorrFlow" ["l"="31.938,33.155"]
"xiaolonw/TimeCycle" ["l"="32.497,34.927"]
"facebookresearch/DeeperCluster" ["l"="34.467,36.18"]
"bbrattoli/JigsawPuzzlePytorch" ["l"="34.49,36.221"]
"philiptheother/FeatureDecoupling" ["l"="34.488,36.204"]
"ZeroE04/R-CenterNet" ["l"="35.024,36.903"]
"er-muyue/DeFRCN" ["l"="22.273,27.915"]
"ucbdrive/few-shot-object-detection" ["l"="22.249,27.944"]
"MegviiDetection/FSCE" ["l"="22.26,27.93"]
"fanq15/FewX" ["l"="22.269,27.94"]
"untitled-ai/self_supervised" ["l"="34.511,36.086"]
"yqyao/FCOS_PLUS" ["l"="34.737,35.435"]
"Lausannen/NAS-FCOS" ["l"="28.569,34.404"]
"HRNet/HRNet-FCOS" ["l"="30.718,35.485"]
"yqyao/SSD_Pytorch" ["l"="34.715,35.305"]
"KiveeDong/CentripetalNet" ["l"="34.818,35.468"]
"google/gemmlowp" ["l"="27.663,35.41"]
"pytorch/QNNPACK" ["l"="27.619,35.429"]
"CeLuigi/models-comparison.pytorch" ["l"="34.238,35.271"]
"IgorSusmelj/barlowtwins" ["l"="34.387,36.153"]
"facebookresearch/suncet" ["l"="34.558,36.038"]
"rbgirshick/yacs" ["l"="34.436,35.687"]
"zhiqi-li/BEVFormer" ["l"="30.598,44.191"]
"huawei-noah/AdderNet" ["l"="34.669,35.539"]
"guoyongcs/DRN" ["l"="35.849,32.291"]
"iamhankai/ghostnet.pytorch" ["l"="34.661,35.466"]
"pkuxmq/Invertible-Image-Rescaling" ["l"="35.894,32.323"]
"huawei-noah/vega" ["l"="28.4,34.393"]
"Xiangtaokong/ClassSR" ["l"="35.825,32.356"]
"htqin/awesome-model-quantization" ["l"="30.811,35.683"]
"yinboc/liif" ["l"="35.874,32.342"]
"jiecaoyu/XNOR-Net-PyTorch" ["l"="30.647,35.649"]
"researchmm/TTSR" ["l"="35.849,32.306"]
"jaxony/ShuffleNet" ["l"="34.633,35.146"]
"marvis/pytorch-mobilenet" ["l"="34.571,35.199"]
"MG2033/ShuffleNet" ["l"="34.608,35.086"]
"guoruoqian/DetNet_pytorch" ["l"="34.636,35.28"]
"lucidrains/lambda-networks" ["l"="34.57,35.753"]
"leaderj1001/LambdaNetworks" ["l"="34.616,35.902"]
"lucidrains/performer-pytorch" ["l"="29.588,30.744"]
"facebookresearch/FixRes" ["l"="34.558,35.708"]
"LandskapeAI/triplet-attention" ["l"="31.513,37.196"]
"Sense-X/TSD" ["l"="34.769,35.529"]
"foocker/mmdetection-code-analysis" ["l"="34.804,35.421"]
"mangye16/Unsupervised_Embedding_Learning" ["l"="34.511,36.185"]
"Raymond-sci/AND" ["l"="34.455,36.217"]
"dragen1860/Deep-Learning-with-PyTorch-Tutorials" ["l"="24.163,31.039"]
"Tencent/ObjectDetection-OneStageDet" ["l"="35.039,33.196"]
"ocrbook/ocrinaction" ["l"="29.658,34.069"]
"DataXujing/YOLO-v5" ["l"="31.099,35.647"]
"jinfagang/kitti-ssd" ["l"="34.554,34.753"]
"manutdzou/KITTI_FRC_detection" ["l"="34.534,34.753"]
"berniwal/swin-transformer-pytorch" ["l"="34.693,35.852"]
"taokong/RON" ["l"="34.539,35.077"]
"lyxok1/Tiny-DSOD" ["l"="34.618,35.121"]
"alibaba/x-deeplearning" ["l"="22.682,37.143"]
"baidu/Familia" ["l"="31.975,30.129"]
"yeyupiaoling/LearnPaddle" ["l"="-0.275,39.367"]
"Tencent/angel" ["l"="11.102,23.869"]
"baidu/Paddle" ["l"="27.045,33.93"]
"PaddlePaddle/LARK" ["l"="32.089,30.118"]
"guestwalk/kaggle-2014-criteo" ["l"="22.754,37.307"]
"baidu/bigflow" ["l"="-11.315,4.879"]
"williamFalcon/test-tube" ["l"="34.165,35.856"]
"henripal/labnotebook" ["l"="25.713,33.756"]
"zygmuntz/hyperband" ["l"="25.657,33.688"]
"Kaixhin/FGLab" ["l"="34.048,35.984"]
"williamFalcon/DeepRLHacks" ["l"="25.01,35.879"]
"PaddlePaddle/PaddleRS" ["l"="20.063,26.949"]
"OpenPerceptionX/BEVPerception-Survey-Recipe" ["l"="30.632,44.163"]
"nemonameless/PaddleDetection_YOLOSeries" ["l"="34.426,35.843"]
"megvii-research/PETR" ["l"="30.629,44.181"]
"WangYueFt/detr3d" ["l"="30.605,44.18"]
"NVIDIA-AI-IOT/CUDA-PointPillars" ["l"="30.631,44.292"]
"HuangJunJie2017/BEVDet" ["l"="30.619,44.191"]
"TuSimple/centerformer" ["l"="30.699,44.244"]
"mit-han-lab/bevfusion" ["l"="30.604,44.21"]
"Xianpeng919/MonoCon" ["l"="30.528,44.177"]
"666DZY666/micronet" ["l"="30.875,35.684"]
"amirassov/kaggle-imaterialist" ["l"="29.487,35.947"]
"pudae/kaggle-hpa" ["l"="29.517,35.917"]
"dreamquark-ai/tabnet" ["l"="23.226,34.554"]
"psinger/kaggle-landmark-recognition-2020-1st-place" ["l"="32.652,34.305"]
"nyanp/nyaggle" ["l"="25.691,31.94"]
"earhian/Humpback-Whale-Identification-1st-" ["l"="29.487,35.927"]
"pudae/kaggle-humpback" ["l"="29.503,35.936"]
"ybabakhin/kaggle_salt_bes_phalanx" ["l"="29.468,35.929"]
"peterliht/knowledge-distillation-pytorch" ["l"="30.852,35.497"]
"skorch-dev/skorch" ["l"="34.197,35.741"]
"jphall663/awesome-machine-learning-interpretability" ["l"="25.713,33.983"]
"slundberg/shap" ["l"="25.452,33.889"]
"SeldonIO/alibi" ["l"="25.651,34.054"]
"interpretml/interpret" ["l"="25.662,34.027"]
"kundajelab/deeplift" ["l"="28.854,34.998"]
"marcoancona/DeepExplain" ["l"="28.83,34.974"]
"torrvision/crfasrnn" ["l"="31.606,36.823"]
"alexgkendall/caffe-segnet" ["l"="31.644,36.827"]
"digantamisra98/Mish" ["l"="34.474,35.703"]
"lessw2020/Ranger-Deep-Learning-Optimizer" ["l"="34.418,35.757"]
"thomasbrandon/mish-cuda" ["l"="34.468,35.748"]
"digantamisra98/Echo" ["l"="34.468,35.834"]
"lessw2020/mish" ["l"="34.4,35.77"]
"aksht94/UdacityOpenSource" ["l"="20.883,27.968"]
"facebookresearch/OctConv" ["l"="31.662,37.276"]
"mgrankin/over9000" ["l"="34.369,35.797"]
"triton-inference-server/client" ["l"="30.175,37.895"]
"kserve/kserve" ["l"="25.33,34.219"]
"TuSimple/TuSimple-DUC" ["l"="31.64,36.892"]
"unsky/focal-loss" ["l"="34.555,35.087"]
"msracver/Deep-Feature-Flow" ["l"="32.675,35.952"]
"tensorspace-team/tensorspace" ["l"="34.167,35.423"]
"NVIDIA/vid2vid" ["l"="33.639,32.847"]
"tensorflow/adanet" ["l"="25.583,33.899"]
"deepmind/trfl" ["l"="25.08,35.901"]
"facebookresearch/pytext" ["l"="29.887,32.573"]
"timzhang642/3D-Machine-Learning" ["l"="30.339,44.464"]
"coder-duibai/Contrastive-Learning-Papers-Codes" ["l"="16.177,-7.153"]
"dev-sungman/Awesome-Self-Supervised-Papers" ["l"="34.621,36.168"]
"ContrastiveSR/Contrastive_Learning_Papers" ["l"="34.583,36.137"]
"yuewang-cuhk/awesome-vision-language-pretraining-papers" ["l"="31.663,34.667"]
"ikhlestov/vision_networks" ["l"="34.324,34.982"]
"pudae/tensorflow-densenet" ["l"="34.289,34.986"]
"SimJeg/FC-DenseNet" ["l"="31.589,36.792"]
"hjptriplebee/AlexNet_with_tensorflow" ["l"="34.193,34.944"]
"dgurkaynak/tensorflow-cnn-finetune" ["l"="34.212,34.945"]
"stephen-v/tensorflow_alexnet_classify" ["l"="34.194,34.926"]
"joelthchao/tensorflow-finetune-flickr-style" ["l"="34.199,34.901"]
"quincyliang/nlp-data-augmentation" ["l"="32.018,30.33"]
"pengshuang/Text-Similarity" ["l"="32.221,30.105"]
"xiaoyufenfei/Efficient-Segmentation-Networks" ["l"="31.778,36.987"]
"L1aoXingyu/Deep-Learning-Project-Template" ["l"="33.094,36.89"]
"NVIDIA/TRTorch" ["l"="34.522,35.613"]
"NVIDIA/PyProf" ["l"="34.286,35.827"]
"zerollzeng/tiny-tensorrt" ["l"="34.621,35.575"]
"Tencent/Forward" ["l"="34.654,35.622"]
"NVIDIA/retinanet-examples" ["l"="34.569,35.502"]
"chinhsuanwu/mobilevit-pytorch" ["l"="34.818,35.899"]
"micronDLA/MobileViTv3" ["l"="34.8,35.868"]
"mmaaz60/EdgeNeXt" ["l"="34.834,35.916"]
"facebookresearch/LeViT" ["l"="34.74,35.948"]
"apple/ml-mobileone" ["l"="34.839,35.883"]
"microsoft/Cream" ["l"="34.685,35.93"]
"hkzhang91/ParC-Net" ["l"="34.806,35.881"]
"SHI-Labs/Compact-Transformers" ["l"="34.776,36.038"]
"google-research/nested-transformer" ["l"="34.858,36.099"]
"mlpc-ucsd/CoaT" ["l"="34.816,35.988"]
"microsoft/CvT" ["l"="34.749,35.967"]
"facebookresearch/deepmask" ["l"="34.225,35.033"]
"facebookresearch/multipathnet" ["l"="34.29,35.006"]
"daijifeng001/MNC" ["l"="31.63,36.811"]
"jcjohnson/densecap" ["l"="31.566,34.521"]
"jcjohnson/fast-neural-style" ["l"="33.542,32.492"]
"soumith/imagenet-multiGPU.torch" ["l"="26.892,34.282"]
"pdollar/coco" ["l"="26.89,34.262"]
"facebook/fb-caffe-exts" ["l"="26.89,34.187"]
"facebook/fbcunn" ["l"="26.965,34.197"]
"e-lab/torch-toolbox" ["l"="26.871,34.327"]
"inoryy/tensorflow-optimized-wheels" ["l"="34.018,35.109"]
"hadim/docker-tensorflow-builder" ["l"="34.024,35.09"]
"evdcush/TensorFlow-wheels" ["l"="34.056,35.127"]
"Mrgemy95/Tensorflow-Project-Template" ["l"="30.238,32.611"]
"taehoonlee/tensornets" ["l"="27.52,35.299"]
"01org/mkl-dnn" ["l"="27.721,35.336"]
"batzner/indrnn" ["l"="30.43,32.554"]
"yoheikikuta/senet-keras" ["l"="31.767,37.373"]
"titu1994/Keras-DualPathNetworks" ["l"="31.784,37.41"]
"rcmalli/keras-squeezenet" ["l"="30.954,31.717"]
"imlab-uiip/keras-segnet" ["l"="31.499,36.753"]
"SJTU-DL-lab/Bag_of_Tricks_CNN" ["l"="34.523,35.449"]
"facebookresearch/mixup-cifar10" ["l"="33.844,36.689"]
"JDAI-CV/DCL" ["l"="34.346,36.537"]
"Megvii-Nanjing/BBN" ["l"="33.709,36.657"]
"vandit15/Class-balanced-loss-pytorch" ["l"="33.732,36.651"]
"DeepVoltaire/AutoAugment" ["l"="33.864,36.624"]
"joaofaro/KCFcpp" ["l"="32.568,36.1"]
"ivipsourcecode/DS-SLAM" ["l"="30.456,43.127"]
"shaoshengsong/DeepSORT" ["l"="32.279,36.062"]
"HeYijia/svo_edgelet" ["l"="30.525,43.076"]
"BertaBescos/DynaSLAM" ["l"="30.439,43.124"]
"Ewenwan/ORB_SLAM2_SSD_Semantic" ["l"="30.428,43.134"]
"geifmany/cifar-vgg" ["l"="34.11,35.134"]
"mjiansun/cifar10-vgg16" ["l"="34.092,35.152"]
"moskomule/sam.pytorch" ["l"="34.439,35.88"]
"SamsungLabs/ASAM" ["l"="34.43,35.894"]
"juntang-zhuang/GSAM" ["l"="34.428,35.917"]
"Slava/label-tool" ["l"="34.755,35.313"]
"chakki-works/doccano" ["l"="29.837,32.621"]
"UniversalDataTool/react-image-annotate" ["l"="10.926,-34.807"]
"gnes-ai/gnes" ["l"="29.747,32.605"]
"RTIInternational/SMART" ["l"="34.827,35.388"]
"explosion/prodigy-recipes" ["l"="29.635,32.755"]
"waoai/react-image-annotate" ["l"="10.979,-34.849"]
"jbesomi/texthero" ["l"="29.67,32.523"]
"jsbroks/imantics" ["l"="34.677,35.395"]
"visipedia/annotation_tools" ["l"="36.215,35.079"]
"waspinator/pycococreator" ["l"="34.616,35.414"]
"HRNet/HigherHRNet-Human-Pose-Estimation" ["l"="36.022,35.07"]
"jveitchmichaelis/deeplabel" ["l"="34.828,35.351"]
"scalabel/scalabel" ["l"="31.855,44.027"]
"l3p-cv/lost_semi_auto_pipes" ["l"="34.793,35.342"]
"l3p-cv/lost_yolov3_tf2" ["l"="34.799,35.349"]
"menpo/landmarker.io" ["l"="34.586,31.556"]
"virajmavani/semi-auto-image-annotation-tool" ["l"="34.773,35.343"]
"catmaid/CATMAID" ["l"="16.31,37.554"]
"tzutalin/ImageNet_Utils" ["l"="34.431,35.088"]
"christopher5106/FastAnnotationTool" ["l"="34.419,35.159"]
"sweppner/labeld" ["l"="34.462,35.055"]
"cvhciKIT/sloth" ["l"="34.466,35.134"]
"gudovskiy/yoloNCS" ["l"="32.142,35.669"]
"DetectionTeamUCAS/Cascade-RCNN_Tensorflow" ["l"="34.74,35.259"]
"DetectionTeamUCAS/Cascade_FPN_Tensorflow" ["l"="34.815,35.219"]
"Westlake-AI/openmixup" ["l"="34.743,36.075"]
"Westlake-AI/Awesome-Mixup" ["l"="34.777,36.116"]
"Sense-X/TokenMix" ["l"="34.78,36.142"]
"ucasligang/awesome-MIM" ["l"="34.723,36.032"]
"sail-sg/metaformer" ["l"="31.91,35.039"]
"LayneH/GreenMIM" ["l"="34.803,36.122"]
"Westlake-AI/MogaNet" ["l"="34.772,36.128"]
"LiheYoung/UniMatch" ["l"="31.023,37.56"]
"lxtGH/CAE" ["l"="34.72,36.07"]
"snu-mllab/Co-Mixup" ["l"="33.885,36.691"]
"Westlake-AI/AutoMix" ["l"="34.761,36.103"]
"zdaxie/PixPro" ["l"="34.656,36.038"]
"tfzhou/ContrastiveSeg" ["l"="34.693,35.968"]
"Shathe/SemiSeg-Contrastive" ["l"="31.015,37.573"]
"yassouali/CCT" ["l"="30.954,37.549"]
"wookayin/gpustat-web" ["l"="34.034,35.824"]
"abhshkdz/ai-deadlines" ["l"="27.677,30.131"]
"anderskm/gputil" ["l"="34.174,35.729"]
"zisianw/FaceBoxes.PyTorch" ["l"="35.008,33.374"]
"kobiso/CBAM-tensorflow" ["l"="31.711,37.357"]
"kobiso/SENet-tensorflow-slim" ["l"="34.381,34.91"]
"yangxue0827/FPN_Tensorflow" ["l"="35.035,36.781"]
"yeephycho/nasnet-tensorflow" ["l"="34.256,34.699"]
"titu1994/Keras-NASNet" ["l"="34.27,34.735"]
"NanoNets/RaspberryPi-ObjectDetection-TensorFlow" ["l"="34.038,34.949"]
"hamuchiwa/AutoRCCar" ["l"="29.133,42.806"]
"dctian/DeepPiCar" ["l"="1.367,40.709"]
"EdjeElectronics/OpenCV-Playing-Card-Detector" ["l"="34.039,35.017"]
"ahmetozlu/tensorflow_object_counting_api" ["l"="32.181,36.072"]
"xyc2690/Raspberry_ObjectDetection_Camera" ["l"="34.051,35.047"]
"jeffbass/imagezmq" ["l"="32.158,36.095"]
"NVIDIA/VideoProcessingFramework" ["l"="29.967,38.09"]
"facebookresearch/convit" ["l"="34.715,35.956"]
"zhoudaquan/Refiner_ViT" ["l"="34.717,35.997"]
"wofmanaf/ResT" ["l"="34.777,35.967"]
"CyberZHG/keras-radam" ["l"="31.257,31.746"]
"alphadl/lookahead.pytorch" ["l"="34.381,35.775"]
"heuritech/convnets-keras" ["l"="30.99,31.574"]
"scikit-image/scikit-image" ["l"="23.029,4.468"]
"pytorch/botorch" ["l"="25.547,33.63"]
"cornellius-gp/gpytorch" ["l"="25.517,33.619"]
"automl/Auto-PyTorch" ["l"="28.391,34.298"]
"scikit-optimize/scikit-optimize" ["l"="25.559,33.754"]
"scikit-learn-contrib/imbalanced-learn" ["l"="25.523,33.818"]
"hyperopt/hyperopt" ["l"="25.513,33.793"]
"huggingface/pytorch-transformers" ["l"="29.873,32.549"]
"zalandoresearch/flair" ["l"="29.856,32.595"]
"huggingface/knockknock" ["l"="29.768,32.465"]
"GothicAi/InstaBoost-pypi" ["l"="34.862,35.415"]
"DirtyHarryLYL/HAKE-Action" ["l"="32.602,35.154"]
"lvis-dataset/lvis-api" ["l"="31.435,34.259"]
"thangvubk/Cascade-RPN" ["l"="34.764,35.444"]
"DirtyHarryLYL/HAKE" ["l"="32.616,35.164"]
"DirtyHarryLYL/SymNet" ["l"="32.621,35.149"]
"PKUbahuangliuhe/CBNet" ["l"="34.736,35.463"]
"terryky/tflite_gles_app" ["l"="34.162,35.614"]
"iwatake2222/play_with_tflite" ["l"="34.221,35.659"]
"axinc-ai/ailia-models" ["l"="33.571,33.256"]
"PINTO0309/tflite2tensorflow" ["l"="34.161,35.601"]
"Daniil-Osokin/lightweight-human-pose-estimation.pytorch" ["l"="36.041,35.104"]
"chuanqi305/SqueezeNet-SSD" ["l"="34.678,35.064"]
"xiaochus/MobileNetV3" ["l"="34.764,35.124"]
"xiaochus/MobileNetV2" ["l"="34.688,35.125"]
"opconty/keras-shufflenetV2" ["l"="34.801,35.046"]
"frotms/MobilenetV3-Tensorflow" ["l"="34.756,35.169"]
"titu1994/keras_mixnets" ["l"="34.815,35.083"]
"OniroAI/Semantic-segmentation-with-MobileNetV3" ["l"="34.836,35.079"]
"HuCaoFighting/Swin-Unet" ["l"="29.37,36.509"]
"isl-org/lang-seg" ["l"="31.729,34.875"]
"hila-chefer/Transformer-MM-Explainability" ["l"="34.642,36.003"]
"samiraabnar/attention_flow" ["l"="34.617,36.006"]
"tfzhou/ProtoSeg" ["l"="31.77,34.923"]
"tfzhou/VS-Survey" ["l"="31.934,33.275"]
"Lixy1997/Group-WSSS" ["l"="31.944,33.259"]
"tfzhou/MATNet" ["l"="31.91,33.241"]
"lorenmt/reco" ["l"="30.991,37.553"]
"charlesCXK/TorchSemiSeg" ["l"="31.001,37.548"]
"YudeWang/SEAM" ["l"="30.798,37.568"]
"marcotcr/lime" ["l"="25.523,33.887"]
"lmcinnes/umap" ["l"="25.445,33.807"]
"deepmind/graph_nets" ["l"="21.74,38.632"]
"tensorflow/probability" ["l"="25.501,33.707"]
"NVIDIA-AI-IOT/deepstream_reference_apps" ["l"="29.93,38.1"]
"dlunion/tensorRTIntegrate" ["l"="34.672,35.564"]
"frombeijingwithlove/dlcv_for_beginners" ["l"="34.379,35.209"]
"willard-yuan/pcv-book-code" ["l"="30.115,36.865"]
"vanhuyz/CycleGAN-TensorFlow" ["l"="33.622,32.632"]
"yahoo/open_nsfw" ["l"="33.575,30.447"]
"hzy46/Deep-Learning-21-Examples" ["l"="23.88,31.222"]
"devnag/pytorch-generative-adversarial-networks" ["l"="33.752,32.637"]
"xmu-xiaoma666/FightingCV-Course" ["l"="34.685,35.828"]
"Fafa-DL/Awesome-Backbones" ["l"="24.525,31.023"]
"alibaba/EasyCV" ["l"="34.591,35.745"]
"yandexdataschool/Practical_RL" ["l"="25.014,36.035"]
"DingXiaoH/RepLKNet-pytorch" ["l"="31.864,35.039"]
"Epiphqny/CondInst" ["l"="34.922,35.467"]
"CaoWGG/Mask-CenterNet" ["l"="34.892,35.439"]
"NVIDIA/Torch-TensorRT" ["l"="34.583,35.597"]
"grimoire/amirstan_plugin" ["l"="34.673,35.608"]
"dbolya/tide" ["l"="34.76,35.582"]
"Megvii-BaseDetection/cvpods" ["l"="34.806,35.593"]
"conradry/copy-paste-aug" ["l"="34.822,35.67"]
"jshilong/SEPC" ["l"="34.832,35.558"]
"ChenhongyiYang/QueryDet-PyTorch" ["l"="34.955,35.555"]
"jacobgil/pytorch-pruning" ["l"="30.855,35.616"]
"google/jaxtyping" ["l"="23.447,33.756"]
"facebookresearch/torchdim" ["l"="23.358,33.627"]
"patrick-kidger/equinox" ["l"="23.462,33.775"]
"google/objax" ["l"="23.487,33.745"]
"teddykoker/torchsort" ["l"="34.141,35.999"]
"Stonesjtu/pytorch_memlab" ["l"="34.216,35.882"]
"liuwei16/CSP" ["l"="34.678,36.477"]
"STVIR/pysot" ["l"="32.423,36.175"]
"qijiezhao/CFENet" ["l"="34.674,35.271"]
"PiSimo/PiCamNN" ["l"="34.078,34.926"]
"digitalbrain79/darknet-nnpack" ["l"="48.291,-4.954"]
"leehaesung/YOLO-Powered_Robot_Vision" ["l"="34.071,34.907"]
"neil-tan/uTensor" ["l"="34.092,34.885"]
"pauli-space/foundations_for_deep_learning" ["l"="23.31,31.075"]
"allenai/XNOR-Net" ["l"="30.618,35.635"]
"deepsyx/home-automation" ["l"="28.322,-19.044"]
"jetpacapp/DeepBeliefSDK" ["l"="-51.183,-0.886"]
"zhanghang1989/detectron2-ResNeSt" ["l"="34.736,35.528"]
"CSAILVision/LabelMeAnnotationTool" ["l"="34.484,35.215"]
"cvondrick/vatic" ["l"="32.458,35.99"]
"Microsoft/VoTT" ["l"="34.507,35.234"]
"ryouchinsa/Rectlabel-support" ["l"="34.462,34.951"]
"bharatsingh430/py-R-FCN-multiGPU" ["l"="34.554,35.066"]
"XiaozhiChen/resnet-generator" ["l"="34.575,35"]
"AKSHAYUBHAT/ImageSegmentation" ["l"="34.823,35.179"]
"commaai/commacoloring" ["l"="29.293,42.899"]
"kyamagu/bbox-annotator" ["l"="34.847,35.167"]
"bearpaw/clothing-co-parsing" ["l"="34.538,32.341"]
"eBay/modanet" ["l"="34.584,32.341"]
"kyamagu/js-graph-annotator" ["l"="34.785,35.194"]
"annotorious/annotorious" ["l"="10.83,-34.807"]
"TimoSaemann/caffe-segnet-cudnn5" ["l"="31.67,36.805"]
"52CV/ECCV-2022-Papers" ["l"="34.645,35.841"]
"52CV/ICCV-2021-Papers" ["l"="34.656,35.828"]
"52CV/ICCV-Papers" ["l"="34.616,35.779"]
"52CV/CVPR-2023-Papers" ["l"="34.61,35.836"]
"52CV/WACV-2022-Papers" ["l"="34.616,35.822"]
"swz30/Restormer" ["l"="35.953,32.38"]
"rentainhe/pytorch-distributed-training" ["l"="34.494,35.802"]
"terryky/tfjs_webgl_app" ["l"="31.669,32.867"]
"terryky/android_tflite" ["l"="34.122,35.652"]
"NVIDIA-AI-IOT/trt_pose" ["l"="29.885,38.047"]
"jiuqiant/mediapipe_python_aarch64" ["l"="36.111,36.099"]
"google-coral/project-bodypix" ["l"="27.557,27.922"]
"asus4/tf-lite-unity-sample" ["l"="35.537,35.954"]
"patlevin/tfjs-to-tf" ["l"="27.578,27.855"]
"PINTO0309/TensorflowLite-bin" ["l"="34.059,35.367"]
"PINTO0309/mediapipe-bin" ["l"="36.086,36.095"]
"NobuoTsukamoto/edge_tpu" ["l"="27.419,27.946"]
"michalfaber/tensorflow_Realtime_Multi-Person_Pose_Estimation" ["l"="36.232,35.164"]
"KleinYuan/easy-yolo" ["l"="34.157,35.077"]
"markjay4k/YOLO-series" ["l"="34.111,35.047"]
"RiccardoGrin/darknet" ["l"="34.134,35.078"]
"llSourcell/tensorflow_chatbot" ["l"="30.518,28.159"]
"llSourcell/Convolutional_neural_network" ["l"="24.538,29.232"]
"wvangansbeke/Self-Supervised-Learning-Overview" ["l"="34.656,36.211"]
"neuroailab/LocalAggregation" ["l"="34.454,36.237"]
"google-research/s4l" ["l"="34.474,36.213"]
"hendrycks/ss-ood" ["l"="23.437,34.864"]
"maple-research-lab/AET" ["l"="34.479,36.235"]
"FrancescoSaverioZuppichini/glasses" ["l"="34.158,35.983"]
"uvipen/SSD-pytorch" ["l"="21.791,1.924"]
"FrancescoSaverioZuppichini/PyTorch-Deep-Learning-Template" ["l"="34.106,35.889"]
"suzhenghang/MobileNetv2" ["l"="34.61,35.108"]
"austingg/MobileNet-v2-caffe" ["l"="34.661,35.092"]
"YuhaoCheng/PyAnomaly" ["l"="34.947,35.5"]
"lxc86739795/parsing_platform" ["l"="34.925,35.498"]
"xbq1994/HAA" ["l"="34.931,35.489"]
"JDAI-CV/DSD-SATN" ["l"="34.945,35.489"]
"JDAI-CV/Partial-Person-ReID" ["l"="34.934,35.505"]
"phecy/SSL-FEW-SHOT" ["l"="23.797,35.295"]
"WongKinYiu/PartialResidualNetworks" ["l"="48.274,-4.893"]
"Andrew-Qibin/CoordAttention" ["l"="31.596,37.203"]
"ChristophReich1996/Involution" ["l"="34.82,35.843"]
"JosephKJ/OWOD" ["l"="31.611,34.986"]
"idiap/fast-transformers" ["l"="29.608,30.76"]
"ml-jku/hopfield-layers" ["l"="29.576,30.698"]
"lucidrains/linear-attention-transformer" ["l"="29.568,30.749"]
"microsoft/fastformers" ["l"="29.654,32.413"]
"parrt/tensor-sensor" ["l"="34.186,35.963"]
"huggingface/pytorch_block_sparse" ["l"="29.652,30.79"]
"ElementAI/baal" ["l"="35.611,36.729"]
"replicate/keepsake" ["l"="34.177,35.933"]
"SeldonIO/alibi-detect" ["l"="25.516,34.105"]
"microsoft/hummingbird" ["l"="25.455,34.031"]
"KeremTurgutlu/self_supervised" ["l"="22.71,28.978"]
"google-research/robustness_metrics" ["l"="23.917,34.575"]
"karpathy/deep-vector-quantization" ["l"="24.952,32.545"]
"phalanx-hk/kaggle_cv_pipeline" ["l"="25.7,31.931"]
"princeton-vl/DeepV2D" ["l"="31.841,43.283"]
"huggingface/autonlp" ["l"="23.843,30.181"]
"maiot-io/zenml" ["l"="25.452,34.149"]
"pfnet-research/xfeat" ["l"="25.684,31.922"]
"pfnet/pysen" ["l"="25.661,31.877"]
"google/ml_collections" ["l"="23.511,33.709"]
"wandb/awesome-dl-projects" ["l"="34.09,36.099"]
"wandb/edu" ["l"="34.098,36.082"]
"susanli2016/NLP-with-Python" ["l"="29.773,32.75"]
"oarriaga/face_classification" ["l"="0.798,40.133"]
"udacity/deep-learning" ["l"="23.629,30.933"]
"Hvass-Labs/TensorFlow-Tutorials" ["l"="23.575,31.041"]
"anonymous47823493/EagleEye" ["l"="30.914,35.588"]
"noahgolmant/pytorch-lars" ["l"="34.64,36.263"]
"cybertronai/pytorch-lamb" ["l"="34.641,36.289"]
"tonylins/simclr-converter" ["l"="34.672,36.282"]
"neuleaf/MobileNetV2" ["l"="34.707,35.036"]
"timctho/mobilenet-v2-tensorflow" ["l"="34.752,35.001"]
"ShuangXieIrene/mobilenet-v2" ["l"="34.775,34.992"]
"timctho/shufflenet-v2-tensorflow" ["l"="34.7,35.067"]
"ildoonet/tf-mobilenet-v2" ["l"="34.755,34.984"]
"persistforever/yolo-tensorflow" ["l"="34.444,35.001"]
"Atcold/PyTorch-Deep-Learning-Minicourse" ["l"="34.026,35.652"]
"pytorch/contrib" ["l"="33.985,36.643"]
"mila-udem/welcome_tutorials" ["l"="30.137,32.518"]
"mlss-2019/tutorials" ["l"="33.864,35.696"]
"hardmaru/pytorch_notebooks" ["l"="24.703,38.434"]
"NirantK/best-of-jupyter" ["l"="24.167,30.645"]
"rasbt/deep-learning-book" ["l"="23.42,30.892"]
"stared/thinking-in-tensors-writing-in-pytorch" ["l"="28.199,32.661"]
"Eniac-Xie/faster-rcnn-resnet" ["l"="34.582,35.074"]
"xmyqsh/FPN" ["l"="34.541,35.096"]
"ailias/Focal-Loss-implement-on-Tensorflow" ["l"="34.586,34.956"]
"CasiaFan/tensorflow_retinanet" ["l"="34.613,34.888"]
"fudannlp16/focal-loss" ["l"="34.616,34.913"]
"unsky/RetinaNet" ["l"="34.558,35.044"]
"zhezh/focalloss" ["l"="34.629,34.9"]
"mkocabas/focal-loss-keras" ["l"="34.653,34.867"]
"yihui-he/resnet-cifar10-caffe" ["l"="34.674,34.997"]
"yihui-he/resnet-imagenet-caffe" ["l"="34.656,35.047"]
"shicai/SENet-Caffe" ["l"="34.638,35.026"]
"davidstutz/caffe-tools" ["l"="34.725,34.904"]
"smichalowski/google_inception_v3_for_caffe" ["l"="34.715,34.925"]
"wuzheng-sjtu/FastFPN" ["l"="34.575,35.114"]
"zhaoweicai/Detectron-Cascade-RCNN" ["l"="34.644,35.356"]
"NVlabs/FreeSOLO" ["l"="34.662,36.124"]
"facebookresearch/Generic-Grouping" ["l"="31.666,34.953"]
"YangtaoWANG95/TokenCut" ["l"="34.696,36.18"]
"NVlabs/MinVIS" ["l"="31.85,33.364"]
"davidenunes/tensorflow-wheels" ["l"="33.963,35.051"]
"mtianyan/tensorflow-linux-wheel" ["l"="34.005,35.066"]
"aluo-x/tensorflow_windows" ["l"="33.987,35.069"]
"microsoft/onnxruntime-training-examples" ["l"="34.783,35.629"]
"pytorch/ort" ["l"="34.899,35.641"]
"vahidk/tfrecord" ["l"="34.389,35.66"]
"podgorskiy/DareBlopy" ["l"="34.391,35.73"]
"pgmmpk/tfrecord" ["l"="34.38,35.715"]
"chainer/chainerrl" ["l"="25.119,35.866"]
"arXivTimes/arXivTimes" ["l"="25.59,31.844"]
"pfnet/optuna" ["l"="25.645,31.904"]
"clab/dynet" ["l"="30.165,32.577"]
"sony/nnabla" ["l"="25.81,31.769"]
"chainer-community/awesome-chainer" ["l"="34.022,30.338"]
"pfnet-research/chainer-gan-lib" ["l"="34.096,30.336"]
"chainer/chainerui" ["l"="34.026,30.365"]
"ShaoqingRen/SPP_net" ["l"="34.407,35.004"]
"rasmusbergpalm/DeepLearnToolbox" ["l"="27.041,34"]
"sermanet/OverFeat" ["l"="26.937,34.147"]
"biometrics/openbr" ["l"="33.881,35.238"]
"bytefish/facerec" ["l"="30.225,37.008"]
"liuliu/ccv" ["l"="28.084,27.923"]
"Itseez/opencv" ["l"="27.1,33.803"]
"kylemcdonald/FaceTracker" ["l"="34.759,33.457"]
"bytefish/libfacerec" ["l"="30.266,36.992"]
"maudzung/Complex-YOLOv4-Pytorch" ["l"="30.486,44.312"]
"sicara/tf2-yolov4" ["l"="29.495,35.359"]
"Machine-Learning-Tokyo/CNN-Architectures" ["l"="23.924,30.587"]
"sayakpaul/TF-2.0-Hacks" ["l"="28.945,32.845"]
"emadboctorx/labelpix" ["l"="34.526,35.265"]
"keras-team/keras-cv" ["l"="22.659,29.627"]
"karpathy/covid-sanity" ["l"="27.53,30.969"]
"balavenkatesh3322/CV-pretrained-model" ["l"="23.951,30.53"]
"Captain1986/CaptainBlackboard" ["l"="34.621,35.464"]
"kuanhungchen/awesome-tiny-object-detection" ["l"="34.86,35.523"]
"yizt/Grad-CAM.pytorch" ["l"="28.634,34.854"]
"lcylmhlcy/Awesome-algorithm-interview" ["l"="24.259,31.301"]
"yangfei963158659/nnie" ["l"="34.854,33.436"]
"Microsoft/EdgeML" ["l"="34.078,34.847"]
"Maratyszcza/NNPACK" ["l"="27.681,35.385"]
"ARM-software/ComputeLibrary" ["l"="27.59,35.42"]
"baidu-research/DeepBench" ["l"="27.749,35.345"]
"Microsoft/AirSim" ["l"="29.061,42.819"]
"tiny-dnn/tiny-dnn" ["l"="27.633,35.343"]
"Peterisfar/YOLOV3" ["l"="34.733,35.345"]
"yjh0410/yolov2-yolov3_PyTorch" ["l"="34.483,33.924"]
"tryolabs/luminoth" ["l"="34.26,35.18"]
"pythonlessons/TensorFlow-2.x-YOLOv3" ["l"="32.198,36.032"]
"FeiYull/tensorrt-alpha" ["l"="34.737,35.724"]
"ultralytics/assets" ["l"="34.781,35.716"]
"NVIDIA-AI-IOT/yolo_deepstream" ["l"="34.713,35.702"]
"DataXujing/YOLOv8" ["l"="34.755,35.7"]
"Oneflow-Inc/one-yolov5" ["l"="27.817,35.729"]
"FeiYull/TensorRT-Alpha" ["l"="21.964,27.583"]
"FeiGeChuanShu/ncnn-android-yolov8" ["l"="31.572,36.335"]
"triple-Mu/YOLO-TensorRT8" ["l"="34.761,35.711"]
"Rex-LK/tensorrt_learning" ["l"="34.74,35.711"]
"ageitgey/face_recognition_models" ["l"="33.848,35.188"]
"ageitgey/dlib" ["l"="33.813,35.166"]
"takuya-takeuchi/FaceRecognitionDotNet" ["l"="22.322,16.236"]
"albumentations-team/albumentations_examples" ["l"="34.474,35.72"]
"google-research/noisystudent" ["l"="33.902,36.706"]
"mrT23/TResNet" ["l"="33.772,36.527"]
"facebookresearch/WSL-Images" ["l"="34.629,35.686"]
"clovaai/assembled-cnn" ["l"="33.843,36.58"]
"uploadcare/pillow-simd" ["l"="34.237,35.707"]
"discordapp/lilliput" ["l"="-13.105,2.039"]
"jbohnslav/opencv_transforms" ["l"="34.062,35.906"]
"pytorch/accimage" ["l"="34.107,35.817"]
"geaxgx/playing-card-detection" ["l"="33.989,34.97"]
"arnabdotorg/Playing-Card-Recognition" ["l"="33.965,34.944"]
"dvlab-research/Entity" ["l"="34.735,35.992"]
"hkchengrex/CascadePSP" ["l"="31.748,37.08"]
"yoxu515/aot-benchmark" ["l"="31.845,33.307"]
"dvlab-research/spconv-plus" ["l"="30.76,44.296"]
"raoyongming/DenseCLIP" ["l"="31.722,34.855"]
"lincolnhard/head-pose-estimation" ["l"="34.857,33.341"]
"tzutalin/dlib-android" ["l"="34.722,33.439"]
"yinguobing/head-pose-estimation" ["l"="34.849,33.299"]
"mpatacchiola/deepgaze" ["l"="34.798,33.289"]
"codeniko/shape_predictor_81_face_landmarks" ["l"="34.994,33.285"]
"yinguobing/cnn-facial-landmark" ["l"="34.868,33.308"]
"gram-ai/capsule-networks" ["l"="31.024,32.951"]
"uber/petastorm" ["l"="25.306,34.101"]
"Santosh-Gupta/SpeedTorch" ["l"="34.315,35.661"]
"developer0hye/Yolo_Label" ["l"="34.797,35.264"]
"ivangrov/YOLOv3-Series" ["l"="34.674,35.303"]
"alexandre01/UltimateLabeling" ["l"="26.042,37.516"]
"chenzhi1992/TensorRT-SSD" ["l"="29.876,38.233"]
"lewes6369/TensorRT-Yolov3" ["l"="29.923,38.2"]
"TRT2022/MST-plus-plus-TensorRT" ["l"="34.708,35.662"]
"dingyuqing05/trt2022_wenet" ["l"="34.708,35.647"]
"zhangliliang/RPN_BF" ["l"="34.614,36.517"]
"hengck23/didi-udacity-2017" ["l"="31.391,36.834"]
"gidariss/mrcnn-object-detection" ["l"="26.582,34.309"]
"Bjarten/early-stopping-pytorch" ["l"="34.264,35.69"]
"tkipf/pygcn" ["l"="21.781,38.624"]
"shenweichen/DeepCTR-Torch" ["l"="22.717,37.063"]
"wkentaro/gdown" ["l"="34.301,35.93"]
"circulosmeos/gdown.pl" ["l"="34.22,36.111"]
"google-research/arxiv-latex-cleaner" ["l"="27.669,30.103"]
"jbhuang0604/awesome-tips" ["l"="27.59,30.062"]
"prasmussen/gdrive" ["l"="-33.788,-20.697"]
"XiaLiPKU/EMANet" ["l"="31.716,37.05"]
"onnx/onnx-coreml" ["l"="-48.698,5.43"]
"xxradon/ONNXToCaffe" ["l"="34.757,35.148"]
"aovoc/nnieqat-pytorch" ["l"="30.825,35.75"]
"joe-siyuan-qiao/WeightStandardization" ["l"="34.649,35.445"]
"shrubb/box-convolutions" ["l"="33.612,34.375"]
"naver/r2d2" ["l"="32.518,42.281"]
"daniilidis-group/neural_renderer" ["l"="33.093,43.133"]
"MisaOgura/flashtorch" ["l"="28.717,34.865"]
"achaiah/pywick" ["l"="29.172,36.307"]
"mlss-2019/slides" ["l"="33.795,35.715"]
"luwill/Semantic-Segmentation-Guide" ["l"="24.435,31.285"]
"manujosephv/pytorch_tabular" ["l"="23.269,34.528"]
"knhngchn/awesome-tiny-object-detection" ["l"="34.947,35.528"]
"Icecream-blue-sky/Past-and-present-small-object-detection" ["l"="34.973,35.536"]
"IronMastiff/YOLOv3_tensorflow" ["l"="34.601,35.099"]
"maiminh1996/YOLOv3-tensorflow" ["l"="34.559,35.107"]
"calmisential/MobileNetV3_TensorFlow2" ["l"="34.471,35.097"]
"calmisential/EfficientNet_TensorFlow2" ["l"="34.48,35.104"]
"Keyird/DeepLearning-TensorFlow2" ["l"="34.476,35.084"]
"calmisential/TensorFlow2.0_Image_Classification" ["l"="34.459,35.089"]
"ijkguo/mx-rcnn" ["l"="34.519,34.904"]
"lbeaucourt/Object-detection" ["l"="35.419,33.69"]
"GustavZ/realtime_object_detection" ["l"="29.799,38.321"]
"schumanzhang/object_detection_real_time" ["l"="34.178,35.078"]
"Shen-Lab/GraphCL" ["l"="22.001,38.577"]
"LaurentMazare/deep-models" ["l"="34.296,34.974"]
"yeephycho/densenet-tensorflow" ["l"="34.344,34.955"]
"wenxinxu/ResNeXt-in-tensorflow" ["l"="34.347,34.933"]
"dalgu90/resnet-18-tensorflow" ["l"="34.36,34.894"]
"yizt/cv-papers" ["l"="34.487,35.371"]
"zeusees/HyperDL-Tutorial" ["l"="24.044,31.241"]
"czla/daily-paper-visual-tracking" ["l"="32.568,36.256"]
"jiangxiluning/FOTS.PyTorch" ["l"="29.535,34.048"]
"extreme-assistant/survey-computer-vision-2020" ["l"="34.603,35.886"]
"carlini/nn_robust_attacks" ["l"="21.512,14.035"]
"senlinuc/caffe_ocr" ["l"="29.473,34.14"]
"BIGBALLON/Deep-learning-and-practices" ["l"="34.147,35.122"]
"VDIGPKU/CBNet" ["l"="34.933,35.416"]
"arashwan/matrixnet" ["l"="34.847,35.436"]
"HRNet/HRNet-Object-Detection" ["l"="31.696,37.112"]
"GeeshangXu/mask-rcnn-pytorch" ["l"="34.705,35.145"]
"leimao/ONNX-Runtime-Inference" ["l"="34.763,35.653"]
"xmba15/onnx_runtime_cpp" ["l"="34.787,35.657"]
"libuyu/GHM_Detection" ["l"="34.63,35.331"]
"Okery/PyTorch-Simple-MaskRCNN" ["l"="34.574,35.259"]
"jytime/Mask_RCNN_Pytorch" ["l"="34.578,35.237"]
"DirtyHarryLYL/HOI-Learning-List" ["l"="32.62,35.197"]
"KaiyangZhou/CoOp" ["l"="31.718,34.817"]
"salesforce/ALBEF" ["l"="31.703,34.744"]
"microsoft/GLIP" ["l"="31.754,34.849"]
"rishikksh20/SiT-pytorch" ["l"="34.7,36.067"]
"sayakpaul/probing-vits" ["l"="34.637,36.052"]
"rentainhe/visualization" ["l"="34.681,35.99"]
"vasgaowei/TS-CAM" ["l"="30.835,37.699"]
"omihub777/ViT-CIFAR" ["l"="34.381,36.067"]
"IcarusWizard/MAE" ["l"="34.396,36.076"]
"Cydia2018/ViT-cifar10-pruning" ["l"="34.387,36.086"]
"YisenWang/MART" ["l"="21.402,14.059"]
"zjfheart/Geometry-aware-Instance-reweighted-Adversarial-Training" ["l"="21.362,14.061"]
"cheerss/CrossFormer" ["l"="34.789,35.93"]
"EMI-Group/FaPN" ["l"="25.084,38.365"]
"ShoufaChen/CycleMLP" ["l"="34.789,35.985"]
"Alpha-VL/ConvMAE" ["l"="34.717,36.014"]
"vietanhdev/open-adas" ["l"="34.906,35.741"]
"YanbaruRobotics/PythonPilot" ["l"="34.748,35.74"]
"nerox8664/pytorch2keras" ["l"="34.397,35.325"]
"nerox8664/onnx2keras" ["l"="34.272,35.305"]
"gzuidhof/nn-transfer" ["l"="34.649,35.264"]
"leonidk/pytorch-tf" ["l"="34.527,35.375"]
"ecs-vlc/FMix" ["l"="33.901,36.635"]
"DeepRNN/object_detection" ["l"="34.373,34.946"]
"PaddlePaddle/paddle2onnx" ["l"="33.985,35.881"]
"PaddlePaddle/Paddle-Inference-Demo" ["l"="34.034,35.894"]
"PaddleEdu/Transformer-CV-models" ["l"="34.005,35.88"]
"PaddlePaddle/PaddleHelix" ["l"="17.321,37.822"]
"PaddlePaddle/Parakeet" ["l"="0.426,40.043"]
"AgentMaker/Paddle-Image-Models" ["l"="-0.228,39.333"]
"philipgao518/Mobilenetv3-Tensorflow" ["l"="34.759,35.186"]
"LeapLabTHU/DAT" ["l"="34.768,35.93"]
"SHI-Labs/Neighborhood-Attention-Transformer" ["l"="31.893,34.988"]
"NVlabs/GroupViT" ["l"="31.749,34.867"]
"tongyuhome/MobileNetV3-SSD" ["l"="34.765,35.262"]
"shaoshengsong/MobileNetV3-SSD-Compact-Version" ["l"="34.779,35.251"]
"alibaba/EasyNLP" ["l"="32.19,30.346"]
"km1994/nlp_paper_study" ["l"="32.154,30.226"]
"hustvl/SparseInst" ["l"="34.863,35.764"]
"hustvl/TopFormer" ["l"="34.867,35.902"]
"SysCV/transfiner" ["l"="34.906,35.766"]
"megvii-research/SOLQ" ["l"="34.923,35.783"]
"VividLe/BackTAL" ["l"="22.049,27.747"]
"JialeCao001/D2Det" ["l"="34.848,35.547"]
"JialeCao001/D2Det-mmdet2.1" ["l"="34.941,35.57"]
"Thinklab-SJTU/CSL_RetinaNet_Tensorflow" ["l"="35.013,36.874"]
"mattmacy/vnet.pytorch" ["l"="29.266,36.541"]
"D-X-Y/Awesome-NAS" ["l"="28.426,34.371"]
"ucas-vg/Effective-Fusion-Factor" ["l"="34.981,35.517"]
"MCG-NJU/AdaMixer" ["l"="31.728,35.031"]
"strongwolf/DW" ["l"="34.943,35.59"]
"ChenhongyiYang/PGD" ["l"="31.006,35.36"]
"LiWentomng/OrientedRepPoints" ["l"="35.102,36.89"]
"csuhan/ReDet" ["l"="35.06,36.886"]
"IDEA-opensource/DN-DETR" ["l"="31.738,35.013"]
"jwwangchn/AI-TOD" ["l"="35.077,35.552"]
"awesome-NeRF/awesome-NeRF" ["l"="33.403,43.19"]
"openai/improved-diffusion" ["l"="34.512,28.895"]
"YangLing0818/Diffusion-Models-Papers-Survey-Taxonomy" ["l"="34.496,28.885"]
"baaivision/Painter" ["l"="27.24,31.191"]
"hdjang/Feature-Selective-Anchor-Free-Module-for-Single-Shot-Object-Detection" ["l"="31.984,37.712"]
"lucidrains/deformable-attention" ["l"="34.828,35.968"]
"LeapLabTHU/ACmix" ["l"="31.207,33.802"]
"LeapLabTHU/AdaFocusV2" ["l"="31.213,33.786"]
"blackfeather-wang/Dynamic-Vision-Transformer" ["l"="31.243,33.775"]
"CASIA-IVA-Lab/DPT" ["l"="34.846,35.961"]
"sail-sg/iFormer" ["l"="31.947,35.056"]
"ziplab/LITv2" ["l"="30.386,35.873"]
"leoxiaobin/CvT" ["l"="34.797,36.005"]
"linhezheng19/CAT" ["l"="34.818,36.008"]
"rishikksh20/MLP-Mixer-pytorch" ["l"="34.582,36.064"]
"lucidrains/res-mlp-pytorch" ["l"="34.458,36.105"]
"locuslab/convmixer" ["l"="34.446,36.168"]
"lukemelas/do-you-even-need-attention" ["l"="34.418,36.107"]
"920232796/SETR-pytorch" ["l"="34.745,35.919"]
"camlaedtke/segmentation_pytorch" ["l"="34.842,35.945"]
"bubbliiiing/segformer-pytorch" ["l"="29.762,35.284"]
"rishikksh20/convolution-vision-transformers" ["l"="34.765,35.998"]
"rosinality/vision-transformers-pytorch" ["l"="34.827,36.06"]
"rishikksh20/CeiT-pytorch" ["l"="34.815,36.03"]
"switchablenorms/DeepFashion2" ["l"="34.561,32.363"]
"huawei-noah/CV-Backbones" ["l"="34.668,35.84"]
"ZjjConan/SimAM" ["l"="31.571,37.258"]
"implus/UM-MAE" ["l"="34.723,36.047"]
"EdisonLeeeee/Awesome-Masked-Autoencoders" ["l"="34.686,36.047"]
"zejiangh/MILAN" ["l"="34.777,36.082"]
"implus/mae_segmentation" ["l"="34.764,36.021"]
"KimSoybean/ScratchDet" ["l"="34.708,35.317"]
"STVIR/Grid-R-CNN" ["l"="34.747,35.395"]
"VCBE123/AnchorFreeDetection" ["l"="34.81,35.406"]
"Robert-JunWang/PeleeNet" ["l"="34.66,35.133"]
"nnUyi/PeleeNet" ["l"="34.629,35.111"]
"aosokin/cnn_head_detection" ["l"="33.963,34.098"]
"Russell91/apollocaffe" ["l"="26.796,34.158"]
"TensorBox/TensorBox" ["l"="34.403,35.018"]
"google/multibox" ["l"="26.751,34.238"]
"anson0910/CNN_face_detection" ["l"="34.864,33.519"]
"guoyilin/FaceDetection_CNN" ["l"="34.887,33.517"]
"craftGBD/craftGBD" ["l"="34.499,35.018"]
"yihui-he/softer-NMS" ["l"="34.657,35.282"]
"fyu/dilation" ["l"="31.618,36.84"]
"sebastiani/IIC" ["l"="34.436,36.226"]
"jyhjinghwang/SegSort" ["l"="34.448,36.266"]
"astirn/IIC" ["l"="34.44,36.247"]
"Cory-M/DCCM" ["l"="24.71,32.74"]
"facebookresearch/unbiased-teacher" ["l"="34.962,35.722"]
"google-research/ssl_detection" ["l"="34.983,35.722"]
"facebookresearch/unbiased-teacher-v2" ["l"="34.999,35.735"]
"soo89/CSD-SSD" ["l"="35.029,35.717"]
"facebookresearch/adaptive_teacher" ["l"="29.51,34.887"]
"Megvii-BaseDetection/DenseTeacher" ["l"="34.954,35.748"]
"kinredon/umt" ["l"="29.532,34.894"]
"HikariTJU/LD" ["l"="30.967,35.425"]
"amirbar/DETReg" ["l"="22.231,27.905"]
"txdet/Instant-Teaching" ["l"="35.029,35.733"]
"hikvision-research/SSOD" ["l"="35.01,35.747"]
"NVlabs/wetectron" ["l"="30.648,37.516"]
"chengchunhsu/EveryPixelMatters" ["l"="29.549,34.883"]
"soo89/CSD-RFCN" ["l"="35.012,35.716"]
"ligang-cs/PseCo" ["l"="34.978,35.746"]
"ModelTC/EOD" ["l"="34.832,35.687"]
"yaox12/BYOL-PyTorch" ["l"="34.57,36.154"]
"niuchuangnn/SPICE" ["l"="34.406,36.186"]
"deu30303/RUC" ["l"="34.389,36.238"]
"k-han/AutoNovel" ["l"="23.581,34.967"]
"Raymond-sci/PICA" ["l"="34.436,36.201"]
"youngwanLEE/VoV3D" ["l"="34.835,35.743"]
"youngwanLEE/rc-mae" ["l"="34.87,35.971"]
"PaddlePaddle/Paddle.js" ["l"="34.052,35.868"]
"max-team/Mars" ["l"="13.759,-6.853"]
"PaddlePaddle/PaddleScience" ["l"="34.007,35.921"]
"xr2117/bean-mapping" ["l"="-25.986,18.027"]
"deepkolos/wxmp-tensorflow" ["l"="27.675,27.637"]
"lihang212010/Elasticsearch-ais" ["l"="-26.007,18.027"]
"mazouri/kvcache" ["l"="-25.982,18.013"]
"chaituan/fanqie_shop" ["l"="-25.95,18.027"]
"moli232777144/mtcnn_ncnn" ["l"="34.986,33.414"]
"MirrorYuChen/ncnn_example" ["l"="35.04,33.346"]
"guoqiangqi/PFLD" ["l"="34.951,33.304"]
"taoyang1122/pytorch-SimSiam" ["l"="34.439,36.1"]
"open-mmlab/cocoapi" ["l"="34.883,35.832"]
"open-mmlab/pytorch_sphinx_theme" ["l"="34.863,35.816"]
"titu1994/Fully-Connected-DenseNets-Semantic-Segmentation" ["l"="31.545,36.738"]
"titu1994/Snapshot-Ensembles" ["l"="31.085,31.656"]
"WeitaoVan/L-GM-loss" ["l"="35.177,33.489"]
"leihe001/tensorflow-vgg" ["l"="34.253,34.947"]
"yongyehuang/Tensorflow-Tutorial" ["l"="32.122,29.993"]
"ypwhs/dogs_vs_cats" ["l"="23.772,29.342"]
"wagamamaz/tensorlayer-tricks" ["l"="23.462,31.358"]
"maozezhong/focal_loss_multi_class" ["l"="34.688,34.823"]
"Umi-you/FocalLoss" ["l"="34.674,34.812"]
"umbertogriffo/focal-loss-keras" ["l"="34.698,34.798"]
"gupta-abhay/setr-pytorch" ["l"="34.747,35.933"]
"xieenze/Trans2Seg" ["l"="31.673,42.212"]
"cvondrick/torch-starter" ["l"="33.824,32.419"]
"tanaikech/goodls" ["l"="34.191,36.201"]
"GitHub30/gdrive.sh" ["l"="34.163,36.212"]
"ThibaultGROUEIX/AtlasNet" ["l"="33.058,43.162"]
"facebookresearch/DPR" ["l"="25.787,29.223"]
"dorarad/gansformer" ["l"="33.292,32.964"]
"tanaikech/ggsrun" ["l"="23.014,2.684"]
"SahilKr24/kuebikobot" ["l"="-37.7,-17.843"]
"LeslieZhoa/tensorflow-MTCNN" ["l"="35.054,33.498"]
"AlphaQi/MTCNN-light" ["l"="34.96,33.467"]
"amusi/CVPR2019-Code" ["l"="34.565,35.45"]
"amusi/PyTorch-From-Zero-To-One" ["l"="24.133,31.174"]
"kalviny/MSDNet-PyTorch" ["l"="31.239,33.721"]
"yangle15/RANet-pytorch" ["l"="31.236,33.758"]
"ucbdrive/skipnet" ["l"="31.241,33.682"]
"happynear/NormFace" ["l"="35.055,33.476"]
"lars76/kmeans-anchor-boxes" ["l"="34.632,35.26"]
"dmarcosg/DSAC" ["l"="34.891,35.311"]
"nv-tlabs/STEAL" ["l"="29.869,37.095"]
"AlexMa011/pytorch-polygon-rnn" ["l"="34.823,35.321"]
"mng827/curve-gcn-cardiac-mr" ["l"="34.854,35.356"]
"JudyYe/zero-shot-gcn" ["l"="23.646,35.451"]
"Angzz/awesome-panoptic-segmentation" ["l"="31.86,36.934"]
"junchen14/LoMaR" ["l"="34.8,36.088"]
"DHZS/tf-deformable-conv-layer" ["l"="34.595,35.151"]
"Zardinality/TF_Deformable_Net" ["l"="34.557,35.134"]
"Zardinality/TF-deformable-conv" ["l"="34.565,35.124"]
"microsoft/vision-longformer" ["l"="34.757,35.955"]
"chinhsuanwu/coatnet-pytorch" ["l"="34.82,35.95"]
"naver-ai/pit" ["l"="44.22,-15.128"]
"kkhoot/PAA" ["l"="34.82,35.575"]
"microsoft/RelationNet2" ["l"="34.835,35.573"]
"dog-qiuqiu/FastestDet" ["l"="34.648,35.666"]
"hpc203/yolo-fastestv2-opencv" ["l"="34.723,35.635"]
"dog-qiuqiu/Ultralight-SimplePose" ["l"="31.654,36.27"]
"sdoria/SimpleSelfAttention" ["l"="34.189,35.905"]
"warner-benjamin/fastxtend" ["l"="22.697,28.944"]
"ucas-vg/TinyBenchmark" ["l"="34.895,35.501"]
"ucas-vg/TOV_mmdetection" ["l"="34.975,35.501"]
"Purkialo/CrowdDet" ["l"="34.781,36.484"]
"fyangneil/Clustered-Object-Detection-in-Aerial-Image" ["l"="35.068,35.494"]
"xwying/torchshow" ["l"="35.599,34.935"]
"ChenJoya/sampling-free" ["l"="-35.163,-17.628"]
"tianweiy/CenterPoint" ["l"="30.56,44.3"]
"zhoudaquan/dvit_repo" ["l"="34.752,36.036"]
"google-coral/examples-camera" ["l"="27.529,27.927"]
"margaretmz/awesome-tensorflow-lite" ["l"="28.741,32.9"]
"jiteshsaini/robotics-level-4" ["l"="34.078,35.134"]
"yehengchen/Object-Detection-and-Tracking" ["l"="32.245,36.102"]
"PaddlePaddle/LiteKit" ["l"="34.014,35.902"]
"PaddlePaddle/hapi" ["l"="34.035,35.912"]
"PaddlePaddle/benchmark" ["l"="33.992,35.94"]
"ninetailskim/DodgeFace" ["l"="-0.226,39.343"]
"mit-han-lab/torchprofile" ["l"="28.542,34.339"]
"buhuixiezuowendelihua/TorchVision_Maskrcnn" ["l"="34.689,35.198"]
"darolt/mask_rcnn" ["l"="34.669,35.219"]
"MehdiNoroozi/JigsawPuzzleSolver" ["l"="34.476,36.282"]
"amobiny/Self-Supervised_Jigsaw_Puzzle" ["l"="34.484,36.265"]
"fanq15/caffe_to_torch_to_pytorch" ["l"="34.455,35.146"]
"ycszen/pytorch-ss" ["l"="31.562,36.908"]
"vadimkantorov/caffemodel2pytorch" ["l"="34.527,35.008"]
"jcjohnson/pytorch-vgg" ["l"="34.186,35.063"]
"CuriousCat-7/Caffe_torch_pytorch_converter" ["l"="34.486,35.094"]
"open-mmlab/ecosystem" ["l"="34.859,35.79"]
"open-mmlab/awesome-vit" ["l"="34.804,35.765"]
"RangiLyu/llama.mmengine" ["l"="34.838,35.772"]
"Fangyh09/Image2LMDB" ["l"="34.391,35.699"]
"xunge/pytorch_lmdb_imagenet" ["l"="34.428,35.7"]
"yuhuixu1993/PC-DARTS" ["l"="28.454,34.391"]
"rmccorm4/PyTorch-LMDB" ["l"="34.377,35.702"]
"jinfagang/DCNv2_latest" ["l"="34.704,35.436"]
"lbin/DCNv2" ["l"="34.689,35.384"]
"Chasel-Tsui/mmdet-aitod" ["l"="35.076,35.57"]
"WangFeng18/Swin-Transformer" ["l"="34.78,35.876"]
"kemaloksuz/RankSortLoss" ["l"="34.875,35.65"]
"Megvii-BaseDetection/OTA" ["l"="34.855,35.599"]
"txdet/FCOSPss" ["l"="34.888,35.614"]
"shoutOutYangJie/MobileOne" ["l"="34.902,35.901"]
"federicopozzi33/MobileOne-PyTorch" ["l"="34.919,35.902"]
"LSH9832/edgeyolo" ["l"="34.768,35.764"]
"MatthewHowe/DCNv2" ["l"="34.757,35.413"]
"rathaROG/DCNv2_Windows" ["l"="34.759,35.376"]
"CaptainEven/MCMOT" ["l"="32.301,36.251"]
"mrnabati/CenterFusion" ["l"="30.558,44.161"]
"ttanzhiqiang/onnx_tensorrt_project" ["l"="34.795,35.54"]
"NVIDIA-AI-IOT/yolov4_deepstream" ["l"="34.662,35.521"]
"isarsoft/yolov4-triton-tensorrt" ["l"="30.053,38.038"]
"RichardoMrMu/yolov5-deepsort-tensorrt" ["l"="30.101,38.067"]
"wilile26811249/MobileViT" ["l"="34.82,35.868"]
"megvii-research/mdistiller" ["l"="30.908,35.456"]
"miemie2013/miemiedetection" ["l"="34.649,35.78"]
"shouxieai/http_server_cpp" ["l"="34.828,35.701"]
"shouxieai/bp-cpp" ["l"="34.796,35.694"]
"shouxieai/minio-cpp-sdk" ["l"="34.883,35.711"]
"shouxieai/hard_decode_trt" ["l"="34.843,35.704"]
"shouxieai/nerf" ["l"="34.708,35.69"]
"yhwang-hub/dl_model_deploy" ["l"="34.725,35.715"]
"shouxieai/algorithm-cpp" ["l"="34.727,35.705"]
"NVlabs/FAN" ["l"="31.896,35.015"]
"microsoft/FocalNet" ["l"="31.843,35.002"]
"facebookresearch/ToMe" ["l"="31.857,34.919"]
"microsoft/X-Decoder" ["l"="31.782,34.908"]
"hszhao/SAN" ["l"="31.688,37.141"]
"MaureenZOU/Adaptive-anti-Aliasing" ["l"="34.646,35.518"]
"richzhang/antialiased-cnns" ["l"="34.662,35.506"]
"switchablenorms/Switchable-Normalization" ["l"="34.648,35.391"]
"google-research/augmix" ["l"="33.859,36.663"]
"FlyEgle/CMT-pytorch" ["l"="34.884,36.021"]
"wilile26811249/CMT_CNN-meet-Vision-Transformer" ["l"="34.933,36.053"]
"yun-liu/TransCNN" ["l"="34.852,36.016"]
"Megvii-BaseDetection/AutoAssign" ["l"="34.864,35.585"]
"hustvl/YOLOP" ["l"="31.991,44.038"]
"bharatsingh430/snip" ["l"="34.751,35.236"]
"bowenc0221/Decoupled-Classification-Refinement" ["l"="34.747,35.203"]
"extreme-assistant/survey-computer-vision-2022" ["l"="34.658,35.901"]
"chensnathan/YOLOF" ["l"="34.827,35.607"]
"intel-isl/DPT" ["l"="31.787,43.282"]
"nightsnack/YOLObile" ["l"="34.854,35.565"]
"pengzhiliang/Conformer" ["l"="34.796,35.951"]
"JDAI-CV/CoTNet" ["l"="34.842,35.903"]
"ACheun9/Pytorch-implementation-of-Mobile-Former" ["l"="34.866,35.948"]
"sooftware/conformer" ["l"="0.41,39.823"]
"Picsart-AI-Research/SeMask-Segmentation" ["l"="34.819,35.92"]
"maple-research-lab/AdCo" ["l"="34.539,36.274"]
"maple-research-lab/CLSA" ["l"="34.541,36.323"]
"NaturalIntelligence/imglab" ["l"="34.654,35.343"]
"nimndata/spec" ["l"="25.057,-34.117"]
"NaturalIntelligence/Stubmatic" ["l"="25.068,-34.174"]
"NaturalIntelligence/anumargak" ["l"="25.061,-34.142"]
"kinhong/OpenLabeler" ["l"="34.78,35.294"]
"GuodongQi/yolo3_tensorflow" ["l"="34.731,35.198"]
"kaka-lin/object-detection" ["l"="34.719,35.207"]
"HaloTrouvaille/YOLO-Multi-Backbones-Attention" ["l"="33.139,37.558"]
"penguinnnnn/Caffe2Pytorch" ["l"="34.538,34.948"]
"bshillingford/python-torchfile" ["l"="26.856,34.356"]
"facebookresearch/clevr-iep" ["l"="31.613,34.404"]
"myfavouritekk/T-CNN" ["l"="32.602,36.017"]
"torrvision/siamfc-tf" ["l"="32.557,36.155"]
"msracver/Flow-Guided-Feature-Aggregation" ["l"="32.581,35.985"]
"feichtenhofer/Detect-Track" ["l"="32.538,36.054"]
"myfavouritekk/vdetlib" ["l"="32.582,36.024"]
"DrewNF/Build-Deep-Learning-Env-with-Tensorflow-Python-OpenCV" ["l"="34.361,34.922"]
"yuxng/MDP_Tracking" ["l"="32.461,36.112"]
"HyeonseobNam/py-MDNet" ["l"="32.596,36.165"]
"Microsoft/AzureSearch_JFK_Files" ["l"="-12.83,-44.141"]
"Microsoft/code-with-engineering-playbook" ["l"="24.329,16.18"]
"Azure/ObjectDetectionUsingCntk" ["l"="34.669,35.153"]
"Azure/BatchAI" ["l"="-12.293,-44.902"]
"frederictost/images_annotation_programme" ["l"="34.506,35.158"]
"TeamHG-Memex/tensorboard_logger" ["l"="34.167,35.275"]
"szagoruyko/diracnets" ["l"="34.143,35.233"]
"JianGoForIt/YellowFin_Pytorch" ["l"="34.055,35.197"]
"ikostrikov/pytorch-a2c-ppo-acktr" ["l"="25.045,35.899"]
"Kaixhin/nninit" ["l"="26.88,34.346"]
"zdevito/ATen" ["l"="27.958,35.417"]
"facebookresearch/fairseq-py" ["l"="30.093,32.49"]
"rasbt/stat453-deep-learning-ss20" ["l"="28.112,32.566"]
"dair-ai/pytorch_notebooks" ["l"="29.564,32.626"]
"Machine-Learning-Tokyo/AI_Curriculum" ["l"="23.859,30.599"]
"dair-ai/nlp_paper_summaries" ["l"="29.655,32.548"]
"dsgiitr/d2l-pytorch" ["l"="23.949,30.972"]
"rll/deepul" ["l"="28.148,32.597"]
"harvardnlp/pytorch-struct" ["l"="29.82,32.33"]
"PaddlePaddle/Paddle-bot" ["l"="33.995,35.911"]
"fkodom/fft-conv-pytorch" ["l"="35.021,36.192"]
"zzd1992/Image-Local-Attention" ["l"="35.064,36.227"]
"Chillee/CS344_2021" ["l"="35.045,36.212"]
"valeoai/LOST" ["l"="34.733,36.218"]
"chenyuntc/pytorch-best-practice" ["l"="34.351,35.318"]
"ShomyLiu/pytorch-relation-extraction" ["l"="30.713,30.932"]
"chenyuntc/PyTorchText" ["l"="32.024,30.001"]
"spytensor/pytorch-image-classification" ["l"="-40.484,41.259"]
"miraclewkf/SENet-PyTorch" ["l"="31.646,37.142"]
"DonghyunAhn/development-measure" ["l"="34.379,36.264"]
"dscig/urban_score" ["l"="34.376,36.255"]
"Sungwon-Han/TwoStageUC" ["l"="34.365,36.26"]
"TTN-YKK/Clustering_friendly_representation_learning" ["l"="34.368,36.226"]
"ZhiyuanDang/NNM" ["l"="34.399,36.213"]
"Charrin/RetinaFace-Cpp" ["l"="35.035,33.371"]
"nolanliou/mobile-deeplab-v3-plus" ["l"="33.87,33.344"]
"JonathanCMitchell/mobilenet_v2_keras" ["l"="34.776,35.078"]
"WillCheung2016/MobileNet_V2_Keras" ["l"="34.751,35.097"]
"johnolafenwa/Pytorch-Keras-ToAndroid" ["l"="36.082,34.595"]
"goodluckcwl/Face-alignment-mobilenet-v2" ["l"="34.936,33.382"]
"tensor-yu/cascaded_mobilenet-v2" ["l"="34.963,33.404"]
"min2209/dwt" ["l"="35.046,35.258"]
"snakers4/ds_bowl_2018" ["l"="35.113,35.237"]
"AlpacaDB/selectivesearch" ["l"="34.381,35.059"]
"belltailjp/selective_search_py" ["l"="34.41,34.974"]
"sergeyk/selective_search_ijcv_with_python" ["l"="34.404,34.932"]
"saisrivatsan/selective-search" ["l"="34.393,34.983"]
"JDAI-CV/CoTNet-ObjectDetection-InstanceSegmentation" ["l"="34.905,35.921"]
"wofmanaf/SA-Net" ["l"="31.582,37.233"]
"JDAI-CV/image-captioning" ["l"="31.542,34.618"]
"ThanatosShinji/onnx-tool" ["l"="34.74,35.695"]
"AXERA-TECH/ax-samples" ["l"="31.436,36.293"]
"ENOT-AutoDL/onnx2torch" ["l"="34.724,35.688"]
"NVIDIA-AI-IOT/tensorrt_plugin_generator" ["l"="34.69,35.673"]
"threeYANG/mmdetection_libtorch" ["l"="34.751,35.623"]
"rmccorm4/tensorrt-utils" ["l"="29.939,38.293"]
"zhy520xp/mace-makefile-project" ["l"="18.285,27.139"]
"kuangliu/pytorch-ssd" ["l"="34.668,35.187"]
"microsoft/onnxruntime-extensions" ["l"="34.749,35.638"]
"tenglike1997/onnxruntime-projects" ["l"="34.803,35.654"]
"pytorch/TensorRT" ["l"="34.601,35.621"]
"makefile/frcnn" ["l"="34.62,35.033"]
"shaoshengsong/quarkdet" ["l"="34.835,35.223"]
"ujsyehao/mobilenetv3-ssd" ["l"="34.831,35.239"]
"shaoshengsong/EfficientNet-SSD" ["l"="34.799,35.232"]
"ZhongyuanW/SSD_mobilenetv2-with-Focal-loss" ["l"="34.808,35.241"]
"guoruoqian/FPN_Pytorch" ["l"="34.662,35.252"]
"luuuyi/RefineDet.PyTorch" ["l"="34.682,35.285"]
"sail-sg/mugs" ["l"="34.672,36.06"]
"KMnP/vpt" ["l"="31.661,34.852"]
"SwinTransformer/Feature-Distillation" ["l"="34.716,36.116"]
"PaddlePaddle/CINN" ["l"="34.038,35.924"]
"PaddlePaddle/PaddleRobotics" ["l"="28.142,42.25"]
"jiangjiajun/PaddleUtils" ["l"="34.104,35.871"]
"JosephChenHub/CenterNet-TensorRT" ["l"="34.74,35.548"]
"dlunion/DBFace" ["l"="35.047,33.268"]
"DataXujing/TensorRT_CV" ["l"="34.74,35.572"]
"shouxieai/tensorRT_cpp" ["l"="34.72,35.674"]
"SegmentationBLWX/sssegmentation" ["l"="34.737,35.891"]
"CharlesPikachu/mcibi" ["l"="34.801,35.916"]
"lanyunzhu99/Learning-Statistical-Texture-for-Semantic-Segmentation" ["l"="34.843,35.931"]
"lxtGH/SFSegNets" ["l"="31.831,37.078"]
"murufeng/CVPR_2021_Papers" ["l"="34.68,35.815"]
"rozumden/DeFMO" ["l"="-30.067,-18.873"]
"yifan2/Image-Dehazing" ["l"="36.099,33.118"]
"swz30/MPRNet" ["l"="35.983,32.369"]
"misads/cv_template" ["l"="34.765,35.825"]
"tunib-ai/parallelformers" ["l"="44.437,-15.132"]
"kakaobrain/KorNLUDatasets" ["l"="44.431,-15.055"]
"KLUE-benchmark/KLUE" ["l"="44.471,-15.08"]
"lassl/lassl" ["l"="44.443,-15.159"]
"Huffon/nlp-startups" ["l"="44.432,-15.101"]
"hyunwoongko/kss" ["l"="44.441,-15.082"]
"kocohub/korean-hate-speech" ["l"="44.445,-15.053"]
"KLUE-benchmark/KLUE-baseline" ["l"="44.424,-15.141"]
"SeanNaren/minGPT" ["l"="34.173,36.079"]
"gritmind/python-nori" ["l"="34.19,36.073"]
"monologg/KoELECTRA" ["l"="44.459,-15.067"]
"tunib-ai/oslo" ["l"="44.443,-15.175"]
"ofsoundof/LocalViT" ["l"="34.847,36.003"]
"generalized-iou/Detectron.pytorch" ["l"="31.034,35.805"]
"hli2020/feature_intertwiner" ["l"="34.832,35.263"]
"ChiCheng123/SRN" ["l"="34.971,33.361"]
"stigma0617/VoVNet.pytorch" ["l"="34.832,35.526"]
"stigma0617/maskrcnn-benchmark-vovnet" ["l"="34.884,35.53"]
"mhamilton723/STEGO" ["l"="34.616,36.097"]
"janghyuncho/PiCIE" ["l"="34.641,36.125"]
"Haochen-Wang409/U2PL" ["l"="31.012,37.538"]
"MkuuWaUjinga/leopart" ["l"="34.653,36.155"]
"lukemelas/deep-spectral-segmentation" ["l"="31.713,34.907"]
"chongzhou96/MaskCLIP" ["l"="31.734,34.909"]
"facebookresearch/CutLER" ["l"="31.829,34.917"]
"yandex-research/ddpm-segmentation" ["l"="34.571,28.825"]
"lhoyer/HRDA" ["l"="29.894,34.81"]
"Yunfan-Li/Twin-Contrastive-Learning" ["l"="34.415,36.228"]
"XLearning-SCU/2021-CVPR-Completer" ["l"="34.375,36.292"]
"amazon-research/sccl" ["l"="32.284,30.485"]
"xuyxu/Deep-Clustering-Network" ["l"="34.41,36.263"]
"awwong1/torchprof" ["l"="34.222,35.828"]
"BlackHC/tfpyth" ["l"="35.286,30.757"]
"alexmojaki/snoop" ["l"="23.168,3.85"]
"philipperemy/yolo-9000" ["l"="34.416,35.137"]
"PaulChongPeng/YOLO2TensorFlow" ["l"="34.462,34.986"]
"PaddlePaddle/FluidDoc" ["l"="33.951,35.944"]
"wangsr126/RDSNet" ["l"="34.895,35.413"]
"zl1994/IoU-Uniform-R-CNN" ["l"="34.949,35.382"]
"jinfagang/CenterNet_Pro_Max" ["l"="34.804,35.455"]
"innerlee/setup" ["l"="34.835,35.801"]
"open-mmlab/denseflow" ["l"="34.894,35.822"]
"zhenyingfang/Awesome-Temporal-Action-Detection-Temporal-Action-Proposal-Generation" ["l"="32.34,34.912"]
"TencentYoutuResearch/ActionDetection-AFSD" ["l"="32.313,34.917"]
"HumamAlwassel/TSP" ["l"="32.323,34.934"]
"Alvin-Zeng/PGCN" ["l"="32.395,34.901"]
"motokimura/PyTorch_Gaussian_YOLOv3" ["l"="31.018,35.768"]
"leetenki/YOLOv2" ["l"="34.06,30.459"]
"nyoki-mtl/pytorch-segmentation" ["l"="31.724,36.979"]
"chenbinghui1/DSL" ["l"="34.997,35.753"]
"Megvii-BaseDetection/DisAlign" ["l"="33.637,36.694"]
"amazon-research/bigdetection" ["l"="34.884,35.787"]
"xingyizhou/UniDet" ["l"="34.863,35.692"]
"hikvision-research/ProbabilisticTeacher" ["l"="29.517,34.876"]
"hikvision-research/SlimDA" ["l"="35.08,35.76"]
"HunterJ-Lin/ActiveTeacher" ["l"="35.028,35.758"]
"jiweibo/ImageNet" ["l"="33.987,35.443"]
"jiecaoyu/pytorch_imagenet" ["l"="33.888,35.476"]
"soo89/ISD-SSD" ["l"="35.081,35.717"]
"szagoruyko/cifar.torch" ["l"="26.883,34.305"]
"fmassa/optimize-net" ["l"="26.887,34.316"]
"foolwood/DaSiamRPN" ["l"="32.514,36.173"]
"visionml/pytracking" ["l"="32.458,36.197"]
"StrangerZhang/pysot-toolkit" ["l"="32.54,36.218"]
"slwang9353/MobileFormer" ["l"="34.883,35.941"]
"fudan-zvg/SeaFormer" ["l"="34.931,35.921"]
"hustvl/Featurized-QueryRCNN" ["l"="34.892,35.965"]
"automl/NASLib" ["l"="28.454,34.367"]
"automl/awesome-transformer-search" ["l"="28.516,34.366"]
"facebookresearch/AttentiveNAS" ["l"="28.448,34.447"]
"extreme-assistant/nips2019" ["l"="34.022,35.187"]
"youweiliang/evit" ["l"="34.681,36.007"]
"NVlabs/A-ViT" ["l"="34.822,36.086"]
"changlin31/DS-Net" ["l"="28.431,34.452"]
"MengLcool/AdaViT" ["l"="34.776,36.056"]
"youngwanLEE/vovnet-detectron2" ["l"="34.756,35.554"]
"jinyu121/DW2TF" ["l"="34.456,35.106"]
"HuaizhengZhang/Awesome-System-for-Machine-Learning" ["l"="27.777,35.557"]
"halide/Halide" ["l"="27.667,35.447"]
"hkzhang91/EdgeFormer" ["l"="34.927,35.94"]
"yczhang1017/SSD_resnet_pytorch" ["l"="34.86,35.191"]
"ilkarman/DeepLearningFrameworks" ["l"="34.162,35.256"]
"Gus-Guo/AugFPN" ["l"="34.939,35.549"]
"wuyuebupt/doubleheadsrcnn" ["l"="35.026,35.546"]
"caiqi/sample-weighting-network" ["l"="34.9,35.524"]
"KevinKecc/MAL" ["l"="34.999,35.556"]
"IBM/CrossViT" ["l"="34.823,36.107"]
"rishikksh20/CrossViT-pytorch" ["l"="34.867,36.165"]
"tteepe/DCNv2" ["l"="34.783,35.415"]
"hkzhang95/DynamicRCNN" ["l"="34.892,35.559"]
"PanJianning/cbnet" ["l"="34.987,35.406"]
"qixuxiang/mmdetection_with_SENet154" ["l"="35.004,35.399"]
"terrychenism/Deformable-ConvNets" ["l"="34.569,35.098"]
"zzl-pointcloud/Data_Augmentation_Zoo_for_Object_Detection" ["l"="35.077,35.477"]
"kemaloksuz/aLRPLoss" ["l"="34.91,35.61"]
"Zzh-tju/CIoU" ["l"="31.014,35.859"]
"dd604/refinedet.pytorch" ["l"="34.763,35.25"]
"miaoshuyu/object-detection-usages" ["l"="34.886,35.389"]
"DocF/Soft-NMS" ["l"="34.848,35.278"]
"xmyqsh/RetinaNet" ["l"="34.555,35.023"]
"ducha-aiki/caffenet-benchmark" ["l"="34.475,35.026"]
"AlfredXiangWu/face_verification_experiment" ["l"="35.004,33.506"]
"jasonlovescoding/YOLOv3-caffe" ["l"="34.707,35.109"]
"hexiangquan/tensorRTyoloV3" ["l"="29.89,38.219"]
"PaddlePaddle/Perf" ["l"="34.001,35.957"]
"AntonMu/TrainYourOwnYOLO" ["l"="34.511,35.272"]
"theAIGuysCode/YOLOv4-Cloud-Tutorial" ["l"="32.17,36.006"]
"PacktPublishing/Hands-On-Computer-Vision-with-TensorFlow-2" ["l"="29.025,32.82"]
"ssaru/convert2Yolo" ["l"="25.587,-21.447"]
"zhanggang001/RefineMask" ["l"="34.943,35.78"]
"SysCV/pcan" ["l"="32.346,36.324"]
"easton-cau/SOTR" ["l"="34.99,35.801"]
"lkeab/BCNet" ["l"="34.878,35.752"]
"TingsongYu/ghostnet_cifar10" ["l"="34.761,35.429"]
"KopiSoftware/Ghost_ResNet56" ["l"="34.823,35.417"]
"ggjy/HitDet.pytorch" ["l"="28.595,34.407"]
"xiaohu2015/nndet2" ["l"="34.935,35.73"]
"xiaohu2015/pvt_detectron2" ["l"="34.933,35.743"]
"wincle/NPD" ["l"="34.85,33.52"]
"tornadomeet/mxnet-face" ["l"="34.923,33.509"]
"mit-han-lab/temporal-shift-module" ["l"="32.519,34.943"]
"gsig/PyVideoResearch" ["l"="32.475,34.904"]
"facebookresearch/VMZ" ["l"="32.515,34.907"]
"facebookresearch/video-long-term-feature-banks" ["l"="32.445,34.913"]
"Nioolek/PPYOLOE_pytorch" ["l"="34.713,35.802"]
"opconty/face_detection_in_realtime" ["l"="34.863,35.018"]
"opconty/keras_std" ["l"="34.862,35.004"]
"opconty/pixellink_keras" ["l"="34.844,35.01"]
"scheckmedia/keras-shufflenet" ["l"="34.749,35.047"]
"DataXujing/ncnn_android_yolov8" ["l"="31.55,36.355"]
"jinfagang/yolov7_d2" ["l"="34.633,35.713"]
"RizwanMunawar/yolov7-segmentation" ["l"="25.687,-21.558"]
"nanmi/yolov7-pose" ["l"="25.662,-21.529"]
"RizwanMunawar/yolov7-pose-estimation" ["l"="25.694,-21.592"]
"sjinzh/awesome-yolo-object-detection" ["l"="34.686,35.721"]
"songhan/SqueezeNet-Deep-Compression" ["l"="30.657,35.602"]
"pby5/MobileNet_Caffe" ["l"="34.642,34.998"]
"hangzhaomit/semantic-segmentation-pytorch" ["l"="31.539,36.907"]
"markdtw/vqa-winner-cvprw-2017" ["l"="31.639,34.471"]
"voidrank/FastMask" ["l"="31.676,36.754"]
"jasjeetIM/Mask-RCNN" ["l"="34.535,35.055"]
"ptrblck/prog_gans_pytorch_inference" ["l"="33.527,32.676"]
"hustzxd/z1" ["l"="34.672,35.05"]
"hustzxd/z0" ["l"="34.684,35.044"]
"lwplw/caffe_yolov2" ["l"="34.685,35.074"]
"nodefluxio/caffe-yolov2" ["l"="34.678,35.032"]
"mmclkv/caffe-mask-rcnn" ["l"="34.557,35.003"]
"Caojunxu/AC-FPN" ["l"="34.915,35.565"]
"unsky/Deformable-ConvNets-caffe" ["l"="34.589,35.09"]
"happynear/caffe-windows" ["l"="35.027,33.543"]
"Microsoft/caffe" ["l"="35,33.581"]
"happynear/FaceVerification" ["l"="35.018,33.5"]
"Evolving-AI-Lab/deep_learning_for_camera_trap_images" ["l"="33.481,36.818"]
"BGU-CS-VIL/DeepDPM" ["l"="34.47,36.087"]
"salesforce/OmniXAI" ["l"="25.78,34.102"]
"BGU-CS-VIL/DeepMCBM" ["l"="34.415,36.125"]
"pytorch/kineto" ["l"="27.851,35.506"]
"adityaiitb/pyprof2" ["l"="34.162,35.907"]
"ezyang/nvprof2json" ["l"="34.237,35.87"]
"JunnHan/SLATracker" ["l"="34.977,35.916"]
"lonePatient/lookahead_pytorch" ["l"="34.368,35.812"]
"lessw2020/Ranger-Mish-ImageWoof-5" ["l"="34.393,35.786"]
"tinyvision/AIRDet" ["l"="28.591,34.48"]
"iloveai8086/YOLOC" ["l"="34.717,35.75"]
"itijyou/ademxapp" ["l"="31.632,36.857"]
"guojunq/lsgan" ["l"="33.726,32.533"]
"TropComplique/shufflenet-v2-tensorflow" ["l"="34.688,35.101"]
"MG2033/MobileNet-V2" ["l"="34.652,35.205"]
"MG2033/MobileNet" ["l"="34.721,34.994"]
"TropComplique/ShuffleNet-tensorflow" ["l"="34.707,35.051"]
"PaddlePaddle/continuous_integration" ["l"="33.98,35.911"]
"Microsoft/human-pose-estimation.pytorch" ["l"="36.077,35.139"]
"Zhouaojun/Incremental-Network-Quantization" ["l"="30.647,35.573"]
"SnailTyan/caffe-model-zoo" ["l"="34.624,35.086"]
"GeekLiB/caffe-model" ["l"="34.72,35.014"]
"kimyoon-young/centerNet-deep-sort" ["l"="32.289,36.128"]
"bleakie/CenterMulti" ["l"="35.063,33.29"]
"tensorboy/centerpose" ["l"="35.054,33.24"]
"OpenGVLab/gv-benchmark" ["l"="34.886,35.809"]
"OpenGVLab/opengvlab.github.io" ["l"="34.939,35.821"]
"MTLab/onnx2caffe" ["l"="34.839,35.122"]
"woodsgao/pytorch2caffe" ["l"="34.823,35.114"]
"asiryan/caffe2onnx" ["l"="34.811,35.128"]
"ayoolaolafenwa/PixelLib" ["l"="34.63,35.484"]
"google-research-datasets/Objectron" ["l"="31.752,42.295"]
"hkchengrex/MiVOS" ["l"="31.83,33.27"]
"Borda/pyImSegm" ["l"="29.48,36.605"]
"streamlit/demo-face-gan" ["l"="22.926,32.014"]
"shaohua0116/ICLR2019-OpenReviewData" ["l"="27.764,30.4"]
"hoya012/ICCV-2019-Paper-Statistics" ["l"="34.273,35.391"]
"HardLaugh/EfficientDet-bifpn" ["l"="34.965,35.427"]
"yoneken1/pytorch_bifpn_for_mmdetection" ["l"="35.01,35.419"]
"aloyschen/tensorflow-yolo3" ["l"="34.661,35.063"]
"raytroop/YOLOv3_tf" ["l"="34.641,35.086"]
"rbgirshick/caffe-fast-rcnn" ["l"="34.471,35.041"]
"ShaoqingRen/caffe" ["l"="34.438,34.969"]
"finepix/small_object_augmentation" ["l"="35.12,35.472"]
"Jasonlee1995/AutoAugment_Detection" ["l"="35.112,35.463"]
"jing-vision/lightnet" ["l"="34.732,34.871"]
"NVIDIA/TransformerEngine" ["l"="27.605,31.111"]
"soeaver/AirNet-PyTorch" ["l"="34.359,32.318"]
"soeaver/mxnet-model" ["l"="34.346,32.318"]
"soeaver/pytorch-priv" ["l"="34.343,32.33"]
"soeaver/Parsing-R-CNN" ["l"="34.393,32.352"]
"soeaver/CrossNet-PyTorch" ["l"="34.363,32.328"]
"Guanghan/darknet" ["l"="34.431,34.991"]
"jia-zhuang/pytorch-multi-gpu-training" ["l"="34.452,35.895"]
"jireh-father/tensorflow-alexnet" ["l"="34.179,34.916"]
"uber-common/deep-neuroevolution" ["l"="24.659,38.396"]
"mulinmeng/Shuffle-Transformer" ["l"="34.836,35.984"]
"iamhankai/ghostnet" ["l"="28.543,34.535"]
"DingXiaoH/ACNet" ["l"="31.628,37.137"]
"myutwo150/keras-inception-resnet-v2" ["l"="34.296,34.906"]
"kentsommer/keras-inception-resnetV2" ["l"="34.294,34.927"]
"heefe92/Relation_Networks-pytorch" ["l"="34.684,35.238"]
"choasup/SIN" ["l"="31.67,34.312"]
"nathanin/IIC" ["l"="34.43,36.286"]
"clobotics/piou" ["l"="35.011,36.888"]
"SweetyTian/efficientdet" ["l"="34.843,35.451"]
"kentaroy47/efficientdet.pytorch" ["l"="34.783,35.461"]
"coderhss/efficientdet-pytorch" ["l"="34.689,35.48"]
"qijiezhao/pytorch-ssd" ["l"="34.736,35.224"]
"lopuhin/ssd.pytorch" ["l"="34.799,35.201"]
"tshizys/CoupleNet" ["l"="34.594,34.981"]
"sciencefans/RSA-for-object-detection" ["l"="35.031,33.455"]
"vaesl/LFIP" ["l"="34.97,35.36"]
"wei-yuma/multitrident" ["l"="34.934,35.361"]
"koreadhkim/ResNet_SSD_Pytorch" ["l"="34.896,35.178"]
"metastableB/GradSchoolTemplates" ["l"="34.063,34.822"]
"d-li14/lambda.pytorch" ["l"="34.626,35.992"]
"yqyao/DRFNet" ["l"="34.765,35.273"]
"yqyao/YOLOv3_Pytorch" ["l"="34.723,35.259"]
"HVision-NKU/Conv2Former" ["l"="31.968,35.073"]
"ofsoundof/GRL-Image-Restoration" ["l"="35.913,32.558"]
"DingXiaoH/DiverseBranchBlock" ["l"="31.549,37.226"]
"michaelrzhang/lookahead" ["l"="34.34,35.829"]
"pabloppp/pytorch-tools" ["l"="34.313,35.843"]
"openvinotoolkit/operator" ["l"="34.339,35.511"]
"openvinotoolkit/docker_ci" ["l"="34.328,35.503"]
"Alpha-VL/FastConvMAE" ["l"="34.763,36.088"]
"EPFL-VILAB/MultiMAE" ["l"="34.705,36.031"]
"ViTAE-Transformer/ViTDet" ["l"="33.919,33.308"]
"EscVM/OIDv4_ToolKit" ["l"="34.613,35.303"]
"theAIGuysCode/OIDv4_ToolKit" ["l"="32.16,36.017"]
"AtriSaxena/OIDv4_to_VOC" ["l"="34.702,35.284"]
"WyattAutomation/Train-YOLOv3-with-OpenImagesV4" ["l"="34.725,35.285"]
"harshilpatel312/open-images-downloader" ["l"="34.688,35.256"]
"zamblauskas/oidv4-toolkit-tfrecord-generator" ["l"="34.666,35.293"]
"MCG-NJU/VideoMAE" ["l"="32.446,35.041"]
"facebookresearch/VICRegL" ["l"="34.579,36.097"]
"ShoufaChen/AdaptFormer" ["l"="31.631,34.856"]
"hustvl/TeViT" ["l"="31.814,33.364"]
"jshilong/DDQ" ["l"="31.737,35.044"]
"chengyangfu/retinamask" ["l"="34.696,35.27"]
"hosang/gossipnet" ["l"="34.78,35.233"]
"vxy10/ImageAugmentation" ["l"="34.708,35.25"]
"dongfangduoshou123/YoloV3-TensorRT" ["l"="29.942,38.228"]
"zombie0117/yolov3-tiny-onnx-TensorRT" ["l"="30.092,38.207"]
"TrojanXu/yolov5-tensorrt" ["l"="30.18,38.216"]
"Stephenfang51/tracklite" ["l"="30.119,38.17"]
"Cw-zero/TensorRT_yolo3" ["l"="29.961,38.21"]
"CPFLAME/centerX" ["l"="34.838,35.506"]
"eric612/MobileNet-SSD-windows" ["l"="34.713,35.083"]
"idstcv/ZenNAS" ["l"="28.499,34.388"]
"taynoel84/YOLOv3-Mobilenetv2" ["l"="34.731,35.167"]
"johannesu/NASNet-keras" ["l"="34.277,34.705"]
"zzzxxxttt/pytorch_simple_CenterNet_45" ["l"="34.864,35.479"]
"lbin/CenterNet-better-plus" ["l"="34.862,35.464"]
"JDAI-CV/centerX" ["l"="34.886,35.479"]
"Arthur151/CenterHMR" ["l"="35.785,35.079"]
"OneDirection9/soft-nms" ["l"="34.891,35.253"]
"wushuang01/soft-nms" ["l"="34.899,35.262"]
"zuoqing1988/ZQCNN-v0.0" ["l"="35.04,33.424"]
"luoyetx/mini-caffe" ["l"="34.912,33.496"]
"chenyilun95/tf-cpn" ["l"="36.113,35.136"]
"HiKapok/X-Detector" ["l"="34.784,35.116"]
"acm5656/ssd_pytorch" ["l"="34.769,35.21"]
"jacobkimmel/pytorch_modelsize" ["l"="34.134,35.947"]
"NVlabs/AFNO-transformer" ["l"="22.627,34.382"]
"Sense-X/UniFormer" ["l"="32.407,35.056"]
"svip-lab/AS-MLP" ["l"="34.867,36.036"]
"tensorflow/embedding-projector-standalone" ["l"="33.793,34.993"]
"tensorflow/tensorboard-plugin-example" ["l"="33.882,35.054"]
"cnzeki/embedding-projector" ["l"="33.766,34.973"]
"huaze555/windows-caffe-faster-rcnn" ["l"="34.591,34.933"]
"tjuskyzhang/Scaled-YOLOv4-TensorRT" ["l"="34.911,35.54"]
"Ahmkel/Keras-Project-Template" ["l"="33.923,35.829"]
"jtoy/awesome-tensorflow" ["l"="23.475,31.019"]
"SpikeKing/DL-Project-Template" ["l"="33.881,35.835"]
"chiphuyen/stanford-tensorflow-tutorials" ["l"="23.642,31.063"]
"hwalsuklee/tensorflow-generative-model-collections" ["l"="33.712,32.687"]
"AppliedDataSciencePartners/DeepReinforcementLearning" ["l"="25.413,38.863"]
"tensorflow/minigo" ["l"="25.439,38.834"]
"Sarasra/models" ["l"="31.013,32.984"]
"YihangLou/fast-rcnn-train-another-dataset" ["l"="34.612,34.8"]
"YihangLou/FasterRCNN-Encapsulation-Cplusplus" ["l"="34.589,34.88"]
"Liu-Yicheng/Fast-RCNN" ["l"="9.664,20.026"]
"liuruiyang98/Jittor-MLP" ["l"="34.953,36.09"]
"liuruiyang98/Jittor-summary" ["l"="34.982,36.109"]
"opendatacam/opendatacam" ["l"="34.781,35.477"]
"LeonLok/Multi-Camera-Live-Object-Tracking" ["l"="32.198,36.1"]
"opendatacam/node-moving-things-tracker" ["l"="34.876,35.448"]
"Azure-Samples/NVIDIA-Deepstream-Azure-IoT-Edge-on-a-NVIDIA-Jetson-Nano" ["l"="29.961,37.967"]
"bochinski/iou-tracker" ["l"="32.36,36.118"]
"dataplayer12/homesecurity" ["l"="29.982,37.945"]
"bdtinc/maskcam" ["l"="30.012,38.011"]
"wandb/examples" ["l"="34.17,36.021"]
"wandb/client" ["l"="25.824,37.551"]
"huggingface/notebooks" ["l"="23.745,30.191"]
"jungwoo-ha/WeeklyArxivTalk" ["l"="44.487,-15.102"]
"subinium/Misc-Cheatsheet" ["l"="44.53,-15.122"]
"e3nn/e3nn" ["l"="17.115,37.832"]
"n2cholas/awesome-jax" ["l"="23.466,33.755"]
"yihui-he/Xception-caffe" ["l"="34.698,34.994"]
"poodarchu/DETR.detectron2" ["l"="34.846,35.49"]
"facebookarchive/fb.resnet.torch" ["l"="34.17,35.204"]
"PaddlePaddle/InterpretDL" ["l"="33.975,35.99"]
"PaddlePaddle/TrustAI" ["l"="33.936,36.022"]
"JonathonLuiten/TrackEval" ["l"="32.313,36.244"]
"CaptainEven/FairMOTVehicle" ["l"="32.255,36.27"]
"JialianW/TraDeS" ["l"="32.358,36.246"]
"Guanbin-Huang/tensorRT_Pro_co-comments" ["l"="34.785,35.703"]
"iwatake2222/self-driving-ish_computer_vision_system" ["l"="34.499,35.717"]
"jwwangchn/NWD" ["l"="35.124,35.554"]
"Cli98/DMNet" ["l"="35.128,35.49"]
"GKalliatakis/Keras-Application-Zoo" ["l"="34.083,35.109"]
"vpulab/Semantic-Aware-Scene-Recognition" ["l"="34.058,35.082"]
"titu1994/Wide-Residual-Networks" ["l"="34.302,34.786"]
"PaddlePaddle/PaddleSports" ["l"="34.02,35.979"]
"FeixiangLu/PaddleSports" ["l"="34,35.998"]
"OliverRensu/TinyMIM" ["l"="-25.189,23.746"]
"THUDM/GraphMAE" ["l"="22.061,38.56"]
"LightDXY/FT-CLIP" ["l"="31.896,34.844"]
"AbrahamYabo/SdAE" ["l"="34.717,36.095"]
"Tramac/torchscope" ["l"="34.13,35.912"]
"chenyuntc/dsod.pytorch" ["l"="34.773,35.18"]
"jiangzhengkai/Video-Detection" ["l"="32.581,35.954"]
"xxxnell/spatial-smoothing" ["l"="34.614,36.049"]
"tztztztztz/eql.detectron2" ["l"="33.666,36.661"]
"ming71/DAL" ["l"="35.036,36.896"]
"lzh420202/FCOSR" ["l"="35.12,36.889"]
"zonghua94/mnist" ["l"="34.1,34.802"]
"YunYang1994/cv-notebooks" ["l"="34.562,35.145"]
"panguxiaoshen/tiny_yolov3" ["l"="34.502,35.172"]
"DataXujing/YOLO-V3-Tensorflow" ["l"="31.884,36.29"]
"rrddcc/YOLOv4_tensorflow" ["l"="29.557,35.386"]
"openvinotoolkit/model_preparation_algorithm" ["l"="34.482,35.494"]
"openvinotoolkit/mmdetection" ["l"="34.522,35.492"]
"openvinotoolkit/deep-object-reid" ["l"="34.479,35.478"]
"openvinotoolkit/geti-sdk" ["l"="34.474,35.49"]
"cvdfoundation/google-landmark" ["l"="32.752,34.308"]
"you359/Keras-FasterRCNN" ["l"="29.28,36.03"]
"kbardool/keras-frcnn" ["l"="29.245,36.066"]
"akshaylamba/FasterRCNN_KERAS" ["l"="34.383,35.012"]
"RockyXu66/Faster_RCNN_for_Open_Images_Dataset_Keras" ["l"="29.258,36.033"]
"moyiliyi/keras-faster-rcnn" ["l"="34.401,35.039"]
"jolibrain/deepdetect" ["l"="34.626,35.198"]
"lyakaap/pytorch-template" ["l"="33.985,35.856"]
"bighuang624/AI-research-tools" ["l"="27.461,30.034"]
"aisolab/nlp_implementation" ["l"="44.433,-14.939"]
"cs230-stanford/cs230-code-examples" ["l"="29.968,32.837"]
"ryul99/pytorch-project-template" ["l"="34.012,35.853"]
"NVIDIA-AI-IOT/tf_to_trt_image_classification" ["l"="29.921,38.165"]
"ZFTurbo/Keras-inference-time-optimizer" ["l"="34.756,35.515"]
"shouxieai/shouxie_RNN" ["l"="34.911,35.708"]
"Guanbin-Huang/tensorRT_Pro_comments" ["l"="30.108,38.101"]
"DeepMark/deepmark" ["l"="26.903,34.271"]
"wikke/SSD_Keras" ["l"="34.397,34.892"]
"ZhouYanzhao/PRM" ["l"="30.762,37.529"]
"amirassov/kaggle-global-wheat-detection" ["l"="29.538,35.983"]
"shinya7y/WaymoCOCO" ["l"="34.81,35.692"]
"wmuron/motpy" ["l"="32.221,36.151"]
"onelivesleft/PrettyErrors" ["l"="23.202,3.965"]
"MasterBin-IIAU/Unicorn" ["l"="32.391,36.285"]
"v-shmyhlo/retinanet-tensorflow" ["l"="34.622,34.847"]
"princewang1994/R-FCN.pytorch" ["l"="34.523,35.066"]
"RizhaoCai/PyTorch_ONNX_TensorRT" ["l"="34.707,35.583"]
"wuba/dl_inference" ["l"="32.281,30.4"]
"alfonsolink/tf_rfcn" ["l"="34.514,34.973"]
"parap1uie-s/Keras-RFCN" ["l"="34.514,34.991"]
"chaosmail/tfjs-onnx" ["l"="34.761,35.669"]
"davidpfahler/react-ml-app" ["l"="34.768,35.684"]
"sonos/tract" ["l"="-9.016,4.718"]
"google/XNNPACK" ["l"="27.673,35.469"]
"onnx/sklearn-onnx" ["l"="34.696,35.608"]
"microsoft/DMTK" ["l"="27.31,33.584"]
"artemmavrin/focal-loss" ["l"="34.723,34.767"]
"Tony607/Keras_Bag_of_Tricks" ["l"="34.628,35.426"]
"JianGoForIt/YellowFin" ["l"="33.96,35.139"]
"hexiangnan/neural_factorization_machine" ["l"="22.811,37.199"]
"ChenglongChen/tensorflow-DeepFM" ["l"="22.745,37.194"]
"lambdaji/tf_repos" ["l"="22.729,37.197"]
"Johnson0722/CTR_Prediction" ["l"="22.745,37.173"]
"victordibia/handtracking" ["l"="36.047,34.389"]
"bourdakos1/Custom-Object-Detection" ["l"="27.792,27.642"]
"dddzg/MoCo" ["l"="34.534,36.297"]
"sciencefans/CaffeMex_v2" ["l"="35.146,33.517"]
"halbielee/EPS" ["l"="30.771,37.61"]
"damo-cv/TransFGU" ["l"="34.666,36.165"]
"fcakyon/small-object-detection-benchmark" ["l"="35.054,35.531"]
"RuiZhang97/ISNet" ["l"="31.304,37.404"]
"hanoonaR/object-centric-ovd" ["l"="31.647,34.912"]
"mmaaz60/mvits_for_class_agnostic_od" ["l"="31.629,34.916"]
"Amshaker/SwiftFormer" ["l"="31.57,34.942"]
"muzairkhattak/ViFi-CLIP" ["l"="31.627,34.891"]
"muzairkhattak/multimodal-prompt-learning" ["l"="31.65,34.866"]
"hunto/image_classification_sota" ["l"="34.903,35.937"]
"Alibaba-MIIL/Solving_ImageNet" ["l"="34.949,35.967"]
"hunto/LightViT" ["l"="34.905,35.95"]
"dongbo811/AFFormer" ["l"="34.914,35.963"]
"labmlai/labml" ["l"="34.277,35.996"]
"microsoft/torchscale" ["l"="27.525,31.101"]
"csinva/imodels" ["l"="25.707,34.045"]
"microsoft/FLAML" ["l"="25.54,34.054"]
"karpathy/arxiv-sanity-lite" ["l"="27.493,31.009"]
"webis-de/small-text" ["l"="29.462,32.508"]
"google/gin-config" ["l"="23.566,33.716"]
"PySlurm/pyslurm" ["l"="21.648,33.63"]
"facebookresearch/nevergrad" ["l"="25.543,33.689"]
"facebookresearch/higher" ["l"="23.721,35.458"]
"AidenDurrant/SimCLR-Pytorch" ["l"="34.605,36.142"]
"lxtGH/Video-K-Net" ["l"="31.842,33.448"]
"Tai-Wang/Depth-from-Motion" ["l"="30.657,44.188"]
"zhiqi-li/Panoptic-SegFormer" ["l"="34.914,35.871"]
"huangzongmou/yolov8-pytorch_quantization" ["l"="34.756,35.723"]
"hustvl/MSG-Transformer" ["l"="34.986,36.007"]
"hustvl/NeuSample" ["l"="35.028,36.026"]
"kakaobrain/torchgpipe" ["l"="-9.372,3.03"]
"bayesiains/nflows" ["l"="23.293,33.912"]
"rusty1s/pytorch_scatter" ["l"="30.6,44.411"]
"pytorch/extension-cpp" ["l"="28.019,35.422"]
"daijifeng001/TA-FCN" ["l"="31.65,36.81"]
"facebookresearch/semi-supervised-ImageNet1K-models" ["l"="34.709,35.724"]
"appian42/kaggle-rsna-intracranial-hemorrhage" ["l"="29.675,35.931"]
"salesforce/pytorch-qrnn" ["l"="30.115,32.482"]
"ruotianluo/pytorch-resnet" ["l"="34.111,35.01"]
"ruotianluo/Faster-RCNN-Densecap-torch" ["l"="26.772,34.356"]
"XingangPan/IBN-Net" ["l"="33.044,36.875"]
"miguelvr/dropblock" ["l"="33.914,36.621"]
"switchablenorms/SwitchNorm_Detection" ["l"="34.863,35.318"]
"dstamoulis/single-path-nas" ["l"="28.462,34.386"]
"PkuRainBow/OCNet" ["l"="31.521,37.038"]
"terrychenism/mx-rfcn" ["l"="34.551,34.905"]
"craftGBD/caffe-GBD" ["l"="34.554,34.929"]
"dthiagarajan/simclr_pytorch" ["l"="28.176,32.691"]
"yjh0410/CenterNet-Lite" ["l"="34.977,35.464"]
"bubbliiiing/centernet-pytorch" ["l"="29.683,35.363"]
"yjh0410/CenterNet-plus" ["l"="34.957,35.467"]
"xggIoU/centernet_tensorflow_wilderface_voc" ["l"="31.811,37.617"]
"Microsoft/onnxruntime" ["l"="27.552,35.431"]
"onnx/onnx-docker" ["l"="34.743,35.598"]
"scailable/sclblonnx" ["l"="34.686,35.59"]
"Labelbox/labelbox-python" ["l"="34.867,35.339"]
"we1pingyu/DSHNet" ["l"="35.177,35.486"]
"sxhxliang/detectron2_backbone" ["l"="34.831,35.59"]
"KevinMuyaoGuo/yolov5s_for_satellite_imagery" ["l"="35.187,35.554"]
"postor/DOTA-yolov3" ["l"="35.234,35.554"]
"miraclewkf/MobileNetV2-PyTorch" ["l"="34.741,35.179"]
"bailvwangzi/repulsion_loss_ssd" ["l"="34.693,36.462"]
"ElegantGod/ncnn" ["l"="34.956,33.439"]
"moli232777144/mobilefacenet-mxnet" ["l"="35.032,33.41"]
"BUG1989/ncnn-benchmark" ["l"="34.9,33.555"]
"zhanglaplace/Faster_rcnn_Cplusplus_vs2013" ["l"="34.59,34.9"]
"D-X-Y/caffe-reid" ["l"="33.058,36.763"]
"manutdzou/faster-rcnn-pure-c-plus-implement" ["l"="34.583,34.916"]
"google-research/fast-soft-sort" ["l"="34.044,36.085"]
"johnhw/differentiable_sorting" ["l"="33.996,36.14"]
"technicolor-research/sodeep" ["l"="34.01,36.12"]
"getkeops/keops" ["l"="22.661,33.825"]
"szagoruyko/pyinn" ["l"="28.058,35.415"]
"oval-group/logger" ["l"="33.985,35.142"]
"ShaharKatz/Caffe-Data-Augmentation" ["l"="34.641,34.952"]
"ChenglongChen/caffe-windows" ["l"="34.664,34.939"]
"daerduoCarey/SpatialTransformerLayer" ["l"="34.661,34.916"]
"andreaazzini/retinanet.pytorch" ["l"="34.558,35.181"]
"princewang1994/RFCN_CoupleNet.pytorch" ["l"="34.549,34.992"]
"switchablenorms/SwitchNorm_Segmentation" ["l"="34.969,35.27"]
"SpikeKing/triplet-loss-mnist" ["l"="24.145,35.463"]
"lifeomic/sparkflow" ["l"="33.734,35.908"]
"TrojanXu/onnxparser-trt-plugin-sample" ["l"="34.823,35.645"]
"DerryHub/BEVFormer_tensorrt" ["l"="34.854,35.648"]
"tensorflow/mlir-hlo" ["l"="27.705,35.561"]
"mcahny/vps" ["l"="31.895,36.943"]
"JaminFong/DenseNAS" ["l"="28.478,34.4"]
"wuhuikai/FastFCN" ["l"="31.725,37.004"]
"csrhddlam/pytorch-checkpoint" ["l"="27.706,35.761"]
"hujiecpp/ISTR" ["l"="34.953,35.799"]
"cancam/LRP" ["l"="34.999,35.621"]
"kemaloksuz/LRP-Error" ["l"="34.977,35.619"]
"ming71/HRSC2016_SOTA" ["l"="35.06,36.938"]
"dmmiller612/sparktorch" ["l"="33.688,35.933"]
"Shopify/upgrow" ["l"="8.165,-30.759"]
"connor-create/wsbtrades" ["l"="34.876,35.63"]
"ildoonet/pytorch-gradual-warmup-lr" ["l"="33.796,36.61"]
"dkumazaw/onecyclelr" ["l"="34.29,35.739"]
"nachiket273/One_Cycle_Policy" ["l"="34.282,35.749"]
"timgaripov/swa" ["l"="33.921,36.657"]
"davidcpage/cifar10-fast" ["l"="34.659,32.723"]
"andrewekhalel/edafa" ["l"="34.393,35.75"]
"sneddy/pneumothorax-segmentation" ["l"="29.525,35.941"]
"facebookresearch/functorch" ["l"="34.115,36.045"]
"zsdonghao/tensorlayer" ["l"="23.52,31.264"]
"reinforceio/tensorforce" ["l"="24.99,35.887"]
"carpedm20/deep-rl-tensorflow" ["l"="24.905,35.887"]
"devsisters/DQN-tensorflow" ["l"="24.875,35.888"]
"kimhc6028/relational-networks" ["l"="31.732,34.429"]
"ZhouYanzhao/ORN" ["l"="16.917,37.986"]
"ars-ashuha/variational-dropout-sparsifies-dnn" ["l"="30.56,35.514"]
"locuslab/pytorch_fft" ["l"="34.06,35.172"]
"scanner-research/scanner" ["l"="34.625,34.761"]
"scanner-research/esper" ["l"="34.624,34.727"]
"scanner-research/scannertools" ["l"="34.648,34.729"]
"scanner-research/rekall" ["l"="34.638,34.713"]
"stanford-futuredata/noscope" ["l"="34.562,34.956"]
"leihe001/tensorflow-resnet" ["l"="34.242,34.896"]
"bojone/keras_lookahead" ["l"="31.255,31.782"]
"gasvn/Res2Net" ["l"="31.491,37.222"]
"limbo0000/InstanceLoc" ["l"="31.614,35.045"]
"dddzg/up-detr" ["l"="31.658,35.01"]
"ali-design/GenRep" ["l"="34.376,36.133"]
"haofanwang/natural-language-joint-query-search" ["l"="31.864,34.734"]
"rmokady/CLIP_prefix_caption" ["l"="31.773,34.754"]
"gaopengcuhk/Tip-Adapter" ["l"="31.69,34.844"]
"hila-chefer/RobustViT" ["l"="34.693,36.083"]
"dandelin/ViLT" ["l"="31.685,34.722"]
"XiaohangZhan/deocclusion" ["l"="33.175,32.912"]
"tinyalpha/BPR" ["l"="34.977,35.777"]
"chrisranderson/beholder" ["l"="34.035,35.152"]
"bioinf-jku/SNNs" ["l"="33.874,32.628"]
"keon/speed" ["l"="33.947,35.104"]
"google/learned_optimization" ["l"="23.497,33.689"]
"xl0/lovely-numpy" ["l"="34.149,36.045"]
"run-ai/genv" ["l"="34.131,36.09"]
"lucidrains/lion-pytorch" ["l"="27.542,31.011"]
"srush/Tensor-Puzzles" ["l"="27.64,30.962"]
"pnkraemer/tueplots" ["l"="21.634,34.777"]
"archinetai/surgeon-pytorch" ["l"="34.147,36.114"]
"Li-Qingyun/sam-mmrotate" ["l"="34.922,35.811"]
"UX-Decoder/Segment-Everything-Everywhere-All-At-Once" ["l"="27.252,31.215"]
"VainF/Awesome-Anything" ["l"="27.264,31.205"]
"RockeyCoss/Prompt-Segment-Anything" ["l"="34.91,35.799"]
"yeungchenwa/OCR-SAM" ["l"="29.826,34.011"]
"ttengwang/Caption-Anything" ["l"="27.278,31.256"]
"hpc203/FastestDet-opencv-dnn" ["l"="34.704,35.679"]
"AnthonyF333/FaceLandmark_PFLD_UltraLight" ["l"="34.951,33.206"]
"DingXiaoH/RepOptimizers" ["l"="31.132,35.514"]
"iwatake2222/InferenceHelper" ["l"="34.297,35.686"]
"iwatake2222/play_with_tensorrt" ["l"="34.217,35.692"]
"ValYouW/tflite-dist" ["l"="30.669,31.76"]
"ming71/rotate-yolov3" ["l"="35.021,36.894"]
"hukaixuan19970627/YOLOv5_DOTA_OBB" ["l"="35.067,36.906"]
"ming71/yolov3-polygon" ["l"="35.028,36.937"]
"Atomwh/FocalLoss_Keras" ["l"="34.664,34.832"]
"salesforce/CoMatch" ["l"="33.918,36.888"]
"TheBobPony/getwindows11.tech" ["l"="34.448,36.088"]
"rishikksh20/ResMLP-pytorch" ["l"="34.41,36.152"]
"fahadshamshad/awesome-transformers-in-medical-imaging" ["l"="29.365,36.558"]
"saic-vul/adaptis" ["l"="31.824,36.922"]
"intel/ocm" ["l"="34.071,35.561"]
"ljanyst/ssd-tensorflow" ["l"="34.492,35.041"]
"lslcode/SSD_for_Tensorflow" ["l"="34.719,33.768"]
"HiKapok/RON_Tensorflow" ["l"="34.547,35.012"]
"LevinJ/SSD_tensorflow_VOC" ["l"="34.502,35.031"]
"ericsun99/ShuffleNet-1g8-Pytorch" ["l"="34.715,35.168"]
"sacmehta/ESPNetv2" ["l"="31.768,36.96"]
"guenthereder/Deep-Clustering-Network" ["l"="34.404,36.29"]
"yqlbu/jetson-packages-family" ["l"="33.869,34.872"]
"sungjuGit/PyTorch-and-Vision-for-Raspberry-Pi-4B" ["l"="33.882,34.995"]
"isakbosman/pytorch_arm_builds" ["l"="33.901,35.007"]
"hustvl/CrossVIS" ["l"="31.798,33.396"]
"yan-hao-tian/lawin" ["l"="31.862,37.157"]
"Joker316701882/Deep-Image-Matting" ["l"="33.779,33.379"]
"martinkersner/train-CRF-RNN" ["l"="31.58,36.776"]
"guosheng/refinenet" ["l"="31.648,36.849"]
"shouxieai/CTC_loss_pytorch" ["l"="34.923,35.713"]
"Tencent/TurboTransformers" ["l"="32.129,30.357"]
"Tencent/WeChat-TFCC" ["l"="34.773,35.641"]
"dvlab-research/SA-AutoAug" ["l"="34.909,35.666"]
"11-626/Deep-INFOMAX" ["l"="34.598,36.268"]
"Rapternmn/PyTorch-Onnx-Tensorrt" ["l"="34.847,35.586"]
"zerollzeng/tensorrt-zoo" ["l"="30,37.986"]
"open-mmlab/mmstyles" ["l"="34.915,35.826"]
"open-mmlab/gkmeans" ["l"="34.905,35.828"]
"open-mmlab/caffe" ["l"="34.914,35.837"]
"bowenc0221/boundary-iou-api" ["l"="35.054,35.803"]
"fxmeng/RMNet" ["l"="31.083,35.519"]
"jakebian/quiver" ["l"="30.96,31.56"]
"thomasj02/DeepLearningProjectWorkflow" ["l"="23.151,31.196"]
"khanrc/tf.gans-comparison" ["l"="33.746,32.655"]
"reiinakano/xcessiv" ["l"="25.602,33.772"]
"jacobgil/keras-grad-cam" ["l"="28.691,34.933"]
"woozzu/dong_iccv_2017" ["l"="33.385,32.633"]
"cvjena/darknet" ["l"="34.448,34.891"]
"quanhua92/darknet" ["l"="34.658,33.622"]
"weichengkuo/DeepBox" ["l"="34.432,34.935"]
"HamedMP/ImageFlow" ["l"="34.194,34.855"]
"sthomp/tensorflow_transfer_cifar10" ["l"="34.171,34.799"]
"XiangLi-Shaun/deformableConvolution_3D" ["l"="34.625,35.23"]
"Jia-Research-Lab/SA-AutoAug" ["l"="31.575,35.084"]
"jazzsaxmafia/Weakly_detector" ["l"="28.576,34.949"]
"warmspringwinds/tf-image-segmentation" ["l"="31.557,36.829"]
"sunshineatnoon/Darknet.keras" ["l"="30.906,36.222"]
"Joker316701882/Salience-Object-Detection" ["l"="34.416,34.916"]
"caocuong0306/awesome-object-proposals" ["l"="34.487,34.997"]
"mzramna/easy-google-drive-downloader" ["l"="34.146,36.252"]
"wookayin/dotfiles" ["l"="28.077,33.703"]
"VIPSeg-Dataset/VIPSeg-Dataset" ["l"="31.843,33.424"]
"ymcui/LAMB_Optimizer_TF" ["l"="34.668,36.348"]
"titu1994/keras-LAMB-Optimizer" ["l"="34.649,36.333"]
"clovaai/AdamP" ["l"="44.357,-15.12"]
"dmlc/tensorboard" ["l"="33.083,35.757"]
"twitter/torch-autograd" ["l"="26.939,34.298"]
"facebook/fblualib" ["l"="26.946,34.278"]
"DeepInsight-PCALab/CompactBilinearPooling-Pytorch" ["l"="34.353,36.447"]
"sniklaus/pytorch-extension" ["l"="28.093,35.413"]
"jhjacobsen/pytorch-i-revnet" ["l"="23.166,33.91"]
"edouardoyallon/pyscatwave" ["l"="22.782,33.6"]
"unsky/FPN-caffe" ["l"="34.578,35.085"]
"RocketFlash/CAP_augmentation" ["l"="34.942,35.673"]
"qq995431104/Copy-Paste-for-Semantic-Segmentation" ["l"="34.926,35.686"]
"debidatta/syndata-generation" ["l"="34.865,32.75"]
"lwplw/darknet2caffe" ["l"="34.723,35.059"]
"facebookresearch/bitsandbytes" ["l"="27.629,31.092"]
"adefossez/julius" ["l"="0.225,39.915"]
"pytorch-labs/tensordict" ["l"="25.511,35.705"]
"facebookincubator/flowtorch" ["l"="23.319,33.941"]
"Lezcano/geotorch" ["l"="22.605,33.857"]
"lucidrains/perceiver-pytorch" ["l"="29.62,30.709"]
"tztztztztz/eqlv2" ["l"="33.633,36.643"]
"neuroailab/LocalAggregation-Pytorch" ["l"="34.466,36.251"]
"Separius/SimCLRv2-Pytorch" ["l"="34.692,36.31"]
"markjay4k/Mask-RCNN-series" ["l"="31.807,36.699"]
"pppLang/SKNet" ["l"="31.604,37.139"]
"doccano/awesome-annotation-tools" ["l"="34.895,35.354"]
"lxc86739795/vehicle_reid_by_parsing" ["l"="34.913,35.488"]
"zwl-max/underwater-detection" ["l"="22.028,35.405"]
"zhengye1995/kesci-2021-underwater-optics" ["l"="22.017,35.414"]
"Wakinguup/Underwater_detection" ["l"="22.063,35.396"]
"FlyEgle/SDWNet" ["l"="34.36,36.091"]
"BUPT-PRIV/MAE-priv" ["l"="34.372,36.1"]
"ariG23498/mae-scalable-vision-learners" ["l"="34.353,36.111"]
"Megvii-BaseDetection/LLA" ["l"="34.934,35.612"]
"senecaur/caffe-rta" ["l"="34.684,34.906"]
"shiyemin/ResNet-Generator-for-caffe" ["l"="34.698,34.901"]
"ppplinday/tensorflow-vgg16-train-and-test" ["l"="34.222,34.866"]
"LiMingda92/VGG16_TF" ["l"="34.203,34.816"]
"bes-dev/mean_average_precision" ["l"="-9.503,20.231"]
"SsnL/moco_align_uniform" ["l"="34.546,36.25"]
"mbaradad/learning_with_noise" ["l"="34.566,36.278"]
"facebookresearch/luckmatters" ["l"="34.567,36.31"]
"lab-ml/python_autocomplete" ["l"="34.09,36.227"]
"lab-ml/app" ["l"="34.076,36.252"]
"Sense-GVT/Fast-BEV" ["l"="30.644,44.158"]
"Yibin122/TensorRT-SMOKE" ["l"="34.934,35.652"]
"FrancescoSaverioZuppichini/mirror" ["l"="28.721,34.786"]
"zzsza/Boostcamp-AI-Tech-Product-Serving" ["l"="44.527,-15.104"]
"jazzsaxmafia/show_and_tell.tensorflow" ["l"="31.539,34.48"]
"huyng/tensorflow-vgg" ["l"="34.229,34.911"]
"facebookresearch/omnivore" ["l"="32.404,35.078"]
"yikaiw/TokenFusion" ["l"="30.804,44.819"]
"stanford-futuredata/tensorflow-noscope" ["l"="34.567,34.893"]
"KaleidoZhouYN/Angular-Triplet-Loss" ["l"="35.102,33.462"]
"peace195/sppnet" ["l"="29.034,31.333"]
"yueruchen/sppnet-pytorch" ["l"="28.978,31.369"]
"osh/KerasGAN" ["l"="33.91,32.628"]
"pytorch/hydra-torch" ["l"="34.11,36.011"]
"jacobgil/pytorch-explain-black-box" ["l"="28.787,34.927"]
"cemoody/topicsne" ["l"="23.007,37.615"]
"carpedm20/BEGAN-pytorch" ["l"="33.752,32.56"]
"andreasveit/conditional-similarity-networks" ["l"="34.456,32.248"]
"Hwang64/PSIS" ["l"="34.851,35.379"]
"madoibito80/NetAdapt" ["l"="34.941,35.266"]
"purine/purine2" ["l"="26.875,34.072"]
"BVLC/caffe-tutorial" ["l"="34.424,34.837"]
"BVLC/raptor" ["l"="34.427,34.784"]
"wonheeML/mtl-ssl" ["l"="35.066,35.734"]
"google-research/fixmatch" ["l"="33.862,36.729"]
"FishYuLi/BalancedGroupSoftmax" ["l"="33.664,36.647"]
"YU1ut/MixMatch-pytorch" ["l"="33.846,36.761"]
"ucas-vg/Instance-level-Scale-Match" ["l"="35.008,35.505"]
"ValYouW/tflite-win-c" ["l"="30.644,31.746"]
"githubdev03/RDP" ["l"="34.397,36.123"]
"wenxichen/tensorflow_yolo2" ["l"="34.45,34.985"]
"johnwlambert/YoloTensorFlow229" ["l"="34.471,34.97"]
"locuslab/convmixer-cifar10" ["l"="34.418,36.21"]
"coeusguo/ceit" ["l"="34.862,36.067"]
"PetrochukM/PyTorch-NLP" ["l"="29.967,32.598"]
"outcastofmusic/quick-nlp" ["l"="30.118,32.639"]
"jindongwang/transferlearning-tutorial" ["l"="30.097,35.043"]
"GauravBh1010tt/DeepLearn" ["l"="30.03,32.614"]
"cameronfabbri/Compute-Features" ["l"="33.817,35.881"]
"Waikato/meka" ["l"="25.211,34.033"]
"stared/livelossplot" ["l"="25.645,33.779"]
"orsinium/textdistance" ["l"="28.634,-18.744"]
"maxpumperla/hyperas" ["l"="25.623,33.787"]
"HMS-IDAC/YOLO3D" ["l"="34.736,35.024"]
"shikishima-TasakiLab/Involution-PyTorch" ["l"="34.872,35.863"]
"shuuchen/involution.pytorch" ["l"="34.854,35.858"]
"pdollar/edges" ["l"="30.041,37.069"]
"madhawav/YOLO3-4-Py" ["l"="34.634,35.131"]
"digitalbrain79/pyyolo" ["l"="34.741,35.077"]
"explosion/lightnet" ["l"="34.78,35.036"]
"danielgatis/darknetpy" ["l"="34.727,35.097"]
"radekosmulski/yolo_open_images" ["l"="29.483,36.018"]
"cfotache/pytorch_objectdetecttrack" ["l"="32.259,36.058"]
"yinghdb/EmbedMask" ["l"="34.929,35.444"]
"NaiyuGao/SSAP" ["l"="34.978,35.438"]
"dculibrk/edge_boxes_with_python" ["l"="34.41,34.867"]
"vasgaowei/pytorch_MELM" ["l"="30.683,37.517"]
"lampsonSong/tinySSD" ["l"="34.727,35.041"]
"Kaixhin/FGMachine" ["l"="34.022,36.014"]
"kavehhassani/mvgrl" ["l"="22.013,38.602"]
"google-research/fnc" ["l"="34.621,36.21"]
"hkzhang95/Awesome-CV-bibfiles" ["l"="34.97,35.575"]
"lucmos/nn-template" ["l"="25.731,36.863"]
"lkhphuc/lightning-hydra-template" ["l"="34.166,36.059"]
"NobuoTsukamoto/tflite-cv-example" ["l"="34.067,35.678"]
"YangtaoWANG95/TokenCut_video" ["l"="34.713,36.223"]
"XiSHEN0220/WatermarkReco" ["l"="32.427,42.208"]
"cmu-enyac/supmae" ["l"="34.748,36.116"]
"YU-Zhiyang/opencv_transforms_torchvision" ["l"="34.026,35.955"]
"DanaHan/Yolov5-in-Deepstream-5.0" ["l"="30.024,38.07"]
"NVIDIA-AI-IOT/deepstream-occupancy-analytics" ["l"="29.981,38.069"]
"NVIDIA-AI-IOT/deepstream_tlt_apps" ["l"="29.982,38.05"]
"thatbrguy/Deep-Stream-ONNX" ["l"="29.998,38.048"]
"NVIDIA-AI-IOT/deepstream_pose_estimation" ["l"="29.955,38.038"]
"NVIDIA-AI-IOT/deepstream_lpr_app" ["l"="29.99,38.063"]
"nabsabraham/focal-tversky-unet" ["l"="29.305,36.523"]
"Tony607/Focal_Loss_Keras" ["l"="34.724,34.746"]
"Epiphqny/Yolact_fcos" ["l"="35.004,35.443"]
"NanoNets/TF-OD-Pi-Test" ["l"="34.016,34.913"]
"NanoNets/IndianRoadsObjectDetectionDataset" ["l"="33.996,34.917"]
"NanoNets/object-detection-sample-python" ["l"="33.996,34.899"]
"1adrianb/pytorch-estimate-flops" ["l"="34.377,35.737"]
"chrise96/image-to-coco-json-converter" ["l"="34.823,35.368"]
"romesco/hydra-lightning" ["l"="34.07,36.045"]
"vlfom/RNCDL" ["l"="34.68,36.143"]
"visinf/dense-ulearn-vos" ["l"="31.922,33.257"]
"zzzxxxttt/simple_detectron2_EfficientDet" ["l"="34.894,35.599"]
"yxgeee/SpCL" ["l"="33.027,36.911"]
"iCGY96/awesome_OpenSetRecognition_list" ["l"="23.474,34.962"]
"xi11xi19/CenterNet2TorchScript" ["l"="34.815,35.541"]
"eweill-nv/dcnv2_trt" ["l"="34.828,35.541"]
"jpmml/sklearn2pmml" ["l"="10.788,24.133"]
"junyuseu/ResNet-on-Cifar10" ["l"="34.719,34.963"]
"twtygqyy/resnet-cifar10" ["l"="34.702,34.957"]
"XLearning-SCU/2022-TPAMI-DCP" ["l"="34.351,36.315"]
"XLearning-SCU/2021-CVPR-MvCLN" ["l"="34.353,36.331"]
"XLearning-SCU/2022-TPAMI-SURE" ["l"="34.367,36.319"]
"SHI-Labs/Convolutional-MLPs" ["l"="34.882,36.052"]
"IDEA-Research/Stable-DINO" ["l"="31.776,35.04"]
"zengwang430521/TCFormer" ["l"="34.886,36.141"]
"switchablenorms/Sparse_SwitchNorm" ["l"="35.004,35.253"]
"NobuoTsukamoto/tensorrt-examples" ["l"="34.549,35.787"]
"voldemortX/pytorch-auto-drive" ["l"="31.96,44.065"]
"hpc203/YOLOP-opencv-dnn" ["l"="32.031,44.01"]
"smallcorgi/3D-Deepbox" ["l"="30.421,44.252"]
"huismiling/wenet_trt8" ["l"="34.747,35.66"]
"lain-m21/pytorch-to-tflite-example" ["l"="34.21,35.296"]
"PINTO0309/Bazel_bin" ["l"="33.983,35.105"]
"QuantuMobileSoftware/mobile_detector" ["l"="33.965,35.09"]
"hujiecpp/YOSO" ["l"="35.028,35.823"]
"ChenhongyiYang/GPViT" ["l"="35.088,35.839"]
"fateshelled/OnnxGraphQt" ["l"="34.018,35.713"]
"digantamisra98/Mila" ["l"="34.458,35.879"]
"Sense-X/MixMIM" ["l"="34.808,36.145"]
"OML-Team/open-metric-learning" ["l"="-9.389,20.16"]
"d-li14/dot-product-attention" ["l"="34.624,36.022"]
"adaptivetokensampling/ATS" ["l"="34.859,36.127"]
"taoroalin/WNet" ["l"="34.509,36.329"]
"zwenaing/unsupervised-image-segmentation" ["l"="34.494,36.329"]
"lucidrains/Adan-pytorch" ["l"="31.848,35.063"]
"lessw2020/Ranger22" ["l"="34.427,35.875"]
"beniz/deepdetect" ["l"="34.43,35.017"]
"NervanaSystems/neon" ["l"="27.093,34.021"]
"yahoo/CaffeOnSpark" ["l"="11.128,24.05"]
"zer0n/deepframeworks" ["l"="27.115,34.137"]
"ericlin79119/IC-STN" ["l"="34.525,35.026"]
"archinetai/audio-diffusion-pytorch" ["l"="0.145,39.962"]
"archinetai/audio-data-pytorch" ["l"="-0.014,39.895"]
"csteinmetz1/auraloss" ["l"="0.17,39.929"]
"crowsonkb/k-diffusion" ["l"="34.459,29.027"]
"xhzdeng/stela" ["l"="29.457,33.967"]
"Yuliang-Liu/Box_Discretization_Network" ["l"="29.626,34.025"]
"StevenGrove/TreeFilter-Torch" ["l"="34.947,35.452"]
"yaohungt/Barlow-Twins-HSIC" ["l"="34.349,36.199"]
"IgorSusmelj/simsiam-cifar10" ["l"="34.353,36.185"]
"christopher5106/last_caffe_with_stn" ["l"="34.681,34.883"]
"XiaoxiaoGuo/caffe-stn" ["l"="34.693,34.872"]
"ChengpengChen/RepGhost" ["l"="34.949,35.905"]
"qassemoquab/stnbhwd" ["l"="26.816,34.354"]
"hikvision-research/DomainGeneralization" ["l"="35.124,35.768"]
"BIGKnight/deformable_conv2d_v2_tensorflow" ["l"="34.622,35.098"]
"nitnelave/pycaffe_tutorial" ["l"="34.769,34.845"]
"run-ai/docs" ["l"="34.096,36.126"]
"run-ai/rntop" ["l"="34.098,36.14"]
"run-ai/jupyterlab_genv" ["l"="34.114,36.114"]
"run-ai/vscode-genv" ["l"="34.117,36.126"]
"MCG-NJU/RTD-Action" ["l"="32.311,34.934"]
"yjxiong/dense_flow" ["l"="32.534,34.844"]
"SDOlivia/FineGym" ["l"="34.994,35.851"]
"amazon-research/long-short-term-transformer" ["l"="32.362,35.175"]
"MCG-NJU/TDN" ["l"="32.451,34.979"]
"yuxng/tensorflow" ["l"="34.38,34.929"]
"dshahrokhian/YOLO_tensorflow" ["l"="34.456,34.924"]
"TropComplique/light-head-rcnn" ["l"="34.843,35.095"]
"HiKapok/PSROIAlign" ["l"="34.82,35.097"]
"hunto/DyRep" ["l"="31.186,35.492"]
"byangderek/CRAFT" ["l"="34.502,34.944"]
"revilokeb/inception_resnetv2_caffe" ["l"="34.785,34.867"]
"lim0606/torch-inception-resnet-v2" ["l"="34.81,34.845"]
"chenlamei/MobileVit_TensorRT" ["l"="34.772,35.671"]
"shicai/Weighted_Softmax_Loss" ["l"="34.749,34.939"]
"silver-rush/Weighted_Softmax_Loss" ["l"="34.781,34.915"]
"n3011/Inception_v3_GoogLeNet" ["l"="34.756,34.89"]
"pertusa/InceptionBN-21K-for-Caffe" ["l"="33.142,35.656"]
"SwinTransformer/Simple-21K-Detection" ["l"="34.737,36.144"]
"alfonsolink/tensorflow_user_ops" ["l"="34.519,34.945"]
"PaddlePaddle/paddle-ce-latest-kpis" ["l"="33.953,35.967"]
"PaddlePaddle/continuous_evaluation" ["l"="33.967,35.964"]
"PaddlePaddle/PaddleTest" ["l"="33.945,35.979"]
"NobuoTsukamoto/benchmarks" ["l"="34.559,35.802"]
"commonsmachinery/blockhash" ["l"="33.793,35.582"]
"kuangliu/pytorch-yolov2" ["l"="34.724,35.153"]
"lab-ml/remote" ["l"="34.058,36.28"]
"tensorboy/Pytorch_Mask_RCNN" ["l"="34.688,35.163"]
"kobiso/Image-Rotation-and-Cropping-tensorflow" ["l"="34.379,34.853"]
"PeizeSun/ApplicationMaterial" ["l"="35.001,35.582"]
"dcheng-utoronto/darnet" ["l"="34.981,35.288"]
"ahatamiz/dals" ["l"="35.025,35.276"]
"shirgur/ACDRNet" ["l"="29.502,36.58"]
"fidler-lab/delse" ["l"="29.742,36.706"]
"kobiso/Super-convergence-tensorflow-slim" ["l"="34.377,34.823"]
"open-mmlab/CLUE" ["l"="34.97,35.848"]
"open-mmlab/polynet" ["l"="34.941,35.838"]
"opconty/keras_std_plus_plus" ["l"="34.887,34.986"]
"storrrrrrrrm/tensorrt_smoke" ["l"="34.971,35.654"]
}