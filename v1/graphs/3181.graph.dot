digraph G {
"Udayraj123/OMRChecker" -> "iansan5653/open-mcr"
"Udayraj123/OMRChecker" -> "rbaron/omr"
"Udayraj123/OMRChecker" -> "Udayraj123/AndroidOMRHelper"
"Udayraj123/OMRChecker" -> "MohawkMEDIC/omrmarkengine"
"Udayraj123/OMRChecker" -> "jansenfelipe/omr"
"Udayraj123/OMRChecker" -> "murtazahassan/Optical-Mark-Recognition-OPENCV"
"Udayraj123/OMRChecker" -> "mythrex/OMR-Scanner"
"Udayraj123/OMRChecker" -> "IITGuwahati-AI/Learning-Content"
"Udayraj123/OMRChecker" -> "letssolvetogether/OMRChecker"
"jasmcaus/opencv-course" -> "jasmcaus/caer"
"jasmcaus/opencv-course" -> "jasmcaus/adorad"
"jasmcaus/opencv-course" -> "jasmcaus/ai-math-roadmap"
"jasmcaus/opencv-course" -> "jasmcaus/dotfiles"
"jasmcaus/opencv-course" -> "murtazahassan/Learn-OpenCV-in-3-hours"
"jasmcaus/opencv-course" -> "PacktPublishing/Learning-OpenCV-4-Computer-Vision-with-Python-Third-Edition" ["e"=1]
"jasmcaus/opencv-course" -> "rchavezj/OpenCV_Projects"
"jasmcaus/opencv-course" -> "CodecWang/opencv-python-tutorial" ["e"=1]
"jasmcaus/opencv-course" -> "nicknochnack/TFODCourse" ["e"=1]
"cvzone/cvzone" -> "Kazuhito00/hand-gesture-recognition-using-mediapipe"
"cvzone/cvzone" -> "Kazuhito00/mediapipe-python-sample"
"cvzone/cvzone" -> "Fafa-DL/Opencv-project" ["e"=1]
"cvzone/cvzone" -> "murtazahassan/OpenCV-Python-Tutorials-and-Projects"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/Learn-OpenCV-in-3-hours"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/Face-Recognition"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "rchavezj/OpenCV_Projects"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/Optical-Mark-Recognition-OPENCV"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/Tello-Object-Tracking"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/Learn-OpenCV-cpp-in-4-Hours"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/Document-Scanner"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/Drone-Face-Tracking"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/Learn-Python"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/OpenCV-Sudoku-Solver"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/Raspberry-Pi-Ultimate-Robot"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/Real-Time-Object-Measurement"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/Angle-Finder"
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" -> "murtazahassan/Learn-Raspberry-Pi"
"Kazuhito00/Image-Processing-Node-Editor" -> "fateshelled/OnnxGraphQt" ["e"=1]
"Kazuhito00/Image-Processing-Node-Editor" -> "devemin/Geospatial2ros"
"Kazuhito00/Image-Processing-Node-Editor" -> "motojinc25/WeDX"
"Kazuhito00/Image-Processing-Node-Editor" -> "Kazuhito00/MOT-Tracking-by-Detection-Pipeline"
"Kazuhito00/Image-Processing-Node-Editor" -> "ibaiGorordo/ONNX-CREStereo-Depth-Estimation" ["e"=1]
"Kazuhito00/Image-Processing-Node-Editor" -> "Kazuhito00/omnidirectional-viewer-sample-using-opencv"
"Kazuhito00/Image-Processing-Node-Editor" -> "xiong-jie-y/ml-examples"
"Kazuhito00/Image-Processing-Node-Editor" -> "Kazuhito00/Skin-Clothes-Hair-Segmentation-using-SMP" ["e"=1]
"dji-sdk/Tello-Python" -> "damiafuentes/DJITelloPy"
"dji-sdk/Tello-Python" -> "hanyazou/TelloPy"
"dji-sdk/Tello-Python" -> "TelloSDK/Multi-Tello-Formation"
"dji-sdk/Tello-Python" -> "microlinux/tello"
"dji-sdk/Tello-Python" -> "geaxgx/tello-openpose"
"dji-sdk/Tello-Python" -> "Jabrils/TelloTV"
"dji-sdk/Tello-Python" -> "Ubotica/telloCV"
"dji-sdk/Tello-Python" -> "dbaldwin/DroneBlocks-Tello-Python"
"dji-sdk/Tello-Python" -> "Virodroid/easyTello"
"dji-sdk/Tello-Python" -> "clydemcqueen/tello_ros"
"dji-sdk/Tello-Python" -> "johnwalicki/Node-RED-Tello-Control"
"dji-sdk/Tello-Python" -> "dbaldwin/Tello-Python"
"dji-sdk/Tello-Python" -> "Kragrathea/TelloLib"
"dji-sdk/Tello-Python" -> "tau-adl/Tello_ROS_ORBSLAM"
"dji-sdk/Tello-Python" -> "anqixu/tello_driver"
"murtazahassan/Real-Time-Object-Measurement" -> "murtazahassan/Raspberry-Pi-Ultimate-Robot"
"murtazahassan/Real-Time-Object-Measurement" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/Real-Time-Object-Measurement" -> "murtazahassan/Robot-Arm-Gesture-Control"
"murtazahassan/Real-Time-Object-Measurement" -> "murtazahassan/Drone-Face-Tracking"
"murtazahassan/Real-Time-Object-Measurement" -> "murtazahassan/TeslaCyberTruck-Arduino"
"damiafuentes/DJITelloPy" -> "dji-sdk/Tello-Python"
"damiafuentes/DJITelloPy" -> "hanyazou/TelloPy"
"damiafuentes/DJITelloPy" -> "Jabrils/TelloTV"
"damiafuentes/DJITelloPy" -> "Ubotica/telloCV"
"damiafuentes/DJITelloPy" -> "geaxgx/tello-openpose"
"damiafuentes/DJITelloPy" -> "microlinux/tello"
"damiafuentes/DJITelloPy" -> "TelloSDK/Multi-Tello-Formation"
"damiafuentes/DJITelloPy" -> "dbaldwin/DroneBlocks-Tello-Python"
"damiafuentes/DJITelloPy" -> "kinivi/tello-gesture-control"
"damiafuentes/DJITelloPy" -> "clydemcqueen/tello_ros"
"damiafuentes/DJITelloPy" -> "murtazahassan/Tello-Object-Tracking"
"damiafuentes/DJITelloPy" -> "anqixu/tello_driver"
"damiafuentes/DJITelloPy" -> "dji-sdk/RoboMaster-SDK"
"damiafuentes/DJITelloPy" -> "Kragrathea/TelloLib"
"damiafuentes/DJITelloPy" -> "Virodroid/easyTello"
"jasmcaus/ai-math-roadmap" -> "jasmcaus/adorad"
"jasmcaus/ai-math-roadmap" -> "jasmcaus/dotfiles"
"jasmcaus/ai-math-roadmap" -> "jasmcaus/caer"
"jasmcaus/ai-math-roadmap" -> "jasmcaus/opencv-course"
"kinivi/hand-gesture-recognition-mediapipe" -> "Kazuhito00/hand-gesture-recognition-using-mediapipe"
"kinivi/hand-gesture-recognition-mediapipe" -> "gabguerin/Sign-Language-Recognition--MediaPipe-DTW"
"kinivi/hand-gesture-recognition-mediapipe" -> "kinivi/tello-gesture-control"
"Kazuhito00/mediapipe-python-sample" -> "PINTO0309/mediapipe-bin"
"Kazuhito00/mediapipe-python-sample" -> "Kazuhito00/hand-gesture-recognition-using-mediapipe"
"Kazuhito00/mediapipe-python-sample" -> "Kazuhito00/Tokyo2020-Pictogram-using-MediaPipe"
"TelloSDK/Multi-Tello-Formation" -> "dji-sdk/Tello-Python"
"TelloSDK/Multi-Tello-Formation" -> "hanyazou/TelloPy"
"TelloSDK/Multi-Tello-Formation" -> "dbaldwin/DroneBlocks-TelloEDU-Python"
"TelloSDK/Multi-Tello-Formation" -> "comoc/TelloForUnity"
"TelloSDK/Multi-Tello-Formation" -> "GalBrandwine/HalloPy"
"RoboMasterS1Challenge/robomaster_s1_can_hack" -> "RoboMasterS1Challenge/robomaster_s1_ros_reference_design"
"RoboMasterS1Challenge/robomaster_s1_can_hack" -> "JohnieBraaf/Robomaster-Micropython"
"nanmu42/robomasterpy" -> "nanmu42/robo-playground"
"anqixu/tello_driver" -> "clydemcqueen/tello_ros"
"anqixu/tello_driver" -> "clydemcqueen/flock2"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "murtazahassan/OpenCV-Python-Tutorials-and-Projects"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "murtazahassan/Learn-OpenCV-cpp-in-4-Hours"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "murtazahassan/Face-Recognition"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "murtazahassan/Optical-Mark-Recognition-OPENCV"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "murtazahassan/Document-Scanner"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "murtazahassan/Learn-Python"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "Fafa-DL/Opencv-project" ["e"=1]
"murtazahassan/Learn-OpenCV-in-3-hours" -> "murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "murtazahassan/Tello-Object-Tracking"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "rchavezj/OpenCV_Projects"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "murtazahassan/Drone-Face-Tracking"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "jasmcaus/opencv-course"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "murtazahassan/Real-Time-Object-Measurement"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/Learn-OpenCV-in-3-hours" -> "murtazahassan/Raspberry-Pi-Ultimate-Robot"
"Jabrils/TelloTV" -> "damiafuentes/DJITelloPy"
"Jabrils/TelloTV" -> "Ubotica/telloCV"
"Jabrils/TelloTV" -> "geaxgx/tello-openpose"
"Jabrils/TelloTV" -> "dji-sdk/Tello-Python"
"Ubotica/telloCV" -> "GalBrandwine/HalloPy"
"Ubotica/telloCV" -> "hanyazou/TelloPy"
"Ubotica/telloCV" -> "geaxgx/tello-openpose"
"gabguerin/Sign-Language-Recognition--MediaPipe-DTW" -> "arpita739/Real-time-Vernacular-Sign-Language-Recognition-using-MediaPipe-and-Machine-Learning"
"hanyazou/TelloPy" -> "dji-sdk/Tello-Python"
"hanyazou/TelloPy" -> "Ubotica/telloCV"
"hanyazou/TelloPy" -> "damiafuentes/DJITelloPy"
"hanyazou/TelloPy" -> "geaxgx/tello-openpose"
"hanyazou/TelloPy" -> "microlinux/tello"
"hanyazou/TelloPy" -> "GalBrandwine/HalloPy"
"hanyazou/TelloPy" -> "Kragrathea/TelloLib"
"hanyazou/TelloPy" -> "TelloSDK/Multi-Tello-Formation"
"hanyazou/TelloPy" -> "clydemcqueen/tello_ros"
"hanyazou/TelloPy" -> "anqixu/tello_driver"
"hanyazou/TelloPy" -> "dbaldwin/DroneBlocks-Tello-Python"
"hanyazou/TelloPy" -> "SMerrony/tello"
"hanyazou/TelloPy" -> "tau-adl/Tello_ROS_ORBSLAM"
"hanyazou/TelloPy" -> "MAVProxyUser/RyzeTelloFirmware"
"hanyazou/TelloPy" -> "Jabrils/TelloTV"
"murtazahassan/Optical-Mark-Recognition-OPENCV" -> "murtazahassan/Document-Scanner"
"murtazahassan/Optical-Mark-Recognition-OPENCV" -> "murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi"
"murtazahassan/Optical-Mark-Recognition-OPENCV" -> "murtazahassan/darknet"
"murtazahassan/Optical-Mark-Recognition-OPENCV" -> "murtazahassan/Angle-Finder"
"murtazahassan/Optical-Mark-Recognition-OPENCV" -> "murtazahassan/Face-Recognition"
"murtazahassan/Optical-Mark-Recognition-OPENCV" -> "murtazahassan/Learn-Python"
"murtazahassan/Optical-Mark-Recognition-OPENCV" -> "murtazahassan/OpenCV-Sudoku-Solver"
"murtazahassan/Optical-Mark-Recognition-OPENCV" -> "murtazahassan/Raspberry-Pi-Ultimate-Robot"
"murtazahassan/Document-Scanner" -> "murtazahassan/Angle-Finder"
"murtazahassan/Document-Scanner" -> "murtazahassan/Raspberry-Pi-Ultimate-Robot"
"murtazahassan/Document-Scanner" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/Document-Scanner" -> "murtazahassan/Optical-Mark-Recognition-OPENCV"
"murtazahassan/Document-Scanner" -> "murtazahassan/Learn-Python"
"murtazahassan/Document-Scanner" -> "murtazahassan/Face-Recognition"
"murtazahassan/Document-Scanner" -> "murtazahassan/Obstacle-Avoding-Robot"
"murtazahassan/Document-Scanner" -> "murtazahassan/Drone-Face-Tracking"
"murtazahassan/Document-Scanner" -> "murtazahassan/Object-Following-Robot"
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" -> "murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi"
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" -> "murtazahassan/darknet"
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" -> "murtazahassan/Face-Recognition"
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" -> "murtazahassan/OpenCV-Sudoku-Solver"
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" -> "murtazahassan/Drone-Face-Tracking"
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" -> "murtazahassan/Learn-Python"
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" -> "murtazahassan/Raspberry-Pi-Ultimate-Robot"
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" -> "murtazahassan/Learn-OpenCV-in-3-hours"
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" -> "murtazahassan/Document-Scanner"
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" -> "murtazahassan/Learn-Raspberry-Pi"
"jasmcaus/caer" -> "jasmcaus/opencv-course"
"jasmcaus/caer" -> "jasmcaus/adorad"
"jasmcaus/caer" -> "jasmcaus/ai-math-roadmap"
"jasmcaus/caer" -> "jasmcaus/dotfiles"
"jasmcaus/caer" -> "jasmcaus/canaro"
"jasmcaus/caer" -> "jasmcaus/opencv-series"
"Kazuhito00/Tokyo2020-Pictogram-using-MediaPipe" -> "Kazuhito00/mediapipe-python-sample"
"kinivi/tello-gesture-control" -> "dronefreak/dji-tello-object-detection-segmentation"
"kinivi/tello-gesture-control" -> "Kazuhito00/hand-gesture-recognition-using-mediapipe"
"kinivi/tello-gesture-control" -> "kinivi/hand-gesture-recognition-mediapipe"
"dji-sdk/RoboMaster-SDK" -> "nanmu42/robomasterpy"
"dji-sdk/RoboMaster-SDK" -> "RoboMasterS1Challenge/robomaster_s1_can_hack"
"dji-sdk/RoboMaster-SDK" -> "brunoga/robomaster"
"clydemcqueen/tello_ros" -> "clydemcqueen/flock2"
"clydemcqueen/tello_ros" -> "clydemcqueen/flock"
"clydemcqueen/tello_ros" -> "anqixu/tello_driver"
"clydemcqueen/tello_ros" -> "tau-adl/Tello_ROS_ORBSLAM"
"clydemcqueen/tello_ros" -> "appie-17/tello_driver"
"murtazahassan/Tello-Object-Tracking" -> "murtazahassan/Drone-Face-Tracking"
"murtazahassan/Tello-Object-Tracking" -> "murtazahassan/Raspberry-Pi-Ultimate-Robot"
"murtazahassan/Tello-Object-Tracking" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/Tello-Object-Tracking" -> "murtazahassan/Angle-Finder"
"murtazahassan/Tello-Object-Tracking" -> "murtazahassan/Learn-Python"
"murtazahassan/Tello-Object-Tracking" -> "murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi"
"rchavezj/OpenCV_Projects" -> "murtazahassan/OpenCV-Python-Tutorials-and-Projects"
"rchavezj/OpenCV_Projects" -> "ttusharsurve567/OpenCV-Mini-Projects"
"murtazahassan/OpenCV-Sudoku-Solver" -> "murtazahassan/darknet"
"geaxgx/tello-openpose" -> "Ubotica/telloCV"
"geaxgx/tello-openpose" -> "hanyazou/TelloPy"
"geaxgx/tello-openpose" -> "tau-adl/Tello_ROS_ORBSLAM"
"geaxgx/tello-openpose" -> "GalBrandwine/HalloPy"
"geaxgx/tello-openpose" -> "dji-sdk/Tello-Python"
"geaxgx/tello-openpose" -> "Jabrils/TelloTV"
"geaxgx/tello-openpose" -> "damiafuentes/DJITelloPy"
"geaxgx/tello-openpose" -> "murtazahassan/Tello-Object-Tracking"
"geaxgx/tello-openpose" -> "Kragrathea/TelloLib"
"tau-adl/Tello_ROS_ORBSLAM" -> "clydemcqueen/tello_ros"
"tau-adl/Tello_ROS_ORBSLAM" -> "clydemcqueen/flock"
"tau-adl/Tello_ROS_ORBSLAM" -> "anqixu/tello_driver"
"tau-adl/Tello_ROS_ORBSLAM" -> "appie-17/tello_driver"
"tau-adl/Tello_ROS_ORBSLAM" -> "geaxgx/tello-openpose"
"jiuqiant/mediapipe_python_aarch64" -> "PINTO0309/mediapipe-bin"
"dbaldwin/DroneBlocks-Tello-Python" -> "dbaldwin/DroneBlocks-Tello-Camera-With-Python-OpenCV"
"dbaldwin/DroneBlocks-Tello-Python" -> "Virodroid/easyTello"
"microlinux/tello" -> "hanyazou/TelloPy"
"microlinux/tello" -> "Kragrathea/TelloLib"
"microlinux/tello" -> "Kragrathea/TelloPC"
"microlinux/tello" -> "SMerrony/tello"
"microlinux/tello" -> "dji-sdk/Tello-Python"
"microlinux/tello" -> "mcecchi/KivyTello"
"jansenfelipe/omr" -> "henricavalcante/openomr"
"jansenfelipe/omr" -> "tsauvine/omr"
"jansenfelipe/omr" -> "MohawkMEDIC/omrmarkengine"
"rbaron/omr" -> "iansan5653/open-mcr"
"rbaron/omr" -> "Udayraj123/OMRChecker"
"rbaron/omr" -> "MohawkMEDIC/omrmarkengine"
"rbaron/omr" -> "jansenfelipe/omr"
"rbaron/omr" -> "EuracBiomedicalResearch/RescueOMR"
"rbaron/omr" -> "tsauvine/omr"
"rbaron/omr" -> "GregoryCMiller/omr"
"IITGuwahati-AI/Learning-Content" -> "mukul54/inter-iit-bridgei2i"
"SMerrony/tello" -> "SMerrony/telloterm"
"murtazahassan/Face-Recognition" -> "murtazahassan/Drone-Face-Tracking"
"murtazahassan/Face-Recognition" -> "murtazahassan/Angle-Finder"
"murtazahassan/Face-Recognition" -> "murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi"
"murtazahassan/Face-Recognition" -> "murtazahassan/Learn-Python"
"murtazahassan/Face-Recognition" -> "murtazahassan/Raspberry-Pi-Ultimate-Robot"
"murtazahassan/Face-Recognition" -> "murtazahassan/Document-Scanner"
"murtazahassan/Face-Recognition" -> "murtazahassan/Tello-Object-Tracking"
"murtazahassan/Face-Recognition" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/Face-Recognition" -> "murtazahassan/Digits-Classification"
"murtazahassan/Face-Recognition" -> "murtazahassan/TeslaCyberTruck-Arduino"
"murtazahassan/Face-Recognition" -> "murtazahassan/Robot-Arm-Gesture-Control"
"murtazahassan/Face-Recognition" -> "murtazahassan/Optical-Mark-Recognition-OPENCV"
"murtazahassan/Face-Recognition" -> "murtazahassan/darknet"
"murtazahassan/Face-Recognition" -> "murtazahassan/Real-Time-Object-Measurement"
"murtazahassan/Face-Recognition" -> "murtazahassan/OpenCV-Sudoku-Solver"
"carter-james89/UnityControllerForTello" -> "comoc/TelloForUnity"
"GalBrandwine/HalloPy" -> "Ubotica/telloCV"
"MohawkMEDIC/omrmarkengine" -> "iansan5653/open-mcr"
"comoc/TelloForUnity" -> "carter-james89/UnityControllerForTello"
"SMerrony/telloterm" -> "SMerrony/tello"
"Kazuhito00/hand-gesture-recognition-using-mediapipe" -> "kinivi/hand-gesture-recognition-mediapipe"
"Kazuhito00/hand-gesture-recognition-using-mediapipe" -> "Kazuhito00/mediapipe-python-sample"
"Kazuhito00/hand-gesture-recognition-using-mediapipe" -> "kinivi/tello-gesture-control"
"Kazuhito00/hand-gesture-recognition-using-mediapipe" -> "mgyong/awesome-mediapipe" ["e"=1]
"Kazuhito00/hand-gesture-recognition-using-mediapipe" -> "geaxgx/depthai_hand_tracker" ["e"=1]
"Kazuhito00/hand-gesture-recognition-using-mediapipe" -> "Kazuhito00/Image-Processing-Node-Editor"
"Kazuhito00/hand-gesture-recognition-using-mediapipe" -> "hukenovs/hagrid" ["e"=1]
"iansan5653/open-mcr" -> "MohawkMEDIC/omrmarkengine"
"PINTO0309/mediapipe-bin" -> "jiuqiant/mediapipe_python_aarch64"
"PINTO0309/mediapipe-bin" -> "Kazuhito00/mediapipe-python-sample"
"Kragrathea/TelloLib" -> "comoc/TelloForUnity"
"Kragrathea/TelloLib" -> "SMerrony/tello"
"Kragrathea/TelloLib" -> "microlinux/tello"
"Kragrathea/TelloLib" -> "8bitbytes/TelloSdkCoreNet"
"Kragrathea/TelloLib" -> "Kragrathea/TelloPC"
"Kragrathea/TelloLib" -> "hanyazou/TelloPy"
"Kragrathea/TelloLib" -> "carter-james89/UnityControllerForTello"
"Kragrathea/TelloLib" -> "socketbind/drone-control"
"Kragrathea/TelloLib" -> "marklauter/TelloAPI-SDK-2.0"
"murtazahassan/Drone-Face-Tracking" -> "murtazahassan/Raspberry-Pi-Ultimate-Robot"
"murtazahassan/Drone-Face-Tracking" -> "murtazahassan/TeslaCyberTruck-Arduino"
"murtazahassan/Drone-Face-Tracking" -> "murtazahassan/Angle-Finder"
"murtazahassan/Drone-Face-Tracking" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi" -> "murtazahassan/Raspberry-Pi-Ultimate-Robot"
"murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi" -> "murtazahassan/Drone-Face-Tracking"
"murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi" -> "murtazahassan/OpenCV-Sudoku-Solver"
"murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi" -> "murtazahassan/darknet"
"murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi" -> "murtazahassan/Learn-Python"
"tsauvine/omr" -> "ferrufino/OpticalMarkRecognition"
"clydemcqueen/flock2" -> "clydemcqueen/tello_ros"
"murtazahassan/Raspberry-Pi-Ultimate-Robot" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/Learn-Python" -> "murtazahassan/Learn-Raspberry-Pi"
"dronefreak/dji-tello-object-detection-segmentation" -> "dronefreak/dji-tello-collision-avoidance-pydnet"
"dronefreak/dji-tello-object-detection-segmentation" -> "dronefreak/dji-tello-target-tracking"
"nanmu42/robo-playground" -> "nanmu42/robomasterpy"
"murtazahassan/Robot-Arm-Gesture-Control" -> "murtazahassan/Learn-Raspberry-Pi"
"murtazahassan/Robot-Arm-Gesture-Control" -> "murtazahassan/TeslaCyberTruck-Arduino"
"murtazahassan/Robot-Arm-Gesture-Control" -> "murtazahassan/Obstacle-Avoding-Robot"
"jasmcaus/adorad" -> "jasmcaus/dotfiles"
"Udayraj123/OMRChecker" ["l"="36.032,35.831"]
"iansan5653/open-mcr" ["l"="36.057,35.82"]
"rbaron/omr" ["l"="36.057,35.801"]
"Udayraj123/AndroidOMRHelper" ["l"="36.054,35.844"]
"MohawkMEDIC/omrmarkengine" ["l"="36.04,35.811"]
"jansenfelipe/omr" ["l"="36.032,35.792"]
"murtazahassan/Optical-Mark-Recognition-OPENCV" ["l"="36.021,35.926"]
"mythrex/OMR-Scanner" ["l"="36.014,35.848"]
"IITGuwahati-AI/Learning-Content" ["l"="35.989,35.81"]
"letssolvetogether/OMRChecker" ["l"="36.005,35.83"]
"jasmcaus/opencv-course" ["l"="36.12,35.958"]
"jasmcaus/caer" ["l"="36.168,35.949"]
"jasmcaus/adorad" ["l"="36.145,35.945"]
"jasmcaus/ai-math-roadmap" ["l"="36.153,35.967"]
"jasmcaus/dotfiles" ["l"="36.145,35.955"]
"murtazahassan/Learn-OpenCV-in-3-hours" ["l"="36.054,35.957"]
"PacktPublishing/Learning-OpenCV-4-Computer-Vision-with-Python-Third-Edition" ["l"="30.119,36.516"]
"rchavezj/OpenCV_Projects" ["l"="36.077,35.98"]
"CodecWang/opencv-python-tutorial" ["l"="30.231,36.716"]
"nicknochnack/TFODCourse" ["l"="31.083,32.503"]
"cvzone/cvzone" ["l"="36.038,36.052"]
"Kazuhito00/hand-gesture-recognition-using-mediapipe" ["l"="36.014,36.1"]
"Kazuhito00/mediapipe-python-sample" ["l"="36.054,36.095"]
"Fafa-DL/Opencv-project" ["l"="24.628,31.017"]
"murtazahassan/OpenCV-Python-Tutorials-and-Projects" ["l"="36.032,35.971"]
"murtazahassan/Face-Recognition" ["l"="36.02,35.939"]
"murtazahassan/Tello-Object-Tracking" ["l"="35.993,35.97"]
"murtazahassan/Learn-OpenCV-cpp-in-4-Hours" ["l"="36.017,35.949"]
"murtazahassan/Document-Scanner" ["l"="36.036,35.938"]
"murtazahassan/Drone-Face-Tracking" ["l"="36.029,35.956"]
"murtazahassan/Neural-Networks-Self-Driving-Car-Raspberry-Pi" ["l"="36.005,35.952"]
"murtazahassan/Learn-Python" ["l"="36.02,35.958"]
"murtazahassan/OpenCV-Sudoku-Solver" ["l"="35.997,35.941"]
"murtazahassan/Raspberry-Pi-Ultimate-Robot" ["l"="36.028,35.947"]
"murtazahassan/Real-Time-Object-Measurement" ["l"="36.052,35.941"]
"murtazahassan/Angle-Finder" ["l"="36.01,35.958"]
"murtazahassan/Learn-Raspberry-Pi" ["l"="36.037,35.951"]
"Kazuhito00/Image-Processing-Node-Editor" ["l"="36.036,36.156"]
"fateshelled/OnnxGraphQt" ["l"="34.018,35.713"]
"devemin/Geospatial2ros" ["l"="36.028,36.178"]
"motojinc25/WeDX" ["l"="36.064,36.164"]
"Kazuhito00/MOT-Tracking-by-Detection-Pipeline" ["l"="36.046,36.183"]
"ibaiGorordo/ONNX-CREStereo-Depth-Estimation" ["l"="31.946,43.113"]
"Kazuhito00/omnidirectional-viewer-sample-using-opencv" ["l"="36.016,36.168"]
"xiong-jie-y/ml-examples" ["l"="36.049,36.17"]
"Kazuhito00/Skin-Clothes-Hair-Segmentation-using-SMP" ["l"="34.979,33.147"]
"dji-sdk/Tello-Python" ["l"="35.854,36.017"]
"damiafuentes/DJITelloPy" ["l"="35.891,36.022"]
"hanyazou/TelloPy" ["l"="35.863,36"]
"TelloSDK/Multi-Tello-Formation" ["l"="35.835,35.999"]
"microlinux/tello" ["l"="35.871,35.979"]
"geaxgx/tello-openpose" ["l"="35.896,35.999"]
"Jabrils/TelloTV" ["l"="35.882,36.008"]
"Ubotica/telloCV" ["l"="35.882,35.991"]
"dbaldwin/DroneBlocks-Tello-Python" ["l"="35.836,36.034"]
"Virodroid/easyTello" ["l"="35.852,36.042"]
"clydemcqueen/tello_ros" ["l"="35.875,36.046"]
"johnwalicki/Node-RED-Tello-Control" ["l"="35.796,36.032"]
"dbaldwin/Tello-Python" ["l"="35.812,36.019"]
"Kragrathea/TelloLib" ["l"="35.847,35.978"]
"tau-adl/Tello_ROS_ORBSLAM" ["l"="35.872,36.032"]
"anqixu/tello_driver" ["l"="35.887,36.038"]
"murtazahassan/Robot-Arm-Gesture-Control" ["l"="36.052,35.927"]
"murtazahassan/TeslaCyberTruck-Arduino" ["l"="36.038,35.928"]
"kinivi/tello-gesture-control" ["l"="35.967,36.087"]
"dji-sdk/RoboMaster-SDK" ["l"="35.835,36.091"]
"kinivi/hand-gesture-recognition-mediapipe" ["l"="35.986,36.109"]
"gabguerin/Sign-Language-Recognition--MediaPipe-DTW" ["l"="35.979,36.137"]
"PINTO0309/mediapipe-bin" ["l"="36.086,36.095"]
"Kazuhito00/Tokyo2020-Pictogram-using-MediaPipe" ["l"="36.07,36.116"]
"dbaldwin/DroneBlocks-TelloEDU-Python" ["l"="35.793,35.995"]
"comoc/TelloForUnity" ["l"="35.819,35.979"]
"GalBrandwine/HalloPy" ["l"="35.86,35.986"]
"RoboMasterS1Challenge/robomaster_s1_can_hack" ["l"="35.795,36.108"]
"RoboMasterS1Challenge/robomaster_s1_ros_reference_design" ["l"="35.769,36.111"]
"JohnieBraaf/Robomaster-Micropython" ["l"="35.781,36.124"]
"nanmu42/robomasterpy" ["l"="35.822,36.125"]
"nanmu42/robo-playground" ["l"="35.816,36.142"]
"clydemcqueen/flock2" ["l"="35.894,36.059"]
"arpita739/Real-time-Vernacular-Sign-Language-Recognition-using-MediaPipe-and-Machine-Learning" ["l"="35.974,36.155"]
"SMerrony/tello" ["l"="35.864,35.958"]
"MAVProxyUser/RyzeTelloFirmware" ["l"="35.815,35.995"]
"murtazahassan/darknet" ["l"="36.001,35.931"]
"murtazahassan/Obstacle-Avoding-Robot" ["l"="36.057,35.915"]
"murtazahassan/Object-Following-Robot" ["l"="36.04,35.91"]
"jasmcaus/canaro" ["l"="36.196,35.95"]
"jasmcaus/opencv-series" ["l"="36.187,35.937"]
"dronefreak/dji-tello-object-detection-segmentation" ["l"="35.946,36.114"]
"brunoga/robomaster" ["l"="35.842,36.112"]
"clydemcqueen/flock" ["l"="35.859,36.06"]
"appie-17/tello_driver" ["l"="35.875,36.062"]
"ttusharsurve567/OpenCV-Mini-Projects" ["l"="36.096,35.997"]
"jiuqiant/mediapipe_python_aarch64" ["l"="36.111,36.099"]
"dbaldwin/DroneBlocks-Tello-Camera-With-Python-OpenCV" ["l"="35.815,36.05"]
"Kragrathea/TelloPC" ["l"="35.85,35.963"]
"mcecchi/KivyTello" ["l"="35.888,35.957"]
"henricavalcante/openomr" ["l"="36.018,35.771"]
"tsauvine/omr" ["l"="36.049,35.776"]
"EuracBiomedicalResearch/RescueOMR" ["l"="36.076,35.78"]
"GregoryCMiller/omr" ["l"="36.088,35.797"]
"mukul54/inter-iit-bridgei2i" ["l"="35.97,35.797"]
"SMerrony/telloterm" ["l"="35.863,35.938"]
"murtazahassan/Digits-Classification" ["l"="35.999,35.911"]
"carter-james89/UnityControllerForTello" ["l"="35.811,35.967"]
"mgyong/awesome-mediapipe" ["l"="35.465,35.86"]
"geaxgx/depthai_hand_tracker" ["l"="-11.157,39.327"]
"hukenovs/hagrid" ["l"="35.701,35.32"]
"8bitbytes/TelloSdkCoreNet" ["l"="35.82,35.952"]
"socketbind/drone-control" ["l"="35.838,35.951"]
"marklauter/TelloAPI-SDK-2.0" ["l"="35.828,35.963"]
"ferrufino/OpticalMarkRecognition" ["l"="36.053,35.76"]
"dronefreak/dji-tello-collision-avoidance-pydnet" ["l"="35.926,36.127"]
"dronefreak/dji-tello-target-tracking" ["l"="35.943,36.132"]
}