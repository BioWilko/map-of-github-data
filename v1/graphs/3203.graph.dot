digraph G {
"BindsNET/bindsnet" -> "norse/norse"
"BindsNET/bindsnet" -> "Shikhargupta/Spiking-Neural-Network"
"BindsNET/bindsnet" -> "miladmozafari/SpykeTorch"
"BindsNET/bindsnet" -> "fangwei123456/spikingjelly"
"BindsNET/bindsnet" -> "brian-team/brian2"
"BindsNET/bindsnet" -> "jeshraghian/snntorch"
"BindsNET/bindsnet" -> "BasBuller/PySNN"
"BindsNET/bindsnet" -> "NeuromorphicProcessorProject/snn_toolbox"
"BindsNET/bindsnet" -> "guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP"
"BindsNET/bindsnet" -> "bamsumit/slayerPytorch"
"BindsNET/bindsnet" -> "XDUSPONGE/SNN_benchmark"
"BindsNET/bindsnet" -> "peter-u-diehl/stdp-mnist"
"BindsNET/bindsnet" -> "fzenke/spytorch"
"BindsNET/bindsnet" -> "cwq159/PyTorch-Spiking-YOLOv3"
"BindsNET/bindsnet" -> "yjwu17/BP-for-SpikingNN"
"ChFrenkel/ODIN" -> "ChFrenkel/ReckOn"
"ChFrenkel/ODIN" -> "intel-nrc-ecosystem/models"
"Shikhargupta/Spiking-Neural-Network" -> "BindsNET/bindsnet"
"Shikhargupta/Spiking-Neural-Network" -> "peter-u-diehl/stdp-mnist"
"Shikhargupta/Spiking-Neural-Network" -> "brian-team/brian2"
"Shikhargupta/Spiking-Neural-Network" -> "NeuromorphicProcessorProject/snn_toolbox"
"Shikhargupta/Spiking-Neural-Network" -> "miladmozafari/SpykeTorch"
"Shikhargupta/Spiking-Neural-Network" -> "norse/norse"
"Shikhargupta/Spiking-Neural-Network" -> "guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP"
"Shikhargupta/Spiking-Neural-Network" -> "Hananel-Hazan/bindsnet"
"Shikhargupta/Spiking-Neural-Network" -> "djsaunde/lm-snn"
"Shikhargupta/Spiking-Neural-Network" -> "maael/SpikingNeuralNetwork"
"Shikhargupta/Spiking-Neural-Network" -> "bamsumit/slayerPytorch"
"Shikhargupta/Spiking-Neural-Network" -> "fangwei123456/spikingjelly"
"Shikhargupta/Spiking-Neural-Network" -> "jeshraghian/snntorch"
"Shikhargupta/Spiking-Neural-Network" -> "zxzhijia/Brian2STDPMNIST"
"Shikhargupta/Spiking-Neural-Network" -> "BasBuller/PySNN"
"XDUSPONGE/SNN_benchmark" -> "yjwu17/BP-for-SpikingNN"
"XDUSPONGE/SNN_benchmark" -> "wangxiao5791509/SNN_CV_Applications_Resources"
"XDUSPONGE/SNN_benchmark" -> "fangwei123456/spikingjelly"
"XDUSPONGE/SNN_benchmark" -> "fangwei123456/Spike-Element-Wise-ResNet"
"XDUSPONGE/SNN_benchmark" -> "cwq159/PyTorch-Spiking-YOLOv3"
"XDUSPONGE/SNN_benchmark" -> "miladmozafari/SpykeTorch"
"XDUSPONGE/SNN_benchmark" -> "thiswinex/STBP-simple"
"XDUSPONGE/SNN_benchmark" -> "SpikingChen/SNN-Daily-Arxiv"
"XDUSPONGE/SNN_benchmark" -> "nitin-rathi/hybrid-snn-conversion"
"XDUSPONGE/SNN_benchmark" -> "peter-u-diehl/stdp-mnist"
"XDUSPONGE/SNN_benchmark" -> "fzenke/spytorch"
"XDUSPONGE/SNN_benchmark" -> "yjwu17/STBP-for-training-SpikingNN"
"XDUSPONGE/SNN_benchmark" -> "bamsumit/slayerPytorch"
"XDUSPONGE/SNN_benchmark" -> "norse/norse"
"XDUSPONGE/SNN_benchmark" -> "NeuromorphicProcessorProject/snn_toolbox"
"guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP" -> "miladmozafari/SpykeTorch"
"guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP" -> "bamsumit/slayerPytorch"
"guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP" -> "djsaunde/lm-snn"
"guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP" -> "Shikhargupta/Spiking-Neural-Network"
"guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP" -> "maael/SpikingNeuralNetwork"
"guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP" -> "BindsNET/bindsnet"
"guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP" -> "markstrefford/Spiking-Neural-Network"
"guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP" -> "yjwu17/BP-for-SpikingNN"
"guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP" -> "NeuromorphicProcessorProject/snn_toolbox"
"guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP" -> "peter-u-diehl/stdp-mnist"
"guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP" -> "BasBuller/PySNN"
"guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP" -> "nitin-rathi/hybrid-snn-conversion"
"guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP" -> "google/ihmehimmeli"
"guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP" -> "XDUSPONGE/SNN_benchmark"
"guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP" -> "aa-samad/conv_snn"
"nitin-rathi/hybrid-snn-conversion" -> "yhhhli/SNN_Calibration"
"nitin-rathi/hybrid-snn-conversion" -> "NeuroCompLab-psu/SNN-Conversion"
"nitin-rathi/hybrid-snn-conversion" -> "fangwei123456/Spike-Element-Wise-ResNet"
"nitin-rathi/hybrid-snn-conversion" -> "aa-samad/conv_snn"
"norse/norse" -> "BindsNET/bindsnet"
"norse/norse" -> "miladmozafari/SpykeTorch"
"norse/norse" -> "BasBuller/PySNN"
"norse/norse" -> "jeshraghian/snntorch"
"norse/norse" -> "bamsumit/slayerPytorch"
"norse/norse" -> "fangwei123456/spikingjelly"
"norse/norse" -> "NeuromorphicProcessorProject/snn_toolbox"
"norse/norse" -> "fzenke/spytorch"
"norse/norse" -> "Shikhargupta/Spiking-Neural-Network"
"norse/norse" -> "neuromorphs/tonic"
"norse/norse" -> "XDUSPONGE/SNN_benchmark"
"norse/norse" -> "guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP"
"norse/norse" -> "brian-team/brian2"
"norse/norse" -> "peter-u-diehl/stdp-mnist"
"norse/norse" -> "nitin-rathi/hybrid-snn-conversion"
"raminmh/CfC" -> "raminmh/liquid_time_constant_networks"
"raminmh/CfC" -> "mlech26l/ncps"
"raminmh/CfC" -> "mlech26l/keras-ncp"
"raminmh/CfC" -> "paperswithcode/galai" ["e"=1]
"raminmh/CfC" -> "raminmh/liquid-s4"
"raminmh/CfC" -> "norse/norse"
"raminmh/CfC" -> "ridgerchu/SpikeGPT"
"raminmh/CfC" -> "zjc062/mind-vis" ["e"=1]
"jeshraghian/snntorch" -> "fangwei123456/spikingjelly"
"jeshraghian/snntorch" -> "norse/norse"
"jeshraghian/snntorch" -> "BindsNET/bindsnet"
"jeshraghian/snntorch" -> "miladmozafari/SpykeTorch"
"jeshraghian/snntorch" -> "fzenke/spytorch"
"jeshraghian/snntorch" -> "Shikhargupta/Spiking-Neural-Network"
"jeshraghian/snntorch" -> "XDUSPONGE/SNN_benchmark"
"jeshraghian/snntorch" -> "NeuromorphicProcessorProject/snn_toolbox"
"jeshraghian/snntorch" -> "neuromorphs/tonic"
"jeshraghian/snntorch" -> "bamsumit/slayerPytorch"
"jeshraghian/snntorch" -> "BasBuller/PySNN"
"jeshraghian/snntorch" -> "brian-team/brian2"
"jeshraghian/snntorch" -> "lava-nc/lava"
"jeshraghian/snntorch" -> "guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP"
"jeshraghian/snntorch" -> "ridgerchu/SpikeGPT"
"brian-team/brian2" -> "Shikhargupta/Spiking-Neural-Network"
"brian-team/brian2" -> "peter-u-diehl/stdp-mnist"
"brian-team/brian2" -> "BindsNET/bindsnet"
"brian-team/brian2" -> "NeuromorphicProcessorProject/snn_toolbox"
"brian-team/brian2" -> "miladmozafari/SpykeTorch"
"brian-team/brian2" -> "Hananel-Hazan/bindsnet"
"brian-team/brian2" -> "genn-team/genn"
"brian-team/brian2" -> "nengo/nengo"
"brian-team/brian2" -> "nest/nest-simulator"
"brian-team/brian2" -> "NeuralEnsemble/PyNN"
"brian-team/brian2" -> "bamsumit/slayerPytorch"
"brian-team/brian2" -> "zxzhijia/Brian2STDPMNIST"
"brian-team/brian2" -> "norse/norse"
"brian-team/brian2" -> "fzenke/spytorch"
"brian-team/brian2" -> "EPFL-LCN/neuronaldynamics-exercises"
"nmi-lab/decolle-public" -> "surrogate-gradient-learning/pytorch-lif-autograd"
"genn-team/genn" -> "brian-team/brian2genn"
"genn-team/genn" -> "NeuralEnsemble/PyNN"
"genn-team/genn" -> "UCI-CARL/CARLsim4"
"genn-team/genn" -> "brian-team/brian2"
"genn-team/genn" -> "nest/nest-simulator"
"genn-team/genn" -> "neworderofjamie/genn_examples"
"genn-team/genn" -> "OFTNAI/Spike"
"genn-team/genn" -> "UCI-CARL/CARLsim3"
"zxzhijia/Brian2STDPMNIST" -> "peter-u-diehl/stdp-mnist"
"zxzhijia/Brian2STDPMNIST" -> "djsaunde/lm-snn"
"zxzhijia/Brian2STDPMNIST" -> "NeuromorphicProcessorProject/snn_toolbox"
"zxzhijia/Brian2STDPMNIST" -> "maael/SpikingNeuralNetwork"
"zxzhijia/Brian2STDPMNIST" -> "mrahtz/musical-pattern-recognition-in-spiking-neural-networks"
"zxzhijia/Brian2STDPMNIST" -> "miladmozafari/SpykeTorch"
"openworm/org.geppetto" -> "openworm/sibernetic"
"openworm/org.geppetto" -> "openworm/org.geppetto.frontend"
"openworm/org.geppetto" -> "openworm/PyOpenWorm"
"mlech26l/keras-ncp" -> "raminmh/liquid_time_constant_networks"
"mlech26l/keras-ncp" -> "mlech26l/ncps"
"mlech26l/keras-ncp" -> "raminmh/CfC"
"mlech26l/keras-ncp" -> "BindsNET/bindsnet"
"mlech26l/keras-ncp" -> "norse/norse"
"mlech26l/keras-ncp" -> "ml-jku/hopfield-layers" ["e"=1]
"mlech26l/keras-ncp" -> "google/brain-tokyo-workshop" ["e"=1]
"mlech26l/keras-ncp" -> "google/brax" ["e"=1]
"mlech26l/keras-ncp" -> "deepmind/rlax" ["e"=1]
"mlech26l/keras-ncp" -> "BasBuller/PySNN"
"mlech26l/keras-ncp" -> "Shikhargupta/Spiking-Neural-Network"
"mlech26l/keras-ncp" -> "fangwei123456/spikingjelly"
"mlech26l/keras-ncp" -> "openai/procgen" ["e"=1]
"mlech26l/keras-ncp" -> "YeWR/EfficientZero" ["e"=1]
"mlech26l/keras-ncp" -> "lucidrains/lambda-networks" ["e"=1]
"openworm/OpenWorm" -> "openworm/sibernetic"
"openworm/OpenWorm" -> "openworm/CElegansNeuroML"
"openworm/OpenWorm" -> "openworm/org.geppetto"
"openworm/OpenWorm" -> "openworm/PyOpenWorm"
"openworm/OpenWorm" -> "neurokernel/neurokernel"
"openworm/OpenWorm" -> "openworm/Smoothed-Particle-Hydrodynamics"
"openworm/OpenWorm" -> "brian-team/brian2"
"openworm/OpenWorm" -> "openworm/c302"
"openworm/OpenWorm" -> "numenta/nupic" ["e"=1]
"openworm/OpenWorm" -> "neuronsimulator/nrn"
"openworm/OpenWorm" -> "openworm/openworm_docs"
"openworm/OpenWorm" -> "nest/nest-simulator"
"openworm/OpenWorm" -> "dorarad/gansformer" ["e"=1]
"openworm/OpenWorm" -> "geohot/fromthetransistor" ["e"=1]
"openworm/OpenWorm" -> "nengo/nengo"
"SpiNNakerManchester/sPyNNaker" -> "SpiNNakerManchester/sPyNNaker8"
"SpiNNakerManchester/sPyNNaker" -> "SpiNNakerManchester/PyNN8Examples"
"DimaKrotov/Biological_Learning" -> "DimaKrotov/Dense_Associative_Memory"
"DimaKrotov/Biological_Learning" -> "fzenke/spytorch"
"DimaKrotov/Biological_Learning" -> "bscellier/Towards-a-Biologically-Plausible-Backprop"
"DimaKrotov/Biological_Learning" -> "djsaunde/lm-snn"
"EPFL-LCN/neuronaldynamics-exercises" -> "brian-team/brian2"
"EPFL-LCN/neuronaldynamics-exercises" -> "miladmozafari/SpykeTorch"
"EPFL-LCN/neuronaldynamics-exercises" -> "fzenke/auryn"
"EPFL-LCN/neuronaldynamics-exercises" -> "fzenke/spytorch"
"djsaunde/lm-snn" -> "peter-u-diehl/stdp-mnist"
"djsaunde/lm-snn" -> "zxzhijia/Brian2STDPMNIST"
"djsaunde/lm-snn" -> "tavanaei/Spiking-CNN"
"djsaunde/lm-snn" -> "markstrefford/Spiking-Neural-Network"
"djsaunde/lm-snn" -> "djsaunde/spiketorch"
"djsaunde/lm-snn" -> "maael/SpikingNeuralNetwork"
"djsaunde/lm-snn" -> "zhouyanasd/DL-NC"
"djsaunde/lm-snn" -> "NeuromorphicProcessorProject/snn_toolbox"
"djsaunde/lm-snn" -> "npvoid/SDNN_python"
"djsaunde/lm-snn" -> "guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP"
"djsaunde/lm-snn" -> "plotlabs/SNNs-In-Tensorflow"
"djsaunde/lm-snn" -> "haoyz/sym-STDP-SNN"
"djsaunde/lm-snn" -> "Shikhargupta/Spiking-Neural-Network"
"djsaunde/lm-snn" -> "ricardodeazambuja/SNN-Experiments"
"djsaunde/lm-snn" -> "Shikhargupta/snn-brian-mlp"
"fzenke/auryn" -> "fzenke/pub2018superspike"
"google/ihmehimmeli" -> "SRKH/S4NN"
"google/ihmehimmeli" -> "yjwu17/BP-for-SpikingNN"
"google/ihmehimmeli" -> "guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP"
"google/ihmehimmeli" -> "bamsumit/slayerPytorch"
"miladmozafari/SpykeTorch" -> "bamsumit/slayerPytorch"
"miladmozafari/SpykeTorch" -> "norse/norse"
"miladmozafari/SpykeTorch" -> "fzenke/spytorch"
"miladmozafari/SpykeTorch" -> "peter-u-diehl/stdp-mnist"
"miladmozafari/SpykeTorch" -> "BindsNET/bindsnet"
"miladmozafari/SpykeTorch" -> "NeuromorphicProcessorProject/snn_toolbox"
"miladmozafari/SpykeTorch" -> "guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP"
"miladmozafari/SpykeTorch" -> "XDUSPONGE/SNN_benchmark"
"miladmozafari/SpykeTorch" -> "BasBuller/PySNN"
"miladmozafari/SpykeTorch" -> "tavanaei/Spiking-CNN"
"miladmozafari/SpykeTorch" -> "Shikhargupta/Spiking-Neural-Network"
"miladmozafari/SpykeTorch" -> "fangwei123456/spikingjelly"
"miladmozafari/SpykeTorch" -> "djsaunde/spiketorch"
"miladmozafari/SpykeTorch" -> "jeshraghian/snntorch"
"miladmozafari/SpykeTorch" -> "brian-team/brian2"
"nengo/nengo" -> "brian-team/brian2"
"nengo/nengo" -> "nengo/nengo-gui"
"nengo/nengo" -> "nengo/nengo-dl"
"nengo/nengo" -> "bamsumit/slayerPytorch"
"nengo/nengo" -> "NeuralEnsemble/PyNN"
"nengo/nengo" -> "miladmozafari/SpykeTorch"
"nengo/nengo" -> "BindsNET/bindsnet"
"nengo/nengo" -> "analyticalmonk/awesome-neuroscience" ["e"=1]
"nengo/nengo" -> "jeshraghian/snntorch"
"nengo/nengo" -> "norse/norse"
"nengo/nengo" -> "EPFL-LCN/neuronaldynamics-exercises"
"nengo/nengo" -> "lava-nc/lava"
"nengo/nengo" -> "Shikhargupta/Spiking-Neural-Network"
"nengo/nengo" -> "Hananel-Hazan/bindsnet"
"nengo/nengo" -> "neuronsimulator/nrn"
"BasBuller/PySNN" -> "norse/norse"
"BasBuller/PySNN" -> "miladmozafari/SpykeTorch"
"BasBuller/PySNN" -> "tudelft/cuSNN"
"BasBuller/PySNN" -> "bamsumit/slayerPytorch"
"BasBuller/PySNN" -> "NeuromorphicProcessorProject/snn_toolbox"
"BasBuller/PySNN" -> "BindsNET/bindsnet"
"BasBuller/PySNN" -> "djsaunde/spiketorch"
"BasBuller/PySNN" -> "romainzimmer/s2net"
"BasBuller/PySNN" -> "djsaunde/lm-snn"
"BasBuller/PySNN" -> "guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP"
"BasBuller/PySNN" -> "peter-u-diehl/stdp-mnist"
"BasBuller/PySNN" -> "fzenke/spytorch"
"BasBuller/PySNN" -> "yjwu17/BP-for-SpikingNN"
"BasBuller/PySNN" -> "Shikhargupta/Spiking-Neural-Network"
"BasBuller/PySNN" -> "aa-samad/conv_snn"
"fangwei123456/spikingjelly" -> "XDUSPONGE/SNN_benchmark"
"fangwei123456/spikingjelly" -> "jeshraghian/snntorch"
"fangwei123456/spikingjelly" -> "norse/norse"
"fangwei123456/spikingjelly" -> "BindsNET/bindsnet"
"fangwei123456/spikingjelly" -> "miladmozafari/SpykeTorch"
"fangwei123456/spikingjelly" -> "bamsumit/slayerPytorch"
"fangwei123456/spikingjelly" -> "cwq159/PyTorch-Spiking-YOLOv3"
"fangwei123456/spikingjelly" -> "Shikhargupta/Spiking-Neural-Network"
"fangwei123456/spikingjelly" -> "fzenke/spytorch"
"fangwei123456/spikingjelly" -> "NeuromorphicProcessorProject/snn_toolbox"
"fangwei123456/spikingjelly" -> "peter-u-diehl/stdp-mnist"
"fangwei123456/spikingjelly" -> "fangwei123456/Spike-Element-Wise-ResNet"
"fangwei123456/spikingjelly" -> "yjwu17/BP-for-SpikingNN"
"fangwei123456/spikingjelly" -> "brian-team/brian2"
"fangwei123456/spikingjelly" -> "ZK-Zhou/spikformer"
"cwq159/PyTorch-Spiking-YOLOv3" -> "fangwei123456/Spike-Element-Wise-ResNet"
"cwq159/PyTorch-Spiking-YOLOv3" -> "XDUSPONGE/SNN_benchmark"
"cwq159/PyTorch-Spiking-YOLOv3" -> "NeuromorphicProcessorProject/snn_toolbox"
"cwq159/PyTorch-Spiking-YOLOv3" -> "nitin-rathi/hybrid-snn-conversion"
"cwq159/PyTorch-Spiking-YOLOv3" -> "wangxiao5791509/SNN_CV_Applications_Resources"
"cwq159/PyTorch-Spiking-YOLOv3" -> "fangwei123456/spikingjelly"
"cwq159/PyTorch-Spiking-YOLOv3" -> "aa-samad/conv_snn"
"cwq159/PyTorch-Spiking-YOLOv3" -> "yjwu17/BP-for-SpikingNN"
"cwq159/PyTorch-Spiking-YOLOv3" -> "Shengrong-LSR/HDLBits-Solutions-Verilog"
"cwq159/PyTorch-Spiking-YOLOv3" -> "fjcu-ee-islab/Spiking_Converted_YOLOv4"
"cwq159/PyTorch-Spiking-YOLOv3" -> "zbs881314/Temporal-Coded-Deep-SNN"
"cwq159/PyTorch-Spiking-YOLOv3" -> "putshua/SNN_conversion_QCFS"
"yjwu17/STBP-for-training-SpikingNN" -> "hewh16/SNNs-RNNs"
"yjwu17/STBP-for-training-SpikingNN" -> "thiswinex/STBP-simple"
"Hananel-Hazan/bindsnet" -> "Shikhargupta/Spiking-Neural-Network"
"Hananel-Hazan/bindsnet" -> "brian-team/brian2"
"Hananel-Hazan/bindsnet" -> "NeuromorphicProcessorProject/snn_toolbox"
"Hananel-Hazan/bindsnet" -> "djsaunde/lm-snn"
"Hananel-Hazan/bindsnet" -> "peter-u-diehl/stdp-mnist"
"Hananel-Hazan/bindsnet" -> "djsaunde/bindsnet_experiments"
"Hananel-Hazan/bindsnet" -> "djsaunde/spiketorch"
"Hananel-Hazan/bindsnet" -> "bamsumit/slayerPytorch"
"Hananel-Hazan/bindsnet" -> "miladmozafari/SpykeTorch"
"Hananel-Hazan/bindsnet" -> "maael/SpikingNeuralNetwork"
"Hananel-Hazan/bindsnet" -> "fzenke/pub2018superspike"
"Hananel-Hazan/bindsnet" -> "guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP"
"Hananel-Hazan/bindsnet" -> "fzenke/spytorch"
"Hananel-Hazan/bindsnet" -> "BasBuller/PySNN"
"Hananel-Hazan/bindsnet" -> "tavanaei/Spiking-CNN"
"bamsumit/slayerPytorch" -> "miladmozafari/SpykeTorch"
"bamsumit/slayerPytorch" -> "fzenke/spytorch"
"bamsumit/slayerPytorch" -> "yjwu17/BP-for-SpikingNN"
"bamsumit/slayerPytorch" -> "norse/norse"
"bamsumit/slayerPytorch" -> "NeuromorphicProcessorProject/snn_toolbox"
"bamsumit/slayerPytorch" -> "tudelft/cuSNN"
"bamsumit/slayerPytorch" -> "neuromorphs/tonic"
"bamsumit/slayerPytorch" -> "BasBuller/PySNN"
"bamsumit/slayerPytorch" -> "gorchard/event-Python" ["e"=1]
"bamsumit/slayerPytorch" -> "uzh-rpg/snn_angular_velocity" ["e"=1]
"bamsumit/slayerPytorch" -> "peter-u-diehl/stdp-mnist"
"bamsumit/slayerPytorch" -> "guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP"
"bamsumit/slayerPytorch" -> "fangwei123456/spikingjelly"
"bamsumit/slayerPytorch" -> "XDUSPONGE/SNN_benchmark"
"bamsumit/slayerPytorch" -> "nmi-lab/decolle-public"
"nest/nest-simulator" -> "NeuralEnsemble/PyNN"
"nest/nest-simulator" -> "genn-team/genn"
"nest/nest-simulator" -> "brian-team/brian2"
"nest/nest-simulator" -> "norse/norse"
"nest/nest-simulator" -> "INM-6/multi-area-model"
"nest/nest-simulator" -> "UCI-CARL/CARLsim4"
"nest/nest-simulator" -> "BindsNET/bindsnet"
"nest/nest-simulator" -> "neuronsimulator/nrn"
"nest/nest-simulator" -> "miladmozafari/SpykeTorch"
"nest/nest-simulator" -> "fzenke/auryn"
"nest/nest-simulator" -> "BlueBrain/CoreNeuron"
"nest/nest-simulator" -> "nest/nestml"
"nest/nest-simulator" -> "NeuralEnsemble/python-neo" ["e"=1]
"nest/nest-simulator" -> "fangwei123456/spikingjelly"
"nest/nest-simulator" -> "Hananel-Hazan/bindsnet"
"raminmh/liquid_time_constant_networks" -> "mlech26l/keras-ncp"
"raminmh/liquid_time_constant_networks" -> "raminmh/CfC"
"raminmh/liquid_time_constant_networks" -> "mlech26l/ncps"
"raminmh/liquid_time_constant_networks" -> "raminmh/liquid-s4"
"raminmh/liquid_time_constant_networks" -> "tudelft/cuSNN"
"BrainCog-X/Brain-Cog" -> "Brain-Cog-Lab/BP-STA"
"BrainCog-X/Brain-Cog" -> "bamsumit/slayerPytorch"
"BrainCog-X/Brain-Cog" -> "Brain-Cog-Lab/Conversion_Burst"
"UCI-CARL/CARLsim4" -> "UCI-CARL/CARLsim3"
"UCI-CARL/CARLsim4" -> "UCI-CARL/CARLsim5"
"tudelft/cuSNN" -> "BasBuller/PySNN"
"tudelft/cuSNN" -> "bamsumit/slayerPytorch"
"tudelft/cuSNN" -> "gorchard/event-Python" ["e"=1]
"tudelft/cuSNN" -> "daniilidis-group/EV-FlowNet" ["e"=1]
"tudelft/cuSNN" -> "better-flow/evimo" ["e"=1]
"lava-nc/lava-dl" -> "lava-nc/lava-optimization"
"lava-nc/lava-dl" -> "lava-nc/lava-dnf"
"lava-nc/lava-dl" -> "lava-nc/lava"
"lava-nc/lava" -> "lava-nc/lava-dl"
"lava-nc/lava" -> "intel-nrc-ecosystem/models"
"lava-nc/lava" -> "lava-nc/lava-optimization"
"lava-nc/lava" -> "bamsumit/slayerPytorch"
"lava-nc/lava" -> "neuromorphs/tonic"
"lava-nc/lava" -> "lava-nc/lava-dnf"
"lava-nc/lava" -> "jeshraghian/snntorch"
"lava-nc/lava" -> "NeuromorphicProcessorProject/snn_toolbox"
"lava-nc/lava" -> "norse/norse"
"lava-nc/lava" -> "fzenke/spytorch"
"lava-nc/lava" -> "nengo/nengo-loihi"
"lava-nc/lava" -> "mikeroyal/Neuromorphic-Computing-Guide"
"lava-nc/lava" -> "brian-team/brian2"
"lava-nc/lava" -> "nengo/nengo"
"lava-nc/lava-optimization" -> "lava-nc/lava-dnf"
"lava-nc/lava-optimization" -> "lava-nc/lava-dl"
"neuromorphs/tonic" -> "synsense/sinabs"
"neuromorphs/tonic" -> "synsense/sinabs-exodus"
"neuromorphs/tonic" -> "bamsumit/slayerPytorch"
"neuromorphs/tonic" -> "synsense/rockpool"
"yjwu17/BP-for-SpikingNN" -> "stonezwr/TSSL-BP"
"yjwu17/BP-for-SpikingNN" -> "XDUSPONGE/SNN_benchmark"
"yjwu17/BP-for-SpikingNN" -> "bamsumit/slayerPytorch"
"yjwu17/BP-for-SpikingNN" -> "nitin-rathi/hybrid-snn-conversion"
"yjwu17/BP-for-SpikingNN" -> "wangxiao5791509/SNN_CV_Applications_Resources"
"yjwu17/BP-for-SpikingNN" -> "thiswinex/STBP-simple"
"NeuromorphicProcessorProject/snn_toolbox" -> "miladmozafari/SpykeTorch"
"NeuromorphicProcessorProject/snn_toolbox" -> "bamsumit/slayerPytorch"
"NeuromorphicProcessorProject/snn_toolbox" -> "peter-u-diehl/stdp-mnist"
"NeuromorphicProcessorProject/snn_toolbox" -> "norse/norse"
"NeuromorphicProcessorProject/snn_toolbox" -> "zxzhijia/Brian2STDPMNIST"
"NeuromorphicProcessorProject/snn_toolbox" -> "cwq159/PyTorch-Spiking-YOLOv3"
"NeuromorphicProcessorProject/snn_toolbox" -> "Shikhargupta/Spiking-Neural-Network"
"NeuromorphicProcessorProject/snn_toolbox" -> "brian-team/brian2"
"NeuromorphicProcessorProject/snn_toolbox" -> "djsaunde/lm-snn"
"NeuromorphicProcessorProject/snn_toolbox" -> "BasBuller/PySNN"
"NeuromorphicProcessorProject/snn_toolbox" -> "BindsNET/bindsnet"
"NeuromorphicProcessorProject/snn_toolbox" -> "guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP"
"NeuromorphicProcessorProject/snn_toolbox" -> "djsaunde/spiketorch"
"NeuromorphicProcessorProject/snn_toolbox" -> "nitin-rathi/hybrid-snn-conversion"
"NeuromorphicProcessorProject/snn_toolbox" -> "XDUSPONGE/SNN_benchmark"
"ZLkanyo009/STBP-train-and-compression" -> "thiswinex/STBP-simple"
"thiswinex/STBP-simple" -> "ZLkanyo009/STBP-train-and-compression"
"thiswinex/STBP-simple" -> "hewh16/SNNs-RNNs"
"thiswinex/STBP-simple" -> "yhhhli/SNN_Calibration"
"thiswinex/STBP-simple" -> "fangwei123456/Spike-Element-Wise-ResNet"
"Neurosim-lab/netpyne" -> "MetaCell/NetPyNE-UI"
"ridgerchu/SpikeGPT" -> "ZK-Zhou/spikformer"
"ridgerchu/SpikeGPT" -> "ridgerchu/TCJA"
"ridgerchu/SpikeGPT" -> "jeshraghian/snntorch"
"ridgerchu/SpikeGPT" -> "saharNooby/rwkv.cpp" ["e"=1]
"ridgerchu/SpikeGPT" -> "fangwei123456/spikingjelly"
"ridgerchu/SpikeGPT" -> "fangwei123456/Spike-Element-Wise-ResNet"
"ridgerchu/SpikeGPT" -> "XDUSPONGE/SNN_benchmark"
"ridgerchu/SpikeGPT" -> "SpikingChen/SNN-Daily-Arxiv"
"ridgerchu/SpikeGPT" -> "neuromorphs/tonic"
"ridgerchu/SpikeGPT" -> "fzenke/spytorch"
"ridgerchu/SpikeGPT" -> "wangxiao5791509/SNN_CV_Applications_Resources"
"ridgerchu/SpikeGPT" -> "Blealtan/RWKV-LM-LoRA" ["e"=1]
"ridgerchu/SpikeGPT" -> "sfmth/OpenSpike" ["e"=1]
"neurokernel/neurokernel" -> "openworm/org.geppetto"
"neurokernel/neurokernel" -> "openworm/OpenWorm"
"neurokernel/neurokernel" -> "neurokernel/neurodriver"
"neurokernel/neurokernel" -> "openworm/CElegansNeuroML"
"neurokernel/neurokernel" -> "Flowx08/Celegans-simulation"
"openworm/CElegansNeuroML" -> "openworm/PyOpenWorm"
"openworm/CElegansNeuroML" -> "openworm/c302"
"openworm/CElegansNeuroML" -> "openworm/sibernetic"
"openworm/CElegansNeuroML" -> "openworm/open-worm-analysis-toolbox"
"openworm/CElegansNeuroML" -> "openworm/muscle_model"
"openworm/CElegansNeuroML" -> "openworm/openworm_docs"
"openworm/PyOpenWorm" -> "openworm/CElegansNeuroML"
"nengo/nengo-dl" -> "nengo/nengo-gui"
"Shengrong-LSR/HDLBits-Solutions-Verilog" -> "PKU-FengShuo/Prediction-of-the-COVID-19-Epidemic-Trends-Based-on-SEIR-and-AI-Models"
"Shengrong-LSR/HDLBits-Solutions-Verilog" -> "ZhangYuan-ss-pku/DVS-gestureRecognition"
"intel-nrc-ecosystem/models" -> "nengo/nengo-loihi"
"intel-nrc-ecosystem/models" -> "nmi-lab/torchneuromorphic"
"fzenke/spytorch" -> "miladmozafari/SpykeTorch"
"fzenke/spytorch" -> "bamsumit/slayerPytorch"
"fzenke/spytorch" -> "romainzimmer/s2net"
"fzenke/spytorch" -> "norse/norse"
"fzenke/spytorch" -> "surrogate-gradient-learning/pytorch-lif-autograd"
"fzenke/spytorch" -> "XDUSPONGE/SNN_benchmark"
"fzenke/spytorch" -> "IGITUGraz/eligibility_propagation"
"fzenke/spytorch" -> "neuromorphs/tonic"
"fzenke/spytorch" -> "jeshraghian/snntorch"
"fzenke/spytorch" -> "nitin-rathi/hybrid-snn-conversion"
"fzenke/spytorch" -> "peter-u-diehl/stdp-mnist"
"fzenke/spytorch" -> "guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP"
"fzenke/spytorch" -> "fangwei123456/spikingjelly"
"fzenke/spytorch" -> "Intelligent-Computing-Lab-Yale/BNTT-Batch-Normalization-Through-Time"
"fzenke/spytorch" -> "nmi-lab/decolle-public"
"peter-u-diehl/stdp-mnist" -> "zxzhijia/Brian2STDPMNIST"
"peter-u-diehl/stdp-mnist" -> "djsaunde/lm-snn"
"peter-u-diehl/stdp-mnist" -> "miladmozafari/SpykeTorch"
"peter-u-diehl/stdp-mnist" -> "maael/SpikingNeuralNetwork"
"peter-u-diehl/stdp-mnist" -> "Shikhargupta/Spiking-Neural-Network"
"peter-u-diehl/stdp-mnist" -> "NeuromorphicProcessorProject/snn_toolbox"
"peter-u-diehl/stdp-mnist" -> "djsaunde/spiketorch"
"peter-u-diehl/stdp-mnist" -> "brian-team/brian2"
"peter-u-diehl/stdp-mnist" -> "dannyneil/spiking_relu_conversion"
"peter-u-diehl/stdp-mnist" -> "bamsumit/slayerPytorch"
"peter-u-diehl/stdp-mnist" -> "XDUSPONGE/SNN_benchmark"
"peter-u-diehl/stdp-mnist" -> "markstrefford/Spiking-Neural-Network"
"peter-u-diehl/stdp-mnist" -> "tavanaei/Spiking-CNN"
"peter-u-diehl/stdp-mnist" -> "guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP"
"peter-u-diehl/stdp-mnist" -> "aa-samad/conv_snn"
"BlueBrain/Brayns" -> "BlueBrain/RTNeuron"
"BlueBrain/Brayns" -> "BlueBrain/NeuroMorphoVis"
"BlueBrain/Brayns" -> "BlueBrain/CoreNeuron"
"BlueBrain/Brayns" -> "BlueBrain/NeuroM"
"BlueBrain/Brayns" -> "BlueBrain/BluePyOpt"
"BlueBrain/Brayns" -> "BlueBrain/Brion"
"BlueBrain/Brayns" -> "ospray/OSPRay"
"BlueBrain/Brayns" -> "NVIDIA/VisRTX" ["e"=1]
"BlueBrain/Brayns" -> "BlueBrain/BioExplorer"
"BlueBrain/Brayns" -> "neuronsimulator/nrn"
"BlueBrain/Brayns" -> "BlueBrain/Tide"
"mlech26l/ncps" -> "raminmh/liquid_time_constant_networks"
"mlech26l/ncps" -> "raminmh/CfC"
"mlech26l/ncps" -> "mlech26l/keras-ncp"
"BlueBrain/BluePyOpt" -> "BlueBrain/NeuroM"
"BlueBrain/BluePyOpt" -> "BlueBrain/eFEL"
"BlueBrain/BluePyOpt" -> "BlueBrain/CoreNeuron"
"BlueBrain/BluePyOpt" -> "neuronsimulator/nrn"
"BlueBrain/BluePyOpt" -> "BlueBrain/nmodl"
"BlueBrain/BluePyOpt" -> "BlueBrain/NeuroMorphoVis"
"BlueBrain/BluePyOpt" -> "BlueBrain/MOOC-neurons-and-synapses-2017"
"BlueBrain/BluePyOpt" -> "NeuralEnsemble/PyNN"
"BlueBrain/BluePyOpt" -> "BlueBrain/SimulationTutorials"
"NeuralEnsemble/PyNN" -> "nest/nest-simulator"
"NeuralEnsemble/PyNN" -> "genn-team/genn"
"NeuralEnsemble/PyNN" -> "NeuralEnsemble/python-neo" ["e"=1]
"NeuralEnsemble/PyNN" -> "SpiNNakerManchester/sPyNNaker"
"NeuralEnsemble/PyNN" -> "brian-team/brian2"
"NeuralEnsemble/PyNN" -> "BlueBrain/NeuroM"
"NeuralEnsemble/PyNN" -> "norse/norse"
"NeuralEnsemble/PyNN" -> "peter-u-diehl/stdp-mnist"
"NeuralEnsemble/PyNN" -> "BlueBrain/BluePyOpt"
"NeuralEnsemble/PyNN" -> "brian-team/brian2genn"
"NeuralEnsemble/PyNN" -> "fzenke/spytorch"
"NeuralEnsemble/PyNN" -> "NeuralEnsemble/elephant" ["e"=1]
"NeuralEnsemble/PyNN" -> "fzenke/auryn"
"NeuralEnsemble/PyNN" -> "bamsumit/slayerPytorch"
"NeuralEnsemble/PyNN" -> "UCI-CARL/CARLsim4"
"IGITUGraz/eligibility_propagation" -> "ChFrenkel/eprop-PyTorch"
"IGITUGraz/eligibility_propagation" -> "IGITUGraz/LSNN-official"
"ZK-Zhou/spikformer" -> "fangwei123456/Spike-Element-Wise-ResNet"
"synsense/sinabs" -> "synsense/sinabs-exodus"
"synsense/sinabs" -> "synsense/rockpool"
"synsense/sinabs-exodus" -> "synsense/sinabs"
"aa-samad/conv_snn" -> "uzh-rpg/snn_angular_velocity" ["e"=1]
"aa-samad/conv_snn" -> "nitin-rathi/hybrid-snn-conversion"
"aa-samad/conv_snn" -> "fangwei123456/Spike-Element-Wise-ResNet"
"UCI-CARL/CARLsim3" -> "UCI-CARL/CARLsim4"
"fangwei123456/Spike-Element-Wise-ResNet" -> "yhhhli/SNN_Calibration"
"fangwei123456/Spike-Element-Wise-ResNet" -> "thiswinex/STBP-simple"
"fangwei123456/Spike-Element-Wise-ResNet" -> "nitin-rathi/hybrid-snn-conversion"
"fangwei123456/Spike-Element-Wise-ResNet" -> "urancon/StereoSpike"
"fangwei123456/Spike-Element-Wise-ResNet" -> "ridgerchu/TCJA"
"BlueBrain/NeuroMorphoVis" -> "BlueBrain/NeuroM"
"BlueBrain/NeuroMorphoVis" -> "BlueBrain/VessMorphoVis"
"BlueBrain/NeuroMorphoVis" -> "BlueBrain/RTNeuron"
"wangxiao5791509/SNN_CV_Applications_Resources" -> "XDUSPONGE/SNN_benchmark"
"wangxiao5791509/SNN_CV_Applications_Resources" -> "lyh983012/ES-imagenet-master"
"wangxiao5791509/SNN_CV_Applications_Resources" -> "fangwei123456/Spike-Element-Wise-ResNet"
"wangxiao5791509/SNN_CV_Applications_Resources" -> "yjwu17/BP-for-SpikingNN"
"yhhhli/SNN_Calibration" -> "DingJianhao/OptSNNConvertion-RNL-RIL"
"yhhhli/SNN_Calibration" -> "nitin-rathi/hybrid-snn-conversion"
"yhhhli/SNN_Calibration" -> "fangwei123456/Spike-Element-Wise-ResNet"
"yhhhli/SNN_Calibration" -> "thiswinex/STBP-simple"
"yhhhli/SNN_Calibration" -> "putshua/SNN_conversion_QCFS"
"IGITUGraz/LSNN-official" -> "IGITUGraz/eligibility_propagation"
"openworm/sibernetic" -> "openworm/org.geppetto"
"openworm/sibernetic" -> "openworm/open-worm-analysis-toolbox"
"openworm/sibernetic" -> "openworm/CElegansNeuroML"
"openworm/sibernetic" -> "openworm/c302"
"openworm/sibernetic" -> "openworm/PyOpenWorm"
"openworm/sibernetic" -> "openworm/openworm_docs"
"openworm/sibernetic" -> "openworm/OpenWorm"
"neuronsimulator/nrn" -> "BlueBrain/CoreNeuron"
"neuronsimulator/nrn" -> "BlueBrain/BluePyOpt"
"neuronsimulator/nrn" -> "BlueBrain/nmodl"
"neuronsimulator/nrn" -> "Neurosim-lab/netpyne"
"neuronsimulator/nrn" -> "BlueBrain/eFEL"
"neuronsimulator/nrn" -> "BlueBrain/NeuroMorphoVis"
"neuronsimulator/nrn" -> "brian-team/brian2"
"neuronsimulator/nrn" -> "BlueBrain/NeuroM"
"neuronsimulator/nrn" -> "neuronsimulator/iv"
"neuronsimulator/nrn" -> "BlueBrain/BluePyEfe"
"neuronsimulator/nrn" -> "BlueBrain/snap"
"neuronsimulator/nrn" -> "orena1/neuron_reduce"
"neuronsimulator/nrn" -> "nest/nest-simulator"
"neuronsimulator/nrn" -> "neuronsimulator/pythontutorial"
"neuronsimulator/nrn" -> "BlueBrain/Brayns"
"BlueBrain/NeuroM" -> "BlueBrain/BluePyOpt"
"BlueBrain/NeuroM" -> "BlueBrain/NeuroMorphoVis"
"BlueBrain/NeuroM" -> "BlueBrain/eFEL"
"BlueBrain/NeuroM" -> "BlueBrain/MorphIO"
"BlueBrain/NeuroM" -> "BlueBrain/MOOC-neurons-and-synapses-2017"
"lava-nc/lava-dnf" -> "lava-nc/lava-optimization"
"lava-nc/lava-dnf" -> "lava-nc/lava-dl"
"markstrefford/Spiking-Neural-Network" -> "djsaunde/lm-snn"
"tavanaei/Spiking-CNN" -> "zhouyanasd/DL-NC"
"tavanaei/Spiking-CNN" -> "maael/SpikingNeuralNetwork"
"synsense/rockpool" -> "synsense/sinabs-exodus"
"surrogate-gradient-learning/spytorch" -> "surrogate-gradient-learning/pytorch-lif-autograd"
"djsaunde/spiketorch" -> "jmsbrcwll/SpikeProp"
"djsaunde/spiketorch" -> "djsaunde/lm-snn"
"djsaunde/spiketorch" -> "peter-u-diehl/stdp-mnist"
"BlueBrain/Tide" -> "BlueBrain/Deflect"
"dannyneil/spiking_relu_conversion" -> "tavanaei/Spiking-CNN"
"dannyneil/spiking_relu_conversion" -> "jinyyy666/mm-bp-snn"
"dannyneil/spiking_relu_conversion" -> "dannyneil/edbn"
"BlueBrain/RTNeuron" -> "BlueBrain/Long-range-micro-connectome"
"maael/SpikingNeuralNetwork" -> "tavanaei/Spiking-CNN"
"maael/SpikingNeuralNetwork" -> "mrahtz/musical-pattern-recognition-in-spiking-neural-networks"
"maael/SpikingNeuralNetwork" -> "peter-u-diehl/stdp-mnist"
"maael/SpikingNeuralNetwork" -> "Shikhargupta/snn-brian-mlp"
"maael/SpikingNeuralNetwork" -> "djsaunde/lm-snn"
"maael/SpikingNeuralNetwork" -> "zhouyanasd/DL-NC"
"maael/SpikingNeuralNetwork" -> "haoyz/sym-STDP-SNN"
"maael/SpikingNeuralNetwork" -> "Sabnam-Mustari/Iris_SNN"
"maael/SpikingNeuralNetwork" -> "zxzhijia/Brian2STDPMNIST"
"maael/SpikingNeuralNetwork" -> "tartavull/snn-rl"
"surrogate-gradient-learning/pytorch-lif-autograd" -> "nmi-lab/decolle-public"
"surrogate-gradient-learning/pytorch-lif-autograd" -> "surrogate-gradient-learning/spytorch"
"surrogate-gradient-learning/pytorch-lif-autograd" -> "nmi-lab/dcll"
"nengo/nengo-gui" -> "nengo/nengo-dl"
"stonezwr/TSSL-BP" -> "thiswinex/STBP-simple"
"bscellier/Towards-a-Biologically-Plausible-Backprop" -> "smonsays/equilibrium-propagation"
"nmi-lab/dcll" -> "surrogate-gradient-learning/pytorch-lif-autograd"
"nmi-lab/dcll" -> "nmi-lab/decolle-public"
"BlueBrain/CoreNeuron" -> "neuronsimulator/nrn"
"BlueBrain/CoreNeuron" -> "BlueBrain/nmodl"
"BlueBrain/CoreNeuron" -> "BlueBrain/BluePyOpt"
"BlueBrain/CoreNeuron" -> "nrnhines/ringtest"
"openworm/open-worm-analysis-toolbox" -> "openworm/ChannelWorm2"
"jmsbrcwll/SpikeProp" -> "ujamaar/NeuralNetwork"
"ChFrenkel/ReckOn" -> "ChFrenkel/eprop-PyTorch"
"SpiNNakerManchester/sPyNNaker8" -> "SpiNNakerManchester/PyNN8Examples"
"putshua/SNN_conversion_QCFS" -> "DingJianhao/OptSNNConvertion-RNL-RIL"
"BindsNET/bindsnet" ["l"="29.153,37.96"]
"norse/norse" ["l"="29.141,37.967"]
"Shikhargupta/Spiking-Neural-Network" ["l"="29.125,37.943"]
"miladmozafari/SpykeTorch" ["l"="29.148,37.947"]
"fangwei123456/spikingjelly" ["l"="29.136,37.981"]
"brian-team/brian2" ["l"="29.176,37.943"]
"jeshraghian/snntorch" ["l"="29.157,37.977"]
"BasBuller/PySNN" ["l"="29.108,37.957"]
"NeuromorphicProcessorProject/snn_toolbox" ["l"="29.132,37.954"]
"guillaume-chevalier/Spiking-Neural-Network-SNN-with-PyTorch-where-Backpropagation-engenders-STDP" ["l"="29.109,37.947"]
"bamsumit/slayerPytorch" ["l"="29.12,37.96"]
"XDUSPONGE/SNN_benchmark" ["l"="29.12,37.981"]
"peter-u-diehl/stdp-mnist" ["l"="29.136,37.938"]
"fzenke/spytorch" ["l"="29.128,37.967"]
"cwq159/PyTorch-Spiking-YOLOv3" ["l"="29.112,37.994"]
"yjwu17/BP-for-SpikingNN" ["l"="29.104,37.982"]
"ChFrenkel/ODIN" ["l"="29.218,38.084"]
"ChFrenkel/ReckOn" ["l"="29.196,38.098"]
"intel-nrc-ecosystem/models" ["l"="29.214,38.048"]
"Hananel-Hazan/bindsnet" ["l"="29.149,37.926"]
"djsaunde/lm-snn" ["l"="29.107,37.919"]
"maael/SpikingNeuralNetwork" ["l"="29.119,37.906"]
"zxzhijia/Brian2STDPMNIST" ["l"="29.131,37.921"]
"wangxiao5791509/SNN_CV_Applications_Resources" ["l"="29.113,38.006"]
"fangwei123456/Spike-Element-Wise-ResNet" ["l"="29.104,38.012"]
"thiswinex/STBP-simple" ["l"="29.097,38.025"]
"SpikingChen/SNN-Daily-Arxiv" ["l"="29.094,38.005"]
"nitin-rathi/hybrid-snn-conversion" ["l"="29.097,37.992"]
"yjwu17/STBP-for-training-SpikingNN" ["l"="29.107,38.039"]
"markstrefford/Spiking-Neural-Network" ["l"="29.089,37.921"]
"google/ihmehimmeli" ["l"="29.066,37.957"]
"aa-samad/conv_snn" ["l"="29.096,37.974"]
"yhhhli/SNN_Calibration" ["l"="29.082,38.02"]
"NeuroCompLab-psu/SNN-Conversion" ["l"="29.064,38.025"]
"neuromorphs/tonic" ["l"="29.153,37.998"]
"raminmh/CfC" ["l"="29.048,38.009"]
"raminmh/liquid_time_constant_networks" ["l"="29.02,38.008"]
"mlech26l/ncps" ["l"="29.025,37.994"]
"mlech26l/keras-ncp" ["l"="29.062,37.986"]
"paperswithcode/galai" ["l"="27.435,31.085"]
"raminmh/liquid-s4" ["l"="29.008,38.029"]
"ridgerchu/SpikeGPT" ["l"="29.129,38.006"]
"zjc062/mind-vis" ["l"="34.609,29.021"]
"lava-nc/lava" ["l"="29.184,37.992"]
"genn-team/genn" ["l"="29.227,37.932"]
"nengo/nengo" ["l"="29.2,37.954"]
"nest/nest-simulator" ["l"="29.21,37.919"]
"NeuralEnsemble/PyNN" ["l"="29.199,37.928"]
"EPFL-LCN/neuronaldynamics-exercises" ["l"="29.175,37.924"]
"nmi-lab/decolle-public" ["l"="29.078,37.947"]
"surrogate-gradient-learning/pytorch-lif-autograd" ["l"="29.06,37.943"]
"brian-team/brian2genn" ["l"="29.234,37.915"]
"UCI-CARL/CARLsim4" ["l"="29.244,37.934"]
"neworderofjamie/genn_examples" ["l"="29.25,37.921"]
"OFTNAI/Spike" ["l"="29.266,37.924"]
"UCI-CARL/CARLsim3" ["l"="29.258,37.943"]
"mrahtz/musical-pattern-recognition-in-spiking-neural-networks" ["l"="29.117,37.887"]
"openworm/org.geppetto" ["l"="29.354,37.912"]
"openworm/sibernetic" ["l"="29.349,37.94"]
"openworm/org.geppetto.frontend" ["l"="29.371,37.89"]
"openworm/PyOpenWorm" ["l"="29.362,37.93"]
"ml-jku/hopfield-layers" ["l"="29.576,30.698"]
"google/brain-tokyo-workshop" ["l"="25.248,35.774"]
"google/brax" ["l"="25.366,35.816"]
"deepmind/rlax" ["l"="23.535,33.749"]
"openai/procgen" ["l"="25.224,35.817"]
"YeWR/EfficientZero" ["l"="25.341,35.762"]
"lucidrains/lambda-networks" ["l"="34.57,35.753"]
"openworm/OpenWorm" ["l"="29.315,37.931"]
"openworm/CElegansNeuroML" ["l"="29.366,37.949"]
"neurokernel/neurokernel" ["l"="29.382,37.916"]
"openworm/Smoothed-Particle-Hydrodynamics" ["l"="29.383,37.939"]
"openworm/c302" ["l"="29.337,37.953"]
"numenta/nupic" ["l"="27.266,33.905"]
"neuronsimulator/nrn" ["l"="29.251,37.889"]
"openworm/openworm_docs" ["l"="29.349,37.96"]
"dorarad/gansformer" ["l"="33.292,32.964"]
"geohot/fromthetransistor" ["l"="-20.048,-34.084"]
"SpiNNakerManchester/sPyNNaker" ["l"="29.267,37.967"]
"SpiNNakerManchester/sPyNNaker8" ["l"="29.294,37.98"]
"SpiNNakerManchester/PyNN8Examples" ["l"="29.282,37.987"]
"DimaKrotov/Biological_Learning" ["l"="29.05,37.905"]
"DimaKrotov/Dense_Associative_Memory" ["l"="29.024,37.89"]
"bscellier/Towards-a-Biologically-Plausible-Backprop" ["l"="29.005,37.875"]
"fzenke/auryn" ["l"="29.189,37.901"]
"tavanaei/Spiking-CNN" ["l"="29.143,37.913"]
"djsaunde/spiketorch" ["l"="29.12,37.924"]
"zhouyanasd/DL-NC" ["l"="29.128,37.894"]
"npvoid/SDNN_python" ["l"="29.076,37.878"]
"plotlabs/SNNs-In-Tensorflow" ["l"="29.076,37.904"]
"haoyz/sym-STDP-SNN" ["l"="29.092,37.897"]
"ricardodeazambuja/SNN-Experiments" ["l"="29.074,37.891"]
"Shikhargupta/snn-brian-mlp" ["l"="29.103,37.891"]
"fzenke/pub2018superspike" ["l"="29.168,37.89"]
"SRKH/S4NN" ["l"="29.021,37.956"]
"nengo/nengo-gui" ["l"="29.24,37.98"]
"nengo/nengo-dl" ["l"="29.239,37.967"]
"analyticalmonk/awesome-neuroscience" ["l"="28.383,37.457"]
"tudelft/cuSNN" ["l"="29.076,37.97"]
"romainzimmer/s2net" ["l"="29.084,37.938"]
"ZK-Zhou/spikformer" ["l"="29.132,38.023"]
"Shengrong-LSR/HDLBits-Solutions-Verilog" ["l"="29.037,37.979"]
"fjcu-ee-islab/Spiking_Converted_YOLOv4" ["l"="29.143,38.019"]
"zbs881314/Temporal-Coded-Deep-SNN" ["l"="29.112,38.024"]
"putshua/SNN_conversion_QCFS" ["l"="29.081,38.032"]
"hewh16/SNNs-RNNs" ["l"="29.097,38.058"]
"djsaunde/bindsnet_experiments" ["l"="29.151,37.893"]
"gorchard/event-Python" ["l"="30.88,42.344"]
"uzh-rpg/snn_angular_velocity" ["l"="30.923,42.389"]
"INM-6/multi-area-model" ["l"="29.2,37.885"]
"BlueBrain/CoreNeuron" ["l"="29.251,37.873"]
"nest/nestml" ["l"="29.22,37.897"]
"NeuralEnsemble/python-neo" ["l"="29.396,37.634"]
"BrainCog-X/Brain-Cog" ["l"="29.014,37.934"]
"Brain-Cog-Lab/BP-STA" ["l"="28.978,37.932"]
"Brain-Cog-Lab/Conversion_Burst" ["l"="28.99,37.921"]
"UCI-CARL/CARLsim5" ["l"="29.275,37.939"]
"daniilidis-group/EV-FlowNet" ["l"="30.899,42.362"]
"better-flow/evimo" ["l"="30.92,42.357"]
"lava-nc/lava-dl" ["l"="29.2,38.014"]
"lava-nc/lava-optimization" ["l"="29.216,38.015"]
"lava-nc/lava-dnf" ["l"="29.214,38.004"]
"nengo/nengo-loihi" ["l"="29.204,38.031"]
"mikeroyal/Neuromorphic-Computing-Guide" ["l"="29.238,38.021"]
"synsense/sinabs" ["l"="29.175,38.032"]
"synsense/sinabs-exodus" ["l"="29.173,38.02"]
"synsense/rockpool" ["l"="29.161,38.028"]
"stonezwr/TSSL-BP" ["l"="29.076,38.011"]
"ZLkanyo009/STBP-train-and-compression" ["l"="29.092,38.045"]
"Neurosim-lab/netpyne" ["l"="29.306,37.863"]
"MetaCell/NetPyNE-UI" ["l"="29.327,37.849"]
"ridgerchu/TCJA" ["l"="29.12,38.029"]
"saharNooby/rwkv.cpp" ["l"="27.398,31.235"]
"Blealtan/RWKV-LM-LoRA" ["l"="27.474,31.39"]
"sfmth/OpenSpike" ["l"="-9.85,46.805"]
"neurokernel/neurodriver" ["l"="29.408,37.917"]
"Flowx08/Celegans-simulation" ["l"="29.416,37.903"]
"openworm/open-worm-analysis-toolbox" ["l"="29.387,37.957"]
"openworm/muscle_model" ["l"="29.39,37.974"]
"PKU-FengShuo/Prediction-of-the-COVID-19-Epidemic-Trends-Based-on-SEIR-and-AI-Models" ["l"="29.014,37.974"]
"ZhangYuan-ss-pku/DVS-gestureRecognition" ["l"="29.005,37.979"]
"nmi-lab/torchneuromorphic" ["l"="29.234,38.065"]
"IGITUGraz/eligibility_propagation" ["l"="29.151,38.053"]
"Intelligent-Computing-Lab-Yale/BNTT-Batch-Normalization-Through-Time" ["l"="29.085,37.96"]
"dannyneil/spiking_relu_conversion" ["l"="29.184,37.962"]
"BlueBrain/Brayns" ["l"="29.263,37.843"]
"BlueBrain/RTNeuron" ["l"="29.256,37.822"]
"BlueBrain/NeuroMorphoVis" ["l"="29.239,37.845"]
"BlueBrain/NeuroM" ["l"="29.228,37.862"]
"BlueBrain/BluePyOpt" ["l"="29.232,37.877"]
"BlueBrain/Brion" ["l"="29.291,37.832"]
"ospray/OSPRay" ["l"="29.254,37.804"]
"NVIDIA/VisRTX" ["l"="-12.352,26.61"]
"BlueBrain/BioExplorer" ["l"="29.279,37.821"]
"BlueBrain/Tide" ["l"="29.295,37.809"]
"BlueBrain/eFEL" ["l"="29.215,37.868"]
"BlueBrain/nmodl" ["l"="29.266,37.869"]
"BlueBrain/MOOC-neurons-and-synapses-2017" ["l"="29.212,37.85"]
"BlueBrain/SimulationTutorials" ["l"="29.248,37.856"]
"NeuralEnsemble/elephant" ["l"="29.375,37.674"]
"ChFrenkel/eprop-PyTorch" ["l"="29.173,38.083"]
"IGITUGraz/LSNN-official" ["l"="29.148,38.076"]
"urancon/StereoSpike" ["l"="29.078,38.047"]
"BlueBrain/VessMorphoVis" ["l"="29.228,37.819"]
"lyh983012/ES-imagenet-master" ["l"="29.124,38.042"]
"DingJianhao/OptSNNConvertion-RNL-RIL" ["l"="29.064,38.042"]
"neuronsimulator/iv" ["l"="29.271,37.882"]
"BlueBrain/BluePyEfe" ["l"="29.272,37.9"]
"BlueBrain/snap" ["l"="29.282,37.877"]
"orena1/neuron_reduce" ["l"="29.288,37.888"]
"neuronsimulator/pythontutorial" ["l"="29.276,37.89"]
"BlueBrain/MorphIO" ["l"="29.214,37.834"]
"surrogate-gradient-learning/spytorch" ["l"="29.036,37.939"]
"jmsbrcwll/SpikeProp" ["l"="29.129,37.881"]
"BlueBrain/Deflect" ["l"="29.31,37.791"]
"jinyyy666/mm-bp-snn" ["l"="29.215,37.985"]
"dannyneil/edbn" ["l"="29.215,37.974"]
"BlueBrain/Long-range-micro-connectome" ["l"="29.271,37.803"]
"Sabnam-Mustari/Iris_SNN" ["l"="29.105,37.877"]
"tartavull/snn-rl" ["l"="29.104,37.861"]
"nmi-lab/dcll" ["l"="29.049,37.932"]
"smonsays/equilibrium-propagation" ["l"="28.983,37.862"]
"nrnhines/ringtest" ["l"="29.276,37.86"]
"openworm/ChannelWorm2" ["l"="29.41,37.962"]
"ujamaar/NeuralNetwork" ["l"="29.129,37.862"]
}