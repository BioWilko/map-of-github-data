digraph G {
"eminetto/clean-architecture-go-v2" -> "eminetto/clean-architecture-go"
"eminetto/clean-architecture-go-v2" -> "GSabadini/go-bank-transfer"
"eminetto/clean-architecture-go-v2" -> "manakuro/golang-clean-architecture"
"eminetto/clean-architecture-go-v2" -> "bxcodec/go-clean-arch" ["e"=1]
"eminetto/clean-architecture-go-v2" -> "zhashkevych/go-clean-architecture"
"eminetto/clean-architecture-go-v2" -> "ThreeDotsLabs/wild-workouts-go-ddd-example" ["e"=1]
"eminetto/clean-architecture-go-v2" -> "betrybe/playbook-go" ["e"=1]
"eminetto/clean-architecture-go-v2" -> "Gommunity/vagas" ["e"=1]
"eminetto/clean-architecture-go-v2" -> "AleksK1NG/Go-Clean-Architecture-REST-API"
"eminetto/clean-architecture-go-v2" -> "MarioCarrion/todo-api-microservice-example" ["e"=1]
"eminetto/clean-architecture-go-v2" -> "jfeng45/servicetmpl"
"eminetto/clean-architecture-go-v2" -> "evrone/go-clean-template" ["e"=1]
"eminetto/clean-architecture-go-v2" -> "bmf-san/go-clean-architecture-web-application-boilerplate"
"eminetto/clean-architecture-go-v2" -> "roblaszczak/go-cleanarch"
"eminetto/clean-architecture-go-v2" -> "benbjohnson/wtf" ["e"=1]
"KendoCross/kendoDDD" -> "ixre/go2o"
"KendoCross/kendoDDD" -> "takashabe/go-ddd-sample"
"demo-apps/go-gin-app" -> "madhums/go-gin-mgo-demo"
"demo-apps/go-gin-app" -> "gothinkster/golang-gin-realworld-example-app"
"demo-apps/go-gin-app" -> "gin-contrib/sessions" ["e"=1]
"demo-apps/go-gin-app" -> "Massad/gin-boilerplate"
"demo-apps/go-gin-app" -> "Depado/gin-auth-example"
"demo-apps/go-gin-app" -> "Away0x/gin_bbs" ["e"=1]
"demo-apps/go-gin-app" -> "codehakase/golang-gin"
"demo-apps/go-gin-app" -> "zupzup/casbin-http-role-example"
"AleksK1NG/Go-Clean-Architecture-REST-API" -> "zhashkevych/go-clean-architecture"
"AleksK1NG/Go-Clean-Architecture-REST-API" -> "AleksK1NG/Go-GRPC-Auth-Microservice"
"AleksK1NG/Go-Clean-Architecture-REST-API" -> "eminetto/clean-architecture-go-v2"
"AleksK1NG/Go-Clean-Architecture-REST-API" -> "AleksK1NG/Go-gRPC-RabbitMQ-microservice"
"AleksK1NG/Go-Clean-Architecture-REST-API" -> "qiangxue/go-rest-api"
"AleksK1NG/Go-Clean-Architecture-REST-API" -> "GSabadini/go-bank-transfer"
"AleksK1NG/Go-Clean-Architecture-REST-API" -> "MarioCarrion/todo-api-microservice-example" ["e"=1]
"AleksK1NG/Go-Clean-Architecture-REST-API" -> "khannedy/golang-clean-architecture" ["e"=1]
"AleksK1NG/Go-Clean-Architecture-REST-API" -> "evrone/go-clean-template" ["e"=1]
"AleksK1NG/Go-Clean-Architecture-REST-API" -> "manakuro/golang-clean-architecture"
"AleksK1NG/Go-Clean-Architecture-REST-API" -> "mehdihadeli/store-golang-microservices"
"AleksK1NG/Go-Clean-Architecture-REST-API" -> "AleksK1NG/Go-CQRS-Kafka-gRPC-Microservices"
"AleksK1NG/Go-Clean-Architecture-REST-API" -> "irahardianto/service-pattern-go"
"AleksK1NG/Go-Clean-Architecture-REST-API" -> "dipeshdulal/clean-gin"
"AleksK1NG/Go-Clean-Architecture-REST-API" -> "bxcodec/go-clean-arch" ["e"=1]
"ThreeDotsLabs/monolith-microservice-shop" -> "ThreeDotsLabs/nats-example"
"ThreeDotsLabs/monolith-microservice-shop" -> "powerman/go-monolith-example"
"qiangxue/go-rest-api" -> "ribice/gorsk"
"qiangxue/go-rest-api" -> "go-ozzo/ozzo-validation" ["e"=1]
"qiangxue/go-rest-api" -> "dhax/go-base"
"qiangxue/go-rest-api" -> "mingrammer/go-todo-rest-api-example"
"qiangxue/go-rest-api" -> "go-ozzo/ozzo-dbx"
"qiangxue/go-rest-api" -> "snowzach/gorestapi"
"qiangxue/go-rest-api" -> "gilcrest/go-api-basic"
"qiangxue/go-rest-api" -> "vardius/go-api-boilerplate"
"qiangxue/go-rest-api" -> "irahardianto/service-pattern-go"
"qiangxue/go-rest-api" -> "AleksK1NG/Go-Clean-Architecture-REST-API"
"qiangxue/go-rest-api" -> "bxcodec/go-clean-arch" ["e"=1]
"qiangxue/go-rest-api" -> "zhashkevych/go-clean-architecture"
"qiangxue/go-rest-api" -> "MarioCarrion/todo-api-microservice-example" ["e"=1]
"qiangxue/go-rest-api" -> "ThreeDotsLabs/wild-workouts-go-ddd-example" ["e"=1]
"qiangxue/go-rest-api" -> "victorsteven/Go-JWT-Postgres-Mysql-Restful-API"
"shijuvar/go-distributed-sys" -> "shijuvar/gokit"
"shijuvar/go-distributed-sys" -> "mishudark/eventhus"
"shijuvar/go-distributed-sys" -> "shijuvar/go-distsys"
"shijuvar/go-distributed-sys" -> "shijuvar/gokit-examples"
"shijuvar/go-distributed-sys" -> "looplab/eventhorizon"
"shijuvar/go-distributed-sys" -> "altairsix/eventsource"
"shijuvar/go-distributed-sys" -> "tinrab/meower"
"shijuvar/go-distributed-sys" -> "vardius/go-api-boilerplate"
"shijuvar/go-distributed-sys" -> "marcusolsson/goddd" ["e"=1]
"shijuvar/go-distributed-sys" -> "mmorejon/microservices-docker-go-mongodb"
"shijuvar/gokit-examples" -> "shijuvar/go-distsys"
"shijuvar/gokit-examples" -> "raysonxin/gokit-article-demo" ["e"=1]
"shijuvar/gokit-examples" -> "tensor-programming/go-kit-tutorial"
"shijuvar/gokit-examples" -> "basvanbeek/opencensus-gokit-example"
"vardius/go-api-boilerplate" -> "dhax/go-base"
"vardius/go-api-boilerplate" -> "ribice/gorsk"
"vardius/go-api-boilerplate" -> "GSabadini/go-bank-transfer"
"vardius/go-api-boilerplate" -> "begmaroman/go-micro-boilerplate"
"vardius/go-api-boilerplate" -> "victorsteven/food-app-server"
"vardius/go-api-boilerplate" -> "vardius/message-bus"
"vardius/go-api-boilerplate" -> "yakuter/ugin"
"vardius/go-api-boilerplate" -> "zubroide/go-api-boilerplate"
"vardius/go-api-boilerplate" -> "typical-go/typical-rest-server"
"vardius/go-api-boilerplate" -> "ThreeDotsLabs/wild-workouts-go-ddd-example" ["e"=1]
"vardius/go-api-boilerplate" -> "looplab/eventhorizon"
"vardius/go-api-boilerplate" -> "resotto/goilerplate"
"vardius/go-api-boilerplate" -> "eyazici90/go-ddd"
"vardius/go-api-boilerplate" -> "qiangxue/go-rest-api"
"vardius/go-api-boilerplate" -> "qreasio/go-starter-kit"
"ybkuroki/go-webapp-sample" -> "StarpTech/go-web"
"ybkuroki/go-webapp-sample" -> "nixsolutions/golang-echo-boilerplate"
"ybkuroki/go-webapp-sample" -> "ybkuroki/vuejs-webapp-sample"
"harlow/go-micro-services" -> "mmorejon/microservices-docker-go-mongodb"
"harlow/go-micro-services" -> "raycad/go-microservices"
"harlow/go-micro-services" -> "EwanValentine/shippy" ["e"=1]
"harlow/go-micro-services" -> "micro/examples" ["e"=1]
"harlow/go-micro-services" -> "koding/kite" ["e"=1]
"harlow/go-micro-services" -> "jfeng45/servicetmpl"
"harlow/go-micro-services" -> "lileio/lile" ["e"=1]
"harlow/go-micro-services" -> "philips/grpc-gateway-example" ["e"=1]
"harlow/go-micro-services" -> "hb-go/micro" ["e"=1]
"harlow/go-micro-services" -> "kujtimiihoxha/kit" ["e"=1]
"harlow/go-micro-services" -> "NYTimes/gizmo" ["e"=1]
"harlow/go-micro-services" -> "grpc-ecosystem/go-grpc-middleware" ["e"=1]
"harlow/go-micro-services" -> "tinrab/meower"
"harlow/go-micro-services" -> "google/go-microservice-helpers" ["e"=1]
"harlow/go-micro-services" -> "looplab/eventhorizon"
"Massad/gin-boilerplate" -> "vsouza/go-gin-boilerplate"
"Massad/gin-boilerplate" -> "FlowerWrong/awesome-gin"
"Massad/gin-boilerplate" -> "dhax/go-base"
"Massad/gin-boilerplate" -> "gothinkster/golang-gin-realworld-example-app"
"Massad/gin-boilerplate" -> "swaggo/gin-swagger" ["e"=1]
"Massad/gin-boilerplate" -> "appleboy/gin-jwt" ["e"=1]
"Massad/gin-boilerplate" -> "demo-apps/go-gin-app"
"Massad/gin-boilerplate" -> "gin-gonic/examples" ["e"=1]
"Massad/gin-boilerplate" -> "gin-contrib/sessions" ["e"=1]
"Massad/gin-boilerplate" -> "yakuter/ugin"
"Massad/gin-boilerplate" -> "gin-gonic/contrib" ["e"=1]
"Massad/gin-boilerplate" -> "resotto/goilerplate"
"Massad/gin-boilerplate" -> "create-go-app/fiber-go-template" ["e"=1]
"Massad/gin-boilerplate" -> "gin-contrib/cors" ["e"=1]
"Massad/gin-boilerplate" -> "victorsteven/Go-JWT-Postgres-Mysql-Restful-API"
"antklim/go-microservices" -> "ru-rocker/gokit-playground"
"percybolmer/ddd-go" -> "victorsteven/food-app-server"
"percybolmer/ddd-go" -> "eyazici90/go-ddd"
"percybolmer/ddd-go" -> "takashabe/go-ddd-sample"
"percybolmer/ddd-go" -> "ThreeDotsLabs/wild-workouts-go-ddd-example" ["e"=1]
"percybolmer/ddd-go" -> "jojoarianto/go-ddd-api"
"percybolmer/ddd-go" -> "cch123/go-ddd"
"percybolmer/ddd-go" -> "stackus/ftgogo"
"karlkeefer/pngr" -> "victorsteven/Go-JWT-Postgres-Mysql-Restful-API"
"karlkeefer/pngr" -> "IsraelAdura/go-postgres-jwt-react-starter"
"karlkeefer/pngr" -> "aligoren/go_ecommerce_microservice"
"karlkeefer/pngr" -> "el10savio/TODO-Fullstack-App-Go-Gin-Postgres-React"
"karlkeefer/pngr" -> "caohoangnam/go-clean-architecture"
"karlkeefer/pngr" -> "binalyze/httpreq"
"karlkeefer/pngr" -> "mmorejon/microservices-docker-go-mongodb"
"karlkeefer/pngr" -> "yakuter/ugin"
"karlkeefer/pngr" -> "MartinHeinz/go-project-blueprint" ["e"=1]
"gothinkster/golang-gin-realworld-example-app" -> "err0r500/go-realworld-clean"
"gothinkster/golang-gin-realworld-example-app" -> "xesina/golang-echo-realworld-example-app"
"gothinkster/golang-gin-realworld-example-app" -> "eddycjy/go-gin-example" ["e"=1]
"gothinkster/golang-gin-realworld-example-app" -> "gin-gonic/examples" ["e"=1]
"gothinkster/golang-gin-realworld-example-app" -> "bxcodec/go-clean-arch" ["e"=1]
"gothinkster/golang-gin-realworld-example-app" -> "Massad/gin-boilerplate"
"gothinkster/golang-gin-realworld-example-app" -> "EDDYCJY/go-gin-example" ["e"=1]
"gothinkster/golang-gin-realworld-example-app" -> "appleboy/gin-jwt" ["e"=1]
"gothinkster/golang-gin-realworld-example-app" -> "dhax/go-base"
"gothinkster/golang-gin-realworld-example-app" -> "demo-apps/go-gin-app"
"gothinkster/golang-gin-realworld-example-app" -> "qiangxue/go-rest-api"
"gothinkster/golang-gin-realworld-example-app" -> "ribice/gorsk"
"gothinkster/golang-gin-realworld-example-app" -> "vsouza/go-gin-boilerplate"
"gothinkster/golang-gin-realworld-example-app" -> "golang-migrate/migrate" ["e"=1]
"gothinkster/golang-gin-realworld-example-app" -> "raycad/go-microservices"
"dipeshdulal/clean-gin" -> "wesionaryTEAM/go_clean_architecture"
"dipeshdulal/clean-gin" -> "resotto/goilerplate"
"dipeshdulal/clean-gin" -> "Denes-cilwal/clean_gin_api"
"dipeshdulal/clean-gin" -> "dipeshdulal/learning-flutter"
"dipeshdulal/clean-gin" -> "BinodKafle/BinodKafle"
"dipeshdulal/clean-gin" -> "sujit-baniya/fiber-boilerplate" ["e"=1]
"dipeshdulal/clean-gin" -> "dipeshdulal/my-resume"
"dipeshdulal/clean-gin" -> "pradipkharal7/nodejs-api-template"
"resotto/goilerplate" -> "dipeshdulal/clean-gin"
"resotto/goilerplate" -> "resotto/gochk"
"resotto/goilerplate" -> "vardius/go-api-boilerplate"
"zhashkevych/go-clean-architecture" -> "zhashkevych/todo-app" ["e"=1]
"zhashkevych/go-clean-architecture" -> "zhashkevych/awesome-backend" ["e"=1]
"zhashkevych/go-clean-architecture" -> "GSabadini/go-bank-transfer"
"zhashkevych/go-clean-architecture" -> "eminetto/clean-architecture-go-v2"
"zhashkevych/go-clean-architecture" -> "AleksK1NG/Go-Clean-Architecture-REST-API"
"zhashkevych/go-clean-architecture" -> "eminetto/clean-architecture-go"
"zhashkevych/go-clean-architecture" -> "Creatly/creatly-backend" ["e"=1]
"zhashkevych/go-clean-architecture" -> "theartofdevel/notes_system" ["e"=1]
"zhashkevych/go-clean-architecture" -> "irahardianto/service-pattern-go"
"zhashkevych/go-clean-architecture" -> "manakuro/golang-clean-architecture"
"zhashkevych/go-clean-architecture" -> "gopherschool/http-rest-api" ["e"=1]
"zhashkevych/go-clean-architecture" -> "zhashkevych/courses-backend"
"zhashkevych/go-clean-architecture" -> "victorsteven/food-app-server"
"zhashkevych/go-clean-architecture" -> "zhashkevych/jewerly-shop-backend" ["e"=1]
"zhashkevych/go-clean-architecture" -> "caohoangnam/go-clean-architecture"
"bmf-san/go-clean-architecture-web-application-boilerplate" -> "jojoarianto/go-ddd-api"
"bmf-san/go-clean-architecture-web-application-boilerplate" -> "eldimious/golang-api-showcase"
"bmf-san/go-clean-architecture-web-application-boilerplate" -> "manakuro/golang-clean-architecture"
"bmf-san/go-clean-architecture-web-application-boilerplate" -> "caohoangnam/go-clean-architecture"
"bmf-san/go-clean-architecture-web-application-boilerplate" -> "nurcahyaari/golang-starter"
"bmf-san/go-clean-architecture-web-application-boilerplate" -> "GSabadini/go-bank-transfer"
"bmf-san/go-clean-architecture-web-application-boilerplate" -> "bmf-san/gobel-api"
"nicholasjackson/building-microservices-youtube" -> "mmorejon/microservices-docker-go-mongodb"
"nicholasjackson/building-microservices-youtube" -> "raycad/go-microservices"
"nicholasjackson/building-microservices-youtube" -> "MarioCarrion/todo-api-microservice-example" ["e"=1]
"nicholasjackson/building-microservices-youtube" -> "katzien/go-structure-examples" ["e"=1]
"nicholasjackson/building-microservices-youtube" -> "ThreeDotsLabs/wild-workouts-go-ddd-example" ["e"=1]
"nicholasjackson/building-microservices-youtube" -> "techschool/simplebank" ["e"=1]
"nicholasjackson/building-microservices-youtube" -> "mehdihadeli/store-golang-microservices"
"nicholasjackson/building-microservices-youtube" -> "nicholasjackson/env"
"nicholasjackson/building-microservices-youtube" -> "zhashkevych/go-clean-architecture"
"nicholasjackson/building-microservices-youtube" -> "tensor-programming/hex-microservice"
"nicholasjackson/building-microservices-youtube" -> "lotusirous/go-concurrency-patterns" ["e"=1]
"nicholasjackson/building-microservices-youtube" -> "shomali11/go-interview" ["e"=1]
"nicholasjackson/building-microservices-youtube" -> "nicholasjackson/Building-Microservices-with-Go-Second-Edition"
"nicholasjackson/building-microservices-youtube" -> "bxcodec/go-clean-arch" ["e"=1]
"nicholasjackson/building-microservices-youtube" -> "eminetto/clean-architecture-go-v2"
"brainattica/golang-jwt-authentication-api-sample" -> "adigunhammedolalekan/go-contacts"
"brainattica/golang-jwt-authentication-api-sample" -> "go-authboss/authboss" ["e"=1]
"brainattica/golang-jwt-authentication-api-sample" -> "adam-hanna/goLang-jwt-auth-example"
"brainattica/golang-jwt-authentication-api-sample" -> "auth0/go-jwt-middleware" ["e"=1]
"eminetto/clean-architecture-go" -> "eminetto/clean-architecture-go-v2"
"eminetto/clean-architecture-go" -> "manakuro/golang-clean-architecture"
"eminetto/clean-architecture-go" -> "manuelkiessling/go-cleanarchitecture"
"eminetto/clean-architecture-go" -> "roblaszczak/go-cleanarch"
"eminetto/clean-architecture-go" -> "zhashkevych/go-clean-architecture"
"eminetto/clean-architecture-go" -> "bxcodec/go-clean-arch" ["e"=1]
"eminetto/clean-architecture-go" -> "Gommunity/vagas" ["e"=1]
"eminetto/clean-architecture-go" -> "jfeng45/servicetmpl"
"eminetto/clean-architecture-go" -> "irahardianto/service-pattern-go"
"eminetto/clean-architecture-go" -> "err0r500/go-realworld-clean"
"eminetto/clean-architecture-go" -> "shijuvar/gokit-examples"
"eminetto/clean-architecture-go" -> "GSabadini/go-bank-transfer"
"eminetto/clean-architecture-go" -> "betrybe/playbook-go" ["e"=1]
"eminetto/clean-architecture-go" -> "marcusolsson/goddd" ["e"=1]
"eminetto/clean-architecture-go" -> "eminetto/talk-microservices-go"
"mmorejon/microservices-docker-go-mongodb" -> "raycad/go-microservices"
"mmorejon/microservices-docker-go-mongodb" -> "harlow/go-micro-services"
"mmorejon/microservices-docker-go-mongodb" -> "EwanValentine/shippy" ["e"=1]
"mmorejon/microservices-docker-go-mongodb" -> "victorsteven/Forum-App-Go-Backend"
"mmorejon/microservices-docker-go-mongodb" -> "callistaenterprise/goblog"
"mmorejon/microservices-docker-go-mongodb" -> "shijuvar/gokit-examples"
"mmorejon/microservices-docker-go-mongodb" -> "federicoleon/golang-microservices"
"mmorejon/microservices-docker-go-mongodb" -> "shijuvar/go-distributed-sys"
"mmorejon/microservices-docker-go-mongodb" -> "antklim/go-microservices"
"mmorejon/microservices-docker-go-mongodb" -> "peterbourgon/go-microservices"
"mmorejon/microservices-docker-go-mongodb" -> "nicholasjackson/building-microservices-youtube"
"mmorejon/microservices-docker-go-mongodb" -> "dhax/go-base"
"mmorejon/microservices-docker-go-mongodb" -> "eminetto/clean-architecture-go"
"mmorejon/microservices-docker-go-mongodb" -> "victorsteven/Go-JWT-Postgres-Mysql-Restful-API"
"mmorejon/microservices-docker-go-mongodb" -> "gbrayhan/microservices-go"
"peterbourgon/go-microservices" -> "antklim/go-microservices"
"peterbourgon/go-microservices" -> "ru-rocker/gokit-playground"
"peterbourgon/go-microservices" -> "shijuvar/gokit-examples"
"raycad/go-microservices" -> "mmorejon/microservices-docker-go-mongodb"
"raycad/go-microservices" -> "MarioCarrion/todo-api-microservice-example" ["e"=1]
"raycad/go-microservices" -> "gbrayhan/microservices-go"
"raycad/go-microservices" -> "jfeng45/servicetmpl"
"raycad/go-microservices" -> "harlow/go-micro-services"
"raycad/go-microservices" -> "mehdihadeli/store-golang-microservices"
"raycad/go-microservices" -> "shijuvar/gokit-examples"
"raycad/go-microservices" -> "ebosas/microservices"
"raycad/go-microservices" -> "victorsteven/Go-JWT-Postgres-Mysql-Restful-API"
"raycad/go-microservices" -> "nicholasjackson/building-microservices-youtube"
"raycad/go-microservices" -> "begmaroman/go-micro-boilerplate"
"raycad/go-microservices" -> "gothinkster/golang-gin-realworld-example-app"
"raycad/go-microservices" -> "dhax/go-base"
"raycad/go-microservices" -> "peterbourgon/go-microservices"
"raycad/go-microservices" -> "amsokol/go-grpc-http-rest-microservice-tutorial"
"looplab/eventhorizon" -> "mishudark/eventhus"
"looplab/eventhorizon" -> "andrewwebber/cqrs"
"looplab/eventhorizon" -> "jetbasrawi/go.cqrs"
"looplab/eventhorizon" -> "shijuvar/go-distributed-sys"
"looplab/eventhorizon" -> "ThreeDotsLabs/watermill" ["e"=1]
"looplab/eventhorizon" -> "marcusolsson/goddd" ["e"=1]
"looplab/eventhorizon" -> "looplab/fsm" ["e"=1]
"looplab/eventhorizon" -> "altairsix/eventsource"
"looplab/eventhorizon" -> "vardius/go-api-boilerplate"
"looplab/eventhorizon" -> "ThreeDotsLabs/wild-workouts-go-ddd-example" ["e"=1]
"looplab/eventhorizon" -> "KendoCross/kendoDDD"
"looplab/eventhorizon" -> "uber-go/fx" ["e"=1]
"looplab/eventhorizon" -> "lovoo/goka" ["e"=1]
"looplab/eventhorizon" -> "Rhymond/go-money" ["e"=1]
"looplab/eventhorizon" -> "nats-io/nats.go" ["e"=1]
"roblaszczak/go-cleanarch" -> "manuelkiessling/go-cleanarchitecture"
"roblaszczak/go-cleanarch" -> "CaptainCodeman/clean-go"
"roblaszczak/go-cleanarch" -> "eminetto/clean-architecture-go"
"roblaszczak/go-cleanarch" -> "ThreeDotsLabs/wild-workouts-go-ddd-example" ["e"=1]
"roblaszczak/go-cleanarch" -> "ThreeDotsLabs/monolith-microservice-shop"
"roblaszczak/go-cleanarch" -> "sagikazarmark/modern-go-application" ["e"=1]
"roblaszczak/go-cleanarch" -> "ThreeDotsLabs/watermill" ["e"=1]
"roblaszczak/go-cleanarch" -> "err0r500/go-realworld-clean"
"roblaszczak/go-cleanarch" -> "irahardianto/service-pattern-go"
"roblaszczak/go-cleanarch" -> "krzysztofreczek/go-structurizr"
"roblaszczak/go-cleanarch" -> "takashabe/go-ddd-sample"
"roblaszczak/go-cleanarch" -> "victorsteven/food-app-server"
"roblaszczak/go-cleanarch" -> "deepmap/oapi-codegen" ["e"=1]
"roblaszczak/go-cleanarch" -> "eminetto/clean-architecture-go-v2"
"roblaszczak/go-cleanarch" -> "eyazici90/go-ddd"
"FlowerWrong/awesome-gin" -> "Massad/gin-boilerplate"
"takashabe/go-ddd-sample" -> "jojoarianto/go-ddd-api"
"takashabe/go-ddd-sample" -> "victorsteven/food-app-server"
"takashabe/go-ddd-sample" -> "eyazici90/go-ddd"
"takashabe/go-ddd-sample" -> "KendoCross/kendoDDD"
"victorsteven/food-app-server" -> "percybolmer/ddd-go"
"victorsteven/food-app-server" -> "takashabe/go-ddd-sample"
"victorsteven/food-app-server" -> "victorsteven/food-app-client"
"victorsteven/food-app-server" -> "eyazici90/go-ddd"
"victorsteven/food-app-server" -> "jojoarianto/go-ddd-api"
"victorsteven/food-app-server" -> "KendoCross/kendoDDD"
"victorsteven/food-app-server" -> "GSabadini/go-bank-transfer"
"victorsteven/food-app-server" -> "vardius/go-api-boilerplate"
"victorsteven/food-app-server" -> "ThreeDotsLabs/wild-workouts-go-ddd-example" ["e"=1]
"victorsteven/food-app-server" -> "manakuro/golang-clean-architecture"
"victorsteven/food-app-server" -> "zhashkevych/go-clean-architecture"
"victorsteven/food-app-server" -> "ixre/go2o"
"victorsteven/food-app-server" -> "irahardianto/service-pattern-go"
"victorsteven/food-app-server" -> "roblaszczak/go-cleanarch"
"victorsteven/food-app-server" -> "marcusolsson/goddd" ["e"=1]
"powerman/go-monolith-example" -> "powerman/go-service-example"
"powerman/go-monolith-example" -> "ThreeDotsLabs/monolith-microservice-shop"
"dhax/go-base" -> "ribice/gorsk"
"dhax/go-base" -> "vardius/go-api-boilerplate"
"dhax/go-base" -> "snowzach/gorestapi"
"dhax/go-base" -> "qiangxue/go-rest-api"
"dhax/go-base" -> "qiangxue/golang-restful-starter-kit"
"dhax/go-base" -> "Massad/gin-boilerplate"
"dhax/go-base" -> "victorsteven/Go-JWT-Postgres-Mysql-Restful-API"
"dhax/go-base" -> "gothinkster/golang-gin-realworld-example-app"
"dhax/go-base" -> "mingrammer/go-todo-rest-api-example"
"dhax/go-base" -> "zubroide/go-api-boilerplate"
"dhax/go-base" -> "GSabadini/go-bank-transfer"
"dhax/go-base" -> "adigunhammedolalekan/go-contacts"
"dhax/go-base" -> "raycad/go-microservices"
"dhax/go-base" -> "ardanlabs/service" ["e"=1]
"dhax/go-base" -> "mmorejon/microservices-docker-go-mongodb"
"ribice/gorsk" -> "dhax/go-base"
"ribice/gorsk" -> "vardius/go-api-boilerplate"
"ribice/gorsk" -> "snowzach/gorestapi"
"ribice/gorsk" -> "qiangxue/go-rest-api"
"ribice/gorsk" -> "qiangxue/golang-restful-starter-kit"
"ribice/gorsk" -> "ribice/gorsk-gin"
"ribice/gorsk" -> "marcusolsson/goddd" ["e"=1]
"ribice/gorsk" -> "ribice/twisk"
"ribice/gorsk" -> "thockin/go-build-template" ["e"=1]
"ribice/gorsk" -> "katzien/go-structure-examples" ["e"=1]
"ribice/gorsk" -> "bxcodec/go-clean-arch" ["e"=1]
"ribice/gorsk" -> "ribice/glice" ["e"=1]
"ribice/gorsk" -> "ardanlabs/service" ["e"=1]
"ribice/gorsk" -> "guardrailsio/awesome-golang-security" ["e"=1]
"ribice/gorsk" -> "spy16/droplets"
"gilcrest/go-api-basic" -> "snowzach/gorestapi"
"gilcrest/go-api-basic" -> "leeprovoost/go-rest-api-template"
"gilcrest/go-api-basic" -> "GSabadini/go-bank-transfer"
"gilcrest/go-api-basic" -> "Fs02/go-todo-backend"
"yakuter/ugin" -> "yakuter/gpass" ["e"=1]
"yakuter/ugin" -> "binalyze/httpreq"
"Fs02/go-todo-backend" -> "gilcrest/go-api-basic"
"Fs02/go-todo-backend" -> "gbrayhan/microservices-go"
"Fs02/go-todo-backend" -> "caohoangnam/go-clean-architecture"
"GSabadini/go-bank-transfer" -> "eyazici90/go-ddd"
"GSabadini/go-bank-transfer" -> "eminetto/clean-architecture-go-v2"
"GSabadini/go-bank-transfer" -> "gilcrest/go-api-basic"
"GSabadini/go-bank-transfer" -> "caohoangnam/go-clean-architecture"
"GSabadini/go-bank-transfer" -> "zhashkevych/go-clean-architecture"
"GSabadini/go-bank-transfer" -> "bmf-san/go-clean-architecture-web-application-boilerplate"
"GSabadini/go-bank-transfer" -> "manakuro/golang-clean-architecture"
"GSabadini/go-bank-transfer" -> "vardius/go-api-boilerplate"
"GSabadini/go-bank-transfer" -> "victorsteven/food-app-server"
"GSabadini/go-bank-transfer" -> "err0r500/go-realworld-clean"
"GSabadini/go-bank-transfer" -> "Fs02/go-todo-backend"
"GSabadini/go-bank-transfer" -> "holmes89/hex-example"
"GSabadini/go-bank-transfer" -> "typical-go/typical-rest-server"
"GSabadini/go-bank-transfer" -> "iDevoid/stygis"
"GSabadini/go-bank-transfer" -> "irahardianto/service-pattern-go"
"begmaroman/go-micro-boilerplate" -> "vardius/go-api-boilerplate"
"vsouza/go-gin-boilerplate" -> "Massad/gin-boilerplate"
"vsouza/go-gin-boilerplate" -> "FlowerWrong/awesome-gin"
"vsouza/go-gin-boilerplate" -> "gothinkster/golang-gin-realworld-example-app"
"vsouza/go-gin-boilerplate" -> "gin-gonic/examples" ["e"=1]
"vsouza/go-gin-boilerplate" -> "denisbakhtin/ginblog"
"vsouza/go-gin-boilerplate" -> "rahmanfadhil/gin-bookstore"
"vsouza/go-gin-boilerplate" -> "velopert/gin-rest-api-sample"
"vsouza/go-gin-boilerplate" -> "ribice/gorsk"
"spy16/droplets" -> "snowzach/gorestapi"
"shijuvar/gokit" -> "shijuvar/go-distributed-sys"
"shijuvar/gokit" -> "shijuvar/go-web"
"shijuvar/gokit" -> "shijuvar/gokit-examples"
"shijuvar/gokit" -> "shijuvar/go-distsys"
"shijuvar/gokit" -> "shijuvar/go-recipes"
"shijuvar/gokit" -> "ru-rocker/gokit-playground"
"shijuvar/go-web" -> "shijuvar/gokit"
"shijuvar/go-web" -> "shijuvar/go-recipes"
"go-ozzo/ozzo-routing" -> "go-ozzo/ozzo-dbx"
"go-ozzo/ozzo-routing" -> "go-ozzo/ozzo-config"
"go-ozzo/ozzo-routing" -> "go-ozzo/ozzo-di"
"go-ozzo/ozzo-routing" -> "go-ozzo/ozzo-log"
"go-ozzo/ozzo-routing" -> "qiangxue/golang-restful-starter-kit"
"go-ozzo/ozzo-routing" -> "qiangxue/fasthttp-routing" ["e"=1]
"ndabAP/vue-go-example" -> "markcheno/go-vue-starter"
"ndabAP/vue-go-example" -> "benc-uk/vuego-demoapp"
"ndabAP/vue-go-example" -> "spy16/droplets"
"go-ozzo/ozzo-dbx" -> "go-ozzo/ozzo-routing"
"go-ozzo/ozzo-dbx" -> "go-ozzo/ozzo-config"
"go-ozzo/ozzo-dbx" -> "go-ozzo/ozzo-validation" ["e"=1]
"go-ozzo/ozzo-dbx" -> "qiangxue/golang-restful-starter-kit"
"go-ozzo/ozzo-dbx" -> "go-ozzo/ozzo-log"
"go-ozzo/ozzo-dbx" -> "go-ozzo/ozzo-di"
"go-ozzo/ozzo-dbx" -> "qiangxue/go-rest-api"
"tinrab/spidey" -> "tinrab/meower"
"tinrab/spidey" -> "tinrab/graphql-realtime-chat"
"tinrab/spidey" -> "ru-rocker/gokit-playground"
"tensor-programming/hex-microservice" -> "matiasvarela/minesweeper-hex-arch-sample"
"tensor-programming/hex-microservice" -> "tensor-programming/go-kit-tutorial"
"tensor-programming/hex-microservice" -> "iDevoid/stygis"
"ebosas/microservices" -> "gbrayhan/microservices-go"
"jfeng45/servicetmpl" -> "jfeng45/servicetmpl1"
"jfeng45/servicetmpl" -> "manuelkiessling/go-cleanarchitecture"
"jfeng45/servicetmpl" -> "GSabadini/go-bank-transfer"
"jfeng45/servicetmpl" -> "eminetto/clean-architecture-go"
"jfeng45/servicetmpl" -> "raycad/go-microservices"
"jfeng45/servicetmpl" -> "eminetto/clean-architecture-go-v2"
"jfeng45/servicetmpl" -> "manakuro/golang-clean-architecture"
"jfeng45/servicetmpl" -> "harlow/go-micro-services"
"jfeng45/servicetmpl" -> "MarioCarrion/todo-api-microservice-example" ["e"=1]
"jfeng45/servicetmpl" -> "rafael-piovesan/go-rocket-ride"
"jfeng45/servicetmpl" -> "amsokol/go-grpc-http-rest-microservice-tutorial"
"jfeng45/servicetmpl" -> "shijuvar/gokit-examples"
"jfeng45/servicetmpl" -> "hatajoe/8am"
"jfeng45/servicetmpl" -> "ThreeDotsLabs/wild-workouts-go-ddd-example" ["e"=1]
"jfeng45/servicetmpl" -> "bxcodec/go-clean-arch-grpc"
"swaggo/echo-swagger" -> "swaggo/swag" ["e"=1]
"swaggo/echo-swagger" -> "xesina/golang-echo-realworld-example-app"
"swaggo/echo-swagger" -> "swaggo/http-swagger"
"swaggo/echo-swagger" -> "labstack/echox"
"snowzach/gorestapi" -> "gilcrest/go-api-basic"
"snowzach/gorestapi" -> "caohoangnam/go-clean-architecture"
"snowzach/gorestapi" -> "spy16/droplets"
"snowzach/gorestapi" -> "ribice/gorsk"
"snowzach/gorestapi" -> "leeprovoost/go-rest-api-template"
"snowzach/gorestapi" -> "dhax/go-base"
"snowzach/gorestapi" -> "friendsofgo/gopherapi"
"snowzach/gorestapi" -> "qiangxue/go-rest-api"
"snowzach/gorestapi" -> "StarpTech/go-web"
"snowzach/gorestapi" -> "GSabadini/go-bank-transfer"
"snowzach/gorestapi" -> "victorsteven/Go-JWT-Postgres-Mysql-Restful-API"
"snowzach/gorestapi" -> "powerman/go-monolith-example"
"snowzach/gorestapi" -> "zhashkevych/go-clean-architecture"
"snowzach/gorestapi" -> "typical-go/typical-rest-server"
"snowzach/gorestapi" -> "irahardianto/service-pattern-go"
"wesionaryTEAM/go_clean_architecture" -> "dipeshdulal/my-resume"
"wesionaryTEAM/go_clean_architecture" -> "dipeshdulal/learning-flutter"
"qiangxue/golang-restful-starter-kit" -> "go-ozzo/ozzo-routing"
"qiangxue/golang-restful-starter-kit" -> "go-ozzo/ozzo-dbx"
"qiangxue/golang-restful-starter-kit" -> "dhax/go-base"
"qiangxue/golang-restful-starter-kit" -> "ribice/gorsk"
"qiangxue/golang-restful-starter-kit" -> "go-ozzo/ozzo-validation" ["e"=1]
"qiangxue/golang-restful-starter-kit" -> "blue-jay/blueprint" ["e"=1]
"qiangxue/golang-restful-starter-kit" -> "qiangxue/fasthttp-routing" ["e"=1]
"qiangxue/golang-restful-starter-kit" -> "sogko/slumber" ["e"=1]
"qiangxue/golang-restful-starter-kit" -> "brainattica/golang-jwt-authentication-api-sample"
"qiangxue/golang-restful-starter-kit" -> "rs/rest-layer" ["e"=1]
"qiangxue/golang-restful-starter-kit" -> "marcusolsson/goddd" ["e"=1]
"qiangxue/golang-restful-starter-kit" -> "qiangxue/golang-serverless-restapi"
"qiangxue/golang-restful-starter-kit" -> "jtbonhomme/go-rest-api-boilerplate"
"qiangxue/golang-restful-starter-kit" -> "irahardianto/service-pattern-go"
"qiangxue/golang-restful-starter-kit" -> "harlow/go-micro-services"
"victorsteven/Go-JWT-Postgres-Mysql-Restful-API" -> "victorsteven/Forum-App-Go-Backend"
"victorsteven/Go-JWT-Postgres-Mysql-Restful-API" -> "victorsteven/Dockerized-Golang-Postgres-Mysql-API"
"victorsteven/Go-JWT-Postgres-Mysql-Restful-API" -> "adigunhammedolalekan/go-contacts"
"victorsteven/Go-JWT-Postgres-Mysql-Restful-API" -> "victorsteven/jwt-best-practices"
"victorsteven/Go-JWT-Postgres-Mysql-Restful-API" -> "yakuter/ugin"
"victorsteven/Go-JWT-Postgres-Mysql-Restful-API" -> "snowzach/gorestapi"
"victorsteven/Go-JWT-Postgres-Mysql-Restful-API" -> "dhax/go-base"
"victorsteven/Go-JWT-Postgres-Mysql-Restful-API" -> "manakuro/golang-clean-architecture"
"victorsteven/Go-JWT-Postgres-Mysql-Restful-API" -> "zhashkevych/go-clean-architecture"
"victorsteven/Go-JWT-Postgres-Mysql-Restful-API" -> "caohoangnam/go-clean-architecture"
"victorsteven/Go-JWT-Postgres-Mysql-Restful-API" -> "qiangxue/go-rest-api"
"victorsteven/Go-JWT-Postgres-Mysql-Restful-API" -> "raycad/go-microservices"
"victorsteven/Go-JWT-Postgres-Mysql-Restful-API" -> "yhagio/go_api_boilerplate"
"victorsteven/Go-JWT-Postgres-Mysql-Restful-API" -> "begmaroman/go-micro-boilerplate"
"victorsteven/Go-JWT-Postgres-Mysql-Restful-API" -> "mingrammer/go-todo-rest-api-example"
"manakuro/golang-clean-architecture" -> "bmf-san/go-clean-architecture-web-application-boilerplate"
"manakuro/golang-clean-architecture" -> "eminetto/clean-architecture-go"
"manakuro/golang-clean-architecture" -> "eminetto/clean-architecture-go-v2"
"manakuro/golang-clean-architecture" -> "manuelkiessling/go-cleanarchitecture"
"manakuro/golang-clean-architecture" -> "GSabadini/go-bank-transfer"
"manakuro/golang-clean-architecture" -> "caohoangnam/go-clean-architecture"
"manakuro/golang-clean-architecture" -> "zhashkevych/go-clean-architecture"
"manakuro/golang-clean-architecture" -> "victorsteven/food-app-server"
"manakuro/golang-clean-architecture" -> "gsvaldevieso/go-dream-architecture"
"manakuro/golang-clean-architecture" -> "khannedy/golang-clean-architecture" ["e"=1]
"manakuro/golang-clean-architecture" -> "powerman/go-service-example"
"manakuro/golang-clean-architecture" -> "bxcodec/go-clean-arch" ["e"=1]
"manakuro/golang-clean-architecture" -> "victorsteven/Go-JWT-Postgres-Mysql-Restful-API"
"manakuro/golang-clean-architecture" -> "jfeng45/servicetmpl"
"manakuro/golang-clean-architecture" -> "herryg91/go-clean-architecture"
"andrewwebber/cqrs" -> "mishudark/eventhus"
"andrewwebber/cqrs" -> "pjvds/go-cqrs"
"andrewwebber/cqrs" -> "jetbasrawi/go.cqrs"
"ixre/go2o" -> "KendoCross/kendoDDD"
"ixre/go2o" -> "micro-plat/hydra" ["e"=1]
"ixre/go2o" -> "micro-in-cn/starter-kit" ["e"=1]
"ixre/go2o" -> "hb-go/micro" ["e"=1]
"ixre/go2o" -> "victorsteven/food-app-server"
"ixre/go2o" -> "go-kratos/beer-shop" ["e"=1]
"jetbasrawi/go.cqrs" -> "jetbasrawi/go.geteventstore"
"jetbasrawi/go.cqrs" -> "mishudark/eventhus"
"jetbasrawi/go.cqrs" -> "andrewwebber/cqrs"
"jetbasrawi/go.cqrs" -> "looplab/eventhorizon"
"jetbasrawi/go.cqrs" -> "altairsix/eventsource"
"jojoarianto/go-ddd-api" -> "takashabe/go-ddd-sample"
"jojoarianto/go-ddd-api" -> "bmf-san/go-clean-architecture-web-application-boilerplate"
"jojoarianto/go-ddd-api" -> "gbrayhan/microservices-go"
"jojoarianto/go-ddd-api" -> "nurcahyaari/golang-starter"
"jojoarianto/go-ddd-api" -> "tomkdickinson/hexagonal-cart-service"
"mishudark/eventhus" -> "looplab/eventhorizon"
"mishudark/eventhus" -> "andrewwebber/cqrs"
"mishudark/eventhus" -> "jetbasrawi/go.cqrs"
"mishudark/eventhus" -> "shijuvar/go-distributed-sys"
"mishudark/eventhus" -> "altairsix/eventsource"
"mishudark/eventhus" -> "yehohanan7/flux"
"callistaenterprise/goblog" -> "EwanValentine/shippy" ["e"=1]
"callistaenterprise/goblog" -> "mmorejon/microservices-docker-go-mongodb"
"callistaenterprise/goblog" -> "ru-rocker/gokit-playground"
"callistaenterprise/goblog" -> "antklim/go-microservices"
"callistaenterprise/goblog" -> "eriklupander/go-microservice-eureka"
"err0r500/go-realworld-clean" -> "xesina/golang-echo-realworld-example-app"
"err0r500/go-realworld-clean" -> "holmes89/hex-example"
"err0r500/go-realworld-clean" -> "gothinkster/golang-gin-realworld-example-app"
"err0r500/go-realworld-clean" -> "GSabadini/go-bank-transfer"
"err0r500/go-realworld-clean" -> "chrisxue815/realworld-aws-lambda-dynamodb-go"
"err0r500/go-realworld-clean" -> "eminetto/clean-architecture-go"
"err0r500/go-realworld-clean" -> "gsvaldevieso/go-dream-architecture"
"err0r500/go-realworld-clean" -> "roblaszczak/go-cleanarch"
"err0r500/go-realworld-clean" -> "bmf-san/go-clean-architecture-web-application-boilerplate"
"err0r500/go-realworld-clean" -> "manuelkiessling/go-cleanarchitecture"
"err0r500/go-realworld-clean" -> "iDevoid/stygis"
"err0r500/go-realworld-clean" -> "vardius/go-api-boilerplate"
"err0r500/go-realworld-clean" -> "powerman/go-monolith-example"
"eyazici90/go-ddd" -> "eyazici90/go-mediator"
"eyazici90/go-ddd" -> "takashabe/go-ddd-sample"
"eyazici90/go-ddd" -> "GSabadini/go-bank-transfer"
"eyazici90/go-ddd" -> "nurcahyaari/golang-starter"
"eyazici90/go-ddd" -> "caohoangnam/go-clean-architecture"
"eyazici90/go-ddd" -> "jojoarianto/go-ddd-api"
"eyazici90/go-ddd" -> "percybolmer/ddd-go"
"eyazici90/go-ddd" -> "powerman/go-service-example"
"ru-rocker/gokit-playground" -> "antklim/go-microservices"
"AleksK1NG/Go-Kafka-gRPC-MongoDB-microservice" -> "AleksK1NG/Go-CQRS-Kafka-gRPC-Microservices"
"irahardianto/service-pattern-go" -> "GSabadini/go-bank-transfer"
"irahardianto/service-pattern-go" -> "zhashkevych/go-clean-architecture"
"irahardianto/service-pattern-go" -> "eminetto/clean-architecture-go"
"irahardianto/service-pattern-go" -> "bxcodec/go-clean-arch" ["e"=1]
"irahardianto/service-pattern-go" -> "roblaszczak/go-cleanarch"
"irahardianto/service-pattern-go" -> "qiangxue/go-rest-api"
"irahardianto/service-pattern-go" -> "victorsteven/food-app-server"
"irahardianto/service-pattern-go" -> "manuelkiessling/go-cleanarchitecture"
"irahardianto/service-pattern-go" -> "powerman/go-service-example"
"irahardianto/service-pattern-go" -> "snowzach/gorestapi"
"irahardianto/service-pattern-go" -> "eminetto/clean-architecture-go-v2"
"irahardianto/service-pattern-go" -> "bmf-san/go-clean-architecture-web-application-boilerplate"
"irahardianto/service-pattern-go" -> "MarioCarrion/todo-api-microservice-example" ["e"=1]
"irahardianto/service-pattern-go" -> "marcusolsson/goddd" ["e"=1]
"irahardianto/service-pattern-go" -> "eyazici90/go-ddd"
"binalyze/httpreq" -> "binalyze/logger"
"binalyze/httpreq" -> "netinternet/remoteaddr"
"gbrayhan/microservices-go" -> "nurcahyaari/golang-starter"
"gbrayhan/microservices-go" -> "jojoarianto/go-ddd-api"
"gbrayhan/microservices-go" -> "eldimious/golang-api-showcase"
"gbrayhan/microservices-go" -> "yhagio/go_api_boilerplate"
"gbrayhan/microservices-go" -> "Fs02/go-todo-backend"
"gbrayhan/microservices-go" -> "mehdihadeli/store-golang-microservices"
"victorsteven/jwt-best-practices" -> "victorsteven/gophercon-jwt-repo"
"victorsteven/jwt-best-practices" -> "golang-crew/Boilerplate-JWT-GO"
"mehdihadeli/store-golang-microservices" -> "meysamhadeli/shop-golang-microservices"
"plutov/packagemain" -> "shijuvar/gokit-examples"
"plutov/packagemain" -> "ru-rocker/gokit-playground"
"plutov/packagemain" -> "tinrab/go-tensorflow-image-recognition"
"go-ozzo/ozzo-di" -> "go-ozzo/ozzo-log"
"go-ozzo/ozzo-di" -> "go-ozzo/ozzo-config"
"go-ozzo/ozzo-log" -> "go-ozzo/ozzo-di"
"go-ozzo/ozzo-log" -> "go-ozzo/ozzo-config"
"mingrammer/go-todo-rest-api-example" -> "qiangxue/go-rest-api"
"mingrammer/go-todo-rest-api-example" -> "qiangxue/go-restful-api"
"mingrammer/go-todo-rest-api-example" -> "dhax/go-base"
"mingrammer/go-todo-rest-api-example" -> "snowzach/gorestapi"
"mingrammer/go-todo-rest-api-example" -> "victorsteven/Go-JWT-Postgres-Mysql-Restful-API"
"mingrammer/go-todo-rest-api-example" -> "McMenemy/GoDoRP"
"mingrammer/go-todo-rest-api-example" -> "gothinkster/golang-gin-realworld-example-app"
"mingrammer/go-todo-rest-api-example" -> "adigunhammedolalekan/go-contacts"
"mingrammer/go-todo-rest-api-example" -> "brainbreaker/rest-and-go"
"mingrammer/go-todo-rest-api-example" -> "ribice/gorsk"
"mingrammer/go-todo-rest-api-example" -> "manuelkiessling/go-cleanarchitecture"
"mingrammer/go-todo-rest-api-example" -> "ksckaan1/go-programlama-dili" ["e"=1]
"manuelkiessling/go-cleanarchitecture" -> "CaptainCodeman/clean-go"
"manuelkiessling/go-cleanarchitecture" -> "roblaszczak/go-cleanarch"
"manuelkiessling/go-cleanarchitecture" -> "eminetto/clean-architecture-go"
"manuelkiessling/go-cleanarchitecture" -> "manakuro/golang-clean-architecture"
"manuelkiessling/go-cleanarchitecture" -> "hirotakan/go-cleanarchitecture-sample"
"manuelkiessling/go-cleanarchitecture" -> "marcusolsson/goddd" ["e"=1]
"manuelkiessling/go-cleanarchitecture" -> "jfeng45/servicetmpl"
"manuelkiessling/go-cleanarchitecture" -> "err0r500/go-realworld-clean"
"manuelkiessling/go-cleanarchitecture" -> "irahardianto/service-pattern-go"
"manuelkiessling/go-cleanarchitecture" -> "eminetto/clean-architecture-go-v2"
"manuelkiessling/go-cleanarchitecture" -> "zhashkevych/go-clean-architecture"
"manuelkiessling/go-cleanarchitecture" -> "hatajoe/8am"
"manuelkiessling/go-cleanarchitecture" -> "bxcodec/go-clean-arch" ["e"=1]
"manuelkiessling/go-cleanarchitecture" -> "jaijiv/handybid"
"manuelkiessling/go-cleanarchitecture" -> "bmf-san/go-clean-architecture-web-application-boilerplate"
"AleksK1NG/Go-gRPC-RabbitMQ-microservice" -> "AleksK1NG/Go-CQRS-Kafka-gRPC-Microservices"
"AleksK1NG/Go-gRPC-RabbitMQ-microservice" -> "AleksK1NG/Go-Kafka-gRPC-MongoDB-microservice"
"nurcahyaari/golang-starter" -> "gbrayhan/microservices-go"
"nurcahyaari/golang-starter" -> "eyazici90/go-ddd"
"nurcahyaari/golang-starter" -> "jojoarianto/go-ddd-api"
"IsraelAdura/go-postgres-jwt-react-starter" -> "edgeee/buycoins-python" ["e"=1]
"StarpTech/go-web" -> "ybkuroki/go-webapp-sample"
"StarpTech/go-web" -> "Fs02/go-todo-backend"
"nixsolutions/golang-gin-boilerplate" -> "nixsolutions/golang-echo-boilerplate"
"nixsolutions/golang-gin-boilerplate" -> "ShkrutDenis/go-migrations"
"nixsolutions/golang-echo-boilerplate" -> "nixsolutions/golang-gin-boilerplate"
"nixsolutions/golang-echo-boilerplate" -> "ShkrutDenis/go-migrations"
"nixsolutions/golang-echo-boilerplate" -> "nixsolutions/golang-analyze-tool"
"bvwells/go-patterns" -> "ismayilmalik/golang-design-patterns"
"bvwells/go-patterns" -> "roblaszczak/go-cleanarch"
"bvwells/go-patterns" -> "sensorario/go-design-patterns"
"bvwells/go-patterns" -> "goioc/di" ["e"=1]
"bvwells/go-patterns" -> "eminetto/clean-architecture-go"
"matiasvarela/minesweeper-hex-arch-sample" -> "holmes89/hex-example"
"matiasvarela/minesweeper-hex-arch-sample" -> "tensor-programming/hex-microservice"
"AleksK1NG/Go-CQRS-Kafka-gRPC-Microservices" -> "AleksK1NG/Go-CQRS-EventSourcing-Microservice"
"AleksK1NG/Go-CQRS-Kafka-gRPC-Microservices" -> "AleksK1NG/Go-Kafka-gRPC-MongoDB-microservice"
"AleksK1NG/Go-CQRS-Kafka-gRPC-Microservices" -> "AleksK1NG/Go-EventSourcing-CQRS"
"AleksK1NG/Go-CQRS-Kafka-gRPC-Microservices" -> "AleksK1NG/Go-GRPC-Auth-Microservice"
"AleksK1NG/Go-CQRS-Kafka-gRPC-Microservices" -> "AleksK1NG/Go-gRPC-RabbitMQ-microservice"
"federicoleon/bookstore_oauth-api" -> "federicoleon/bookstore_oauth-go"
"federicoleon/bookstore_oauth-api" -> "federicoleon/bookstore_items-api"
"federicoleon/bookstore_oauth-api" -> "federicoleon/bookstore_utils-go"
"federicoleon/bookstore_oauth-api" -> "federicoleon/bookstore_users-api"
"federicoleon/bookstore_users-api" -> "federicoleon/bookstore_oauth-api"
"federicoleon/bookstore_users-api" -> "federicoleon/bookstore_oauth-go"
"federicoleon/bookstore_users-api" -> "federicoleon/bookstore_items-api"
"federicoleon/bookstore_users-api" -> "federicoleon/bookstore_utils-go"
"federicoleon/golang-microservices" -> "federicoleon/bookstore_oauth-api"
"federicoleon/golang-microservices" -> "federicoleon/bookstore_users-api"
"xesina/golang-echo-realworld-example-app" -> "err0r500/go-realworld-clean"
"xesina/golang-echo-realworld-example-app" -> "gothinkster/golang-gin-realworld-example-app"
"xesina/golang-echo-realworld-example-app" -> "markpenaranda/echo-gorm"
"xesina/golang-echo-realworld-example-app" -> "swaggo/echo-swagger"
"xesina/golang-echo-realworld-example-app" -> "eurie-inc/echo-sample"
"xesina/golang-echo-realworld-example-app" -> "golangkorea/golang-news" ["e"=1]
"xesina/golang-echo-realworld-example-app" -> "labstack/echox"
"victorsteven/Forum-App-Go-Backend" -> "victorsteven/Forum-App-React-Frontend"
"victorsteven/Forum-App-Go-Backend" -> "victorsteven/Go-JWT-Postgres-Mysql-Restful-API"
"adigunhammedolalekan/go-contacts" -> "victorsteven/Go-JWT-Postgres-Mysql-Restful-API"
"adigunhammedolalekan/go-contacts" -> "bradtraversy/go_restapi" ["e"=1]
"adigunhammedolalekan/go-contacts" -> "brainattica/golang-jwt-authentication-api-sample"
"adigunhammedolalekan/go-contacts" -> "adigunhammedolalekan/cab"
"adigunhammedolalekan/go-contacts" -> "dhax/go-base"
"altairsix/eventsource" -> "savaki/eventsource"
"amsokol/go-grpc-http-rest-microservice-tutorial" -> "dhrp/grpc-rest-go-example"
"amsokol/go-grpc-http-rest-microservice-tutorial" -> "shijuvar/gokit-examples"
"amsokol/go-grpc-http-rest-microservice-tutorial" -> "tinrab/meower"
"shijuvar/go-distsys" -> "shijuvar/gokit-examples"
"leeprovoost/go-rest-api-template" -> "gilcrest/go-api-basic"
"tinrab/meower" -> "tinrab/spidey"
"go-ozzo/ozzo-config" -> "go-ozzo/ozzo-log"
"go-ozzo/ozzo-config" -> "go-ozzo/ozzo-di"
"go-ozzo/ozzo-config" -> "go-ozzo/ozzo-routing"
"powerman/go-service-example" -> "powerman/go-monolith-example"
"CaptainCodeman/clean-go" -> "manuelkiessling/go-cleanarchitecture"
"CaptainCodeman/clean-go" -> "roblaszczak/go-cleanarch"
"CaptainCodeman/clean-go" -> "jaijiv/handybid"
"eyazici90/ImGalaxy" -> "eyazici90/OrderContext-EventSourcing"
"iDevoid/stygis" -> "gsvaldevieso/go-dream-architecture"
"iDevoid/stygis" -> "holmes89/hex-example"
"eldimious/golang-api-showcase" -> "bmf-san/go-clean-architecture-web-application-boilerplate"
"eldimious/golang-api-showcase" -> "gbrayhan/microservices-go"
"yakuter/gossl" -> "c1982/swe-dashboard"
"yakuter/gossl" -> "isacikgoz/slices"
"yakuter/gossl" -> "binalyze/httpreq"
"yakuter/gossl" -> "binalyze/logger"
"yakuter/gossl" -> "yusufpapurcu/go-license-checker"
"hirotakan/go-cleanarchitecture-sample" -> "yoshinorihisakawa/sample-api-hoop"
"hirotakan/go-cleanarchitecture-sample" -> "nakabonne/cleanarchitecture-sample"
"typical-go/typical-rest-server" -> "typical-go/typical-go"
"stackus/ftgogo" -> "stackus/edat"
"ThreeDotsLabs/event-driven-example" -> "ThreeDotsLabs/nats-example"
"victorsteven/Forum-App-React-Frontend" -> "victorsteven/Forum-App-Go-Backend"
"c1982/swe-dashboard" -> "GoTurkiye/cover-generator"
"federicoleon/bookstore_items-api" -> "federicoleon/bookstore_oauth-go"
"federicoleon/bookstore_items-api" -> "federicoleon/bookstore_oauth-api"
"federicoleon/bookstore_items-api" -> "federicoleon/bookstore_utils-go"
"federicoleon/bookstore_oauth-go" -> "federicoleon/bookstore_items-api"
"federicoleon/bookstore_oauth-go" -> "federicoleon/bookstore_utils-go"
"federicoleon/bookstore_oauth-go" -> "federicoleon/bookstore_oauth-api"
"federicoleon/bookstore_utils-go" -> "federicoleon/bookstore_oauth-go"
"federicoleon/bookstore_utils-go" -> "federicoleon/bookstore_items-api"
"federicoleon/bookstore_utils-go" -> "federicoleon/bookstore_oauth-api"
"eyazici90/go-mediator" -> "eyazici90/Galaxy-Azure"
"eyazici90/go-mediator" -> "eyazici90/OrderContext-EventSourcing"
"eyazici90/go-mediator" -> "eyazici90/Galaxy-Gateway"
"jetbasrawi/go.geteventstore" -> "jetbasrawi/go.cqrs"
"eyazici90/Galaxy" -> "eyazici90/Galaxy-Gateway"
"mattermost/morph" -> "isacikgoz/slices"
"eyazici90/OrderContext-EventSourcing" -> "eyazici90/ImGalaxy"
"eyazici90/OrderContext-EventSourcing" -> "eyazici90/Galaxy-Gateway"
"eminetto/clean-architecture-go-v2" ["l"="-16.128,-0.514"]
"eminetto/clean-architecture-go" ["l"="-16.14,-0.533"]
"GSabadini/go-bank-transfer" ["l"="-16.17,-0.515"]
"manakuro/golang-clean-architecture" ["l"="-16.152,-0.519"]
"bxcodec/go-clean-arch" ["l"="-13.407,1.176"]
"zhashkevych/go-clean-architecture" ["l"="-16.147,-0.495"]
"ThreeDotsLabs/wild-workouts-go-ddd-example" ["l"="-13.472,1.208"]
"betrybe/playbook-go" ["l"="10.675,-43.704"]
"Gommunity/vagas" ["l"="10.628,-43.81"]
"AleksK1NG/Go-Clean-Architecture-REST-API" ["l"="-16.148,-0.468"]
"MarioCarrion/todo-api-microservice-example" ["l"="-13.588,1.203"]
"jfeng45/servicetmpl" ["l"="-16.098,-0.512"]
"evrone/go-clean-template" ["l"="-13.477,1.172"]
"bmf-san/go-clean-architecture-web-application-boilerplate" ["l"="-16.183,-0.538"]
"roblaszczak/go-cleanarch" ["l"="-16.17,-0.575"]
"benbjohnson/wtf" ["l"="-13.539,1.271"]
"KendoCross/kendoDDD" ["l"="-16.073,-0.547"]
"ixre/go2o" ["l"="-16.076,-0.582"]
"takashabe/go-ddd-sample" ["l"="-16.118,-0.575"]
"demo-apps/go-gin-app" ["l"="-16.348,-0.474"]
"madhums/go-gin-mgo-demo" ["l"="-16.416,-0.474"]
"gothinkster/golang-gin-realworld-example-app" ["l"="-16.266,-0.467"]
"gin-contrib/sessions" ["l"="-12.903,1.269"]
"Massad/gin-boilerplate" ["l"="-16.289,-0.436"]
"Depado/gin-auth-example" ["l"="-16.381,-0.507"]
"Away0x/gin_bbs" ["l"="-16.839,-0.128"]
"codehakase/golang-gin" ["l"="-16.412,-0.506"]
"zupzup/casbin-http-role-example" ["l"="-16.386,-0.482"]
"AleksK1NG/Go-GRPC-Auth-Microservice" ["l"="-16.108,-0.403"]
"AleksK1NG/Go-gRPC-RabbitMQ-microservice" ["l"="-16.091,-0.389"]
"qiangxue/go-rest-api" ["l"="-16.195,-0.442"]
"khannedy/golang-clean-architecture" ["l"="14.989,-6.474"]
"mehdihadeli/store-golang-microservices" ["l"="-16.12,-0.48"]
"AleksK1NG/Go-CQRS-Kafka-gRPC-Microservices" ["l"="-16.091,-0.368"]
"irahardianto/service-pattern-go" ["l"="-16.171,-0.499"]
"dipeshdulal/clean-gin" ["l"="-16.265,-0.545"]
"ThreeDotsLabs/monolith-microservice-shop" ["l"="-16.237,-0.615"]
"ThreeDotsLabs/nats-example" ["l"="-16.27,-0.67"]
"powerman/go-monolith-example" ["l"="-16.233,-0.566"]
"ribice/gorsk" ["l"="-16.235,-0.404"]
"go-ozzo/ozzo-validation" ["l"="-13.27,1.446"]
"dhax/go-base" ["l"="-16.201,-0.419"]
"mingrammer/go-todo-rest-api-example" ["l"="-16.234,-0.43"]
"go-ozzo/ozzo-dbx" ["l"="-16.178,-0.325"]
"snowzach/gorestapi" ["l"="-16.219,-0.454"]
"gilcrest/go-api-basic" ["l"="-16.219,-0.49"]
"vardius/go-api-boilerplate" ["l"="-16.166,-0.456"]
"victorsteven/Go-JWT-Postgres-Mysql-Restful-API" ["l"="-16.176,-0.424"]
"shijuvar/go-distributed-sys" ["l"="-16.019,-0.454"]
"shijuvar/gokit" ["l"="-15.965,-0.464"]
"mishudark/eventhus" ["l"="-15.965,-0.43"]
"shijuvar/go-distsys" ["l"="-16.001,-0.471"]
"shijuvar/gokit-examples" ["l"="-16.041,-0.47"]
"looplab/eventhorizon" ["l"="-16.015,-0.432"]
"altairsix/eventsource" ["l"="-15.976,-0.404"]
"tinrab/meower" ["l"="-15.99,-0.49"]
"marcusolsson/goddd" ["l"="-13.429,1.279"]
"mmorejon/microservices-docker-go-mongodb" ["l"="-16.096,-0.43"]
"raysonxin/gokit-article-demo" ["l"="-12.282,1.17"]
"tensor-programming/go-kit-tutorial" ["l"="-16.023,-0.528"]
"basvanbeek/opencensus-gokit-example" ["l"="-16.013,-0.492"]
"begmaroman/go-micro-boilerplate" ["l"="-16.146,-0.427"]
"victorsteven/food-app-server" ["l"="-16.13,-0.547"]
"vardius/message-bus" ["l"="-16.23,-0.377"]
"yakuter/ugin" ["l"="-16.205,-0.385"]
"zubroide/go-api-boilerplate" ["l"="-16.166,-0.401"]
"typical-go/typical-rest-server" ["l"="-16.21,-0.475"]
"resotto/goilerplate" ["l"="-16.261,-0.503"]
"eyazici90/go-ddd" ["l"="-16.152,-0.558"]
"qreasio/go-starter-kit" ["l"="-16.126,-0.419"]
"ybkuroki/go-webapp-sample" ["l"="-16.39,-0.454"]
"StarpTech/go-web" ["l"="-16.318,-0.474"]
"nixsolutions/golang-echo-boilerplate" ["l"="-16.461,-0.442"]
"ybkuroki/vuejs-webapp-sample" ["l"="-16.419,-0.442"]
"harlow/go-micro-services" ["l"="-16.073,-0.448"]
"raycad/go-microservices" ["l"="-16.128,-0.456"]
"EwanValentine/shippy" ["l"="-12.478,1.14"]
"micro/examples" ["l"="-12.496,1.147"]
"koding/kite" ["l"="-12.871,1.5"]
"lileio/lile" ["l"="-15.533,0.742"]
"philips/grpc-gateway-example" ["l"="-15.45,0.626"]
"hb-go/micro" ["l"="-12.411,1.116"]
"kujtimiihoxha/kit" ["l"="-12.391,1.186"]
"NYTimes/gizmo" ["l"="-12.891,1.697"]
"grpc-ecosystem/go-grpc-middleware" ["l"="-13.139,1.208"]
"google/go-microservice-helpers" ["l"="-15.452,0.696"]
"vsouza/go-gin-boilerplate" ["l"="-16.324,-0.412"]
"FlowerWrong/awesome-gin" ["l"="-16.342,-0.432"]
"swaggo/gin-swagger" ["l"="-12.995,1.188"]
"appleboy/gin-jwt" ["l"="-12.979,1.171"]
"gin-gonic/examples" ["l"="-13.048,1.099"]
"gin-gonic/contrib" ["l"="-12.93,1.255"]
"create-go-app/fiber-go-template" ["l"="-13.553,0.891"]
"gin-contrib/cors" ["l"="-12.95,1.261"]
"antklim/go-microservices" ["l"="-16.028,-0.401"]
"ru-rocker/gokit-playground" ["l"="-15.996,-0.415"]
"percybolmer/ddd-go" ["l"="-16.116,-0.603"]
"jojoarianto/go-ddd-api" ["l"="-16.154,-0.574"]
"cch123/go-ddd" ["l"="-16.095,-0.634"]
"stackus/ftgogo" ["l"="-16.069,-0.66"]
"karlkeefer/pngr" ["l"="-16.148,-0.353"]
"IsraelAdura/go-postgres-jwt-react-starter" ["l"="-16.104,-0.298"]
"aligoren/go_ecommerce_microservice" ["l"="-16.123,-0.32"]
"el10savio/TODO-Fullstack-App-Go-Gin-Postgres-React" ["l"="-16.128,-0.29"]
"caohoangnam/go-clean-architecture" ["l"="-16.178,-0.48"]
"binalyze/httpreq" ["l"="-16.25,-0.305"]
"MartinHeinz/go-project-blueprint" ["l"="23.524,3.797"]
"err0r500/go-realworld-clean" ["l"="-16.205,-0.542"]
"xesina/golang-echo-realworld-example-app" ["l"="-16.312,-0.554"]
"eddycjy/go-gin-example" ["l"="-12.828,0.949"]
"EDDYCJY/go-gin-example" ["l"="-12.633,1.084"]
"golang-migrate/migrate" ["l"="-13.331,1.287"]
"wesionaryTEAM/go_clean_architecture" ["l"="-16.296,-0.581"]
"Denes-cilwal/clean_gin_api" ["l"="-16.277,-0.586"]
"dipeshdulal/learning-flutter" ["l"="-16.289,-0.562"]
"BinodKafle/BinodKafle" ["l"="-16.287,-0.547"]
"sujit-baniya/fiber-boilerplate" ["l"="-13.584,0.893"]
"dipeshdulal/my-resume" ["l"="-16.281,-0.569"]
"pradipkharal7/nodejs-api-template" ["l"="-16.27,-0.566"]
"resotto/gochk" ["l"="-16.305,-0.516"]
"zhashkevych/todo-app" ["l"="6.532,-24.141"]
"zhashkevych/awesome-backend" ["l"="6.601,-24.149"]
"Creatly/creatly-backend" ["l"="6.543,-24.159"]
"theartofdevel/notes_system" ["l"="6.512,-24.171"]
"gopherschool/http-rest-api" ["l"="6.545,-24.094"]
"zhashkevych/courses-backend" ["l"="-16.098,-0.531"]
"zhashkevych/jewerly-shop-backend" ["l"="6.478,-24.143"]
"eldimious/golang-api-showcase" ["l"="-16.221,-0.535"]
"nurcahyaari/golang-starter" ["l"="-16.182,-0.557"]
"bmf-san/gobel-api" ["l"="-16.21,-0.582"]
"nicholasjackson/building-microservices-youtube" ["l"="-16.087,-0.483"]
"katzien/go-structure-examples" ["l"="-13.498,1.207"]
"techschool/simplebank" ["l"="-13.481,1.142"]
"nicholasjackson/env" ["l"="-16.059,-0.504"]
"tensor-programming/hex-microservice" ["l"="-16.056,-0.566"]
"lotusirous/go-concurrency-patterns" ["l"="-13.405,1.208"]
"shomali11/go-interview" ["l"="-13.385,1.151"]
"nicholasjackson/Building-Microservices-with-Go-Second-Edition" ["l"="-16.056,-0.487"]
"brainattica/golang-jwt-authentication-api-sample" ["l"="-16.217,-0.305"]
"adigunhammedolalekan/go-contacts" ["l"="-16.211,-0.365"]
"go-authboss/authboss" ["l"="-12.947,1.861"]
"adam-hanna/goLang-jwt-auth-example" ["l"="-16.225,-0.253"]
"auth0/go-jwt-middleware" ["l"="-12.866,1.65"]
"manuelkiessling/go-cleanarchitecture" ["l"="-16.162,-0.545"]
"eminetto/talk-microservices-go" ["l"="-16.11,-0.554"]
"victorsteven/Forum-App-Go-Backend" ["l"="-16.131,-0.395"]
"callistaenterprise/goblog" ["l"="-16.041,-0.381"]
"federicoleon/golang-microservices" ["l"="-16.031,-0.322"]
"peterbourgon/go-microservices" ["l"="-16.052,-0.421"]
"gbrayhan/microservices-go" ["l"="-16.186,-0.516"]
"ebosas/microservices" ["l"="-16.199,-0.496"]
"amsokol/go-grpc-http-rest-microservice-tutorial" ["l"="-16.036,-0.5"]
"andrewwebber/cqrs" ["l"="-15.934,-0.427"]
"jetbasrawi/go.cqrs" ["l"="-15.952,-0.408"]
"ThreeDotsLabs/watermill" ["l"="-13.355,1.321"]
"looplab/fsm" ["l"="-12.954,1.335"]
"uber-go/fx" ["l"="-13.308,1.263"]
"lovoo/goka" ["l"="-13.013,1.487"]
"Rhymond/go-money" ["l"="-13.279,1.663"]
"nats-io/nats.go" ["l"="-13.07,1.255"]
"CaptainCodeman/clean-go" ["l"="-16.184,-0.603"]
"sagikazarmark/modern-go-application" ["l"="-13.488,1.333"]
"krzysztofreczek/go-structurizr" ["l"="-16.164,-0.645"]
"deepmap/oapi-codegen" ["l"="-13.437,1.303"]
"victorsteven/food-app-client" ["l"="-16.099,-0.587"]
"powerman/go-service-example" ["l"="-16.203,-0.561"]
"qiangxue/golang-restful-starter-kit" ["l"="-16.182,-0.363"]
"ardanlabs/service" ["l"="-13.501,1.231"]
"ribice/gorsk-gin" ["l"="-16.283,-0.365"]
"ribice/twisk" ["l"="-16.282,-0.343"]
"thockin/go-build-template" ["l"="-13.403,1.345"]
"ribice/glice" ["l"="-12.71,19.633"]
"guardrailsio/awesome-golang-security" ["l"="-13.363,1.519"]
"spy16/droplets" ["l"="-16.255,-0.363"]
"leeprovoost/go-rest-api-template" ["l"="-16.243,-0.49"]
"Fs02/go-todo-backend" ["l"="-16.227,-0.508"]
"yakuter/gpass" ["l"="22.699,-23.613"]
"holmes89/hex-example" ["l"="-16.138,-0.583"]
"iDevoid/stygis" ["l"="-16.136,-0.569"]
"denisbakhtin/ginblog" ["l"="-16.361,-0.368"]
"rahmanfadhil/gin-bookstore" ["l"="-16.377,-0.401"]
"velopert/gin-rest-api-sample" ["l"="-16.39,-0.376"]
"shijuvar/go-web" ["l"="-15.924,-0.468"]
"shijuvar/go-recipes" ["l"="-15.902,-0.479"]
"go-ozzo/ozzo-routing" ["l"="-16.172,-0.296"]
"go-ozzo/ozzo-config" ["l"="-16.162,-0.276"]
"go-ozzo/ozzo-di" ["l"="-16.168,-0.261"]
"go-ozzo/ozzo-log" ["l"="-16.183,-0.269"]
"qiangxue/fasthttp-routing" ["l"="-13.054,1.043"]
"ndabAP/vue-go-example" ["l"="-16.281,-0.227"]
"markcheno/go-vue-starter" ["l"="-16.302,-0.178"]
"benc-uk/vuego-demoapp" ["l"="-16.27,-0.185"]
"tinrab/spidey" ["l"="-15.949,-0.495"]
"tinrab/graphql-realtime-chat" ["l"="-15.906,-0.523"]
"matiasvarela/minesweeper-hex-arch-sample" ["l"="-16.065,-0.603"]
"jfeng45/servicetmpl1" ["l"="-16.052,-0.528"]
"rafael-piovesan/go-rocket-ride" ["l"="-16.027,-0.565"]
"hatajoe/8am" ["l"="-16.094,-0.558"]
"bxcodec/go-clean-arch-grpc" ["l"="-16.039,-0.545"]
"swaggo/echo-swagger" ["l"="-16.373,-0.595"]
"swaggo/swag" ["l"="-13.205,1.192"]
"swaggo/http-swagger" ["l"="-16.421,-0.629"]
"labstack/echox" ["l"="-16.35,-0.617"]
"friendsofgo/gopherapi" ["l"="-16.262,-0.432"]
"blue-jay/blueprint" ["l"="-12.858,2.076"]
"sogko/slumber" ["l"="-12.821,2.074"]
"rs/rest-layer" ["l"="-13.061,1.779"]
"qiangxue/golang-serverless-restapi" ["l"="-16.154,-0.324"]
"jtbonhomme/go-rest-api-boilerplate" ["l"="-16.202,-0.326"]
"victorsteven/Dockerized-Golang-Postgres-Mysql-API" ["l"="-16.152,-0.384"]
"victorsteven/jwt-best-practices" ["l"="-16.223,-0.336"]
"yhagio/go_api_boilerplate" ["l"="-16.194,-0.467"]
"gsvaldevieso/go-dream-architecture" ["l"="-16.188,-0.573"]
"herryg91/go-clean-architecture" ["l"="-16.143,-0.601"]
"pjvds/go-cqrs" ["l"="-15.883,-0.43"]
"micro-plat/hydra" ["l"="-12.597,1.121"]
"micro-in-cn/starter-kit" ["l"="-12.356,1.071"]
"go-kratos/beer-shop" ["l"="-12.617,19.804"]
"jetbasrawi/go.geteventstore" ["l"="-15.925,-0.389"]
"tomkdickinson/hexagonal-cart-service" ["l"="-16.152,-0.619"]
"yehohanan7/flux" ["l"="-15.897,-0.401"]
"eriklupander/go-microservice-eureka" ["l"="-16.017,-0.349"]
"chrisxue815/realworld-aws-lambda-dynamodb-go" ["l"="-16.237,-0.589"]
"eyazici90/go-mediator" ["l"="-16.14,-0.65"]
"AleksK1NG/Go-Kafka-gRPC-MongoDB-microservice" ["l"="-16.072,-0.353"]
"binalyze/logger" ["l"="-16.29,-0.273"]
"netinternet/remoteaddr" ["l"="-16.266,-0.281"]
"victorsteven/gophercon-jwt-repo" ["l"="-16.239,-0.292"]
"golang-crew/Boilerplate-JWT-GO" ["l"="-16.239,-0.316"]
"meysamhadeli/shop-golang-microservices" ["l"="-16.098,-0.459"]
"plutov/packagemain" ["l"="-15.973,-0.372"]
"tinrab/go-tensorflow-image-recognition" ["l"="-15.929,-0.329"]
"qiangxue/go-restful-api" ["l"="-16.294,-0.393"]
"McMenemy/GoDoRP" ["l"="-16.31,-0.371"]
"brainbreaker/rest-and-go" ["l"="-16.274,-0.399"]
"ksckaan1/go-programlama-dili" ["l"="22.764,-23.853"]
"hirotakan/go-cleanarchitecture-sample" ["l"="-16.116,-0.653"]
"jaijiv/handybid" ["l"="-16.166,-0.601"]
"edgeee/buycoins-python" ["l"="28.451,-23.998"]
"nixsolutions/golang-gin-boilerplate" ["l"="-16.487,-0.448"]
"ShkrutDenis/go-migrations" ["l"="-16.485,-0.432"]
"nixsolutions/golang-analyze-tool" ["l"="-16.475,-0.423"]
"bvwells/go-patterns" ["l"="-16.19,-0.657"]
"ismayilmalik/golang-design-patterns" ["l"="-16.215,-0.718"]
"sensorario/go-design-patterns" ["l"="-16.187,-0.704"]
"goioc/di" ["l"="-15.803,-1.962"]
"AleksK1NG/Go-CQRS-EventSourcing-Microservice" ["l"="-16.081,-0.329"]
"AleksK1NG/Go-EventSourcing-CQRS" ["l"="-16.063,-0.322"]
"federicoleon/bookstore_oauth-api" ["l"="-16.009,-0.276"]
"federicoleon/bookstore_oauth-go" ["l"="-16.005,-0.26"]
"federicoleon/bookstore_items-api" ["l"="-15.99,-0.269"]
"federicoleon/bookstore_utils-go" ["l"="-15.995,-0.26"]
"federicoleon/bookstore_users-api" ["l"="-16,-0.285"]
"markpenaranda/echo-gorm" ["l"="-16.336,-0.579"]
"eurie-inc/echo-sample" ["l"="-16.362,-0.559"]
"golangkorea/golang-news" ["l"="45.564,-16.816"]
"victorsteven/Forum-App-React-Frontend" ["l"="-16.119,-0.367"]
"bradtraversy/go_restapi" ["l"="25.505,-24.991"]
"adigunhammedolalekan/cab" ["l"="-16.246,-0.333"]
"savaki/eventsource" ["l"="-15.948,-0.379"]
"dhrp/grpc-rest-go-example" ["l"="-15.995,-0.526"]
"eyazici90/ImGalaxy" ["l"="-16.146,-0.712"]
"eyazici90/OrderContext-EventSourcing" ["l"="-16.144,-0.692"]
"yakuter/gossl" ["l"="-16.32,-0.248"]
"c1982/swe-dashboard" ["l"="-16.35,-0.203"]
"isacikgoz/slices" ["l"="-16.357,-0.234"]
"yusufpapurcu/go-license-checker" ["l"="-16.334,-0.227"]
"yoshinorihisakawa/sample-api-hoop" ["l"="-16.107,-0.694"]
"nakabonne/cleanarchitecture-sample" ["l"="-16.091,-0.684"]
"typical-go/typical-go" ["l"="-16.241,-0.47"]
"stackus/edat" ["l"="-16.048,-0.686"]
"ThreeDotsLabs/event-driven-example" ["l"="-16.29,-0.705"]
"GoTurkiye/cover-generator" ["l"="-16.366,-0.181"]
"eyazici90/Galaxy-Azure" ["l"="-16.139,-0.672"]
"eyazici90/Galaxy-Gateway" ["l"="-16.131,-0.688"]
"eyazici90/Galaxy" ["l"="-16.124,-0.716"]
"mattermost/morph" ["l"="-16.381,-0.222"]
}