digraph G {
"airbnb/aerosolve" -> "airbnb/airpal"
"airbnb/aerosolve" -> "JohnLangford/vowpal_wabbit" ["e"=1]
"airbnb/aerosolve" -> "PredictionIO/PredictionIO" ["e"=1]
"airbnb/aerosolve" -> "airbnb/airflow"
"airbnb/aerosolve" -> "airbnb/AirMapView"
"airbnb/aerosolve" -> "airbnb/caravel"
"airbnb/aerosolve" -> "airbnb/knowledge-repo" ["e"=1]
"airbnb/aerosolve" -> "linkedin/pinot"
"airbnb/aerosolve" -> "clips/pattern" ["e"=1]
"airbnb/aerosolve" -> "haifengl/smile" ["e"=1]
"airbnb/aerosolve" -> "johnmyleswhite/ML_for_Hackers" ["e"=1]
"airbnb/aerosolve" -> "hangtwenty/dive-into-machine-learning" ["e"=1]
"airbnb/aerosolve" -> "numenta/nupic" ["e"=1]
"airbnb/aerosolve" -> "scalanlp/breeze" ["e"=1]
"airbnb/aerosolve" -> "airbnb/billow"
"apache/flink" -> "zhisheng17/flink-learning"
"apache/flink" -> "apache/spark"
"apache/flink" -> "apache/kafka" ["e"=1]
"apache/flink" -> "flink-china/flink-training-course"
"apache/flink" -> "apache/hadoop"
"apache/flink" -> "alibaba/arthas" ["e"=1]
"apache/flink" -> "alibaba/canal" ["e"=1]
"apache/flink" -> "alibaba/DataX" ["e"=1]
"apache/flink" -> "apache/zookeeper" ["e"=1]
"apache/flink" -> "apache/pulsar" ["e"=1]
"apache/flink" -> "netty/netty" ["e"=1]
"apache/flink" -> "apache/hbase"
"apache/flink" -> "apache/hive"
"apache/flink" -> "ververica/flink-cdc-connectors"
"apache/flink" -> "prestodb/presto"
"tomwhite/hadoop-book" -> "databricks/learning-spark"
"tomwhite/hadoop-book" -> "larsgeorge/hbase-book" ["e"=1]
"tomwhite/hadoop-book" -> "apache/hadoop"
"tomwhite/hadoop-book" -> "JerryLead/SparkInternals"
"tomwhite/hadoop-book" -> "apache/hive"
"tomwhite/hadoop-book" -> "apache/hbase"
"tomwhite/hadoop-book" -> "cloudera/hue"
"tomwhite/hadoop-book" -> "apache/hadoop-common"
"tomwhite/hadoop-book" -> "databricks/Spark-The-Definitive-Guide"
"tomwhite/hadoop-book" -> "apache/storm"
"tomwhite/hadoop-book" -> "sryza/aas"
"tomwhite/hadoop-book" -> "alexholmes/hadoop-book"
"tomwhite/hadoop-book" -> "apache/spark"
"tomwhite/hadoop-book" -> "apache/zookeeper" ["e"=1]
"tomwhite/hadoop-book" -> "lw-lin/CoolplaySpark"
"apache/lucene-solr" -> "apache/hbase"
"apache/lucene-solr" -> "apache/zookeeper" ["e"=1]
"apache/lucene-solr" -> "apache/lucene"
"apache/lucene-solr" -> "apache/hive"
"apache/lucene-solr" -> "apache/cassandra"
"apache/lucene-solr" -> "apache/solr"
"apache/lucene-solr" -> "apache/nutch" ["e"=1]
"apache/lucene-solr" -> "apache/tomcat" ["e"=1]
"apache/lucene-solr" -> "apache/storm"
"apache/lucene-solr" -> "apache/hadoop"
"apache/lucene-solr" -> "apache/kafka" ["e"=1]
"apache/lucene-solr" -> "apache/mahout"
"apache/lucene-solr" -> "elastic/elasticsearch" ["e"=1]
"apache/lucene-solr" -> "apache/activemq" ["e"=1]
"apache/lucene-solr" -> "apache/maven" ["e"=1]
"digoal/blog" -> "greenplum-db/gpdb"
"digoal/blog" -> "postgres-cn/pgdoc-cn" ["e"=1]
"digoal/blog" -> "alibaba/DataX" ["e"=1]
"digoal/blog" -> "pingcap/tidb" ["e"=1]
"digoal/blog" -> "postgres/postgres" ["e"=1]
"digoal/blog" -> "ty4z2008/Qix" ["e"=1]
"digoal/blog" -> "Vonng/ddia" ["e"=1]
"digoal/blog" -> "alibaba/canal" ["e"=1]
"digoal/blog" -> "XiaoMi/soar" ["e"=1]
"digoal/blog" -> "alibaba/AliSQL" ["e"=1]
"digoal/blog" -> "Meituan-Dianping/SQLAdvisor" ["e"=1]
"digoal/blog" -> "alibaba/otter" ["e"=1]
"digoal/blog" -> "rootsongjc/kubernetes-handbook" ["e"=1]
"digoal/blog" -> "citusdata/citus" ["e"=1]
"digoal/blog" -> "chai2010/advanced-go-programming-book" ["e"=1]
"cloudera/hue" -> "apache/hive"
"cloudera/hue" -> "azkaban/azkaban"
"cloudera/hue" -> "cloudera/Impala"
"cloudera/hue" -> "apache/ambari"
"cloudera/hue" -> "apache/zeppelin"
"cloudera/hue" -> "prestodb/presto"
"cloudera/hue" -> "apache/hbase"
"cloudera/hue" -> "apache/kylin"
"cloudera/hue" -> "yahoo/kafka-manager" ["e"=1]
"cloudera/hue" -> "apache/flume"
"cloudera/hue" -> "DTStack/flinkx"
"cloudera/hue" -> "alibaba/DataX" ["e"=1]
"cloudera/hue" -> "druid-io/druid"
"cloudera/hue" -> "spark-jobserver/spark-jobserver"
"cloudera/hue" -> "apache/oozie"
"databricks-academy/data-engineering-with-databricks" -> "databricks-academy/advanced-data-engineering-with-databricks"
"databricks-academy/data-engineering-with-databricks" -> "databricks-academy/apache-spark-programming-with-databricks"
"databricks-academy/data-engineering-with-databricks" -> "databricks-academy/data-analysis-with-databricks-sql"
"databricks-academy/data-engineering-with-databricks" -> "terra-money/core" ["e"=1]
"databricks-academy/data-engineering-with-databricks" -> "databricks-academy/just-enough-python-for-spark"
"databricks-academy/data-engineering-with-databricks" -> "databricks/tech-talks"
"databricks-academy/data-engineering-with-databricks" -> "hurtn/datalake-ADLS-access-patterns-with-Databricks"
"databricks-academy/data-engineering-with-databricks" -> "hwang-db/db-common-assets"
"databricks-academy/data-engineering-with-databricks" -> "databrickslabs/overwatch"
"databricks-academy/data-engineering-with-databricks" -> "databricks/delta-live-tables-notebooks"
"databricks-academy/data-engineering-with-databricks" -> "databricks-academy/ml-in-production"
"databricks-academy/data-engineering-with-databricks" -> "Azure/AzureDatabricksBestPractices"
"databricks-academy/data-engineering-with-databricks" -> "Azure-Samples/modern-data-warehouse-dataops" ["e"=1]
"databricks-academy/data-engineering-with-databricks" -> "MicrosoftLearning/DP-203-Data-Engineer" ["e"=1]
"databricks-academy/data-engineering-with-databricks" -> "databricks-academy/data-engineer-learning-path"
"databricks/spark-deep-learning" -> "yahoo/TensorFlowOnSpark"
"databricks/spark-deep-learning" -> "databricks/tensorframes"
"databricks/spark-deep-learning" -> "databricks/spark-sklearn"
"databricks/spark-deep-learning" -> "maxpumperla/elephas"
"databricks/spark-deep-learning" -> "intel-analytics/BigDL"
"databricks/spark-deep-learning" -> "Azure/mmlspark"
"databricks/spark-deep-learning" -> "cerndb/dist-keras"
"databricks/spark-deep-learning" -> "combust/mleap"
"databricks/spark-deep-learning" -> "databricks/koalas" ["e"=1]
"databricks/spark-deep-learning" -> "JohnSnowLabs/spark-nlp" ["e"=1]
"databricks/spark-deep-learning" -> "jaceklaskowski/mastering-apache-spark-book"
"databricks/spark-deep-learning" -> "databricks/mlflow"
"databricks/spark-deep-learning" -> "tensorflow/ecosystem" ["e"=1]
"databricks/spark-deep-learning" -> "endymecy/spark-ml-source-analysis"
"databricks/spark-deep-learning" -> "databricks/scala-style-guide" ["e"=1]
"susanli2016/Data-Analysis-with-R" -> "susanli2016/Statistics-with-R-Specialization"
"susanli2016/Data-Analysis-with-R" -> "justmarkham/dplyr-tutorial"
"susanli2016/Data-Analysis-with-R" -> "susanli2016/PySpark-and-MLlib"
"wiibrew/DeepLearningCourseCodes" -> "ionvision/DeepLearningCourseCodes"
"wiibrew/DeepLearningCourseCodes" -> "wiibrew/wiibrew.github.io"
"wiibrew/DeepLearningCourseCodes" -> "wiibrew/YOLO_tensorflow"
"intel-analytics/BigDL" -> "intel-analytics/analytics-zoo"
"intel-analytics/BigDL" -> "yahoo/TensorFlowOnSpark"
"intel-analytics/BigDL" -> "databricks/spark-deep-learning"
"intel-analytics/BigDL" -> "databricks/tensorframes"
"intel-analytics/BigDL" -> "Azure/mmlspark"
"intel-analytics/BigDL" -> "scalanlp/breeze" ["e"=1]
"intel-analytics/BigDL" -> "spark-jobserver/spark-jobserver"
"intel-analytics/BigDL" -> "maxpumperla/elephas"
"intel-analytics/BigDL" -> "Tencent/angel"
"intel-analytics/BigDL" -> "combust/mleap"
"intel-analytics/BigDL" -> "yahoo/CaffeOnSpark"
"intel-analytics/BigDL" -> "JohnSnowLabs/spark-nlp" ["e"=1]
"intel-analytics/BigDL" -> "dmlc/mxnet" ["e"=1]
"intel-analytics/BigDL" -> "intel-analytics/BigDL-Tutorials"
"intel-analytics/BigDL" -> "uber/horovod" ["e"=1]
"WeiYe-Jing/datax-web" -> "alibaba/DataX" ["e"=1]
"WeiYe-Jing/datax-web" -> "DTStack/flinkx"
"WeiYe-Jing/datax-web" -> "WeBankFinTech/DataSphereStudio"
"WeiYe-Jing/datax-web" -> "WeiYe-Jing/datax-web-ui"
"WeiYe-Jing/datax-web" -> "ververica/flink-cdc-connectors"
"WeiYe-Jing/datax-web" -> "edp963/davinci"
"WeiYe-Jing/datax-web" -> "dataease/dataease" ["e"=1]
"WeiYe-Jing/datax-web" -> "pentaho/pentaho-kettle" ["e"=1]
"WeiYe-Jing/datax-web" -> "apache/incubator-dolphinscheduler"
"WeiYe-Jing/datax-web" -> "zhisheng17/flink-learning"
"WeiYe-Jing/datax-web" -> "zhp8341/flink-streaming-platform-web"
"WeiYe-Jing/datax-web" -> "streamxhub/streamx"
"WeiYe-Jing/datax-web" -> "DataLinkDC/dlink"
"WeiYe-Jing/datax-web" -> "apache/dolphinscheduler"
"WeiYe-Jing/datax-web" -> "DTStack/flinkStreamSQL"
"apache/spark" -> "apache/hadoop"
"apache/spark" -> "apache/flink"
"apache/spark" -> "apache/kafka" ["e"=1]
"apache/spark" -> "scala/scala" ["e"=1]
"apache/spark" -> "elastic/elasticsearch" ["e"=1]
"apache/spark" -> "apache/hive"
"apache/spark" -> "apache/hbase"
"apache/spark" -> "akka/akka" ["e"=1]
"apache/spark" -> "scikit-learn/scikit-learn" ["e"=1]
"apache/spark" -> "apache/zookeeper" ["e"=1]
"apache/spark" -> "netty/netty" ["e"=1]
"apache/spark" -> "google/guava" ["e"=1]
"apache/spark" -> "apache/storm"
"apache/spark" -> "dmlc/xgboost" ["e"=1]
"apache/spark" -> "apache/airflow" ["e"=1]
"ExpediaGroup/mittens" -> "HotelsDotCom/data-highway"
"HotelsDotCom/flyte" -> "HotelsDotCom/kube-aws"
"HotelsDotCom/flyte" -> "HotelsDotCom/flyte-client"
"HotelsDotCom/flyte" -> "HotelsDotCom/flyte-shell"
"RedisLabs/spark-redis" -> "hortonworks-spark/shc"
"RedisLabs/spark-redis" -> "elastic/elasticsearch-hadoop"
"RedisLabs/spark-redis" -> "debasishg/scala-redis" ["e"=1]
"RedisLabs/spark-redis" -> "spark-jobserver/spark-jobserver"
"RedisLabs/spark-redis" -> "lw-lin/CoolplaySpark"
"RedisLabs/spark-redis" -> "databricks/tensorframes"
"RedisLabs/spark-redis" -> "allwefantasy/streamingpro"
"RedisLabs/spark-redis" -> "Huawei-Spark/Spark-SQL-on-HBase"
"RedisLabs/spark-redis" -> "cloudera/livy"
"RedisLabs/spark-redis" -> "jaceklaskowski/spark-structured-streaming-book"
"RedisLabs/spark-redis" -> "combust/mleap"
"RedisLabs/spark-redis" -> "databricks/spark-avro"
"RedisLabs/spark-redis" -> "datastax/spark-cassandra-connector"
"RedisLabs/spark-redis" -> "endymecy/spark-ml-source-analysis"
"RedisLabs/spark-redis" -> "apache/hbase-connectors"
"apache/samza" -> "apache/samza-hello-samza"
"apache/samza" -> "apache/tez"
"apache/samza" -> "apache/drill"
"apache/samza" -> "linkedin/gobblin"
"apache/samza" -> "apache/avro"
"apache/samza" -> "apache/storm"
"apache/samza" -> "apache/oozie"
"apache/samza" -> "apache/parquet-mr"
"apache/samza" -> "HuaweiBigData/StreamCQL"
"apache/samza" -> "apache/incubator-heron"
"apache/samza" -> "apache/incubator-beam"
"apache/samza" -> "twitter/heron"
"apache/samza" -> "apache/flume"
"apache/samza" -> "apache/pig"
"apache/samza" -> "apache/incubator-ratis" ["e"=1]
"pravega/pravega" -> "apache/bookkeeper" ["e"=1]
"pravega/pravega" -> "pravega/flink-connectors"
"pravega/pravega" -> "apache/incubator-hudi"
"pravega/pravega" -> "uber/AthenaX"
"pravega/pravega" -> "apache/incubator-pinot"
"pravega/pravega" -> "apache/bahir-flink"
"pravega/pravega" -> "apache/flink-table-store"
"pravega/pravega" -> "DTStack/flinkStreamSQL"
"pravega/pravega" -> "alibaba/Alink"
"pravega/pravega" -> "apache/calcite"
"pravega/pravega" -> "Qihoo360/Quicksql"
"pravega/pravega" -> "apache/iceberg"
"pravega/pravega" -> "apache/pulsar" ["e"=1]
"pravega/pravega" -> "delta-io/delta"
"pravega/pravega" -> "apache/flink-statefun"
"sql-machine-learning/sqlflow" -> "Qihoo360/Quicksql"
"sql-machine-learning/sqlflow" -> "sql-machine-learning/elasticdl" ["e"=1]
"sql-machine-learning/sqlflow" -> "alibaba/Alink"
"sql-machine-learning/sqlflow" -> "allwefantasy/streamingpro"
"sql-machine-learning/sqlflow" -> "apache/calcite"
"sql-machine-learning/sqlflow" -> "apache/incubator-dolphinscheduler"
"sql-machine-learning/sqlflow" -> "DTStack/flinkx"
"sql-machine-learning/sqlflow" -> "alibaba/x-deeplearning" ["e"=1]
"sql-machine-learning/sqlflow" -> "apache/incubator-doris"
"sql-machine-learning/sqlflow" -> "InterestingLab/waterdrop"
"sql-machine-learning/sqlflow" -> "edp963/davinci"
"sql-machine-learning/sqlflow" -> "delta-io/delta"
"sql-machine-learning/sqlflow" -> "flink-china/flink-training-course"
"sql-machine-learning/sqlflow" -> "DTStack/flinkStreamSQL"
"sql-machine-learning/sqlflow" -> "WeBankFinTech/DataSphereStudio"
"Tencent/angel" -> "dmlc/ps-lite" ["e"=1]
"Tencent/angel" -> "ICT-BDA/EasyML"
"Tencent/angel" -> "alibaba/x-deeplearning" ["e"=1]
"Tencent/angel" -> "yahoo/TensorFlowOnSpark"
"Tencent/angel" -> "Qihoo360/XLearning"
"Tencent/angel" -> "aksnzhy/xlearn" ["e"=1]
"Tencent/angel" -> "guestwalk/libffm" ["e"=1]
"Tencent/angel" -> "wnzhang/rtb-papers" ["e"=1]
"Tencent/angel" -> "endymecy/spark-ml-source-analysis"
"Tencent/angel" -> "cnkuangshi/LightCTR" ["e"=1]
"Tencent/angel" -> "Microsoft/LightGBM" ["e"=1]
"Tencent/angel" -> "guestwalk/kaggle-2014-criteo" ["e"=1]
"Tencent/angel" -> "alibaba/euler" ["e"=1]
"Tencent/angel" -> "wzhe06/Ad-papers" ["e"=1]
"Tencent/angel" -> "baidu/Familia" ["e"=1]
"heibaiying/spring-samples-for-all" -> "heibaiying/Full-Stack-Notes"
"ICT-BDA/EasyML" -> "Tencent/angel"
"ICT-BDA/EasyML" -> "allwefantasy/streamingpro"
"ICT-BDA/EasyML" -> "tobegit3hub/deep_recommend_system" ["e"=1]
"ICT-BDA/EasyML" -> "guestwalk/kaggle-2014-criteo" ["e"=1]
"ICT-BDA/EasyML" -> "faneshion/MatchZoo" ["e"=1]
"ICT-BDA/EasyML" -> "samdeeplearning/The-Terrible-Deep-Learning-List" ["e"=1]
"ICT-BDA/EasyML" -> "Qihoo360/XLearning"
"ICT-BDA/EasyML" -> "yahoo/TensorFlowOnSpark"
"ICT-BDA/EasyML" -> "memect/hao" ["e"=1]
"ICT-BDA/EasyML" -> "baidu/Familia" ["e"=1]
"ICT-BDA/EasyML" -> "mli/gluon-tutorials-zh" ["e"=1]
"ICT-BDA/EasyML" -> "TalkingData/Fregata" ["e"=1]
"ICT-BDA/EasyML" -> "koth/kcws" ["e"=1]
"ICT-BDA/EasyML" -> "aksnzhy/xlearn" ["e"=1]
"ICT-BDA/EasyML" -> "JustFollowUs/Natural-Language-Processing" ["e"=1]
"josonle/Coding-Now" -> "realguoshuai/hadoop_study"
"josonle/Coding-Now" -> "WadeStack/BigDataIE"
"josonle/Coding-Now" -> "sunnyandgood/BigData"
"josonle/Coding-Now" -> "CheckChe0803/BigData-Interview"
"josonle/Coding-Now" -> "oeljeklaus-you/UserActionAnalyzePlatform"
"josonle/Coding-Now" -> "monsonlee/BigData"
"josonle/Coding-Now" -> "josonle/BigData-Learning"
"josonle/Coding-Now" -> "chu888chu888/HadoopAndSparkDataStudy"
"josonle/Coding-Now" -> "Thpffcj/BigData-Getting-Started"
"josonle/Coding-Now" -> "Dr11ft/BigDataGuide"
"josonle/Coding-Now" -> "SwordfallYeung/Interview_BigData"
"josonle/Coding-Now" -> "LuckyZXL2016/News_Spark"
"josonle/Coding-Now" -> "wangzhiwubigdata/God-Of-BigData"
"josonle/Coding-Now" -> "weiweifan/Big-Data-Resources"
"josonle/Coding-Now" -> "gingerredjade/flink-userportrait-main"
"authorwlh/alldata" -> "birdLark/LarkMidTable"
"didi/Logi-KafkaManager" -> "didi/nightingale" ["e"=1]
"didi/Logi-KafkaManager" -> "smartloli/kafka-eagle" ["e"=1]
"didi/Logi-KafkaManager" -> "zhp8341/flink-streaming-platform-web"
"didi/Logi-KafkaManager" -> "streamxhub/streamx"
"didi/Logi-KafkaManager" -> "DTStack/flinkx"
"didi/Logi-KafkaManager" -> "WeiYe-Jing/datax-web"
"didi/Logi-KafkaManager" -> "xaecbd/KafkaCenter"
"didi/Logi-KafkaManager" -> "meshplus/bitxhub"
"didi/Logi-KafkaManager" -> "vran-dev/PrettyZoo" ["e"=1]
"didi/Logi-KafkaManager" -> "apache/incubator-dolphinscheduler"
"didi/Logi-KafkaManager" -> "yahoo/CMAK" ["e"=1]
"didi/Logi-KafkaManager" -> "InterestingLab/waterdrop"
"didi/Logi-KafkaManager" -> "Qihoo360/Quicksql"
"didi/Logi-KafkaManager" -> "ververica/flink-cdc-connectors"
"didi/Logi-KafkaManager" -> "erda-project/erda" ["e"=1]
"greenplum-db/gpdb" -> "digoal/blog"
"greenplum-db/gpdb" -> "greenplum-db/gporca" ["e"=1]
"greenplum-db/gpdb" -> "citusdata/citus" ["e"=1]
"greenplum-db/gpdb" -> "postgres/postgres" ["e"=1]
"greenplum-db/gpdb" -> "prestodb/presto"
"greenplum-db/gpdb" -> "apache/incubator-doris"
"greenplum-db/gpdb" -> "apache/kylin"
"greenplum-db/gpdb" -> "yandex/ClickHouse"
"greenplum-db/gpdb" -> "oceanbase/oceanbase" ["e"=1]
"greenplum-db/gpdb" -> "apache/calcite"
"greenplum-db/gpdb" -> "alibaba/DataX" ["e"=1]
"greenplum-db/gpdb" -> "pingcap/tidb" ["e"=1]
"greenplum-db/gpdb" -> "StarRocks/starrocks"
"greenplum-db/gpdb" -> "apache/incubator-hawq"
"greenplum-db/gpdb" -> "pentaho/pentaho-kettle" ["e"=1]
"zhisheng17/flink-learning" -> "flink-china/flink-training-course"
"zhisheng17/flink-learning" -> "apache/flink"
"zhisheng17/flink-learning" -> "wangzhiwubigdata/God-Of-BigData"
"zhisheng17/flink-learning" -> "heibaiying/BigData-Notes" ["e"=1]
"zhisheng17/flink-learning" -> "CheckChe0803/flink-recommandSystem-demo"
"zhisheng17/flink-learning" -> "DTStack/flinkx"
"zhisheng17/flink-learning" -> "ververica/flink-cdc-connectors"
"zhisheng17/flink-learning" -> "DTStack/flinkStreamSQL"
"zhisheng17/flink-learning" -> "alibaba/DataX" ["e"=1]
"zhisheng17/flink-learning" -> "alibaba/canal" ["e"=1]
"zhisheng17/flink-learning" -> "alibaba/arthas" ["e"=1]
"zhisheng17/flink-learning" -> "xuxueli/xxl-job" ["e"=1]
"zhisheng17/flink-learning" -> "qiurunze123/miaosha" ["e"=1]
"zhisheng17/flink-learning" -> "alibaba/Alink"
"zhisheng17/flink-learning" -> "xkcoding/spring-boot-demo" ["e"=1]
"zhp8341/flink-streaming-platform-web" -> "streamxhub/streamx"
"zhp8341/flink-streaming-platform-web" -> "DataLinkDC/dlink"
"zhp8341/flink-streaming-platform-web" -> "DTStack/flinkStreamSQL"
"zhp8341/flink-streaming-platform-web" -> "ververica/flink-cdc-connectors"
"zhp8341/flink-streaming-platform-web" -> "DTStack/flinkx"
"zhp8341/flink-streaming-platform-web" -> "ververica/flink-sql-gateway"
"zhp8341/flink-streaming-platform-web" -> "wxgzgl/LarkMidTable"
"zhp8341/flink-streaming-platform-web" -> "hairless/plink"
"zhp8341/flink-streaming-platform-web" -> "InterestingLab/waterdrop"
"zhp8341/flink-streaming-platform-web" -> "flink-china/flink-training-course"
"zhp8341/flink-streaming-platform-web" -> "apache/bahir-flink"
"zhp8341/flink-streaming-platform-web" -> "collabH/repository"
"zhp8341/flink-streaming-platform-web" -> "WeBankFinTech/DataSphereStudio"
"zhp8341/flink-streaming-platform-web" -> "Qihoo360/Quicksql"
"zhp8341/flink-streaming-platform-web" -> "intsmaze/flink-boot" ["e"=1]
"airbnb/binaryalert" -> "airbnb/bugsnag-android"
"airbnb/binaryalert" -> "airbnb/alerts"
"airbnb/binaryalert" -> "airbnb/brace"
"airbnb/binaryalert" -> "airbnb/billow"
"airbnb/binaryalert" -> "airbnb/buck"
"airbnb/binaryalert" -> "airbnb/butterknife"
"airbnb/binaryalert" -> "airbnb/bossbat"
"airbnb/binaryalert" -> "airbnb/aws-cli"
"airbnb/binaryalert" -> "airbnb/brakeman"
"airbnb/binaryalert" -> "airbnb/android-mapviewballoons"
"airbnb/binaryalert" -> "airbnb/appear"
"airbnb/binaryalert" -> "airbnb/apollo-android"
"airbnb/binaryalert" -> "airbnb/apple-tv-auth"
"airbnb/binaryalert" -> "airbnb/audited"
"airbnb/binaryalert" -> "airbnb/chancery"
"ljygz/Flink-CEPplus" -> "ljygz/flink1.8-analyse"
"apache/nifi" -> "jfrazee/awesome-nifi" ["e"=1]
"apache/nifi" -> "Teradata/kylo" ["e"=1]
"apache/nifi" -> "apache/zeppelin"
"apache/nifi" -> "apache/kylin"
"apache/nifi" -> "apache/calcite"
"apache/nifi" -> "apache/atlas" ["e"=1]
"apache/nifi" -> "apache/ambari"
"apache/nifi" -> "apache/hive"
"apache/nifi" -> "prestodb/presto"
"apache/nifi" -> "debezium/debezium" ["e"=1]
"apache/nifi" -> "azkaban/azkaban"
"apache/nifi" -> "apache/ignite"
"apache/nifi" -> "apache/iceberg"
"apache/nifi" -> "streamsets/datacollector"
"apache/nifi" -> "apache/beam"
"Azure/mmlspark" -> "yahoo/TensorFlowOnSpark"
"Azure/mmlspark" -> "databricks/spark-deep-learning"
"Azure/mmlspark" -> "combust/mleap"
"Azure/mmlspark" -> "intel-analytics/BigDL"
"Azure/mmlspark" -> "databricks/koalas" ["e"=1]
"Azure/mmlspark" -> "salesforce/TransmogrifAI" ["e"=1]
"Azure/mmlspark" -> "JohnSnowLabs/spark-nlp" ["e"=1]
"Azure/mmlspark" -> "endymecy/spark-ml-source-analysis"
"Azure/mmlspark" -> "Microsoft/LightGBM" ["e"=1]
"Azure/mmlspark" -> "databricks/spark-sklearn"
"Azure/mmlspark" -> "Featuretools/featuretools" ["e"=1]
"Azure/mmlspark" -> "scalanlp/breeze" ["e"=1]
"Azure/mmlspark" -> "tensorflow/ecosystem" ["e"=1]
"Azure/mmlspark" -> "aksnzhy/xlearn" ["e"=1]
"Azure/mmlspark" -> "databricks/mlflow"
"awesome-spark/awesome-spark" -> "awesome-spark/spark-gotchas"
"awesome-spark/awesome-spark" -> "youngwookim/awesome-hadoop"
"awesome-spark/awesome-spark" -> "manuzhang/awesome-streaming" ["e"=1]
"awesome-spark/awesome-spark" -> "igorbarinov/awesome-data-engineering" ["e"=1]
"awesome-spark/awesome-spark" -> "MrPowers/spark-daria"
"awesome-spark/awesome-spark" -> "spark-jobserver/spark-jobserver"
"awesome-spark/awesome-spark" -> "databricks/spark-deep-learning"
"awesome-spark/awesome-spark" -> "databricks/scala-style-guide" ["e"=1]
"awesome-spark/awesome-spark" -> "databricks/Spark-The-Definitive-Guide"
"awesome-spark/awesome-spark" -> "jadianes/spark-py-notebooks"
"awesome-spark/awesome-spark" -> "japila-books/apache-spark-internals"
"awesome-spark/awesome-spark" -> "spark-notebook/spark-notebook"
"awesome-spark/awesome-spark" -> "qubole/sparklens"
"awesome-spark/awesome-spark" -> "holdenk/spark-testing-base"
"awesome-spark/awesome-spark" -> "JerryLead/SparkInternals"
"databricks/learning-spark" -> "sryza/aas"
"databricks/learning-spark" -> "JerryLead/SparkInternals"
"databricks/learning-spark" -> "lw-lin/CoolplaySpark"
"databricks/learning-spark" -> "tomwhite/hadoop-book"
"databricks/learning-spark" -> "databricks/Spark-The-Definitive-Guide"
"databricks/learning-spark" -> "databricks/scala-style-guide" ["e"=1]
"databricks/learning-spark" -> "spark-jobserver/spark-jobserver"
"databricks/learning-spark" -> "apache/spark"
"databricks/learning-spark" -> "databricks/reference-apps"
"databricks/learning-spark" -> "databricks/spark-deep-learning"
"databricks/learning-spark" -> "yahoo/TensorFlowOnSpark"
"databricks/learning-spark" -> "databricks/spark-csv"
"databricks/learning-spark" -> "endymecy/spark-ml-source-analysis"
"databricks/learning-spark" -> "mahmoudparsian/data-algorithms-book"
"databricks/learning-spark" -> "andypetrella/spark-notebook"
"databricks/spark-csv" -> "databricks/spark-avro"
"databricks/spark-csv" -> "andypetrella/spark-notebook"
"databricks/spark-csv" -> "spark-jobserver/spark-jobserver"
"databricks/spark-csv" -> "databricks/spark-redshift" ["e"=1]
"databricks/spark-csv" -> "databricks/tensorframes"
"databricks/spark-csv" -> "apache/incubator-zeppelin"
"databricks/spark-csv" -> "databricks/scala-style-guide" ["e"=1]
"databricks/spark-csv" -> "databricks/learning-spark"
"databricks/spark-csv" -> "datastax/spark-cassandra-connector"
"databricks/spark-csv" -> "holdenk/spark-testing-base"
"databricks/spark-csv" -> "databricks/spark-knowledgebase"
"databricks/spark-csv" -> "harsha2010/magellan" ["e"=1]
"databricks/spark-csv" -> "cloudera/livy"
"databricks/spark-csv" -> "databricks/reference-apps"
"databricks/spark-csv" -> "amplab-extras/SparkR-pkg" ["e"=1]
"datastax/spark-cassandra-connector" -> "killrweather/killrweather"
"datastax/spark-cassandra-connector" -> "datastax/java-driver" ["e"=1]
"datastax/spark-cassandra-connector" -> "spark-jobserver/spark-jobserver"
"datastax/spark-cassandra-connector" -> "datastax/python-driver" ["e"=1]
"datastax/spark-cassandra-connector" -> "andypetrella/spark-notebook"
"datastax/spark-cassandra-connector" -> "pcmanus/ccm" ["e"=1]
"datastax/spark-cassandra-connector" -> "apache/cassandra"
"datastax/spark-cassandra-connector" -> "Stratio/cassandra-lucene-index" ["e"=1]
"datastax/spark-cassandra-connector" -> "databricks/spark-avro"
"datastax/spark-cassandra-connector" -> "holdenk/spark-testing-base"
"datastax/spark-cassandra-connector" -> "databricks/spark-csv"
"datastax/spark-cassandra-connector" -> "json4s/json4s" ["e"=1]
"datastax/spark-cassandra-connector" -> "scalanlp/breeze" ["e"=1]
"datastax/spark-cassandra-connector" -> "jsevellec/cassandra-unit" ["e"=1]
"datastax/spark-cassandra-connector" -> "databricks/reference-apps"
"intel-analytics/BigDL-Tutorials" -> "intel-analytics/BigDL-core"
"jaceklaskowski/mastering-apache-spark-book" -> "jaceklaskowski/mastering-spark-sql-book"
"jaceklaskowski/mastering-apache-spark-book" -> "jaceklaskowski/spark-structured-streaming-book"
"jaceklaskowski/mastering-apache-spark-book" -> "jaceklaskowski/spark-workshop"
"jaceklaskowski/mastering-apache-spark-book" -> "high-performance-spark/high-performance-spark-examples"
"jaceklaskowski/mastering-apache-spark-book" -> "ColZer/DigAndBuried"
"jaceklaskowski/mastering-apache-spark-book" -> "databricks/spark-deep-learning"
"jaceklaskowski/mastering-apache-spark-book" -> "lw-lin/CoolplaySpark"
"jaceklaskowski/mastering-apache-spark-book" -> "holdenk/spark-testing-base"
"jaceklaskowski/mastering-apache-spark-book" -> "databricks/spark-sql-perf"
"jaceklaskowski/mastering-apache-spark-book" -> "LucaCanali/sparkMeasure"
"jaceklaskowski/mastering-apache-spark-book" -> "spark-notebook/spark-notebook"
"jaceklaskowski/mastering-apache-spark-book" -> "linkedin/dr-elephant"
"jaceklaskowski/mastering-apache-spark-book" -> "sryza/spark-timeseries"
"jaceklaskowski/mastering-apache-spark-book" -> "databricks/spark-csv"
"jaceklaskowski/mastering-apache-spark-book" -> "allwefantasy/streamingpro"
"yahoo/CaffeOnSpark" -> "amplab/SparkNet"
"yahoo/CaffeOnSpark" -> "yahoo/TensorFlowOnSpark"
"yahoo/CaffeOnSpark" -> "databricks/tensorframes"
"yahoo/CaffeOnSpark" -> "dirkneumann/deepdist"
"yahoo/CaffeOnSpark" -> "h2oai/sparkling-water"
"yahoo/CaffeOnSpark" -> "intel-analytics/BigDL"
"yahoo/CaffeOnSpark" -> "Microsoft/DMTK" ["e"=1]
"yahoo/CaffeOnSpark" -> "dmlc/mxnet" ["e"=1]
"yahoo/CaffeOnSpark" -> "fluxcapacitor/pipeline"
"yahoo/CaffeOnSpark" -> "jay-mahadeokar/pynetbuilder" ["e"=1]
"yahoo/CaffeOnSpark" -> "adatao/tensorspark"
"yahoo/CaffeOnSpark" -> "maxpumperla/elephas"
"yahoo/CaffeOnSpark" -> "baidu/Paddle" ["e"=1]
"yahoo/CaffeOnSpark" -> "apache/incubator-zeppelin"
"yahoo/CaffeOnSpark" -> "yahoo/open_nsfw" ["e"=1]
"yahoo/TensorFlowOnSpark" -> "databricks/spark-deep-learning"
"yahoo/TensorFlowOnSpark" -> "intel-analytics/BigDL"
"yahoo/TensorFlowOnSpark" -> "databricks/tensorframes"
"yahoo/TensorFlowOnSpark" -> "tensorflow/ecosystem" ["e"=1]
"yahoo/TensorFlowOnSpark" -> "maxpumperla/elephas"
"yahoo/TensorFlowOnSpark" -> "yahoo/CaffeOnSpark"
"yahoo/TensorFlowOnSpark" -> "Azure/mmlspark"
"yahoo/TensorFlowOnSpark" -> "endymecy/spark-ml-source-analysis"
"yahoo/TensorFlowOnSpark" -> "Tencent/angel"
"yahoo/TensorFlowOnSpark" -> "uber/horovod" ["e"=1]
"yahoo/TensorFlowOnSpark" -> "alibaba/x-deeplearning" ["e"=1]
"yahoo/TensorFlowOnSpark" -> "tensorflow/serving" ["e"=1]
"yahoo/TensorFlowOnSpark" -> "databricks/spark-sklearn"
"yahoo/TensorFlowOnSpark" -> "JerryLead/SparkInternals"
"yahoo/TensorFlowOnSpark" -> "scalanlp/breeze" ["e"=1]
"airbnb/caravel" -> "druid-io/druid"
"airbnb/caravel" -> "airbnb/airflow"
"airbnb/caravel" -> "apache/incubator-airflow" ["e"=1]
"airbnb/caravel" -> "airbnb/aerosolve"
"airbnb/caravel" -> "stitchfix/pyxley" ["e"=1]
"airbnb/caravel" -> "spotify/luigi" ["e"=1]
"airbnb/caravel" -> "caesar0301/awesome-public-datasets" ["e"=1]
"airbnb/caravel" -> "tflearn/tflearn" ["e"=1]
"airbnb/caravel" -> "autumnai/leaf" ["e"=1]
"airbnb/caravel" -> "airbnb/knowledge-repo" ["e"=1]
"airbnb/caravel" -> "timothycrosley/hug" ["e"=1]
"airbnb/caravel" -> "google/cayley" ["e"=1]
"airbnb/caravel" -> "cantino/huginn" ["e"=1]
"airbnb/caravel" -> "airbnb/airpal"
"airbnb/caravel" -> "firehol/netdata" ["e"=1]
"linkedin/parseq" -> "linkedin/rest.li"
"linkedin/parseq" -> "linkedin/ambry"
"linkedin/parseq" -> "linkedin/pinot"
"linkedin/parseq" -> "linkedin/PalDB" ["e"=1]
"linkedin/parseq" -> "linkedin/helix"
"linkedin/parseq" -> "linkedin/databus" ["e"=1]
"linkedin/parseq" -> "eBay/parallec" ["e"=1]
"linkedin/parseq" -> "linkedin/URL-Detector"
"linkedin/parseq" -> "linkedin/JTune"
"linkedin/parseq" -> "reactor/reactor" ["e"=1]
"linkedin/parseq" -> "linkedin/photon-ml" ["e"=1]
"linkedin/parseq" -> "facebook/jcommon" ["e"=1]
"linkedin/parseq" -> "linkedin/sensei"
"linkedin/parseq" -> "puniverse/quasar" ["e"=1]
"linkedin/parseq" -> "jdeferred/jdeferred" ["e"=1]
"shzlw/poli" -> "TuiQiao/CBoard"
"shzlw/poli" -> "edp963/davinci"
"shzlw/poli" -> "ananas-analytics/ananas-desktop"
"shzlw/poli" -> "ruisibi/rsbi-pom"
"shzlw/poli" -> "thenaturalist/awesome-business-intelligence" ["e"=1]
"shzlw/poli" -> "xianrendzw/EasyReport" ["e"=1]
"shzlw/poli" -> "youseries/ureport" ["e"=1]
"shzlw/poli" -> "analysys/EasyScheduler"
"shzlw/poli" -> "WeBankFinTech/DataSphereStudio"
"shzlw/poli" -> "Qihoo360/Quicksql"
"shzlw/poli" -> "liaochong/myexcel" ["e"=1]
"shzlw/poli" -> "forbesmyester/esqlate" ["e"=1]
"shzlw/poli" -> "WeiYe-Jing/datax-web"
"shzlw/poli" -> "BriData/DBus"
"shzlw/poli" -> "jtablesaw/tablesaw" ["e"=1]
"BriData/DBus" -> "edp963/wormhole"
"BriData/DBus" -> "edp963/moonbox"
"BriData/DBus" -> "edp963/davinci"
"BriData/DBus" -> "DTStack/flinkx"
"BriData/DBus" -> "Qihoo360/Quicksql"
"BriData/DBus" -> "WeBankFinTech/Scriptis"
"BriData/DBus" -> "InterestingLab/waterdrop"
"BriData/DBus" -> "WeBankFinTech/DataSphereStudio"
"BriData/DBus" -> "ucarGroup/DataLink"
"BriData/DBus" -> "DTStack/flinkStreamSQL"
"BriData/DBus" -> "uavorg/uavstack"
"BriData/DBus" -> "WeBankFinTech/Linkis"
"BriData/DBus" -> "zhp8341/flink-streaming-platform-web"
"BriData/DBus" -> "analysys/EasyScheduler"
"BriData/DBus" -> "WeiYe-Jing/datax-web"
"Flowerowl/Big-Data-Resources" -> "proflin/CoolplaySpark"
"Flowerowl/Big-Data-Resources" -> "xpqiu/fnlp" ["e"=1]
"Flowerowl/Big-Data-Resources" -> "memect/hao" ["e"=1]
"Flowerowl/Big-Data-Resources" -> "Flowerowl/ici" ["e"=1]
"Flowerowl/Big-Data-Resources" -> "Syndrome777/DeepLearningTutorial" ["e"=1]
"Flowerowl/Big-Data-Resources" -> "Flowerowl/python_articles"
"Flowerowl/Big-Data-Resources" -> "ocelma/python-recsys" ["e"=1]
"Flowerowl/Big-Data-Resources" -> "egrcc/guidetodatamining" ["e"=1]
"azkaban/azkaban" -> "apache/hive"
"azkaban/azkaban" -> "apache/kylin"
"azkaban/azkaban" -> "apache/incubator-dolphinscheduler"
"azkaban/azkaban" -> "cloudera/hue"
"azkaban/azkaban" -> "prestodb/presto"
"azkaban/azkaban" -> "apache/oozie"
"azkaban/azkaban" -> "alibaba/DataX" ["e"=1]
"azkaban/azkaban" -> "apache/flume"
"azkaban/azkaban" -> "apache/ambari"
"azkaban/azkaban" -> "apache/hbase"
"azkaban/azkaban" -> "DTStack/flinkx"
"azkaban/azkaban" -> "apache/incubator-airflow" ["e"=1]
"azkaban/azkaban" -> "apache/atlas" ["e"=1]
"azkaban/azkaban" -> "yahoo/kafka-manager" ["e"=1]
"azkaban/azkaban" -> "apache/zeppelin"
"ververica/flink-training-exercises" -> "ververica/sql-training"
"ververica/flink-training-exercises" -> "streaming-with-flink/examples-scala"
"ververica/flink-training-exercises" -> "afedulov/fraud-detection-demo"
"ververica/flink-training-exercises" -> "cloudera/flink-tutorials"
"ververica/flink-training-exercises" -> "apache/flink-playgrounds"
"ververica/flink-training-exercises" -> "wuchong/awesome-flink"
"ververica/flink-training-exercises" -> "apache/flink-training"
"ververica/flink-training-exercises" -> "bethunebtj/flink_tutorial" ["e"=1]
"ververica/flink-training-exercises" -> "wuchong/flink-sql-submit"
"ververica/flink-training-exercises" -> "dataArtisans/flink-benchmarks"
"ververica/flink-training-exercises" -> "ververica/stateful-functions"
"ververica/flink-training-exercises" -> "flink-china/flink-forward-china-2018"
"ververica/flink-training-exercises" -> "mbode/flink-prometheus-example"
"ververica/flink-training-exercises" -> "streaming-with-flink/examples-java"
"ververica/flink-training-exercises" -> "alibaba/flink-ai-extended"
"apache/iotdb" -> "apache/hudi"
"apache/iotdb" -> "apache/incubator-doris"
"apache/iotdb" -> "apache/incubator-seatunnel"
"apache/iotdb" -> "apache/iceberg"
"apache/iotdb" -> "apache/ratis"
"apache/iotdb" -> "apache/pulsar" ["e"=1]
"apache/iotdb" -> "thulab/iotdb-benchmark"
"apache/iotdb" -> "jetlinks/jetlinks-community" ["e"=1]
"apache/iotdb" -> "oceanbase/oceanbase" ["e"=1]
"apache/iotdb" -> "apache/calcite"
"apache/iotdb" -> "apache/doris"
"apache/iotdb" -> "streamxhub/streamx"
"apache/iotdb" -> "apache/dolphinscheduler"
"apache/iotdb" -> "apache/kylin"
"apache/iotdb" -> "ververica/flink-cdc-connectors"
"apache/bahir-flink" -> "ververica/flink-sql-gateway"
"apache/bahir-flink" -> "DTStack/flinkStreamSQL"
"apache/bahir-flink" -> "apache/flink-table-store"
"apache/bahir-flink" -> "ververica/sql-training"
"apache/bahir-flink" -> "DTStack/flinkx"
"apache/bahir-flink" -> "ververica/flink-sql-cookbook"
"apache/bahir-flink" -> "streamxhub/streamx"
"apache/bahir-flink" -> "DataLinkDC/dlink"
"apache/bahir-flink" -> "ververica/flink-cdc-connectors"
"apache/bahir-flink" -> "zhp8341/flink-streaming-platform-web"
"apache/bahir-flink" -> "uber/AthenaX"
"apache/bahir-flink" -> "flink-extended/flink-remote-shuffle"
"apache/bahir-flink" -> "apache/bahir"
"apache/bahir-flink" -> "wuchong/awesome-flink"
"apache/bahir-flink" -> "flink-china/flink-forward-china-2018"
"elastic/elasticsearch-hadoop" -> "NLPchina/elasticsearch-sql" ["e"=1]
"elastic/elasticsearch-hadoop" -> "apache/phoenix"
"elastic/elasticsearch-hadoop" -> "RedisLabs/spark-redis"
"elastic/elasticsearch-hadoop" -> "apache/kylin"
"elastic/elasticsearch-hadoop" -> "linkedin/dr-elephant"
"elastic/elasticsearch-hadoop" -> "spark-jobserver/spark-jobserver"
"elastic/elasticsearch-hadoop" -> "apache/flume"
"elastic/elasticsearch-hadoop" -> "mongodb/mongo-hadoop"
"elastic/elasticsearch-hadoop" -> "allwefantasy/streamingpro"
"elastic/elasticsearch-hadoop" -> "lw-lin/CoolplaySpark"
"elastic/elasticsearch-hadoop" -> "apache/hive"
"elastic/elasticsearch-hadoop" -> "InterestingLab/waterdrop"
"elastic/elasticsearch-hadoop" -> "apache/zeppelin"
"elastic/elasticsearch-hadoop" -> "jprante/elasticsearch-jdbc" ["e"=1]
"elastic/elasticsearch-hadoop" -> "cloudera/livy"
"linkedin/dr-elephant" -> "qubole/sparklens"
"linkedin/dr-elephant" -> "groupon/sparklint"
"linkedin/dr-elephant" -> "linkedin/WhereHows" ["e"=1]
"linkedin/dr-elephant" -> "uber-common/jvm-profiler" ["e"=1]
"linkedin/dr-elephant" -> "yaooqinn/kyuubi"
"linkedin/dr-elephant" -> "apache/incubator-hudi"
"linkedin/dr-elephant" -> "ColZer/DigAndBuried"
"linkedin/dr-elephant" -> "edp963/wormhole"
"linkedin/dr-elephant" -> "allwefantasy/streamingpro"
"linkedin/dr-elephant" -> "intel-hadoop/HiBench"
"linkedin/dr-elephant" -> "Intel-bigdata/spark-adaptive"
"linkedin/dr-elephant" -> "uber/AthenaX"
"linkedin/dr-elephant" -> "cloudera/livy"
"linkedin/dr-elephant" -> "databricks/spark-sql-perf"
"linkedin/dr-elephant" -> "spark-jobserver/spark-jobserver"
"flink-china/flink-forward-china-2018" -> "dataArtisans/flink-training-exercises"
"flink-china/flink-forward-china-2018" -> "bethunebtj/flink_tutorial" ["e"=1]
"flink-china/flink-forward-china-2018" -> "DTStack/flinkStreamSQL"
"flink-china/flink-forward-china-2018" -> "wuchong/awesome-flink"
"flink-china/flink-forward-china-2018" -> "apache/bahir-flink"
"flink-china/flink-forward-china-2018" -> "Apache-Flink-Docs-ZH/Apache-Flink-Docs-ZH-translation"
"flink-china/flink-forward-china-2018" -> "flink-china/flink-training-course"
"flink-china/flink-forward-china-2018" -> "harbby/sylph"
"flink-china/flink-forward-china-2018" -> "wuchong/my-flink-project"
"flink-china/flink-forward-china-2018" -> "uber/AthenaX"
"flink-china/flink-forward-china-2018" -> "flink-china/flink-china-doc"
"flink-china/flink-forward-china-2018" -> "lw-lin/streaming-readings"
"flink-china/flink-forward-china-2018" -> "DTStack/flinkx"
"flink-china/flink-forward-china-2018" -> "ververica/flink-training-exercises"
"flink-china/flink-forward-china-2018" -> "apache/incubator-hudi"
"apache/hudi" -> "apache/iceberg"
"apache/hudi" -> "ververica/flink-cdc-connectors"
"apache/hudi" -> "delta-io/delta"
"apache/hudi" -> "leesf/hudi-resources"
"apache/hudi" -> "apache/incubator-doris"
"apache/hudi" -> "DataLinkDC/dlink"
"apache/hudi" -> "apache/incubator-seatunnel"
"apache/hudi" -> "trinodb/trino"
"apache/hudi" -> "apache/calcite"
"apache/hudi" -> "apache/flink-table-store"
"apache/hudi" -> "StarRocks/starrocks"
"apache/hudi" -> "DTStack/flinkx"
"apache/hudi" -> "streamxhub/streamx"
"apache/hudi" -> "DTStack/flinkStreamSQL"
"apache/hudi" -> "apache/atlas" ["e"=1]
"oldratlee/reactive-practice-at-taobao" -> "zhihuili/Dew"
"oldratlee/reactive-practice-at-taobao" -> "itisaid/Doris"
"oldratlee/reactive-practice-at-taobao" -> "oldratlee/software-practice-thoughts"
"apache/geode" -> "apache/ignite"
"apache/geode" -> "apache/bookkeeper" ["e"=1]
"apache/geode" -> "apache/geode-examples"
"apache/geode" -> "SnappyDataInc/snappydata"
"apache/geode" -> "hazelcast/hazelcast" ["e"=1]
"apache/geode" -> "apache/drill"
"apache/geode" -> "pravega/pravega"
"apache/geode" -> "atomix/atomix" ["e"=1]
"apache/geode" -> "apache/calcite"
"apache/geode" -> "apache/kudu"
"apache/geode" -> "OpenHFT/Chronicle-Map" ["e"=1]
"apache/geode" -> "apache/curator" ["e"=1]
"apache/geode" -> "uber/AthenaX"
"apache/geode" -> "apache/geode-native"
"apache/geode" -> "apache/incubator-pinot"
"yandex/ClickHouse" -> "druid-io/druid"
"yandex/ClickHouse" -> "scylladb/scylla" ["e"=1]
"yandex/ClickHouse" -> "greenplum-db/gpdb"
"yandex/ClickHouse" -> "kshvakov/clickhouse" ["e"=1]
"yandex/ClickHouse" -> "yandex/clickhouse-jdbc" ["e"=1]
"yandex/ClickHouse" -> "prestodb/presto"
"yandex/ClickHouse" -> "facebook/rocksdb" ["e"=1]
"yandex/ClickHouse" -> "pingcap/tidb" ["e"=1]
"yandex/ClickHouse" -> "yahoo/kafka-manager" ["e"=1]
"yandex/ClickHouse" -> "apache/kylin"
"yandex/ClickHouse" -> "cockroachdb/cockroach" ["e"=1]
"yandex/ClickHouse" -> "catboost/catboost" ["e"=1]
"yandex/ClickHouse" -> "apache/calcite"
"yandex/ClickHouse" -> "tabixio/tabix" ["e"=1]
"yandex/ClickHouse" -> "tarantool/tarantool" ["e"=1]
"apache/hadoop" -> "apache/spark"
"apache/hadoop" -> "apache/hbase"
"apache/hadoop" -> "apache/hive"
"apache/hadoop" -> "apache/zookeeper" ["e"=1]
"apache/hadoop" -> "apache/kafka" ["e"=1]
"apache/hadoop" -> "apache/flink"
"apache/hadoop" -> "apache/storm"
"apache/hadoop" -> "GoogleTrends/data" ["e"=1]
"apache/hadoop" -> "apache/cassandra"
"apache/hadoop" -> "netty/netty" ["e"=1]
"apache/hadoop" -> "apache/tomcat" ["e"=1]
"apache/hadoop" -> "elastic/elasticsearch" ["e"=1]
"apache/hadoop" -> "GSA/data" ["e"=1]
"apache/hadoop" -> "prestodb/presto"
"apache/hadoop" -> "apache/flume"
"AlexIoannides/pyspark-example-project" -> "mahmoudparsian/pyspark-tutorial"
"AlexIoannides/pyspark-example-project" -> "spark-examples/pyspark-examples"
"AlexIoannides/pyspark-example-project" -> "ekampf/PySpark-Boilerplate"
"AlexIoannides/pyspark-example-project" -> "damklis/DataEngineeringProject" ["e"=1]
"AlexIoannides/pyspark-example-project" -> "san089/goodreads_etl_pipeline" ["e"=1]
"AlexIoannides/pyspark-example-project" -> "MrPowers/quinn"
"AlexIoannides/pyspark-example-project" -> "UrbanInstitute/pyspark-tutorials"
"AlexIoannides/pyspark-example-project" -> "san089/Udacity-Data-Engineering-Projects" ["e"=1]
"AlexIoannides/pyspark-example-project" -> "palantir/pyspark-style-guide"
"AlexIoannides/pyspark-example-project" -> "jadianes/spark-py-notebooks"
"AlexIoannides/pyspark-example-project" -> "adilkhash/Data-Engineering-HowTo" ["e"=1]
"AlexIoannides/pyspark-example-project" -> "awesome-spark/awesome-spark"
"AlexIoannides/pyspark-example-project" -> "tirthajyoti/Spark-with-Python"
"AlexIoannides/pyspark-example-project" -> "cartershanklin/pyspark-cheatsheet"
"AlexIoannides/pyspark-example-project" -> "gtoonstra/etl-with-airflow" ["e"=1]
"h2oai/driverlessai-recipes" -> "h2oai/tutorials"
"h2oai/driverlessai-recipes" -> "h2oai/awesome-h2o"
"mahmoudparsian/pyspark-tutorial" -> "UrbanInstitute/pyspark-tutorials"
"mahmoudparsian/pyspark-tutorial" -> "lensacom/sparkit-learn"
"mahmoudparsian/pyspark-tutorial" -> "jadianes/spark-py-notebooks"
"mahmoudparsian/pyspark-tutorial" -> "PacktPublishing/Learning-PySpark"
"mahmoudparsian/pyspark-tutorial" -> "drabastomek/learningPySpark"
"mahmoudparsian/pyspark-tutorial" -> "AlexIoannides/pyspark-example-project"
"mahmoudparsian/pyspark-tutorial" -> "spark-examples/pyspark-examples"
"mahmoudparsian/pyspark-tutorial" -> "XD-DENG/Spark-practice"
"mahmoudparsian/pyspark-tutorial" -> "jkthompson/pyspark-pictures"
"mahmoudparsian/pyspark-tutorial" -> "tirthajyoti/Spark-with-Python"
"mahmoudparsian/pyspark-tutorial" -> "susanli2016/PySpark-and-MLlib"
"mahmoudparsian/pyspark-tutorial" -> "awantik/pyspark-tutorial"
"mahmoudparsian/pyspark-tutorial" -> "ekampf/PySpark-Boilerplate"
"mahmoudparsian/pyspark-tutorial" -> "MingChen0919/learning-apache-spark"
"mahmoudparsian/pyspark-tutorial" -> "mahmoudparsian/data-algorithms-with-spark"
"20100507/emotional_analysis" -> "pengLP/sina_analysis" ["e"=1]
"20100507/emotional_analysis" -> "luochana/News_recommend" ["e"=1]
"20100507/emotional_analysis" -> "LuckyZXL2016/News_Spark"
"20100507/emotional_analysis" -> "oeljeklaus-you/UserActionAnalyzePlatform"
"20100507/emotional_analysis" -> "virgoC0der/SentimentAnalysisOfProductReview" ["e"=1]
"20100507/emotional_analysis" -> "yangtong123/StudySpark"
"20100507/emotional_analysis" -> "wankunde/logcount"
"20100507/emotional_analysis" -> "Zephery/weiboanalysis" ["e"=1]
"20100507/emotional_analysis" -> "ljcan/SparkStreaming"
"20100507/emotional_analysis" -> "liguozhong/demo_11.11_storm-spark-hadoop"
"20100507/emotional_analysis" -> "LeechanX/Netflix-Recommender-with-Spark" ["e"=1]
"20100507/emotional_analysis" -> "whirlys/BigData-In-Practice"
"20100507/emotional_analysis" -> "LuckyZXL2016/Movie_Recommend" ["e"=1]
"prestodb/presto" -> "trinodb/trino"
"prestodb/presto" -> "apache/calcite"
"prestodb/presto" -> "apache/flink"
"prestodb/presto" -> "apache/hive"
"prestodb/presto" -> "delta-io/delta"
"prestodb/presto" -> "apache/kylin"
"prestodb/presto" -> "apache/iceberg"
"prestodb/presto" -> "prestosql/presto"
"prestodb/presto" -> "Alluxio/alluxio"
"prestodb/presto" -> "apache/incubator-doris"
"prestodb/presto" -> "apache/hbase"
"prestodb/presto" -> "apache/pulsar" ["e"=1]
"prestodb/presto" -> "facebook/rocksdb" ["e"=1]
"prestodb/presto" -> "apache/spark"
"prestodb/presto" -> "alibaba/DataX" ["e"=1]
"fayson/cdhproject" -> "InterestingLab/waterdrop"
"fayson/cdhproject" -> "DTStack/flinkx"
"fayson/cdhproject" -> "edp963/wormhole"
"fayson/cdhproject" -> "realguoshuai/hadoop_study"
"fayson/cdhproject" -> "lw-lin/CoolplaySpark"
"fayson/cdhproject" -> "Qihoo360/Quicksql"
"fayson/cdhproject" -> "scxwhite/hera"
"fayson/cdhproject" -> "DTStack/flinkStreamSQL"
"fayson/cdhproject" -> "hortonworks/hive-testbench"
"fayson/cdhproject" -> "BriData/DBus"
"fayson/cdhproject" -> "yaooqinn/kyuubi"
"fayson/cdhproject" -> "smartloli/kafka-eagle" ["e"=1]
"fayson/cdhproject" -> "fayson/cdh-autouninstall"
"fayson/cdhproject" -> "apachecn/spark-doc-zh"
"fayson/cdhproject" -> "flink-china/flink-training-course"
"CHINA-JD/presto" -> "analysys/presto-hbase-connector"
"CHINA-JD/presto" -> "linkedin/WhereHows" ["e"=1]
"CHINA-JD/presto" -> "wyukawa/yanagishima"
"CHINA-JD/presto" -> "MTDATA/presto"
"CHINA-JD/presto" -> "Huawei-Spark/Spark-SQL-on-HBase"
"CHINA-JD/presto" -> "michael8335/zeus2" ["e"=1]
"CHINA-JD/presto" -> "airlift/slice" ["e"=1]
"CHINA-JD/presto" -> "apache/kylin"
"ColZer/DigAndBuried" -> "lw-lin/CoolplaySpark"
"ColZer/DigAndBuried" -> "summerDG/spark-code-analysis"
"ColZer/DigAndBuried" -> "JerryLead/SparkInternals"
"ColZer/DigAndBuried" -> "allwefantasy/streamingpro"
"ColZer/DigAndBuried" -> "neoremind/kraps-rpc"
"ColZer/DigAndBuried" -> "linkedin/dr-elephant"
"ColZer/DigAndBuried" -> "cjuexuan/mynote"
"ColZer/DigAndBuried" -> "Intel-bigdata/spark-adaptive"
"ColZer/DigAndBuried" -> "jaceklaskowski/mastering-apache-spark-book"
"ColZer/DigAndBuried" -> "databricks/spark-sql-perf"
"ColZer/DigAndBuried" -> "Intel-bigdata/OAP"
"ColZer/DigAndBuried" -> "lw-lin/streaming-readings"
"ColZer/DigAndBuried" -> "ihainan/SparkInternals"
"ColZer/DigAndBuried" -> "hustnn/TungstenSecret"
"ColZer/DigAndBuried" -> "endymecy/spark-ml-source-analysis"
"DataLinkDC/dlink" -> "streamxhub/streamx"
"DataLinkDC/dlink" -> "zhp8341/flink-streaming-platform-web"
"DataLinkDC/dlink" -> "ververica/flink-cdc-connectors"
"DataLinkDC/dlink" -> "apache/flink-table-store"
"DataLinkDC/dlink" -> "DTStack/flinkx"
"DataLinkDC/dlink" -> "DTStack/flinkStreamSQL"
"DataLinkDC/dlink" -> "WeBankFinTech/DataSphereStudio"
"DataLinkDC/dlink" -> "apache/incubator-seatunnel"
"DataLinkDC/dlink" -> "ververica/flink-sql-gateway"
"DataLinkDC/dlink" -> "qlangtech/tis"
"DataLinkDC/dlink" -> "DTStack/Taier" ["e"=1]
"DataLinkDC/dlink" -> "DTStack/chunjun"
"DataLinkDC/dlink" -> "apache/iceberg"
"DataLinkDC/dlink" -> "apache/bahir-flink"
"DataLinkDC/dlink" -> "apache/hudi"
"LucaCanali/sparkMeasure" -> "qubole/sparklens"
"LucaCanali/sparkMeasure" -> "groupon/sparklint"
"LucaCanali/sparkMeasure" -> "databricks/spark-sql-perf"
"LucaCanali/sparkMeasure" -> "cerndb/spark-dashboard"
"LucaCanali/sparkMeasure" -> "Intel-bigdata/spark-adaptive"
"LucaCanali/sparkMeasure" -> "MrPowers/spark-daria"
"LucaCanali/sparkMeasure" -> "banzaicloud/spark-metrics"
"LucaCanali/sparkMeasure" -> "uber/RemoteShuffleService"
"LucaCanali/sparkMeasure" -> "high-performance-spark/high-performance-spark-examples"
"LucaCanali/sparkMeasure" -> "LucaCanali/Miscellaneous"
"LucaCanali/sparkMeasure" -> "linkedin/dr-elephant"
"LucaCanali/sparkMeasure" -> "holdenk/spark-testing-base"
"LucaCanali/sparkMeasure" -> "datamechanics/delight"
"LucaCanali/sparkMeasure" -> "japila-books/apache-spark-internals"
"LucaCanali/sparkMeasure" -> "groupon/spark-metrics"
"SwordfallYeung/Interview_BigData" -> "oeljeklaus-you/JavaOrBigData-Interview"
"SwordfallYeung/Interview_BigData" -> "CheckChe0803/BigData-Interview"
"SwordfallYeung/Interview_BigData" -> "WadeStack/BigDataIE"
"SwordfallYeung/Interview_BigData" -> "monsonlee/BigData"
"SwordfallYeung/Interview_BigData" -> "pyfrm/review-pamphlet"
"SwordfallYeung/Interview_BigData" -> "yoghurtjia/-python-BAT-"
"SwordfallYeung/Interview_BigData" -> "sunnyandgood/BigData"
"SwordfallYeung/Interview_BigData" -> "vbay/big-data"
"SwordfallYeung/Interview_BigData" -> "realguoshuai/hadoop_study"
"SwordfallYeung/Interview_BigData" -> "appleappleapple/BigDataLearning"
"SwordfallYeung/Interview_BigData" -> "whirlys/BigData-In-Practice"
"SwordfallYeung/Interview_BigData" -> "houshanren/big_data_architect_skills"
"SwordfallYeung/Interview_BigData" -> "yangtong123/StudySpark"
"SwordfallYeung/Interview_BigData" -> "TALKDATA/JavaBigData"
"SwordfallYeung/Interview_BigData" -> "opensourceteams/spark-scala-maven-2.4.0"
"Tencent/Firestorm" -> "alibaba/RemoteShuffleService"
"Tencent/Firestorm" -> "apache/incubator-uniffle"
"Tencent/Firestorm" -> "uber/RemoteShuffleService"
"Tencent/Firestorm" -> "flink-extended/flink-remote-shuffle"
"Tencent/Firestorm" -> "oap-project/gluten"
"Tencent/Firestorm" -> "bytedance/CloudShuffleService"
"Tencent/Firestorm" -> "blaze-init/blaze"
"Tencent/Firestorm" -> "NetEase/arctic"
"Tencent/Firestorm" -> "oap-project/gazelle_plugin"
"datamechanics/delight" -> "cerndb/spark-dashboard"
"datamechanics/delight" -> "qubole/sparklens"
"datamechanics/delight" -> "groupon/sparklint"
"datamechanics/delight" -> "maropu/spark-sql-flow-plugin"
"datamechanics/delight" -> "LucaCanali/sparkMeasure"
"datamechanics/delight" -> "SaurabhChawla100/spark-radiant"
"datamechanics/delight" -> "xskipper-io/xskipper"
"datamechanics/delight" -> "linkedin/transport"
"datamechanics/delight" -> "Tencent/Firestorm"
"datamechanics/delight" -> "delta-io/delta-sharing"
"jupyter-incubator/sparkmagic" -> "cloudera/livy"
"jupyter-incubator/sparkmagic" -> "apache/incubator-toree"
"jupyter-incubator/sparkmagic" -> "apache/incubator-livy"
"jupyter-incubator/sparkmagic" -> "spark-jobserver/spark-jobserver"
"jupyter-incubator/sparkmagic" -> "databricks/koalas" ["e"=1]
"jupyter-incubator/sparkmagic" -> "databricks/spark-deep-learning"
"jupyter-incubator/sparkmagic" -> "combust/mleap"
"jupyter-incubator/sparkmagic" -> "spark-notebook/spark-notebook"
"jupyter-incubator/sparkmagic" -> "awslabs/deequ" ["e"=1]
"jupyter-incubator/sparkmagic" -> "holdenk/spark-testing-base"
"jupyter-incubator/sparkmagic" -> "dropbox/PyHive"
"jupyter-incubator/sparkmagic" -> "graphframes/graphframes"
"jupyter-incubator/sparkmagic" -> "awesome-spark/awesome-spark"
"jupyter-incubator/sparkmagic" -> "yahoo/TensorFlowOnSpark"
"jupyter-incubator/sparkmagic" -> "databricks/spark-sklearn"
"steveloughran/winutils" -> "cdarlint/winutils"
"steveloughran/winutils" -> "lw-lin/CoolplaySpark"
"steveloughran/winutils" -> "srccodes/hadoop-common-2.2.0-bin"
"steveloughran/winutils" -> "apache/hive"
"steveloughran/winutils" -> "azkaban/azkaban"
"steveloughran/winutils" -> "ververica/flink-cdc-connectors"
"steveloughran/winutils" -> "hortonworks-spark/shc"
"steveloughran/winutils" -> "JerryLead/SparkInternals"
"steveloughran/winutils" -> "winghc/hadoop2x-eclipse-plugin"
"steveloughran/winutils" -> "databricks/learning-spark"
"steveloughran/winutils" -> "DTStack/flinkx"
"steveloughran/winutils" -> "apachecn/spark-doc-zh"
"steveloughran/winutils" -> "apache/incubator-dolphinscheduler"
"steveloughran/winutils" -> "InterestingLab/waterdrop"
"steveloughran/winutils" -> "apache/ambari"
"thieman/dagobah" -> "binarydud/pyres" ["e"=1]
"thieman/dagobah" -> "pinterest/pinball"
"thieman/dagobah" -> "thieman/py-dag"
"yuqi1129/schema" -> "yuqi1129/calcite-test"
"qiushangwenyue/Interview_BigData" -> "pengshuangbao/review-pamphlet"
"qiushangwenyue/Interview_BigData" -> "oeljeklaus-you/JavaOrBigData-Interview"
"qiushangwenyue/Interview_BigData" -> "yangtong123/StudySpark"
"apache/oozie" -> "apache/sqoop"
"apache/oozie" -> "apache/pig"
"apache/oozie" -> "apache/tez"
"apache/oozie" -> "apache/flume"
"apache/oozie" -> "apache/hive"
"apache/oozie" -> "apache/phoenix"
"apache/oozie" -> "azkaban/azkaban"
"apache/oozie" -> "apache/ambari"
"apache/oozie" -> "apache/hbase"
"apache/oozie" -> "cloudera/Impala"
"apache/oozie" -> "apache/impala"
"apache/oozie" -> "apache/hcatalog"
"apache/oozie" -> "yahoo/oozie" ["e"=1]
"apache/oozie" -> "apache/kudu"
"apache/oozie" -> "apache/kylin"
"heibaiying/Full-Stack-Notes" -> "heibaiying/spring-samples-for-all"
"heibaiying/Full-Stack-Notes" -> "heibaiying/BigData-Notes" ["e"=1]
"heibaiying/Full-Stack-Notes" -> "sunnyandgood/BigData"
"arverma007/DataEngineering" -> "sankamuk/PysparkCheatsheet"
"maxpumperla/elephas" -> "cerndb/dist-keras"
"maxpumperla/elephas" -> "databricks/spark-deep-learning"
"maxpumperla/elephas" -> "yahoo/TensorFlowOnSpark"
"maxpumperla/elephas" -> "maxpumperla/hyperas" ["e"=1]
"maxpumperla/elephas" -> "matthiasplappert/keras-rl" ["e"=1]
"maxpumperla/elephas" -> "intel-analytics/BigDL"
"maxpumperla/elephas" -> "farizrahman4u/seq2seq" ["e"=1]
"maxpumperla/elephas" -> "uber/horovod" ["e"=1]
"maxpumperla/elephas" -> "databricks/spark-sklearn"
"maxpumperla/elephas" -> "EderSantana/seya" ["e"=1]
"maxpumperla/elephas" -> "yahoo/CaffeOnSpark"
"maxpumperla/elephas" -> "combust/mleap"
"maxpumperla/elephas" -> "dirkneumann/deepdist"
"maxpumperla/elephas" -> "NervanaSystems/neon" ["e"=1]
"maxpumperla/elephas" -> "databricks/tensorframes"
"spark-examples/pyspark-examples" -> "spark-examples/spark-scala-examples"
"spark-examples/pyspark-examples" -> "AlexIoannides/pyspark-example-project"
"spark-examples/pyspark-examples" -> "mahmoudparsian/pyspark-tutorial"
"spark-examples/pyspark-examples" -> "UrbanInstitute/pyspark-tutorials"
"spark-examples/pyspark-examples" -> "kevinschaich/pyspark-cheatsheet"
"spark-examples/pyspark-examples" -> "tirthajyoti/Spark-with-Python"
"spark-examples/pyspark-examples" -> "cartershanklin/pyspark-cheatsheet"
"spark-examples/pyspark-examples" -> "PacktPublishing/Learning-PySpark"
"spark-examples/pyspark-examples" -> "LearningJournal/Spark-Programming-In-Python"
"spark-examples/pyspark-examples" -> "databricks/LearningSparkV2"
"spark-examples/pyspark-examples" -> "palantir/pyspark-style-guide"
"spark-examples/pyspark-examples" -> "ekampf/PySpark-Boilerplate"
"spark-examples/pyspark-examples" -> "databricks-academy/data-engineering-with-databricks"
"spark-examples/pyspark-examples" -> "damklis/DataEngineeringProject" ["e"=1]
"spark-examples/pyspark-examples" -> "XD-DENG/Spark-practice"
"apache/hadoop-hdfs" -> "apache/hadoop-mapreduce"
"apache/hadoop-hdfs" -> "apache/hadoop-common"
"apache/hadoop-hdfs" -> "apache/pig"
"apache/hadoop-hdfs" -> "cloudera/sqoop" ["e"=1]
"apache/hadoop-hdfs" -> "apache/hbase"
"apache/hadoop-hdfs" -> "apache/oozie"
"apache/hadoop-hdfs" -> "apache/hcatalog"
"omnisci/omniscidb" -> "BlazingDB/blazingsql" ["e"=1]
"omnisci/omniscidb" -> "omnisci/mapd-charting"
"omnisci/omniscidb" -> "heterodb/pg-strom" ["e"=1]
"omnisci/omniscidb" -> "uber/aresdb"
"omnisci/omniscidb" -> "TileDB-Inc/TileDB" ["e"=1]
"omnisci/omniscidb" -> "facebookincubator/velox" ["e"=1]
"omnisci/omniscidb" -> "cwida/duckdb" ["e"=1]
"omnisci/omniscidb" -> "uwdata/falcon" ["e"=1]
"omnisci/omniscidb" -> "greenplum-db/gporca" ["e"=1]
"omnisci/omniscidb" -> "TimoKersten/db-engine-paradigms" ["e"=1]
"omnisci/omniscidb" -> "omnisci/pymapd"
"omnisci/omniscidb" -> "cylondata/cylon"
"omnisci/omniscidb" -> "cmu-db/noisepage" ["e"=1]
"omnisci/omniscidb" -> "BlazingDB/pyBlazing"
"omnisci/omniscidb" -> "apache/impala"
"ZakiaSalod/The-Hundred-Page-Machine-Learning-Book" -> "SayantanMitra87/Data-Science-Books-1"
"ZakiaSalod/The-Hundred-Page-Machine-Learning-Book" -> "ontiyonke/Free-Deep-Learning-Books"
"apache/druid" -> "apache/iceberg"
"apache/druid" -> "prestodb/presto"
"apache/druid" -> "apache/calcite"
"apache/druid" -> "apache/hudi"
"apache/druid" -> "apache/pulsar" ["e"=1]
"apache/druid" -> "apache/kylin"
"apache/druid" -> "trinodb/trino"
"apache/druid" -> "apache/hive"
"apache/druid" -> "apache/incubator-doris"
"apache/druid" -> "apache/flink"
"apache/druid" -> "apache/hbase"
"apache/druid" -> "apache/pinot"
"apache/druid" -> "delta-io/delta"
"apache/druid" -> "debezium/debezium" ["e"=1]
"apache/druid" -> "apache/incubator-pinot"
"apache/iceberg" -> "apache/hudi"
"apache/iceberg" -> "delta-io/delta"
"apache/iceberg" -> "ververica/flink-cdc-connectors"
"apache/iceberg" -> "trinodb/trino"
"apache/iceberg" -> "apache/calcite"
"apache/iceberg" -> "apache/incubator-doris"
"apache/iceberg" -> "apache/incubator-seatunnel"
"apache/iceberg" -> "DataLinkDC/dlink"
"apache/iceberg" -> "streamxhub/streamx"
"apache/iceberg" -> "apache/incubator-kyuubi"
"apache/iceberg" -> "DTStack/flinkx"
"apache/iceberg" -> "apache/atlas" ["e"=1]
"apache/iceberg" -> "prestodb/presto"
"apache/iceberg" -> "StarRocks/starrocks"
"apache/iceberg" -> "apache/flink"
"TurboWay/bigdata_analyse" -> "geekyouth/SZT-bigdata"
"TurboWay/bigdata_analyse" -> "hi-weijun/PythonDataScience-Collections" ["e"=1]
"TurboWay/bigdata_analyse" -> "justinzm/gopup" ["e"=1]
"TurboWay/bigdata_analyse" -> "TurboWay/big_screen" ["e"=1]
"TurboWay/bigdata_analyse" -> "wangzhiwubigdata/God-Of-BigData"
"TurboWay/bigdata_analyse" -> "hustcc/PyG2Plot" ["e"=1]
"TurboWay/bigdata_analyse" -> "heibaiying/BigData-Notes" ["e"=1]
"TurboWay/bigdata_analyse" -> "dunwu/db-tutorial" ["e"=1]
"TurboWay/bigdata_analyse" -> "dataease/dataease" ["e"=1]
"TurboWay/bigdata_analyse" -> "yqchilde/JDMemberCloseAccount" ["e"=1]
"TurboWay/bigdata_analyse" -> "ben1234560/AiLearning-Theory-Applying" ["e"=1]
"TurboWay/bigdata_analyse" -> "whirlys/BigData-In-Practice"
"TurboWay/bigdata_analyse" -> "dataabc/weiboSpider" ["e"=1]
"TurboWay/bigdata_analyse" -> "jackzhenguo/python-small-examples" ["e"=1]
"TurboWay/bigdata_analyse" -> "aimuch/iAI" ["e"=1]
"xaecbd/KafkaCenter" -> "smartloli/kafka-eagle" ["e"=1]
"xaecbd/KafkaCenter" -> "linkedin/kafka-monitor" ["e"=1]
"xaecbd/KafkaCenter" -> "didi/kafka-manager"
"xaecbd/KafkaCenter" -> "didi/Logi-KafkaManager"
"xaecbd/KafkaCenter" -> "NaNShaner/repoll"
"xaecbd/KafkaCenter" -> "DTStack/flinkx"
"xaecbd/KafkaCenter" -> "zhp8341/flink-streaming-platform-web"
"xaecbd/KafkaCenter" -> "ngbdf/redis-manager" ["e"=1]
"xaecbd/KafkaCenter" -> "vran-dev/PrettyZoo" ["e"=1]
"xaecbd/KafkaCenter" -> "smartloli/EFAK"
"xaecbd/KafkaCenter" -> "WeBankFinTech/Linkis"
"xaecbd/KafkaCenter" -> "streamxhub/streamx"
"xaecbd/KafkaCenter" -> "collabH/repository"
"xaecbd/KafkaCenter" -> "linkedin/cruise-control" ["e"=1]
"xaecbd/KafkaCenter" -> "ucarGroup/DataLink"
"oeljeklaus-you/JavaOrBigData-Interview" -> "SwordfallYeung/Interview_BigData"
"oeljeklaus-you/JavaOrBigData-Interview" -> "qiushangwenyue/Interview_BigData"
"oeljeklaus-you/JavaOrBigData-Interview" -> "pyfrm/review-pamphlet"
"oeljeklaus-you/JavaOrBigData-Interview" -> "WadeStack/BigDataIE"
"oeljeklaus-you/JavaOrBigData-Interview" -> "CheckChe0803/BigData-Interview"
"oeljeklaus-you/JavaOrBigData-Interview" -> "yoghurtjia/-python-BAT-"
"oeljeklaus-you/JavaOrBigData-Interview" -> "sunnyandgood/BigData"
"oeljeklaus-you/JavaOrBigData-Interview" -> "monsonlee/BigData"
"oeljeklaus-you/JavaOrBigData-Interview" -> "houshanren/big_data_architect_skills"
"oeljeklaus-you/JavaOrBigData-Interview" -> "yangtong123/StudySpark"
"oeljeklaus-you/JavaOrBigData-Interview" -> "wanghan0501/WiFiProbeAnalysis"
"apache/dolphinscheduler" -> "apache/incubator-seatunnel"
"apache/dolphinscheduler" -> "ververica/flink-cdc-connectors"
"apache/dolphinscheduler" -> "hepingood/mpu9250" ["e"=1]
"apache/dolphinscheduler" -> "njustkmg/PaddleMM" ["e"=1]
"apache/dolphinscheduler" -> "galaxyzxcv/tokencore" ["e"=1]
"apache/dolphinscheduler" -> "TinyDataML/Tiny3D" ["e"=1]
"apache/dolphinscheduler" -> "FiboAI/EngineX" ["e"=1]
"apache/dolphinscheduler" -> "FxPool/FxMinerProxyV3" ["e"=1]
"apache/dolphinscheduler" -> "chengshiwen/influxdb-cluster" ["e"=1]
"apache/dolphinscheduler" -> "ntt360/pmon2" ["e"=1]
"apache/dolphinscheduler" -> "longguikeji/arkid" ["e"=1]
"apache/dolphinscheduler" -> "minerproxyeth/minerproxy" ["e"=1]
"apache/dolphinscheduler" -> "WAMAWAMA/wama_modules" ["e"=1]
"apache/dolphinscheduler" -> "HummerRisk/HummerRisk" ["e"=1]
"apache/dolphinscheduler" -> "CyrilFeng/Q-calculator" ["e"=1]
"winghc/hadoop2x-eclipse-plugin" -> "srccodes/hadoop-common-2.2.0-bin"
"winghc/hadoop2x-eclipse-plugin" -> "apache/hadoop-common"
"winghc/hadoop2x-eclipse-plugin" -> "steveloughran/winutils"
"winghc/hadoop2x-eclipse-plugin" -> "alibaba/zeus" ["e"=1]
"winghc/hadoop2x-eclipse-plugin" -> "tomwhite/hadoop-book"
"winghc/hadoop2x-eclipse-plugin" -> "larsgeorge/hbase-book" ["e"=1]
"winghc/hadoop2x-eclipse-plugin" -> "cloudera/cdh-twitter-example" ["e"=1]
"winghc/hadoop2x-eclipse-plugin" -> "bsspirit/maven_hadoop_template"
"winghc/hadoop2x-eclipse-plugin" -> "xianglei/easyhadoop" ["e"=1]
"winghc/hadoop2x-eclipse-plugin" -> "bsspirit/maven_mahout_template"
"winghc/hadoop2x-eclipse-plugin" -> "elastic/elasticsearch-hadoop"
"winghc/hadoop2x-eclipse-plugin" -> "spring-projects/spring-hadoop" ["e"=1]
"winghc/hadoop2x-eclipse-plugin" -> "Huawei-Hadoop/hindex" ["e"=1]
"winghc/hadoop2x-eclipse-plugin" -> "mongodb/mongo-hadoop"
"winghc/hadoop2x-eclipse-plugin" -> "fangyuzhong2016/HadoopIntellijPlugin"
"amplab/spark-ec2" -> "nchammas/flintrock"
"amplab/spark-ec2" -> "databricks/spark-perf"
"apache/ignite" -> "hazelcast/hazelcast" ["e"=1]
"apache/ignite" -> "apache/calcite"
"apache/ignite" -> "apache/geode"
"apache/ignite" -> "apache/pulsar" ["e"=1]
"apache/ignite" -> "apache/kylin"
"apache/ignite" -> "apache/hbase"
"apache/ignite" -> "prestodb/presto"
"apache/ignite" -> "apache/drill"
"apache/ignite" -> "apache/cassandra"
"apache/ignite" -> "apache/storm"
"apache/ignite" -> "apache/zeppelin"
"apache/ignite" -> "Alluxio/alluxio"
"apache/ignite" -> "apache/flink"
"apache/ignite" -> "apache/nifi"
"apache/ignite" -> "apache/hive"
"JerryLead/SparkInternals" -> "lw-lin/CoolplaySpark"
"JerryLead/SparkInternals" -> "databricks/learning-spark"
"JerryLead/SparkInternals" -> "ColZer/DigAndBuried"
"JerryLead/SparkInternals" -> "spark-jobserver/spark-jobserver"
"JerryLead/SparkInternals" -> "apache/spark"
"JerryLead/SparkInternals" -> "databricks/scala-style-guide" ["e"=1]
"JerryLead/SparkInternals" -> "endymecy/spark-ml-source-analysis"
"JerryLead/SparkInternals" -> "delta-io/delta"
"JerryLead/SparkInternals" -> "flink-china/flink-training-course"
"JerryLead/SparkInternals" -> "apache/flink"
"JerryLead/SparkInternals" -> "allwefantasy/streamingpro"
"JerryLead/SparkInternals" -> "rxin/db-readings" ["e"=1]
"JerryLead/SparkInternals" -> "onurakpolat/awesome-bigdata" ["e"=1]
"JerryLead/SparkInternals" -> "yahoo/TensorFlowOnSpark"
"JerryLead/SparkInternals" -> "ty4z2008/Qix" ["e"=1]
"HotelsDotCom/styx" -> "HotelsDotCom/heat"
"HotelsDotCom/styx" -> "HotelsDotCom/flyte"
"HotelsDotCom/styx" -> "HotelsDotCom/bull"
"HotelsDotCom/styx" -> "HotelsDotCom/data-highway"
"HotelsDotCom/styx" -> "ExpediaGroup/secrets-injector"
"HotelsDotCom/styx" -> "ExpediaDotCom/haystack"
"JoeyBling/webkettle" -> "ziliang001/etl-kettle-web"
"JoeyBling/webkettle" -> "zhaxiaodong9860/kettle-scheduler"
"JoeyBling/webkettle" -> "xuanbo/kettle-web"
"JoeyBling/webkettle" -> "majinju/kettle-manager"
"JoeyBling/webkettle" -> "classtag/OpenKettleWebUI"
"JoeyBling/webkettle" -> "HiromuHota/pentaho-kettle"
"JoeyBling/webkettle" -> "xiaoymin/KettleInAction100"
"JoeyBling/webkettle" -> "young-datafan/data-integration" ["e"=1]
"JoeyBling/webkettle" -> "zhaodongxx/awesome-kettle"
"JoeyBling/webkettle" -> "zllkyo/kettle-manager"
"JoeyBling/webkettle" -> "zhaoyachao/zdh_web"
"JoeyBling/webkettle" -> "huzekang/springboot-datax"
"JoeyBling/webkettle" -> "konglinghai123/renren_kettle"
"JoeyBling/webkettle" -> "pentaho/pentaho-kettle" ["e"=1]
"JoeyBling/webkettle" -> "haochenchn/kettle-springboot"
"IBM/spark-tpc-ds-performance-test" -> "databricks/spark-sql-perf"
"IBM/spark-tpc-ds-performance-test" -> "databricks/tpcds-kit"
"IBM/spark-tpc-ds-performance-test" -> "maropu/spark-tpcds-datagen"
"IBM/spark-tpc-ds-performance-test" -> "gregrahn/tpcds-kit"
"IBM/spark-tpc-ds-performance-test" -> "CODAIT/spark-bench"
"IBM/spark-tpc-ds-performance-test" -> "ssavvides/tpch-spark"
"databricks/spark-sql-perf" -> "IBM/spark-tpc-ds-performance-test"
"databricks/spark-sql-perf" -> "databricks/tpcds-kit"
"databricks/spark-sql-perf" -> "maropu/spark-tpcds-datagen"
"databricks/spark-sql-perf" -> "databricks/spark-perf"
"databricks/spark-sql-perf" -> "uber/RemoteShuffleService"
"databricks/spark-sql-perf" -> "oap-project/gluten"
"databricks/spark-sql-perf" -> "Intel-bigdata/spark-adaptive"
"databricks/spark-sql-perf" -> "alibaba/RemoteShuffleService"
"databricks/spark-sql-perf" -> "Intel-bigdata/OAP"
"databricks/spark-sql-perf" -> "ssavvides/tpch-spark"
"databricks/spark-sql-perf" -> "gregrahn/tpcds-kit"
"databricks/spark-sql-perf" -> "LucaCanali/sparkMeasure"
"databricks/spark-sql-perf" -> "Tencent/Firestorm"
"databricks/spark-sql-perf" -> "hortonworks/hive-testbench"
"databricks/spark-sql-perf" -> "cloudera/impala-tpcds-kit"
"druid-io/druid" -> "linkedin/pinot"
"druid-io/druid" -> "airbnb/caravel"
"druid-io/druid" -> "twitter/heron"
"druid-io/druid" -> "druid-io/tranquility"
"druid-io/druid" -> "airbnb/superset" ["e"=1]
"druid-io/druid" -> "apache/kylin"
"druid-io/druid" -> "alibaba/jstorm" ["e"=1]
"druid-io/druid" -> "yahoo/kafka-manager" ["e"=1]
"druid-io/druid" -> "OpenTSDB/opentsdb"
"druid-io/druid" -> "prestodb/presto"
"druid-io/druid" -> "yandex/ClickHouse"
"druid-io/druid" -> "apache/storm"
"druid-io/druid" -> "apache/incubator-airflow" ["e"=1]
"druid-io/druid" -> "azkaban/azkaban"
"druid-io/druid" -> "alibaba/RocketMQ" ["e"=1]
"BradRuderman/pyhs2" -> "cloudera/impyla"
"BradRuderman/pyhs2" -> "dropbox/PyHive"
"Qihoo360/XLearning" -> "Tencent/angel"
"Qihoo360/XLearning" -> "dmlc/ps-lite" ["e"=1]
"Qihoo360/XLearning" -> "alibaba/x-deeplearning" ["e"=1]
"Qihoo360/XLearning" -> "yahoo/TensorFlowOnSpark"
"Qihoo360/XLearning" -> "tensorflow/ecosystem" ["e"=1]
"Qihoo360/XLearning" -> "bytedance/byteps" ["e"=1]
"Qihoo360/XLearning" -> "cnkuangshi/LightCTR" ["e"=1]
"Qihoo360/XLearning" -> "linkedin/TonY" ["e"=1]
"Qihoo360/XLearning" -> "aksnzhy/xlearn" ["e"=1]
"Qihoo360/XLearning" -> "Qihoo360/tensornet" ["e"=1]
"Qihoo360/XLearning" -> "alibaba/euler" ["e"=1]
"Qihoo360/XLearning" -> "Qihoo360/Quicksql"
"Qihoo360/XLearning" -> "Angel-ML/angel" ["e"=1]
"Qihoo360/XLearning" -> "allwefantasy/streamingpro"
"Qihoo360/XLearning" -> "Qihoo360/Lipland"
"apache/kylin" -> "apache/hive"
"apache/kylin" -> "apache/calcite"
"apache/kylin" -> "apache/hbase"
"apache/kylin" -> "prestodb/presto"
"apache/kylin" -> "apache/incubator-doris"
"apache/kylin" -> "apache/kudu"
"apache/kylin" -> "apache/zeppelin"
"apache/kylin" -> "apache/flume"
"apache/kylin" -> "azkaban/azkaban"
"apache/kylin" -> "apache/phoenix"
"apache/kylin" -> "apache/drill"
"apache/kylin" -> "apache/storm"
"apache/kylin" -> "apache/flink"
"apache/kylin" -> "apache/carbondata"
"apache/kylin" -> "apache/iceberg"
"dropbox/PyHive" -> "cloudera/impyla"
"dropbox/PyHive" -> "BradRuderman/pyhs2"
"dropbox/PyHive" -> "prestodb/presto-python-client"
"dropbox/PyHive" -> "prestosql/presto"
"dropbox/PyHive" -> "airbnb/airpal"
"dropbox/PyHive" -> "dpkp/kafka-python" ["e"=1]
"dropbox/PyHive" -> "hortonworks/hive-testbench"
"dropbox/PyHive" -> "jupyter-incubator/sparkmagic"
"dropbox/PyHive" -> "spotify/snakebite"
"dropbox/PyHive" -> "apache/hive"
"dropbox/PyHive" -> "yanagishima/yanagishima"
"dropbox/PyHive" -> "cloudera/hue"
"dropbox/PyHive" -> "apache/incubator-airflow" ["e"=1]
"dropbox/PyHive" -> "prestodb/presto"
"dropbox/PyHive" -> "apache/atlas" ["e"=1]
"wangzhiwubigdata/God-Of-BigData" -> "heibaiying/BigData-Notes" ["e"=1]
"wangzhiwubigdata/God-Of-BigData" -> "zhisheng17/flink-learning"
"wangzhiwubigdata/God-Of-BigData" -> "flink-china/flink-training-course"
"wangzhiwubigdata/God-Of-BigData" -> "CheckChe0803/BigData-Interview"
"wangzhiwubigdata/God-Of-BigData" -> "Dr11ft/BigDataGuide"
"wangzhiwubigdata/God-Of-BigData" -> "CheckChe0803/flink-recommandSystem-demo"
"wangzhiwubigdata/God-Of-BigData" -> "geekyouth/SZT-bigdata"
"wangzhiwubigdata/God-Of-BigData" -> "DTStack/flinkx"
"wangzhiwubigdata/God-Of-BigData" -> "apache/flink"
"wangzhiwubigdata/God-Of-BigData" -> "ververica/flink-cdc-connectors"
"wangzhiwubigdata/God-Of-BigData" -> "lw-lin/CoolplaySpark"
"wangzhiwubigdata/God-Of-BigData" -> "DTStack/flinkStreamSQL"
"wangzhiwubigdata/God-Of-BigData" -> "zhp8341/flink-streaming-platform-web"
"wangzhiwubigdata/God-Of-BigData" -> "alibaba/DataX" ["e"=1]
"wangzhiwubigdata/God-Of-BigData" -> "realguoshuai/hadoop_study"
"zapr-oss/druidry" -> "implydata/druid-client"
"zapr-oss/druidry" -> "implydata/plyql"
"cloudera/impyla" -> "dropbox/PyHive"
"cloudera/impyla" -> "BradRuderman/pyhs2"
"cloudera/impyla" -> "cloudera/Impala"
"cloudera/impyla" -> "spotify/snakebite"
"cloudera/impyla" -> "cloudera/ibis" ["e"=1]
"cloudera/impyla" -> "cloudera/kudu"
"cloudera/impyla" -> "wbolster/happybase" ["e"=1]
"cloudera/impyla" -> "laserson/impyla"
"cloudera/impyla" -> "apache/kudu"
"cloudera/impyla" -> "apache/impala"
"cloudera/impyla" -> "cloudera/livy"
"cloudera/impyla" -> "cloudera/hue"
"cloudera/impyla" -> "mtth/hdfs"
"cloudera/impyla" -> "jupyter-incubator/sparkmagic"
"cloudera/impyla" -> "linkedin/dr-elephant"
"SnappyDataInc/snappydata" -> "apache/incubator-hawq"
"SnappyDataInc/snappydata" -> "apache/incubator-hudi"
"SnappyDataInc/snappydata" -> "apache/incubator-carbondata"
"SnappyDataInc/snappydata" -> "apache/incubator-geode"
"SnappyDataInc/snappydata" -> "sameeragarwal/blinkdb" ["e"=1]
"SnappyDataInc/snappydata" -> "SparklineData/spark-druid-olap"
"SnappyDataInc/snappydata" -> "allwefantasy/streamingpro"
"SnappyDataInc/snappydata" -> "Intel-bigdata/OAP"
"SnappyDataInc/snappydata" -> "linkedin/pinot"
"SnappyDataInc/snappydata" -> "Intel-bigdata/spark-adaptive"
"SnappyDataInc/snappydata" -> "linkedin/dr-elephant"
"SnappyDataInc/snappydata" -> "tuplejump/FiloDB"
"SnappyDataInc/snappydata" -> "edp963/wormhole"
"SnappyDataInc/snappydata" -> "SnappyDataInc/snappy-store"
"SnappyDataInc/snappydata" -> "uber/AthenaX"
"airbnb/airflow" -> "airbnb/airpal"
"airbnb/airflow" -> "pinterest/pinball"
"airbnb/airflow" -> "airbnb/caravel"
"airbnb/airflow" -> "facebook/presto" ["e"=1]
"airbnb/airflow" -> "airbnb/aerosolve"
"airbnb/airflow" -> "spotify/luigi" ["e"=1]
"airbnb/airflow" -> "apache/incubator-zeppelin"
"airbnb/airflow" -> "EverythingMe/redash"
"airbnb/airflow" -> "linkedin/gobblin"
"airbnb/airflow" -> "linkedin/pinot"
"airbnb/airflow" -> "stitchfix/pyxley" ["e"=1]
"airbnb/airflow" -> "pinterest/secor" ["e"=1]
"airbnb/airflow" -> "cloudera/ibis" ["e"=1]
"airbnb/airflow" -> "mistercrunch/panoramix"
"airbnb/airflow" -> "confluentinc/bottledwater-pg" ["e"=1]
"airbnb/airpal" -> "airbnb/aerosolve"
"airbnb/airpal" -> "facebook/presto" ["e"=1]
"airbnb/airpal" -> "airbnb/alerts"
"airbnb/airpal" -> "airbnb/airflow"
"airbnb/airpal" -> "airbnb/apple-tv-auth"
"airbnb/airpal" -> "airbnb/bugsnag-android"
"airbnb/airpal" -> "airbnb/appear"
"airbnb/airpal" -> "airbnb/anotherlens"
"airbnb/airpal" -> "airbnb/airbnb-spark-thrift"
"airbnb/airpal" -> "airbnb/audited"
"airbnb/airpal" -> "airbnb/aws-cli"
"airbnb/airpal" -> "airbnb/android-mapviewballoons"
"airbnb/airpal" -> "airbnb/apollo-android"
"airbnb/airpal" -> "airbnb/billow"
"airbnb/airpal" -> "airbnb/brace"
"apache/drill" -> "apache/calcite"
"apache/drill" -> "apache/phoenix"
"apache/drill" -> "apache/kudu"
"apache/drill" -> "cloudera/Impala"
"apache/drill" -> "apache/kylin"
"apache/drill" -> "apache/impala"
"apache/drill" -> "apache/tez"
"apache/drill" -> "apache/incubator-pinot"
"apache/drill" -> "dremio/dremio-oss"
"apache/drill" -> "apache/hive"
"apache/drill" -> "apache/sqoop"
"apache/drill" -> "apache/carbondata"
"apache/drill" -> "prestodb/presto"
"apache/drill" -> "apache/hbase"
"apache/drill" -> "apache/ignite"
"linkedin/rest.li" -> "linkedin/parseq"
"linkedin/rest.li" -> "linkedin/ambry"
"linkedin/rest.li" -> "linkedin/databus" ["e"=1]
"linkedin/rest.li" -> "linkedin/gobblin"
"linkedin/rest.li" -> "linkedin/pinot"
"linkedin/rest.li" -> "reactor/reactor" ["e"=1]
"linkedin/rest.li" -> "twitter/finagle" ["e"=1]
"linkedin/rest.li" -> "Netflix/archaius" ["e"=1]
"linkedin/rest.li" -> "twitter/ambrose" ["e"=1]
"linkedin/rest.li" -> "voldemort/voldemort" ["e"=1]
"linkedin/rest.li" -> "typesafehub/config" ["e"=1]
"linkedin/rest.li" -> "linkedin/PalDB" ["e"=1]
"linkedin/rest.li" -> "linkedin/camus"
"linkedin/rest.li" -> "Netflix/RxJava" ["e"=1]
"linkedin/rest.li" -> "dropwizard/dropwizard" ["e"=1]
"will-che/flink-recommandSystem-demo" -> "gingerredjade/flink-userportrait-main"
"will-che/flink-recommandSystem-demo" -> "collabH/bigdata-growth"
"will-che/flink-recommandSystem-demo" -> "zhp8341/flink-streaming-platform-web"
"will-che/flink-recommandSystem-demo" -> "will-che/BigData-Interview"
"will-che/flink-recommandSystem-demo" -> "ittqqzz/ECommerceRecommendSystem" ["e"=1]
"will-che/flink-recommandSystem-demo" -> "qu-way/flink-commodity-recommendation-system" ["e"=1]
"will-che/flink-recommandSystem-demo" -> "MoRan1607/BigDataGuide"
"will-che/flink-recommandSystem-demo" -> "apache/incubator-streampark"
"will-che/flink-recommandSystem-demo" -> "geekyouth/SZT-bigdata"
"will-che/flink-recommandSystem-demo" -> "DTStack/chunjun"
"will-che/flink-recommandSystem-demo" -> "threeknowbigdata/flink_second_understand"
"will-che/flink-recommandSystem-demo" -> "will-che/flink-simple-tutorial"
"will-che/flink-recommandSystem-demo" -> "simbafl/DataWarehouse"
"will-che/flink-recommandSystem-demo" -> "intsmaze/flink-boot" ["e"=1]
"apache/storm" -> "apache/hbase"
"apache/storm" -> "alibaba/jstorm" ["e"=1]
"apache/storm" -> "apache/hive"
"apache/storm" -> "apache/zookeeper" ["e"=1]
"apache/storm" -> "apache/flume"
"apache/storm" -> "apache/hadoop"
"apache/storm" -> "apache/kafka" ["e"=1]
"apache/storm" -> "apache/flink"
"apache/storm" -> "nathanmarz/storm" ["e"=1]
"apache/storm" -> "apache/spark"
"apache/storm" -> "apache/cassandra"
"apache/storm" -> "apache/kylin"
"apache/storm" -> "twitter/heron"
"apache/storm" -> "yahoo/kafka-manager" ["e"=1]
"apache/storm" -> "apache/mesos" ["e"=1]
"didi/LogiKM" -> "yahoo/CMAK" ["e"=1]
"didi/LogiKM" -> "smartloli/EFAK"
"didi/LogiKM" -> "vran-dev/PrettyZoo" ["e"=1]
"didi/LogiKM" -> "DataLinkDC/dlink"
"didi/LogiKM" -> "streamxhub/streamx"
"didi/LogiKM" -> "ververica/flink-cdc-connectors"
"didi/LogiKM" -> "didi/LogiEM"
"didi/LogiKM" -> "WeiYe-Jing/datax-web"
"didi/LogiKM" -> "didi/nightingale" ["e"=1]
"didi/LogiKM" -> "pingfangushi/screw" ["e"=1]
"didi/LogiKM" -> "apache/dolphinscheduler"
"didi/LogiKM" -> "DTStack/flinkx"
"didi/LogiKM" -> "zhp8341/flink-streaming-platform-web"
"didi/LogiKM" -> "didi/LogiAM"
"didi/LogiKM" -> "alibaba/SREWorks" ["e"=1]
"timescaledb/timescaledb" -> "timescale/docs.timescale.com-content"
"timescaledb/timescaledb" -> "iobeam/iobeam-client-java"
"timescaledb/timescaledb" -> "timescale/pg_prometheus"
"timescaledb/timescaledb" -> "iobeam/iobeam"
"timescaledb/timescaledb" -> "iobeam/sample-android-wifi-rssi"
"transceptor-technology/siridb-server" -> "transceptor-technology/aiogcd"
"transceptor-technology/siridb-server" -> "thingsdb/ThingsDB"
"Observe-secretly/HbaseGUI" -> "bit-ware/HBaseXplorer"
"Observe-secretly/HbaseGUI" -> "HY-ZhengWei/HBaseClient"
"Observe-secretly/HbaseGUI" -> "apachecn/hbase-doc-zh"
"analysys/presto-hbase-connector" -> "zeeshanabid94/presto"
"analysys/presto-hbase-connector" -> "harbby/presto-connectors"
"analysys/presto-hbase-connector" -> "yanagishima/yanagishima"
"analysys/presto-hbase-connector" -> "prestosql/presto"
"analysys/presto-hbase-connector" -> "apache/hbase-connectors"
"analysys/presto-hbase-connector" -> "TianLangStudio/DataXServer"
"hortonworks-spark/shc" -> "nerdammer/spark-hbase-connector"
"hortonworks-spark/shc" -> "cloudera-labs/SparkOnHBase"
"hortonworks-spark/shc" -> "apache/hbase-connectors"
"hortonworks-spark/shc" -> "Huawei-Spark/Spark-SQL-on-HBase"
"hortonworks-spark/shc" -> "RedisLabs/spark-redis"
"hortonworks-spark/shc" -> "allwefantasy/streamingpro"
"hortonworks-spark/shc" -> "unicredit/hbase-rdd"
"hortonworks-spark/shc" -> "allwefantasy/spark-binlog"
"hortonworks-spark/shc" -> "jaceklaskowski/spark-structured-streaming-book"
"hortonworks-spark/shc" -> "NGDATA/hbase-indexer" ["e"=1]
"hortonworks-spark/shc" -> "teeyog/IQL"
"hortonworks-spark/shc" -> "apache/incubator-livy"
"hortonworks-spark/shc" -> "cloudera/livy"
"hortonworks-spark/shc" -> "apache/phoenix"
"hortonworks-spark/shc" -> "lw-lin/CoolplaySpark"
"yanagishima/yanagishima" -> "analysys/presto-hbase-connector"
"yanagishima/yanagishima" -> "lyft/presto-gateway"
"yanagishima/yanagishima" -> "treasure-data/prestogres"
"yanagishima/yanagishima" -> "yaooqinn/spark-authorizer"
"yanagishima/yanagishima" -> "WeBankFinTech/Qualitis"
"yanagishima/yanagishima" -> "prestosql/presto"
"yanagishima/yanagishima" -> "linkedin/transport"
"yanagishima/yanagishima" -> "scxwhite/hera"
"yanagishima/yanagishima" -> "airbnb/airpal"
"yanagishima/yanagishima" -> "line/decaton" ["e"=1]
"yanagishima/yanagishima" -> "apache/incubator-kyuubi"
"yanagishima/yanagishima" -> "uber/AthenaX"
"yanagishima/yanagishima" -> "edp963/wormhole"
"yanagishima/yanagishima" -> "wix/quix" ["e"=1]
"yanagishima/yanagishima" -> "InterestingLab/waterdrop"
"apache/avro" -> "apache/flume"
"apache/avro" -> "apache/sqoop"
"apache/avro" -> "apache/hbase"
"apache/avro" -> "confluentinc/schema-registry" ["e"=1]
"apache/avro" -> "apache/hive"
"apache/avro" -> "apache/pig"
"apache/avro" -> "apache/parquet-mr"
"apache/avro" -> "apache/storm"
"apache/avro" -> "apache/oozie"
"apache/avro" -> "apache/thrift" ["e"=1]
"apache/avro" -> "apache/cassandra"
"apache/avro" -> "apache/parquet-format"
"apache/avro" -> "apache/zookeeper" ["e"=1]
"apache/avro" -> "apache/impala"
"apache/avro" -> "apache/mesos" ["e"=1]
"jacksu/utils4s" -> "lw-lin/CoolplaySpark"
"jacksu/utils4s" -> "endymecy/spark-ml-source-analysis"
"jacksu/utils4s" -> "allwefantasy/streamingpro"
"jacksu/utils4s" -> "xubo245/SparkLearning"
"jacksu/utils4s" -> "spirom/LearningSpark"
"jacksu/utils4s" -> "Centaur/repox" ["e"=1]
"jacksu/utils4s" -> "InterestingLab/waterdrop"
"jacksu/utils4s" -> "apachecn/spark-doc-zh"
"jacksu/utils4s" -> "cjuexuan/mynote"
"jacksu/utils4s" -> "JerryLead/SparkInternals"
"jacksu/utils4s" -> "spark-jobserver/spark-jobserver"
"jacksu/utils4s" -> "realguoshuai/hadoop_study"
"jacksu/utils4s" -> "ColZer/DigAndBuried"
"jacksu/utils4s" -> "edp963/wormhole"
"jacksu/utils4s" -> "fayson/cdhproject"
"flink-china/flink-training-course" -> "zhisheng17/flink-learning"
"flink-china/flink-training-course" -> "DTStack/flinkx"
"flink-china/flink-training-course" -> "DTStack/flinkStreamSQL"
"flink-china/flink-training-course" -> "CheckChe0803/flink-recommandSystem-demo"
"flink-china/flink-training-course" -> "apache/flink"
"flink-china/flink-training-course" -> "wangzhiwubigdata/God-Of-BigData"
"flink-china/flink-training-course" -> "ververica/flink-cdc-connectors"
"flink-china/flink-training-course" -> "lw-lin/CoolplaySpark"
"flink-china/flink-training-course" -> "alibaba/Alink"
"flink-china/flink-training-course" -> "zhp8341/flink-streaming-platform-web"
"flink-china/flink-training-course" -> "InterestingLab/waterdrop"
"flink-china/flink-training-course" -> "Qihoo360/Quicksql"
"flink-china/flink-training-course" -> "ververica/sql-training"
"flink-china/flink-training-course" -> "streamxhub/streamx"
"flink-china/flink-training-course" -> "flink-china/flink-forward-china-2018"
"datageartech/datagear" -> "WeBankFinTech/DataSphereStudio"
"datageartech/datagear" -> "running-elephant/datart"
"datageartech/datagear" -> "WeiYe-Jing/datax-web"
"datageartech/datagear" -> "ddiu8081/ChartFun" ["e"=1]
"datageartech/datagear" -> "dataease/dataease" ["e"=1]
"datageartech/datagear" -> "wxgzgl/LarkMidTable"
"datageartech/datagear" -> "jeecgboot/JimuReport" ["e"=1]
"datageartech/datagear" -> "DataLinkDC/dlink"
"datageartech/datagear" -> "edp963/davinci"
"datageartech/datagear" -> "hairless/plink"
"datageartech/datagear" -> "freakchick/DBApi" ["e"=1]
"datageartech/datagear" -> "Qihoo360/Quicksql"
"datageartech/datagear" -> "birdLark/LarkMidTable"
"datageartech/datagear" -> "WeBankFinTech/Qualitis"
"datageartech/datagear" -> "DTStack/Taier" ["e"=1]
"StarRocks/starrocks" -> "apache/incubator-doris"
"StarRocks/starrocks" -> "ververica/flink-cdc-connectors"
"StarRocks/starrocks" -> "facebookincubator/velox" ["e"=1]
"StarRocks/starrocks" -> "apache/doris"
"StarRocks/starrocks" -> "apache/iceberg"
"StarRocks/starrocks" -> "apache/incubator-seatunnel"
"StarRocks/starrocks" -> "apache/hudi"
"StarRocks/starrocks" -> "apache/calcite"
"StarRocks/starrocks" -> "trinodb/trino"
"StarRocks/starrocks" -> "oceanbase/oceanbase" ["e"=1]
"StarRocks/starrocks" -> "datafuselabs/databend" ["e"=1]
"StarRocks/starrocks" -> "delta-io/delta"
"StarRocks/starrocks" -> "prestodb/presto"
"StarRocks/starrocks" -> "pingcap/tiflash" ["e"=1]
"StarRocks/starrocks" -> "ClickHouse/ClickHouse" ["e"=1]
"allegro/turnilo" -> "yahoo/swiv"
"allegro/turnilo" -> "implydata/plywood"
"allegro/turnilo" -> "implydata/pivot"
"allegro/turnilo" -> "druid-io/pydruid"
"allegro/turnilo" -> "allegro/vaas" ["e"=1]
"allegro/turnilo" -> "allegro/hermes" ["e"=1]
"allegro/turnilo" -> "druid-io/tranquility"
"allegro/turnilo" -> "allegro/envoy-control" ["e"=1]
"allegro/turnilo" -> "druid-io/druid-operator"
"allegro/turnilo" -> "geo-opensource/pivot"
"allegro/turnilo" -> "divolte/divolte-collector"
"allegro/turnilo" -> "allegro/biggerquery"
"allegro/turnilo" -> "wikimedia/operations-software-druid_exporter"
"allegro/turnilo" -> "allegro/node-worker-nodes" ["e"=1]
"allegro/turnilo" -> "zapr-oss/druidry"
"apache/doris" -> "StarRocks/starrocks"
"apache/doris" -> "apache/hudi"
"apache/doris" -> "apache/incubator-seatunnel"
"apache/doris" -> "apache/iceberg"
"apache/doris" -> "ververica/flink-cdc-connectors"
"apache/doris" -> "apache/dolphinscheduler"
"apache/doris" -> "DataLinkDC/dlink"
"apache/doris" -> "apache/incubator-streampark"
"apache/doris" -> "apache/calcite"
"apache/doris" -> "trinodb/trino"
"apache/doris" -> "datafuselabs/databend" ["e"=1]
"apache/doris" -> "datahub-project/datahub" ["e"=1]
"apache/doris" -> "facebookincubator/velox" ["e"=1]
"apache/doris" -> "apache/pulsar" ["e"=1]
"apache/doris" -> "apache/druid"
"dremio/dremio-oss" -> "projectnessie/nessie"
"dremio/dremio-oss" -> "dremio/gandiva"
"dremio/dremio-oss" -> "apache/drill"
"dremio/dremio-oss" -> "substrait-io/substrait" ["e"=1]
"dremio/dremio-oss" -> "Teradata/kylo" ["e"=1]
"dremio/dremio-oss" -> "apache/calcite"
"dremio/dremio-oss" -> "dremio/arrow"
"dremio/dremio-oss" -> "apache/iceberg"
"dremio/dremio-oss" -> "oap-project/gluten"
"dremio/dremio-oss" -> "delta-io/delta"
"dremio/dremio-oss" -> "dremio/dremio-cloud-tools"
"dremio/dremio-oss" -> "apache/arrow" ["e"=1]
"dremio/dremio-oss" -> "apache/incubator-iceberg"
"dremio/dremio-oss" -> "apache/parquet-format"
"dremio/dremio-oss" -> "apache/incubator-kyuubi"
"trinodb/trino" -> "apache/iceberg"
"trinodb/trino" -> "prestodb/presto"
"trinodb/trino" -> "delta-io/delta"
"trinodb/trino" -> "apache/hudi"
"trinodb/trino" -> "apache/calcite"
"trinodb/trino" -> "StarRocks/starrocks"
"trinodb/trino" -> "facebookincubator/velox" ["e"=1]
"trinodb/trino" -> "apache/incubator-doris"
"trinodb/trino" -> "ververica/flink-cdc-connectors"
"trinodb/trino" -> "duckdb/duckdb" ["e"=1]
"trinodb/trino" -> "airbytehq/airbyte" ["e"=1]
"trinodb/trino" -> "apache/druid"
"trinodb/trino" -> "apache/arrow" ["e"=1]
"trinodb/trino" -> "apache/flink"
"trinodb/trino" -> "apache/arrow-datafusion" ["e"=1]
"linkedtales/scrapedin" -> "linkedtales/scrapedin-linkedin-crawler"
"linkedtales/scrapedin" -> "jvandenaardweg/linkedin-profile-scraper"
"linkedtales/scrapedin" -> "joeyism/linkedin_scraper"
"linkedtales/scrapedin" -> "eracle/linkedin"
"linkedtales/scrapedin" -> "austinoboyle/scrape-linkedin-selenium"
"linkedtales/scrapedin" -> "fabriziomiano/linkedin-scraper"
"linkedtales/scrapedin" -> "FutoRicky/linkedin-email-extractor"
"linkedtales/scrapedin" -> "spinlud/linkedin-jobs-scraper"
"linkedtales/scrapedin" -> "federicohaag/LinkedInScraping"
"linkedtales/scrapedin" -> "tomquirk/linkedin-api"
"sunnyandgood/BigData" -> "monsonlee/BigData"
"sunnyandgood/BigData" -> "WadeStack/BigDataIE"
"sunnyandgood/BigData" -> "whirlys/BigData-In-Practice"
"sunnyandgood/BigData" -> "Dr11ft/BigDataGuide"
"sunnyandgood/BigData" -> "weiweifan/Big-Data-Resources"
"sunnyandgood/BigData" -> "CheckChe0803/BigData-Interview"
"sunnyandgood/BigData" -> "realguoshuai/hadoop_study"
"sunnyandgood/BigData" -> "houshanren/big_data_architect_skills"
"sunnyandgood/BigData" -> "SwordfallYeung/Interview_BigData"
"sunnyandgood/BigData" -> "oeljeklaus-you/UserActionAnalyzePlatform"
"sunnyandgood/BigData" -> "TALKDATA/JavaBigData"
"sunnyandgood/BigData" -> "Zouxxyy/bigdata-learning"
"sunnyandgood/BigData" -> "oeljeklaus-you/JavaOrBigData-Interview"
"sunnyandgood/BigData" -> "Thpffcj/BigData-Getting-Started"
"sunnyandgood/BigData" -> "asdud/Bigdata_project"
"397090770/spark-summit-north-america-2018-06" -> "397090770/spark-summit-2017-SanFrancisco"
"397090770/spark-summit-north-america-2018-06" -> "397090770/spark-summit-2017-Europe"
"apache/hbase" -> "apache/hive"
"apache/hbase" -> "apache/hadoop"
"apache/hbase" -> "apache/zookeeper" ["e"=1]
"apache/hbase" -> "apache/cassandra"
"apache/hbase" -> "apache/storm"
"apache/hbase" -> "apache/flume"
"apache/hbase" -> "apache/kafka" ["e"=1]
"apache/hbase" -> "apache/flink"
"apache/hbase" -> "apache/lucene-solr"
"apache/hbase" -> "apache/kylin"
"apache/hbase" -> "apache/phoenix"
"apache/hbase" -> "apache/spark"
"apache/hbase" -> "apache/tomcat" ["e"=1]
"apache/hbase" -> "apache/calcite"
"apache/hbase" -> "OpenTSDB/opentsdb"
"spark-jobserver/spark-jobserver" -> "cloudera/livy"
"spark-jobserver/spark-jobserver" -> "datastax/spark-cassandra-connector"
"spark-jobserver/spark-jobserver" -> "andypetrella/spark-notebook"
"spark-jobserver/spark-jobserver" -> "holdenk/spark-testing-base"
"spark-jobserver/spark-jobserver" -> "JerryLead/SparkInternals"
"spark-jobserver/spark-jobserver" -> "ooyala/spark-jobserver"
"spark-jobserver/spark-jobserver" -> "lw-lin/CoolplaySpark"
"spark-jobserver/spark-jobserver" -> "databricks/scala-style-guide" ["e"=1]
"spark-jobserver/spark-jobserver" -> "apache/incubator-livy"
"spark-jobserver/spark-jobserver" -> "databricks/spark-csv"
"spark-jobserver/spark-jobserver" -> "allwefantasy/streamingpro"
"spark-jobserver/spark-jobserver" -> "apache/incubator-zeppelin"
"spark-jobserver/spark-jobserver" -> "linkedin/dr-elephant"
"spark-jobserver/spark-jobserver" -> "OryxProject/oryx" ["e"=1]
"spark-jobserver/spark-jobserver" -> "databricks/learning-spark"
"LuckyZXL2016/News_Spark" -> "whirlys/BigData-In-Practice"
"LuckyZXL2016/News_Spark" -> "luochana/News_recommend" ["e"=1]
"LuckyZXL2016/News_Spark" -> "oeljeklaus-you/UserActionAnalyzePlatform"
"LuckyZXL2016/News_Spark" -> "ljcan/SparkStreaming"
"LuckyZXL2016/News_Spark" -> "yangtong123/StudySpark"
"LuckyZXL2016/News_Spark" -> "WadeStack/BigDataIE"
"LuckyZXL2016/News_Spark" -> "LuckyZXL2016/Movie_Recommend" ["e"=1]
"LuckyZXL2016/News_Spark" -> "monsonlee/BigData"
"LuckyZXL2016/News_Spark" -> "wanghan0501/WiFiProbeAnalysis"
"LuckyZXL2016/News_Spark" -> "geekyouth/SZT-bigdata"
"LuckyZXL2016/News_Spark" -> "asdud/Bigdata_project"
"LuckyZXL2016/News_Spark" -> "radishT/Job_Analysis" ["e"=1]
"LuckyZXL2016/News_Spark" -> "20100507/emotional_analysis"
"LuckyZXL2016/News_Spark" -> "Thpffcj/BigData-Getting-Started"
"LuckyZXL2016/News_Spark" -> "liguozhong/demo_11.11_storm-spark-hadoop"
"openlookeng/hetu-core" -> "apache/carbondata"
"openlookeng/hetu-core" -> "NetEase/arctic"
"openlookeng/hetu-core" -> "linkedin/coral"
"openlookeng/hetu-core" -> "Qihoo360/Quicksql"
"openlookeng/hetu-core" -> "edp963/wormhole"
"openlookeng/hetu-core" -> "edp963/moonbox"
"openlookeng/hetu-core" -> "lyft/presto-gateway"
"openlookeng/hetu-core" -> "qlangtech/tis"
"openlookeng/hetu-core" -> "bytedance/bitsail"
"openlookeng/hetu-core" -> "cubefs/compass"
"openlookeng/hetu-core" -> "Qihoo360/XSQL"
"databricks/spark-training" -> "databricks/spark-knowledgebase"
"databricks/spark-training" -> "databricks/reference-apps"
"databricks/spark-training" -> "amplab/training"
"databricks/spark-training" -> "databricks/spark-perf"
"databricks/spark-training" -> "databricks/spark-sklearn"
"databricks/spark-training" -> "databricks/spark-corenlp"
"databricks/spark-training" -> "databricks/learning-spark"
"databricks/spark-training" -> "databricks/spark-csv"
"databricks/spark-training" -> "JerryLead/SparkLearning"
"streamxhub/streamx" -> "DataLinkDC/dlink"
"streamxhub/streamx" -> "zhp8341/flink-streaming-platform-web"
"streamxhub/streamx" -> "ververica/flink-cdc-connectors"
"streamxhub/streamx" -> "DTStack/flinkx"
"streamxhub/streamx" -> "DTStack/flinkStreamSQL"
"streamxhub/streamx" -> "apache/flink-table-store"
"streamxhub/streamx" -> "apache/incubator-seatunnel"
"streamxhub/streamx" -> "WeBankFinTech/DataSphereStudio"
"streamxhub/streamx" -> "apache/bahir-flink"
"streamxhub/streamx" -> "InterestingLab/waterdrop"
"streamxhub/streamx" -> "ververica/flink-sql-gateway"
"streamxhub/streamx" -> "Qihoo360/Quicksql"
"streamxhub/streamx" -> "apache/iceberg"
"streamxhub/streamx" -> "wxgzgl/LarkMidTable"
"streamxhub/streamx" -> "apache/incubator-doris"
"ververica/flink-cdc-connectors" -> "DataLinkDC/dlink"
"ververica/flink-cdc-connectors" -> "zhp8341/flink-streaming-platform-web"
"ververica/flink-cdc-connectors" -> "DTStack/flinkx"
"ververica/flink-cdc-connectors" -> "streamxhub/streamx"
"ververica/flink-cdc-connectors" -> "apache/hudi"
"ververica/flink-cdc-connectors" -> "apache/iceberg"
"ververica/flink-cdc-connectors" -> "apache/incubator-seatunnel"
"ververica/flink-cdc-connectors" -> "debezium/debezium" ["e"=1]
"ververica/flink-cdc-connectors" -> "DTStack/flinkStreamSQL"
"ververica/flink-cdc-connectors" -> "flink-china/flink-training-course"
"ververica/flink-cdc-connectors" -> "apache/flink"
"ververica/flink-cdc-connectors" -> "zhisheng17/flink-learning"
"ververica/flink-cdc-connectors" -> "apache/dolphinscheduler"
"ververica/flink-cdc-connectors" -> "apache/incubator-doris"
"ververica/flink-cdc-connectors" -> "WeiYe-Jing/datax-web"
"realguoshuai/hadoop_study" -> "collabH/repository"
"realguoshuai/hadoop_study" -> "CheckChe0803/BigData-Interview"
"realguoshuai/hadoop_study" -> "oeljeklaus-you/UserActionAnalyzePlatform"
"realguoshuai/hadoop_study" -> "WadeStack/BigDataIE"
"realguoshuai/hadoop_study" -> "sunnyandgood/BigData"
"realguoshuai/hadoop_study" -> "chu888chu888/HadoopAndSparkDataStudy"
"realguoshuai/hadoop_study" -> "monsonlee/BigData"
"realguoshuai/hadoop_study" -> "geekyouth/SZT-bigdata"
"realguoshuai/hadoop_study" -> "gingerredjade/flink-userportrait-main"
"realguoshuai/hadoop_study" -> "ljcan/SparkStreaming"
"realguoshuai/hadoop_study" -> "whirlys/BigData-In-Practice"
"realguoshuai/hadoop_study" -> "apachecn/flink-doc-zh"
"realguoshuai/hadoop_study" -> "DTStack/flinkStreamSQL"
"realguoshuai/hadoop_study" -> "CheckChe0803/flink-recommandSystem-demo"
"realguoshuai/hadoop_study" -> "InterestingLab/waterdrop"
"springMoon/sqlSubmit" -> "shengjk/flinksql-platform"
"springMoon/sqlSubmit" -> "springMoon/flink-rookie"
"Alluxio/alluxio" -> "prestodb/presto"
"Alluxio/alluxio" -> "apache/calcite"
"Alluxio/alluxio" -> "apache/iceberg"
"Alluxio/alluxio" -> "delta-io/delta"
"Alluxio/alluxio" -> "apache/kylin"
"Alluxio/alluxio" -> "juicedata/juicefs" ["e"=1]
"Alluxio/alluxio" -> "apache/flink"
"Alluxio/alluxio" -> "apache/hbase"
"Alluxio/alluxio" -> "apache/incubator-doris"
"Alluxio/alluxio" -> "apache/hudi"
"Alluxio/alluxio" -> "apache/ignite"
"Alluxio/alluxio" -> "apache/hive"
"Alluxio/alluxio" -> "apache/beam"
"Alluxio/alluxio" -> "apache/arrow" ["e"=1]
"Alluxio/alluxio" -> "apache/kudu"
"alibaba/rsqldb" -> "apache/rocketmq-streams"
"alibaba/rsqldb" -> "apache/rocketmq-schema-registry"
"amplab/succinct" -> "amplab/spark-indexedrdd"
"amplab/succinct" -> "amplab/keystone"
"apache/calcite" -> "prestodb/presto"
"apache/calcite" -> "apache/iceberg"
"apache/calcite" -> "Qihoo360/Quicksql"
"apache/calcite" -> "apache/drill"
"apache/calcite" -> "apache/kylin"
"apache/calcite" -> "apache/incubator-doris"
"apache/calcite" -> "quxiucheng/apache-calcite-tutorial"
"apache/calcite" -> "apache/hive"
"apache/calcite" -> "facebookincubator/velox" ["e"=1]
"apache/calcite" -> "apache/hudi"
"apache/calcite" -> "trinodb/trino"
"apache/calcite" -> "apache/flink"
"apache/calcite" -> "delta-io/delta"
"apache/calcite" -> "ververica/flink-cdc-connectors"
"apache/calcite" -> "apache/hbase"
"apache/gobblin" -> "linkedin/coral"
"apache/incubator-pinot" -> "apache/incubator-hudi"
"apache/incubator-pinot" -> "apache/drill"
"apache/incubator-pinot" -> "apache/incubator-iceberg"
"apache/incubator-pinot" -> "uber/aresdb"
"apache/incubator-pinot" -> "pravega/pravega"
"apache/incubator-pinot" -> "apache/iceberg"
"apache/incubator-pinot" -> "apache/incubator-gobblin"
"apache/incubator-pinot" -> "apache/carbondata"
"apache/incubator-pinot" -> "apache/calcite"
"apache/incubator-pinot" -> "delta-io/delta"
"apache/incubator-pinot" -> "apache/druid"
"apache/incubator-pinot" -> "uber/AthenaX"
"apache/incubator-pinot" -> "apache/incubator-druid"
"apache/incubator-pinot" -> "apache/incubator-doris"
"apache/incubator-pinot" -> "apache/kylin"
"apache/rocketmq-streams" -> "alibaba/rsqldb"
"apache/rocketmq-streams" -> "apache/rocketmq-mqtt"
"apache/rocketmq-streams" -> "apache/rocketmq-connect"
"apache/rocketmq-streams" -> "apache/rocketmq-schema-registry"
"apache/rocketmq-streams" -> "apache/rocketmq-flink"
"apache/rocketmq-streams" -> "openmessaging/openchaos"
"apache/rocketmq-streams" -> "apache/rocketmq-clients"
"apache/rocketmq-streams" -> "openmessaging/dledger"
"apache/rocketmq-streams" -> "apache/rocketmq-eventbridge"
"eventql/eventql" -> "shunfei/indexr"
"eventql/eventql" -> "SoftwareDefinedBuildings/btrdb"
"eventql/eventql" -> "traildb/traildb"
"eventql/eventql" -> "mapd/mapd-core"
"eventql/eventql" -> "yandex/clickhouse-jdbc" ["e"=1]
"eventql/eventql" -> "facebookincubator/beringei"
"eventql/eventql" -> "andygrove/datafusion-rs" ["e"=1]
"eventql/eventql" -> "cruppstahl/upscaledb" ["e"=1]
"mapd/mapd-charting" -> "mapd/mapd-connector"
"mapd/mapd-charting" -> "mapd/mapd-crossfilter"
"mapd/mapd-charting" -> "mapd/mapd-tweetmap-2"
"mapd/mapd-charting" -> "mapd/mapd-core"
"xinghalo/Teddy" -> "qindongliang/streaming-offset-to-zk"
"xinghalo/Teddy" -> "xiaokugua250/DataMingProject"
"twitter/heron" -> "twitter/distributedlog"
"twitter/heron" -> "alibaba/jstorm" ["e"=1]
"twitter/heron" -> "apache/storm"
"twitter/heron" -> "druid-io/druid"
"twitter/heron" -> "twitter/summingbird" ["e"=1]
"twitter/heron" -> "linkedin/gobblin"
"twitter/heron" -> "twitter/finagle" ["e"=1]
"twitter/heron" -> "linkedin/pinot"
"twitter/heron" -> "amplab/tachyon" ["e"=1]
"twitter/heron" -> "apache/incubator-beam"
"twitter/heron" -> "yahoo/pulsar" ["e"=1]
"twitter/heron" -> "facebook/presto" ["e"=1]
"twitter/heron" -> "twitter/scalding" ["e"=1]
"twitter/heron" -> "alibaba/RocketMQ" ["e"=1]
"twitter/heron" -> "apache/mesos" ["e"=1]
"SPLWare/esProc" -> "bytedance/bitsail"
"SPLWare/esProc" -> "Qihoo360/Quicksql"
"SPLWare/esProc" -> "apache/incubator-seatunnel"
"SPLWare/esProc" -> "streamxhub/streamx"
"SPLWare/esProc" -> "ververica/flink-cdc-connectors"
"SPLWare/esProc" -> "didi/LogiKM"
"SPLWare/esProc" -> "apache/iotdb"
"SPLWare/esProc" -> "apache/incubator-doris"
"SPLWare/esProc" -> "running-elephant/datart"
"SPLWare/esProc" -> "DataLinkDC/dlink"
"SPLWare/esProc" -> "StarRocks/starrocks"
"SPLWare/esProc" -> "WeBankFinTech/DataSphereStudio"
"SPLWare/esProc" -> "dataease/dataease" ["e"=1]
"SPLWare/esProc" -> "datageartech/datagear"
"SPLWare/esProc" -> "alibaba/compileflow" ["e"=1]
"meshplus/bitxhub" -> "meshplus/pier"
"meshplus/bitxhub" -> "hyperchain/hyperchain"
"meshplus/bitxhub" -> "erda-project/erda" ["e"=1]
"meshplus/bitxhub" -> "meshplus/hyperbench"
"meshplus/bitxhub" -> "meshplus/pier-client-fabric"
"meshplus/bitxhub" -> "hyperchain/javasdk"
"meshplus/bitxhub" -> "didi/Logi-KafkaManager"
"meshplus/bitxhub" -> "meshplus/goduck"
"meshplus/bitxhub" -> "hyperbench/hyperbench"
"meshplus/bitxhub" -> "WeBankBlockchain/WeCross"
"meshplus/bitxhub" -> "WeBankFinTech/WeCross" ["e"=1]
"meshplus/bitxhub" -> "didi/nightingale" ["e"=1]
"meshplus/bitxhub" -> "meshplus/bitxhub-core"
"meshplus/bitxhub" -> "jonluo94/baasmanager" ["e"=1]
"meshplus/bitxhub" -> "go-chassis/go-chassis" ["e"=1]
"apache/incubator-seatunnel" -> "apache/dolphinscheduler"
"apache/incubator-seatunnel" -> "ververica/flink-cdc-connectors"
"apache/incubator-seatunnel" -> "DataLinkDC/dlink"
"apache/incubator-seatunnel" -> "bytedance/bitsail"
"apache/incubator-seatunnel" -> "streamxhub/streamx"
"apache/incubator-seatunnel" -> "apache/iceberg"
"apache/incubator-seatunnel" -> "apache/hudi"
"apache/incubator-seatunnel" -> "apache/incubator-doris"
"apache/incubator-seatunnel" -> "StarRocks/starrocks"
"apache/incubator-seatunnel" -> "DTStack/chunjun"
"apache/incubator-seatunnel" -> "WeBankFinTech/DataSphereStudio"
"apache/incubator-seatunnel" -> "DTStack/flinkx"
"apache/incubator-seatunnel" -> "apache/doris"
"apache/incubator-seatunnel" -> "apache/incubator-streampark"
"apache/incubator-seatunnel" -> "zhp8341/flink-streaming-platform-web"
"GoogleCloudPlatform/flink-on-k8s-operator" -> "lyft/flinkk8soperator"
"GoogleCloudPlatform/flink-on-k8s-operator" -> "apache/flink-kubernetes-operator"
"GoogleCloudPlatform/flink-on-k8s-operator" -> "apache/flink-docker"
"GoogleCloudPlatform/flink-on-k8s-operator" -> "GoogleCloudPlatform/spark-on-k8s-operator" ["e"=1]
"GoogleCloudPlatform/flink-on-k8s-operator" -> "spotify/flink-on-k8s-operator"
"GoogleCloudPlatform/flink-on-k8s-operator" -> "apache/bahir-flink"
"GoogleCloudPlatform/flink-on-k8s-operator" -> "ververica/flink-sql-gateway"
"GoogleCloudPlatform/flink-on-k8s-operator" -> "apache/flink-statefun"
"GoogleCloudPlatform/flink-on-k8s-operator" -> "wangyang0918/flink-native-k8s-operator"
"GoogleCloudPlatform/flink-on-k8s-operator" -> "volcano-sh/volcano" ["e"=1]
"GoogleCloudPlatform/flink-on-k8s-operator" -> "flink-extended/flink-remote-shuffle"
"GoogleCloudPlatform/flink-on-k8s-operator" -> "streamnative/pulsar-flink"
"GoogleCloudPlatform/flink-on-k8s-operator" -> "ververica/flink-sql-cookbook"
"GoogleCloudPlatform/flink-on-k8s-operator" -> "druid-io/druid-operator"
"GoogleCloudPlatform/flink-on-k8s-operator" -> "apache/flink-benchmarks"
"uber/marmaray" -> "uber/hudi"
"uber/marmaray" -> "apache/incubator-hudi"
"uber/marmaray" -> "apache/incubator-iceberg"
"uber/marmaray" -> "apache/gobblin"
"uber/marmaray" -> "uber/storagetapper"
"uber/marmaray" -> "YotpoLtd/metorikku"
"uber/marmaray" -> "apache/incubator-gobblin"
"uber/marmaray" -> "uber/AthenaX"
"uber/marmaray" -> "qubole/sparklens"
"palantir/pyspark-style-guide" -> "MrPowers/chispa"
"palantir/pyspark-style-guide" -> "awslabs/python-deequ" ["e"=1]
"palantir/pyspark-style-guide" -> "MrPowers/quinn"
"palantir/pyspark-style-guide" -> "databrickslabs/dbx"
"palantir/pyspark-style-guide" -> "MrPowers/mack"
"palantir/pyspark-style-guide" -> "kevinschaich/pyspark-cheatsheet"
"palantir/pyspark-style-guide" -> "MrPowers/spark-style-guide"
"palantir/pyspark-style-guide" -> "AlexIoannides/pyspark-example-project"
"palantir/pyspark-style-guide" -> "abhishek-ch/around-dataengineering" ["e"=1]
"palantir/pyspark-style-guide" -> "awslabs/deequ" ["e"=1]
"palantir/pyspark-style-guide" -> "jupyter-incubator/sparkmagic"
"palantir/pyspark-style-guide" -> "cartershanklin/pyspark-cheatsheet"
"palantir/pyspark-style-guide" -> "OpenLineage/OpenLineage" ["e"=1]
"palantir/pyspark-style-guide" -> "spark-examples/pyspark-examples"
"palantir/pyspark-style-guide" -> "databricks/koalas" ["e"=1]
"afedulov/fraud-detection-demo" -> "cloudera/flink-tutorials"
"afedulov/fraud-detection-demo" -> "ververica/flink-training-exercises"
"afedulov/fraud-detection-demo" -> "luxiaoxun/eagle"
"afedulov/fraud-detection-demo" -> "ververica/sql-training"
"afedulov/fraud-detection-demo" -> "ververica/flink-sql-cookbook"
"afedulov/fraud-detection-demo" -> "apache/flink-training"
"afedulov/fraud-detection-demo" -> "apache/flink-playgrounds"
"WeBankFinTech/Linkis" -> "WeBankFinTech/Scriptis"
"WeBankFinTech/Linkis" -> "WeBankFinTech/DataSphereStudio"
"WeBankFinTech/Linkis" -> "WeBankFinTech/WeDataSphere"
"WeBankFinTech/Linkis" -> "WeBankFinTech/Qualitis"
"WeBankFinTech/Linkis" -> "InterestingLab/waterdrop"
"WeBankFinTech/Linkis" -> "DTStack/flinkx"
"WeBankFinTech/Linkis" -> "Qihoo360/Quicksql"
"WeBankFinTech/Linkis" -> "apache/incubator-dolphinscheduler"
"WeBankFinTech/Linkis" -> "edp963/wormhole"
"WeBankFinTech/Linkis" -> "WeBankFinTech/Exchangis"
"WeBankFinTech/Linkis" -> "edp963/davinci"
"WeBankFinTech/Linkis" -> "DTStack/flinkStreamSQL"
"WeBankFinTech/Linkis" -> "BriData/DBus"
"WeBankFinTech/Linkis" -> "streamxhub/streamx"
"WeBankFinTech/Linkis" -> "zhp8341/flink-streaming-platform-web"
"wuchong/flink-sql-demo" -> "fhueske/flink-sql-demo"
"wuchong/flink-sql-demo" -> "leonardBang/flink-sql-etl"
"wuchong/flink-sql-demo" -> "wuchong/flink-sql-submit"
"wuchong/flink-sql-demo" -> "ververica/sql-training"
"wuchong/flink-sql-demo" -> "sunjincheng121/know_how_know_why"
"wuchong/flink-sql-demo" -> "pyflink/playgrounds"
"wuchong/flink-sql-demo" -> "luxiaoxun/eagle"
"delta-io/delta" -> "apache/iceberg"
"delta-io/delta" -> "databricks/koalas" ["e"=1]
"delta-io/delta" -> "apache/hudi"
"delta-io/delta" -> "prestodb/presto"
"delta-io/delta" -> "trinodb/trino"
"delta-io/delta" -> "apache/calcite"
"delta-io/delta" -> "awslabs/deequ" ["e"=1]
"delta-io/delta" -> "apache/arrow" ["e"=1]
"delta-io/delta" -> "apache/incubator-hudi"
"delta-io/delta" -> "mlflow/mlflow" ["e"=1]
"delta-io/delta" -> "linkedin/datahub" ["e"=1]
"delta-io/delta" -> "delta-io/connectors"
"delta-io/delta" -> "apache/spark"
"delta-io/delta" -> "JerryLead/SparkInternals"
"delta-io/delta" -> "debezium/debezium" ["e"=1]
"apache/sqoop" -> "apache/oozie"
"apache/sqoop" -> "apache/flume"
"apache/sqoop" -> "apache/pig"
"apache/sqoop" -> "apache/hive"
"apache/sqoop" -> "apache/hbase"
"apache/sqoop" -> "apache/tez"
"apache/sqoop" -> "apache/avro"
"apache/sqoop" -> "apache/impala"
"apache/sqoop" -> "apache/phoenix"
"apache/sqoop" -> "apache/ambari"
"apache/sqoop" -> "apache/kudu"
"apache/sqoop" -> "cloudera/Impala"
"apache/sqoop" -> "apache/ranger"
"apache/sqoop" -> "apache/kylin"
"apache/sqoop" -> "apache/drill"
"intel-hadoop/HiBench" -> "yahoo/streaming-benchmarks"
"intel-hadoop/HiBench" -> "databricks/spark-perf"
"intel-hadoop/HiBench" -> "linkedin/dr-elephant"
"intel-hadoop/HiBench" -> "intel-hadoop/HiTune"
"intel-hadoop/HiBench" -> "SparkTC/spark-bench"
"intel-hadoop/HiBench" -> "intel-hadoop/Big-Data-Benchmark-for-Big-Bench"
"intel-hadoop/HiBench" -> "databricks/spark-sql-perf"
"intel-hadoop/HiBench" -> "amplab/benchmark"
"intel-hadoop/HiBench" -> "ColZer/DigAndBuried"
"intel-hadoop/HiBench" -> "hortonworks/hive-testbench"
"intel-hadoop/HiBench" -> "cloudera/impala-tpcds-kit"
"intel-hadoop/HiBench" -> "kayousterhout/trace-analysis"
"intel-hadoop/HiBench" -> "linkedin/camus"
"intel-hadoop/HiBench" -> "Intel-bigdata/OAP"
"intel-hadoop/HiBench" -> "amplab/shark" ["e"=1]
"itisaid/Doris" -> "zhihuili/Dew"
"itisaid/Doris" -> "taireum/go-taireum"
"itisaid/Doris" -> "oldratlee/reactive-practice-at-taobao"
"itisaid/Doris" -> "intel-hadoop/project-panthera-ase"
"zhihuili/Dew" -> "itisaid/Doris"
"zhihuili/Dew" -> "Intel-bigdata/HiBench"
"zhihuili/Dew" -> "intel-hadoop/project-panthera-ase"
"zhihuili/Dew" -> "oldratlee/reactive-practice-at-taobao"
"apache/incubator-doris" -> "StarRocks/starrocks"
"apache/incubator-doris" -> "ververica/flink-cdc-connectors"
"apache/incubator-doris" -> "apache/iceberg"
"apache/incubator-doris" -> "apache/calcite"
"apache/incubator-doris" -> "apache/hudi"
"apache/incubator-doris" -> "apache/kylin"
"apache/incubator-doris" -> "DTStack/flinkx"
"apache/incubator-doris" -> "apache/incubator-seatunnel"
"apache/incubator-doris" -> "apache/incubator-dolphinscheduler"
"apache/incubator-doris" -> "DataLinkDC/dlink"
"apache/incubator-doris" -> "streamxhub/streamx"
"apache/incubator-doris" -> "prestodb/presto"
"apache/incubator-doris" -> "apache/kudu"
"apache/incubator-doris" -> "InterestingLab/waterdrop"
"apache/incubator-doris" -> "DTStack/flinkStreamSQL"
"apache/flink-table-store" -> "flink-extended/flink-remote-shuffle"
"apache/flink-table-store" -> "NetEase/arctic"
"apache/flink-table-store" -> "ververica/flink-sql-gateway"
"apache/flink-table-store" -> "DataLinkDC/dlink"
"apache/flink-table-store" -> "apache/flink-kubernetes-operator"
"apache/flink-table-store" -> "HamaWhiteGG/flink-sql-lineage"
"apache/flink-table-store" -> "ververica/flink-sql-cookbook"
"apache/flink-table-store" -> "apache/flink-benchmarks"
"apache/flink-table-store" -> "bytedance/CloudShuffleService"
"apache/flink-table-store" -> "apache/flink-ml"
"apache/flink-table-store" -> "apache/bahir-flink"
"apache/flink-table-store" -> "nexmark/nexmark"
"apache/flink-table-store" -> "apache/incubator-kyuubi"
"apache/flink-table-store" -> "streamxhub/streamx"
"apache/flink-table-store" -> "flink-extended/flink-dynamic-storage"
"apache/incubator-streampark" -> "DataLinkDC/dlink"
"apache/incubator-streampark" -> "apache/flink-table-store"
"apache/incubator-streampark" -> "apache/incubator-seatunnel"
"apache/incubator-streampark" -> "ververica/flink-cdc-connectors"
"apache/incubator-streampark" -> "bytedance/bitsail"
"apache/incubator-streampark" -> "NetEase/arctic"
"apache/incubator-streampark" -> "zhp8341/flink-streaming-platform-web"
"apache/incubator-streampark" -> "DTStack/chunjun"
"apache/incubator-streampark" -> "apache/incubator-kyuubi"
"apache/incubator-streampark" -> "apache/doris"
"apache/incubator-streampark" -> "apache/iceberg"
"apache/incubator-streampark" -> "DataLinkDC/dinky"
"apache/incubator-streampark" -> "apache/linkis"
"apache/incubator-streampark" -> "apache/hudi"
"apache/incubator-streampark" -> "apache/kyuubi"
"simbafl/DataWarehouse" -> "collabH/repository"
"simbafl/DataWarehouse" -> "gingerredjade/flink-userportrait-main"
"simbafl/DataWarehouse" -> "oeljeklaus-you/UserActionAnalyzePlatform"
"ververica/stateful-functions" -> "apache/flink-statefun"
"ververica/stateful-functions" -> "king/bravo"
"ververica/stateful-functions" -> "nexmark/nexmark"
"ververica/stateful-functions" -> "dataArtisans/da-streamingledger"
"ververica/stateful-functions" -> "flink-extended/flink-remote-shuffle"
"ververica/stateful-functions" -> "apache/flink-web"
"ververica/stateful-functions" -> "alibaba/flink-ai-extended"
"ververica/stateful-functions" -> "apache/flink-table-store"
"ververica/stateful-functions" -> "ottogroup/flink-spector"
"crate/crate" -> "druid-io/druid"
"crate/crate" -> "apache/drill"
"crate/crate" -> "VoltDB/voltdb" ["e"=1]
"crate/crate" -> "apache/ignite"
"crate/crate" -> "facebook/presto" ["e"=1]
"crate/crate" -> "yandex/ClickHouse"
"crate/crate" -> "prestodb/presto"
"crate/crate" -> "scylladb/scylla" ["e"=1]
"crate/crate" -> "OpenHFT/Chronicle-Map" ["e"=1]
"crate/crate" -> "NLPchina/elasticsearch-sql" ["e"=1]
"crate/crate" -> "kairosdb/kairosdb"
"crate/crate" -> "apache/calcite"
"crate/crate" -> "orientechnologies/orientdb" ["e"=1]
"crate/crate" -> "apache/incubator-pinot"
"crate/crate" -> "OpenTSDB/opentsdb"
"DmitryKey/luke" -> "apache/lucene-solr"
"DmitryKey/luke" -> "tarzanek/luke"
"DmitryKey/luke" -> "wks/ik-analyzer" ["e"=1]
"DmitryKey/luke" -> "javasoze/clue"
"DmitryKey/luke" -> "spring-projects/spring-data-elasticsearch" ["e"=1]
"DmitryKey/luke" -> "searchbox-io/Jest" ["e"=1]
"DmitryKey/luke" -> "NLPchina/elasticsearch-sql" ["e"=1]
"DmitryKey/luke" -> "LuXugang/Lucene-7.5.0"
"DmitryKey/luke" -> "apache/lucene"
"DmitryKey/luke" -> "medcl/elasticsearch-analysis-pinyin" ["e"=1]
"DmitryKey/luke" -> "chewiebug/GCViewer" ["e"=1]
"DmitryKey/luke" -> "lionsoul2014/jcseg" ["e"=1]
"DmitryKey/luke" -> "jprante/elasticsearch-jdbc" ["e"=1]
"DmitryKey/luke" -> "apache/tika"
"DmitryKey/luke" -> "elastic/rally" ["e"=1]
"didi/KnowStreaming" -> "apache/incubator-streampark"
"didi/KnowStreaming" -> "vran-dev/PrettyZoo" ["e"=1]
"didi/KnowStreaming" -> "ververica/flink-cdc-connectors"
"didi/KnowStreaming" -> "dromara/dynamic-tp" ["e"=1]
"didi/KnowStreaming" -> "apache/incubator-seatunnel"
"didi/KnowStreaming" -> "PowerJob/PowerJob" ["e"=1]
"didi/KnowStreaming" -> "smartloli/EFAK"
"didi/KnowStreaming" -> "DataLinkDC/dlink"
"didi/KnowStreaming" -> "dataease/dataease" ["e"=1]
"didi/KnowStreaming" -> "apache/dolphinscheduler"
"didi/KnowStreaming" -> "yahoo/CMAK" ["e"=1]
"didi/KnowStreaming" -> "alibaba/SREWorks" ["e"=1]
"didi/KnowStreaming" -> "ZhongFuCheng3y/austin" ["e"=1]
"didi/KnowStreaming" -> "DTStack/chunjun"
"didi/KnowStreaming" -> "Tencent/spring-cloud-tencent" ["e"=1]
"apache/lucene" -> "apache/solr"
"apache/lucene" -> "apache/lucene-solr"
"apache/lucene" -> "LuXugang/Lucene-7.5.0"
"apache/lucene" -> "apache/hbase"
"apache/lucene" -> "opensearch-project/OpenSearch" ["e"=1]
"apache/lucene" -> "apache/calcite"
"apache/lucene" -> "alibaba/havenask" ["e"=1]
"apache/lucene" -> "apache/hive"
"apache/lucene" -> "mikemccand/luceneutil"
"apache/lucene" -> "apache/tomcat" ["e"=1]
"apache/lucene" -> "apache/druid"
"apache/lucene" -> "zzboy/lucene"
"apache/lucene" -> "apache/cassandra"
"apache/lucene" -> "redis/jedis" ["e"=1]
"apache/lucene" -> "apache/bookkeeper" ["e"=1]
"CheckChe0803/BigData-Interview" -> "WadeStack/BigDataIE"
"CheckChe0803/BigData-Interview" -> "Dr11ft/BigDataGuide"
"CheckChe0803/BigData-Interview" -> "wangzhiwubigdata/God-Of-BigData"
"CheckChe0803/BigData-Interview" -> "SwordfallYeung/Interview_BigData"
"CheckChe0803/BigData-Interview" -> "CheckChe0803/flink-recommandSystem-demo"
"CheckChe0803/BigData-Interview" -> "realguoshuai/hadoop_study"
"CheckChe0803/BigData-Interview" -> "sunnyandgood/BigData"
"CheckChe0803/BigData-Interview" -> "geekyouth/SZT-bigdata"
"CheckChe0803/BigData-Interview" -> "oeljeklaus-you/JavaOrBigData-Interview"
"CheckChe0803/BigData-Interview" -> "oeljeklaus-you/UserActionAnalyzePlatform"
"CheckChe0803/BigData-Interview" -> "TALKDATA/JavaBigData"
"CheckChe0803/BigData-Interview" -> "monsonlee/BigData"
"CheckChe0803/BigData-Interview" -> "flink-china/flink-training-course"
"CheckChe0803/BigData-Interview" -> "whirlys/BigData-In-Practice"
"CheckChe0803/BigData-Interview" -> "lw-lin/CoolplaySpark"
"apache/incubator-druid" -> "apache/kylin"
"apache/incubator-druid" -> "apache/incubator-superset" ["e"=1]
"apache/incubator-druid" -> "apache/incubator-doris"
"apache/incubator-druid" -> "prestodb/presto"
"apache/incubator-druid" -> "apache/incubator-pinot"
"apache/incubator-druid" -> "apache/calcite"
"apache/incubator-druid" -> "apache/incubator-hudi"
"apache/incubator-druid" -> "druid-io/tranquility"
"apache/incubator-druid" -> "apache/incubator-shardingsphere" ["e"=1]
"apache/incubator-druid" -> "Qihoo360/Quicksql"
"apache/incubator-druid" -> "InterestingLab/waterdrop"
"apache/incubator-druid" -> "apache/incubator-dolphinscheduler"
"apache/incubator-druid" -> "apache/hbase"
"apache/incubator-druid" -> "flink-china/flink-training-course"
"apache/incubator-druid" -> "apache/atlas" ["e"=1]
"influxdata/influxdb-comparisons" -> "influxdata/influx-stress"
"influxdata/influxdb-comparisons" -> "timescale/tsbs"
"influxdata/influxdb-comparisons" -> "influxdata/inch"
"influxdata/influxdb-comparisons" -> "caict-benchmark/BDC-TS"
"influxdata/influxdb-comparisons" -> "Qihoo360/influx-proxy" ["e"=1]
"mapd/mapd-core" -> "mapd/mapd-charting"
"mapd/mapd-core" -> "gpuopenanalytics/pygdf"
"mapd/mapd-core" -> "antonmks/Alenka" ["e"=1]
"mapd/mapd-core" -> "cmu-db/peloton" ["e"=1]
"mapd/mapd-core" -> "facebookincubator/beringei"
"mapd/mapd-core" -> "uber/aresdb"
"mapd/mapd-core" -> "weld-project/weld" ["e"=1]
"mapd/mapd-core" -> "yandex/ClickHouse"
"mapd/mapd-core" -> "pilosa/pilosa" ["e"=1]
"mapd/mapd-core" -> "mapd/pymapd"
"mapd/mapd-core" -> "dremio/gandiva"
"mapd/mapd-core" -> "pg-strom/devel" ["e"=1]
"mapd/mapd-core" -> "pingcap/tikv" ["e"=1]
"mapd/mapd-core" -> "SnappyDataInc/snappydata"
"mapd/mapd-core" -> "apache/incubator-hawq"
"cerndb/dist-keras" -> "maxpumperla/elephas"
"cerndb/dist-keras" -> "databricks/spark-deep-learning"
"cerndb/dist-keras" -> "tmulc18/Distributed-TensorFlow-Guide" ["e"=1]
"cerndb/dist-keras" -> "yahoo/TensorFlowOnSpark"
"cerndb/dist-keras" -> "kuza55/keras-extras" ["e"=1]
"cerndb/dist-keras" -> "rjagerman/glint" ["e"=1]
"cerndb/dist-keras" -> "intel-analytics/BigDL"
"cerndb/dist-keras" -> "uber/horovod" ["e"=1]
"cerndb/dist-keras" -> "adatao/tensorspark"
"facebookarchive/scribe" -> "zhihu/kids" ["e"=1]
"facebookarchive/scribe" -> "cloudera/flume" ["e"=1]
"facebookarchive/scribe" -> "apache/flume"
"facebookarchive/scribe" -> "Qihoo360/QConf" ["e"=1]
"facebookarchive/scribe" -> "facebook/fbthrift" ["e"=1]
"facebookarchive/scribe" -> "twitter/twemproxy" ["e"=1]
"facebookarchive/scribe" -> "mesos/chronos" ["e"=1]
"facebookarchive/scribe" -> "alibaba/tair" ["e"=1]
"facebookarchive/scribe" -> "mozilla-services/heka" ["e"=1]
"facebookarchive/scribe" -> "wandoulabs/codis" ["e"=1]
"facebookarchive/scribe" -> "OpenTSDB/opentsdb"
"facebookarchive/scribe" -> "session-replay-tools/tcpcopy" ["e"=1]
"facebookarchive/scribe" -> "apache/storm"
"facebookarchive/scribe" -> "twitter/heron"
"facebookarchive/scribe" -> "linkedin/databus" ["e"=1]
"tagomoris/shib" -> "wyukawa/yanagishima"
"tagomoris/shib" -> "tagomoris/presto-client-node"
"apache/pulsar-manager" -> "streamnative/pulsar-flink"
"apache/pulsar-manager" -> "streamnative/kop"
"apache/pulsar-manager" -> "diennea/bookkeeper-visual-manager"
"apache/pulsar-manager" -> "apache/pulsar-helm-chart"
"apache/pulsar-manager" -> "streamnative/tgip-cn"
"apache/pulsar-manager" -> "streamnative/apache-pulsar-grafana-dashboard"
"apache/pulsar-manager" -> "apache/bookkeeper" ["e"=1]
"apache/pulsar-manager" -> "kuangye098/Pulsar-analysis"
"apache/pulsar-manager" -> "apache/pulsar-client-go"
"apache/pulsar-manager" -> "streamnative/pulsarctl"
"apache/pulsar-manager" -> "diennea/herddb"
"apache/pulsar-manager" -> "bbonnin/pulsar-express"
"apache/pulsar-manager" -> "streamnative/charts"
"apache/pulsar-manager" -> "streamnative/function-mesh"
"apache/pulsar-manager" -> "streamnative/aop"
"apache/incubator-gobblin" -> "linkedin/camus"
"apache/incubator-gobblin" -> "edp963/wormhole"
"apache/incubator-gobblin" -> "apache/kudu"
"apache/incubator-gobblin" -> "linkedin/WhereHows" ["e"=1]
"apache/incubator-gobblin" -> "apache/incubator-hudi"
"apache/incubator-gobblin" -> "apache/incubator-pinot"
"apache/incubator-gobblin" -> "confluentinc/kafka-connect-hdfs" ["e"=1]
"apache/incubator-gobblin" -> "apache/incubator-iceberg"
"apache/incubator-gobblin" -> "uber/AthenaX"
"apache/incubator-gobblin" -> "linkedin/dr-elephant"
"apache/incubator-gobblin" -> "apache/griffin"
"apache/incubator-gobblin" -> "pravega/pravega"
"apache/incubator-gobblin" -> "apache/atlas" ["e"=1]
"apache/incubator-gobblin" -> "Qihoo360/Quicksql"
"apache/incubator-gobblin" -> "streamsets/datacollector"
"databricks-academy/data-engineering-with-databricks-english" -> "databricks-academy/advanced-data-engineering-with-databricks"
"databricks-academy/data-engineering-with-databricks-english" -> "databricks-academy/data-engineer-learning-path"
"databricks-academy/data-engineering-with-databricks-english" -> "databricks-academy/apache-spark-programming-with-databricks"
"databricks-academy/data-engineering-with-databricks-english" -> "databricks-academy/data-analysis-with-databricks-sql"
"databricks-academy/data-engineering-with-databricks-english" -> "MicrosoftLearning/DP-203-Data-Engineer" ["e"=1]
"databricks-academy/data-engineering-with-databricks-english" -> "databricks-academy/ml-in-production-english"
"databricks-academy/data-engineering-with-databricks-english" -> "OBenner/data-engineering-interview-questions" ["e"=1]
"databricks-academy/data-engineering-with-databricks-english" -> "databricks-academy/scalable-machine-learning-with-apache-spark-english"
"databricks-academy/data-engineering-with-databricks-english" -> "databricks/delta-live-tables-notebooks"
"databricks-academy/data-engineering-with-databricks-english" -> "damklis/DataEngineeringProject" ["e"=1]
"databricks-academy/data-engineering-with-databricks-english" -> "databricks/tech-talks"
"databricks-academy/data-engineering-with-databricks-english" -> "gunnarmorling/awesome-opensource-data-engineering" ["e"=1]
"databricks-academy/data-engineering-with-databricks-english" -> "alanchn31/Data-Engineering-Projects" ["e"=1]
"databricks-academy/data-engineering-with-databricks-english" -> "vivek-bombatkar/Databricks-Apache-Spark-2X-Certified-Developer"
"databricks-academy/data-engineering-with-databricks-english" -> "data-engineering-community/data-engineering-wiki" ["e"=1]
"shunfei/indexr" -> "shunfei/sfmind"
"shunfei/indexr" -> "HuaweiBigData/carbondata"
"shunfei/indexr" -> "apache/incubator-carbondata"
"shunfei/indexr" -> "shunfei/aproxy"
"shunfei/indexr" -> "SparklineData/spark-druid-olap"
"shunfei/indexr" -> "allwefantasy/streamingpro"
"shunfei/indexr" -> "metamx/druid-spark-batch"
"shunfei/indexr" -> "apache/carbondata"
"shunfei/indexr" -> "Intel-bigdata/OAP"
"shunfei/indexr" -> "mustangore/kylin-mondrian-interaction" ["e"=1]
"Flowerowl/Big_Data_Resources" -> "jobbole/awesome-machine-learning-cn" ["e"=1]
"Flowerowl/Big_Data_Resources" -> "linyiqun/DataMiningAlgorithm" ["e"=1]
"Flowerowl/Big_Data_Resources" -> "lzjqsdd/scikit-learn-doc-cn" ["e"=1]
"Flowerowl/Big_Data_Resources" -> "warmheartli/MachineLearningCourse" ["e"=1]
"Flowerowl/Big_Data_Resources" -> "endymecy/spark-ml-source-analysis"
"Flowerowl/Big_Data_Resources" -> "jacksu/utils4s"
"Flowerowl/Big_Data_Resources" -> "xubo245/SparkLearning"
"Flowerowl/Big_Data_Resources" -> "lw-lin/CoolplaySpark"
"Flowerowl/Big_Data_Resources" -> "tobegit3hub/deep_recommend_system" ["e"=1]
"Flowerowl/Big_Data_Resources" -> "wagamamaz/tensorflow-tutorial" ["e"=1]
"Flowerowl/Big_Data_Resources" -> "lenskit/lenskit" ["e"=1]
"Flowerowl/Big_Data_Resources" -> "wxyyxc1992/DataScience-And-MachineLearning-Handbook-For-Coders" ["e"=1]
"Flowerowl/Big_Data_Resources" -> "memect/hao" ["e"=1]
"Flowerowl/Big_Data_Resources" -> "ColZer/DigAndBuried"
"IndustryEssentials/ymir" -> "IndustryEssentials/label-free"
"IndustryEssentials/ymir" -> "WeBankFinTech/Prophecis"
"IndustryEssentials/ymir" -> "layerism/TensorRT-Inference-Server-Tutorial" ["e"=1]
"IndustryEssentials/ymir" -> "zerollzeng/tiny-tensorrt" ["e"=1]
"apache/griffin" -> "WeBankFinTech/Qualitis"
"apache/griffin" -> "apache/atlas" ["e"=1]
"apache/griffin" -> "edp963/wormhole"
"apache/griffin" -> "DTStack/flinkx"
"apache/griffin" -> "Qihoo360/Quicksql"
"apache/griffin" -> "InterestingLab/waterdrop"
"apache/griffin" -> "awslabs/deequ" ["e"=1]
"apache/griffin" -> "edp963/moonbox"
"apache/griffin" -> "apache/ranger"
"apache/griffin" -> "WeBankFinTech/DataSphereStudio"
"apache/griffin" -> "BriData/DBus"
"apache/griffin" -> "apache/incubator-hudi"
"apache/griffin" -> "apache/kudu"
"apache/griffin" -> "apache/incubator-kyuubi"
"apache/griffin" -> "uber/AthenaX"
"harshibar/common-intern" -> "nicolomantini/LinkedIn-Easy-Apply-Bot"
"harshibar/common-intern" -> "harshibar/5-python-projects"
"harshibar/common-intern" -> "harshibar/resume"
"Dr11ft/BigDataGuide" -> "CheckChe0803/BigData-Interview"
"Dr11ft/BigDataGuide" -> "wangzhiwubigdata/God-Of-BigData"
"Dr11ft/BigDataGuide" -> "sunnyandgood/BigData"
"Dr11ft/BigDataGuide" -> "WadeStack/BigDataIE"
"Dr11ft/BigDataGuide" -> "geekyouth/SZT-bigdata"
"Dr11ft/BigDataGuide" -> "TALKDATA/JavaBigData"
"Dr11ft/BigDataGuide" -> "realguoshuai/hadoop_study"
"Dr11ft/BigDataGuide" -> "collabH/repository"
"Dr11ft/BigDataGuide" -> "heibaiying/BigData-Notes" ["e"=1]
"Dr11ft/BigDataGuide" -> "CheckChe0803/flink-recommandSystem-demo"
"Dr11ft/BigDataGuide" -> "sun199412/education-project" ["e"=1]
"Dr11ft/BigDataGuide" -> "fanshanhong/note" ["e"=1]
"Dr11ft/BigDataGuide" -> "Thpffcj/BigData-Getting-Started"
"Dr11ft/BigDataGuide" -> "whirlys/BigData-In-Practice"
"Dr11ft/BigDataGuide" -> "ltframe/menthol" ["e"=1]
"spotify/heroic" -> "spotify/ffwd"
"spotify/heroic" -> "kairosdb/kairosdb"
"spotify/heroic" -> "spotify/semantic-metrics"
"spotify/heroic" -> "pyr/cyanite" ["e"=1]
"spotify/heroic" -> "tuplejump/FiloDB"
"spotify/heroic" -> "spotify/helios" ["e"=1]
"spotify/heroic" -> "spotify/styx" ["e"=1]
"spotify/heroic" -> "spotify/apollo" ["e"=1]
"eilonmore/linkedin-private-api" -> "slavab89/in-the-hopper"
"eilonmore/linkedin-private-api" -> "eilonmore/job-finder"
"airbnb/AirMapView" -> "airbnb/apollo-android"
"airbnb/AirMapView" -> "airbnb/android-mapviewballoons"
"airbnb/AirMapView" -> "airbnb/apple-tv-auth"
"airbnb/AirMapView" -> "airbnb/bugsnag-android"
"airbnb/AirMapView" -> "airbnb/appear"
"airbnb/AirMapView" -> "airbnb/butterknife"
"airbnb/AirMapView" -> "airbnb/aws-cli"
"airbnb/AirMapView" -> "airbnb/alerts"
"airbnb/AirMapView" -> "airbnb/anotherlens"
"airbnb/AirMapView" -> "airbnb/airbnb-spark-thrift"
"airbnb/AirMapView" -> "airbnb/audited"
"airbnb/AirMapView" -> "airbnb/billow"
"airbnb/AirMapView" -> "airbnb/brace"
"airbnb/AirMapView" -> "airbnb/backpack"
"airbnb/AirMapView" -> "airbnb/brakeman"
"apache/incubator-dolphinscheduler" -> "DTStack/flinkx"
"apache/incubator-dolphinscheduler" -> "InterestingLab/waterdrop"
"apache/incubator-dolphinscheduler" -> "WeBankFinTech/DataSphereStudio"
"apache/incubator-dolphinscheduler" -> "alibaba/DataX" ["e"=1]
"apache/incubator-dolphinscheduler" -> "apache/incubator-doris"
"apache/incubator-dolphinscheduler" -> "WeBankFinTech/Linkis"
"apache/incubator-dolphinscheduler" -> "WeiYe-Jing/datax-web"
"apache/incubator-dolphinscheduler" -> "edp963/davinci"
"apache/incubator-dolphinscheduler" -> "DTStack/flinkStreamSQL"
"apache/incubator-dolphinscheduler" -> "azkaban/azkaban"
"apache/incubator-dolphinscheduler" -> "Qihoo360/Quicksql"
"apache/incubator-dolphinscheduler" -> "ververica/flink-cdc-connectors"
"apache/incubator-dolphinscheduler" -> "zhisheng17/flink-learning"
"apache/incubator-dolphinscheduler" -> "flink-china/flink-training-course"
"apache/incubator-dolphinscheduler" -> "apache/atlas" ["e"=1]
"databricks/LearningSparkV2" -> "databricks/Spark-The-Definitive-Guide"
"databricks/LearningSparkV2" -> "databricks/tech-talks"
"databricks/LearningSparkV2" -> "japila-books/apache-spark-internals"
"databricks/LearningSparkV2" -> "spark-examples/pyspark-examples"
"databricks/LearningSparkV2" -> "awesome-spark/awesome-spark"
"databricks/LearningSparkV2" -> "cartershanklin/pyspark-cheatsheet"
"databricks/LearningSparkV2" -> "delta-io/delta"
"databricks/LearningSparkV2" -> "databricks/koalas" ["e"=1]
"databricks/LearningSparkV2" -> "databricks/learning-spark"
"databricks/LearningSparkV2" -> "vivek-bombatkar/Databricks-Apache-Spark-2X-Certified-Developer"
"databricks/LearningSparkV2" -> "AlexIoannides/pyspark-example-project"
"databricks/LearningSparkV2" -> "damklis/DataEngineeringProject" ["e"=1]
"databricks/LearningSparkV2" -> "ankurchavda/SparkLearning" ["e"=1]
"databricks/LearningSparkV2" -> "BasPH/data-pipelines-with-apache-airflow" ["e"=1]
"databricks/LearningSparkV2" -> "mahmoudparsian/data-algorithms-with-spark"
"LiuXingMing/LinkedinSpider" -> "madpudding/linkedIn-crawler"
"LiuXingMing/LinkedinSpider" -> "eracle/linkedin"
"joeyism/linkedin_scraper" -> "eracle/linkedin"
"joeyism/linkedin_scraper" -> "linkedtales/scrapedin"
"joeyism/linkedin_scraper" -> "austinoboyle/scrape-linkedin-selenium"
"joeyism/linkedin_scraper" -> "tomquirk/linkedin-api"
"joeyism/linkedin_scraper" -> "jvandenaardweg/linkedin-profile-scraper"
"joeyism/linkedin_scraper" -> "federicohaag/LinkedInScraping"
"joeyism/linkedin_scraper" -> "linkedtales/scrapedin-linkedin-crawler"
"joeyism/linkedin_scraper" -> "fabriziomiano/linkedin-scraper"
"joeyism/linkedin_scraper" -> "ozgur/python-linkedin"
"joeyism/linkedin_scraper" -> "initstring/linkedin2username" ["e"=1]
"joeyism/linkedin_scraper" -> "dchrastil/ScrapedIn" ["e"=1]
"joeyism/linkedin_scraper" -> "ericfourrier/scrape-linkedin"
"joeyism/linkedin_scraper" -> "kirkhunter/linkedin-jobs-scraper"
"joeyism/linkedin_scraper" -> "yatish27/linkedin-scraper"
"joeyism/linkedin_scraper" -> "m8sec/CrossLinked"
"m8sec/CrossLinked" -> "wavvs/nanorobeus" ["e"=1]
"m8sec/CrossLinked" -> "knavesec/CredMaster" ["e"=1]
"allwefantasy/my-life" -> "allwefantasy/streamingpro"
"allwefantasy/my-life" -> "lw-lin/CoolplaySpark"
"allwefantasy/my-life" -> "ColZer/DigAndBuried"
"allwefantasy/my-life" -> "teeyog/IQL"
"allwefantasy/my-life" -> "cjuexuan/mynote"
"allwefantasy/my-life" -> "apache/incubator-hudi"
"allwefantasy/my-life" -> "jacksu/utils4s"
"allwefantasy/my-life" -> "yaooqinn/kyuubi"
"allwefantasy/my-life" -> "shijinkui/spark_study"
"allwefantasy/my-life" -> "endymecy/spark-ml-source-analysis"
"allwefantasy/my-life" -> "keepsimplefocus/spark-sourcecodes-analysis"
"allwefantasy/my-life" -> "edp963/wormhole"
"allwefantasy/my-life" -> "proflin/CoolplaySpark"
"allwefantasy/my-life" -> "nerdammer/spark-hbase-connector"
"allwefantasy/my-life" -> "mattshma/bigdata"
"analysys/EasyScheduler" -> "InterestingLab/waterdrop"
"analysys/EasyScheduler" -> "siaorg/sia-task" ["e"=1]
"analysys/EasyScheduler" -> "scxwhite/hera"
"analysys/EasyScheduler" -> "Qihoo360/Quicksql"
"analysys/EasyScheduler" -> "DTStack/flinkx"
"analysys/EasyScheduler" -> "edp963/wormhole"
"analysys/EasyScheduler" -> "edp963/moonbox"
"analysys/EasyScheduler" -> "BriData/DBus"
"analysys/EasyScheduler" -> "WeBankFinTech/Scriptis"
"analysys/EasyScheduler" -> "allwefantasy/streamingpro"
"analysys/EasyScheduler" -> "WeBankFinTech/Linkis"
"analysys/EasyScheduler" -> "ucarGroup/DataLink"
"analysys/EasyScheduler" -> "WeBankFinTech/DataSphereStudio"
"analysys/EasyScheduler" -> "DTStack/flinkStreamSQL"
"analysys/EasyScheduler" -> "analysys/presto-hbase-connector"
"endymecy/spark-ml-source-analysis" -> "lw-lin/CoolplaySpark"
"endymecy/spark-ml-source-analysis" -> "jacksu/utils4s"
"endymecy/spark-ml-source-analysis" -> "xubo245/SparkLearning"
"endymecy/spark-ml-source-analysis" -> "yahoo/TensorFlowOnSpark"
"endymecy/spark-ml-source-analysis" -> "JerryLead/SparkInternals"
"endymecy/spark-ml-source-analysis" -> "allwefantasy/streamingpro"
"endymecy/spark-ml-source-analysis" -> "wzhe06/Ad-papers" ["e"=1]
"endymecy/spark-ml-source-analysis" -> "Tencent/angel"
"endymecy/spark-ml-source-analysis" -> "alibaba/x-deeplearning" ["e"=1]
"endymecy/spark-ml-source-analysis" -> "endymecy/spark-graphx-source-analysis"
"endymecy/spark-ml-source-analysis" -> "databricks/spark-deep-learning"
"endymecy/spark-ml-source-analysis" -> "wzhe06/CTRmodel" ["e"=1]
"endymecy/spark-ml-source-analysis" -> "ColZer/DigAndBuried"
"endymecy/spark-ml-source-analysis" -> "apachecn/spark-doc-zh"
"endymecy/spark-ml-source-analysis" -> "databricks/learning-spark"
"lw-lin/CoolplaySpark" -> "JerryLead/SparkInternals"
"lw-lin/CoolplaySpark" -> "endymecy/spark-ml-source-analysis"
"lw-lin/CoolplaySpark" -> "jacksu/utils4s"
"lw-lin/CoolplaySpark" -> "allwefantasy/streamingpro"
"lw-lin/CoolplaySpark" -> "flink-china/flink-training-course"
"lw-lin/CoolplaySpark" -> "ColZer/DigAndBuried"
"lw-lin/CoolplaySpark" -> "DTStack/flinkStreamSQL"
"lw-lin/CoolplaySpark" -> "InterestingLab/waterdrop"
"lw-lin/CoolplaySpark" -> "apachecn/spark-doc-zh"
"lw-lin/CoolplaySpark" -> "DTStack/flinkx"
"lw-lin/CoolplaySpark" -> "databricks/learning-spark"
"lw-lin/CoolplaySpark" -> "xubo245/SparkLearning"
"lw-lin/CoolplaySpark" -> "wangzhiwubigdata/God-Of-BigData"
"lw-lin/CoolplaySpark" -> "zhisheng17/flink-learning"
"lw-lin/CoolplaySpark" -> "spark-jobserver/spark-jobserver"
"BlazingDB/pyBlazing" -> "apache/incubator-hudi"
"BlazingDB/pyBlazing" -> "apache/incubator-iceberg"
"BlazingDB/pyBlazing" -> "rapidsai/tpcx-bb" ["e"=1]
"BlazingDB/pyBlazing" -> "rapidsai/cudf" ["e"=1]
"BlazingDB/pyBlazing" -> "uber/aresdb"
"BlazingDB/pyBlazing" -> "rapidsai/cuxfilter" ["e"=1]
"BlazingDB/pyBlazing" -> "omnisci/omniscidb"
"BlazingDB/pyBlazing" -> "edp963/moonbox"
"BlazingDB/pyBlazing" -> "pravega/pravega"
"BlazingDB/pyBlazing" -> "alibaba/SparkCube"
"BlazingDB/pyBlazing" -> "apache/incubator-livy"
"BlazingDB/pyBlazing" -> "Intel-bigdata/OAP"
"BlazingDB/pyBlazing" -> "dremio/gandiva"
"BlazingDB/pyBlazing" -> "ibis-project/ibis-substrait" ["e"=1]
"BlazingDB/pyBlazing" -> "apache/orc"
"apache/flume" -> "apache/sqoop"
"apache/flume" -> "apache/hive"
"apache/flume" -> "apache/hbase"
"apache/flume" -> "apache/storm"
"apache/flume" -> "apache/oozie"
"apache/flume" -> "apache/kylin"
"apache/flume" -> "apache/zookeeper" ["e"=1]
"apache/flume" -> "apache/ambari"
"apache/flume" -> "apache/phoenix"
"apache/flume" -> "apache/hadoop"
"apache/flume" -> "apache/pig"
"apache/flume" -> "apache/avro"
"apache/flume" -> "azkaban/azkaban"
"apache/flume" -> "apache/kudu"
"apache/flume" -> "apache/curator" ["e"=1]
"apache/hive" -> "apache/hbase"
"apache/hive" -> "apache/hadoop"
"apache/hive" -> "apache/flume"
"apache/hive" -> "apache/zookeeper" ["e"=1]
"apache/hive" -> "apache/storm"
"apache/hive" -> "apache/kylin"
"apache/hive" -> "apache/flink"
"apache/hive" -> "prestodb/presto"
"apache/hive" -> "apache/kafka" ["e"=1]
"apache/hive" -> "apache/spark"
"apache/hive" -> "apache/sqoop"
"apache/hive" -> "apache/calcite"
"apache/hive" -> "apache/pig"
"apache/hive" -> "apache/cassandra"
"apache/hive" -> "cloudera/hue"
"ercoppa/HadoopInternals" -> "steveloughran/kerberos_and_hadoop"
"ercoppa/HadoopInternals" -> "proflin/CoolplaySpark"
"ercoppa/HadoopInternals" -> "intel-hadoop/HiBench"
"ercoppa/HadoopInternals" -> "hortonworks/simple-yarn-app" ["e"=1]
"ercoppa/HadoopInternals" -> "airlift/slice" ["e"=1]
"ercoppa/HadoopInternals" -> "romainr/hadoop-tutorials-examples" ["e"=1]
"ercoppa/HadoopInternals" -> "edwardcapriolo/filecrush" ["e"=1]
"ercoppa/HadoopInternals" -> "airbnb/reair"
"ercoppa/HadoopInternals" -> "linkedin/dr-elephant"
"apache/zeppelin" -> "apache/kylin"
"apache/zeppelin" -> "apache/hive"
"apache/zeppelin" -> "apache/flink"
"apache/zeppelin" -> "prestodb/presto"
"apache/zeppelin" -> "apache/ambari"
"apache/zeppelin" -> "apache/calcite"
"apache/zeppelin" -> "delta-io/delta"
"apache/zeppelin" -> "cloudera/hue"
"apache/zeppelin" -> "apache/hbase"
"apache/zeppelin" -> "apache/iceberg"
"apache/zeppelin" -> "apache/nifi"
"apache/zeppelin" -> "azkaban/azkaban"
"apache/zeppelin" -> "apache/hudi"
"apache/zeppelin" -> "spark-jobserver/spark-jobserver"
"apache/zeppelin" -> "DTStack/flinkx"
"weiweifan/Big-Data-Resources" -> "sunnyandgood/BigData"
"weiweifan/Big-Data-Resources" -> "monsonlee/BigData"
"weiweifan/Big-Data-Resources" -> "linyiqun/DataMiningAlgorithm" ["e"=1]
"weiweifan/Big-Data-Resources" -> "apachecn/RecommenderSystems" ["e"=1]
"weiweifan/Big-Data-Resources" -> "LuckyZXL2016/Movie_Recommend" ["e"=1]
"weiweifan/Big-Data-Resources" -> "lpty/recommendation" ["e"=1]
"weiweifan/Big-Data-Resources" -> "apachecn/python_data_analysis_and_mining_action" ["e"=1]
"weiweifan/Big-Data-Resources" -> "Tongzhenguo/ebooks"
"weiweifan/Big-Data-Resources" -> "YouChouNoBB/data-mining-introduction"
"weiweifan/Big-Data-Resources" -> "oeljeklaus-you/UserActionAnalyzePlatform"
"weiweifan/Big-Data-Resources" -> "WadeStack/BigDataIE"
"weiweifan/Big-Data-Resources" -> "Magic-Bubble/RecommendSystemPractice" ["e"=1]
"weiweifan/Big-Data-Resources" -> "chengstone/movie_recommender" ["e"=1]
"weiweifan/Big-Data-Resources" -> "Dr11ft/BigDataGuide"
"weiweifan/Big-Data-Resources" -> "princewen/tensorflow_practice" ["e"=1]
"collabH/repository" -> "zhaoyachao/zdh_web"
"collabH/repository" -> "leesf/hudi-resources"
"collabH/repository" -> "realguoshuai/hadoop_study"
"collabH/repository" -> "wxgzgl/LarkMidTable"
"collabH/repository" -> "MeetYouDevs/big-whale"
"collabH/repository" -> "zhp8341/flink-streaming-platform-web"
"collabH/repository" -> "zhangjun0x01/bigdata-examples"
"collabH/repository" -> "simbafl/DataWarehouse"
"collabH/repository" -> "hairless/plink"
"collabH/repository" -> "streamxhub/streamx"
"collabH/repository" -> "springMoon/sqlSubmit"
"collabH/repository" -> "geekyouth/SZT-bigdata"
"collabH/repository" -> "wlhbdp/bdp-platform"
"collabH/repository" -> "threeknowbigdata/flink_second_understand"
"collabH/repository" -> "DataLinkDC/dlink"
"geekyouth/SZT-bigdata" -> "oeljeklaus-you/UserActionAnalyzePlatform"
"geekyouth/SZT-bigdata" -> "wangzhiwubigdata/God-Of-BigData"
"geekyouth/SZT-bigdata" -> "realguoshuai/hadoop_study"
"geekyouth/SZT-bigdata" -> "CheckChe0803/BigData-Interview"
"geekyouth/SZT-bigdata" -> "CheckChe0803/flink-recommandSystem-demo"
"geekyouth/SZT-bigdata" -> "Dr11ft/BigDataGuide"
"geekyouth/SZT-bigdata" -> "TurboWay/bigdata_analyse"
"geekyouth/SZT-bigdata" -> "collabH/repository"
"geekyouth/SZT-bigdata" -> "gingerredjade/flink-userportrait-main"
"geekyouth/SZT-bigdata" -> "zhp8341/flink-streaming-platform-web"
"geekyouth/SZT-bigdata" -> "LuckyZXL2016/News_Spark"
"geekyouth/SZT-bigdata" -> "whirlys/BigData-In-Practice"
"geekyouth/SZT-bigdata" -> "InterestingLab/waterdrop"
"geekyouth/SZT-bigdata" -> "DTStack/flinkStreamSQL"
"geekyouth/SZT-bigdata" -> "zhisheng17/flink-learning"
"gingerredjade/flink-userportrait-main" -> "zhangjun0x01/bigdata-examples"
"gingerredjade/flink-userportrait-main" -> "MeetYouDevs/big-whale"
"gingerredjade/flink-userportrait-main" -> "hairless/plink"
"gingerredjade/flink-userportrait-main" -> "MoriatyBug/flink-commodity-recommendation-system" ["e"=1]
"gingerredjade/flink-userportrait-main" -> "Thpffcj/BigData-Getting-Started"
"gingerredjade/flink-userportrait-main" -> "realguoshuai/hadoop_study"
"gingerredjade/flink-userportrait-main" -> "oeljeklaus-you/UserActionAnalyzePlatform"
"gingerredjade/flink-userportrait-main" -> "todd5167/flink-spark-submiter"
"gingerredjade/flink-userportrait-main" -> "binglind/alchemy"
"gingerredjade/flink-userportrait-main" -> "CheckChe0803/flink-recommandSystem-demo"
"gingerredjade/flink-userportrait-main" -> "HunterChao/User-Portrait"
"gingerredjade/flink-userportrait-main" -> "perkinls/flink-local-train"
"gingerredjade/flink-userportrait-main" -> "geekyouth/SZT-bigdata"
"gingerredjade/flink-userportrait-main" -> "gingerredjade/flink-userportrait-VuejsShow"
"gingerredjade/flink-userportrait-main" -> "ittqqzz/ECommerceRecommendSystem" ["e"=1]
"ljcan/SparkStreaming" -> "wankunde/logcount"
"ljcan/SparkStreaming" -> "LuckyZXL2016/News_Spark"
"ljcan/SparkStreaming" -> "oeljeklaus-you/UserActionAnalyzePlatform"
"ljcan/SparkStreaming" -> "realguoshuai/hadoop_study"
"ljcan/SparkStreaming" -> "yangtong123/StudySpark"
"ljcan/SparkStreaming" -> "liguozhong/demo_11.11_storm-spark-hadoop"
"ljcan/SparkStreaming" -> "whirlys/BigData-In-Practice"
"ljcan/SparkStreaming" -> "Thpffcj/BigData-Getting-Started"
"ljcan/SparkStreaming" -> "xubo245/SparkLearning"
"ljcan/SparkStreaming" -> "yangtong123/RoadOfStudySpark"
"ljcan/SparkStreaming" -> "WadeStack/BigDataIE"
"ljcan/SparkStreaming" -> "monsonlee/BigData"
"ljcan/SparkStreaming" -> "gingerredjade/flink-userportrait-main"
"ljcan/SparkStreaming" -> "LeechanX/Netflix-Recommender-with-Spark" ["e"=1]
"ljcan/SparkStreaming" -> "LuckyZXL2016/Movie_Recommend" ["e"=1]
"oeljeklaus-you/UserActionAnalyzePlatform" -> "LuckyZXL2016/News_Spark"
"oeljeklaus-you/UserActionAnalyzePlatform" -> "ljcan/SparkStreaming"
"oeljeklaus-you/UserActionAnalyzePlatform" -> "realguoshuai/hadoop_study"
"oeljeklaus-you/UserActionAnalyzePlatform" -> "liguozhong/demo_11.11_storm-spark-hadoop"
"oeljeklaus-you/UserActionAnalyzePlatform" -> "geekyouth/SZT-bigdata"
"oeljeklaus-you/UserActionAnalyzePlatform" -> "monsonlee/BigData"
"oeljeklaus-you/UserActionAnalyzePlatform" -> "Erik-ly/SprakProject"
"oeljeklaus-you/UserActionAnalyzePlatform" -> "gingerredjade/flink-userportrait-main"
"oeljeklaus-you/UserActionAnalyzePlatform" -> "CheckChe0803/BigData-Interview"
"oeljeklaus-you/UserActionAnalyzePlatform" -> "sunnyandgood/BigData"
"oeljeklaus-you/UserActionAnalyzePlatform" -> "WadeStack/BigDataIE"
"oeljeklaus-you/UserActionAnalyzePlatform" -> "whirlys/BigData-In-Practice"
"oeljeklaus-you/UserActionAnalyzePlatform" -> "wanghan0501/WiFiProbeAnalysis"
"oeljeklaus-you/UserActionAnalyzePlatform" -> "asdud/Bigdata_project"
"oeljeklaus-you/UserActionAnalyzePlatform" -> "zhaoyachao/zdh_web"
"DTStack/flinkx" -> "DTStack/flinkStreamSQL"
"DTStack/flinkx" -> "flink-china/flink-training-course"
"DTStack/flinkx" -> "ververica/flink-cdc-connectors"
"DTStack/flinkx" -> "zhp8341/flink-streaming-platform-web"
"DTStack/flinkx" -> "streamxhub/streamx"
"DTStack/flinkx" -> "InterestingLab/waterdrop"
"DTStack/flinkx" -> "DataLinkDC/dlink"
"DTStack/flinkx" -> "WeiYe-Jing/datax-web"
"DTStack/flinkx" -> "zhisheng17/flink-learning"
"DTStack/flinkx" -> "Qihoo360/Quicksql"
"DTStack/flinkx" -> "apache/incubator-dolphinscheduler"
"DTStack/flinkx" -> "WeBankFinTech/DataSphereStudio"
"DTStack/flinkx" -> "alibaba/Alink"
"DTStack/flinkx" -> "BriData/DBus"
"DTStack/flinkx" -> "CheckChe0803/flink-recommandSystem-demo"
"edp963/davinci" -> "edp963/wormhole"
"edp963/davinci" -> "BriData/DBus"
"edp963/davinci" -> "WeBankFinTech/DataSphereStudio"
"edp963/davinci" -> "running-elephant/datart"
"edp963/davinci" -> "TuiQiao/CBoard"
"edp963/davinci" -> "edp963/moonbox"
"edp963/davinci" -> "WeiYe-Jing/datax-web"
"edp963/davinci" -> "DTStack/flinkx"
"edp963/davinci" -> "apache/incubator-dolphinscheduler"
"edp963/davinci" -> "dataease/dataease" ["e"=1]
"edp963/davinci" -> "WeBankFinTech/Linkis"
"edp963/davinci" -> "alibaba/DataX" ["e"=1]
"edp963/davinci" -> "Qihoo360/Quicksql"
"edp963/davinci" -> "InterestingLab/waterdrop"
"edp963/davinci" -> "DTStack/flinkStreamSQL"
"airbnb/prop-types" -> "airbnb/eslint-plugin-react-with-styles"
"airbnb/prop-types" -> "airbnb/prop-types-exact"
"airbnb/prop-types" -> "airbnb/react-with-styles" ["e"=1]
"airbnb/prop-types" -> "airbnb/lunar"
"airbnb/prop-types" -> "airbnb/babel-preset-airbnb"
"airbnb/prop-types" -> "airbnb/react-with-styles-interface-aphrodite"
"cdarlint/winutils" -> "steveloughran/winutils"
"cdarlint/winutils" -> "kontext-tech/winutils"
"cdarlint/winutils" -> "ververica/flink-cdc-connectors"
"cdarlint/winutils" -> "DTStack/flinkx"
"cdarlint/winutils" -> "wangzhiwubigdata/God-Of-BigData"
"cdarlint/winutils" -> "flink-china/flink-training-course"
"cdarlint/winutils" -> "fayson/cdhproject"
"cdarlint/winutils" -> "zhp8341/flink-streaming-platform-web"
"cdarlint/winutils" -> "streamxhub/streamx"
"cdarlint/winutils" -> "DTStack/flinkStreamSQL"
"cdarlint/winutils" -> "apache/iceberg"
"cdarlint/winutils" -> "zhisheng17/flink-learning"
"cdarlint/winutils" -> "WeiYe-Jing/datax-web"
"cdarlint/winutils" -> "databricks/Spark-The-Definitive-Guide"
"cdarlint/winutils" -> "big-data-europe/docker-hadoop" ["e"=1]
"hyh1750522171/bigData" -> "hyh1750522171/google-chrome"
"hyh1750522171/bigData" -> "whirlys/BigData-In-Practice"
"hyh1750522171/bigData" -> "sunnyandgood/BigData"
"hyh1750522171/bigData" -> "wx-chevalier/Database-Series"
"hyh1750522171/bigData" -> "LuckyZXL2016/News_Spark"
"hyh1750522171/bigData" -> "hi-weijun/PythonDataScience-Collections" ["e"=1]
"hyh1750522171/bigData" -> "jackfrued/Python-Interview-Bible" ["e"=1]
"hyh1750522171/bigData" -> "TALKDATA/JavaBigData"
"WeBankFinTech/DataSphereStudio" -> "WeBankFinTech/Linkis"
"WeBankFinTech/DataSphereStudio" -> "WeBankFinTech/Scriptis"
"WeBankFinTech/DataSphereStudio" -> "WeBankFinTech/Qualitis"
"WeBankFinTech/DataSphereStudio" -> "edp963/davinci"
"WeBankFinTech/DataSphereStudio" -> "DataLinkDC/dlink"
"WeBankFinTech/DataSphereStudio" -> "DTStack/flinkx"
"WeBankFinTech/DataSphereStudio" -> "WeiYe-Jing/datax-web"
"WeBankFinTech/DataSphereStudio" -> "streamxhub/streamx"
"WeBankFinTech/DataSphereStudio" -> "WeBankFinTech/WeDataSphere"
"WeBankFinTech/DataSphereStudio" -> "edp963/wormhole"
"WeBankFinTech/DataSphereStudio" -> "apache/incubator-linkis"
"WeBankFinTech/DataSphereStudio" -> "InterestingLab/waterdrop"
"WeBankFinTech/DataSphereStudio" -> "DTStack/flinkStreamSQL"
"WeBankFinTech/DataSphereStudio" -> "zhp8341/flink-streaming-platform-web"
"WeBankFinTech/DataSphereStudio" -> "apache/incubator-dolphinscheduler"
"databricks/spark-sklearn" -> "lensacom/sparkit-learn"
"databricks/spark-sklearn" -> "databricks/spark-deep-learning"
"databricks/spark-sklearn" -> "databricks/tensorframes"
"databricks/spark-sklearn" -> "yahoo/TensorFlowOnSpark"
"databricks/spark-sklearn" -> "combust/mleap"
"databricks/spark-sklearn" -> "databricks/spark-corenlp"
"databricks/spark-sklearn" -> "h2oai/sparkling-water"
"databricks/spark-sklearn" -> "twosigma/flint"
"databricks/spark-sklearn" -> "hyperopt/hyperopt-sklearn" ["e"=1]
"databricks/spark-sklearn" -> "databricks/spark-training"
"databricks/spark-sklearn" -> "rhiever/tpot" ["e"=1]
"databricks/spark-sklearn" -> "Azure/mmlspark"
"databricks/spark-sklearn" -> "maxpumperla/elephas"
"databricks/spark-sklearn" -> "databricks/spark-csv"
"databricks/spark-sklearn" -> "intel-analytics/BigDL"
"moutainhigh/datax-cloud-base" -> "Hyhyhyhyhyhyh/Django-Data-quality-system"
"moutainhigh/datax-cloud-base" -> "birdLark/LarkMidTable"
"moutainhigh/datax-cloud-base" -> "wxgzgl/LarkMidTable"
"moutainhigh/datax-cloud-base" -> "zbwfisher1/vue-metadata"
"moutainhigh/datax-cloud-base" -> "312075478/datax-cloud"
"moutainhigh/datax-cloud-base" -> "sevenfang/DataCenter"
"moutainhigh/datax-cloud-base" -> "zhaoyachao/zdh_web"
"moutainhigh/datax-cloud-base" -> "alldatacenter/alldata"
"moutainhigh/datax-cloud-base" -> "muniao/SuperBigData"
"moutainhigh/datax-cloud-base" -> "quan2005/flink-connector-debezium"
"moutainhigh/datax-cloud-base" -> "javasqlbug/zhili-dataplatform"
"moutainhigh/datax-cloud-base" -> "JoeyBling/webkettle"
"moutainhigh/datax-cloud-base" -> "shuzeCloud/shuzeCloud"
"twosigma/flint" -> "sryza/spark-timeseries"
"twosigma/flint" -> "twosigma/beakerx" ["e"=1]
"twosigma/flint" -> "databricks/spark-sklearn"
"twosigma/flint" -> "manahl/arctic" ["e"=1]
"twosigma/flint" -> "typelevel/frameless" ["e"=1]
"twosigma/flint" -> "MrPowers/spark-daria"
"twosigma/flint" -> "databricks/spark-deep-learning"
"twosigma/flint" -> "combust/mleap"
"twosigma/flint" -> "RJT1990/pyflux" ["e"=1]
"twosigma/flint" -> "databricks/spark-corenlp"
"twosigma/flint" -> "holdenk/spark-testing-base"
"twosigma/flint" -> "vegas-viz/Vegas" ["e"=1]
"twosigma/flint" -> "databricks/tensorframes"
"twosigma/flint" -> "apache/incubator-toree"
"twosigma/flint" -> "databricks/koalas" ["e"=1]
"openmessaging/dledger" -> "apache/rocketmq-streams"
"openmessaging/dledger" -> "apache/ratis"
"openmessaging/dledger" -> "apache/rocketmq-connect"
"openmessaging/dledger" -> "apache/rocketmq-schema-registry"
"openmessaging/dledger" -> "openmessaging/openchaos"
"openmessaging/dledger" -> "sofastack/sofa-jraft" ["e"=1]
"openmessaging/dledger" -> "alibaba/rsqldb"
"apache/incubator-iceberg" -> "apache/incubator-hudi"
"apache/incubator-iceberg" -> "Netflix/iceberg"
"apache/incubator-iceberg" -> "Intel-bigdata/OAP"
"apache/incubator-iceberg" -> "uber/hudi"
"apache/incubator-iceberg" -> "linkedin/coral"
"apache/incubator-iceberg" -> "apache/incubator-livy"
"apache/incubator-iceberg" -> "Intel-bigdata/spark-adaptive"
"apache/incubator-iceberg" -> "apache/incubator-ratis" ["e"=1]
"apache/incubator-iceberg" -> "uber/marmaray"
"apache/incubator-iceberg" -> "apache/ranger"
"apache/incubator-iceberg" -> "linkedin/dynamometer" ["e"=1]
"apache/incubator-iceberg" -> "apache/incubator-pinot"
"apache/incubator-iceberg" -> "oap-project/gluten"
"apache/incubator-iceberg" -> "qubole/rubix"
"apache/incubator-iceberg" -> "prestosql/presto"
"DTStack/flinkStreamSQL" -> "DTStack/flinkx"
"DTStack/flinkStreamSQL" -> "zhp8341/flink-streaming-platform-web"
"DTStack/flinkStreamSQL" -> "flink-china/flink-training-course"
"DTStack/flinkStreamSQL" -> "InterestingLab/waterdrop"
"DTStack/flinkStreamSQL" -> "Qihoo360/Quicksql"
"DTStack/flinkStreamSQL" -> "streamxhub/streamx"
"DTStack/flinkStreamSQL" -> "ververica/flink-cdc-connectors"
"DTStack/flinkStreamSQL" -> "DataLinkDC/dlink"
"DTStack/flinkStreamSQL" -> "apache/bahir-flink"
"DTStack/flinkStreamSQL" -> "harbby/sylph"
"DTStack/flinkStreamSQL" -> "zhisheng17/flink-learning"
"DTStack/flinkStreamSQL" -> "uber/AthenaX"
"DTStack/flinkStreamSQL" -> "ambition119/FlinkSQL" ["e"=1]
"DTStack/flinkStreamSQL" -> "edp963/wormhole"
"DTStack/flinkStreamSQL" -> "ververica/flink-sql-gateway"
"InterestingLab/waterdrop" -> "DTStack/flinkx"
"InterestingLab/waterdrop" -> "DTStack/flinkStreamSQL"
"InterestingLab/waterdrop" -> "Qihoo360/Quicksql"
"InterestingLab/waterdrop" -> "edp963/wormhole"
"InterestingLab/waterdrop" -> "zhp8341/flink-streaming-platform-web"
"InterestingLab/waterdrop" -> "WeBankFinTech/Linkis"
"InterestingLab/waterdrop" -> "harbby/sylph"
"InterestingLab/waterdrop" -> "apache/incubator-dolphinscheduler"
"InterestingLab/waterdrop" -> "allwefantasy/streamingpro"
"InterestingLab/waterdrop" -> "flink-china/flink-training-course"
"InterestingLab/waterdrop" -> "teeyog/IQL"
"InterestingLab/waterdrop" -> "streamxhub/streamx"
"InterestingLab/waterdrop" -> "analysys/EasyScheduler"
"InterestingLab/waterdrop" -> "WeBankFinTech/DataSphereStudio"
"InterestingLab/waterdrop" -> "BriData/DBus"
"Qihoo360/Quicksql" -> "InterestingLab/waterdrop"
"Qihoo360/Quicksql" -> "DTStack/flinkStreamSQL"
"Qihoo360/Quicksql" -> "DTStack/flinkx"
"Qihoo360/Quicksql" -> "edp963/wormhole"
"Qihoo360/Quicksql" -> "apache/calcite"
"Qihoo360/Quicksql" -> "BriData/DBus"
"Qihoo360/Quicksql" -> "WeBankFinTech/Linkis"
"Qihoo360/Quicksql" -> "uber/AthenaX"
"Qihoo360/Quicksql" -> "quxiucheng/apache-calcite-tutorial"
"Qihoo360/Quicksql" -> "streamxhub/streamx"
"Qihoo360/Quicksql" -> "edp963/moonbox"
"Qihoo360/Quicksql" -> "WeBankFinTech/DataSphereStudio"
"Qihoo360/Quicksql" -> "zhp8341/flink-streaming-platform-web"
"Qihoo360/Quicksql" -> "flink-china/flink-training-course"
"Qihoo360/Quicksql" -> "teeyog/IQL"
"TuiQiao/CBoard" -> "edp963/davinci"
"TuiQiao/CBoard" -> "edp963/wormhole"
"TuiQiao/CBoard" -> "shzlw/poli"
"TuiQiao/CBoard" -> "xianrendzw/EasyReport" ["e"=1]
"TuiQiao/CBoard" -> "Qihoo360/Quicksql"
"TuiQiao/CBoard" -> "BriData/DBus"
"TuiQiao/CBoard" -> "coffeehu/CBoard-v"
"TuiQiao/CBoard" -> "WeBankFinTech/DataSphereStudio"
"TuiQiao/CBoard" -> "ruisibi/rsbi-pom"
"TuiQiao/CBoard" -> "apache/incubator-dolphinscheduler"
"TuiQiao/CBoard" -> "OSBI/saiku" ["e"=1]
"TuiQiao/CBoard" -> "DTStack/flinkx"
"TuiQiao/CBoard" -> "InterestingLab/waterdrop"
"TuiQiao/CBoard" -> "edp963/moonbox"
"TuiQiao/CBoard" -> "analysys/EasyScheduler"
"WeBankFinTech/Exchangis" -> "WeBankFinTech/Schedulis"
"WeBankFinTech/Exchangis" -> "WeBankFinTech/Visualis"
"WeBankFinTech/Exchangis" -> "WeBankFinTech/Qualitis"
"WeBankFinTech/Exchangis" -> "WeBankFinTech/Scriptis"
"WeBankFinTech/Exchangis" -> "WeBankFinTech/Prophecis"
"WeBankFinTech/Exchangis" -> "WeBankFinTech/WeDataSphere"
"WeBankFinTech/Exchangis" -> "WeBankFinTech/Streamis"
"WeBankFinTech/Exchangis" -> "WeBankFinTech/DataSphereStudio"
"WeBankFinTech/Exchangis" -> "WeBankFinTech/Linkis"
"WeBankFinTech/Exchangis" -> "ucarGroup/DataLink"
"WeBankFinTech/Exchangis" -> "edp963/moonbox"
"WeBankFinTech/Exchangis" -> "apache/incubator-linkis"
"WeBankFinTech/Exchangis" -> "WeBankFinTech/Linkis-Doc"
"WeBankFinTech/Exchangis" -> "qlangtech/tis"
"WeBankFinTech/Exchangis" -> "MeetYouDevs/big-whale"
"zenkay/bigdata-ecosystem" -> "youngwookim/awesome-hadoop"
"zenkay/bigdata-ecosystem" -> "onurakpolat/awesome-bigdata" ["e"=1]
"zenkay/bigdata-ecosystem" -> "haifengl/bigdata"
"apache/incubator-geode" -> "project-geode/docs"
"apache/incubator-geode" -> "apache/incubator-hawq"
"apache/incubator-geode" -> "apache/incubator-madlib"
"apache/incubator-geode" -> "apache/incubator-beam"
"apache/incubator-geode" -> "SnappyDataInc/snappydata"
"apache/incubator-geode" -> "Pivotal-Open-Source-Hub/StockInference-Spark"
"apache/incubator-geode" -> "SnappyDataInc/snappy-store"
"apache/incubator-geode" -> "apache/incubator-trafodion"
"apache/incubator-geode" -> "twitter/heron"
"apache/incubator-geode" -> "linkedin/PalDB" ["e"=1]
"apache/incubator-geode" -> "Pivotal-Open-Source-Hub/WifiAnalyticsIoT"
"apache/incubator-geode" -> "linkedin/gobblin"
"apache/incubator-geode" -> "sameeragarwal/blinkdb" ["e"=1]
"apache/incubator-geode" -> "spring-projects/spring-gemfire-examples"
"apache/incubator-geode" -> "Pivotal-Open-Source-Hub/StockPrediction"
"apache/incubator-hawq" -> "apache/incubator-madlib"
"apache/incubator-hawq" -> "apache/incubator-geode"
"apache/incubator-hawq" -> "apache/incubator-carbondata"
"apache/incubator-hawq" -> "wangzw/hawq-devel-env"
"apache/incubator-hawq" -> "SnappyDataInc/snappydata"
"apache/incubator-hawq" -> "cloudera/Impala"
"apache/incubator-hawq" -> "greenplum-db/gporca" ["e"=1]
"apache/incubator-hawq" -> "HuaweiBigData/carbondata"
"apache/incubator-hawq" -> "greenplum-db/gpdb"
"apache/incubator-hawq" -> "madlib/madlib"
"apache/incubator-hawq" -> "PivotalRD/libhdfs3"
"apache/incubator-hawq" -> "cloudera/kudu"
"linkedin/ambry" -> "twitter/distributedlog"
"linkedin/ambry" -> "linkedin/PalDB" ["e"=1]
"linkedin/ambry" -> "linkedin/rest.li"
"linkedin/ambry" -> "linkedin/pinot"
"linkedin/ambry" -> "linkedin/parseq"
"linkedin/ambry" -> "twitter/heron"
"linkedin/ambry" -> "linkedin/databus" ["e"=1]
"linkedin/ambry" -> "facebookincubator/beringei"
"linkedin/ambry" -> "facebookincubator/LogDevice" ["e"=1]
"linkedin/ambry" -> "atomix/atomix" ["e"=1]
"linkedin/ambry" -> "linkedin/dr-elephant"
"linkedin/ambry" -> "linkedin/coral"
"linkedin/ambry" -> "tencent-wechat/phxpaxos" ["e"=1]
"linkedin/ambry" -> "atomix/copycat" ["e"=1]
"linkedin/ambry" -> "pinterest/rocksplicator" ["e"=1]
"madlib/madlib" -> "apache/incubator-madlib"
"madlib/madlib" -> "pivotalsoftware/PivotalR"
"madlib/madlib" -> "apache/incubator-hawq"
"madlib/madlib" -> "GreenplumChorus/chorus"
"madlib/madlib" -> "jconway/plr"
"madlib/madlib" -> "cloudera/impala" ["e"=1]
"madlib/madlib" -> "graphlab-code/graphlab" ["e"=1]
"apache/parquet-format" -> "apache/parquet-mr"
"apache/parquet-format" -> "apache/orc"
"apache/parquet-format" -> "apache/parquet-cpp"
"apache/parquet-format" -> "apache/kudu"
"apache/parquet-format" -> "oap-project/gluten"
"apache/parquet-format" -> "databricks/spark-sql-perf"
"apache/parquet-format" -> "facebookincubator/velox" ["e"=1]
"apache/parquet-format" -> "apache/drill"
"apache/parquet-format" -> "apache/impala"
"apache/parquet-format" -> "apache/iceberg"
"apache/parquet-format" -> "apache/hive"
"apache/parquet-format" -> "apache/incubator-iceberg"
"apache/parquet-format" -> "cloudera/Impala"
"apache/parquet-format" -> "apache/arrow" ["e"=1]
"apache/parquet-format" -> "apache/calcite"
"apache/hadoop-common" -> "apache/hadoop-hdfs"
"apache/hadoop-common" -> "apache/hadoop-mapreduce"
"apache/hadoop-common" -> "apache/pig"
"apache/hadoop-common" -> "apache/hbase"
"apache/hadoop-common" -> "apache/mahout"
"apache/hadoop-common" -> "apache/hive"
"apache/hadoop-common" -> "facebook/hadoop-20" ["e"=1]
"apache/hadoop-common" -> "cloudera/impala" ["e"=1]
"apache/hadoop-common" -> "amplab/shark" ["e"=1]
"apache/hadoop-common" -> "apache/incubator-spark" ["e"=1]
"apache/hadoop-common" -> "amplab/tachyon" ["e"=1]
"apache/hadoop-common" -> "mongodb/mongo-hadoop"
"apache/hadoop-common" -> "mesos/spark" ["e"=1]
"apache/hadoop-common" -> "yahoo/oozie" ["e"=1]
"apache/hadoop-common" -> "apache/incubator-drill" ["e"=1]
"mongodb/mongo-hadoop" -> "mongodb/mongo-spark"
"mongodb/mongo-hadoop" -> "mongodb/mongo-java-driver" ["e"=1]
"mongodb/mongo-hadoop" -> "elastic/elasticsearch-hadoop"
"mongodb/mongo-hadoop" -> "apache/hadoop-common"
"mongodb/mongo-hadoop" -> "mesos/spark" ["e"=1]
"mongodb/mongo-hadoop" -> "amplab/shark" ["e"=1]
"mongodb/mongo-hadoop" -> "twitter/scalding" ["e"=1]
"mongodb/mongo-hadoop" -> "linkedin/gobblin"
"mongodb/mongo-hadoop" -> "mongodb/casbah" ["e"=1]
"mongodb/mongo-hadoop" -> "rcongiu/Hive-JSON-Serde" ["e"=1]
"mongodb/mongo-hadoop" -> "linkedin/camus"
"mongodb/mongo-hadoop" -> "nathanmarz/storm" ["e"=1]
"mongodb/mongo-hadoop" -> "Stratio/spark-mongodb" ["e"=1]
"mongodb/mongo-hadoop" -> "mongodb/mongo-snippets" ["e"=1]
"mongodb/mongo-hadoop" -> "cloudera/hue"
"cas-bigdatalab/piflow" -> "cas-bigdatalab/piflow-web"
"cas-bigdatalab/piflow" -> "edp963/moonbox"
"cas-bigdatalab/piflow" -> "hairless/plink"
"cas-bigdatalab/piflow" -> "teeyog/IQL"
"cas-bigdatalab/piflow" -> "harbby/sylph"
"cas-bigdatalab/piflow" -> "yaooqinn/kyuubi"
"cas-bigdatalab/piflow" -> "edp963/wormhole"
"cas-bigdatalab/piflow" -> "Qihoo360/Quicksql"
"cas-bigdatalab/piflow" -> "WeBankFinTech/Scriptis"
"cas-bigdatalab/piflow" -> "InterestingLab/waterdrop"
"cas-bigdatalab/piflow" -> "MeetYouDevs/big-whale"
"cas-bigdatalab/piflow" -> "ucarGroup/DataLink"
"cas-bigdatalab/piflow" -> "NetEase/kyuubi"
"cas-bigdatalab/piflow" -> "cas-packone/packone"
"cas-bigdatalab/piflow" -> "ververica/flink-sql-gateway"
"xuanbo/kettle-web" -> "ziliang001/etl-kettle-web"
"xuanbo/kettle-web" -> "JoeyBling/webkettle"
"xuanbo/kettle-web" -> "zhaxiaodong9860/kettle-scheduler"
"xuanbo/kettle-web" -> "majinju/kettle-manager"
"xuanbo/kettle-web" -> "konglinghai123/renren_kettle"
"xuanbo/kettle-web" -> "haochenchn/kettle-springboot"
"xuanbo/kettle-web" -> "xiaoymin/KettleInAction100"
"xuanbo/kettle-web" -> "zllkyo/kettle-manager"
"xuanbo/kettle-web" -> "classtag/OpenKettleWebUI"
"xuanbo/kettle-web" -> "HiromuHota/pentaho-kettle"
"linkedin/camus" -> "linkedin/gobblin"
"linkedin/camus" -> "apache/incubator-gobblin"
"linkedin/camus" -> "claudemamo/kafka-web-console" ["e"=1]
"linkedin/camus" -> "mumrah/kafka-python" ["e"=1]
"linkedin/camus" -> "cloudera/impala" ["e"=1]
"linkedin/camus" -> "metamx/druid" ["e"=1]
"linkedin/camus" -> "quantifind/KafkaOffsetMonitor" ["e"=1]
"linkedin/camus" -> "nathanmarz/storm-contrib" ["e"=1]
"linkedin/camus" -> "amplab/shark" ["e"=1]
"linkedin/camus" -> "twitter/summingbird" ["e"=1]
"linkedin/camus" -> "miguno/kafka-storm-starter" ["e"=1]
"linkedin/camus" -> "Parquet/parquet-format" ["e"=1]
"linkedin/camus" -> "Parquet/parquet-mr" ["e"=1]
"linkedin/camus" -> "linkedin/pinot"
"linkedin/camus" -> "klout/brickhouse" ["e"=1]
"MoRan1607/BigDataGuide" -> "will-che/BigData-Interview"
"MoRan1607/BigDataGuide" -> "collabH/bigdata-growth"
"MoRan1607/BigDataGuide" -> "wangzhiwubigdata/God-Of-BigData"
"MoRan1607/BigDataGuide" -> "geekyouth/SZT-bigdata"
"MoRan1607/BigDataGuide" -> "will-che/flink-recommandSystem-demo"
"MoRan1607/BigDataGuide" -> "newTendermint/awesome-bigdata"
"MoRan1607/BigDataGuide" -> "AllDataTeam/alldata"
"MoRan1607/BigDataGuide" -> "TurboWay/bigdata_analyse"
"MoRan1607/BigDataGuide" -> "TALKDATA/JavaBigData"
"MoRan1607/BigDataGuide" -> "Thpffcj/BigData-Getting-Started"
"MoRan1607/BigDataGuide" -> "realguoshuai/hadoop_study"
"MoRan1607/BigDataGuide" -> "sunnyandgood/BigData"
"MoRan1607/BigDataGuide" -> "whirlys/BigData-In-Practice"
"MoRan1607/BigDataGuide" -> "zhangjun0x01/bigdata-examples"
"MoRan1607/BigDataGuide" -> "BigDataScholar/TheKingOfBigData"
"alibaba/Alink" -> "DTStack/flinkx"
"alibaba/Alink" -> "flink-china/flink-training-course"
"alibaba/Alink" -> "DTStack/flinkStreamSQL"
"alibaba/Alink" -> "zhisheng17/flink-learning"
"alibaba/Alink" -> "alibaba/flink-ai-extended"
"alibaba/Alink" -> "ververica/flink-cdc-connectors"
"alibaba/Alink" -> "CheckChe0803/flink-recommandSystem-demo"
"alibaba/Alink" -> "DataLinkDC/dlink"
"alibaba/Alink" -> "apache/flink"
"alibaba/Alink" -> "Qihoo360/Quicksql"
"alibaba/Alink" -> "apache/incubator-dolphinscheduler"
"alibaba/Alink" -> "zhp8341/flink-streaming-platform-web"
"alibaba/Alink" -> "apache/iceberg"
"alibaba/Alink" -> "InterestingLab/waterdrop"
"alibaba/Alink" -> "streamxhub/streamx"
"apache/flink-docker" -> "flink-extended/flink-remote-shuffle"
"apache/flink-docker" -> "GoogleCloudPlatform/flink-on-k8s-operator"
"apache/flink-docker" -> "apache/flink-kubernetes-operator"
"apache/flink-docker" -> "apache/flink-table-store"
"apache/flink-docker" -> "lyft/flinkk8soperator"
"apache/flink-docker" -> "apache/flink-statefun"
"apache/flink-docker" -> "ververica/flink-sql-cookbook"
"apache/flink-docker" -> "nexmark/nexmark"
"apache/flink-docker" -> "apache/doris-flink-connector" ["e"=1]
"apache/flink-docker" -> "ververica/flink-sql-gateway"
"apache/flink-docker" -> "itinycheng/flink-connector-clickhouse" ["e"=1]
"apache/flink-docker" -> "docker-flink/docker-flink"
"apache/flink-docker" -> "apache/flink-web"
"apache/flink-docker" -> "apache/bahir-flink"
"apache/flink-docker" -> "wangyang0918/flink-native-k8s-operator"
"streaming-with-flink/examples-scala" -> "streaming-with-flink/examples-java"
"streaming-with-flink/examples-scala" -> "streaming-with-flink/examples"
"streaming-with-flink/examples-scala" -> "ververica/flink-training-exercises"
"streaming-with-flink/examples-scala" -> "ververica/sql-training"
"streaming-with-flink/examples-scala" -> "apache/flink-training"
"fangyidong/json-simple" -> "stleary/JSON-java" ["e"=1]
"fangyidong/json-simple" -> "ralfstx/minimal-json"
"fangyidong/json-simple" -> "jdereg/json-io"
"fangyidong/json-simple" -> "cliftonlabs/json-simple"
"fangyidong/json-simple" -> "billdavidson/JSONUtil"
"hadoopecosystemtable/hadoopecosystemtable.github.io" -> "youngwookim/awesome-hadoop"
"hadoopecosystemtable/hadoopecosystemtable.github.io" -> "linkedin/dr-elephant"
"hadoopecosystemtable/hadoopecosystemtable.github.io" -> "linkedin/gobblin"
"hadoopecosystemtable/hadoopecosystemtable.github.io" -> "sequenceiq/sequenceiq-samples"
"hadoopecosystemtable/hadoopecosystemtable.github.io" -> "databricks/spark-avro"
"hadoopecosystemtable/hadoopecosystemtable.github.io" -> "intel-hadoop/HiBench"
"proofpoint/kairosdb" -> "proofpoint/kairosdb-client"
"proofpoint/kairosdb" -> "Pardot/Rhombus"
"apache/incubator-hugegraph" -> "apache/incubator-hugegraph-toolchain"
"apache/incubator-hugegraph" -> "apache/incubator-hugegraph-doc"
"apache/incubator-hugegraph" -> "TuGraph-db/tugraph-db" ["e"=1]
"apache/incubator-hugegraph" -> "apache/incubator-eventmesh"
"apache/incubator-hugegraph" -> "apache/incubator-hugegraph-computer"
"apache/incubator-hugegraph" -> "apache/incubator-uniffle"
"apache/incubator-hugegraph" -> "apache/linkis"
"apache/incubator-hugegraph" -> "alldatacenter/alldata"
"timescale/tsbs" -> "influxdata/influxdb-comparisons"
"timescale/tsbs" -> "timescale/pg_prometheus"
"timescale/tsbs" -> "thulab/iotdb-benchmark"
"timescale/tsbs" -> "timescale/docs.timescale.com-content"
"timescale/tsbs" -> "influxdata/influxdb_iox" ["e"=1]
"timescale/tsbs" -> "facebookarchive/beringei"
"timescale/tsbs" -> "timescale/timescale-prometheus"
"timescale/tsbs" -> "timescale/timescaledb-tune" ["e"=1]
"timescale/tsbs" -> "timescaledb/timescaledb"
"timescale/tsbs" -> "ClickHouse/ClickBench" ["e"=1]
"timescale/tsbs" -> "chengshiwen/influx-proxy" ["e"=1]
"timescale/tsbs" -> "jacksontj/promxy" ["e"=1]
"timescale/tsbs" -> "dgryski/go-tsz"
"timescale/tsbs" -> "rockset/rocksdb-cloud" ["e"=1]
"timescale/tsbs" -> "thulab/tsfile" ["e"=1]
"birdLark/LarkMidTable" -> "moutainhigh/datax-cloud-base"
"birdLark/LarkMidTable" -> "alldatacenter/alldata"
"birdLark/LarkMidTable" -> "DTStack/chunjun"
"birdLark/LarkMidTable" -> "DataLinkDC/dlink"
"birdLark/LarkMidTable" -> "authorwlh/alldata"
"birdLark/LarkMidTable" -> "zhp8341/flink-streaming-platform-web"
"birdLark/LarkMidTable" -> "collabH/bigdata-growth"
"birdLark/LarkMidTable" -> "qlangtech/tis"
"birdLark/LarkMidTable" -> "WeBankFinTech/DataSphereStudio"
"birdLark/LarkMidTable" -> "DTStack/Taier" ["e"=1]
"birdLark/LarkMidTable" -> "zhaoyachao/zdh_web"
"birdLark/LarkMidTable" -> "authorwlh/wlhbdp"
"birdLark/LarkMidTable" -> "apache/incubator-linkis"
"birdLark/LarkMidTable" -> "collabH/repository"
"birdLark/LarkMidTable" -> "wgzhao/Addax"
"collabH/bigdata-growth" -> "MoRan1607/BigDataGuide"
"collabH/bigdata-growth" -> "birdLark/LarkMidTable"
"collabH/bigdata-growth" -> "will-che/flink-recommandSystem-demo"
"collabH/bigdata-growth" -> "HamaWhiteGG/flink-sql-lineage"
"collabH/bigdata-growth" -> "authorwlh/alldata"
"collabH/bigdata-growth" -> "threeknowbigdata/flink_second_understand"
"collabH/bigdata-growth" -> "will-che/BigData-Interview"
"collabH/bigdata-growth" -> "gingerredjade/flink-userportrait-main"
"collabH/bigdata-growth" -> "qlangtech/tis"
"collabH/bigdata-growth" -> "geekyouth/SZT-bigdata"
"collabH/bigdata-growth" -> "simbafl/DataWarehouse"
"collabH/bigdata-growth" -> "zhangjun0x01/bigdata-examples"
"collabH/bigdata-growth" -> "alldatacenter/alldata"
"didi/kafka-manager" -> "smartloli/kafka-eagle" ["e"=1]
"didi/kafka-manager" -> "didi/ES-Fastloader"
"didi/kafka-manager" -> "xaecbd/KafkaCenter"
"didi/kafka-manager" -> "didi/DDMQ" ["e"=1]
"didi/kafka-manager" -> "didi/sds" ["e"=1]
"didi/kafka-manager" -> "didi/nightingale" ["e"=1]
"didi/kafka-manager" -> "InterestingLab/waterdrop"
"didi/kafka-manager" -> "hairless/plink"
"didi/kafka-manager" -> "DTStack/flinkx"
"didi/kafka-manager" -> "fayson/cdhproject"
"didi/kafka-manager" -> "zhp8341/flink-streaming-platform-web"
"didi/kafka-manager" -> "yahoo/CMAK" ["e"=1]
"didi/kafka-manager" -> "Qihoo360/XSQL"
"didi/kafka-manager" -> "edp963/wormhole"
"didi/kafka-manager" -> "didi/go-spring" ["e"=1]
"ucarGroup/DataLink" -> "edp963/wormhole"
"ucarGroup/DataLink" -> "DTStack/flinkx"
"ucarGroup/DataLink" -> "BriData/DBus"
"ucarGroup/DataLink" -> "sxfad/porter" ["e"=1]
"ucarGroup/DataLink" -> "WeBankFinTech/Exchangis"
"ucarGroup/DataLink" -> "InterestingLab/waterdrop"
"ucarGroup/DataLink" -> "streamxhub/streamx"
"ucarGroup/DataLink" -> "DTStack/flinkStreamSQL"
"ucarGroup/DataLink" -> "Qihoo360/Quicksql"
"ucarGroup/DataLink" -> "WeBankFinTech/DataSphereStudio"
"ucarGroup/DataLink" -> "edp963/moonbox"
"ucarGroup/DataLink" -> "DataLinkDC/dlink"
"ucarGroup/DataLink" -> "scxwhite/hera"
"ucarGroup/DataLink" -> "zhp8341/flink-streaming-platform-web"
"ucarGroup/DataLink" -> "WeBankFinTech/Qualitis"
"austinoboyle/scrape-linkedin-selenium" -> "eracle/linkedin"
"austinoboyle/scrape-linkedin-selenium" -> "joeyism/linkedin_scraper"
"austinoboyle/scrape-linkedin-selenium" -> "federicohaag/LinkedInScraping"
"austinoboyle/scrape-linkedin-selenium" -> "linkedtales/scrapedin"
"austinoboyle/scrape-linkedin-selenium" -> "fabriziomiano/linkedin-scraper"
"austinoboyle/scrape-linkedin-selenium" -> "dchrastil/ScrapedIn" ["e"=1]
"austinoboyle/scrape-linkedin-selenium" -> "jvandenaardweg/linkedin-profile-scraper"
"austinoboyle/scrape-linkedin-selenium" -> "kirkhunter/linkedin-jobs-scraper"
"austinoboyle/scrape-linkedin-selenium" -> "linkedtales/scrapedin-linkedin-crawler"
"austinoboyle/scrape-linkedin-selenium" -> "tomquirk/linkedin-api"
"CheckChe0803/flink-recommandSystem-demo" -> "flink-china/flink-training-course"
"CheckChe0803/flink-recommandSystem-demo" -> "zhisheng17/flink-learning"
"CheckChe0803/flink-recommandSystem-demo" -> "CheckChe0803/BigData-Interview"
"CheckChe0803/flink-recommandSystem-demo" -> "DTStack/flinkx"
"CheckChe0803/flink-recommandSystem-demo" -> "DTStack/flinkStreamSQL"
"CheckChe0803/flink-recommandSystem-demo" -> "wangzhiwubigdata/God-Of-BigData"
"CheckChe0803/flink-recommandSystem-demo" -> "zhp8341/flink-streaming-platform-web"
"CheckChe0803/flink-recommandSystem-demo" -> "LuckyZXL2016/Movie_Recommend" ["e"=1]
"CheckChe0803/flink-recommandSystem-demo" -> "geekyouth/SZT-bigdata"
"CheckChe0803/flink-recommandSystem-demo" -> "alibaba/Alink"
"CheckChe0803/flink-recommandSystem-demo" -> "heibaiying/BigData-Notes" ["e"=1]
"CheckChe0803/flink-recommandSystem-demo" -> "gingerredjade/flink-userportrait-main"
"CheckChe0803/flink-recommandSystem-demo" -> "realguoshuai/hadoop_study"
"CheckChe0803/flink-recommandSystem-demo" -> "InterestingLab/waterdrop"
"CheckChe0803/flink-recommandSystem-demo" -> "streamxhub/streamx"
"facebookincubator/beringei" -> "pingcap/tikv" ["e"=1]
"facebookincubator/beringei" -> "OpenTSDB/opentsdb"
"facebookincubator/beringei" -> "SoftwareDefinedBuildings/btrdb"
"facebookincubator/beringei" -> "lyft/envoy" ["e"=1]
"facebookincubator/beringei" -> "scylladb/scylla" ["e"=1]
"facebookincubator/beringei" -> "mapd/mapd-core"
"facebookincubator/beringei" -> "twitter/distributedlog"
"facebookincubator/beringei" -> "fastio/pedis" ["e"=1]
"facebookincubator/beringei" -> "cmu-db/peloton" ["e"=1]
"facebookincubator/beringei" -> "yandex/ClickHouse"
"facebookincubator/beringei" -> "linkedin/ambry"
"facebookincubator/beringei" -> "baidu/bfs" ["e"=1]
"facebookincubator/beringei" -> "twitter/heron"
"facebookincubator/beringei" -> "facebook/wangle" ["e"=1]
"facebookincubator/beringei" -> "scylladb/seastar" ["e"=1]
"traildb/traildb" -> "traildb/traildb-go"
"traildb/traildb" -> "traildb/traildb-python"
"traildb/traildb" -> "lemire/streamvbyte" ["e"=1]
"traildb/traildb" -> "traildb/trck"
"traildb/traildb" -> "akumuli/Akumuli"
"traildb/traildb" -> "cswinter/LocustDB" ["e"=1]
"traildb/traildb" -> "pmwkaa/sophia" ["e"=1]
"traildb/traildb" -> "leo-yuriev/t1ha" ["e"=1]
"spotify/snakebite" -> "cloudera/impyla"
"spotify/snakebite" -> "colinmarc/hdfs" ["e"=1]
"spotify/snakebite" -> "mtth/hdfs"
"spotify/snakebite" -> "crs4/pydoop"
"spotify/snakebite" -> "dropbox/PyHive"
"spotify/snakebite" -> "Yelp/mrjob" ["e"=1]
"spotify/snakebite" -> "cloudera/ibis" ["e"=1]
"spotify/snakebite" -> "cloudera/kudu"
"spotify/snakebite" -> "klbostee/dumbo" ["e"=1]
"spotify/snakebite" -> "cloudera/cdk" ["e"=1]
"spotify/snakebite" -> "jupyter-incubator/sparkmagic"
"spotify/snakebite" -> "BradRuderman/pyhs2"
"spotify/snakebite" -> "spotify/luigi" ["e"=1]
"spotify/snakebite" -> "linkedin/camus"
"spotify/snakebite" -> "airbnb/airflow"
"leesf/hudi-resources" -> "leesf/hudi-demos"
"leesf/hudi-resources" -> "collabH/repository"
"leesf/hudi-resources" -> "NetEase/arctic"
"leesf/hudi-resources" -> "apache/hudi"
"leesf/hudi-resources" -> "apache/flink-table-store"
"leesf/hudi-resources" -> "ververica/flink-sql-gateway"
"leesf/hudi-resources" -> "flink-extended/flink-remote-shuffle"
"leesf/hudi-resources" -> "apache/incubator-kyuubi"
"leesf/hudi-resources" -> "MeetYouDevs/big-whale"
"leesf/hudi-resources" -> "quxiucheng/apache-calcite-tutorial"
"leesf/hudi-resources" -> "DataLinkDC/dlink"
"leesf/hudi-resources" -> "bytedance/CloudShuffleService"
"leesf/hudi-resources" -> "apache/bahir-flink"
"leesf/hudi-resources" -> "zhangjun0x01/bigdata-examples"
"leesf/hudi-resources" -> "zhp8341/flink-streaming-platform-web"
"apache/cassandra" -> "apache/hbase"
"apache/cassandra" -> "apache/kafka" ["e"=1]
"apache/cassandra" -> "apache/zookeeper" ["e"=1]
"apache/cassandra" -> "apache/hive"
"apache/cassandra" -> "apache/hadoop"
"apache/cassandra" -> "scylladb/scylla" ["e"=1]
"apache/cassandra" -> "datastax/java-driver" ["e"=1]
"apache/cassandra" -> "apache/storm"
"apache/cassandra" -> "apache/lucene-solr"
"apache/cassandra" -> "akka/akka" ["e"=1]
"apache/cassandra" -> "apache/couchdb" ["e"=1]
"apache/cassandra" -> "apache/mesos" ["e"=1]
"apache/cassandra" -> "facebook/rocksdb" ["e"=1]
"apache/cassandra" -> "apache/spark"
"apache/cassandra" -> "apache/flink"
"jadianes/spark-movie-lens" -> "jadianes/spark-py-notebooks"
"jadianes/spark-movie-lens" -> "XuefengHuang/RecommendationSystem" ["e"=1]
"jadianes/spark-movie-lens" -> "ocelma/python-recsys" ["e"=1]
"jadianes/spark-movie-lens" -> "chengstone/movie_recommender" ["e"=1]
"jadianes/spark-movie-lens" -> "IBM/elasticsearch-spark-recommender" ["e"=1]
"jadianes/spark-movie-lens" -> "jadianes/winerama-recommender-tutorial"
"jadianes/spark-movie-lens" -> "jadianes/data-science-your-way"
"jadianes/spark-movie-lens" -> "khanhnamle1994/movielens" ["e"=1]
"jadianes/spark-movie-lens" -> "marklit/recommend"
"jadianes/spark-movie-lens" -> "smallnest/douban-recommender" ["e"=1]
"jadianes/spark-movie-lens" -> "songgc/TF-recomm" ["e"=1]
"jadianes/spark-movie-lens" -> "groveco/content-engine"
"jadianes/spark-movie-lens" -> "OndraFiedler/spark-recommender"
"jadianes/spark-movie-lens" -> "LeechanX/Netflix-Recommender-with-Spark" ["e"=1]
"jadianes/spark-movie-lens" -> "chyikwei/recommend" ["e"=1]
"jadianes/spark-py-notebooks" -> "jadianes/spark-movie-lens"
"jadianes/spark-py-notebooks" -> "jadianes/data-science-your-way"
"jadianes/spark-py-notebooks" -> "mahmoudparsian/pyspark-tutorial"
"jadianes/spark-py-notebooks" -> "PacktPublishing/Learning-PySpark"
"jadianes/spark-py-notebooks" -> "drabastomek/learningPySpark"
"jadianes/spark-py-notebooks" -> "lensacom/sparkit-learn"
"jadianes/spark-py-notebooks" -> "XD-DENG/Spark-practice"
"jadianes/spark-py-notebooks" -> "awesome-spark/awesome-spark"
"jadianes/spark-py-notebooks" -> "jadianes/spark-r-notebooks"
"jadianes/spark-py-notebooks" -> "UrbanInstitute/pyspark-tutorials"
"jadianes/spark-py-notebooks" -> "deanwampler/spark-scala-tutorial"
"jadianes/spark-py-notebooks" -> "databricks/learning-spark"
"jadianes/spark-py-notebooks" -> "tirthajyoti/Spark-with-Python"
"jadianes/spark-py-notebooks" -> "AlexIoannides/pyspark-example-project"
"jadianes/spark-py-notebooks" -> "databricks/spark-deep-learning"
"ralfstx/minimal-json" -> "fangyidong/json-simple"
"ralfstx/minimal-json" -> "bolerio/mjson"
"ralfstx/minimal-json" -> "owlike/genson"
"ralfstx/minimal-json" -> "boonproject/boon" ["e"=1]
"ralfstx/minimal-json" -> "mmastrac/nanojson"
"ralfstx/minimal-json" -> "ui4j/ui4j" ["e"=1]
"ralfstx/minimal-json" -> "jdereg/json-io"
"ralfstx/minimal-json" -> "zafarkhaja/jsemver"
"ralfstx/minimal-json" -> "ngs-doo/dsl-json" ["e"=1]
"ralfstx/minimal-json" -> "lmdbjava/lmdbjava" ["e"=1]
"ralfstx/minimal-json" -> "fabienrenaud/java-json-benchmark" ["e"=1]
"ralfstx/minimal-json" -> "zsoltherpai/feather" ["e"=1]
"uber/aresdb" -> "apache/incubator-pinot"
"uber/aresdb" -> "omnisci/omniscidb"
"uber/aresdb" -> "m3db/m3" ["e"=1]
"uber/aresdb" -> "mapd/mapd-core"
"uber/aresdb" -> "facebookincubator/LogDevice" ["e"=1]
"uber/aresdb" -> "pravega/pravega"
"uber/aresdb" -> "uber/peloton"
"uber/aresdb" -> "uber/kraken" ["e"=1]
"uber/aresdb" -> "uber/petastorm" ["e"=1]
"uber/aresdb" -> "heterodb/pg-strom" ["e"=1]
"uber/aresdb" -> "uber/AthenaX"
"uber/aresdb" -> "weld-project/weld" ["e"=1]
"uber/aresdb" -> "cmu-db/peloton" ["e"=1]
"uber/aresdb" -> "google/zetasql" ["e"=1]
"uber/aresdb" -> "yandex/ClickHouse"
"achinnasamy/bigdata" -> "achinnasamy/Free-Deep-Learning-Books"
"achinnasamy/bigdata" -> "databricks/Spark-The-Definitive-Guide"
"achinnasamy/bigdata" -> "Larry3z/HadoopRelatedBooks"
"alexholmes/hadoop-book" -> "hadooparchitecturebook/hadoop-arch-book"
"alexholmes/hadoop-book" -> "alexholmes/hadoop-utils"
"alexholmes/hadoop-book" -> "alexholmes/hdfs-file-slurper"
"bsspirit/maven_mahout_template" -> "bsspirit/maven_hadoop_template"
"liguozhong/demo_11.11_storm-spark-hadoop" -> "oeljeklaus-you/UserActionAnalyzePlatform"
"liguozhong/demo_11.11_storm-spark-hadoop" -> "wankunde/logcount"
"liguozhong/demo_11.11_storm-spark-hadoop" -> "ljcan/SparkStreaming"
"liguozhong/demo_11.11_storm-spark-hadoop" -> "jasonTangxd/recommendSys" ["e"=1]
"liguozhong/demo_11.11_storm-spark-hadoop" -> "gglinux/wifi"
"liguozhong/demo_11.11_storm-spark-hadoop" -> "longyinzaitian/HadoopDemo"
"liguozhong/demo_11.11_storm-spark-hadoop" -> "monsonlee/BigData"
"liguozhong/demo_11.11_storm-spark-hadoop" -> "LuckyZXL2016/News_Spark"
"liguozhong/demo_11.11_storm-spark-hadoop" -> "baifendian/SparkDemo"
"liguozhong/demo_11.11_storm-spark-hadoop" -> "appleappleapple/BigDataLearning"
"liguozhong/demo_11.11_storm-spark-hadoop" -> "sectong/SparkToParquet"
"liguozhong/demo_11.11_storm-spark-hadoop" -> "xiaokugua250/DataMingProject"
"liguozhong/demo_11.11_storm-spark-hadoop" -> "wanghan0501/WiFiProbeAnalysis"
"liguozhong/demo_11.11_storm-spark-hadoop" -> "chu888chu888/HadoopAndSparkDataStudy"
"liguozhong/demo_11.11_storm-spark-hadoop" -> "supermy/flume-kafka-storm"
"adobe-research/spindle" -> "ooyala/spark-jobserver"
"adobe-research/spindle" -> "krasserm/akka-analytics" ["e"=1]
"adobe-research/spindle" -> "ibm-et/spark-kernel"
"spoddutur/spark-notes" -> "vivek-bombatkar/Databricks-Apache-Spark-2X-Certified-Developer"
"spoddutur/spark-notes" -> "vaquarkhan/Apache-Kafka-poc-and-notes"
"apache/incubator-zeppelin" -> "NFLabs/zeppelin"
"apache/incubator-zeppelin" -> "andypetrella/spark-notebook"
"apache/incubator-zeppelin" -> "spark-jobserver/spark-jobserver"
"apache/incubator-zeppelin" -> "amplab/tachyon" ["e"=1]
"apache/incubator-zeppelin" -> "amplab/keystone"
"apache/incubator-zeppelin" -> "ooyala/spark-jobserver"
"apache/incubator-zeppelin" -> "databricks/spark-csv"
"apache/incubator-zeppelin" -> "amplab-extras/SparkR-pkg" ["e"=1]
"apache/incubator-zeppelin" -> "linkedin/pinot"
"apache/incubator-zeppelin" -> "airbnb/airflow"
"apache/incubator-zeppelin" -> "h2oai/sparkling-water"
"apache/incubator-zeppelin" -> "ibm-et/spark-kernel"
"apache/incubator-zeppelin" -> "twitter/algebird" ["e"=1]
"apache/incubator-zeppelin" -> "apache/incubator-toree"
"apache/incubator-zeppelin" -> "facebook/presto" ["e"=1]
"awesome-spark/spark-gotchas" -> "awesome-spark/awesome-spark"
"awesome-spark/spark-gotchas" -> "awesome-spark/learn-by-examples"
"awesome-spark/spark-gotchas" -> "groupon/sparklint"
"awesome-spark/spark-gotchas" -> "zero323/pyspark-stubs"
"awesome-spark/spark-gotchas" -> "MrPowers/spark-daria"
"awesome-spark/spark-gotchas" -> "ekampf/PySpark-Boilerplate"
"awesome-spark/spark-gotchas" -> "qubole/sparklens"
"awesome-spark/spark-gotchas" -> "LucaCanali/sparkMeasure"
"awesome-spark/spark-gotchas" -> "MrPowers/spark-fast-tests"
"awesome-spark/spark-gotchas" -> "databricks/spark-perf"
"zero323/pyspark-stubs" -> "zero323/pyspark-asyncactions"
"databricks/spark-xml" -> "databricks/spark-avro"
"databricks/spark-xml" -> "databricks/spark-csv"
"databricks/spark-xml" -> "elsevierlabs-os/spark-xml-utils"
"databricks/spark-xml" -> "databricks/spark-corenlp"
"databricks/spark-xml" -> "databricks/spark-sql-perf"
"databricks/spark-xml" -> "crealytics/spark-excel"
"databricks/spark-xml" -> "delta-io/delta-sharing"
"databricks/spark-xml" -> "apache/incubator-toree"
"databricks/spark-xml" -> "databricks/spark-knowledgebase"
"databricks/spark-xml" -> "sakserv/hadoop-mini-clusters" ["e"=1]
"databricks/spark-xml" -> "delta-io/connectors"
"twitter/distributedlog" -> "twitter/heron"
"twitter/distributedlog" -> "linkedin/ambry"
"twitter/distributedlog" -> "yahoo/pulsar" ["e"=1]
"twitter/distributedlog" -> "apache/bookkeeper" ["e"=1]
"twitter/distributedlog" -> "facebookincubator/beringei"
"twitter/distributedlog" -> "weibocom/motan" ["e"=1]
"twitter/distributedlog" -> "linkedin/gobblin"
"twitter/distributedlog" -> "druid-io/druid"
"twitter/distributedlog" -> "apache/incubator-distributedlog"
"twitter/distributedlog" -> "real-logic/Aeron" ["e"=1]
"twitter/distributedlog" -> "linkedin/databus" ["e"=1]
"twitter/distributedlog" -> "twitter/finagle" ["e"=1]
"twitter/distributedlog" -> "Netflix/exhibitor" ["e"=1]
"twitter/distributedlog" -> "twitter/snowflake" ["e"=1]
"twitter/distributedlog" -> "mrniko/redisson" ["e"=1]
"newTendermint/awesome-bigdata" -> "newTendermint/awesome-analytics"
"newTendermint/awesome-bigdata" -> "javierluraschi/awesome-dataviz"
"newTendermint/awesome-bigdata" -> "awesome-foss/awesome-sysadmin" ["e"=1]
"newTendermint/awesome-bigdata" -> "gdcmarinho/awesome-project" ["e"=1]
"newTendermint/awesome-bigdata" -> "inputsh/awesome-linux" ["e"=1]
"newTendermint/awesome-bigdata" -> "BigDataScholar/TheKingOfBigData"
"newTendermint/awesome-bigdata" -> "MoRan1607/BigDataGuide"
"newTendermint/awesome-bigdata" -> "DopplerHQ/awesome-bots" ["e"=1]
"newTendermint/awesome-bigdata" -> "goabstract/Awesome-Design-Tools" ["e"=1]
"newTendermint/awesome-bigdata" -> "igorbarinov/awesome-data-engineering" ["e"=1]
"newTendermint/awesome-bigdata" -> "georgezouq/awesome-ai-in-finance" ["e"=1]
"newTendermint/awesome-bigdata" -> "pingcap/awesome-database-learning" ["e"=1]
"newTendermint/awesome-bigdata" -> "terkelg/awesome-creative-coding" ["e"=1]
"newTendermint/awesome-bigdata" -> "markusschanta/awesome-jupyter" ["e"=1]
"newTendermint/awesome-bigdata" -> "Zheaoli/awesome-coins" ["e"=1]
"OpenTSDB/opentsdb" -> "kairosdb/kairosdb"
"OpenTSDB/opentsdb" -> "apache/hbase"
"OpenTSDB/opentsdb" -> "druid-io/druid"
"OpenTSDB/opentsdb" -> "OpenTSDB/tcollector"
"OpenTSDB/opentsdb" -> "dropwizard/metrics" ["e"=1]
"OpenTSDB/opentsdb" -> "influxdata/influxdb" ["e"=1]
"OpenTSDB/opentsdb" -> "bosun-monitor/bosun" ["e"=1]
"OpenTSDB/opentsdb" -> "influxdb/influxdb" ["e"=1]
"OpenTSDB/opentsdb" -> "apache/kylin"
"OpenTSDB/opentsdb" -> "apache/flume"
"OpenTSDB/opentsdb" -> "yahoo/kafka-manager" ["e"=1]
"OpenTSDB/opentsdb" -> "apache/storm"
"OpenTSDB/opentsdb" -> "openzipkin/zipkin" ["e"=1]
"OpenTSDB/opentsdb" -> "azkaban/azkaban"
"OpenTSDB/opentsdb" -> "facebookincubator/beringei"
"apache/kyuubi" -> "apache/incubator-paimon"
"apache/kyuubi" -> "NetEase/arctic"
"apache/kyuubi" -> "apache/linkis"
"apache/kyuubi" -> "japila-books/spark-sql-internals"
"apache/kyuubi" -> "apache/flink-table-store"
"apache/hbase-operator-tools" -> "apache/hbase-connectors"
"apache/hbase-operator-tools" -> "DarkPhoenixs/hbase-meta-repair"
"apachecn/hbase-doc-zh" -> "apachecn/flink-doc-zh"
"apachecn/hbase-doc-zh" -> "realguoshuai/hadoop_study"
"apache/ambari" -> "apache/hive"
"apache/ambari" -> "apache/atlas" ["e"=1]
"apache/ambari" -> "apache/flume"
"apache/ambari" -> "apache/ranger"
"apache/ambari" -> "apache/hbase"
"apache/ambari" -> "apache/kylin"
"apache/ambari" -> "apache/phoenix"
"apache/ambari" -> "cloudera/hue"
"apache/ambari" -> "azkaban/azkaban"
"apache/ambari" -> "apache/sqoop"
"apache/ambari" -> "apache/zeppelin"
"apache/ambari" -> "apache/oozie"
"apache/ambari" -> "apache/nifi"
"apache/ambari" -> "ververica/flink-cdc-connectors"
"apache/ambari" -> "apache/tez"
"qlangtech/tis" -> "wgzhao/Addax"
"qlangtech/tis" -> "DataLinkDC/dlink"
"qlangtech/tis" -> "wxgzgl/LarkMidTable"
"qlangtech/tis" -> "flowerfine/scaleph"
"qlangtech/tis" -> "DTStack/chunjun"
"qlangtech/tis" -> "zhaoyachao/zdh_web"
"qlangtech/tis" -> "streamxhub/streamx"
"qlangtech/tis" -> "bytedance/bitsail"
"qlangtech/tis" -> "DTStack/Taier" ["e"=1]
"qlangtech/tis" -> "gaodayu168/datasophon"
"qlangtech/tis" -> "datasophon/datasophon"
"qlangtech/tis" -> "datavines-ops/datavines"
"qlangtech/tis" -> "zhp8341/flink-streaming-platform-web"
"qlangtech/tis" -> "WeBankFinTech/Exchangis"
"qlangtech/tis" -> "leesf/hudi-resources"
"apache/orc" -> "apache/parquet-format"
"apache/orc" -> "apache/parquet-mr"
"apache/orc" -> "apache/impala"
"apache/orc" -> "apache/tez"
"apache/orc" -> "apache/kudu"
"apache/orc" -> "apache/parquet-cpp"
"apache/orc" -> "apache/ranger"
"apache/orc" -> "facebookincubator/velox" ["e"=1]
"apache/orc" -> "linkedin/coral"
"apache/orc" -> "Intel-bigdata/OAP"
"apache/orc" -> "Intel-bigdata/spark-adaptive"
"apache/orc" -> "liancheng/spear"
"apache/orc" -> "apache/hawq"
"apache/orc" -> "Tencent/Firestorm"
"apache/orc" -> "apache/hive"
"holdenk/spark-testing-base" -> "MrPowers/spark-daria"
"holdenk/spark-testing-base" -> "MrPowers/spark-fast-tests"
"holdenk/spark-testing-base" -> "spark-jobserver/spark-jobserver"
"holdenk/spark-testing-base" -> "holdenk/spark-validator"
"holdenk/spark-testing-base" -> "high-performance-spark/high-performance-spark-examples"
"holdenk/spark-testing-base" -> "databricks/scala-style-guide" ["e"=1]
"holdenk/spark-testing-base" -> "typelevel/frameless" ["e"=1]
"holdenk/spark-testing-base" -> "spotify/scio" ["e"=1]
"holdenk/spark-testing-base" -> "databricks/spark-perf"
"holdenk/spark-testing-base" -> "twitter/algebird" ["e"=1]
"holdenk/spark-testing-base" -> "LucaCanali/sparkMeasure"
"holdenk/spark-testing-base" -> "sbt/sbt-assembly" ["e"=1]
"holdenk/spark-testing-base" -> "awslabs/deequ" ["e"=1]
"holdenk/spark-testing-base" -> "scopt/scopt" ["e"=1]
"holdenk/spark-testing-base" -> "andypetrella/spark-notebook"
"mspnp/spark-monitoring" -> "microsoft/nutter" ["e"=1]
"mspnp/spark-monitoring" -> "databrickslabs/terraform-provider-databricks"
"mspnp/spark-monitoring" -> "databrickslabs/cicd-templates"
"mspnp/spark-monitoring" -> "Azure/AzureDatabricksBestPractices"
"mspnp/spark-monitoring" -> "hurtn/datalake-ADLS-access-patterns-with-Databricks"
"mspnp/spark-monitoring" -> "mspnp/azure-databricks-streaming-analytics"
"mspnp/spark-monitoring" -> "databricks/delta-live-tables-notebooks"
"mspnp/spark-monitoring" -> "Azure/azure-databricks-client"
"Erik-ly/SprakProject" -> "yangtong123/StudySpark"
"Erik-ly/SprakProject" -> "oeljeklaus-you/UserActionAnalyzePlatform"
"Erik-ly/SprakProject" -> "whirlys/BigData-In-Practice"
"Erik-ly/SprakProject" -> "wankunde/logcount"
"Erik-ly/SprakProject" -> "Thpffcj/BigData-Getting-Started"
"Erik-ly/SprakProject" -> "Zouxxyy/bigdata-learning"
"Erik-ly/SprakProject" -> "wanghan0501/WiFiProbeAnalysis"
"Erik-ly/SprakProject" -> "LuckyZXL2016/News_Spark"
"Erik-ly/SprakProject" -> "yangtong123/RoadOfStudySpark"
"Kyligence/ssb-kylin" -> "Kyligence/kylin-tpch"
"Kyligence/ssb-kylin" -> "electrum/ssb-dbgen"
"apache/phoenix" -> "apache/hbase"
"apache/phoenix" -> "apache/drill"
"apache/phoenix" -> "apache/kudu"
"apache/phoenix" -> "apache/kylin"
"apache/phoenix" -> "apache/oozie"
"apache/phoenix" -> "apache/tez"
"apache/phoenix" -> "apache/calcite"
"apache/phoenix" -> "apache/flume"
"apache/phoenix" -> "apache/impala"
"apache/phoenix" -> "apache/sqoop"
"apache/phoenix" -> "apache/ambari"
"apache/phoenix" -> "apache/hive"
"apache/phoenix" -> "Huawei-Hadoop/hindex" ["e"=1]
"apache/phoenix" -> "apache/hbase-connectors"
"apache/phoenix" -> "apache/carbondata"
"apache/ranger" -> "apache/atlas" ["e"=1]
"apache/ranger" -> "apache/sentry"
"apache/ranger" -> "apache/incubator-kyuubi"
"apache/ranger" -> "apache/ambari"
"apache/ranger" -> "apache/knox"
"apache/ranger" -> "apache/incubator-livy"
"apache/ranger" -> "apache/griffin"
"apache/ranger" -> "apache/kudu"
"apache/ranger" -> "yaooqinn/spark-authorizer"
"apache/ranger" -> "apache/incubator-iceberg"
"apache/ranger" -> "apache/tez"
"apache/ranger" -> "apache/orc"
"apache/ranger" -> "apache/sqoop"
"apache/ranger" -> "yaooqinn/kyuubi"
"apache/ranger" -> "apache/incubator-hudi"
"hortonworks/hive-testbench" -> "cloudera/impala-tpcds-kit"
"hortonworks/hive-testbench" -> "gregrahn/tpcds-kit"
"hortonworks/hive-testbench" -> "databricks/spark-sql-perf"
"hortonworks/hive-testbench" -> "cartershanklin/hive-testbench"
"hortonworks/hive-testbench" -> "IBM/spark-tpc-ds-performance-test"
"hortonworks/hive-testbench" -> "yahoo/streaming-benchmarks"
"hortonworks/hive-testbench" -> "oap-project/gluten"
"hortonworks/hive-testbench" -> "HotelsDotCom/waggle-dance"
"hortonworks/hive-testbench" -> "fayson/cdhproject"
"hortonworks/hive-testbench" -> "linkedin/dr-elephant"
"hortonworks/hive-testbench" -> "Intel-bigdata/HiBench"
"hortonworks/hive-testbench" -> "alibaba/RemoteShuffleService"
"hortonworks/hive-testbench" -> "linkedin/coral"
"hortonworks/hive-testbench" -> "yaooqinn/kyuubi"
"hortonworks/hive-testbench" -> "uber/RemoteShuffleService"
"mongodb/mongo-spark" -> "Stratio/Spark-MongoDB" ["e"=1]
"mongodb/mongo-spark" -> "mongodb/mongo-hadoop"
"mongodb/mongo-spark" -> "databricks/spark-avro"
"mongodb/mongo-spark" -> "RedisLabs/spark-redis"
"mongodb/mongo-spark" -> "databricks/spark-csv"
"mongodb/mongo-spark" -> "datastax/spark-cassandra-connector"
"mongodb/mongo-spark" -> "databricks/spark-sql-perf"
"mongodb/mongo-spark" -> "mongodb/mongo-scala-driver" ["e"=1]
"mongodb/mongo-spark" -> "Huawei-Spark/Spark-SQL-on-HBase"
"mongodb/mongo-spark" -> "LucaCanali/sparkMeasure"
"mongodb/mongo-spark" -> "breinero/MongoDB_Spark_Course"
"mongodb/mongo-spark" -> "apache/incubator-livy"
"mongodb/mongo-spark" -> "hortonworks-spark/shc"
"mongodb/mongo-spark" -> "scalaj/scalaj-http" ["e"=1]
"mongodb/mongo-spark" -> "crealytics/spark-excel"
"treasure-data/prestogres" -> "wyukawa/yanagishima"
"ontiyonke/Free-Deep-Learning-Books" -> "ZakiaSalod/The-Hundred-Page-Machine-Learning-Book"
"ontiyonke/Free-Deep-Learning-Books" -> "SayantanMitra87/Data-Science-Books-1"
"ontiyonke/Free-Deep-Learning-Books" -> "achinnasamy/Free-Deep-Learning-Books"
"ontiyonke/Free-Deep-Learning-Books" -> "sibirbil/IMO2020" ["e"=1]
"datacleaner/DataCleaner" -> "apache/metamodel"
"datacleaner/DataCleaner" -> "WeBankFinTech/Qualitis"
"datacleaner/DataCleaner" -> "apache/griffin"
"datacleaner/DataCleaner" -> "agile-lab-dev/DataQuality"
"datacleaner/DataCleaner" -> "FRosner/drunken-data-quality"
"datacleaner/DataCleaner" -> "datacleaner/AnalyzerBeans"
"datacleaner/DataCleaner" -> "eBay/griffin"
"datacleaner/DataCleaner" -> "linkedin/WhereHows" ["e"=1]
"datacleaner/DataCleaner" -> "Teradata/kylo" ["e"=1]
"datacleaner/DataCleaner" -> "schic/DQCS"
"Qihoo360/Lipland" -> "xupengpai/Lipland"
"cloudera/livy" -> "apache/incubator-livy"
"cloudera/livy" -> "spark-jobserver/spark-jobserver"
"cloudera/livy" -> "jupyter-incubator/sparkmagic"
"cloudera/livy" -> "apache/incubator-toree"
"cloudera/livy" -> "linkedin/dr-elephant"
"cloudera/livy" -> "hortonworks-spark/shc"
"cloudera/livy" -> "allwefantasy/streamingpro"
"cloudera/livy" -> "holdenk/spark-testing-base"
"cloudera/livy" -> "databricks/tensorframes"
"cloudera/livy" -> "OryxProject/oryx" ["e"=1]
"cloudera/livy" -> "groupon/sparklint"
"cloudera/livy" -> "databricks/spark-csv"
"cloudera/livy" -> "RedisLabs/spark-redis"
"cloudera/livy" -> "nerdammer/spark-hbase-connector"
"cloudera/livy" -> "Hydrospheredata/mist" ["e"=1]
"cloudera/Impala" -> "cloudera/kudu"
"cloudera/Impala" -> "apache/kudu"
"cloudera/Impala" -> "apache/impala"
"cloudera/Impala" -> "apache/drill"
"cloudera/Impala" -> "apache/hive"
"cloudera/Impala" -> "cloudera/hue"
"cloudera/Impala" -> "apache/sqoop"
"cloudera/Impala" -> "cloudera/impyla"
"cloudera/Impala" -> "apache/oozie"
"cloudera/Impala" -> "apache/flume"
"cloudera/Impala" -> "apache/incubator-hawq"
"cloudera/Impala" -> "apache/phoenix"
"cloudera/Impala" -> "apache/kylin"
"cloudera/Impala" -> "apache/hbase"
"cloudera/Impala" -> "prestodb/presto"
"apache/impala" -> "apache/kudu"
"apache/impala" -> "cloudera/Impala"
"apache/impala" -> "facebookincubator/velox" ["e"=1]
"apache/impala" -> "apache/orc"
"apache/impala" -> "apache/drill"
"apache/impala" -> "apache/phoenix"
"apache/impala" -> "apache/sqoop"
"apache/impala" -> "apache/incubator-doris"
"apache/impala" -> "apache/hive"
"apache/impala" -> "apache/kylin"
"apache/impala" -> "apache/hawq"
"apache/impala" -> "apache/carbondata"
"apache/impala" -> "apache/calcite"
"apache/impala" -> "apache/iceberg"
"apache/impala" -> "apache/oozie"
"apache/parquet-mr" -> "apache/parquet-format"
"apache/parquet-mr" -> "apache/orc"
"apache/parquet-mr" -> "apache/hive"
"apache/parquet-mr" -> "apache/iceberg"
"apache/parquet-mr" -> "apache/kudu"
"apache/parquet-mr" -> "apache/parquet-cpp"
"apache/parquet-mr" -> "apache/calcite"
"apache/parquet-mr" -> "linkedin/dr-elephant"
"apache/parquet-mr" -> "apache/incubator-iceberg"
"apache/parquet-mr" -> "apache/kylin"
"apache/parquet-mr" -> "apache/avro"
"apache/parquet-mr" -> "delta-io/delta"
"apache/parquet-mr" -> "apache/drill"
"apache/parquet-mr" -> "apache/arrow" ["e"=1]
"apache/parquet-mr" -> "apache/hudi"
"andypetrella/spark-notebook" -> "apache/incubator-zeppelin"
"andypetrella/spark-notebook" -> "Bridgewater/scala-notebook" ["e"=1]
"andypetrella/spark-notebook" -> "spark-jobserver/spark-jobserver"
"andypetrella/spark-notebook" -> "NFLabs/zeppelin"
"andypetrella/spark-notebook" -> "alexarchambault/jupyter-scala" ["e"=1]
"andypetrella/spark-notebook" -> "scalanlp/breeze" ["e"=1]
"andypetrella/spark-notebook" -> "killrweather/killrweather"
"andypetrella/spark-notebook" -> "ibm-et/spark-kernel"
"andypetrella/spark-notebook" -> "databricks/spark-csv"
"andypetrella/spark-notebook" -> "twitter/algebird" ["e"=1]
"andypetrella/spark-notebook" -> "fluxcapacitor/pipeline"
"andypetrella/spark-notebook" -> "datastax/spark-cassandra-connector"
"andypetrella/spark-notebook" -> "databricks/reference-apps"
"andypetrella/spark-notebook" -> "amplab/keystone"
"andypetrella/spark-notebook" -> "h2oai/sparkling-water"
"graphframes/graphframes" -> "neo4j-contrib/neo4j-spark-connector" ["e"=1]
"graphframes/graphframes" -> "opencypher/morpheus" ["e"=1]
"graphframes/graphframes" -> "combust/mleap"
"graphframes/graphframes" -> "Sotera/spark-distributed-louvain-modularity" ["e"=1]
"graphframes/graphframes" -> "databricks/spark-avro"
"graphframes/graphframes" -> "opencypher/cypher-for-apache-spark" ["e"=1]
"graphframes/graphframes" -> "jupyter-incubator/sparkmagic"
"graphframes/graphframes" -> "cloudera/livy"
"graphframes/graphframes" -> "databricks/spark-sklearn"
"graphframes/graphframes" -> "databricks/spark-deep-learning"
"graphframes/graphframes" -> "spark-jobserver/spark-jobserver"
"graphframes/graphframes" -> "sryza/spark-timeseries"
"graphframes/graphframes" -> "andypetrella/spark-notebook"
"graphframes/graphframes" -> "Sotera/distributed-graph-analytics" ["e"=1]
"graphframes/graphframes" -> "databricks/tensorframes"
"yoghurtjia/-python-BAT-" -> "oeljeklaus-you/JavaOrBigData-Interview"
"yoghurtjia/-python-BAT-" -> "SwordfallYeung/Interview_BigData"
"lensacom/sparkit-learn" -> "databricks/spark-sklearn"
"lensacom/sparkit-learn" -> "mahmoudparsian/pyspark-tutorial"
"lensacom/sparkit-learn" -> "bolt-project/bolt"
"lensacom/sparkit-learn" -> "google/skflow" ["e"=1]
"lensacom/sparkit-learn" -> "thunder-project/thunder"
"lensacom/sparkit-learn" -> "jadianes/spark-py-notebooks"
"lensacom/sparkit-learn" -> "cloudera/ibis" ["e"=1]
"lensacom/sparkit-learn" -> "sparklingpandas/sparklingpandas"
"lensacom/sparkit-learn" -> "rhiever/tpot" ["e"=1]
"lensacom/sparkit-learn" -> "ottogroup/palladium" ["e"=1]
"lensacom/sparkit-learn" -> "ogrisel/parallel_ml_tutorial" ["e"=1]
"lensacom/sparkit-learn" -> "paulgb/sklearn-pandas" ["e"=1]
"lensacom/sparkit-learn" -> "aigamedev/scikit-neuralnetwork" ["e"=1]
"lensacom/sparkit-learn" -> "databricks/spark-deep-learning"
"lensacom/sparkit-learn" -> "piskvorky/gensim" ["e"=1]
"spark-notebook/spark-notebook" -> "nborwankar/LearnDataScience" ["e"=1]
"spark-notebook/spark-notebook" -> "yahoo/TensorFlowOnSpark"
"spark-notebook/spark-notebook" -> "rushter/data-science-blogs" ["e"=1]
"spark-notebook/spark-notebook" -> "databricks/spark-deep-learning"
"spark-notebook/spark-notebook" -> "awesome-spark/awesome-spark"
"spark-notebook/spark-notebook" -> "deanwampler/spark-scala-tutorial"
"spark-notebook/spark-notebook" -> "jaceklaskowski/mastering-apache-spark-book"
"spark-notebook/spark-notebook" -> "spark-jobserver/spark-jobserver"
"spark-notebook/spark-notebook" -> "jupyter-incubator/sparkmagic"
"spark-notebook/spark-notebook" -> "databricks/Spark-The-Definitive-Guide"
"spark-notebook/spark-notebook" -> "lw-lin/CoolplaySpark"
"spark-notebook/spark-notebook" -> "sryza/spark-timeseries"
"spark-notebook/spark-notebook" -> "high-performance-spark/high-performance-spark-examples"
"spark-notebook/spark-notebook" -> "databricks/scala-style-guide" ["e"=1]
"spark-notebook/spark-notebook" -> "jaceklaskowski/spark-structured-streaming-book"
"apache/incubator-yunikorn-core" -> "apache/incubator-yunikorn-k8shim"
"apache/incubator-yunikorn-core" -> "apache/hadoop-ozone" ["e"=1]
"apache/incubator-yunikorn-core" -> "datapunchorg/punch"
"apache/ozone" -> "apache/ratis"
"apache/ozone" -> "apache/incubator-uniffle"
"apache/ozone" -> "apache/incubator-kyuubi"
"apache/ozone" -> "apache/incubator-celeborn"
"apache/ozone" -> "NetEase/arctic"
"apache/ozone" -> "apache/ranger"
"apache/ozone" -> "apache/incubator-inlong"
"apache/ozone" -> "apache/incubator-ratis" ["e"=1]
"apache/ozone" -> "apache/kudu"
"apache/ozone" -> "alibaba/RemoteShuffleService"
"apache/ozone" -> "apache/iceberg"
"apache/ozone" -> "opencurve/curve" ["e"=1]
"wgzhao/Addax" -> "qlangtech/tis"
"wgzhao/Addax" -> "streamxhub/streamx"
"wgzhao/Addax" -> "DataLinkDC/dlink"
"wgzhao/Addax" -> "wxgzgl/LarkMidTable"
"wgzhao/Addax" -> "WeiYe-Jing/datax-web"
"wgzhao/Addax" -> "WeBankFinTech/Exchangis"
"wgzhao/Addax" -> "bytedance/bitsail"
"wgzhao/Addax" -> "zhp8341/flink-streaming-platform-web"
"wgzhao/Addax" -> "authorwlh/alldata"
"wgzhao/Addax" -> "apache/incubator-linkis"
"wgzhao/Addax" -> "running-elephant/datart"
"wgzhao/Addax" -> "DTStack/chunjun"
"wgzhao/Addax" -> "DTStack/Taier" ["e"=1]
"wgzhao/Addax" -> "apache/incubator-seatunnel"
"wgzhao/Addax" -> "WeBankFinTech/DataSphereStudio"
"databricks/Spark-The-Definitive-Guide" -> "databricks/learning-spark"
"databricks/Spark-The-Definitive-Guide" -> "databricks/LearningSparkV2"
"databricks/Spark-The-Definitive-Guide" -> "databricks/spark-deep-learning"
"databricks/Spark-The-Definitive-Guide" -> "awesome-spark/awesome-spark"
"databricks/Spark-The-Definitive-Guide" -> "databricks/scala-style-guide" ["e"=1]
"databricks/Spark-The-Definitive-Guide" -> "delta-io/delta"
"databricks/Spark-The-Definitive-Guide" -> "JerryLead/SparkInternals"
"databricks/Spark-The-Definitive-Guide" -> "spark-notebook/spark-notebook"
"databricks/Spark-The-Definitive-Guide" -> "sryza/aas"
"databricks/Spark-The-Definitive-Guide" -> "databricks/koalas" ["e"=1]
"databricks/Spark-The-Definitive-Guide" -> "MrPowers/spark-daria"
"databricks/Spark-The-Definitive-Guide" -> "vivek-bombatkar/Databricks-Apache-Spark-2X-Certified-Developer"
"databricks/Spark-The-Definitive-Guide" -> "achinnasamy/bigdata"
"databricks/Spark-The-Definitive-Guide" -> "awslabs/deequ" ["e"=1]
"databricks/Spark-The-Definitive-Guide" -> "holdenk/spark-testing-base"
"linkedin/indextank-engine" -> "linkedin/indextank-service"
"linkedin/indextank-engine" -> "linkedin/cleo"
"linkedin/indextank-engine" -> "linkedin/sensei"
"linkedin/sensei" -> "linkedin/zoie"
"linkedin/sensei" -> "linkedin/cleo"
"linkedin/sensei" -> "senseidb/zoie"
"linkedin/sensei" -> "linkedin/linkedin-zookeeper"
"linkedin/sensei" -> "linkedin/helix"
"linkedin/sensei" -> "linkedin/krati"
"linkedin/sensei" -> "linkedin/datafu" ["e"=1]
"linkedin/sensei" -> "senseidb/sensei"
"YouChouNoBB/data-mining-introduction" -> "lyltj2010/DataMining"
"liancheng/spear" -> "liancheng/brainsuck"
"zhaxiaodong9860/kettle-scheduler" -> "JoeyBling/webkettle"
"zhaxiaodong9860/kettle-scheduler" -> "majinju/kettle-manager"
"zhaxiaodong9860/kettle-scheduler" -> "xuanbo/kettle-web"
"zhaxiaodong9860/kettle-scheduler" -> "HiromuHota/pentaho-kettle"
"zhaxiaodong9860/kettle-scheduler" -> "ziliang001/etl-kettle-web"
"zhaxiaodong9860/kettle-scheduler" -> "classtag/OpenKettleWebUI"
"zhaxiaodong9860/kettle-scheduler" -> "konglinghai123/kettle"
"zhaxiaodong9860/kettle-scheduler" -> "zhaodongxx/awesome-kettle"
"zhaxiaodong9860/kettle-scheduler" -> "konglinghai123/renren_kettle"
"zhaxiaodong9860/kettle-scheduler" -> "pentaho/pentaho-kettle" ["e"=1]
"zhaxiaodong9860/kettle-scheduler" -> "xiaoymin/KettleInAction100"
"zhaxiaodong9860/kettle-scheduler" -> "ucarGroup/DataLink"
"zhaxiaodong9860/kettle-scheduler" -> "haochenchn/kettle-springboot"
"zhaxiaodong9860/kettle-scheduler" -> "WeiYe-Jing/datax-web"
"zhaxiaodong9860/kettle-scheduler" -> "zllkyo/kettle-manager"
"lightning-viz/lightning-python" -> "lightning-viz/lightning"
"groveco/content-engine" -> "pranab/sifarish"
"groveco/content-engine" -> "muricoca/crab" ["e"=1]
"groveco/content-engine" -> "jadianes/spark-movie-lens"
"groveco/content-engine" -> "ttvand/Santander-Product-Recommendation" ["e"=1]
"h2oai/h2o-tutorials" -> "h2oai/h2o-3" ["e"=1]
"h2oai/h2o-tutorials" -> "h2oai/sparkling-water"
"h2oai/h2o-tutorials" -> "h2oai/h2o-meetups"
"h2oai/h2o-tutorials" -> "h2oai/awesome-h2o"
"h2oai/h2o-tutorials" -> "ledell/useR-machine-learning-tutorial" ["e"=1]
"h2oai/h2o-tutorials" -> "mlr-org/mlr" ["e"=1]
"h2oai/h2o-tutorials" -> "h2oai/mli-resources" ["e"=1]
"h2oai/h2o-tutorials" -> "DarrenCook/h2o"
"h2oai/h2o-tutorials" -> "h2oai/deepwater"
"h2oai/h2o-tutorials" -> "h2oai/tutorials"
"h2oai/h2o-tutorials" -> "scikit-learn-contrib/categorical-encoding" ["e"=1]
"h2oai/h2o-tutorials" -> "Featuretools/featuretools" ["e"=1]
"h2oai/h2o-tutorials" -> "topepo/caret" ["e"=1]
"h2oai/h2o-tutorials" -> "rstudio/sparklyr" ["e"=1]
"h2oai/h2o-tutorials" -> "thomasp85/lime" ["e"=1]
"jadianes/winerama-recommender-tutorial" -> "jadianes/data-science-your-way"
"jadianes/winerama-recommender-tutorial" -> "jadianes/spark-r-notebooks"
"jadianes/winerama-recommender-tutorial" -> "jadianes/spark-movie-lens"
"jpmml/r2pmml" -> "jpmml/jpmml-r"
"jpmml/sklearn2pmml" -> "jpmml/jpmml-sklearn"
"jpmml/sklearn2pmml" -> "jpmml/jpmml-evaluator"
"jpmml/sklearn2pmml" -> "openscoring/openscoring"
"jpmml/sklearn2pmml" -> "jpmml/jpmml-xgboost"
"jpmml/sklearn2pmml" -> "jpmml/jpmml-sparkml"
"jpmml/sklearn2pmml" -> "SoftwareAG/nyoka"
"jpmml/sklearn2pmml" -> "ShichenXie/scorecardpy" ["e"=1]
"jpmml/sklearn2pmml" -> "boredbird/woe" ["e"=1]
"jpmml/sklearn2pmml" -> "amphibian-dev/toad" ["e"=1]
"jpmml/sklearn2pmml" -> "jpmml/pyspark2pmml"
"jpmml/sklearn2pmml" -> "jpmml/jpmml-model"
"jpmml/sklearn2pmml" -> "autodeployai/pypmml"
"jpmml/sklearn2pmml" -> "jpmml/jpmml-lightgbm"
"jpmml/sklearn2pmml" -> "onnx/sklearn-onnx" ["e"=1]
"jpmml/sklearn2pmml" -> "nyoka-pmml/nyoka"
"xubo245/SparkLearning" -> "endymecy/spark-ml-source-analysis"
"xubo245/SparkLearning" -> "lw-lin/CoolplaySpark"
"xubo245/SparkLearning" -> "jacksu/utils4s"
"xubo245/SparkLearning" -> "spirom/LearningSpark"
"xubo245/SparkLearning" -> "xubo245/MLlibLearning"
"xubo245/SparkLearning" -> "shijinkui/spark_study"
"xubo245/SparkLearning" -> "ljcan/SparkStreaming"
"xubo245/SparkLearning" -> "cjuexuan/mynote"
"xubo245/SparkLearning" -> "endymecy/spark-graphx-source-analysis"
"xubo245/SparkLearning" -> "apachecn/spark-doc-zh"
"xubo245/SparkLearning" -> "qindongliang/streaming-offset-to-zk"
"xubo245/SparkLearning" -> "LeechanX/Netflix-Recommender-with-Spark" ["e"=1]
"xubo245/SparkLearning" -> "LinMingQiang/spark-util"
"xubo245/SparkLearning" -> "JerryLead/SparkLearning"
"xubo245/SparkLearning" -> "smallnest/douban-recommender" ["e"=1]
"prestodb/presto-python-client" -> "dropbox/PyHive"
"prestodb/presto-python-client" -> "prestosql/presto-python-client"
"high-performance-spark/high-performance-spark-examples" -> "holdenk/spark-validator"
"high-performance-spark/high-performance-spark-examples" -> "holdenk/spark-testing-base"
"high-performance-spark/high-performance-spark-examples" -> "holdenk/spark-structured-streaming-ml"
"high-performance-spark/high-performance-spark-examples" -> "spirom/LearningSpark"
"high-performance-spark/high-performance-spark-examples" -> "LucaCanali/sparkMeasure"
"high-performance-spark/high-performance-spark-examples" -> "jaceklaskowski/mastering-apache-spark-book"
"high-performance-spark/high-performance-spark-examples" -> "databricks/reference-apps"
"high-performance-spark/high-performance-spark-examples" -> "polomarcus/Spark-Structured-Streaming-Examples"
"high-performance-spark/high-performance-spark-examples" -> "qubole/sparklens"
"high-performance-spark/high-performance-spark-examples" -> "holdenk/learning-spark-examples"
"high-performance-spark/high-performance-spark-examples" -> "databricks/spark-corenlp"
"high-performance-spark/high-performance-spark-examples" -> "MrPowers/spark-daria"
"high-performance-spark/high-performance-spark-examples" -> "spark-notebook/spark-notebook"
"high-performance-spark/high-performance-spark-examples" -> "allwefantasy/streamingpro"
"high-performance-spark/high-performance-spark-examples" -> "databricks/spark-perf"
"apache/mahout" -> "apache/pig"
"apache/mahout" -> "cloudera/oryx" ["e"=1]
"apache/mahout" -> "apache/hive"
"apache/mahout" -> "apache/hbase"
"apache/mahout" -> "apache/hadoop-common"
"apache/mahout" -> "apache/storm"
"apache/mahout" -> "apache/lucene-solr"
"apache/mahout" -> "apache/flume"
"apache/mahout" -> "tdunning/MiA" ["e"=1]
"apache/mahout" -> "lenskit/lenskit" ["e"=1]
"apache/mahout" -> "OryxProject/oryx" ["e"=1]
"apache/mahout" -> "apache/sqoop"
"apache/mahout" -> "apache/cassandra"
"apache/mahout" -> "apache/oozie"
"apache/mahout" -> "apache/hadoop"
"groupon/sparklint" -> "qubole/sparklens"
"groupon/sparklint" -> "LucaCanali/sparkMeasure"
"groupon/sparklint" -> "groupon/spark-metrics"
"groupon/sparklint" -> "ibm-research-ireland/sparkoscope"
"groupon/sparklint" -> "linkedin/dr-elephant"
"groupon/sparklint" -> "hammerlab/grafana-spark-dashboards"
"groupon/sparklint" -> "polomarcus/Spark-Structured-Streaming-Examples"
"groupon/sparklint" -> "awesome-spark/spark-gotchas"
"groupon/sparklint" -> "datamechanics/delight"
"groupon/sparklint" -> "Intel-bigdata/spark-adaptive"
"groupon/sparklint" -> "Stratio/sparta" ["e"=1]
"groupon/sparklint" -> "uber/RemoteShuffleService"
"groupon/sparklint" -> "criteo/babar"
"groupon/sparklint" -> "databricks/spark-sql-perf"
"groupon/sparklint" -> "Mellanox/SparkRDMA" ["e"=1]
"intel-analytics/analytics-zoo" -> "intel-analytics/BigDL"
"intel-analytics/analytics-zoo" -> "yahoo/TensorFlowOnSpark"
"intel-analytics/analytics-zoo" -> "alibaba/flink-ai-extended"
"intel-analytics/analytics-zoo" -> "databricks/spark-deep-learning"
"intel-analytics/analytics-zoo" -> "alibaba/Alink"
"intel-analytics/analytics-zoo" -> "Azure/mmlspark"
"intel-analytics/analytics-zoo" -> "DTStack/flinkStreamSQL"
"intel-analytics/analytics-zoo" -> "DTStack/flinkx"
"intel-analytics/analytics-zoo" -> "JohnSnowLabs/spark-nlp" ["e"=1]
"intel-analytics/analytics-zoo" -> "salesforce/TransmogrifAI" ["e"=1]
"intel-analytics/analytics-zoo" -> "horovod/horovod" ["e"=1]
"intel-analytics/analytics-zoo" -> "Angel-ML/angel" ["e"=1]
"intel-analytics/analytics-zoo" -> "databricks/koalas" ["e"=1]
"intel-analytics/analytics-zoo" -> "sql-machine-learning/sqlflow"
"intel-analytics/analytics-zoo" -> "flink-china/flink-training-course"
"Azure/azure-event-hubs-for-kafka" -> "Azure/azure-event-hubs-spark"
"Azure/azure-event-hubs-for-kafka" -> "Azure-Samples/streaming-at-scale"
"Intel-bigdata/HiBench" -> "zhihuili/Dew"
"Intel-bigdata/HiBench" -> "databricks/spark-sql-perf"
"Intel-bigdata/HiBench" -> "CODAIT/spark-bench"
"Intel-bigdata/HiBench" -> "hortonworks/hive-testbench"
"Intel-bigdata/HiBench" -> "nexmark/nexmark"
"Intel-bigdata/HiBench" -> "yahoo/streaming-benchmarks"
"Intel-bigdata/HiBench" -> "IBM/spark-tpc-ds-performance-test"
"Intel-bigdata/HiBench" -> "Tencent/Firestorm"
"Intel-bigdata/HiBench" -> "itisaid/Doris"
"Intel-bigdata/HiBench" -> "qubole/sparklens"
"Intel-bigdata/HiBench" -> "alibaba/RemoteShuffleService"
"Intel-bigdata/HiBench" -> "apache/incubator-kyuubi"
"Intel-bigdata/HiBench" -> "Intel-bigdata/SSM"
"Intel-bigdata/HiBench" -> "Mellanox/SparkRDMA" ["e"=1]
"Intel-bigdata/HiBench" -> "apache/flink-table-store"
"gregrahn/tpcds-kit" -> "gregrahn/tpch-kit"
"gregrahn/tpcds-kit" -> "gregrahn/join-order-benchmark" ["e"=1]
"gregrahn/tpcds-kit" -> "IBM/spark-tpc-ds-performance-test"
"gregrahn/tpcds-kit" -> "databricks/spark-sql-perf"
"gregrahn/tpcds-kit" -> "hortonworks/hive-testbench"
"gregrahn/tpcds-kit" -> "maropu/spark-tpcds-datagen"
"gregrahn/tpcds-kit" -> "cloudera/impala-tpcds-kit"
"gregrahn/tpcds-kit" -> "databricks/tpcds-kit"
"gregrahn/tpcds-kit" -> "balsa-project/balsa" ["e"=1]
"gregrahn/tpcds-kit" -> "learnedsystems/BaoForPostgreSQL" ["e"=1]
"gregrahn/tpcds-kit" -> "hyrise/index_selection_evaluation" ["e"=1]
"gregrahn/tpcds-kit" -> "tvondra/pg_tpch"
"gregrahn/tpcds-kit" -> "antonismand/ReJOIN" ["e"=1]
"gregrahn/tpcds-kit" -> "databricks/benchmarks"
"gregrahn/tpcds-kit" -> "postgrespro/sr_plan" ["e"=1]
"yangtong123/RoadOfStudySpark" -> "yangtong123/StudySpark"
"yangtong123/RoadOfStudySpark" -> "wanghan0501/UserSessionBehaviorOfflineAnalysis"
"cocofree/azkaban_assistant" -> "researchgate/azkaban-ldap-usermanager"
"cocofree/azkaban_assistant" -> "mtth/azkaban"
"binglind/alchemy" -> "hairless/plink"
"binglind/alchemy" -> "harbby/sylph"
"binglind/alchemy" -> "wuchong/flink-sql-submit"
"binglind/alchemy" -> "ververica/flink-sql-gateway"
"binglind/alchemy" -> "lessonone1/fiflow"
"binglind/alchemy" -> "uber/AthenaX"
"binglind/alchemy" -> "DTStack/flinkStreamSQL"
"binglind/alchemy" -> "springMoon/sqlSubmit"
"binglind/alchemy" -> "ambition119/FlinkSQL" ["e"=1]
"binglind/alchemy" -> "gingerredjade/flink-userportrait-main"
"binglind/alchemy" -> "quxiucheng/apache-calcite-tutorial"
"binglind/alchemy" -> "ljygz/Flink-CEPplus"
"binglind/alchemy" -> "MeetYouDevs/big-whale"
"binglind/alchemy" -> "edp963/wormhole"
"binglind/alchemy" -> "Qihoo360/Quicksql"
"taireum/go-taireum" -> "itisaid/sokeeper"
"taireum/go-taireum" -> "itisaid/go-ethereum"
"vbay/big-data" -> "SwordfallYeung/Interview_BigData"
"vbay/big-data" -> "CheckChe0803/flink-simple-tutorial"
"vbay/big-data" -> "realguoshuai/hadoop_study"
"vbay/big-data" -> "liumingmusic/HadoopLearning"
"vbay/big-data" -> "WadeStack/BigDataIE"
"WeBankFinTech/Qualitis" -> "WeBankFinTech/Visualis"
"WeBankFinTech/Qualitis" -> "WeBankFinTech/Scriptis"
"WeBankFinTech/Qualitis" -> "WeBankFinTech/Exchangis"
"WeBankFinTech/Qualitis" -> "WeBankFinTech/Schedulis"
"WeBankFinTech/Qualitis" -> "WeBankFinTech/DataSphereStudio"
"WeBankFinTech/Qualitis" -> "apache/griffin"
"WeBankFinTech/Qualitis" -> "WeBankFinTech/Linkis"
"WeBankFinTech/Qualitis" -> "WeBankFinTech/WeDataSphere"
"WeBankFinTech/Qualitis" -> "WeBankFinTech/Prophecis"
"WeBankFinTech/Qualitis" -> "edp963/wormhole"
"WeBankFinTech/Qualitis" -> "apache/atlas" ["e"=1]
"WeBankFinTech/Qualitis" -> "apache/incubator-linkis"
"WeBankFinTech/Qualitis" -> "streamxhub/streamx"
"WeBankFinTech/Qualitis" -> "edp963/moonbox"
"WeBankFinTech/Qualitis" -> "Qihoo360/Quicksql"
"apache/incubator-linkis" -> "WeBankFinTech/DataSphereStudio"
"apache/incubator-linkis" -> "DataLinkDC/dlink"
"apache/incubator-linkis" -> "apache/incubator-kyuubi"
"apache/incubator-linkis" -> "WeBankFinTech/Qualitis"
"apache/incubator-linkis" -> "bytedance/bitsail"
"apache/incubator-linkis" -> "WeBankFinTech/Exchangis"
"apache/incubator-linkis" -> "WeBankFinTech/Schedulis"
"apache/incubator-linkis" -> "apache/incubator-seatunnel"
"apache/incubator-linkis" -> "streamxhub/streamx"
"apache/incubator-linkis" -> "NetEase/arctic"
"apache/incubator-linkis" -> "WeBankFinTech/Streamis"
"apache/incubator-linkis" -> "DTStack/Taier" ["e"=1]
"apache/incubator-linkis" -> "apache/flink-table-store"
"apache/incubator-linkis" -> "WeBankFinTech/Visualis"
"apache/incubator-linkis" -> "DTStack/chunjun"
"sryza/aas" -> "databricks/learning-spark"
"sryza/aas" -> "mahmoudparsian/data-algorithms-book"
"sryza/aas" -> "OryxProject/oryx" ["e"=1]
"sryza/aas" -> "yahoo/TensorFlowOnSpark"
"sryza/aas" -> "databricks/Spark-The-Definitive-Guide"
"sryza/aas" -> "endymecy/spark-ml-source-analysis"
"sryza/aas" -> "JerryLead/SparkInternals"
"sryza/aas" -> "databricks/reference-apps"
"sryza/aas" -> "spark-jobserver/spark-jobserver"
"sryza/aas" -> "scalanlp/breeze" ["e"=1]
"sryza/aas" -> "jacksu/utils4s"
"sryza/aas" -> "andypetrella/spark-notebook"
"sryza/aas" -> "fluxcapacitor/pipeline"
"sryza/aas" -> "sryza/spark-timeseries"
"sryza/aas" -> "high-performance-spark/high-performance-spark-examples"
"WeiYe-Jing/datax-web-ui" -> "WeiYe-Jing/datax-web"
"WeiYe-Jing/datax-web-ui" -> "hanson007/FirstBlood"
"WeiYe-Jing/datax-web-ui" -> "WeBankFinTech/Exchangis"
"WeiYe-Jing/datax-web-ui" -> "WeBankFinTech/Qualitis"
"WeiYe-Jing/datax-web-ui" -> "wxgzgl/LarkMidTable"
"apache/bahir" -> "apache/bahir-website"
"apache/bahir" -> "apache/incubator-systemml-website"
"apache/bahir" -> "apache/incubator-systemml"
"apache/bahir" -> "apache/bahir-flink"
"apache/incubator-hudi" -> "apache/incubator-iceberg"
"apache/incubator-hudi" -> "harbby/sylph"
"apache/incubator-hudi" -> "delta-io/delta"
"apache/incubator-hudi" -> "apache/incubator-pinot"
"apache/incubator-hudi" -> "apache/kudu"
"apache/incubator-hudi" -> "linkedin/dr-elephant"
"apache/incubator-hudi" -> "apache/incubator-livy"
"apache/incubator-hudi" -> "uber/AthenaX"
"apache/incubator-hudi" -> "uber/marmaray"
"apache/incubator-hudi" -> "pravega/pravega"
"apache/incubator-hudi" -> "apache/griffin"
"apache/incubator-hudi" -> "apache/carbondata"
"apache/incubator-hudi" -> "yaooqinn/kyuubi"
"apache/incubator-hudi" -> "InterestingLab/waterdrop"
"apache/incubator-hudi" -> "apache/incubator-gobblin"
"apache/kudu" -> "apache/impala"
"apache/kudu" -> "cloudera/kudu"
"apache/kudu" -> "cloudera/Impala"
"apache/kudu" -> "apache/phoenix"
"apache/kudu" -> "apache/kylin"
"apache/kudu" -> "apache/drill"
"apache/kudu" -> "apache/incubator-doris"
"apache/kudu" -> "apache/calcite"
"apache/kudu" -> "apache/hive"
"apache/kudu" -> "apache/parquet-format"
"apache/kudu" -> "apache/incubator-hudi"
"apache/kudu" -> "facebookincubator/velox" ["e"=1]
"apache/kudu" -> "apache/hbase"
"apache/kudu" -> "apache/flume"
"apache/kudu" -> "apache/orc"
"apachecn/spark-doc-zh" -> "lw-lin/CoolplaySpark"
"apachecn/spark-doc-zh" -> "realguoshuai/hadoop_study"
"apachecn/spark-doc-zh" -> "apachecn/flink-doc-zh"
"apachecn/spark-doc-zh" -> "InterestingLab/waterdrop"
"apachecn/spark-doc-zh" -> "jacksu/utils4s"
"apachecn/spark-doc-zh" -> "allwefantasy/streamingpro"
"apachecn/spark-doc-zh" -> "endymecy/spark-ml-source-analysis"
"apachecn/spark-doc-zh" -> "xubo245/SparkLearning"
"apachecn/spark-doc-zh" -> "apachecn/scikit-learn-doc-zh" ["e"=1]
"apachecn/spark-doc-zh" -> "apachecn/storm-doc-zh" ["e"=1]
"apachecn/spark-doc-zh" -> "fayson/cdhproject"
"apachecn/spark-doc-zh" -> "apachecn/hbase-doc-zh"
"apachecn/spark-doc-zh" -> "CheckChe0803/BigData-Interview"
"apachecn/spark-doc-zh" -> "apachecn/kafka-doc-zh"
"apachecn/spark-doc-zh" -> "flink-china/flink-training-course"
"harbby/sylph" -> "hairless/plink"
"harbby/sylph" -> "uber/AthenaX"
"harbby/sylph" -> "binglind/alchemy"
"harbby/sylph" -> "teeyog/IQL"
"harbby/sylph" -> "DTStack/flinkStreamSQL"
"harbby/sylph" -> "ambition119/FlinkSQL" ["e"=1]
"harbby/sylph" -> "haoch/flink-siddhi" ["e"=1]
"harbby/sylph" -> "wuchong/flink-sql-submit"
"harbby/sylph" -> "InterestingLab/waterdrop"
"harbby/sylph" -> "ververica/flink-sql-gateway"
"harbby/sylph" -> "apache/incubator-hudi"
"harbby/sylph" -> "edp963/wormhole"
"harbby/sylph" -> "yaooqinn/kyuubi"
"harbby/sylph" -> "edp963/moonbox"
"harbby/sylph" -> "Qihoo360/Quicksql"
"jaceklaskowski/spark-structured-streaming-book" -> "jaceklaskowski/mastering-spark-sql-book"
"jaceklaskowski/spark-structured-streaming-book" -> "polomarcus/Spark-Structured-Streaming-Examples"
"jaceklaskowski/spark-structured-streaming-book" -> "jaceklaskowski/kafka-notebook"
"jaceklaskowski/spark-structured-streaming-book" -> "phatak-dev/spark2.0-examples"
"jaceklaskowski/spark-structured-streaming-book" -> "jaceklaskowski/mastering-apache-spark-book"
"jaceklaskowski/spark-structured-streaming-book" -> "japila-books/delta-lake-internals"
"jaceklaskowski/spark-structured-streaming-book" -> "hortonworks-spark/shc"
"jaceklaskowski/spark-structured-streaming-book" -> "Intel-bigdata/spark-adaptive"
"jaceklaskowski/spark-structured-streaming-book" -> "allwefantasy/spark-binlog"
"jaceklaskowski/spark-structured-streaming-book" -> "jaceklaskowski/spark-workshop"
"jaceklaskowski/spark-structured-streaming-book" -> "jerryshao/spark-hive-streaming-sink"
"jaceklaskowski/spark-structured-streaming-book" -> "jaceklaskowski/spark-streaming-notebook"
"jaceklaskowski/spark-structured-streaming-book" -> "BenFradet/spark-kafka-writer"
"jaceklaskowski/spark-structured-streaming-book" -> "japila-books/apache-spark-internals"
"jaceklaskowski/spark-structured-streaming-book" -> "jaceklaskowski/mastering-kafka-streams-book"
"luxiaoxun/eagle" -> "zhangjun0x01/bigdata-examples"
"luxiaoxun/eagle" -> "MeetYouDevs/big-whale"
"luxiaoxun/eagle" -> "zhaoyachao/zdh_web"
"luxiaoxun/eagle" -> "hairless/plink"
"luxiaoxun/eagle" -> "woloqun/flink-cep"
"luxiaoxun/eagle" -> "afedulov/fraud-detection-demo"
"streamsets/datacollector" -> "streamsets/tutorials"
"streamsets/datacollector" -> "edp963/wormhole"
"streamsets/datacollector" -> "BriData/DBus"
"streamsets/datacollector" -> "Teradata/kylo" ["e"=1]
"streamsets/datacollector" -> "streamsets/datacollector-edge"
"streamsets/datacollector" -> "apache/nifi"
"streamsets/datacollector" -> "edp963/moonbox"
"streamsets/datacollector" -> "InterestingLab/waterdrop"
"streamsets/datacollector" -> "apache/incubator-gobblin"
"streamsets/datacollector" -> "linkedin/WhereHows" ["e"=1]
"streamsets/datacollector" -> "DTStack/flinkx"
"streamsets/datacollector" -> "cloudera/kudu"
"streamsets/datacollector" -> "zendesk/maxwell" ["e"=1]
"streamsets/datacollector" -> "streamsets/datacollector-api"
"streamsets/datacollector" -> "linkedin/gobblin"
"uber/AthenaX" -> "harbby/sylph"
"uber/AthenaX" -> "DTStack/flinkStreamSQL"
"uber/AthenaX" -> "Qihoo360/Quicksql"
"uber/AthenaX" -> "apache/bahir-flink"
"uber/AthenaX" -> "edp963/wormhole"
"uber/AthenaX" -> "ververica/flink-sql-gateway"
"uber/AthenaX" -> "allwefantasy/streamingpro"
"uber/AthenaX" -> "ververica/sql-training"
"uber/AthenaX" -> "binglind/alchemy"
"uber/AthenaX" -> "InterestingLab/waterdrop"
"uber/AthenaX" -> "wuchong/awesome-flink"
"uber/AthenaX" -> "DTStack/flinkx"
"uber/AthenaX" -> "flink-china/flink-forward-china-2018"
"uber/AthenaX" -> "ambition119/FlinkSQL" ["e"=1]
"uber/AthenaX" -> "lw-lin/streaming-readings"
"zhaoyachao/zdh_server" -> "zhaoyachao/zdh_web"
"zhaoyachao/zdh_web" -> "zhaoyachao/zdh_server"
"zhaoyachao/zdh_web" -> "collabH/repository"
"zhaoyachao/zdh_web" -> "wxgzgl/LarkMidTable"
"zhaoyachao/zdh_web" -> "qlangtech/tis"
"zhaoyachao/zdh_web" -> "authorwlh/wlhbdp"
"zhaoyachao/zdh_web" -> "MeetYouDevs/big-whale"
"zhaoyachao/zdh_web" -> "zhangjun0x01/bigdata-examples"
"zhaoyachao/zdh_web" -> "Hyhyhyhyhyhyh/Django-Data-quality-system"
"zhaoyachao/zdh_web" -> "ziliang001/etl-kettle-web"
"zhaoyachao/zdh_web" -> "moutainhigh/datax-cloud-base"
"zhaoyachao/zdh_web" -> "luxiaoxun/eagle"
"zhaoyachao/zdh_web" -> "todd5167/flink-spark-submiter"
"zhaoyachao/zdh_web" -> "leesf/hudi-resources"
"zhaoyachao/zdh_web" -> "authorwlh/alldata"
"zhaoyachao/zdh_web" -> "wlhbdp/bdp-dataplatform"
"cloudera/kudu" -> "cloudera/Impala"
"cloudera/kudu" -> "apache/kudu"
"cloudera/kudu" -> "cloudera/kudu-examples"
"cloudera/kudu" -> "linkedin/gobblin"
"cloudera/kudu" -> "apache/phoenix"
"cloudera/kudu" -> "apache/incubator-kudu"
"cloudera/kudu" -> "apache/impala"
"cloudera/kudu" -> "apache/drill"
"cloudera/kudu" -> "baidu/palo" ["e"=1]
"cloudera/kudu" -> "linkedin/pinot"
"cloudera/kudu" -> "tuplejump/FiloDB"
"cloudera/kudu" -> "amplab/tachyon" ["e"=1]
"cloudera/kudu" -> "twitter/heron"
"cloudera/kudu" -> "cloudera/ibis" ["e"=1]
"cloudera/kudu" -> "Parquet/parquet-format" ["e"=1]
"shunfei/sfmind" -> "shunfei/indexr"
"drabastomek/learningPySpark" -> "PacktPublishing/Learning-PySpark"
"drabastomek/learningPySpark" -> "mahmoudparsian/pyspark-tutorial"
"drabastomek/learningPySpark" -> "UrbanInstitute/pyspark-tutorials"
"drabastomek/learningPySpark" -> "jadianes/spark-py-notebooks"
"drabastomek/learningPySpark" -> "XD-DENG/Spark-practice"
"drabastomek/learningPySpark" -> "tirthajyoti/Spark-with-Python"
"drabastomek/learningPySpark" -> "drabastomek/PySparkCookbook"
"drabastomek/learningPySpark" -> "lensacom/sparkit-learn"
"drabastomek/learningPySpark" -> "dennyglee/databricks"
"drabastomek/learningPySpark" -> "MingChen0919/learning-apache-spark"
"drabastomek/learningPySpark" -> "Apress/machine-learning-with-pyspark"
"drabastomek/learningPySpark" -> "awantik/pyspark-tutorial"
"drabastomek/learningPySpark" -> "databricks/spark-deep-learning"
"drabastomek/learningPySpark" -> "jkthompson/pyspark-pictures"
"drabastomek/learningPySpark" -> "sryza/aas"
"baifendian/harpc" -> "slimina/thrift-zookeeper-rpc"
"baifendian/harpc" -> "baifendian/SparkDemo"
"HamaWhiteGG/flink-sql-lineage" -> "HamaWhiteGG/flink-sql-security"
"HamaWhiteGG/flink-sql-lineage" -> "apache/flink-table-store"
"HamaWhiteGG/flink-sql-lineage" -> "apache/incubator-uniffle"
"HamaWhiteGG/flink-sql-lineage" -> "NetEase/arctic"
"HamaWhiteGG/flink-sql-lineage" -> "flink-extended/flink-remote-shuffle"
"apple/batch-processing-gateway" -> "apache/yunikorn-release"
"apple/batch-processing-gateway" -> "apache/yunikorn-k8shim"
"apple/batch-processing-gateway" -> "uber/RemoteShuffleService"
"bytedance/bitsail" -> "apache/incubator-seatunnel"
"bytedance/bitsail" -> "DataLinkDC/dlink"
"bytedance/bitsail" -> "NetEase/arctic"
"bytedance/bitsail" -> "apache/flink-table-store"
"bytedance/bitsail" -> "ververica/flink-cdc-connectors"
"bytedance/bitsail" -> "apache/incubator-kyuubi"
"bytedance/bitsail" -> "streamxhub/streamx"
"bytedance/bitsail" -> "qlangtech/tis"
"bytedance/bitsail" -> "apache/inlong"
"bytedance/bitsail" -> "DTStack/chunjun"
"bytedance/bitsail" -> "apache/incubator-linkis"
"bytedance/bitsail" -> "apache/incubator-streampark"
"bytedance/bitsail" -> "HamaWhiteGG/flink-sql-lineage"
"bytedance/bitsail" -> "apache/hudi"
"bytedance/bitsail" -> "Qihoo360/Quicksql"
"luweizheng/flink-tutorials" -> "knaufk/flink-faker"
"perkinls/flink-local-train" -> "gingerredjade/flink-userportrait-main"
"perkinls/flink-local-train" -> "hairless/plink"
"perkinls/flink-local-train" -> "pierre94/flink-notes"
"perkinls/flink-local-train" -> "realguoshuai/hadoop_study"
"perkinls/flink-local-train" -> "CheckChe0803/flink-recommandSystem-demo"
"perkinls/flink-local-train" -> "confucianzuoyuan/flink-tutorial"
"perkinls/flink-local-train" -> "DTStack/flinkStreamSQL"
"perkinls/flink-local-train" -> "wuchong/flink-sql-submit"
"perkinls/flink-local-train" -> "wuchong/flink-sql-demo"
"perkinls/flink-local-train" -> "zhp8341/flink-streaming-platform-web"
"perkinls/flink-local-train" -> "binglind/alchemy"
"perkinls/flink-local-train" -> "threeknowbigdata/flink_second_understand"
"perkinls/flink-local-train" -> "apachecn/flink-doc-zh"
"perkinls/flink-local-train" -> "InterestingLab/waterdrop"
"perkinls/flink-local-train" -> "MeetYouDevs/big-whale"
"yangyichao-mango/flink-study" -> "threeknowbigdata/flink_second_understand"
"yangyichao-mango/flink-study" -> "leesf/hudi-resources"
"yangyichao-mango/flink-study" -> "DataLinkDC/dlink"
"yangyichao-mango/flink-study" -> "apache/flink-table-store"
"yangyichao-mango/flink-study" -> "czy006/FlinkClub"
"yangyichao-mango/flink-study" -> "ververica/flink-sql-cookbook"
"yangyichao-mango/flink-study" -> "jeff-zou/flink-connector-redis" ["e"=1]
"yangyichao-mango/flink-study" -> "streamxhub/streamx"
"yangyichao-mango/flink-study" -> "zhp8341/flink-streaming-platform-web"
"spirom/LearningSpark" -> "high-performance-spark/high-performance-spark-examples"
"spirom/LearningSpark" -> "spirom/spark-streaming-with-kafka"
"spirom/LearningSpark" -> "xubo245/SparkLearning"
"spirom/LearningSpark" -> "jacksu/utils4s"
"spirom/LearningSpark" -> "deanwampler/spark-scala-tutorial"
"spirom/LearningSpark" -> "wanghan0501/UserSessionBehaviorOfflineAnalysis"
"spirom/LearningSpark" -> "spirom/learning-spark-with-java"
"spirom/LearningSpark" -> "polomarcus/Spark-Structured-Streaming-Examples"
"spirom/LearningSpark" -> "databricks/reference-apps"
"spirom/LearningSpark" -> "LeechanX/Netflix-Recommender-with-Spark" ["e"=1]
"spirom/LearningSpark" -> "databricks/spark-csv"
"spirom/LearningSpark" -> "groupon/sparklint"
"spirom/LearningSpark" -> "phatak-dev/spark2.0-examples"
"spirom/LearningSpark" -> "linbojin/spark-notes"
"spirom/LearningSpark" -> "unicredit/hbase-rdd"
"ymgd/codereader" -> "wiibrew/DeepLearningCourseCodes"
"ymgd/codereader" -> "XichengDong/sparktraining"
"ymgd/codereader" -> "shijinkui/spark_study"
"ymgd/codereader" -> "danny0405/flink-source-code-analysis"
"ymgd/codereader" -> "bigdataguide/hadooptraining"
"zipingdong/datax-web" -> "huzekang/springboot-datax"
"zipingdong/datax-web" -> "Jawf/DataX-Migration"
"zipingdong/datax-web" -> "luoce/bt-ware-datasync-datax"
"zipingdong/datax-web" -> "zhouhongfa/datax-vue-admin"
"zipingdong/datax-web" -> "dedededede/datax_web_ui"
"oldratlee/rp-pratice" -> "zhihuili/Dew"
"NetEase/arctic" -> "apache/flink-table-store"
"NetEase/arctic" -> "apache/incubator-kyuubi"
"NetEase/arctic" -> "apache/incubator-uniffle"
"NetEase/arctic" -> "leesf/hudi-resources"
"NetEase/arctic" -> "flink-extended/flink-remote-shuffle"
"NetEase/arctic" -> "alibaba/RemoteShuffleService"
"NetEase/arctic" -> "oap-project/gluten"
"NetEase/arctic" -> "bytedance/bitsail"
"NetEase/arctic" -> "Tencent/Firestorm"
"NetEase/arctic" -> "DataLinkDC/dlink"
"NetEase/arctic" -> "HamaWhiteGG/flink-sql-lineage"
"NetEase/arctic" -> "apache/iceberg"
"NetEase/arctic" -> "linkedin/coral"
"NetEase/arctic" -> "apache/incubator-celeborn"
"NetEase/arctic" -> "bytedance/CloudShuffleService"
"running-elephant/datart" -> "edp963/davinci"
"running-elephant/datart" -> "WeBankFinTech/DataSphereStudio"
"running-elephant/datart" -> "streamxhub/streamx"
"running-elephant/datart" -> "DataLinkDC/dlink"
"running-elephant/datart" -> "BriData/DBus"
"running-elephant/datart" -> "edp963/wormhole"
"running-elephant/datart" -> "zhp8341/flink-streaming-platform-web"
"running-elephant/datart" -> "dataease/dataease" ["e"=1]
"running-elephant/datart" -> "wgzhao/Addax"
"running-elephant/datart" -> "datageartech/datagear"
"running-elephant/datart" -> "DTStack/Taier" ["e"=1]
"running-elephant/datart" -> "apache/incubator-seatunnel"
"running-elephant/datart" -> "edp963/moonbox"
"running-elephant/datart" -> "birdLark/LarkMidTable"
"running-elephant/datart" -> "TuiQiao/CBoard"
"apache/tika" -> "chrismattmann/tika-python" ["e"=1]
"apache/tika" -> "apache/pdfbox" ["e"=1]
"apache/tika" -> "apache/lucene-solr"
"apache/tika" -> "apache/poi" ["e"=1]
"apache/tika" -> "apache/nutch" ["e"=1]
"apache/tika" -> "apache/opennlp" ["e"=1]
"apache/tika" -> "google/go-tika"
"apache/tika" -> "apache/commons-io" ["e"=1]
"apache/tika" -> "apache/solr"
"apache/tika" -> "dadoonet/fscrawler" ["e"=1]
"apache/tika" -> "apache/lucene"
"apache/tika" -> "DmitryKey/luke"
"apache/tika" -> "apache/commons-collections" ["e"=1]
"apache/tika" -> "apache/gora"
"apache/tika" -> "apache/nifi"
"appleappleapple/BigDataLearning" -> "SwordfallYeung/Interview_BigData"
"appleappleapple/BigDataLearning" -> "monsonlee/BigData"
"apache/incubator-kyuubi" -> "NetEase/arctic"
"apache/incubator-kyuubi" -> "apache/flink-table-store"
"apache/incubator-kyuubi" -> "alibaba/RemoteShuffleService"
"apache/incubator-kyuubi" -> "oap-project/gluten"
"apache/incubator-kyuubi" -> "apache/incubator-uniffle"
"apache/incubator-kyuubi" -> "apache/iceberg"
"apache/incubator-kyuubi" -> "DataLinkDC/dlink"
"apache/incubator-kyuubi" -> "streamxhub/streamx"
"apache/incubator-kyuubi" -> "apache/atlas" ["e"=1]
"apache/incubator-kyuubi" -> "apache/incubator-linkis"
"apache/incubator-kyuubi" -> "leesf/hudi-resources"
"apache/incubator-kyuubi" -> "bytedance/bitsail"
"apache/incubator-kyuubi" -> "apache/incubator-celeborn"
"apache/incubator-kyuubi" -> "apache/ranger"
"apache/incubator-kyuubi" -> "apache/hudi"
"apache/hbase-connectors" -> "hortonworks-spark/shc"
"apache/hbase-connectors" -> "apache/hbase-operator-tools"
"apache/hbase-connectors" -> "apache/phoenix-connectors"
"apache/hbase-connectors" -> "cloudera-labs/SparkOnHBase"
"apache/hbase-connectors" -> "analysys/presto-hbase-connector"
"KangU4/BigDataPlatform" -> "hairless/plink"
"KangU4/BigDataPlatform" -> "oeljeklaus-you/UserActionAnalyzePlatform"
"KangU4/BigDataPlatform" -> "realguoshuai/hadoop_study"
"sevenfang/DataCenter" -> "shuzeCloud/shuzeCloud"
"sevenfang/DataCenter" -> "moutainhigh/datax-cloud-base"
"BigDataScholar/TheKingOfBigData" -> "collabH/repository"
"BigDataScholar/TheKingOfBigData" -> "wangzhiwubigdata/God-Of-BigData"
"BigDataScholar/TheKingOfBigData" -> "newTendermint/awesome-bigdata"
"BigDataScholar/TheKingOfBigData" -> "zhangjun0x01/bigdata-examples"
"BigDataScholar/TheKingOfBigData" -> "MeetYouDevs/big-whale"
"BigDataScholar/TheKingOfBigData" -> "CheckChe0803/BigData-Interview"
"BigDataScholar/TheKingOfBigData" -> "czy006/FlinkClub"
"BigDataScholar/TheKingOfBigData" -> "yangyichao-mango/flink-study"
"BigDataScholar/TheKingOfBigData" -> "zhp8341/flink-streaming-platform-web"
"BigDataScholar/TheKingOfBigData" -> "Dr11ft/BigDataGuide"
"BigDataScholar/TheKingOfBigData" -> "realguoshuai/hadoop_study"
"BigDataScholar/TheKingOfBigData" -> "todd5167/flink-spark-submiter"
"BigDataScholar/TheKingOfBigData" -> "gingerredjade/flink-userportrait-main"
"BigDataScholar/TheKingOfBigData" -> "threeknowbigdata/flink_second_understand"
"BigDataScholar/TheKingOfBigData" -> "geekyouth/SZT-bigdata"
"Apress/machine-learning-with-pyspark" -> "edyoda/machine-learning-using-pyspark"
"WeBankFinTech/DeFiBus" -> "WeBankFinTech/EventMesh"
"WeBankFinTech/DeFiBus" -> "WeBankFinTech/WeBASE" ["e"=1]
"WeBankFinTech/DeFiBus" -> "WeBankFinTech/Schedulis"
"WeBankFinTech/DeFiBus" -> "apache/incubator-eventmesh"
"WeBankFinTech/DeFiBus" -> "WeBankFinTech/WeCross" ["e"=1]
"WeBankFinTech/DeFiBus" -> "WeBankFinTech/WeBank-all-Project"
"WeBankFinTech/DeFiBus" -> "WeBankFinTech/Qualitis"
"allwefantasy/mlsql" -> "teeyog/IQL"
"allwefantasy/mlsql" -> "allwefantasy/spark-binlog"
"allwefantasy/mlsql" -> "allwefantasy/pyjava"
"allwefantasy/mlsql" -> "InterestingLab/waterdrop"
"allwefantasy/mlsql" -> "edp963/moonbox"
"allwefantasy/mlsql" -> "edp963/wormhole"
"allwefantasy/mlsql" -> "BriData/DBus"
"allwefantasy/mlsql" -> "Qihoo360/Quicksql"
"allwefantasy/mlsql" -> "WeBankFinTech/Exchangis"
"allwefantasy/mlsql" -> "ameyamk/spark-streaming-direct-kafka"
"allwefantasy/mlsql" -> "NetEase/kyuubi"
"ruozedata/BigData" -> "Hackeruncle/OnlineLogAnalysis"
"ruozedata/BigData" -> "Hackeruncle/MySQL"
"ruozedata/BigData" -> "jydata/MCP"
"srccodes/hadoop-common-2.2.0-bin" -> "winghc/hadoop2x-eclipse-plugin"
"srccodes/hadoop-common-2.2.0-bin" -> "amihalik/hadoop-common-2.6.0-bin"
"srccodes/hadoop-common-2.2.0-bin" -> "SweetInk/hadoop-common-2.7.1-bin"
"srccodes/hadoop-common-2.2.0-bin" -> "steveloughran/winutils"
"srccodes/hadoop-common-2.2.0-bin" -> "azkaban/azkaban-plugins" ["e"=1]
"srccodes/hadoop-common-2.2.0-bin" -> "zhang-xzhi/simplehbase"
"srccodes/hadoop-common-2.2.0-bin" -> "ruozedata/BigData"
"niall-turbitt/e2e-mlops" -> "databricks/mlops-stack"
"niall-turbitt/e2e-mlops" -> "niall-turbitt/e2e-mlops-azure"
"databricks/reference-apps" -> "databricks/spark-knowledgebase"
"databricks/reference-apps" -> "killrweather/killrweather"
"databricks/reference-apps" -> "databricks/spark-training"
"databricks/reference-apps" -> "andypetrella/spark-notebook"
"databricks/reference-apps" -> "databricks/spark-avro"
"databricks/reference-apps" -> "high-performance-spark/high-performance-spark-examples"
"databricks/reference-apps" -> "databricks/learning-spark"
"databricks/reference-apps" -> "deanwampler/spark-workshop"
"databricks/reference-apps" -> "mahmoudparsian/data-algorithms-book"
"databricks/reference-apps" -> "spark-jobserver/spark-jobserver"
"databricks/reference-apps" -> "datastax/spark-cassandra-connector"
"databricks/reference-apps" -> "dibbhatt/kafka-spark-consumer" ["e"=1]
"databricks/reference-apps" -> "ooyala/spark-jobserver"
"databricks/reference-apps" -> "databricks/spark-csv"
"databricks/reference-apps" -> "databricks/spark-perf"
"databricks-academy/apache-spark-programming-with-databricks" -> "databricks-academy/advanced-data-engineering-with-databricks"
"databricks-academy/apache-spark-programming-with-databricks" -> "databricks-academy/just-enough-python-for-spark"
"databricks-academy/apache-spark-programming-with-databricks" -> "databricks-academy/data-analysis-with-databricks-sql"
"databricks-academy/apache-spark-programming-with-databricks" -> "databricks-academy/data-engineering-with-databricks-english"
"databricks-academy/apache-spark-programming-with-databricks" -> "databricks-academy/INT-JEPFS-V2-IL"
"databricks-academy/apache-spark-programming-with-databricks" -> "databricks-academy/ml-in-production"
"databricks-academy/apache-spark-programming-with-databricks" -> "databricks-academy/data-engineering-with-databricks"
"databricks-academy/apache-spark-programming-with-databricks" -> "databricks-academy/ml-in-production-english"
"databricks-academy/apache-spark-programming-with-databricks" -> "databricks-academy/data-engineer-learning-path"
"databricks/tensorframes" -> "databricks/spark-deep-learning"
"databricks/tensorframes" -> "adatao/tensorspark"
"databricks/tensorframes" -> "yahoo/TensorFlowOnSpark"
"databricks/tensorframes" -> "databricks/spark-sklearn"
"databricks/tensorframes" -> "amplab/SparkNet"
"databricks/tensorframes" -> "databricks/spark-corenlp"
"databricks/tensorframes" -> "intel-analytics/BigDL"
"databricks/tensorframes" -> "amplab/spark-indexedrdd"
"databricks/tensorframes" -> "apache/incubator-toree"
"databricks/tensorframes" -> "yahoo/CaffeOnSpark"
"databricks/tensorframes" -> "databricks/spark-csv"
"databricks/tensorframes" -> "databricks/spark-knowledgebase"
"databricks/tensorframes" -> "spark-jobserver/spark-jobserver"
"databricks/tensorframes" -> "deeplearning4j/ScalNet" ["e"=1]
"databricks/tensorframes" -> "cloudera/livy"
"MrPowers/quinn" -> "MrPowers/chispa"
"MrPowers/quinn" -> "MrPowers/spark-daria"
"MrPowers/quinn" -> "MrPowers/spark-style-guide"
"MrPowers/quinn" -> "MrPowers/mack"
"MrPowers/quinn" -> "awslabs/python-deequ" ["e"=1]
"MrPowers/quinn" -> "MrPowers/spark-fast-tests"
"MrPowers/quinn" -> "swoop-inc/spark-alchemy"
"MrPowers/quinn" -> "ekampf/PySpark-Boilerplate"
"MrPowers/quinn" -> "mspnp/spark-monitoring"
"MrPowers/quinn" -> "palantir/pyspark-style-guide"
"MrPowers/quinn" -> "ironmussa/Optimus" ["e"=1]
"MrPowers/quinn" -> "awslabs/deequ" ["e"=1]
"MrPowers/quinn" -> "AlexIoannides/pyspark-example-project"
"MrPowers/quinn" -> "YotpoLtd/metorikku"
"MrPowers/quinn" -> "databrickslabs/dbldatagen"
"deanwampler/spark-scala-tutorial" -> "deanwampler/JustEnoughScalaForSpark"
"deanwampler/spark-scala-tutorial" -> "spirom/LearningSpark"
"deanwampler/spark-scala-tutorial" -> "spark-notebook/spark-notebook"
"deanwampler/spark-scala-tutorial" -> "deanwampler/prog-scala-2nd-ed-code-examples"
"deanwampler/spark-scala-tutorial" -> "jadianes/spark-py-notebooks"
"deanwampler/spark-scala-tutorial" -> "awesome-spark/awesome-spark"
"deanwampler/spark-scala-tutorial" -> "jaceklaskowski/mastering-apache-spark-book"
"deanwampler/spark-scala-tutorial" -> "jaceklaskowski/spark-workshop"
"deanwampler/spark-scala-tutorial" -> "databricks/scala-style-guide" ["e"=1]
"deanwampler/spark-scala-tutorial" -> "dehun/learn-fp" ["e"=1]
"deanwampler/spark-scala-tutorial" -> "spark-examples/spark-scala-examples"
"deanwampler/spark-scala-tutorial" -> "databricks/spark-deep-learning"
"deanwampler/spark-scala-tutorial" -> "databricks/spark-training"
"deanwampler/spark-scala-tutorial" -> "jaceklaskowski/spark-structured-streaming-book"
"deanwampler/spark-scala-tutorial" -> "databricks/learning-spark"
"tapdata/tapdata" -> "tapdata/idaas-pdk"
"tapdata/tapdata" -> "tapdata/tapdata.github.io"
"tapdata/tapdata" -> "tapdata/idaas"
"tapdata/tapdata" -> "flowerfine/scaleph"
"tapdata/tapdata" -> "qlangtech/tis"
"tapdata/tapdata" -> "apache/flink-connector-jdbc"
"sdksdk0/Elasticsearch-Hbase" -> "HY-ZhengWei/HBaseClient"
"sdksdk0/Elasticsearch-Hbase" -> "xiaokugua250/DataMingProject"
"sdksdk0/Elasticsearch-Hbase" -> "2shou/HBaseObserver"
"sdksdk0/Elasticsearch-Hbase" -> "SpringForAll/spring-boot-starter-hbase"
"zhaodongxx/awesome-kettle" -> "jiangzongyao/kettle-master"
"zhaodongxx/awesome-kettle" -> "konglinghai123/renren_kettle"
"zhaodongxx/awesome-kettle" -> "JoeyBling/webkettle"
"SpringForAll/spring-boot-starter-hbase" -> "sdksdk0/Elasticsearch-Hbase"
"SpringForAll/spring-boot-starter-hbase" -> "HY-ZhengWei/HBaseClient"
"SpringForAll/spring-boot-starter-hbase" -> "JThink/SkyEye" ["e"=1]
"SpringForAll/spring-boot-starter-hbase" -> "alibaba/simplehbase"
"SpringForAll/spring-boot-starter-hbase" -> "YunaiV/RuoYi-Vue" ["e"=1]
"zzboy/lucene" -> "LuXugang/Lucene-7.5.0"
"zzboy/lucene" -> "doushini/lucene"
"zzboy/lucene" -> "hankcs/hanlp-lucene-plugin" ["e"=1]
"sryza/spark-ts-examples" -> "sryza/spark-timeseries"
"51nb/miox" -> "51nb/nym-cli"
"51nb/miox" -> "51nb/marble"
"51nb/miox" -> "liyangready/multiple-host"
"51nb/miox" -> "cevio/super-vuex"
"51nb/miox" -> "51nb/miox-vuc"
"51nb/miox" -> "cevio/soyie"
"51nb/nym-cli" -> "cevio/miox2"
"liyangready/multiple-host" -> "51nb/nym-cli"
"gglinux/wifi" -> "xiaokugua250/DataMingProject"
"apache/incubator-heron" -> "pravega/pravega"
"apache/incubator-heron" -> "apache/samza"
"apache/incubator-heron" -> "linkedin/brooklin" ["e"=1]
"apache/incubator-heron" -> "apache/bookkeeper" ["e"=1]
"apache/incubator-heron" -> "apache/incubator-hudi"
"apache/incubator-heron" -> "apache/incubator-pinot"
"apache/incubator-heron" -> "apache/helix"
"apache/incubator-heron" -> "MARKETProtocol/MARKET.js"
"apache/incubator-heron" -> "apache/incubator-iceberg"
"apache/incubator-heron" -> "apache/eagle" ["e"=1]
"apache/incubator-eventmesh" -> "WeBankFinTech/DeFiBus"
"apache/incubator-eventmesh" -> "apache/ratis"
"apache/incubator-eventmesh" -> "openmessaging/dledger"
"apache/incubator-eventmesh" -> "qiangmouren/query-domain-icp-nodejs"
"apache/incubator-eventmesh" -> "apache/rocketmq-eventbridge"
"apache/incubator-eventmesh" -> "apache/incubator-shenyu" ["e"=1]
"apache/incubator-eventmesh" -> "polarismesh/polaris" ["e"=1]
"apache/incubator-eventmesh" -> "apache/incubator-hugegraph"
"apache/incubator-eventmesh" -> "apache/incubator-devlake" ["e"=1]
"apache/incubator-eventmesh" -> "apache/incubator-inlong"
"apache/incubator-eventmesh" -> "apache/incubator-linkis"
"apache/incubator-eventmesh" -> "flingyp/vue-admire-plus" ["e"=1]
"apache/incubator-eventmesh" -> "apache/bookkeeper" ["e"=1]
"apache/incubator-eventmesh" -> "xianyongjian080402/Minecraft-Optimal-Starter_2" ["e"=1]
"apache/incubator-eventmesh" -> "hbwu-ntu/spot-adv-by-vocoder"
"Tongzhenguo/ebooks" -> "weiweifan/Big-Data-Resources"
"Tongzhenguo/ebooks" -> "sunnyandgood/BigData"
"Tongzhenguo/ebooks" -> "monsonlee/BigData"
"Tongzhenguo/ebooks" -> "huichen/mlf" ["e"=1]
"Tongzhenguo/ebooks" -> "houshanren/big_data_architect_skills"
"Tongzhenguo/ebooks" -> "TALKDATA/JavaBigData"
"edp963/wormhole" -> "BriData/DBus"
"edp963/wormhole" -> "edp963/moonbox"
"edp963/wormhole" -> "edp963/davinci"
"edp963/wormhole" -> "Qihoo360/Quicksql"
"edp963/wormhole" -> "WeBankFinTech/Scriptis"
"edp963/wormhole" -> "InterestingLab/waterdrop"
"edp963/wormhole" -> "DTStack/flinkStreamSQL"
"edp963/wormhole" -> "allwefantasy/streamingpro"
"edp963/wormhole" -> "uavorg/uavstack"
"edp963/wormhole" -> "DTStack/flinkx"
"edp963/wormhole" -> "WeBankFinTech/DataSphereStudio"
"edp963/wormhole" -> "uber/AthenaX"
"edp963/wormhole" -> "harbby/sylph"
"edp963/wormhole" -> "ucarGroup/DataLink"
"edp963/wormhole" -> "scxwhite/hera"
"DTStack/chunjun" -> "DTStack/Taier" ["e"=1]
"DTStack/chunjun" -> "DataLinkDC/dlink"
"DTStack/chunjun" -> "ververica/flink-cdc-connectors"
"DTStack/chunjun" -> "qlangtech/tis"
"DTStack/chunjun" -> "apache/incubator-seatunnel"
"DTStack/chunjun" -> "birdLark/LarkMidTable"
"DTStack/chunjun" -> "bytedance/bitsail"
"DTStack/chunjun" -> "streamxhub/streamx"
"DTStack/chunjun" -> "apache/flink-table-store"
"DTStack/chunjun" -> "apache/incubator-streampark"
"DTStack/chunjun" -> "zhp8341/flink-streaming-platform-web"
"DTStack/chunjun" -> "DataLinkDC/dinky"
"DTStack/chunjun" -> "apache/dolphinscheduler"
"DTStack/chunjun" -> "WeBankFinTech/DataSphereStudio"
"DTStack/chunjun" -> "WeiYe-Jing/datax-web"
"WeBankFinTech/Schedulis" -> "WeBankFinTech/Exchangis"
"WeBankFinTech/Schedulis" -> "WeBankFinTech/Visualis"
"WeBankFinTech/Schedulis" -> "WeBankFinTech/Qualitis"
"WeBankFinTech/Schedulis" -> "WeBankFinTech/Prophecis"
"WeBankFinTech/Schedulis" -> "WeBankFinTech/Scriptis"
"WeBankFinTech/Schedulis" -> "WeBankFinTech/WeDataSphere"
"WeBankFinTech/Schedulis" -> "WeBankFinTech/Linkis-Doc"
"WeBankFinTech/Schedulis" -> "WeBankFinTech/DataSphereStudio"
"WeBankFinTech/Schedulis" -> "apache/incubator-linkis"
"WeBankFinTech/Schedulis" -> "WeBankFinTech/Streamis"
"WeBankFinTech/Schedulis" -> "WeBankFinTech/Linkis"
"WeBankFinTech/Scriptis" -> "WeBankFinTech/WeDataSphere"
"WeBankFinTech/Scriptis" -> "WeBankFinTech/Linkis"
"WeBankFinTech/Scriptis" -> "WeBankFinTech/Qualitis"
"WeBankFinTech/Scriptis" -> "WeBankFinTech/Visualis"
"WeBankFinTech/Scriptis" -> "WeBankFinTech/DataSphereStudio"
"WeBankFinTech/Scriptis" -> "WeBankFinTech/Exchangis"
"WeBankFinTech/Scriptis" -> "edp963/wormhole"
"WeBankFinTech/Scriptis" -> "edp963/moonbox"
"WeBankFinTech/Scriptis" -> "WeBankFinTech/Schedulis"
"WeBankFinTech/Scriptis" -> "BriData/DBus"
"WeBankFinTech/Scriptis" -> "WeBankFinTech/Prophecis"
"WeBankFinTech/Scriptis" -> "InterestingLab/waterdrop"
"WeBankFinTech/Scriptis" -> "Qihoo360/Quicksql"
"WeBankFinTech/Scriptis" -> "analysys/EasyScheduler"
"WeBankFinTech/Scriptis" -> "zhp8341/flink-streaming-platform-web"
"WeBankFinTech/Visualis" -> "WeBankFinTech/Qualitis"
"WeBankFinTech/Visualis" -> "WeBankFinTech/Schedulis"
"WeBankFinTech/Visualis" -> "WeBankFinTech/Scriptis"
"WeBankFinTech/Visualis" -> "WeBankFinTech/Exchangis"
"WeBankFinTech/Visualis" -> "WeBankFinTech/Linkis-Doc"
"WeBankFinTech/Visualis" -> "WeBankFinTech/Prophecis"
"WeBankFinTech/Visualis" -> "WeBankFinTech/DataSphereStudio"
"WeBankFinTech/Visualis" -> "WeBankFinTech/WeDataSphere"
"WeBankFinTech/WeDataSphere" -> "WeBankFinTech/Scriptis"
"WeBankFinTech/WeDataSphere" -> "WeBankFinTech/Linkis"
"WeBankFinTech/WeDataSphere" -> "WeBankFinTech/Exchangis"
"WeBankFinTech/WeDataSphere" -> "WeBankFinTech/DataSphereStudio"
"WeBankFinTech/WeDataSphere" -> "WeBankFinTech/Schedulis"
"WeBankFinTech/WeDataSphere" -> "WeBankFinTech/Qualitis"
"WeBankFinTech/WeDataSphere" -> "WeBankFinTech/Prophecis"
"WeBankFinTech/WeDataSphere" -> "WeBankFinTech/Visualis"
"WeBankFinTech/WeDataSphere" -> "edp963/wormhole"
"WeBankFinTech/WeDataSphere" -> "edp963/moonbox"
"WeBankFinTech/WeDataSphere" -> "apache/atlas" ["e"=1]
"apache/inlong" -> "bytedance/bitsail"
"apache/inlong" -> "DataLinkDC/dlink"
"apache/inlong" -> "apache/incubator-seatunnel"
"apache/inlong" -> "apache/incubator-kyuubi"
"apache/inlong" -> "flowerfine/scaleph"
"apache/inlong" -> "streamxhub/streamx"
"apache/inlong" -> "apache/flink-table-store"
"apache/inlong" -> "apache/hudi"
"apache/inlong" -> "apache/atlas" ["e"=1]
"apache/inlong" -> "DTStack/chunjun"
"apache/inlong" -> "Tencent/feflow" ["e"=1]
"apache/inlong" -> "ververica/flink-cdc-connectors"
"apache/inlong" -> "apache/incubator-linkis"
"apache/inlong" -> "apache/flink-kubernetes-operator"
"apache/inlong" -> "NetEase/arctic"
"apache/rocketmq-flink" -> "apache/rocketmq-schema-registry"
"apache/rocketmq-flink" -> "apache/rocketmq-streams"
"apache/incubator-livy" -> "cloudera/livy"
"apache/incubator-livy" -> "yaooqinn/kyuubi"
"apache/incubator-livy" -> "apache/incubator-iceberg"
"apache/incubator-livy" -> "apache/carbondata"
"apache/incubator-livy" -> "spark-jobserver/spark-jobserver"
"apache/incubator-livy" -> "jupyter-incubator/sparkmagic"
"apache/incubator-livy" -> "apache/incubator-hudi"
"apache/incubator-livy" -> "apache/incubator-kyuubi"
"apache/incubator-livy" -> "apache/ranger"
"apache/incubator-livy" -> "apache/incubator-toree"
"apache/incubator-livy" -> "linkedin/dr-elephant"
"apache/incubator-livy" -> "allwefantasy/streamingpro"
"apache/incubator-livy" -> "uber/RemoteShuffleService"
"apache/incubator-livy" -> "hortonworks-spark/shc"
"apache/incubator-livy" -> "databricks/spark-sql-perf"
"daizikaikou/learningSpark" -> "sjyttkl/spark_learning"
"daizikaikou/learningSpark" -> "Zouxxyy/bigdata-learning"
"daizikaikou/learningSpark" -> "whirlys/BigData-In-Practice"
"dgryski/go-tsz" -> "SoftwareDefinedBuildings/btrdb"
"dgryski/go-tsz" -> "dgryski/go-jump"
"dgryski/go-tsz" -> "burmanm/gorilla-tsc"
"alibaba/RemoteShuffleService" -> "Tencent/Firestorm"
"alibaba/RemoteShuffleService" -> "oap-project/gluten"
"alibaba/RemoteShuffleService" -> "uber/RemoteShuffleService"
"alibaba/RemoteShuffleService" -> "bytedance/CloudShuffleService"
"alibaba/RemoteShuffleService" -> "apache/incubator-uniffle"
"alibaba/RemoteShuffleService" -> "flink-extended/flink-remote-shuffle"
"alibaba/RemoteShuffleService" -> "oap-project/gazelle_plugin"
"alibaba/RemoteShuffleService" -> "blaze-init/blaze"
"alibaba/RemoteShuffleService" -> "alibaba/SparkCube"
"alibaba/RemoteShuffleService" -> "NetEase/arctic"
"alibaba/RemoteShuffleService" -> "apache/incubator-kyuubi"
"alibaba/RemoteShuffleService" -> "databricks/spark-sql-perf"
"alibaba/RemoteShuffleService" -> "cubefs/compass"
"alibaba/RemoteShuffleService" -> "apache/flink-table-store"
"alibaba/RemoteShuffleService" -> "linkedin/coral"
"apache/incubator-uniffle" -> "Tencent/Firestorm"
"apache/incubator-uniffle" -> "apache/incubator-celeborn"
"apache/incubator-uniffle" -> "bytedance/CloudShuffleService"
"apache/incubator-uniffle" -> "uber/RemoteShuffleService"
"apache/incubator-uniffle" -> "alibaba/RemoteShuffleService"
"apache/incubator-uniffle" -> "flink-extended/flink-remote-shuffle"
"apache/incubator-uniffle" -> "oap-project/gluten"
"apache/incubator-uniffle" -> "NetEase/arctic"
"apache/incubator-uniffle" -> "apache/flink-table-store"
"apache/incubator-uniffle" -> "apache/incubator-kyuubi"
"apache/incubator-uniffle" -> "alibaba/celeborn"
"apache/incubator-uniffle" -> "HamaWhiteGG/flink-sql-lineage"
"bytedance/CloudShuffleService" -> "alibaba/RemoteShuffleService"
"bytedance/CloudShuffleService" -> "apache/incubator-uniffle"
"bytedance/CloudShuffleService" -> "flink-extended/flink-remote-shuffle"
"bytedance/CloudShuffleService" -> "apache/flink-table-store"
"bytedance/CloudShuffleService" -> "oap-project/gluten"
"bytedance/CloudShuffleService" -> "Tencent/Firestorm"
"bytedance/CloudShuffleService" -> "apache/incubator-celeborn"
"bytedance/CloudShuffleService" -> "uber/RemoteShuffleService"
"bytedance/CloudShuffleService" -> "NetEase/arctic"
"bytedance/CloudShuffleService" -> "leesf/hudi-resources"
"uber/RemoteShuffleService" -> "alibaba/RemoteShuffleService"
"uber/RemoteShuffleService" -> "Tencent/Firestorm"
"uber/RemoteShuffleService" -> "apache/incubator-uniffle"
"uber/RemoteShuffleService" -> "oap-project/gluten"
"uber/RemoteShuffleService" -> "databricks/spark-sql-perf"
"uber/RemoteShuffleService" -> "oap-project/gazelle_plugin"
"uber/RemoteShuffleService" -> "qubole/sparklens"
"uber/RemoteShuffleService" -> "MemVerge/splash"
"uber/RemoteShuffleService" -> "alibaba/SparkCube"
"uber/RemoteShuffleService" -> "Intel-bigdata/OAP"
"uber/RemoteShuffleService" -> "apple/batch-processing-gateway"
"uber/RemoteShuffleService" -> "linkedin/coral"
"uber/RemoteShuffleService" -> "linkedin/transport"
"uber/RemoteShuffleService" -> "Intel-bigdata/spark-adaptive"
"uber/RemoteShuffleService" -> "bytedance/CloudShuffleService"
"hyperbench/hyperbench" -> "meshplus/hyperbench"
"meshplus/hyperbench" -> "hyperbench/hyperbench"
"openzipkin/b3-propagation" -> "openzipkin/zipkin-reporter-java"
"openzipkin/b3-propagation" -> "openzipkin/brave" ["e"=1]
"openzipkin/b3-propagation" -> "openzipkin/zipkin-api"
"openzipkin/b3-propagation" -> "w3c/distributed-tracing" ["e"=1]
"openzipkin/b3-propagation" -> "opentracing/specification" ["e"=1]
"openzipkin/b3-propagation" -> "openzipkin/docker-zipkin"
"openzipkin/b3-propagation" -> "census-instrumentation/opencensus-specs" ["e"=1]
"wanghan0501/WiFiProbeAnalysis" -> "wanghan0501/UserSessionBehaviorOfflineAnalysis"
"wanghan0501/WiFiProbeAnalysis" -> "LuckyZXL2016/News_Spark"
"wanghan0501/WiFiProbeAnalysis" -> "oeljeklaus-you/UserActionAnalyzePlatform"
"wanghan0501/WiFiProbeAnalysis" -> "asdud/Bigdata_project"
"wanghan0501/WiFiProbeAnalysis" -> "wanghan0501/AdRealTimeAnalysis"
"wanghan0501/WiFiProbeAnalysis" -> "monsonlee/BigData"
"wanghan0501/WiFiProbeAnalysis" -> "oeljeklaus-you/JavaOrBigData-Interview"
"wanghan0501/WiFiProbeAnalysis" -> "Erik-ly/SprakProject"
"wanghan0501/WiFiProbeAnalysis" -> "gglinux/wifi"
"wanghan0501/WiFiProbeAnalysis" -> "liguozhong/demo_11.11_storm-spark-hadoop"
"wanghan0501/WiFiProbeAnalysis" -> "whirlys/BigData-In-Practice"
"wanghan0501/WiFiProbeAnalysis" -> "sakura521/wifiProject"
"wanghan0501/WiFiProbeAnalysis" -> "pkeropen/BigData-News"
"ozgur/python-linkedin" -> "tomquirk/linkedin-api"
"ozgur/python-linkedin" -> "michaelhelmick/linkedin"
"ozgur/python-linkedin" -> "yatish27/linkedin-scraper"
"ozgur/python-linkedin" -> "HootsuiteLabs/python-linkedin-v2"
"ozgur/python-linkedin" -> "joeyism/linkedin_scraper"
"ozgur/python-linkedin" -> "DEKHTIARJonathan/python3-linkedin"
"ozgur/python-linkedin" -> "eracle/linkedin"
"ozgur/python-linkedin" -> "ericfourrier/scrape-linkedin"
"ozgur/python-linkedin" -> "mrgaaron/LinkedIn-Client-Library"
"ozgur/python-linkedin" -> "junks/linkedInScraper"
"ozgur/python-linkedin" -> "linkedin/api-get-started"
"ozgur/python-linkedin" -> "mobolic/facebook-sdk" ["e"=1]
"ozgur/python-linkedin" -> "kirkhunter/linkedin-jobs-scraper"
"ozgur/python-linkedin" -> "ptwobrussell/Mining-the-Social-Web-2nd-Edition" ["e"=1]
"ozgur/python-linkedin" -> "pythonforfacebook/facebook-sdk" ["e"=1]
"linkedin/pinot" -> "linkedin/gobblin"
"linkedin/pinot" -> "druid-io/druid"
"linkedin/pinot" -> "twitter/heron"
"linkedin/pinot" -> "facebook/presto" ["e"=1]
"linkedin/pinot" -> "linkedin/WhereHows" ["e"=1]
"linkedin/pinot" -> "airbnb/airpal"
"linkedin/pinot" -> "linkedin/ambry"
"linkedin/pinot" -> "metamx/druid" ["e"=1]
"linkedin/pinot" -> "linkedin/camus"
"linkedin/pinot" -> "implydata/pivot"
"linkedin/pinot" -> "apache/incubator-zeppelin"
"linkedin/pinot" -> "airbnb/aerosolve"
"linkedin/pinot" -> "linkedin/rest.li"
"linkedin/pinot" -> "KylinOLAP/Kylin" ["e"=1]
"linkedin/pinot" -> "cloudera/kudu"
"qindongliang/streaming-offset-to-zk" -> "LinMingQiang/spark-util"
"qindongliang/streaming-offset-to-zk" -> "xinghalo/Teddy"
"wx-chevalier/Database-Series" -> "collabH/repository"
"wx-chevalier/Database-Series" -> "wx-chevalier/DistributedSystem-Series" ["e"=1]
"wx-chevalier/Database-Series" -> "realguoshuai/hadoop_study"
"wx-chevalier/Database-Series" -> "moutainhigh/datax-cloud-base"
"wx-chevalier/Database-Series" -> "wx-chevalier/Linux-Series" ["e"=1]
"wx-chevalier/Database-Series" -> "sunnyandgood/BigData"
"wx-chevalier/Database-Series" -> "CheckChe0803/BigData-Interview"
"wx-chevalier/Database-Series" -> "fenglei110/DataWarehouse"
"wx-chevalier/Database-Series" -> "Thpffcj/BigData-Getting-Started"
"wx-chevalier/Database-Series" -> "sevenfang/DataCenter"
"wx-chevalier/Database-Series" -> "oeljeklaus-you/UserActionAnalyzePlatform"
"wx-chevalier/Database-Series" -> "wx-chevalier/Cloud-Series" ["e"=1]
"wx-chevalier/Database-Series" -> "simbafl/DataWarehouse"
"wx-chevalier/Database-Series" -> "wxgzgl/LarkMidTable"
"wx-chevalier/Database-Series" -> "collabH/bigdata-growth"
"apache/beam" -> "apache/flink"
"apache/beam" -> "apache/calcite"
"apache/beam" -> "spotify/scio" ["e"=1]
"apache/beam" -> "prestodb/presto"
"apache/beam" -> "apache/iceberg"
"apache/beam" -> "apache/hive"
"apache/beam" -> "delta-io/delta"
"apache/beam" -> "apache/arrow" ["e"=1]
"apache/beam" -> "apache/pulsar" ["e"=1]
"apache/beam" -> "apache/hbase"
"apache/beam" -> "apache/zeppelin"
"apache/beam" -> "apache/kafka" ["e"=1]
"apache/beam" -> "GoogleCloudPlatform/DataflowTemplates" ["e"=1]
"apache/beam" -> "apache/kylin"
"apache/beam" -> "apache/spark"
"worldligang/CodeReading" -> "worldligang/awesome-wechat-weapp"
"worldligang/CodeReading" -> "bigdataguide/hadooptraining"
"ananas-analytics/ananas-desktop" -> "shzlw/poli"
"allwefantasy/streamingpro" -> "teeyog/IQL"
"allwefantasy/streamingpro" -> "lw-lin/CoolplaySpark"
"allwefantasy/streamingpro" -> "edp963/wormhole"
"allwefantasy/streamingpro" -> "cjuexuan/mynote"
"allwefantasy/streamingpro" -> "allwefantasy/my-life"
"allwefantasy/streamingpro" -> "InterestingLab/waterdrop"
"allwefantasy/streamingpro" -> "uber/AthenaX"
"allwefantasy/streamingpro" -> "edp963/moonbox"
"allwefantasy/streamingpro" -> "ColZer/DigAndBuried"
"allwefantasy/streamingpro" -> "DTStack/flinkStreamSQL"
"allwefantasy/streamingpro" -> "jacksu/utils4s"
"allwefantasy/streamingpro" -> "yaooqinn/kyuubi"
"allwefantasy/streamingpro" -> "lw-lin/streaming-readings"
"allwefantasy/streamingpro" -> "Intel-bigdata/spark-adaptive"
"allwefantasy/streamingpro" -> "hortonworks-spark/shc"
"didi/ES-Fastloader" -> "LuXugang/Lucene-7.5.0"
"didi/ES-Fastloader" -> "didi/elastic-trib"
"didi/ES-Fastloader" -> "didi/LogiEM"
"didi/ES-Fastloader" -> "didi/kafka-manager"
"didi/ES-Fastloader" -> "didi/sgt"
"didi/ES-Fastloader" -> "didi/levin"
"didi/ES-Fastloader" -> "mingyitianxia/elastic-certified-engineer"
"didi/ES-Fastloader" -> "vipshop/pallas" ["e"=1]
"didi/ES-Fastloader" -> "didi/hetsann" ["e"=1]
"chubbyjiang/MapReduce" -> "intel-hadoop/HiTune"
"chubbyjiang/MapReduce" -> "liguozhong/demo_11.11_storm-spark-hadoop"
"chubbyjiang/MapReduce" -> "josonle/MapReduce-Demo"
"chubbyjiang/MapReduce" -> "longyinzaitian/HadoopDemo"
"chubbyjiang/MapReduce" -> "adamjshook/mapreducepatterns" ["e"=1]
"chubbyjiang/MapReduce" -> "andreaiacono/MapReduce"
"chubbyjiang/MapReduce" -> "monsonlee/BigData"
"chubbyjiang/MapReduce" -> "chu888chu888/HadoopAndSparkDataStudy"
"chubbyjiang/MapReduce" -> "realguoshuai/hadoop_study"
"h2oai/h2o-meetups" -> "h2oai/h2o-tutorials"
"h2oai/h2o-meetups" -> "h2oai/awesome-h2o"
"h2oai/h2o-meetups" -> "h2oai/deepwater"
"h2oai/h2o-meetups" -> "jfpuget/LibFM_in_Keras" ["e"=1]
"h2oai/h2o-meetups" -> "anttttti/Wordbatch" ["e"=1]
"h2oai/h2o-meetups" -> "jphall663/interpretable_machine_learning_with_python" ["e"=1]
"h2oai/h2o-meetups" -> "h2oai/sparkling-water"
"h2oai/h2o-meetups" -> "sowla/useR2019-materials" ["e"=1]
"h2oai/h2o-meetups" -> "h2oai/data-science-examples"
"h2oai/h2o-meetups" -> "h2oai/steam"
"h2oai/h2o-meetups" -> "h2oai/driverlessai-recipes"
"h2oai/h2o-meetups" -> "alno/kaggle-allstate-claims-severity" ["e"=1]
"jpmml/jpmml-lightgbm" -> "lyg5623/lightgbm_predict4j"
"jpmml/jpmml-lightgbm" -> "alipay/jpmml-sparkml-lightgbm"
"smartloli/EFAK" -> "dushixiang/kafka-map"
"smartloli/EFAK" -> "didi/LogiKM"
"smartloli/EFAK" -> "yahoo/CMAK" ["e"=1]
"smartloli/EFAK" -> "streamxhub/streamx"
"smartloli/EFAK" -> "vran-dev/PrettyZoo" ["e"=1]
"smartloli/EFAK" -> "ververica/flink-cdc-connectors"
"smartloli/EFAK" -> "xxd763795151/kafka-console-ui"
"smartloli/EFAK" -> "DataLinkDC/dlink"
"smartloli/EFAK" -> "didi/KnowStreaming"
"smartloli/EFAK" -> "apache/incubator-linkis"
"smartloli/EFAK" -> "xaecbd/KafkaCenter"
"smartloli/EFAK" -> "apache/bahir-flink"
"smartloli/EFAK" -> "collabH/repository"
"smartloli/EFAK" -> "apache/incubator-seatunnel"
"smartloli/EFAK" -> "DTStack/chengying"
"yatish27/linkedin-scraper" -> "junks/linkedInScraper"
"yatish27/linkedin-scraper" -> "ozgur/python-linkedin"
"yatish27/linkedin-scraper" -> "hexgnu/linkedin"
"yatish27/linkedin-scraper" -> "ericfourrier/scrape-linkedin"
"yatish27/linkedin-scraper" -> "pondering/scrapy-linkedin"
"yatish27/linkedin-scraper" -> "mdsecactivebreach/LinkedInt" ["e"=1]
"h2oai/awesome-h2o" -> "h2oai/driverlessai-recipes"
"h2oai/awesome-h2o" -> "h2oai/h2o-meetups"
"h2oai/awesome-h2o" -> "h2oai/h2o-tutorials"
"dushixiang/kafka-map" -> "smartloli/EFAK"
"dushixiang/kafka-map" -> "xxd763795151/kafka-console-ui"
"dushixiang/kafka-map" -> "vran-dev/PrettyZoo" ["e"=1]
"dushixiang/kafka-map" -> "didi/KnowStreaming"
"dushixiang/kafka-map" -> "starsliao/ConsulManager" ["e"=1]
"dushixiang/kafka-map" -> "nacos-group/nacos-k8s" ["e"=1]
"databricks-academy/data-engineer-learning-path" -> "databricks-academy/data-engineering-with-databricks-english"
"databricks-academy/data-engineer-learning-path" -> "databricks-academy/advanced-data-engineering-with-databricks"
"databricks-academy/data-engineer-learning-path" -> "databricks-academy/apache-spark-programming-with-databricks"
"databricks-academy/data-engineer-learning-path" -> "databricks-academy/data-analysis-with-databricks-sql"
"databricks-academy/data-engineer-learning-path" -> "databricks-academy/ml-in-production-english"
"databricks-academy/data-engineer-learning-path" -> "dair-ai/AI-Product-Index" ["e"=1]
"databricks-academy/data-engineer-learning-path" -> "databricks/delta-live-tables-notebooks"
"databricks-academy/data-engineer-learning-path" -> "databricks-academy/data-engineering-with-databricks"
"databricks-academy/data-engineer-learning-path" -> "databricks/notebook-best-practices"
"slimina/thrift-zookeeper-rpc" -> "eirslett/thrift-zookeeper"
"baidu/BIPlatform" -> "ruisibi/rsbi-pom"
"baidu/BIPlatform" -> "ruisibi/olap"
"openzipkin/zipkin-dependencies" -> "openzipkin/docker-zipkin-dependencies"
"openzipkin/zipkin-dependencies" -> "openzipkin/zipkin-reporter-java"
"airbnb/babel-plugin-dynamic-import-node" -> "airbnb/android-mapviewballoons"
"airbnb/babel-plugin-dynamic-import-node" -> "airbnb/appear"
"airbnb/babel-plugin-dynamic-import-node" -> "airbnb/bugsnag-android"
"airbnb/babel-plugin-dynamic-import-node" -> "airbnb/apple-tv-auth"
"airbnb/babel-plugin-dynamic-import-node" -> "airbnb/apollo-android"
"airbnb/babel-plugin-dynamic-import-node" -> "airbnb/brace"
"airbnb/babel-plugin-dynamic-import-node" -> "airbnb/alerts"
"airbnb/babel-plugin-dynamic-import-node" -> "airbnb/audited"
"airbnb/babel-plugin-dynamic-import-node" -> "airbnb/butterknife"
"airbnb/babel-plugin-dynamic-import-node" -> "airbnb/babel-plugin-dynamic-import-webpack"
"airbnb/babel-plugin-dynamic-import-node" -> "airbnb/aws-cli"
"airbnb/babel-plugin-dynamic-import-node" -> "airbnb/billow"
"airbnb/babel-plugin-dynamic-import-node" -> "airbnb/anotherlens"
"airbnb/babel-plugin-dynamic-import-node" -> "airbnb/Backbone-relational"
"airbnb/babel-plugin-dynamic-import-node" -> "airbnb/backbone.baseview"
"DataLinkDC/dinky" -> "DTStack/chunjun"
"DataLinkDC/dinky" -> "apache/incubator-streampark"
"DataLinkDC/dinky" -> "qlangtech/tis"
"DataLinkDC/dinky" -> "apache/linkis"
"DataLinkDC/dinky" -> "alldatacenter/alldata"
"DataLinkDC/dinky" -> "itinycheng/flink-connector-clickhouse" ["e"=1]
"DataLinkDC/dinky" -> "ververica/flink-cdc-connectors"
"DataLinkDC/dinky" -> "apache/incubator-paimon"
"DataLinkDC/dinky" -> "apache/incubator-seatunnel"
"DataLinkDC/dinky" -> "threeknowbigdata/flink_second_understand"
"DataLinkDC/dinky" -> "apache/kyuubi"
"DataLinkDC/dinky" -> "bytedance/bitsail"
"DataLinkDC/dinky" -> "apache/flink-table-store"
"DataLinkDC/dinky" -> "zhp8341/flink-streaming-platform-web"
"DataLinkDC/dinky" -> "flowerfine/scaleph"
"threeknowbigdata/flink_second_understand" -> "yangyichao-mango/flink-study"
"threeknowbigdata/flink_second_understand" -> "collabH/repository"
"threeknowbigdata/flink_second_understand" -> "HamaWhiteGG/flink-sql-lineage"
"threeknowbigdata/flink_second_understand" -> "zhp8341/flink-streaming-platform-web"
"threeknowbigdata/flink_second_understand" -> "intsmaze/flink-boot" ["e"=1]
"threeknowbigdata/flink_second_understand" -> "DataLinkDC/dlink"
"threeknowbigdata/flink_second_understand" -> "pierre94/flink-notes"
"threeknowbigdata/flink_second_understand" -> "czy006/FlinkClub"
"threeknowbigdata/flink_second_understand" -> "collabH/bigdata-growth"
"threeknowbigdata/flink_second_understand" -> "zhangjun0x01/bigdata-examples"
"threeknowbigdata/flink_second_understand" -> "ververica/flink-sql-cookbook"
"threeknowbigdata/flink_second_understand" -> "wxgzgl/LarkMidTable"
"threeknowbigdata/flink_second_understand" -> "DTStack/chunjun"
"threeknowbigdata/flink_second_understand" -> "perkinls/flink-local-train"
"threeknowbigdata/flink_second_understand" -> "luxiaoxun/eagle"
"Thpffcj/BigData-Getting-Started" -> "whirlys/BigData-In-Practice"
"Thpffcj/BigData-Getting-Started" -> "gingerredjade/flink-userportrait-main"
"Thpffcj/BigData-Getting-Started" -> "asdud/Bigdata_project"
"Thpffcj/BigData-Getting-Started" -> "TALKDATA/JavaBigData"
"Thpffcj/BigData-Getting-Started" -> "wlhbdp/bdp-platform"
"Thpffcj/BigData-Getting-Started" -> "realguoshuai/hadoop_study"
"Thpffcj/BigData-Getting-Started" -> "ljcan/SparkStreaming"
"Thpffcj/BigData-Getting-Started" -> "collabH/repository"
"Thpffcj/BigData-Getting-Started" -> "LuckyZXL2016/News_Spark"
"Thpffcj/BigData-Getting-Started" -> "Erik-ly/SprakProject"
"Thpffcj/BigData-Getting-Started" -> "xzt1995/Data-Warehouse"
"Thpffcj/BigData-Getting-Started" -> "oeljeklaus-you/UserActionAnalyzePlatform"
"Thpffcj/BigData-Getting-Started" -> "baolibin/Bigdata"
"Thpffcj/BigData-Getting-Started" -> "sunnyandgood/BigData"
"Thpffcj/BigData-Getting-Started" -> "Thpffcj/cloud-computing"
"apachecn/flink-doc-zh" -> "apachecn/hbase-doc-zh"
"apachecn/flink-doc-zh" -> "realguoshuai/hadoop_study"
"apachecn/flink-doc-zh" -> "apachecn/spark-doc-zh"
"apachecn/flink-doc-zh" -> "gingerredjade/flink-userportrait-main"
"apachecn/flink-doc-zh" -> "flink-china/flink-china-doc"
"apachecn/flink-doc-zh" -> "apachecn/kafka-doc-zh"
"apachecn/flink-doc-zh" -> "bethunebtj/flink_tutorial" ["e"=1]
"apachecn/flink-doc-zh" -> "zhangjun0x01/bigdata-examples"
"apachecn/flink-doc-zh" -> "flink-china/flink-training-course"
"apachecn/flink-doc-zh" -> "perkinls/flink-local-train"
"apachecn/flink-doc-zh" -> "DTStack/flinkStreamSQL"
"apachecn/flink-doc-zh" -> "hairless/plink"
"apachecn/flink-doc-zh" -> "CheckChe0803/flink-recommandSystem-demo"
"apachecn/flink-doc-zh" -> "ambition119/FlinkSQL" ["e"=1]
"apachecn/flink-doc-zh" -> "wuchong/my-flink-project"
"zhangjun0x01/bigdata-examples" -> "gingerredjade/flink-userportrait-main"
"zhangjun0x01/bigdata-examples" -> "springMoon/sqlSubmit"
"zhangjun0x01/bigdata-examples" -> "todd5167/flink-spark-submiter"
"zhangjun0x01/bigdata-examples" -> "collabH/repository"
"zhangjun0x01/bigdata-examples" -> "MeetYouDevs/big-whale"
"zhangjun0x01/bigdata-examples" -> "hairless/plink"
"zhangjun0x01/bigdata-examples" -> "wxgzgl/LarkMidTable"
"zhangjun0x01/bigdata-examples" -> "luxiaoxun/eagle"
"zhangjun0x01/bigdata-examples" -> "leesf/hudi-resources"
"zhangjun0x01/bigdata-examples" -> "zhaoyachao/zdh_web"
"zhangjun0x01/bigdata-examples" -> "zhuxiaoshang/flink-be-god"
"zhangjun0x01/bigdata-examples" -> "ververica/flink-sql-gateway"
"zhangjun0x01/bigdata-examples" -> "zhp8341/flink-streaming-platform-web"
"zhangjun0x01/bigdata-examples" -> "pierre94/flink-notes"
"zhangjun0x01/bigdata-examples" -> "xianqiangHub/flink-practice" ["e"=1]
"HiromuHota/webspoon-docker" -> "HiromuHota/pdi-git-plugin"
"HiromuHota/webspoon-docker" -> "HiromuHota/pentaho-kettle"
"yuqi1129/calcite-test" -> "quxiucheng/apache-calcite-tutorial"
"yuqi1129/calcite-test" -> "yuqi1129/schema"
"yuqi1129/calcite-test" -> "wangzzu/program-example"
"yuqi1129/calcite-test" -> "HamaWhiteGG/flink-sql-lineage"
"yuqi1129/calcite-test" -> "wuchong/flink-sql-submit"
"susanli2016/PySpark-and-MLlib" -> "PacktPublishing/Learning-PySpark"
"susanli2016/PySpark-and-MLlib" -> "susanli2016/Deep-Learning-with-deeplearning.ai"
"susanli2016/PySpark-and-MLlib" -> "srivatsan88/Mastering-Apache-Spark" ["e"=1]
"apache/flink-training" -> "apache/flink-playgrounds"
"apache/flink-training" -> "ververica/flink-sql-cookbook"
"apache/flink-training" -> "apache/flink-statefun"
"apache/flink-training" -> "ververica/flink-training-exercises"
"apache/flink-training" -> "ververica/sql-training"
"apache/flink-training" -> "cloudera/flink-tutorials"
"apache/flink-training" -> "streaming-with-flink/examples-java"
"apache/flink-training" -> "apache/bahir-flink"
"apache/flink-training" -> "apache/flink-benchmarks"
"apache/flink-training" -> "afedulov/fraud-detection-demo"
"apache/flink-training" -> "immerok/recipes"
"apache/flink-training" -> "zhangjun0x01/bigdata-examples"
"apache/flink-training" -> "streaming-with-flink/examples-scala"
"apache/flink-training" -> "ververica/flink-cdc-connectors"
"apache/flink-training" -> "ververica/flink-sql-gateway"
"czy006/FlinkClub" -> "yangyichao-mango/flink-study"
"czy006/FlinkClub" -> "threeknowbigdata/flink_second_understand"
"czy006/FlinkClub" -> "ververica/flink-cdc-connectors"
"czy006/FlinkClub" -> "springMoon/sqlSubmit"
"czy006/FlinkClub" -> "DataLinkDC/dlink"
"czy006/FlinkClub" -> "ververica/flink-sql-cookbook"
"czy006/FlinkClub" -> "streamxhub/streamx"
"czy006/FlinkClub" -> "luweizheng/flink-tutorials"
"uncleguanghui/pyflink_learn" -> "pyflink/playgrounds"
"uncleguanghui/pyflink_learn" -> "mukess/pyflink-demo"
"HiromuHota/pentaho-kettle" -> "HiromuHota/webspoon-docker"
"HiromuHota/pentaho-kettle" -> "zhaxiaodong9860/kettle-scheduler"
"HiromuHota/pentaho-kettle" -> "JoeyBling/webkettle"
"HiromuHota/pentaho-kettle" -> "xuanbo/kettle-web"
"HiromuHota/pentaho-kettle" -> "ziliang001/etl-kettle-web"
"HiromuHota/pentaho-kettle" -> "apache/incubator-hop"
"HiromuHota/pentaho-kettle" -> "HiromuHota/pdi-git-plugin"
"HiromuHota/pentaho-kettle" -> "majinju/kettle-manager"
"HiromuHota/pentaho-kettle" -> "pentaho/pentaho-kettle" ["e"=1]
"HiromuHota/pentaho-kettle" -> "young-datafan/data-integration" ["e"=1]
"HiromuHota/pentaho-kettle" -> "pentaho/big-data-plugin" ["e"=1]
"HiromuHota/pentaho-kettle" -> "apache/hop"
"HiromuHota/pentaho-kettle" -> "xiaoymin/KettleInAction100"
"HiromuHota/pentaho-kettle" -> "tlw-ray/pentaho-kettle-webspoon-0.8.1.17"
"HiromuHota/pentaho-kettle" -> "zhangrenhua/pentaho-kettle" ["e"=1]
"griddb/griddb_nosql" -> "pfnet/chainer" ["e"=1]
"griddb/griddb_nosql" -> "kairosdb/kairosdb"
"griddb/griddb_nosql" -> "crowi/crowi" ["e"=1]
"griddb/griddb_nosql" -> "biokoda/actordb" ["e"=1]
"griddb/griddb_nosql" -> "ucbrise/confluo" ["e"=1]
"griddb/griddb_nosql" -> "citusdata/cstore_fdw" ["e"=1]
"griddb/griddb_nosql" -> "griddb/python_client"
"griddb/griddb_nosql" -> "hatena/Hatena-Textbook" ["e"=1]
"griddb/griddb_nosql" -> "timescale/tsbs"
"griddb/griddb_nosql" -> "itamae-kitchen/itamae" ["e"=1]
"griddb/griddb_nosql" -> "rackerlabs/blueflood"
"griddb/griddb_nosql" -> "facebookincubator/beringei"
"griddb/griddb_nosql" -> "groonga/groonga" ["e"=1]
"griddb/griddb_nosql" -> "facebookincubator/LogDevice" ["e"=1]
"griddb/griddb_nosql" -> "cmu-db/peloton" ["e"=1]
"WeBankFinTech/Prophecis" -> "WeBankFinTech/Exchangis"
"WeBankFinTech/Prophecis" -> "WeBankFinTech/Schedulis"
"WeBankFinTech/Prophecis" -> "WeBankFinTech/Visualis"
"WeBankFinTech/Prophecis" -> "WeBankFinTech/Qualitis"
"WeBankFinTech/Prophecis" -> "WeBankFinTech/WeDataSphere"
"WeBankFinTech/Prophecis" -> "WeBankFinTech/Scriptis"
"WeBankFinTech/Prophecis" -> "WeBankFinTech/Linkis-Doc"
"WeBankFinTech/Prophecis" -> "WeBankFinTech/DataSphereStudio"
"WeBankFinTech/Prophecis" -> "tencentmusic/cube-studio" ["e"=1]
"WeBankFinTech/Prophecis" -> "WeBankFinTech/Streamis"
"WeBankFinTech/Prophecis" -> "WeBankFinTech/Linkis"
"WeBankFinTech/Prophecis" -> "shikanon/kubeflow-manifests" ["e"=1]
"WeBankFinTech/Prophecis" -> "apache/incubator-linkis"
"WeBankFinTech/Prophecis" -> "ysc/data-generator"
"WeBankFinTech/Prophecis" -> "edp963/moonbox"
"ekampf/PySpark-Boilerplate" -> "svenkreiss/pysparkling"
"ekampf/PySpark-Boilerplate" -> "AlexIoannides/pyspark-example-project"
"ekampf/PySpark-Boilerplate" -> "MrPowers/quinn"
"ekampf/PySpark-Boilerplate" -> "awesome-spark/spark-gotchas"
"ekampf/PySpark-Boilerplate" -> "awesome-spark/awesome-spark"
"ekampf/PySpark-Boilerplate" -> "mahmoudparsian/pyspark-tutorial"
"ekampf/PySpark-Boilerplate" -> "vivek-bombatkar/Databricks-Apache-Spark-2X-Certified-Developer"
"ekampf/PySpark-Boilerplate" -> "vivek-bombatkar/Spark-with-Python---My-learning-notes-"
"DTStack/chengying" -> "DTStack/DatasourceX"
"DTStack/chengying" -> "apache/incubator-seatunnel-web"
"ziliang001/etl-kettle-web" -> "JoeyBling/webkettle"
"ziliang001/etl-kettle-web" -> "xuanbo/kettle-web"
"ziliang001/etl-kettle-web" -> "aoju/kettle"
"ziliang001/etl-kettle-web" -> "haochenchn/kettle-springboot"
"ziliang001/etl-kettle-web" -> "zhaxiaodong9860/kettle-scheduler"
"ziliang001/etl-kettle-web" -> "xiaoymin/KettleInAction100"
"ziliang001/etl-kettle-web" -> "young-datafan/data-integration" ["e"=1]
"ziliang001/etl-kettle-web" -> "majinju/kettle-manager"
"ziliang001/etl-kettle-web" -> "jiangzongyao/kettle-master"
"ziliang001/etl-kettle-web" -> "classtag/OpenKettleWebUI"
"apache/submarine" -> "yaooqinn/kyuubi"
"apache/submarine" -> "apache/incubator-kyuubi"
"apache/submarine" -> "apache/hadoop-ozone" ["e"=1]
"apache/submarine" -> "yaooqinn/spark-ranger"
"apache/submarine" -> "linkedin/TonY" ["e"=1]
"apache/submarine" -> "hortonworks-spark/spark-atlas-connector" ["e"=1]
"apache/submarine" -> "apache/ranger"
"apache/submarine" -> "WeBankFinTech/Scriptis"
"apache/submarine" -> "ververica/flink-sql-gateway"
"apache/submarine" -> "Intel-bigdata/OAP"
"apache/submarine" -> "apache/iceberg"
"apache/submarine" -> "hadoopsubmarine/submarine" ["e"=1]
"apache/submarine" -> "apache/incubator-yunikorn-core"
"apache/submarine" -> "WeBankFinTech/Prophecis"
"apache/submarine" -> "apache/incubator-uniffle"
"polomarcus/Spark-Structured-Streaming-Examples" -> "ansrivas/spark-structured-streaming"
"polomarcus/Spark-Structured-Streaming-Examples" -> "holdenk/spark-structured-streaming-ml"
"polomarcus/Spark-Structured-Streaming-Examples" -> "jaceklaskowski/spark-structured-streaming-book"
"polomarcus/Spark-Structured-Streaming-Examples" -> "spirom/spark-streaming-with-kafka"
"polomarcus/Spark-Structured-Streaming-Examples" -> "AndrewKuzmin/spark-structured-streaming-examples"
"polomarcus/Spark-Structured-Streaming-Examples" -> "trK54Ylmz/kafka-spark-streaming-example"
"jpmml/jpmml-evaluator" -> "jpmml/sklearn2pmml"
"jpmml/jpmml-evaluator" -> "jpmml/jpmml-model"
"jpmml/jpmml-evaluator" -> "openscoring/openscoring"
"jpmml/jpmml-evaluator" -> "jpmml/jpmml-sklearn"
"jpmml/jpmml-evaluator" -> "jpmml/jpmml-sparkml"
"jpmml/jpmml-evaluator" -> "pjpan/PPJUtils"
"jpmml/jpmml-evaluator" -> "jpmml/jpmml-xgboost"
"jpmml/jpmml-evaluator" -> "jpmml/jpmml-lightgbm"
"jpmml/jpmml-evaluator" -> "combust/mleap"
"jpmml/jpmml-evaluator" -> "jpmml/jpmml-android"
"jpmml/jpmml-evaluator" -> "komiya-atsushi/xgboost-predictor-java" ["e"=1]
"jpmml/jpmml-evaluator" -> "jpmml/openscoring"
"jpmml/jpmml-evaluator" -> "ShifuML/shifu"
"jpmml/jpmml-evaluator" -> "FlinkML/flink-jpmml"
"jpmml/jpmml-evaluator" -> "jpmml/jpmml"
"timveil/hive-jdbc-uber-jar" -> "timveil/hive-jdbc-driver"
"timveil/hive-jdbc-uber-jar" -> "hortonworks/hive-testbench"
"whirlys/BigData-In-Practice" -> "Thpffcj/BigData-Getting-Started"
"whirlys/BigData-In-Practice" -> "monsonlee/BigData"
"whirlys/BigData-In-Practice" -> "LuckyZXL2016/News_Spark"
"whirlys/BigData-In-Practice" -> "WadeStack/BigDataIE"
"whirlys/BigData-In-Practice" -> "sunnyandgood/BigData"
"whirlys/BigData-In-Practice" -> "asdud/Bigdata_project"
"whirlys/BigData-In-Practice" -> "sakura521/wifiProject"
"whirlys/BigData-In-Practice" -> "TALKDATA/JavaBigData"
"whirlys/BigData-In-Practice" -> "yangtong123/StudySpark"
"whirlys/BigData-In-Practice" -> "realguoshuai/hadoop_study"
"whirlys/BigData-In-Practice" -> "Erik-ly/SprakProject"
"whirlys/BigData-In-Practice" -> "ljcan/SparkStreaming"
"whirlys/BigData-In-Practice" -> "oeljeklaus-you/UserActionAnalyzePlatform"
"whirlys/BigData-In-Practice" -> "CheckChe0803/BigData-Interview"
"whirlys/BigData-In-Practice" -> "SwordfallYeung/Interview_BigData"
"fayson/cdh-autouninstall" -> "fayson/hbaseexport"
"leiguorui/programming-video-tutorials" -> "vbay/big-data"
"leiguorui/programming-video-tutorials" -> "oeljeklaus-you/JavaOrBigData-Interview"
"prestosql/presto" -> "airlift/airlift"
"prestosql/presto" -> "dotnet/docs.es-es" ["e"=1]
"prestosql/presto" -> "prestodb/presto"
"prestosql/presto" -> "kata-containers/packaging" ["e"=1]
"prestosql/presto" -> "lyft/presto-gateway"
"prestosql/presto" -> "analysys/presto-hbase-connector"
"prestosql/presto" -> "linkedin/coral"
"prestosql/presto" -> "apache/incubator-iceberg"
"prestosql/presto" -> "box/box-ui-elements" ["e"=1]
"prestosql/presto" -> "apache/calcite"
"prestosql/presto" -> "yanagishima/yanagishima"
"prestosql/presto" -> "dropbox/PyHive"
"prestosql/presto" -> "linkedin/transport"
"prestosql/presto" -> "apache/ranger"
"prestosql/presto" -> "apache/atlas" ["e"=1]
"twitter/hadoop-lzo" -> "kevinweil/hadoop-lzo" ["e"=1]
"twitter/hadoop-lzo" -> "twitter/elephant-bird"
"twitter/hadoop-lzo" -> "kevinweil/elephant-bird" ["e"=1]
"twitter/hadoop-lzo" -> "apache/oozie"
"twitter/hadoop-lzo" -> "linkedin/camus"
"twitter/hadoop-lzo" -> "electrum/hadoop-snappy"
"twitter/hadoop-lzo" -> "carlomedas/4mc"
"twitter/hadoop-lzo" -> "apache/pig"
"twitter/hadoop-lzo" -> "twitter/hdfs-du" ["e"=1]
"zhihuili/flower" -> "itisaid/sokeeper"
"zhihuili/flower" -> "itisaid/Doris"
"zhihuili/flower" -> "zhihuili/Dew"
"zhihuili/flower" -> "ppdaicorp/pmq" ["e"=1]
"zhihuili/flower" -> "JavaCourse00/JavaCourseCodes" ["e"=1]
"zhihuili/flower" -> "geektime-geekbang/staffjoy" ["e"=1]
"zhihuili/flower" -> "wangzheng0822/ratelimiter4j" ["e"=1]
"zhihuili/flower" -> "mercyblitz/geekbang-lessons" ["e"=1]
"zhihuili/flower" -> "liyue2008/simple-rpc-framework" ["e"=1]
"longyinzaitian/HadoopDemo" -> "chu888chu888/HadoopAndSparkDataStudy"
"huzekang/springboot-datax" -> "zipingdong/datax-web"
"huzekang/springboot-datax" -> "zhouhongfa/datax-vue-admin"
"huzekang/springboot-datax" -> "Jawf/DataX-Migration"
"huzekang/springboot-datax" -> "TianLangStudio/DataXServer"
"huzekang/springboot-datax" -> "hanson007/FirstBlood"
"huzekang/springboot-datax" -> "codingdebugallday/common-datax"
"huzekang/springboot-datax" -> "luoce/bt-ware-datasync-datax"
"implydata/plyql" -> "implydata/plywood"
"implydata/plyql" -> "srikalyc/Sql4D"
"implydata/plyql" -> "implydata/druid"
"implydata/plyql" -> "druid-io/tranquility"
"implydata/plyql" -> "metamx/druid-spark-batch"
"cloudera-labs/SparkOnHBase" -> "nerdammer/spark-hbase-connector"
"cloudera-labs/SparkOnHBase" -> "unicredit/hbase-rdd"
"cloudera-labs/SparkOnHBase" -> "hortonworks-spark/shc"
"cloudera-labs/SparkOnHBase" -> "Huawei-Spark/Spark-SQL-on-HBase"
"cloudera-labs/SparkOnHBase" -> "apache/hbase-connectors"
"cloudera-labs/SparkOnHBase" -> "tmalaska/SparkOnHBase"
"cloudera-labs/SparkOnHBase" -> "Intel-bigdata/spark-streamingsql"
"cloudera-labs/SparkOnHBase" -> "NGDATA/hbase-indexer" ["e"=1]
"MeetYouDevs/big-whale" -> "hairless/plink"
"MeetYouDevs/big-whale" -> "todd5167/flink-spark-submiter"
"MeetYouDevs/big-whale" -> "wxgzgl/LarkMidTable"
"MeetYouDevs/big-whale" -> "springMoon/sqlSubmit"
"MeetYouDevs/big-whale" -> "collabH/repository"
"MeetYouDevs/big-whale" -> "zhangjun0x01/bigdata-examples"
"MeetYouDevs/big-whale" -> "gingerredjade/flink-userportrait-main"
"MeetYouDevs/big-whale" -> "zhp8341/flink-streaming-platform-web"
"MeetYouDevs/big-whale" -> "leesf/hudi-resources"
"MeetYouDevs/big-whale" -> "ververica/flink-sql-gateway"
"MeetYouDevs/big-whale" -> "zhaoyachao/zdh_web"
"MeetYouDevs/big-whale" -> "wlhbdp/bdp-dataplatform"
"MeetYouDevs/big-whale" -> "binglind/alchemy"
"MeetYouDevs/big-whale" -> "Hyhyhyhyhyhyh/Django-Data-quality-system"
"MeetYouDevs/big-whale" -> "wxgzgl/flinkx-web"
"apache/incubator-seatunnel-web" -> "apache/incubator-seatunnel-website"
"apache/incubator-seatunnel-web" -> "flowerfine/scaleph"
"Apache-Flink-Docs-ZH/Apache-Flink-Docs-ZH-translation" -> "flink-china/flink-china-doc"
"Apache-Flink-Docs-ZH/Apache-Flink-Docs-ZH-translation" -> "wuchong/awesome-flink"
"Apache-Flink-Docs-ZH/Apache-Flink-Docs-ZH-translation" -> "flink-china/flink-forward-china-2018"
"Apache-Flink-Docs-ZH/Apache-Flink-Docs-ZH-translation" -> "lw-lin/streaming-readings"
"Apache-Flink-Docs-ZH/Apache-Flink-Docs-ZH-translation" -> "DTStack/flinkStreamSQL"
"Apache-Flink-Docs-ZH/Apache-Flink-Docs-ZH-translation" -> "danny0405/flink-source-code-analysis"
"Apache-Flink-Docs-ZH/Apache-Flink-Docs-ZH-translation" -> "uber/AthenaX"
"Apache-Flink-Docs-ZH/Apache-Flink-Docs-ZH-translation" -> "harbby/sylph"
"Apache-Flink-Docs-ZH/Apache-Flink-Docs-ZH-translation" -> "flink-china/flink-training-course"
"Apache-Flink-Docs-ZH/Apache-Flink-Docs-ZH-translation" -> "wuchong/my-flink-project"
"Apache-Flink-Docs-ZH/Apache-Flink-Docs-ZH-translation" -> "lw-lin/CoolplaySpark"
"Apache-Flink-Docs-ZH/Apache-Flink-Docs-ZH-translation" -> "edp963/wormhole"
"Apache-Flink-Docs-ZH/Apache-Flink-Docs-ZH-translation" -> "dataArtisans/flink-training-exercises"
"Apache-Flink-Docs-ZH/Apache-Flink-Docs-ZH-translation" -> "apache/flink-web"
"Apache-Flink-Docs-ZH/Apache-Flink-Docs-ZH-translation" -> "apache/bahir-flink"
"hanson007/FirstBlood" -> "huzekang/springboot-datax"
"hanson007/FirstBlood" -> "zipingdong/datax-web"
"hanson007/FirstBlood" -> "hellobike/tunnel" ["e"=1]
"hanson007/FirstBlood" -> "HashDataInc/bireme" ["e"=1]
"hanson007/FirstBlood" -> "hanson007/YGOL"
"hanson007/FirstBlood" -> "edp963/moonbox"
"hanson007/FirstBlood" -> "WeiYe-Jing/datax-web-ui"
"linkedin/coral" -> "linkedin/transport"
"linkedin/coral" -> "lyft/presto-gateway"
"linkedin/coral" -> "oap-project/gluten"
"linkedin/coral" -> "airlift/airlift"
"linkedin/coral" -> "oap-project/gazelle_plugin"
"linkedin/coral" -> "alibaba/RemoteShuffleService"
"linkedin/coral" -> "uber/RemoteShuffleService"
"linkedin/coral" -> "projectnessie/nessie"
"linkedin/coral" -> "NetEase/arctic"
"linkedin/coral" -> "facebookincubator/velox" ["e"=1]
"linkedin/coral" -> "Tencent/Firestorm"
"linkedin/coral" -> "apache/incubator-iceberg"
"linkedin/coral" -> "apache/incubator-kyuubi"
"linkedin/coral" -> "substrait-io/substrait" ["e"=1]
"linkedin/coral" -> "YotpoLtd/metorikku"
"apache/carbondata" -> "apache/kylin"
"apache/carbondata" -> "apache/incubator-livy"
"apache/carbondata" -> "apache/kudu"
"apache/carbondata" -> "allwefantasy/streamingpro"
"apache/carbondata" -> "apache/incubator-hudi"
"apache/carbondata" -> "apache/impala"
"apache/carbondata" -> "QiangCai/carbondata_guide"
"apache/carbondata" -> "apache/drill"
"apache/carbondata" -> "InterestingLab/waterdrop"
"apache/carbondata" -> "apache/phoenix"
"apache/carbondata" -> "apache/calcite"
"apache/carbondata" -> "apache/ambari"
"apache/carbondata" -> "apache/griffin"
"apache/carbondata" -> "linkedin/coral"
"apache/carbondata" -> "apache/iceberg"
"ruisibi/rsbi-pom" -> "ruisibi/olap"
"ruisibi/rsbi-pom" -> "baidu/BIPlatform"
"ruisibi/rsbi-pom" -> "ruisibi/rsbi-vue"
"ruisibi/rsbi-pom" -> "TuiQiao/CBoard"
"ruisibi/rsbi-pom" -> "wangyapu0714/DataVisual" ["e"=1]
"intel-hadoop/HiTune" -> "chubbyjiang/MapReduce"
"intel-hadoop/HiTune" -> "intel-hadoop/HiBench"
"intel-hadoop/HiTune" -> "intel-hadoop/project-panthera"
"apache/incubator-toree" -> "ibm-et/spark-kernel"
"apache/incubator-toree" -> "alexarchambault/jupyter-scala" ["e"=1]
"apache/incubator-toree" -> "vegas-viz/Vegas" ["e"=1]
"apache/incubator-toree" -> "jupyter-incubator/sparkmagic"
"apache/incubator-toree" -> "cloudera/livy"
"apache/incubator-toree" -> "apache/incubator-livy"
"apache/incubator-toree" -> "databricks/tensorframes"
"apache/incubator-toree" -> "andypetrella/spark-notebook"
"apache/incubator-toree" -> "spark-jobserver/spark-jobserver"
"apache/incubator-toree" -> "h2oai/sparkling-water"
"apache/incubator-toree" -> "amplab/keystone"
"apache/incubator-toree" -> "apache/incubator-zeppelin"
"apache/incubator-toree" -> "minrk/findspark"
"apache/incubator-toree" -> "mozilla/jupyter-spark"
"apache/incubator-toree" -> "almond-sh/almond" ["e"=1]
"alibaba/feathub" -> "flink-extended/feathub-examples"
"alibaba/feathub" -> "flink-extended/flink-remote-shuffle"
"alibaba/feathub" -> "apache/flink-table-store"
"alibaba/feathub" -> "apache/flink-benchmarks"
"alibaba/feathub" -> "apache/flink-ml"
"alibaba/feathub" -> "immerok/recipes"
"alibaba/feathub" -> "flink-extended/ai-flow"
"alibaba/feathub" -> "alibaba/pemja"
"laoyang360/deep_elasticsearch" -> "medcl/book-elastic-search-in-action" ["e"=1]
"laoyang360/deep_elasticsearch" -> "felayman/elasticsearch-full"
"XD-DENG/Spark-practice" -> "tirthajyoti/Spark-with-Python"
"XD-DENG/Spark-practice" -> "Pushkr/Apache-Spark-Hands-On"
"XD-DENG/Spark-practice" -> "drabastomek/learningPySpark"
"XD-DENG/Spark-practice" -> "mahmoudparsian/pyspark-tutorial"
"XD-DENG/Spark-practice" -> "jadianes/spark-py-notebooks"
"XD-DENG/Spark-practice" -> "UrbanInstitute/pyspark-tutorials"
"XD-DENG/Spark-practice" -> "abulbasar/pyspark-examples"
"XD-DENG/Spark-practice" -> "PacktPublishing/Learning-PySpark"
"XD-DENG/Spark-practice" -> "XD-DENG/Spark-ML-Intro"
"LearningJournal/Spark-Programming-In-Python" -> "LearningJournal/Spark-Streaming-In-Python"
"LearningJournal/Spark-Programming-In-Python" -> "LearningJournal/SparkProgrammingInScala"
"LearningJournal/Spark-Programming-In-Python" -> "LearningJournal/Python-Foundation-Course"
"LearningJournal/Spark-Programming-In-Python" -> "LearningJournal/Spark-Streaming-In-Scala"
"TALKDATA/JavaBigData" -> "WadeStack/BigDataIE"
"TALKDATA/JavaBigData" -> "whirlys/BigData-In-Practice"
"TALKDATA/JavaBigData" -> "CheckChe0803/BigData-Interview"
"TALKDATA/JavaBigData" -> "Dr11ft/BigDataGuide"
"TALKDATA/JavaBigData" -> "sunnyandgood/BigData"
"TALKDATA/JavaBigData" -> "realguoshuai/hadoop_study"
"TALKDATA/JavaBigData" -> "Thpffcj/BigData-Getting-Started"
"TALKDATA/JavaBigData" -> "SwordfallYeung/Interview_BigData"
"TALKDATA/JavaBigData" -> "oeljeklaus-you/JavaOrBigData-Interview"
"TALKDATA/JavaBigData" -> "fenglei110/DataWarehouse"
"TALKDATA/JavaBigData" -> "Zouxxyy/bigdata-learning"
"TALKDATA/JavaBigData" -> "houshanren/big_data_architect_skills"
"TALKDATA/JavaBigData" -> "yangtong123/StudySpark"
"TALKDATA/JavaBigData" -> "monsonlee/BigData"
"TALKDATA/JavaBigData" -> "zhutiansama/FocusBigData"
"monsonlee/BigData" -> "sunnyandgood/BigData"
"monsonlee/BigData" -> "whirlys/BigData-In-Practice"
"monsonlee/BigData" -> "weiweifan/Big-Data-Resources"
"monsonlee/BigData" -> "SwordfallYeung/Interview_BigData"
"monsonlee/BigData" -> "asdud/Bigdata_project"
"monsonlee/BigData" -> "realguoshuai/hadoop_study"
"monsonlee/BigData" -> "oeljeklaus-you/UserActionAnalyzePlatform"
"monsonlee/BigData" -> "WadeStack/BigDataIE"
"monsonlee/BigData" -> "LuckyZXL2016/News_Spark"
"monsonlee/BigData" -> "CheckChe0803/BigData-Interview"
"monsonlee/BigData" -> "appleappleapple/BigDataLearning"
"monsonlee/BigData" -> "oeljeklaus-you/JavaOrBigData-Interview"
"monsonlee/BigData" -> "houshanren/big_data_architect_skills"
"monsonlee/BigData" -> "wanghan0501/WiFiProbeAnalysis"
"monsonlee/BigData" -> "liguozhong/demo_11.11_storm-spark-hadoop"
"wlhbdp/bdp-platform" -> "wlhbdp/bdp-ecology"
"wlhbdp/bdp-platform" -> "collabH/repository"
"wlhbdp/bdp-platform" -> "Thpffcj/BigData-Getting-Started"
"wlhbdp/bdp-platform" -> "wxgzgl/LarkMidTable"
"csy512889371/learnDoc" -> "csy512889371/learndemo"
"csy512889371/learnDoc" -> "houshanren/big_data_architect_skills"
"flink-china/flink-forward-asia-hackathon-2021" -> "flink-extended/flink-dynamic-storage"
"flink-china/flink-forward-asia-hackathon-2021" -> "flink-extended/flink-remote-shuffle"
"flink-china/flink-forward-asia-hackathon-2021" -> "apache/flink-ml"
"flink-china/flink-forward-asia-hackathon-2021" -> "apache/flink-table-store"
"intel-hadoop/Big-Data-Benchmark-for-Big-Bench" -> "intel-hadoop/PAT"
"twitter/elephant-bird" -> "twitter/hadoop-lzo"
"twitter/elephant-bird" -> "linkedin/camus"
"twitter/elephant-bird" -> "linkedin/gobblin"
"twitter/elephant-bird" -> "twitter/hraven" ["e"=1]
"wyukawa/yanagishima" -> "tagomoris/shib"
"wyukawa/yanagishima" -> "prestodb/presto-admin" ["e"=1]
"mahmoudparsian/data-algorithms-book" -> "sryza/aas"
"mahmoudparsian/data-algorithms-book" -> "databricks/learning-spark"
"mahmoudparsian/data-algorithms-book" -> "databricks/reference-apps"
"mahmoudparsian/data-algorithms-book" -> "jaceklaskowski/mastering-apache-spark-book"
"mahmoudparsian/data-algorithms-book" -> "endymecy/spark-ml-source-analysis"
"mahmoudparsian/data-algorithms-book" -> "mahmoudparsian/big-data-mapreduce-course"
"mahmoudparsian/data-algorithms-book" -> "larsgeorge/hbase-book" ["e"=1]
"mahmoudparsian/data-algorithms-book" -> "spark-jobserver/spark-jobserver"
"mahmoudparsian/data-algorithms-book" -> "spark-notebook/spark-notebook"
"mahmoudparsian/data-algorithms-book" -> "linkedin/dr-elephant"
"mahmoudparsian/data-algorithms-book" -> "lw-lin/CoolplaySpark"
"mahmoudparsian/data-algorithms-book" -> "OryxProject/oryx" ["e"=1]
"mahmoudparsian/data-algorithms-book" -> "adamjshook/mapreducepatterns" ["e"=1]
"mahmoudparsian/data-algorithms-book" -> "spirom/LearningSpark"
"mahmoudparsian/data-algorithms-book" -> "JerryLead/SparkInternals"
"wlhbdp/bdp-dataplatform" -> "wlhbdp/bdp-ecology"
"wlhbdp/bdp-dataplatform" -> "MeetYouDevs/big-whale"
"wlhbdp/bdp-dataplatform" -> "wxgzgl/flinkx-web"
"wlhbdp/bdp-dataplatform" -> "zhaoyachao/zdh_web"
"wlhbdp/bdp-dataplatform" -> "wlhbdp/bdp-gold"
"wlhbdp/bdp-dataplatform" -> "wlhbdp/bdp-base"
"wlhbdp/bdp-dataplatform" -> "oeljeklaus-you/UserActionAnalyzePlatform"
"wlhbdp/bdp-dataplatform" -> "bluishglc/bdp"
"wlhbdp/bdp-dataplatform" -> "wxgzgl/LarkMidTable"
"wlhbdp/bdp-dataplatform" -> "ziliang001/etl-kettle-web"
"ruisibi/rsbi-os" -> "ruisibi/rsbi-vue"
"apache/rocketmq-connect" -> "apache/rocketmq-schema-registry"
"apache/rocketmq-connect" -> "apache/rocketmq-streams"
"apache/rocketmq-connect" -> "apache/rocketmq-eventbridge"
"apache/rocketmq-connect" -> "alibaba/rsqldb"
"facebookarchive/beringei" -> "burmanm/gorilla-tsc"
"facebookarchive/beringei" -> "BTrDB/btrdb-server"
"facebookarchive/beringei" -> "timescale/tsbs"
"facebookarchive/beringei" -> "prometheus/tsdb" ["e"=1]
"facebookarchive/beringei" -> "akumuli/Akumuli"
"facebookarchive/beringei" -> "dgryski/go-tsz"
"facebookarchive/beringei" -> "thulab/iotdb-benchmark"
"facebookarchive/beringei" -> "pinterest/rocksplicator" ["e"=1]
"facebookarchive/beringei" -> "influxdata/influxdb_iox" ["e"=1]
"facebookarchive/beringei" -> "logcabin/logcabin" ["e"=1]
"facebookarchive/beringei" -> "zrlio/disni" ["e"=1]
"facebookarchive/beringei" -> "facebookincubator/LogDevice" ["e"=1]
"facebookarchive/beringei" -> "efficient/SuRF" ["e"=1]
"facebookarchive/beringei" -> "lindb/lindb" ["e"=1]
"facebookarchive/beringei" -> "m3db/m3" ["e"=1]
"linkedin/URL-Detector" -> "URL-Detector/URL-Detector"
"linkedin/URL-Detector" -> "linkedin/parseq"
"linkedin/URL-Detector" -> "linkedin/PalDB" ["e"=1]
"linkedin/URL-Detector" -> "robinst/autolink-java"
"linkedin/URL-Detector" -> "CognitiveJ/cognitivej"
"linkedin/URL-Detector" -> "shekhargulati/strman-java" ["e"=1]
"shunfei/DCMonitor" -> "shunfei/aproxy"
"shunfei/DCMonitor" -> "shunfei/flume-plugin"
"wuchong/my-flink-project" -> "wuchong/flink-sql-submit"
"wuchong/my-flink-project" -> "flink-china/flink-forward-china-2018"
"wuchong/my-flink-project" -> "flink-china/flink-china-doc"
"wuchong/my-flink-project" -> "danny0405/flink-source-code-analysis"
"wuchong/my-flink-project" -> "ververica/sql-training"
"wuchong/my-flink-project" -> "harbby/sylph"
"wuchong/my-flink-project" -> "bethunebtj/flink_tutorial" ["e"=1]
"wuchong/my-flink-project" -> "dataArtisans/flink-training-exercises"
"wuchong/my-flink-project" -> "ververica/flink-training-exercises"
"wuchong/my-flink-project" -> "opensourceteams/flink-maven-scala"
"wuchong/my-flink-project" -> "liguohua-bigdata/simple-flink"
"wuchong/my-flink-project" -> "hequn8128/TableApiDemo"
"wuchong/my-flink-project" -> "CheckChe0803/flink-simple-tutorial"
"wuchong/my-flink-project" -> "dataArtisans/flink-streaming-demo"
"wuchong/my-flink-project" -> "Apache-Flink-Docs-ZH/Apache-Flink-Docs-ZH-translation"
"apache/solr" -> "apache/lucene"
"apache/solr" -> "apache/lucene-solr"
"apache/solr" -> "apache/cassandra"
"apache/solr" -> "apache/hbase"
"apache/solr" -> "voldemort/voldemort" ["e"=1]
"apache/solr" -> "spring-projects/spring-data-solr" ["e"=1]
"apache/solr" -> "apache/solr-operator"
"apache/solr" -> "apache/nutch" ["e"=1]
"apache/solr" -> "apache/pig"
"apache/solr" -> "apache/tika"
"apache/solr" -> "apache/httpd" ["e"=1]
"apache/solr" -> "apache/flume"
"apache/solr" -> "apache/hive"
"apache/solr" -> "apache/couchdb" ["e"=1]
"apache/solr" -> "apache/hadoop-common"
"killrweather/killrweather" -> "datastax/spark-cassandra-connector"
"killrweather/killrweather" -> "databricks/reference-apps"
"killrweather/killrweather" -> "andypetrella/spark-notebook"
"killrweather/killrweather" -> "miguno/kafka-storm-starter" ["e"=1]
"killrweather/killrweather" -> "krasserm/akka-analytics" ["e"=1]
"killrweather/killrweather" -> "pcmanus/ccm" ["e"=1]
"killrweather/killrweather" -> "theiterators/akka-http-microservice" ["e"=1]
"killrweather/killrweather" -> "spark-jobserver/spark-jobserver"
"killrweather/killrweather" -> "twitter/algebird" ["e"=1]
"killrweather/killrweather" -> "OryxProject/oryx" ["e"=1]
"killrweather/killrweather" -> "RBMHTechnology/eventuate" ["e"=1]
"killrweather/killrweather" -> "eligosource/eventsourced" ["e"=1]
"killrweather/killrweather" -> "alexandru/scala-best-practices" ["e"=1]
"killrweather/killrweather" -> "pkinsky/akka-streams-example" ["e"=1]
"killrweather/killrweather" -> "vkostyukov/scalacaster" ["e"=1]
"shijinkui/spark_study" -> "endymecy/spark-graphx-source-analysis"
"shijinkui/spark_study" -> "linbojin/spark-notes"
"shijinkui/spark_study" -> "pusuo/spark_meetup"
"shijinkui/spark_study" -> "xubo245/SparkLearning"
"shijinkui/spark_study" -> "keepsimplefocus/spark-sourcecodes-analysis"
"shijinkui/spark_study" -> "ColZer/DigAndBuried"
"shijinkui/spark_study" -> "endymecy/spark-ml-source-analysis"
"shijinkui/spark_study" -> "LinMingQiang/spark-util"
"shijinkui/spark_study" -> "lw-lin/CoolplaySpark"
"shijinkui/spark_study" -> "allwefantasy/streamingpro"
"apache/rocketmq-clients" -> "apache/rocketmq-schema-registry"
"apache/rocketmq-clients" -> "alibaba/rsqldb"
"apache/rocketmq-clients" -> "apache/rocketmq-mqtt"
"apache/rocketmq-clients" -> "apache/rocketmq-apis"
"HY-ZhengWei/HBaseClient" -> "sdksdk0/Elasticsearch-Hbase"
"yangtong123/StudySpark" -> "yangtong123/RoadOfStudySpark"
"yangtong123/StudySpark" -> "qiushangwenyue/Interview_BigData"
"yangtong123/StudySpark" -> "Erik-ly/SprakProject"
"yangtong123/StudySpark" -> "LuckyZXL2016/News_Spark"
"yangtong123/StudySpark" -> "ljcan/SparkStreaming"
"yangtong123/StudySpark" -> "LinMingQiang/spark-util"
"yangtong123/StudySpark" -> "whirlys/BigData-In-Practice"
"yangtong123/StudySpark" -> "GuoNingNing/fire-spark"
"yangtong123/StudySpark" -> "teeyog/IQL"
"xiaoymin/KettleInAction100" -> "ziliang001/etl-kettle-web"
"xiaoymin/KettleInAction100" -> "copywang/kettleNotebook"
"xiaoymin/KettleInAction100" -> "xuanbo/kettle-web"
"xiaoymin/KettleInAction100" -> "pentaho/pdi-sdk-plugins" ["e"=1]
"cjuexuan/mynote" -> "teeyog/IQL"
"cjuexuan/mynote" -> "keepsimplefocus/spark-sourcecodes-analysis"
"cjuexuan/mynote" -> "allwefantasy/streamingpro"
"cjuexuan/mynote" -> "yaooqinn/spark-authorizer"
"cjuexuan/mynote" -> "teeyog/blog"
"cjuexuan/mynote" -> "yaooqinn/kyuubi"
"cjuexuan/mynote" -> "liancheng/spear"
"cjuexuan/mynote" -> "harbby/sylph"
"cjuexuan/mynote" -> "linbojin/spark-notes"
"cjuexuan/mynote" -> "passionke/starry"
"cjuexuan/mynote" -> "edp963/wormhole"
"ionvision/DeepLearningCourseCodes" -> "wiibrew/DeepLearningCourseCodes"
"confucianzuoyuan/flink-tutorial" -> "hairless/plink"
"confucianzuoyuan/flink-tutorial" -> "confucianzuoyuan/mini-flink"
"confucianzuoyuan/flink-tutorial" -> "zhangjun0x01/bigdata-examples"
"confucianzuoyuan/flink-tutorial" -> "perkinls/flink-local-train"
"confucianzuoyuan/flink-tutorial" -> "wushengran/FlinkTutorial"
"streamnative/rop" -> "streamnative/aop"
"majinju/kettle-manager" -> "JoeyBling/webkettle"
"majinju/kettle-manager" -> "zhaxiaodong9860/kettle-scheduler"
"majinju/kettle-manager" -> "konglinghai123/kettle"
"majinju/kettle-manager" -> "xuanbo/kettle-web"
"majinju/kettle-manager" -> "classtag/OpenKettleWebUI"
"majinju/kettle-manager" -> "konglinghai123/renren_kettle"
"majinju/kettle-manager" -> "ziliang001/etl-kettle-web"
"majinju/kettle-manager" -> "zllkyo/kettle-manager"
"majinju/kettle-manager" -> "pentaho/pentaho-kettle" ["e"=1]
"majinju/kettle-manager" -> "majinju/KettleEasyExpand"
"majinju/kettle-manager" -> "839536/kettle"
"majinju/kettle-manager" -> "pentaho/big-data-plugin" ["e"=1]
"majinju/kettle-manager" -> "zhaodongxx/awesome-kettle"
"majinju/kettle-manager" -> "HiromuHota/pentaho-kettle"
"majinju/kettle-manager" -> "hanson007/FirstBlood"
"wuchong/flink-sql-submit" -> "ververica/sql-training"
"wuchong/flink-sql-submit" -> "binglind/alchemy"
"wuchong/flink-sql-submit" -> "ververica/flink-sql-gateway"
"wuchong/flink-sql-submit" -> "harbby/sylph"
"wuchong/flink-sql-submit" -> "DTStack/flinkStreamSQL"
"wuchong/flink-sql-submit" -> "springMoon/sqlSubmit"
"wuchong/flink-sql-submit" -> "fhueske/flink-sql-demo"
"wuchong/flink-sql-submit" -> "hairless/plink"
"wuchong/flink-sql-submit" -> "wuchong/my-flink-project"
"wuchong/flink-sql-submit" -> "apache/bahir-flink"
"wuchong/flink-sql-submit" -> "wuchong/flink-sql-demo"
"wuchong/flink-sql-submit" -> "yuqi1129/calcite-test"
"wuchong/flink-sql-submit" -> "alibaba/alibaba-flink-connectors"
"wuchong/flink-sql-submit" -> "quxiucheng/apache-calcite-tutorial"
"wuchong/flink-sql-submit" -> "zhp8341/flink-streaming-platform-web"
"zbwfisher1/vue-metadata" -> "moutainhigh/datax-cloud-base"
"zbwfisher1/vue-metadata" -> "jacksoup/hiveMetaMgr"
"zbwfisher1/vue-metadata" -> "houbb/metadata"
"zbwfisher1/vue-metadata" -> "Hyhyhyhyhyhyh/Django-Data-quality-system"
"zbwfisher1/vue-metadata" -> "abel533/DBMetadata"
"zbwfisher1/vue-metadata" -> "zhaoyachao/zdh_web"
"alldatacenter/alldata" -> "birdLark/LarkMidTable"
"alldatacenter/alldata" -> "datasophon/datasophon"
"alldatacenter/alldata" -> "moutainhigh/datax-cloud-base"
"alldatacenter/alldata" -> "qlangtech/tis"
"alldatacenter/alldata" -> "cubefs/compass"
"alldatacenter/alldata" -> "collabH/bigdata-growth"
"alldatacenter/alldata" -> "apache/incubator-streampark"
"alldatacenter/alldata" -> "DataLinkDC/dinky"
"alldatacenter/alldata" -> "DTStack/chengying"
"alldatacenter/alldata" -> "DTStack/chunjun"
"alldatacenter/alldata" -> "apache/incubator-hugegraph"
"alldatacenter/alldata" -> "datavines-ops/datavines"
"alldatacenter/alldata" -> "zhp8341/flink-streaming-platform-web"
"alldatacenter/alldata" -> "WeBankFinTech/DataSphereStudio"
"databricks/mlflow" -> "databricks/spark-deep-learning"
"databricks/mlflow" -> "Pulkit-Khandelwal/Reinforcement-Learning-Notebooks" ["e"=1]
"databricks/mlflow" -> "salesforce/decaNLP" ["e"=1]
"databricks/mlflow" -> "combust/mleap"
"databricks/mlflow" -> "allwefantasy/streamingpro"
"databricks/mlflow" -> "Featuretools/featuretools" ["e"=1]
"databricks/mlflow" -> "salesforce/TransmogrifAI" ["e"=1]
"databricks/mlflow" -> "yahoo/TensorFlowOnSpark"
"databricks/mlflow" -> "ucbrise/clipper" ["e"=1]
"databricks/mlflow" -> "uber/horovod" ["e"=1]
"databricks/mlflow" -> "databricks/koalas" ["e"=1]
"databricks/mlflow" -> "mitdbg/modeldb" ["e"=1]
"databricks/mlflow" -> "Azure/mmlspark"
"databricks/mlflow" -> "databricks/spark-sklearn"
"databricks/mlflow" -> "Tencent/angel"
"airbnb/babel-plugin-dynamic-import-webpack" -> "airbnb/appear"
"airbnb/babel-plugin-dynamic-import-webpack" -> "airbnb/android-mapviewballoons"
"airbnb/babel-plugin-dynamic-import-webpack" -> "airbnb/bugsnag-android"
"airbnb/babel-plugin-dynamic-import-webpack" -> "airbnb/aws-cli"
"airbnb/babel-plugin-dynamic-import-webpack" -> "airbnb/brace"
"airbnb/babel-plugin-dynamic-import-webpack" -> "airbnb/audited"
"airbnb/babel-plugin-dynamic-import-webpack" -> "airbnb/apple-tv-auth"
"airbnb/babel-plugin-dynamic-import-webpack" -> "airbnb/apollo-android"
"airbnb/babel-plugin-dynamic-import-webpack" -> "airbnb/Backbone-relational"
"airbnb/babel-plugin-dynamic-import-webpack" -> "airbnb/butterknife"
"airbnb/babel-plugin-dynamic-import-webpack" -> "airbnb/brakeman"
"airbnb/babel-plugin-dynamic-import-webpack" -> "airbnb/backbone.baseview"
"airbnb/babel-plugin-dynamic-import-webpack" -> "airbnb/buck"
"airbnb/babel-plugin-dynamic-import-webpack" -> "airbnb/alerts"
"airbnb/babel-plugin-dynamic-import-webpack" -> "airbnb/billow"
"jpmml/jpmml-sklearn" -> "jpmml/sklearn2pmml"
"jpmml/jpmml-sklearn" -> "jpmml/jpmml-evaluator"
"jpmml/jpmml-sklearn" -> "jpmml/jpmml-sparkml"
"jpmml/jpmml-sklearn" -> "jpmml/jpmml-lightgbm"
"jpmml/jpmml-sklearn" -> "openscoring/openscoring"
"jpmml/jpmml-sklearn" -> "jpmml/jpmml-model"
"jpmml/jpmml-sklearn" -> "jpmml/jpmml-evaluator-spark"
"jpmml/jpmml-sklearn" -> "combust/mleap"
"jpmml/jpmml-sklearn" -> "jpmml/jpmml-tensorflow"
"jpmml/jpmml-sklearn" -> "jpmml/jpmml-xgboost"
"jpmml/jpmml-sklearn" -> "opendatagroup/hadrian"
"jpmml/jpmml-sklearn" -> "nok/sklearn-porter" ["e"=1]
"jpmml/jpmml-sklearn" -> "boredbird/woe" ["e"=1]
"hyperchain/javasdk" -> "meshplus/gosdk"
"hyperchain/javasdk" -> "meshplus/hyperbench"
"apache/incubator-paimon" -> "apache/kyuubi"
"apache/incubator-paimon" -> "apache/incubator-uniffle"
"apache/incubator-paimon" -> "NetEase/arctic"
"apache/incubator-paimon" -> "cubefs/compass"
"apache/incubator-paimon" -> "flink-extended/flink-remote-shuffle"
"apache/incubator-paimon" -> "apache/incubator-celeborn"
"apache/incubator-paimon" -> "oap-project/gluten"
"apache/incubator-paimon" -> "ververica/flink-sql-cookbook"
"flink-china/flink-china-doc" -> "Apache-Flink-Docs-ZH/Apache-Flink-Docs-ZH-translation"
"flink-china/flink-china-doc" -> "wuchong/awesome-flink"
"flink-china/flink-china-doc" -> "flink-china/flink-forward-china-2018"
"flink-china/flink-china-doc" -> "wuchong/my-flink-project"
"flink-china/flink-china-doc" -> "ververica/sql-training"
"flink-china/flink-china-doc" -> "flink-china/flink-training-course"
"flink-china/flink-china-doc" -> "apachecn/flink-doc-zh"
"flink-china/flink-china-doc" -> "lw-lin/streaming-readings"
"flink-china/flink-china-doc" -> "DTStack/flinkStreamSQL"
"flink-china/flink-china-doc" -> "apache/bahir-flink"
"flink-china/flink-china-doc" -> "apache/flink-web"
"flink-china/flink-china-doc" -> "todd5167/flink-spark-submiter"
"flink-china/flink-china-doc" -> "allwefantasy/spark-binlog"
"flink-china/flink-china-doc" -> "bethunebtj/flink_tutorial" ["e"=1]
"flink-china/flink-china-doc" -> "DTStack/flinkx"
"ververica/flink-jdbc-driver" -> "ververica/flink-sql-gateway"
"ververica/flink-jdbc-driver" -> "ververica/flink-sql-benchmark"
"ververica/flink-jdbc-driver" -> "fhueske/flink-sql-demo"
"ververica/flink-jdbc-driver" -> "apache/flink-shaded"
"japila-books/apache-spark-internals" -> "japila-books/delta-lake-internals"
"japila-books/apache-spark-internals" -> "jaceklaskowski/mastering-spark-sql-book"
"japila-books/apache-spark-internals" -> "japila-books/spark-sql-internals"
"japila-books/apache-spark-internals" -> "LucaCanali/sparkMeasure"
"japila-books/apache-spark-internals" -> "jaceklaskowski/spark-structured-streaming-book"
"japila-books/apache-spark-internals" -> "uber/RemoteShuffleService"
"japila-books/apache-spark-internals" -> "awesome-spark/awesome-spark"
"japila-books/apache-spark-internals" -> "spoddutur/spark-notes"
"japila-books/apache-spark-internals" -> "databricks/spark-sql-perf"
"japila-books/apache-spark-internals" -> "databricks/LearningSparkV2"
"japila-books/apache-spark-internals" -> "MrPowers/spark-fast-tests"
"japila-books/apache-spark-internals" -> "Intel-bigdata/OAP"
"japila-books/apache-spark-internals" -> "apache/incubator-uniffle"
"japila-books/apache-spark-internals" -> "qubole/sparklens"
"japila-books/apache-spark-internals" -> "jaceklaskowski/spark-workshop"
"clulab/nlp-reading-group" -> "clulab/processors"
"apache/tez" -> "apache/oozie"
"apache/tez" -> "apache/pig"
"apache/tez" -> "apache/phoenix"
"apache/tez" -> "apache/orc"
"apache/tez" -> "apache/sqoop"
"apache/tez" -> "apache/drill"
"apache/tez" -> "apache/hive"
"apache/tez" -> "apache/ranger"
"apache/tez" -> "apache/knox"
"apache/tez" -> "apache/ambari"
"apache/tez" -> "apache/impala"
"apache/tez" -> "apache/sentry"
"apache/tez" -> "apache/incubator-iceberg"
"apache/tez" -> "apache/samza"
"apache/tez" -> "apache/parquet-format"
"mattshma/bigdata" -> "jerryshao/spark-hive-streaming-sink"
"Hyhyhyhyhyhyh/Django-Data-quality-system" -> "moutainhigh/datax-cloud-base"
"Hyhyhyhyhyhyh/Django-Data-quality-system" -> "zhaoyachao/zdh_web"
"Hyhyhyhyhyhyh/Django-Data-quality-system" -> "MeetYouDevs/big-whale"
"Hyhyhyhyhyhyh/Django-Data-quality-system" -> "zbwfisher1/vue-metadata"
"apache/parquet-cpp" -> "apache/parquet-format"
"apache/parquet-cpp" -> "apache/orc"
"apache/parquet-cpp" -> "johanpel/fletcher"
"apache/parquet-cpp" -> "apache/parquet-mr"
"apache/parquet-cpp" -> "sunchao/parquet-rs"
"apache/parquet-cpp" -> "dask/fastparquet" ["e"=1]
"apache/parquet-cpp" -> "blue-yonder/turbodbc" ["e"=1]
"apache/incubator-griffin" -> "eBay/griffin"
"apache/incubator-griffin" -> "Hang-Hu/ei-check-in"
"h2oai/sparkling-water" -> "h2oai/h2o-3" ["e"=1]
"h2oai/sparkling-water" -> "h2oai/h2o-tutorials"
"h2oai/sparkling-water" -> "h2oai/deepwater"
"h2oai/sparkling-water" -> "andypetrella/spark-notebook"
"h2oai/sparkling-water" -> "amplab/keystone"
"h2oai/sparkling-water" -> "h2oai/h2o4gpu"
"h2oai/sparkling-water" -> "apache/incubator-toree"
"h2oai/sparkling-water" -> "h2oai/h2o-flow"
"h2oai/sparkling-water" -> "databricks/spark-sklearn"
"h2oai/sparkling-water" -> "apache/incubator-zeppelin"
"h2oai/sparkling-water" -> "yahoo/CaffeOnSpark"
"h2oai/sparkling-water" -> "sryza/spark-timeseries"
"h2oai/sparkling-water" -> "databricks/spark-corenlp"
"h2oai/sparkling-water" -> "OryxProject/oryx" ["e"=1]
"h2oai/sparkling-water" -> "h2oai/h2o-meetups"
"fangyuzhong2016/HadoopIntellijPlugin" -> "qindongliang/streaming-offset-to-zk"
"opensourceteams/spark-scala-maven-2.4.0" -> "opensourceteams/spark-scala-maven"
"opensourceteams/spark-scala-maven-2.4.0" -> "yangtong123/StudySpark"
"opensourceteams/spark-scala-maven-2.4.0" -> "CrestOfWave/Spark-2.3.1"
"pranab/avenir" -> "pranab/beymani"
"CrestOfWave/Spark-2.3.1" -> "liancheng/spear"
"CrestOfWave/Spark-2.3.1" -> "danny0405/flink-source-code-analysis"
"CrestOfWave/Spark-2.3.1" -> "opensourceteams/spark-scala-maven"
"CrestOfWave/Spark-2.3.1" -> "teeyog/IQL"
"CrestOfWave/Spark-2.3.1" -> "opensourceteams/spark-scala-maven-2.4.0"
"CrestOfWave/Spark-2.3.1" -> "qiushangwenyue/Interview_BigData"
"wzhe06/ipdatabase" -> "teeyog/IQL"
"kairosdb/kairosdb" -> "OpenTSDB/opentsdb"
"kairosdb/kairosdb" -> "spotify/heroic"
"kairosdb/kairosdb" -> "kairosdb/kairosdb-client"
"kairosdb/kairosdb" -> "rackerlabs/blueflood"
"kairosdb/kairosdb" -> "zalando/zmon" ["e"=1]
"kairosdb/kairosdb" -> "datastax/java-driver" ["e"=1]
"kairosdb/kairosdb" -> "OpenNMS/newts"
"kairosdb/kairosdb" -> "salesforce/Argus" ["e"=1]
"kairosdb/kairosdb" -> "scylladb/scylla" ["e"=1]
"kairosdb/kairosdb" -> "pyr/cyanite" ["e"=1]
"kairosdb/kairosdb" -> "linkedin/pinot"
"kairosdb/kairosdb" -> "facebookincubator/beringei"
"kairosdb/kairosdb" -> "influxdb/influxdb" ["e"=1]
"kairosdb/kairosdb" -> "druid-io/druid"
"kairosdb/kairosdb" -> "jmxtrans/jmxtrans" ["e"=1]
"ooyala/spark-jobserver" -> "adobe-research/spindle"
"ooyala/spark-jobserver" -> "ibm-et/spark-kernel"
"ooyala/spark-jobserver" -> "krasserm/akka-analytics" ["e"=1]
"ooyala/spark-jobserver" -> "velvia/ScalaStorm" ["e"=1]
"ooyala/spark-jobserver" -> "spark-jobserver/spark-jobserver"
"ooyala/spark-jobserver" -> "cloudera/spark-dataflow"
"ooyala/spark-jobserver" -> "apache/incubator-spark" ["e"=1]
"ooyala/spark-jobserver" -> "intel-hadoop/gearpump"
"ooyala/spark-jobserver" -> "knoldus/Play-Spark-Scala"
"ooyala/spark-jobserver" -> "databricks/spark-perf"
"ooyala/spark-jobserver" -> "NFLabs/zeppelin"
"ooyala/spark-jobserver" -> "datastax/cassandra-driver-spark"
"ooyala/spark-jobserver" -> "amplab/shark" ["e"=1]
"ooyala/spark-jobserver" -> "amplab/docker-scripts" ["e"=1]
"ooyala/spark-jobserver" -> "tresata/spark-kafka" ["e"=1]
"wxgzgl/LarkMidTable" -> "wxgzgl/LarkMidTableUI"
"wxgzgl/LarkMidTable" -> "zhp8341/flink-streaming-platform-web"
"wxgzgl/LarkMidTable" -> "collabH/repository"
"wxgzgl/LarkMidTable" -> "zhaoyachao/zdh_web"
"wxgzgl/LarkMidTable" -> "moutainhigh/datax-cloud-base"
"wxgzgl/LarkMidTable" -> "qlangtech/tis"
"wxgzgl/LarkMidTable" -> "MeetYouDevs/big-whale"
"wxgzgl/LarkMidTable" -> "hairless/plink"
"wxgzgl/LarkMidTable" -> "DataLinkDC/dlink"
"wxgzgl/LarkMidTable" -> "streamxhub/streamx"
"wxgzgl/LarkMidTable" -> "zhangjun0x01/bigdata-examples"
"wxgzgl/LarkMidTable" -> "DTStack/flinkx"
"wxgzgl/LarkMidTable" -> "ververica/flink-sql-gateway"
"wxgzgl/LarkMidTable" -> "Hyhyhyhyhyhyh/Django-Data-quality-system"
"wxgzgl/LarkMidTable" -> "ucarGroup/DataLink"
"alibaba/flink-ai-extended" -> "ververica/sql-training"
"alibaba/flink-ai-extended" -> "alibaba/Alink"
"alibaba/flink-ai-extended" -> "apache/flink-ml"
"alibaba/flink-ai-extended" -> "apache/flink-table-store"
"alibaba/flink-ai-extended" -> "ververica/stateful-functions"
"alibaba/flink-ai-extended" -> "nexmark/nexmark"
"alibaba/flink-ai-extended" -> "alibaba/feathub"
"alibaba/flink-ai-extended" -> "apache/flink-statefun"
"alibaba/flink-ai-extended" -> "FlinkML/flink-tensorflow"
"alibaba/flink-ai-extended" -> "DTStack/flinkStreamSQL"
"alibaba/flink-ai-extended" -> "ververica/flink-sql-gateway"
"alibaba/flink-ai-extended" -> "uber/AthenaX"
"alibaba/flink-ai-extended" -> "ververica/flink-sql-cookbook"
"alibaba/flink-ai-extended" -> "flink-extended/flink-remote-shuffle"
"alibaba/flink-ai-extended" -> "ververica/flink-training-exercises"
"ververica/sql-training" -> "ververica/flink-training-exercises"
"ververica/sql-training" -> "wuchong/flink-sql-submit"
"ververica/sql-training" -> "ververica/flink-sql-cookbook"
"ververica/sql-training" -> "ververica/flink-sql-gateway"
"ververica/sql-training" -> "apache/bahir-flink"
"ververica/sql-training" -> "fhueske/flink-sql-demo"
"ververica/sql-training" -> "DTStack/flinkStreamSQL"
"ververica/sql-training" -> "flink-china/flink-training-course"
"ververica/sql-training" -> "alibaba/flink-ai-extended"
"ververica/sql-training" -> "uber/AthenaX"
"ververica/sql-training" -> "wuchong/flink-sql-demo"
"ververica/sql-training" -> "DTStack/flinkx"
"ververica/sql-training" -> "ambition119/FlinkSQL" ["e"=1]
"ververica/sql-training" -> "hairless/plink"
"ververica/sql-training" -> "wuchong/awesome-flink"
"flowerfine/scaleph" -> "apache/incubator-seatunnel-web"
"flowerfine/scaleph" -> "flowerfine/flinkful"
"flowerfine/scaleph" -> "qlangtech/tis"
"flowerfine/scaleph" -> "DTStack/DatasourceX"
"flowerfine/scaleph" -> "gaodayu168/datasophon"
"WadeStack/BigDataIE" -> "CheckChe0803/BigData-Interview"
"WadeStack/BigDataIE" -> "sunnyandgood/BigData"
"WadeStack/BigDataIE" -> "whirlys/BigData-In-Practice"
"WadeStack/BigDataIE" -> "SwordfallYeung/Interview_BigData"
"WadeStack/BigDataIE" -> "oeljeklaus-you/JavaOrBigData-Interview"
"WadeStack/BigDataIE" -> "TALKDATA/JavaBigData"
"WadeStack/BigDataIE" -> "realguoshuai/hadoop_study"
"WadeStack/BigDataIE" -> "LuckyZXL2016/News_Spark"
"WadeStack/BigDataIE" -> "monsonlee/BigData"
"WadeStack/BigDataIE" -> "Dr11ft/BigDataGuide"
"WadeStack/BigDataIE" -> "oeljeklaus-you/UserActionAnalyzePlatform"
"WadeStack/BigDataIE" -> "asdud/Bigdata_project"
"WadeStack/BigDataIE" -> "houshanren/big_data_architect_skills"
"WadeStack/BigDataIE" -> "ljcan/SparkStreaming"
"WadeStack/BigDataIE" -> "vbay/big-data"
"uavorg/uavstack" -> "edp963/wormhole"
"uavorg/uavstack" -> "BriData/DBus"
"uavorg/uavstack" -> "wu-sheng/sky-walking" ["e"=1]
"uavorg/uavstack" -> "Tencent/Metis" ["e"=1]
"uavorg/uavstack" -> "siaorg/sia-task" ["e"=1]
"uavorg/uavstack" -> "uavorg/main"
"uavorg/uavstack" -> "edp963/moonbox"
"uavorg/uavstack" -> "siaorg/sia-gateway" ["e"=1]
"uavorg/uavstack" -> "chenryn/aiops-handbook" ["e"=1]
"uavorg/uavstack" -> "roncoo/roncoo-cmdb" ["e"=1]
"uavorg/uavstack" -> "dangdangdotcom/sharding-jdbc" ["e"=1]
"uavorg/uavstack" -> "apache/incubator-skywalking-ui" ["e"=1]
"uavorg/uavstack" -> "kplcloud/kplcloud" ["e"=1]
"uavorg/uavstack" -> "jixinpu/aiopstools" ["e"=1]
"uavorg/uavstack" -> "CreditEaseDBA/Themis" ["e"=1]
"youngwookim/awesome-hadoop" -> "awesome-spark/awesome-spark"
"youngwookim/awesome-hadoop" -> "zenkay/bigdata-ecosystem"
"youngwookim/awesome-hadoop" -> "onurakpolat/awesome-bigdata" ["e"=1]
"youngwookim/awesome-hadoop" -> "manuzhang/awesome-streaming" ["e"=1]
"youngwookim/awesome-hadoop" -> "numetriclabz/awesome-db" ["e"=1]
"youngwookim/awesome-hadoop" -> "igorbarinov/awesome-data-engineering" ["e"=1]
"youngwookim/awesome-hadoop" -> "hadoopecosystemtable/hadoopecosystemtable.github.io"
"youngwookim/awesome-hadoop" -> "shlomi-noach/awesome-mysql" ["e"=1]
"youngwookim/awesome-hadoop" -> "okulbilisim/awesome-datascience" ["e"=1]
"youngwookim/awesome-hadoop" -> "wuchong/awesome-flink"
"youngwookim/awesome-hadoop" -> "hortonworks/hadoop-tutorials" ["e"=1]
"youngwookim/awesome-hadoop" -> "onurakpolat/awesome-analytics" ["e"=1]
"youngwookim/awesome-hadoop" -> "sequenceiq/hadoop-docker" ["e"=1]
"youngwookim/awesome-hadoop" -> "lucasviola/awesome-tech-videos" ["e"=1]
"youngwookim/awesome-hadoop" -> "linkedin/gobblin"
"danny0405/flink-source-code-analysis" -> "wuchong/awesome-flink"
"danny0405/flink-source-code-analysis" -> "CrestOfWave/Spark-2.3.1"
"danny0405/flink-source-code-analysis" -> "mickey0524/flink-streaming-source-analysis"
"danny0405/flink-source-code-analysis" -> "bethunebtj/flink_tutorial" ["e"=1]
"danny0405/flink-source-code-analysis" -> "apache/flink-shaded"
"NaNShaner/repoll" -> "Macr0phag3/GithubMonitor" ["e"=1]
"NaNShaner/repoll" -> "wwwbjqcom/mysql_audit"
"NaNShaner/repoll" -> "zr-hebo/sniffer-agent" ["e"=1]
"zqhxuyuan/kafka-book" -> "wangliangbd/SparkStreaming_Store_KafkaTopicOffset_To_HBase"
"chu888chu888/HadoopAndSparkDataStudy" -> "realguoshuai/hadoop_study"
"chu888chu888/HadoopAndSparkDataStudy" -> "longyinzaitian/HadoopDemo"
"chu888chu888/HadoopAndSparkDataStudy" -> "appleappleapple/BigDataLearning"
"chu888chu888/HadoopAndSparkDataStudy" -> "liguozhong/demo_11.11_storm-spark-hadoop"
"chu888chu888/HadoopAndSparkDataStudy" -> "oeljeklaus-you/UserActionAnalyzePlatform"
"chu888chu888/HadoopAndSparkDataStudy" -> "monsonlee/BigData"
"chu888chu888/HadoopAndSparkDataStudy" -> "SwordfallYeung/Interview_BigData"
"chu888chu888/HadoopAndSparkDataStudy" -> "yangtong123/RoadOfStudySpark"
"chu888chu888/HadoopAndSparkDataStudy" -> "sunnyandgood/BigData"
"chu888chu888/HadoopAndSparkDataStudy" -> "LuckyZXL2016/News_Spark"
"chu888chu888/HadoopAndSparkDataStudy" -> "yangtong123/StudySpark"
"chu888chu888/HadoopAndSparkDataStudy" -> "josonle/Coding-Now"
"chu888chu888/HadoopAndSparkDataStudy" -> "whirlys/BigData-In-Practice"
"chu888chu888/HadoopAndSparkDataStudy" -> "weiweifan/Big-Data-Resources"
"chu888chu888/HadoopAndSparkDataStudy" -> "Thinkgamer/Hadoop-Spark-Learning"
"asdud/Bigdata_project" -> "whirlys/BigData-In-Practice"
"asdud/Bigdata_project" -> "monsonlee/BigData"
"asdud/Bigdata_project" -> "Thpffcj/BigData-Getting-Started"
"asdud/Bigdata_project" -> "ittqqzz/ECommerceRecommendSystem" ["e"=1]
"asdud/Bigdata_project" -> "wanghan0501/WiFiProbeAnalysis"
"oap-project/gazelle_plugin" -> "oap-project/gluten"
"oap-project/gazelle_plugin" -> "blaze-init/blaze"
"oap-project/gazelle_plugin" -> "alibaba/RemoteShuffleService"
"oap-project/gazelle_plugin" -> "uber/RemoteShuffleService"
"oap-project/gazelle_plugin" -> "oap-project/sql-ds-cache"
"oap-project/gazelle_plugin" -> "substrait-io/substrait" ["e"=1]
"oap-project/gazelle_plugin" -> "linkedin/coral"
"oap-project/gazelle_plugin" -> "flink-extended/flink-remote-shuffle"
"oap-project/gazelle_plugin" -> "Tencent/Firestorm"
"oap-project/gazelle_plugin" -> "Intel-bigdata/OAP"
"oap-project/gazelle_plugin" -> "alibaba/SparkCube"
"oap-project/gazelle_plugin" -> "oap-project/gazelle-jni"
"oap-project/gazelle_plugin" -> "facebookincubator/velox" ["e"=1]
"sunjincheng121/know_how_know_why" -> "wuchong/flink-sql-demo"
"sunjincheng121/know_how_know_why" -> "ververica/sql-training"
"sunjincheng121/know_how_know_why" -> "leonardBang/flink-sql-etl"
"sunjincheng121/know_how_know_why" -> "hairless/plink"
"sunjincheng121/know_how_know_why" -> "apache/bahir-flink"
"sunjincheng121/know_how_know_why" -> "allwefantasy/spark-binlog"
"sunjincheng121/know_how_know_why" -> "wuchong/flink-sql-submit"
"sunjincheng121/know_how_know_why" -> "zhangjun0x01/bigdata-examples"
"sunjincheng121/know_how_know_why" -> "gmmstrive/flink-connector-clickhouse" ["e"=1]
"sunjincheng121/know_how_know_why" -> "leesf/hudi-resources"
"sunjincheng121/know_how_know_why" -> "zhp8341/flink-streaming-platform-web"
"sunjincheng121/know_how_know_why" -> "apache/flink-statefun"
"sunjincheng121/know_how_know_why" -> "ververica/flink-sql-gateway"
"sunjincheng121/know_how_know_why" -> "ververica/flink-sql-cookbook"
"apache/incubator-inlong" -> "apache/flink-table-store"
"apache/incubator-inlong" -> "apache/ozone"
"apache/incubator-inlong" -> "flink-extended/flink-dynamic-storage"
"apache/incubator-inlong" -> "apache/hop"
"apache/incubator-inlong" -> "streamnative/pulsar-flink"
"apache/incubator-inlong" -> "NetEase/arctic"
"apache/incubator-inlong" -> "apache/incubator-kyuubi"
"apache/incubator-inlong" -> "streamxhub/streamx"
"apache/incubator-inlong" -> "InterestingLab/seatunnel"
"apache/incubator-inlong" -> "flink-extended/flink-remote-shuffle"
"omnisci/mapd-charting" -> "omnisci/pymapd"
"omnisci/mapd-charting" -> "omnisci/mapd-connector"
"omnisci/mapd-charting" -> "omnisci/mapd-core"
"apache/flink-benchmarks" -> "flink-extended/flink-remote-shuffle"
"apache/flink-benchmarks" -> "nexmark/nexmark"
"apache/flink-benchmarks" -> "flink-extended/flink-dynamic-storage"
"apache/flink-benchmarks" -> "apache/flink-ml"
"apache/flink-benchmarks" -> "apache/flink-table-store"
"apache/flink-shaded" -> "apache/flink-web"
"apache/flink-shaded" -> "ververica/flink-jdbc-driver"
"apache/flink-web" -> "apache/flink-shaded"
"apache/flink-web" -> "apache/flink-ml"
"apache/flink-web" -> "apache/flink-benchmarks"
"apache/flink-web" -> "flink-extended/flink-remote-shuffle"
"apache/flink-web" -> "flink-extended/flink-dynamic-storage"
"apache/incubator-celeborn" -> "apache/incubator-uniffle"
"apache/incubator-celeborn" -> "bytedance/CloudShuffleService"
"apache/incubator-celeborn" -> "apache/flink-table-store"
"apache/incubator-celeborn" -> "oap-project/gluten"
"apache/ratis" -> "sofastack/sofa-jraft" ["e"=1]
"apache/ratis" -> "openmessaging/dledger"
"apache/ratis" -> "apache/ozone"
"apache/ratis" -> "apache/incubator-uniffle"
"apache/ratis" -> "NetEase/arctic"
"apache/ratis" -> "bytedance/CloudShuffleService"
"apache/ratis" -> "apache/flink-kubernetes-operator"
"apache/ratis" -> "apache/flink-table-store"
"apache/ratis" -> "apache/incubator-eventmesh"
"apache/ratis" -> "oap-project/gluten"
"apache/ratis" -> "flink-extended/flink-remote-shuffle"
"apache/ratis" -> "apache/bookkeeper" ["e"=1]
"apache/ratis" -> "apache/incubator-celeborn"
"apache/ratis" -> "apache/flink-benchmarks"
"apache/ratis" -> "thulab/iotdb-benchmark"
"druid-io/tranquility" -> "implydata/plyql"
"druid-io/tranquility" -> "druid-io/docker-druid"
"druid-io/tranquility" -> "metamx/druid-spark-batch"
"druid-io/tranquility" -> "implydata/plywood"
"druid-io/tranquility" -> "SparklineData/spark-druid-olap"
"druid-io/tranquility" -> "druid-io/pydruid"
"druid-io/tranquility" -> "druid-io/druid"
"druid-io/tranquility" -> "srikalyc/Sql4D"
"druid-io/tranquility" -> "yahoo/swiv"
"druid-io/tranquility" -> "zapr-oss/druidry"
"druid-io/tranquility" -> "mistercrunch/panoramix"
"druid-io/tranquility" -> "ing-bank/scruid"
"druid-io/tranquility" -> "apache/incubator-druid"
"druid-io/tranquility" -> "linkedin/pinot"
"druid-io/tranquility" -> "implydata/pivot"
"flink-extended/flink-remote-shuffle" -> "apache/flink-table-store"
"flink-extended/flink-remote-shuffle" -> "apache/flink-benchmarks"
"flink-extended/flink-remote-shuffle" -> "alibaba/RemoteShuffleService"
"flink-extended/flink-remote-shuffle" -> "nexmark/nexmark"
"flink-extended/flink-remote-shuffle" -> "apache/incubator-uniffle"
"flink-extended/flink-remote-shuffle" -> "Tencent/Firestorm"
"flink-extended/flink-remote-shuffle" -> "flink-extended/flink-dynamic-storage"
"flink-extended/flink-remote-shuffle" -> "apache/flink-ml"
"flink-extended/flink-remote-shuffle" -> "alibaba/feathub"
"flink-extended/flink-remote-shuffle" -> "bytedance/CloudShuffleService"
"flink-extended/flink-remote-shuffle" -> "apache/flink-kubernetes-operator"
"flink-extended/flink-remote-shuffle" -> "apache/flink-web"
"flink-extended/flink-remote-shuffle" -> "ververica/flink-sql-cookbook"
"flink-extended/flink-remote-shuffle" -> "NetEase/arctic"
"flink-extended/flink-remote-shuffle" -> "ververica/flink-sql-benchmark"
"hairless/plink" -> "MeetYouDevs/big-whale"
"hairless/plink" -> "ververica/flink-sql-gateway"
"hairless/plink" -> "harbby/sylph"
"hairless/plink" -> "binglind/alchemy"
"hairless/plink" -> "lessonone1/fiflow"
"hairless/plink" -> "wxgzgl/flinkx-web"
"hairless/plink" -> "zhp8341/flink-streaming-platform-web"
"hairless/plink" -> "todd5167/flink-spark-submiter"
"hairless/plink" -> "wxgzgl/LarkMidTable"
"hairless/plink" -> "fhueske/flink-sql-demo"
"hairless/plink" -> "wuchong/flink-sql-submit"
"hairless/plink" -> "teeyog/IQL"
"hairless/plink" -> "zhangjun0x01/bigdata-examples"
"hairless/plink" -> "gingerredjade/flink-userportrait-main"
"hairless/plink" -> "collabH/repository"
"ing-bank/scruid" -> "anskarl/druid-docker-cluster"
"nexmark/nexmark" -> "apache/flink-benchmarks"
"nexmark/nexmark" -> "flink-extended/flink-remote-shuffle"
"nexmark/nexmark" -> "apache/flink-statefun"
"nexmark/nexmark" -> "flink-extended/flink-dynamic-storage"
"nexmark/nexmark" -> "ververica/stateful-functions"
"nexmark/nexmark" -> "apache/flink-table-store"
"nexmark/nexmark" -> "ververica/flink-sql-benchmark"
"nexmark/nexmark" -> "apache/flink-web"
"nexmark/nexmark" -> "strymon-system/ds2"
"nexmark/nexmark" -> "apache/bahir-flink"
"nexmark/nexmark" -> "immerok/recipes"
"nexmark/nexmark" -> "knaufk/flink-faker"
"nexmark/nexmark" -> "yahoo/streaming-benchmarks"
"nexmark/nexmark" -> "ververica/flink-sql-cookbook"
"nexmark/nexmark" -> "ververica/flink-sql-gateway"
"streamnative/pulsar-flink" -> "streamnative/pulsar-spark"
"streamnative/pulsar-flink" -> "apache/pulsar-manager"
"streamnative/pulsar-flink" -> "ververica/flink-sql-gateway"
"streamnative/pulsar-flink" -> "streamnative/charts"
"streamnative/pulsar-flink" -> "streamnative/kop"
"streamnative/pulsar-flink" -> "streamnative/function-mesh"
"streamnative/pulsar-flink" -> "streamnative/tgip-cn"
"streamnative/pulsar-flink" -> "apache/flink-shaded"
"streamnative/pulsar-flink" -> "streamnative/pulsar-io-kafka"
"streamnative/pulsar-flink" -> "streamnative/apache-pulsar-grafana-dashboard"
"streamnative/pulsar-flink" -> "apache/flink-statefun"
"streamnative/pulsar-flink" -> "ivi-ru/flink-clickhouse-sink" ["e"=1]
"streamnative/pulsar-flink" -> "apache/bahir-flink"
"strymon-system/ds2" -> "microsoft/Dhalion"
"wankunde/logcount" -> "ljcan/SparkStreaming"
"wankunde/logcount" -> "liguozhong/demo_11.11_storm-spark-hadoop"
"wankunde/logcount" -> "zhang637/kafka_spark_hbase_demo"
"wankunde/logcount" -> "Erik-ly/SprakProject"
"wankunde/logcount" -> "sectong/SparkToParquet"
"wankunde/logcount" -> "javachen/grab" ["e"=1]
"wankunde/logcount" -> "qidasheng/storm-kafka-xlog"
"wankunde/logcount" -> "dibbhatt/kafka-spark-consumer" ["e"=1]
"wankunde/logcount" -> "wanghan0501/UserSessionBehaviorOfflineAnalysis"
"wankunde/logcount" -> "caroljmcdonald/SparkStreamingHBaseExample"
"MattFlood7/LinkedInBot" -> "SethRzeszutek/LinkedIn-Bot"
"MattFlood7/LinkedInBot" -> "helloitsim/LInBot"
"MattFlood7/LinkedInBot" -> "eracle/linkedin"
"MattFlood7/LinkedInBot" -> "hiimim/LInBot"
"ehiggs/spark-terasort" -> "rxin/spark"
"ververica/flink-sql-cookbook" -> "knaufk/flink-faker"
"ververica/flink-sql-cookbook" -> "apache/flink-table-store"
"ververica/flink-sql-cookbook" -> "ververica/sql-training"
"ververica/flink-sql-cookbook" -> "ververica/flink-sql-gateway"
"ververica/flink-sql-cookbook" -> "flink-extended/flink-remote-shuffle"
"ververica/flink-sql-cookbook" -> "apache/flink-statefun"
"ververica/flink-sql-cookbook" -> "apache/bahir-flink"
"ververica/flink-sql-cookbook" -> "DataLinkDC/dlink"
"ververica/flink-sql-cookbook" -> "apache/flink-training"
"ververica/flink-sql-cookbook" -> "ververica/flink-cdc-connectors"
"ververica/flink-sql-cookbook" -> "zhp8341/flink-streaming-platform-web"
"ververica/flink-sql-cookbook" -> "immerok/recipes"
"ververica/flink-sql-cookbook" -> "apache/flink-docker"
"ververica/flink-sql-cookbook" -> "fhueske/flink-sql-demo"
"ververica/flink-sql-cookbook" -> "nexmark/nexmark"
"LuXugang/Lucene-7.5.0" -> "zzboy/lucene"
"LuXugang/Lucene-7.5.0" -> "didi/ES-Fastloader"
"LuXugang/Lucene-7.5.0" -> "mingyitianxia/elastic-certified-engineer"
"LuXugang/Lucene-7.5.0" -> "felayman/elasticsearch-full"
"LuXugang/Lucene-7.5.0" -> "apache/lucene"
"LuXugang/Lucene-7.5.0" -> "opendistro-for-elasticsearch/k-NN" ["e"=1]
"LuXugang/Lucene-7.5.0" -> "mikemccand/luceneutil"
"LuXugang/Lucene-7.5.0" -> "medcl/infini-gateway" ["e"=1]
"ververica/flink-sql-benchmark" -> "ververica/flink-jdbc-driver"
"ververica/flink-sql-gateway" -> "ververica/flink-jdbc-driver"
"ververica/flink-sql-gateway" -> "hairless/plink"
"ververica/flink-sql-gateway" -> "apache/flink-table-store"
"ververica/flink-sql-gateway" -> "apache/bahir-flink"
"ververica/flink-sql-gateway" -> "zhp8341/flink-streaming-platform-web"
"ververica/flink-sql-gateway" -> "ververica/sql-training"
"ververica/flink-sql-gateway" -> "fhueske/flink-sql-demo"
"ververica/flink-sql-gateway" -> "wuchong/flink-sql-submit"
"ververica/flink-sql-gateway" -> "DataLinkDC/dlink"
"ververica/flink-sql-gateway" -> "ververica/flink-sql-cookbook"
"ververica/flink-sql-gateway" -> "DTStack/flinkStreamSQL"
"ververica/flink-sql-gateway" -> "streamnative/pulsar-flink"
"ververica/flink-sql-gateway" -> "ververica/flink-sql-benchmark"
"ververica/flink-sql-gateway" -> "flink-extended/flink-remote-shuffle"
"ververica/flink-sql-gateway" -> "binglind/alchemy"
"gpuopenanalytics/pygdf" -> "gpuopenanalytics/libgdf"
"gpuopenanalytics/pygdf" -> "mapd/mapd-core"
"gpuopenanalytics/pygdf" -> "gpuopenanalytics/demo-docker"
"gpuopenanalytics/pygdf" -> "mapd/mapd-charting"
"gpuopenanalytics/pygdf" -> "gpuopenanalytics/dask_gdf"
"gpuopenanalytics/pygdf" -> "rapidsai/cudf-alpha"
"gpuopenanalytics/pygdf" -> "mapd/pymapd"
"TianLangStudio/DataXServer" -> "Jawf/DataX-Migration"
"TianLangStudio/DataXServer" -> "huzekang/springboot-datax"
"TianLangStudio/DataXServer" -> "zipingdong/datax-web"
"knaufk/flink-faker" -> "ververica/flink-sql-cookbook"
"knaufk/flink-faker" -> "zjffdu/flink-sql-cookbook-on-zeppelin"
"knaufk/flink-faker" -> "flink-extended/flink-dynamic-storage"
"knaufk/flink-faker" -> "apache/flink-benchmarks"
"knaufk/flink-faker" -> "MichaelDrogalis/voluble"
"knaufk/flink-faker" -> "immerok/recipes"
"teeyog/IQL" -> "Qihoo360/XSQL"
"teeyog/IQL" -> "harbby/sylph"
"teeyog/IQL" -> "cjuexuan/mynote"
"teeyog/IQL" -> "allwefantasy/streamingpro"
"teeyog/IQL" -> "yaooqinn/kyuubi"
"teeyog/IQL" -> "InterestingLab/waterdrop"
"teeyog/IQL" -> "allwefantasy/spark-binlog"
"teeyog/IQL" -> "hairless/plink"
"teeyog/IQL" -> "edp963/moonbox"
"teeyog/IQL" -> "Qihoo360/Quicksql"
"teeyog/IQL" -> "edp963/wormhole"
"teeyog/IQL" -> "allwefantasy/mlsql"
"teeyog/IQL" -> "cas-bigdatalab/piflow"
"teeyog/IQL" -> "Intel-bigdata/spark-adaptive"
"teeyog/IQL" -> "yangtong123/StudySpark"
"airbnb/nimbus" -> "beemojs/beemo"
"apache/pinot" -> "apache/druid"
"apache/pinot" -> "apache/iceberg"
"apache/pinot" -> "facebookincubator/velox" ["e"=1]
"apache/pinot" -> "trinodb/trino"
"apache/pinot" -> "apache/hudi"
"apache/pinot" -> "datafuselabs/datafuse" ["e"=1]
"apache/pinot" -> "apache/arrow-datafusion" ["e"=1]
"apache/pinot" -> "apache/calcite"
"apache/pinot" -> "duckdb/duckdb" ["e"=1]
"apache/pinot" -> "apache/doris"
"apache/pinot" -> "oap-project/gluten"
"apache/pinot" -> "linkedin/coral"
"apache/pinot" -> "delta-io/delta"
"apache/pinot" -> "MaterializeInc/materialize" ["e"=1]
"apache/pinot" -> "amundsen-io/amundsen" ["e"=1]
"apachecn/kafka-doc-zh" -> "apachecn/storm-doc-zh" ["e"=1]
"apachecn/kafka-doc-zh" -> "apachecn/flink-doc-zh"
"apachecn/kafka-doc-zh" -> "apachecn/spark-doc-zh"
"apachecn/kafka-doc-zh" -> "apachecn/hbase-doc-zh"
"apachecn/kafka-doc-zh" -> "dantezhao/data-group"
"apachecn/kafka-doc-zh" -> "zqhxuyuan/kafka-book"
"apachecn/kafka-doc-zh" -> "Apache-Flink-Docs-ZH/Apache-Flink-Docs-ZH-translation"
"apachecn/kafka-doc-zh" -> "passionke/starry"
"Mohitkr95/Best-Data-Science-Resources" -> "javierluraschi/awesome-dataviz"
"Mohitkr95/Best-Data-Science-Resources" -> "ayonroy2000/100DaysOfMLCode" ["e"=1]
"Mohitkr95/Best-Data-Science-Resources" -> "Leo-G/Data-Science-Wiki" ["e"=1]
"Mohitkr95/Best-Data-Science-Resources" -> "tunguz/ML_Resources" ["e"=1]
"Mohitkr95/Best-Data-Science-Resources" -> "krypticmouse/ML-Self-Starter-Pack"
"Mohitkr95/Best-Data-Science-Resources" -> "newTendermint/awesome-bigdata"
"Mohitkr95/Best-Data-Science-Resources" -> "smv1999/CompetitiveProgrammingQuestionBank" ["e"=1]
"Mohitkr95/Best-Data-Science-Resources" -> "Jassi10000/LGM-SOC-21" ["e"=1]
"nchammas/flintrock" -> "amplab/spark-ec2"
"nchammas/flintrock" -> "PiercingDan/spark-Jupyter-AWS"
"nchammas/flintrock" -> "MrPowers/spark-daria"
"nchammas/flintrock" -> "rdblue/s3committer"
"nchammas/flintrock" -> "MrPowers/spark-fast-tests"
"nchammas/flintrock" -> "swoop-inc/spark-alchemy"
"nchammas/flintrock" -> "broxtronix/spark-gce"
"nchammas/flintrock" -> "amplab/keystone"
"nchammas/flintrock" -> "graphframes/graphframes"
"nchammas/flintrock" -> "jupyter-incubator/sparkmagic"
"Azure/azure-databricks-client" -> "gbrueckl/Databricks.API.PowerShell"
"NFLabs/zeppelin" -> "apache/incubator-zeppelin"
"NFLabs/zeppelin" -> "andypetrella/spark-notebook"
"NFLabs/zeppelin" -> "ibm-et/spark-kernel"
"NFLabs/zeppelin" -> "ooyala/spark-jobserver"
"NFLabs/zeppelin" -> "tribbloid/ISpark" ["e"=1]
"NFLabs/zeppelin" -> "NFLabs/z-manager"
"NFLabs/zeppelin" -> "apache/tajo"
"NFLabs/zeppelin" -> "adobe-research/spindle"
"NFLabs/zeppelin" -> "cloudera/spark-timeseries"
"NFLabs/zeppelin" -> "amplab/tachyon" ["e"=1]
"NFLabs/zeppelin" -> "Bridgewater/scala-notebook" ["e"=1]
"NFLabs/zeppelin" -> "databricks/spark-perf"
"NFLabs/zeppelin" -> "apache/incubator-flink"
"airbnb/BuckSample" -> "airbnb/buck"
"airbnb/BuckSample" -> "airbnb/bugsnag-android"
"airbnb/BuckSample" -> "airbnb/brace"
"airbnb/BuckSample" -> "airbnb/butterknife"
"airbnb/BuckSample" -> "airbnb/audited"
"airbnb/BuckSample" -> "airbnb/appear"
"airbnb/BuckSample" -> "airbnb/aws-cli"
"airbnb/BuckSample" -> "airbnb/billow"
"airbnb/BuckSample" -> "airbnb/brakeman"
"airbnb/BuckSample" -> "airbnb/apple-tv-auth"
"airbnb/BuckSample" -> "airbnb/android-mapviewballoons"
"airbnb/BuckSample" -> "airbnb/apollo-android"
"airbnb/BuckSample" -> "airbnb/alerts"
"airbnb/BuckSample" -> "airbnb/airbnb-spark-thrift"
"airbnb/BuckSample" -> "airbnb/camus"
"airbnb/alerts" -> "airbnb/audited"
"airbnb/alerts" -> "airbnb/bugsnag-android"
"airbnb/anotherlens" -> "airbnb/bugsnag-android"
"airbnb/anotherlens" -> "airbnb/butterknife"
"airbnb/anotherlens" -> "airbnb/brace"
"airbnb/anotherlens" -> "airbnb/appear"
"airbnb/anotherlens" -> "airbnb/audited"
"airbnb/anotherlens" -> "airbnb/android-mapviewballoons"
"airbnb/anotherlens" -> "airbnb/aws-cli"
"airbnb/anotherlens" -> "airbnb/apollo-android"
"airbnb/anotherlens" -> "airbnb/Backbone-relational"
"airbnb/anotherlens" -> "airbnb/camus"
"airbnb/anotherlens" -> "airbnb/alerts"
"airbnb/anotherlens" -> "airbnb/apple-tv-auth"
"airbnb/anotherlens" -> "airbnb/brakeman"
"airbnb/anotherlens" -> "airbnb/chancery"
"airbnb/apollo-android" -> "airbnb/bugsnag-android"
"airbnb/apollo-android" -> "airbnb/audited"
"airbnb/appear" -> "airbnb/bugsnag-android"
"airbnb/appear" -> "airbnb/audited"
"airbnb/apple-tv-auth" -> "airbnb/audited"
"airbnb/apple-tv-auth" -> "airbnb/bugsnag-android"
"airbnb/apple-tv-auth" -> "airbnb/butterknife"
"airbnb/apple-tv-auth" -> "airbnb/appear"
"airbnb/babel-preset-airbnb" -> "airbnb/appear"
"airbnb/babel-preset-airbnb" -> "airbnb/bugsnag-android"
"airbnb/babel-preset-airbnb" -> "airbnb/brace"
"airbnb/babel-preset-airbnb" -> "airbnb/audited"
"airbnb/babel-preset-airbnb" -> "airbnb/apple-tv-auth"
"airbnb/babel-preset-airbnb" -> "airbnb/android-mapviewballoons"
"airbnb/babel-preset-airbnb" -> "airbnb/aws-cli"
"airbnb/babel-preset-airbnb" -> "airbnb/Backbone-relational"
"airbnb/babel-preset-airbnb" -> "airbnb/butterknife"
"airbnb/babel-preset-airbnb" -> "airbnb/apollo-android"
"airbnb/babel-preset-airbnb" -> "airbnb/billow"
"airbnb/babel-preset-airbnb" -> "airbnb/backbone.baseview"
"airbnb/babel-preset-airbnb" -> "airbnb/buck"
"airbnb/babel-preset-airbnb" -> "airbnb/alerts"
"airbnb/babel-preset-airbnb" -> "airbnb/brakeman"
"airbnb/backbone.baseview" -> "airbnb/Backbone-relational"
"airbnb/backbone.baseview" -> "airbnb/brace"
"airbnb/backbone.baseview" -> "airbnb/bugsnag-android"
"airbnb/backbone.baseview" -> "airbnb/audited"
"airbnb/backbone.baseview" -> "airbnb/aws-cli"
"airbnb/backbone.baseview" -> "airbnb/android-mapviewballoons"
"airbnb/backbone.baseview" -> "airbnb/appear"
"airbnb/backbone.baseview" -> "airbnb/butterknife"
"airbnb/backbone.baseview" -> "airbnb/brakeman"
"airbnb/backbone.baseview" -> "airbnb/billow"
"airbnb/backbone.baseview" -> "airbnb/apollo-android"
"airbnb/backbone.baseview" -> "airbnb/chancery"
"airbnb/backbone.baseview" -> "airbnb/buck"
"airbnb/backbone.baseview" -> "airbnb/alerts"
"airbnb/backbone.baseview" -> "airbnb/apple-tv-auth"
"airbnb/backpack" -> "airbnb/bugsnag-android"
"airbnb/backpack" -> "airbnb/backbone.baseview"
"airbnb/backpack" -> "airbnb/brakeman"
"airbnb/backpack" -> "airbnb/brace"
"airbnb/backpack" -> "airbnb/aws-cli"
"airbnb/backpack" -> "airbnb/chancery"
"airbnb/backpack" -> "airbnb/butterknife"
"airbnb/backpack" -> "airbnb/Backbone-relational"
"airbnb/backpack" -> "airbnb/appear"
"airbnb/backpack" -> "airbnb/android-mapviewballoons"
"airbnb/backpack" -> "airbnb/billow"
"airbnb/backpack" -> "airbnb/audited"
"airbnb/backpack" -> "airbnb/apollo-android"
"airbnb/backpack" -> "airbnb/apple-tv-auth"
"airbnb/backpack" -> "airbnb/camus"
"airbnb/billow" -> "airbnb/bugsnag-android"
"airbnb/billow" -> "airbnb/brace"
"airbnb/billow" -> "airbnb/butterknife"
"airbnb/bossbat" -> "airbnb/brace"
"airbnb/bossbat" -> "airbnb/bugsnag-android"
"airbnb/bossbat" -> "airbnb/butterknife"
"airbnb/bossbat" -> "airbnb/brakeman"
"airbnb/bossbat" -> "airbnb/aws-cli"
"airbnb/bossbat" -> "airbnb/audited"
"airbnb/bossbat" -> "airbnb/billow"
"airbnb/bossbat" -> "airbnb/appear"
"airbnb/bossbat" -> "airbnb/buck"
"airbnb/bossbat" -> "airbnb/android-mapviewballoons"
"airbnb/bossbat" -> "airbnb/Backbone-relational"
"airbnb/bossbat" -> "airbnb/apollo-android"
"airbnb/bossbat" -> "airbnb/apple-tv-auth"
"airbnb/bossbat" -> "airbnb/chancery"
"airbnb/bossbat" -> "airbnb/camus"
"airbnb/browser-shims" -> "airbnb/brace"
"airbnb/browser-shims" -> "airbnb/bugsnag-android"
"airbnb/browser-shims" -> "airbnb/audited"
"airbnb/browser-shims" -> "airbnb/butterknife"
"airbnb/browser-shims" -> "airbnb/brakeman"
"airbnb/browser-shims" -> "airbnb/aws-cli"
"airbnb/browser-shims" -> "airbnb/appear"
"airbnb/browser-shims" -> "airbnb/android-mapviewballoons"
"airbnb/browser-shims" -> "airbnb/Backbone-relational"
"airbnb/browser-shims" -> "airbnb/billow"
"airbnb/browser-shims" -> "airbnb/apollo-android"
"airbnb/browser-shims" -> "airbnb/chancery"
"airbnb/browser-shims" -> "airbnb/camus"
"airbnb/browser-shims" -> "airbnb/apple-tv-auth"
"airbnb/browser-shims" -> "airbnb/buck"
"ibm-et/spark-kernel" -> "apache/incubator-toree"
"ibm-et/spark-kernel" -> "ooyala/spark-jobserver"
"ibm-et/spark-kernel" -> "alexarchambault/jupyter-scala" ["e"=1]
"ibm-et/spark-kernel" -> "andypetrella/spark-notebook"
"ibm-et/spark-kernel" -> "hohonuuli/sparknotebook" ["e"=1]
"ibm-et/spark-kernel" -> "amplab/keystone"
"ibm-et/spark-kernel" -> "NFLabs/zeppelin"
"ibm-et/spark-kernel" -> "adobe-research/spindle"
"ibm-et/spark-kernel" -> "ddf-project/DDF" ["e"=1]
"ibm-et/spark-kernel" -> "apache/incubator-zeppelin"
"ibm-et/spark-kernel" -> "collectivemedia/spark-ext"
"ibm-et/spark-kernel" -> "velvia/ScalaStorm" ["e"=1]
"ibm-et/spark-kernel" -> "mrsqueeze/spark-hash" ["e"=1]
"yahoo/streaming-benchmarks" -> "dataArtisans/yahoo-streaming-benchmark"
"yahoo/streaming-benchmarks" -> "intel-hadoop/HiBench"
"yahoo/streaming-benchmarks" -> "nexmark/nexmark"
"yahoo/streaming-benchmarks" -> "databricks/spark-sql-perf"
"yahoo/streaming-benchmarks" -> "apache/incubator-beam"
"yahoo/streaming-benchmarks" -> "wuchong/awesome-flink"
"yahoo/streaming-benchmarks" -> "intel-hadoop/storm-benchmark"
"yahoo/streaming-benchmarks" -> "lw-lin/streaming-readings"
"yahoo/streaming-benchmarks" -> "hortonworks/hive-testbench"
"yahoo/streaming-benchmarks" -> "apache/incubator-crail" ["e"=1]
"yahoo/streaming-benchmarks" -> "databricks/spark-perf"
"yahoo/streaming-benchmarks" -> "Intel-bigdata/spark-adaptive"
"yahoo/streaming-benchmarks" -> "Intel-bigdata/HiBench"
"yahoo/streaming-benchmarks" -> "twitter/heron"
"yahoo/streaming-benchmarks" -> "gregrahn/tpcds-kit"
"scxwhite/hera" -> "edp963/wormhole"
"scxwhite/hera" -> "analysys/EasyScheduler"
"scxwhite/hera" -> "InterestingLab/waterdrop"
"scxwhite/hera" -> "Qihoo360/Quicksql"
"scxwhite/hera" -> "edp963/moonbox"
"scxwhite/hera" -> "ucarGroup/DataLink"
"scxwhite/hera" -> "hairless/plink"
"scxwhite/hera" -> "harbby/sylph"
"scxwhite/hera" -> "teeyog/IQL"
"scxwhite/hera" -> "DTStack/flinkx"
"scxwhite/hera" -> "zhp8341/flink-streaming-platform-web"
"scxwhite/hera" -> "BriData/DBus"
"scxwhite/hera" -> "realguoshuai/hadoop_study"
"scxwhite/hera" -> "streamxhub/streamx"
"scxwhite/hera" -> "yueyunyue/liteflow"
"steveloughran/kerberos_and_hadoop" -> "hortonworks/structor" ["e"=1]
"unicredit/hbase-rdd" -> "nerdammer/spark-hbase-connector"
"unicredit/hbase-rdd" -> "cloudera-labs/SparkOnHBase"
"unicredit/hbase-rdd" -> "Huawei-Spark/Spark-SQL-on-HBase"
"unicredit/hbase-rdd" -> "tmalaska/SparkOnHBase"
"unicredit/hbase-rdd" -> "unicredit/hbase-rdd-examples"
"unicredit/hbase-rdd" -> "hortonworks-spark/shc"
"unicredit/hbase-rdd" -> "HuaweiBigData/astro"
"unicredit/hbase-rdd" -> "databricks/spark-avro"
"unicredit/hbase-rdd" -> "LinMingQiang/spark-util"
"unicredit/hbase-rdd" -> "NGDATA/hbase-indexer" ["e"=1]
"unicredit/hbase-rdd" -> "polomarcus/Spark-Structured-Streaming-Examples"
"apache/rocketmq-eventbridge" -> "apache/rocketmq-connect"
"cylondata/cylon" -> "jorgecarleitao/datafusion-python"
"fenglei110/DataWarehouse" -> "xzt1995/Data-Warehouse"
"apache/pig" -> "apache/oozie"
"apache/pig" -> "apache/sqoop"
"apache/pig" -> "apache/hadoop-common"
"apache/pig" -> "apache/hadoop-hdfs"
"apache/pig" -> "apache/hadoop-mapreduce"
"apache/pig" -> "apache/hive"
"apache/pig" -> "apache/tez"
"apache/pig" -> "apache/mahout"
"apache/pig" -> "apache/flume"
"apache/pig" -> "apache/avro"
"apache/pig" -> "apache/hbase"
"apache/pig" -> "apache/giraph" ["e"=1]
"apache/pig" -> "cloudera/flume" ["e"=1]
"apache/pig" -> "apache/hcatalog"
"apache/pig" -> "apache/chukwa"
"UrbanInstitute/pyspark-tutorials" -> "PacktPublishing/Learning-PySpark"
"UrbanInstitute/pyspark-tutorials" -> "mahmoudparsian/pyspark-tutorial"
"UrbanInstitute/pyspark-tutorials" -> "tirthajyoti/Spark-with-Python"
"UrbanInstitute/pyspark-tutorials" -> "drabastomek/learningPySpark"
"UrbanInstitute/pyspark-tutorials" -> "spark-examples/pyspark-examples"
"UrbanInstitute/pyspark-tutorials" -> "UrbanInstitute/spark-social-science"
"UrbanInstitute/pyspark-tutorials" -> "XD-DENG/Spark-practice"
"UrbanInstitute/pyspark-tutorials" -> "cartershanklin/pyspark-cheatsheet"
"UrbanInstitute/pyspark-tutorials" -> "jadianes/spark-py-notebooks"
"UrbanInstitute/pyspark-tutorials" -> "susanli2016/PySpark-and-MLlib"
"UrbanInstitute/pyspark-tutorials" -> "MingChen0919/learning-apache-spark"
"UrbanInstitute/pyspark-tutorials" -> "dimajix/spark-training"
"UrbanInstitute/pyspark-tutorials" -> "AlexIoannides/pyspark-example-project"
"UrbanInstitute/pyspark-tutorials" -> "lensacom/sparkit-learn"
"UrbanInstitute/pyspark-tutorials" -> "andfanilo/pyspark-tutorial"
"databricks-academy/advanced-data-engineering-with-databricks" -> "databricks-academy/apache-spark-programming-with-databricks"
"databricks-academy/advanced-data-engineering-with-databricks" -> "databricks-academy/data-engineering-with-databricks"
"databricks-academy/advanced-data-engineering-with-databricks" -> "databricks-academy/data-engineering-with-databricks-english"
"databricks-academy/advanced-data-engineering-with-databricks" -> "databricks-academy/data-analysis-with-databricks-sql"
"databricks-academy/advanced-data-engineering-with-databricks" -> "databricks-academy/just-enough-python-for-spark"
"databricks-academy/advanced-data-engineering-with-databricks" -> "databricks-academy/ml-in-production-english"
"databricks-academy/advanced-data-engineering-with-databricks" -> "databricks-academy/data-engineer-learning-path"
"databricks-academy/advanced-data-engineering-with-databricks" -> "Azure/AzureDatabricksBestPractices"
"databricks-academy/advanced-data-engineering-with-databricks" -> "hwang-db/db-common-assets"
"fluxcapacitor/pipeline" -> "andypetrella/spark-notebook"
"fluxcapacitor/pipeline" -> "cfregly/fluxcapacitor" ["e"=1]
"fluxcapacitor/pipeline" -> "yahoo/CaffeOnSpark"
"fluxcapacitor/pipeline" -> "databricks/tensorframes"
"fluxcapacitor/pipeline" -> "apache/incubator-toree"
"fluxcapacitor/pipeline" -> "OryxProject/oryx" ["e"=1]
"fluxcapacitor/pipeline" -> "sryza/aas"
"fluxcapacitor/pipeline" -> "yahoo/TensorFlowOnSpark"
"fluxcapacitor/pipeline" -> "rhiever/tpot" ["e"=1]
"fluxcapacitor/pipeline" -> "intel-analytics/BigDL"
"fluxcapacitor/pipeline" -> "killrweather/killrweather"
"fluxcapacitor/pipeline" -> "szilard/benchm-ml" ["e"=1]
"fluxcapacitor/pipeline" -> "apache/incubator-zeppelin"
"fluxcapacitor/pipeline" -> "combust/mleap"
"fluxcapacitor/pipeline" -> "databricks/spark-corenlp"
"didi/LogiAM" -> "didi/LogiEM"
"classtag/OpenKettleWebUI" -> "aoju/kettle"
"Zouxxyy/bigdata-learning" -> "sunnyandgood/BigData"
"Zouxxyy/bigdata-learning" -> "daizikaikou/learningSpark"
"didi/gatekeeper" -> "didi/collection"
"didi/gatekeeper" -> "didi/sgt"
"HuaweiBigData/carbondata" -> "apache/incubator-carbondata"
"HuaweiBigData/carbondata" -> "HuaweiBigData/astro"
"HuaweiBigData/carbondata" -> "shunfei/indexr"
"HuaweiBigData/carbondata" -> "HuaweiBigData/StreamCQL"
"apache/incubator-carbondata" -> "HuaweiBigData/carbondata"
"apache/incubator-carbondata" -> "apache/incubator-hawq"
"apache/incubator-carbondata" -> "shunfei/indexr"
"apache/incubator-carbondata" -> "HuaweiBigData/astro"
"apache/incubator-carbondata" -> "tuplejump/FiloDB"
"apache/incubator-carbondata" -> "SnappyDataInc/snappydata"
"apache/incubator-carbondata" -> "QiangCai/CarbonDataLearning"
"apache/incubator-carbondata" -> "Huawei-Spark/Spark-SQL-on-HBase"
"apache/incubator-carbondata" -> "apache/incubator-beam"
"implydata/pivot" -> "implydata/plywood"
"implydata/pivot" -> "mistercrunch/panoramix"
"implydata/pivot" -> "implydata/plyql"
"implydata/pivot" -> "druid-io/druid"
"implydata/pivot" -> "linkedin/pinot"
"implydata/pivot" -> "facetjs/facetjs"
"implydata/pivot" -> "7eggs/node-druid-query"
"implydata/pivot" -> "SparklineData/spark-druid-olap"
"implydata/pivot" -> "yahoo/swiv"
"implydata/pivot" -> "druid-io/tranquility"
"implydata/pivot" -> "druid-io/pydruid"
"implydata/pivot" -> "airbnb/caravel"
"implydata/pivot" -> "metamx/druid" ["e"=1]
"implydata/pivot" -> "srikalyc/Sql4D"
"implydata/pivot" -> "yahoo/druid-dashboard"
"leonardBang/flink-sql-etl" -> "wuchong/flink-sql-demo"
"leonardBang/flink-sql-etl" -> "springMoon/sqlSubmit"
"leonardBang/flink-sql-etl" -> "ververica/flink-sql-gateway"
"leonardBang/flink-sql-etl" -> "zhuxiaoshang/flink-be-god"
"MrPowers/chispa" -> "MrPowers/quinn"
"MrPowers/chispa" -> "MrPowers/mack"
"MrPowers/chispa" -> "palantir/pyspark-style-guide"
"MrPowers/chispa" -> "databrickslabs/dbldatagen"
"MrPowers/chispa" -> "microsoft/nutter" ["e"=1]
"MrPowers/chispa" -> "databrickslabs/dbx"
"MrPowers/chispa" -> "MrPowers/spark-style-guide"
"MrPowers/chispa" -> "awslabs/python-deequ" ["e"=1]
"MrPowers/chispa" -> "MrPowers/delta-examples"
"MrPowers/chispa" -> "MrPowers/spark-fast-tests"
"MrPowers/chispa" -> "databricks/mlops-stack"
"wlhbdp/bdp-ecology" -> "wlhbdp/bdp-gold"
"CognitiveJ/cognitivej" -> "iboxdb/ftserver"
"CognitiveJ/cognitivej" -> "linkedin/URL-Detector"
"BenFradet/spark-kafka-writer" -> "mkuthan/example-spark-kafka"
"BenFradet/spark-kafka-writer" -> "ansrivas/spark-structured-streaming"
"BenFradet/spark-kafka-writer" -> "polomarcus/Spark-Structured-Streaming-Examples"
"BenFradet/spark-kafka-writer" -> "LinMingQiang/spark-util"
"BenFradet/spark-kafka-writer" -> "jerryshao/spark-kafka-0-8-sql"
"BenFradet/spark-kafka-writer" -> "tresata/spark-kafka" ["e"=1]
"E-SoulDataGroup/spark_streaming_kafka_offset" -> "wangliangbd/SparkStreaming_Store_KafkaTopicOffset_To_HBase"
"Huawei-Spark/Spark-SQL-on-HBase" -> "nerdammer/spark-hbase-connector"
"Huawei-Spark/Spark-SQL-on-HBase" -> "unicredit/hbase-rdd"
"Huawei-Spark/Spark-SQL-on-HBase" -> "cloudera-labs/SparkOnHBase"
"Huawei-Spark/Spark-SQL-on-HBase" -> "hortonworks-spark/shc"
"Huawei-Spark/Spark-SQL-on-HBase" -> "HuaweiBigData/astro"
"Huawei-Spark/Spark-SQL-on-HBase" -> "Intel-bigdata/spark-streamingsql"
"Huawei-Spark/Spark-SQL-on-HBase" -> "koeninger/kafka-exactly-once" ["e"=1]
"Huawei-Spark/Spark-SQL-on-HBase" -> "databricks/spark-avro"
"Huawei-Spark/Spark-SQL-on-HBase" -> "dibbhatt/kafka-spark-consumer" ["e"=1]
"Huawei-Spark/Spark-SQL-on-HBase" -> "caroljmcdonald/SparkStreamingHBaseExample"
"LinMingQiang/spark-util" -> "LinMingQiang/spark-kafka"
"LinMingQiang/spark-util" -> "qindongliang/streaming-offset-to-zk"
"LinMingQiang/spark-util" -> "E-SoulDataGroup/spark_streaming_kafka_offset"
"LinMingQiang/spark-util" -> "xinghalo/Teddy"
"databricks/spark-avro" -> "databricks/spark-csv"
"databricks/spark-avro" -> "databricks/spark-redshift" ["e"=1]
"databricks/spark-avro" -> "unicredit/hbase-rdd"
"databricks/spark-avro" -> "databricks/spark-knowledgebase"
"databricks/spark-avro" -> "databricks/spark-xml"
"databricks/spark-avro" -> "Huawei-Spark/Spark-SQL-on-HBase"
"databricks/spark-avro" -> "databricks/reference-apps"
"databricks/spark-avro" -> "spark-jobserver/spark-jobserver"
"databricks/spark-avro" -> "datastax/spark-cassandra-connector"
"databricks/spark-avro" -> "holdenk/spark-testing-base"
"databricks/spark-avro" -> "cloudera-labs/SparkOnHBase"
"databricks/spark-avro" -> "tuplejump/FiloDB"
"databricks/spark-avro" -> "sksamuel/avro4s" ["e"=1]
"databricks/spark-avro" -> "linkedin/gobblin"
"databricks/spark-avro" -> "laserson/avro2parquet"
"holdenk/learning-spark-examples" -> "holdenk/elasticsearchspark"
"holdenk/learning-spark-examples" -> "holdenk/fastdataprocessingwithsparkexamples"
"holdenk/learning-spark-examples" -> "high-performance-spark/high-performance-spark-examples"
"holdenk/learning-spark-examples" -> "databricks/reference-apps"
"holdenk/learning-spark-examples" -> "spirom/LearningSpark"
"pierre94/flink-notes" -> "gingerredjade/flink-userportrait-main"
"pierre94/flink-notes" -> "zhangjun0x01/bigdata-examples"
"pierre94/flink-notes" -> "perkinls/flink-local-train"
"pierre94/flink-notes" -> "springMoon/sqlSubmit"
"pierre94/flink-notes" -> "threeknowbigdata/flink_second_understand"
"pierre94/flink-notes" -> "leesf/hudi-resources"
"pierre94/flink-notes" -> "MeetYouDevs/big-whale"
"pierre94/flink-notes" -> "lessonone1/fiflow"
"pierre94/flink-notes" -> "collabH/repository"
"pierre94/flink-notes" -> "Thpffcj/BigData-Getting-Started"
"pierre94/flink-notes" -> "wuchong/flink-sql-demo"
"pierre94/flink-notes" -> "hairless/plink"
"pierre94/flink-notes" -> "binglind/alchemy"
"pierre94/flink-notes" -> "wxgzgl/LarkMidTable"
"pierre94/flink-notes" -> "realguoshuai/hadoop_study"
"proflin/CoolplaySpark" -> "coderplay/perfj" ["e"=1]
"proflin/CoolplaySpark" -> "wecite/papers" ["e"=1]
"proflin/CoolplaySpark" -> "HuaweiBigData/carbondata"
"proflin/CoolplaySpark" -> "ngaut/builddatabase" ["e"=1]
"proflin/CoolplaySpark" -> "Flowerowl/Big-Data-Resources"
"proflin/CoolplaySpark" -> "amplab/tachyon" ["e"=1]
"proflin/CoolplaySpark" -> "codefollower/Lealone" ["e"=1]
"proflin/CoolplaySpark" -> "JerryLead/SparkInternals"
"proflin/CoolplaySpark" -> "huawei-noah/streamDM" ["e"=1]
"proflin/CoolplaySpark" -> "amplab/SparkNet"
"proflin/CoolplaySpark" -> "tuplejump/FiloDB"
"proflin/CoolplaySpark" -> "HuaweiBigData/StreamCQL"
"proflin/CoolplaySpark" -> "allwefantasy/streamingpro"
"proflin/CoolplaySpark" -> "shijinkui/spark_study"
"proflin/CoolplaySpark" -> "apache/incubator-zeppelin"
"sunbow1/SparkMLlibDeepLearn" -> "chimpler/blog-spark-food-recommendation"
"sunbow1/SparkMLlibDeepLearn" -> "yangtong123/RoadOfStudySpark"
"swartzrock/LearningScalaMaterials" -> "deanwampler/prog-scala-2nd-ed-code-examples"
"coffeehu/CBoard-v" -> "Ryan--Yang/CBoard-boot"
"ruisibi/olap" -> "ruisibi/rsbi-vue"
"ruisibi/olap" -> "ruisibi/rsbi-pom"
"cerndb/spark-dashboard" -> "cerndb/SparkPlugins"
"codingdebugallday/common-datax" -> "codingdebugallday/image-recognition"
"codingdebugallday/common-datax" -> "codingdebugallday/dtx-explore"
"codingdebugallday/common-datax" -> "codingdebugallday/juc-explore"
"codingdebugallday/common-datax" -> "codingdebugallday/spark-explore"
"codingdebugallday/common-datax" -> "codingdebugallday/spring-cloud-stream-explore"
"codingdebugallday/common-datax" -> "codingdebugallday/DataX"
"codingdebugallday/common-datax" -> "codingdebugallday/azkaban"
"codingdebugallday/common-datax" -> "codingdebugallday/azkaban-mail-service"
"codingdebugallday/common-datax" -> "codingdebugallday/docker-kubernetes"
"codingdebugallday/common-datax" -> "codingdebugallday/pub-sub-explore"
"NVIDIA/spark-rapids" -> "NVIDIA/spark-rapids-examples"
"NVIDIA/spark-rapids" -> "databricks/spark-sql-perf"
"NVIDIA/spark-rapids" -> "uber/RemoteShuffleService"
"NVIDIA/spark-rapids" -> "oap-project/gluten"
"NVIDIA/spark-rapids" -> "microsoft/hyperspace"
"NVIDIA/spark-rapids" -> "NVIDIA/spark-rapids-jni"
"NVIDIA/spark-rapids" -> "oap-project/gazelle_plugin"
"NVIDIA/spark-rapids" -> "datamechanics/delight"
"NVIDIA/spark-rapids" -> "rapidsai/tpcx-bb" ["e"=1]
"NVIDIA/spark-rapids" -> "rapidsai/rmm" ["e"=1]
"NVIDIA/spark-rapids" -> "NVIDIA/spark-rapids-tools"
"NVIDIA/spark-rapids" -> "NVIDIA/spark-rapids-benchmarks"
"NVIDIA/spark-rapids" -> "BlazingDB/blazingsql" ["e"=1]
"NVIDIA/spark-rapids" -> "NVIDIA/spark-xgboost-examples"
"NVIDIA/spark-rapids" -> "NVIDIA/NVTabular" ["e"=1]
"thunder-project/thunder" -> "bolt-project/bolt"
"thunder-project/thunder" -> "lightning-viz/lightning"
"thunder-project/thunder" -> "lensacom/sparkit-learn"
"thunder-project/thunder" -> "cloudera/spark-timeseries"
"thunder-project/thunder" -> "amplab/keystone"
"thunder-project/thunder" -> "nipy/nitime" ["e"=1]
"thunder-project/thunder" -> "amplab/succinct"
"thunder-project/thunder" -> "simonsfoundation/CaImAn" ["e"=1]
"CODAIT/spark-bench" -> "ehiggs/spark-terasort"
"CODAIT/spark-bench" -> "IBM/spark-tpc-ds-performance-test"
"MrPowers/spark-daria" -> "MrPowers/spark-fast-tests"
"MrPowers/spark-daria" -> "MrPowers/quinn"
"MrPowers/spark-daria" -> "MrPowers/spark-style-guide"
"MrPowers/spark-daria" -> "holdenk/spark-testing-base"
"MrPowers/spark-daria" -> "typelevel/frameless" ["e"=1]
"MrPowers/spark-daria" -> "qubole/sparklens"
"MrPowers/spark-daria" -> "awslabs/deequ" ["e"=1]
"MrPowers/spark-daria" -> "LucaCanali/sparkMeasure"
"MrPowers/spark-daria" -> "microsoft/hyperspace"
"MrPowers/spark-daria" -> "awesome-spark/awesome-spark"
"MrPowers/spark-daria" -> "YotpoLtd/metorikku"
"MrPowers/spark-daria" -> "swoop-inc/spark-alchemy"
"MrPowers/spark-daria" -> "delta-io/connectors"
"MrPowers/spark-daria" -> "AbsaOSS/spline" ["e"=1]
"MrPowers/spark-daria" -> "awesome-spark/spark-gotchas"
"streamnative/function-mesh" -> "streamnative/charts"
"streamnative/function-mesh" -> "apache/pulsar-site"
"streamnative/function-mesh" -> "streamnative/pulsar-flink"
"streamnative/function-mesh" -> "spring-projects-experimental/spring-pulsar"
"streamnative/function-mesh" -> "streamthoughts/apache-pulsar-cheat-sheet"
"streamnative/function-mesh" -> "streamnative/pulsar-rs"
"apache/hop" -> "apache/incubator-inlong"
"apache/hop" -> "flowerfine/scaleph"
"apache/hop" -> "apache/incubator-linkis"
"apache/hop" -> "apache/incubator-kyuubi"
"apache/hop" -> "HiromuHota/pentaho-kettle"
"apache/hop" -> "qlangtech/tis"
"apache/hop" -> "JoeyBling/webkettle"
"apache/hop" -> "streamxhub/streamx"
"apache/hop" -> "WeBankFinTech/Exchangis"
"apache/hop" -> "apache/atlas" ["e"=1]
"apache/hop" -> "xuanbo/kettle-web"
"deanwampler/prog-scala-2nd-ed-code-examples" -> "swartzrock/LearningScalaMaterials"
"deanwampler/prog-scala-2nd-ed-code-examples" -> "deanwampler/spark-scala-tutorial"
"deanwampler/prog-scala-2nd-ed-code-examples" -> "VaughnVernon/ReactiveMessagingPatterns_ActorModel" ["e"=1]
"deanwampler/prog-scala-2nd-ed-code-examples" -> "manuelbernhardt/reactive-web-applications"
"deanwampler/prog-scala-2nd-ed-code-examples" -> "Hawstein/play-for-scala-developers" ["e"=1]
"deanwampler/prog-scala-2nd-ed-code-examples" -> "jsuereth/scala-arm" ["e"=1]
"jpmml/jpmml-sparkml" -> "openscoring/openscoring"
"jpmml/jpmml-sparkml" -> "jpmml/jpmml-evaluator-spark"
"jpmml/jpmml-sparkml" -> "jpmml/jpmml-evaluator"
"jpmml/jpmml-sparkml" -> "jpmml/jpmml-model"
"jpmml/jpmml-sparkml" -> "jpmml/jpmml-sklearn"
"jpmml/jpmml-sparkml" -> "jpmml/pyspark2pmml"
"jpmml/jpmml-sparkml" -> "jpmml/jpmml-xgboost"
"jpmml/jpmml-sparkml" -> "jpmml/jpmml-sparkml-xgboost"
"jpmml/jpmml-sparkml" -> "jpmml/jpmml-lightgbm"
"jpmml/jpmml-sparkml" -> "jpmml/jpmml-tensorflow"
"jpmml/jpmml-sparkml" -> "combust/mleap"
"jpmml/jpmml-sparkml" -> "jpmml/sklearn2pmml"
"jpmml/jpmml-sparkml" -> "rjagerman/glint" ["e"=1]
"hadooparchitecturebook/hadoop-arch-book" -> "hadooparchitecturebook/clickstream-tutorial"
"hadooparchitecturebook/hadoop-arch-book" -> "hadooparchitecturebook/SparkOnALog"
"hadooparchitecturebook/hadoop-arch-book" -> "hadooparchitecturebook/SparkStreaming.Sessionization"
"hadooparchitecturebook/hadoop-arch-book" -> "hadooparchitecturebook/fraud-detection-tutorial"
"houshanren/big_data_architect_skills" -> "sunnyandgood/BigData"
"houshanren/big_data_architect_skills" -> "monsonlee/BigData"
"houshanren/big_data_architect_skills" -> "oeljeklaus-you/JavaOrBigData-Interview"
"houshanren/big_data_architect_skills" -> "realguoshuai/hadoop_study"
"houshanren/big_data_architect_skills" -> "WadeStack/BigDataIE"
"houshanren/big_data_architect_skills" -> "SwordfallYeung/Interview_BigData"
"houshanren/big_data_architect_skills" -> "oeljeklaus-you/UserActionAnalyzePlatform"
"houshanren/big_data_architect_skills" -> "CheckChe0803/BigData-Interview"
"houshanren/big_data_architect_skills" -> "TALKDATA/JavaBigData"
"houshanren/big_data_architect_skills" -> "vbay/big-data"
"houshanren/big_data_architect_skills" -> "qindongliang/streaming-offset-to-zk"
"houshanren/big_data_architect_skills" -> "weiweifan/Big-Data-Resources"
"houshanren/big_data_architect_skills" -> "teeyog/IQL"
"houshanren/big_data_architect_skills" -> "cjuexuan/mynote"
"houshanren/big_data_architect_skills" -> "yangtong123/StudySpark"
"apache/pulsar-client-go" -> "streamnative/pulsarctl"
"apache/pulsar-client-go" -> "apache/pulsar-manager"
"apache/pulsar-client-go" -> "apache/pulsar-helm-chart"
"apache/pulsar-client-go" -> "streamnative/pulsar-rs"
"apache/pulsar-client-go" -> "wolfstudy/pulsar-client-go"
"apache/pulsar-client-go" -> "Comcast/pulsar-client-go"
"apache/pulsar-client-go" -> "streamnative/aop"
"apache/pulsar-client-go" -> "streamnative/apache-pulsar-grafana-dashboard"
"apache/pulsar-client-go" -> "streamnative/kop"
"apache/pulsar-client-go" -> "apache/bookkeeper" ["e"=1]
"apache/pulsar-client-go" -> "streamnative/mop"
"apache/pulsar-client-go" -> "streamnative/function-mesh"
"apache/pulsar-client-go" -> "streamnative/charts"
"apache/pulsar-client-go" -> "kuangye098/Pulsar-analysis"
"apache/pulsar-client-go" -> "apache/pulsar" ["e"=1]
"kuangye098/Pulsar-analysis" -> "streamnative/tgip-cn"
"kuangye098/Pulsar-analysis" -> "streamnative/apache-pulsar-grafana-dashboard"
"airbnb/airbnb-spark-thrift" -> "airbnb/bugsnag-android"
"airbnb/airbnb-spark-thrift" -> "airbnb/audited"
"airbnb/airbnb-spark-thrift" -> "airbnb/butterknife"
"airbnb/airbnb-spark-thrift" -> "airbnb/aws-cli"
"airbnb/airbnb-spark-thrift" -> "airbnb/brace"
"airbnb/airbnb-spark-thrift" -> "airbnb/appear"
"airbnb/airbnb-spark-thrift" -> "airbnb/apollo-android"
"airbnb/airbnb-spark-thrift" -> "airbnb/android-mapviewballoons"
"airbnb/airbnb-spark-thrift" -> "airbnb/alerts"
"airbnb/airbnb-spark-thrift" -> "airbnb/apple-tv-auth"
"apache/bigtop" -> "apache/ambari"
"apache/bigtop" -> "apache/hama" ["e"=1]
"apache/bigtop" -> "apache/ranger"
"apache/bigtop" -> "apache/tez"
"apache/bigtop" -> "apache/oozie"
"apache/bigtop" -> "hortonworks/hive-testbench"
"51nb/marble" -> "yuqi1129/calcite-test"
"51nb/marble" -> "quxiucheng/apache-calcite-tutorial"
"51nb/marble" -> "51nb/miox"
"will-che/BigData-Interview" -> "MoRan1607/BigDataGuide"
"will-che/BigData-Interview" -> "will-che/flink-simple-tutorial"
"amplab/SparkNet" -> "yahoo/CaffeOnSpark"
"amplab/SparkNet" -> "databricks/tensorframes"
"amplab/SparkNet" -> "dirkneumann/deepdist"
"amplab/SparkNet" -> "adatao/tensorspark"
"amplab/SparkNet" -> "intel-machine-learning/DistML" ["e"=1]
"amplab/SparkNet" -> "amplab/keystone"
"amplab/SparkNet" -> "petuum/bosen" ["e"=1]
"amplab/SparkNet" -> "huawei-noah/streamDM" ["e"=1]
"amplab/SparkNet" -> "sunbow1/SparkMLlibDeepLearn"
"amplab/SparkNet" -> "andypetrella/spark-notebook"
"amplab/SparkNet" -> "dmlc/parameter_server" ["e"=1]
"amplab/SparkNet" -> "cloudml/zen" ["e"=1]
"amplab/SparkNet" -> "proflin/CoolplaySpark"
"amplab/SparkNet" -> "h2oai/sparkling-water"
"amplab/SparkNet" -> "rotationsymmetry/sparkxgboost"
"dataArtisans/da-streamingledger" -> "ververica/stateful-functions"
"quxiucheng/apache-calcite-tutorial" -> "yuqi1129/calcite-test"
"quxiucheng/apache-calcite-tutorial" -> "apache/calcite"
"quxiucheng/apache-calcite-tutorial" -> "Qihoo360/Quicksql"
"quxiucheng/apache-calcite-tutorial" -> "ververica/flink-sql-gateway"
"quxiucheng/apache-calcite-tutorial" -> "leesf/hudi-resources"
"quxiucheng/apache-calcite-tutorial" -> "binglind/alchemy"
"quxiucheng/apache-calcite-tutorial" -> "apache/flink-table-store"
"quxiucheng/apache-calcite-tutorial" -> "wuchong/flink-sql-submit"
"quxiucheng/apache-calcite-tutorial" -> "wangzzu/program-example"
"quxiucheng/apache-calcite-tutorial" -> "uber/AthenaX"
"quxiucheng/apache-calcite-tutorial" -> "flink-extended/flink-remote-shuffle"
"quxiucheng/apache-calcite-tutorial" -> "DTStack/flinkStreamSQL"
"quxiucheng/apache-calcite-tutorial" -> "51nb/marble"
"quxiucheng/apache-calcite-tutorial" -> "liancheng/spear"
"quxiucheng/apache-calcite-tutorial" -> "HamaWhiteGG/flink-sql-lineage"
"wxgzgl/flinkx-web" -> "hairless/plink"
"wxgzgl/flinkx-web" -> "lessonone1/fiflow"
"wxgzgl/flinkx-web" -> "wxgzgl/flinkx-web-ui"
"rapidsai/pygdf" -> "rapidsai/libgdf"
"rapidsai/pygdf" -> "rapidsai/cudf-alpha"
"apache/incubator-zipkin" -> "apache/incubator-zipkin-brave"
"apache/incubator-zipkin" -> "openopps/openopps-platform"
"apache/incubator-zipkin" -> "openzipkin/docker-zipkin"
"FlinkML/flink-tensorflow" -> "alibaba/flink-ai-extended"
"airlift/airlift" -> "airlift/slice" ["e"=1]
"airlift/airlift" -> "linkedin/coral"
"airlift/airlift" -> "prestosql/presto"
"airlift/airlift" -> "airlift/airbase"
"airlift/airlift" -> "lyft/presto-gateway"
"airlift/airlift" -> "martint/jmxutils" ["e"=1]
"airlift/airlift" -> "linkedin/transport"
"airlift/airlift" -> "qubole/presto-udfs"
"airlift/airlift" -> "airlift/airline" ["e"=1]
"airlift/airlift" -> "airlift/discovery"
"airlift/airlift" -> "prestodb/presto-admin" ["e"=1]
"airlift/airlift" -> "proofpoint/platform"
"airlift/airlift" -> "qubole/rubix"
"airlift/airlift" -> "dremio/gandiva"
"airlift/airlift" -> "apache/orc"
"dataArtisans/flink-streaming-demo" -> "dataArtisans/flink-training-exercises"
"dataArtisans/flink-streaming-demo" -> "bytefish/FlinkExperiments"
"dataArtisans/flink-streaming-demo" -> "StephanEwen/flink-demos"
"dataArtisans/flink-streaming-demo" -> "docker-flink/docker-flink"
"dataArtisans/flink-streaming-demo" -> "project-flink/flink-perf"
"linkedin/transport" -> "linkedin/coral"
"linkedin/transport" -> "lyft/presto-gateway"
"linkedin/transport" -> "qubole/presto-udfs"
"linkedin/transport" -> "linkedin/iceberg"
"linkedin/transport" -> "oap-project/gluten"
"linkedin/transport" -> "linkedin/linkedin-calcite"
"linkedin/transport" -> "alibaba/RemoteShuffleService"
"linkedin/transport" -> "uber/RemoteShuffleService"
"nerdammer/spark-hbase-connector" -> "unicredit/hbase-rdd"
"nerdammer/spark-hbase-connector" -> "cloudera-labs/SparkOnHBase"
"nerdammer/spark-hbase-connector" -> "hortonworks-spark/shc"
"nerdammer/spark-hbase-connector" -> "Huawei-Spark/Spark-SQL-on-HBase"
"nerdammer/spark-hbase-connector" -> "caroljmcdonald/SparkStreamingHBaseExample"
"nerdammer/spark-hbase-connector" -> "NGDATA/hbase-indexer" ["e"=1]
"nerdammer/spark-hbase-connector" -> "allwefantasy/streamingpro"
"nerdammer/spark-hbase-connector" -> "IBM/sparksql-for-hbase"
"nerdammer/spark-hbase-connector" -> "apache/hbase-connectors"
"sryza/spark-timeseries" -> "twosigma/flint"
"sryza/spark-timeseries" -> "sryza/spark-ts-examples"
"sryza/spark-timeseries" -> "andypetrella/spark-notebook"
"sryza/spark-timeseries" -> "databricks/spark-deep-learning"
"sryza/spark-timeseries" -> "jaceklaskowski/mastering-apache-spark-book"
"sryza/spark-timeseries" -> "irvingc/dbscan-on-spark" ["e"=1]
"sryza/spark-timeseries" -> "databricks/spark-csv"
"sryza/spark-timeseries" -> "h2oai/sparkling-water"
"sryza/spark-timeseries" -> "databricks/tensorframes"
"sryza/spark-timeseries" -> "yahoo/egads" ["e"=1]
"sryza/spark-timeseries" -> "scalanlp/breeze" ["e"=1]
"sryza/spark-timeseries" -> "huawei-noah/streamDM" ["e"=1]
"sryza/spark-timeseries" -> "jpmml/jpmml-sparkml"
"sryza/spark-timeseries" -> "spark-notebook/spark-notebook"
"sryza/spark-timeseries" -> "killrweather/killrweather"
"zafarkhaja/jsemver" -> "vdurmont/semver4j"
"airbnb/lunar" -> "airbnb/nimbus"
"airbnb/lunar" -> "milesj/aesthetic"
"airbnb/lunar" -> "airbnb/react-component-variations"
"airbnb/lunar" -> "beemojs/beemo"
"dirkneumann/deepdist" -> "guoding83128/OpenDL"
"dirkneumann/deepdist" -> "amplab/SparkNet"
"dirkneumann/deepdist" -> "adatao/tensorspark"
"dirkneumann/deepdist" -> "yahoo/CaffeOnSpark"
"dirkneumann/deepdist" -> "petuum/public" ["e"=1]
"dirkneumann/deepdist" -> "intel-machine-learning/DistML" ["e"=1]
"dirkneumann/deepdist" -> "cloudml/zen" ["e"=1]
"dirkneumann/deepdist" -> "yajiemiao/pdnn" ["e"=1]
"dirkneumann/deepdist" -> "amplab/keystone"
"dirkneumann/deepdist" -> "skrusche63/spark-fm" ["e"=1]
"crealytics/spark-excel" -> "apache/hbase-connectors"
"crealytics/spark-excel" -> "allwefantasy/spark-binlog"
"crealytics/spark-excel" -> "ZuInnoTe/hadoopoffice"
"crealytics/spark-excel" -> "AbsaOSS/spline" ["e"=1]
"crealytics/spark-excel" -> "MrPowers/spark-daria"
"databricks/tech-talks" -> "dennyglee/databricks"
"databricks/tech-talks" -> "databricks/delta-live-tables-notebooks"
"databricks/tech-talks" -> "vivek-bombatkar/Databricks-Apache-Spark-2X-Certified-Developer"
"databricks/tech-talks" -> "mspnp/spark-monitoring"
"databricks/tech-talks" -> "databricks/LearningSparkV2"
"databricks/tech-talks" -> "microsoft/nutter" ["e"=1]
"databricks/tech-talks" -> "databrickslabs/cicd-templates"
"databricks/tech-talks" -> "databricks-academy/advanced-data-engineering-with-databricks"
"databricks/tech-talks" -> "databricks-academy/apache-spark-programming-with-databricks"
"databricks/tech-talks" -> "databricks-academy/data-engineering-with-databricks"
"databricks/tech-talks" -> "japila-books/delta-lake-internals"
"databricks/tech-talks" -> "databrickslabs/terraform-provider-databricks"
"databricks/tech-talks" -> "fabragaMS/ADPE2E" ["e"=1]
"databricks/tech-talks" -> "databricks/koalas" ["e"=1]
"databricks/tech-talks" -> "Azure-Samples/Synapse" ["e"=1]
"databrickslabs/tempo" -> "databrickslabs/overwatch"
"databrickslabs/tempo" -> "databrickslabs/mosaic" ["e"=1]
"databrickslabs/tempo" -> "databrickslabs/geoscan"
"databrickslabs/tempo" -> "databrickslabs/dataframe-rules-engine"
"databrickslabs/tempo" -> "paiqo/Databricks-VSCode"
"thulab/iotdb-benchmark" -> "apache/iotdb-web-workbench"
"Pivotal-Open-Source-Hub/StockInference-Spark" -> "Pivotal-Open-Source-Hub/StockPrediction"
"Pivotal-Open-Source-Hub/StockInference-Spark" -> "Pivotal-Open-Source-Hub/WifiAnalyticsIoT"
"Pivotal-Open-Source-Hub/StockInference-Spark" -> "apache/incubator-geode"
"deanwampler/JustEnoughScalaForSpark" -> "deanwampler/spark-scala-tutorial"
"deanwampler/JustEnoughScalaForSpark" -> "spirom/LearningSpark"
"deanwampler/JustEnoughScalaForSpark" -> "LucaCanali/sparkMeasure"
"deanwampler/JustEnoughScalaForSpark" -> "spark-notebook/spark-notebook"
"deanwampler/JustEnoughScalaForSpark" -> "groupon/sparklint"
"deanwampler/JustEnoughScalaForSpark" -> "awesome-spark/awesome-spark"
"deanwampler/JustEnoughScalaForSpark" -> "jaceklaskowski/spark-workshop"
"deanwampler/JustEnoughScalaForSpark" -> "databricks/scala-style-guide" ["e"=1]
"deanwampler/JustEnoughScalaForSpark" -> "deanwampler/programming-scala-book-code-examples"
"deanwampler/JustEnoughScalaForSpark" -> "jaceklaskowski/mastering-apache-spark-book"
"deanwampler/JustEnoughScalaForSpark" -> "killrweather/killrweather"
"deanwampler/JustEnoughScalaForSpark" -> "MrPowers/spark-daria"
"deanwampler/JustEnoughScalaForSpark" -> "MrPowers/spark-fast-tests"
"deanwampler/JustEnoughScalaForSpark" -> "holdenk/spark-testing-base"
"deanwampler/JustEnoughScalaForSpark" -> "databricks/Spark-The-Definitive-Guide"
"endymecy/spark-config-and-tuning" -> "endymecy/spark-graphx-source-analysis"
"SparkTC/systemml" -> "apache/incubator-systemml"
"SparkTC/systemml" -> "apache/incubator-systemml-website"
"SparkTC/systemml" -> "Microsoft/multiverso" ["e"=1]
"SparkTC/systemml" -> "apache/bahir"
"SparkTC/systemml" -> "Samsung/veles" ["e"=1]
"SparkTC/systemml" -> "IDSIA/brainstorm" ["e"=1]
"SparkTC/systemml" -> "apache/bahir-website"
"PacktPublishing/Learning-PySpark" -> "UrbanInstitute/pyspark-tutorials"
"PacktPublishing/Learning-PySpark" -> "drabastomek/learningPySpark"
"PacktPublishing/Learning-PySpark" -> "mahmoudparsian/pyspark-tutorial"
"PacktPublishing/Learning-PySpark" -> "awantik/pyspark-tutorial"
"PacktPublishing/Learning-PySpark" -> "susanli2016/PySpark-and-MLlib"
"PacktPublishing/Learning-PySpark" -> "jadianes/spark-py-notebooks"
"PacktPublishing/Learning-PySpark" -> "PacktPublishing/PySpark-Cookbook"
"PacktPublishing/Learning-PySpark" -> "XD-DENG/Spark-practice"
"PacktPublishing/Learning-PySpark" -> "matteoredaelli/pyspark-examples"
"PacktPublishing/Learning-PySpark" -> "awantik/pyspark-learning"
"PacktPublishing/Learning-PySpark" -> "tirthajyoti/Spark-with-Python"
"PacktPublishing/Learning-PySpark" -> "spark-examples/pyspark-examples"
"cartershanklin/pyspark-cheatsheet" -> "sankamuk/PysparkCheatsheet"
"cartershanklin/pyspark-cheatsheet" -> "arverma007/DataEngineering"
"cartershanklin/pyspark-cheatsheet" -> "kevinschaich/pyspark-cheatsheet"
"cartershanklin/pyspark-cheatsheet" -> "Saurav3218/Pyspark_Questions_SKS"
"cartershanklin/pyspark-cheatsheet" -> "martandsingh/ApacheSpark"
"cartershanklin/pyspark-cheatsheet" -> "itversity/data-engineering-spark"
"microsoft/hyperspace" -> "delta-io/connectors"
"microsoft/hyperspace" -> "oap-project/gazelle_plugin"
"microsoft/hyperspace" -> "lightcopy/parquet-index"
"microsoft/hyperspace" -> "qubole/sparklens"
"microsoft/hyperspace" -> "MrPowers/spark-daria"
"microsoft/hyperspace" -> "xskipper-io/xskipper"
"microsoft/hyperspace" -> "linkedin/coral"
"microsoft/hyperspace" -> "Intel-bigdata/OAP"
"microsoft/hyperspace" -> "blaze-init/blaze"
"microsoft/hyperspace" -> "uber/RemoteShuffleService"
"microsoft/hyperspace" -> "Intel-bigdata/spark-adaptive"
"microsoft/hyperspace" -> "alibaba/RemoteShuffleService"
"microsoft/hyperspace" -> "NVIDIA/spark-rapids"
"microsoft/hyperspace" -> "swoop-inc/spark-alchemy"
"microsoft/hyperspace" -> "alibaba/SparkCube"
"minrk/findspark" -> "apache/incubator-toree"
"minrk/findspark" -> "lensacom/sparkit-learn"
"minrk/findspark" -> "alexarchambault/jupyter-scala" ["e"=1]
"stratosphere/stratosphere" -> "apache/incubator-flink"
"stratosphere/stratosphere" -> "stratosphere/stratosphere-streaming"
"apache/incubator-flink" -> "stratosphere/stratosphere"
"apache/incubator-flink" -> "stratosphere/stratosphere-streaming"
"intel-hadoop/gearpump" -> "krasserm/akka-analytics" ["e"=1]
"intel-hadoop/gearpump" -> "continuuity/weave" ["e"=1]
"intel-hadoop/gearpump" -> "ooyala/spark-jobserver"
"amplab/training" -> "amplab/training-scripts"
"felayman/elasticsearch-full" -> "LuXugang/Lucene-7.5.0"
"julianhyde/sqlline" -> "apache/calcite-avatica"
"julianhyde/sqlline" -> "apache/calcite"
"julianhyde/sqlline" -> "quxiucheng/apache-calcite-tutorial"
"julianhyde/sqlline" -> "janino-compiler/janino" ["e"=1]
"julianhyde/sqlline" -> "julianhyde/linq4j" ["e"=1]
"julianhyde/sqlline" -> "yuqi1129/calcite-test"
"julianhyde/sqlline" -> "julianhyde/optiq" ["e"=1]
"julianhyde/sqlline" -> "apache/phoenix"
"julianhyde/sqlline" -> "HamaWhiteGG/flink-sql-lineage"
"konglinghai123/renren_kettle" -> "konglinghai123/kettle"
"konglinghai123/renren_kettle" -> "haochenchn/kettle-springboot"
"edp963/moonbox" -> "edp963/wormhole"
"edp963/moonbox" -> "BriData/DBus"
"edp963/moonbox" -> "edp963/davinci"
"edp963/moonbox" -> "WeBankFinTech/Scriptis"
"edp963/moonbox" -> "Qihoo360/Quicksql"
"edp963/moonbox" -> "harbby/sylph"
"edp963/moonbox" -> "teeyog/IQL"
"edp963/moonbox" -> "allwefantasy/streamingpro"
"edp963/moonbox" -> "Qihoo360/XSQL"
"edp963/moonbox" -> "allwefantasy/spark-binlog"
"edp963/moonbox" -> "WeBankFinTech/Exchangis"
"edp963/moonbox" -> "cas-bigdatalab/piflow"
"edp963/moonbox" -> "InterestingLab/waterdrop"
"edp963/moonbox" -> "WeBankFinTech/Qualitis"
"edp963/moonbox" -> "scxwhite/hera"
"ericxiao251/spark-syntax" -> "kevinschaich/pyspark-cheatsheet"
"ericxiao251/spark-syntax" -> "UrbanInstitute/pyspark-tutorials"
"ericxiao251/spark-syntax" -> "MrPowers/quinn"
"ericxiao251/spark-syntax" -> "XD-DENG/Spark-practice"
"ericxiao251/spark-syntax" -> "ekampf/PySpark-Boilerplate"
"ericxiao251/spark-syntax" -> "runawayhorse001/LearningApacheSpark"
"ericxiao251/spark-syntax" -> "awesome-spark/spark-gotchas"
"streamnative/tgip-cn" -> "kuangye098/Pulsar-analysis"
"uber/hudi" -> "uber/marmaray"
"uber/hudi" -> "apache/incubator-iceberg"
"uber/hudi" -> "ververica/stateful-functions"
"uber/hudi" -> "qubole/sparklens"
"uber/hudi" -> "Netflix/iceberg"
"MingChen0919/learning-apache-spark" -> "kevinschaich/pyspark-cheatsheet"
"MingChen0919/learning-apache-spark" -> "runawayhorse001/LearningApacheSpark"
"MingChen0919/learning-apache-spark" -> "UrbanInstitute/pyspark-tutorials"
"MingChen0919/learning-apache-spark" -> "jkthompson/pyspark-pictures"
"MingChen0919/learning-apache-spark" -> "PacktPublishing/Learning-PySpark"
"EverythingMe/redash" -> "airbnb/airflow"
"EverythingMe/redash" -> "walkr/oi" ["e"=1]
"EverythingMe/redash" -> "EverythingMe/redshift_console" ["e"=1]
"EverythingMe/redash" -> "onefinestay/nameko" ["e"=1]
"EverythingMe/redash" -> "cloudera/ibis" ["e"=1]
"EverythingMe/redash" -> "paulasmuth/fnordmetric" ["e"=1]
"EverythingMe/redash" -> "kvh/ramp" ["e"=1]
"EverythingMe/redash" -> "epantry/django-sql-explorer" ["e"=1]
"EverythingMe/redash" -> "yhat/db.py" ["e"=1]
"EverythingMe/redash" -> "EverythingMe/rainbow"
"EverythingMe/redash" -> "tylertreat/BigQuery-Python" ["e"=1]
"EverythingMe/redash" -> "mikesall/charted" ["e"=1]
"EverythingMe/redash" -> "airbnb/caravel"
"EverythingMe/redash" -> "clarkduvall/serpy" ["e"=1]
"EverythingMe/redash" -> "linkedin/pinot"
"lyft/flinkk8soperator" -> "GoogleCloudPlatform/flink-on-k8s-operator"
"lyft/flinkk8soperator" -> "apache/flink-kubernetes-operator"
"lyft/flinkk8soperator" -> "apache/flink-docker"
"lyft/flinkk8soperator" -> "docker-flink/examples"
"lyft/flinkk8soperator" -> "ververica/stateful-functions"
"lyft/flinkk8soperator" -> "ververica/flink-sql-cookbook"
"lyft/flinkk8soperator" -> "streamnative/pulsar-flink"
"lyft/flinkk8soperator" -> "flink-extended/flink-remote-shuffle"
"lyft/flinkk8soperator" -> "apache/flink-benchmarks"
"lyft/flinkk8soperator" -> "docker-flink/docker-flink"
"lyft/flinkk8soperator" -> "apache/flink-statefun"
"lyft/flinkk8soperator" -> "ververica/flink-sql-gateway"
"lyft/flinkk8soperator" -> "apache/flink-table-store"
"lyft/flinkk8soperator" -> "king/bravo"
"lyft/flinkk8soperator" -> "ottogroup/flink-spector"
"yaooqinn/kyuubi" -> "yaooqinn/spark-authorizer"
"yaooqinn/kyuubi" -> "Intel-bigdata/spark-adaptive"
"yaooqinn/kyuubi" -> "teeyog/IQL"
"yaooqinn/kyuubi" -> "harbby/sylph"
"yaooqinn/kyuubi" -> "alibaba/SparkCube"
"yaooqinn/kyuubi" -> "cjuexuan/mynote"
"yaooqinn/kyuubi" -> "apache/incubator-livy"
"yaooqinn/kyuubi" -> "allwefantasy/spark-binlog"
"yaooqinn/kyuubi" -> "allwefantasy/streamingpro"
"yaooqinn/kyuubi" -> "yaooqinn/spark-ranger"
"yaooqinn/kyuubi" -> "edp963/wormhole"
"yaooqinn/kyuubi" -> "linkedin/dr-elephant"
"yaooqinn/kyuubi" -> "edp963/moonbox"
"yaooqinn/kyuubi" -> "InterestingLab/waterdrop"
"yaooqinn/kyuubi" -> "linkedin/transport"
"endymecy/spark-graphx-source-analysis" -> "cld378632668/A-community-detect-System-based-on-GraphX" ["e"=1]
"endymecy/spark-graphx-source-analysis" -> "endymecy/spark-config-and-tuning"
"endymecy/spark-graphx-source-analysis" -> "endymecy/spark-programming-guide-zh-cn"
"endymecy/spark-graphx-source-analysis" -> "amplab/graphx" ["e"=1]
"endymecy/spark-graphx-source-analysis" -> "shijinkui/spark_study"
"endymecy/spark-graphx-source-analysis" -> "cld378632668/Source-Notes-Chinese-translations-of-Spark-GraphX" ["e"=1]
"endymecy/spark-graphx-source-analysis" -> "weijie-he/jinyong"
"endymecy/spark-graphx-source-analysis" -> "endymecy/spark-ml-source-analysis"
"streamsets/tutorials" -> "streamsets/datacollector"
"streamsets/tutorials" -> "streamsets/datacollector-docker"
"databricks-academy/scalable-machine-learning-with-apache-spark-english" -> "databricks-academy/ml-in-production-english"
"implydata/plywood" -> "implydata/pivot"
"implydata/plywood" -> "implydata/plyql"
"implydata/plywood" -> "7eggs/node-druid-query"
"implydata/plywood" -> "mistercrunch/panoramix"
"implydata/plywood" -> "druid-io/tranquility"
"implydata/plywood" -> "implydata/druid"
"implydata/plywood" -> "yahoo/swiv"
"openzipkin/zipkin-reporter-java" -> "openzipkin/zipkin-aws"
"todd5167/flink-spark-submiter" -> "MeetYouDevs/big-whale"
"todd5167/flink-spark-submiter" -> "hairless/plink"
"todd5167/flink-spark-submiter" -> "zhangjun0x01/bigdata-examples"
"todd5167/flink-spark-submiter" -> "springMoon/sqlSubmit"
"phatak-dev/spark2.0-examples" -> "jaceklaskowski/spark-structured-streaming-book"
"phatak-dev/spark2.0-examples" -> "polomarcus/Spark-Structured-Streaming-Examples"
"phatak-dev/spark2.0-examples" -> "mkuthan/example-spark"
"itisaid/sokeeper" -> "taireum/go-taireum"
"itisaid/sokeeper" -> "itisaid/cmdb"
"itisaid/sokeeper" -> "zhihuili/robot"
"streaming-with-flink/examples-java" -> "streaming-with-flink/examples-scala"
"streaming-with-flink/examples-java" -> "streaming-with-flink/examples"
"streaming-with-flink/examples-java" -> "ververica/flink-training-exercises"
"streaming-with-flink/examples-java" -> "apache/flink-training"
"streaming-with-flink/examples-java" -> "zlb1028/learning-flink"
"streaming-with-flink/examples-java" -> "apache/flink-playgrounds"
"eracle/linkedin" -> "joeyism/linkedin_scraper"
"eracle/linkedin" -> "austinoboyle/scrape-linkedin-selenium"
"eracle/linkedin" -> "MattFlood7/LinkedInBot"
"eracle/linkedin" -> "linkedtales/scrapedin"
"eracle/linkedin" -> "LiuXingMing/LinkedinSpider"
"eracle/linkedin" -> "jvandenaardweg/linkedin-profile-scraper"
"eracle/linkedin" -> "dchrastil/ScrapedIn" ["e"=1]
"eracle/linkedin" -> "linkedtales/scrapedin-linkedin-crawler"
"eracle/linkedin" -> "kirkhunter/linkedin-jobs-scraper"
"eracle/linkedin" -> "initstring/linkedin2username" ["e"=1]
"eracle/linkedin" -> "tomquirk/linkedin-api"
"eracle/linkedin" -> "ozgur/python-linkedin"
"eracle/linkedin" -> "mdsecactivebreach/LinkedInt" ["e"=1]
"eracle/linkedin" -> "sangaline/advanced-web-scraping-tutorial"
"eracle/linkedin" -> "federicohaag/LinkedInScraping"
"newTendermint/awesome-analytics" -> "newTendermint/awesome-bigdata"
"newTendermint/awesome-analytics" -> "javierluraschi/awesome-dataviz"
"liancheng/brainsuck" -> "liancheng/spear"
"spinlud/py-linkedin-jobs-scraper" -> "spinlud/linkedin-jobs-scraper"
"spark-examples/spark-scala-examples" -> "spark-examples/pyspark-examples"
"spark-examples/spark-scala-examples" -> "sparkbyexamples/spark-examples"
"spark-examples/spark-scala-examples" -> "rockthejvm/spark-essentials"
"spark-examples/spark-scala-examples" -> "tirthajyoti/Spark-with-Python"
"spark-examples/spark-scala-examples" -> "LearningJournal/SparkProgrammingInScala"
"spark-examples/spark-scala-examples" -> "deanwampler/spark-scala-tutorial"
"spark-examples/spark-scala-examples" -> "microsoft/sql-spark-connector"
"spark-examples/spark-scala-examples" -> "Baeldung/scala-tutorials"
"rymurr/flight-spark-source" -> "BryanCutler/SparkArrowFlight"
"PiercingDan/spark-Jupyter-AWS" -> "nchammas/flintrock"
"NathanDuma/LinkedIn-Easy-Apply-Bot" -> "nicolomantini/LinkedIn-Easy-Apply-Bot"
"NathanDuma/LinkedIn-Easy-Apply-Bot" -> "wodsuz/EasyApplyJobsBot"
"wuchong/awesome-flink" -> "lw-lin/streaming-readings"
"wuchong/awesome-flink" -> "Apache-Flink-Docs-ZH/Apache-Flink-Docs-ZH-translation"
"wuchong/awesome-flink" -> "flink-china/flink-china-doc"
"wuchong/awesome-flink" -> "apache/bahir-flink"
"wuchong/awesome-flink" -> "flink-china/flink-forward-china-2018"
"wuchong/awesome-flink" -> "danny0405/flink-source-code-analysis"
"wuchong/awesome-flink" -> "dataArtisans/flink-training-exercises"
"wuchong/awesome-flink" -> "uber/AthenaX"
"wuchong/awesome-flink" -> "ottogroup/flink-spector"
"wuchong/awesome-flink" -> "bethunebtj/flink_tutorial" ["e"=1]
"wuchong/awesome-flink" -> "ververica/flink-training-exercises"
"wuchong/awesome-flink" -> "ververica/sql-training"
"wuchong/awesome-flink" -> "apache/flink-table-store"
"wuchong/awesome-flink" -> "yahoo/streaming-benchmarks"
"wuchong/awesome-flink" -> "ververica/flink-sql-gateway"
"bsspirit/maven_hadoop_template" -> "bsspirit/maven_mahout_template"
"rackerlabs/blueflood" -> "proofpoint/kairosdb"
"rackerlabs/blueflood" -> "OpenNMS/newts"
"rackerlabs/blueflood" -> "kairosdb/kairosdb"
"rackerlabs/blueflood" -> "pyr/cyanite" ["e"=1]
"rackerlabs/blueflood" -> "brutasse/graphite-api" ["e"=1]
"datasophon/datasophon" -> "apache/incubator-seatunnel-web"
"datasophon/datasophon" -> "dromara/CloudEon"
"datasophon/datasophon" -> "alldatacenter/alldata"
"datasophon/datasophon" -> "DTStack/chengying"
"mkuthan/example-spark" -> "mkuthan/example-spark-kafka"
"mkuthan/example-spark" -> "phatak-dev/spark2.0-examples"
"SparklineData/spark-druid-olap" -> "metamx/druid-spark-batch"
"SparklineData/spark-druid-olap" -> "implydata/plyql"
"SparklineData/spark-druid-olap" -> "druid-io/tranquility"
"SparklineData/spark-druid-olap" -> "druid-io/docker-druid"
"SparklineData/spark-druid-olap" -> "mistercrunch/panoramix"
"SparklineData/spark-druid-olap" -> "ing-bank/scruid"
"SparklineData/spark-druid-olap" -> "shunfei/indexr"
"SparklineData/spark-druid-olap" -> "Intel-bigdata/OAP"
"SparklineData/spark-druid-olap" -> "implydata/plywood"
"apache/hawq" -> "greenplum-db/gporca" ["e"=1]
"apache/hawq" -> "apache/impala"
"apache/hawq" -> "lingbin/kudu_src_analysis"
"apache/flink-playgrounds" -> "apache/flink-training"
"apache/flink-playgrounds" -> "ververica/flink-training-exercises"
"apache/flink-playgrounds" -> "apache/flink-statefun"
"apache/flink-playgrounds" -> "cloudera/flink-tutorials"
"apache/flink-playgrounds" -> "ververica/flink-sql-cookbook"
"apache/flink-playgrounds" -> "wuchong/flink-sql-demo"
"apache/flink-playgrounds" -> "ververica/sql-training"
"apache/flink-playgrounds" -> "afedulov/fraud-detection-demo"
"apache/flink-playgrounds" -> "streaming-with-flink/examples-java"
"apache/flink-playgrounds" -> "apache/bahir-flink"
"apache/flink-playgrounds" -> "wuchong/awesome-flink"
"apache/flink-playgrounds" -> "knaufk/flink-faker"
"apache/flink-playgrounds" -> "dataArtisans/flink-streaming-demo"
"apache/incubator-systemml" -> "SparkTC/systemml"
"apache/incubator-systemml" -> "apache/bahir"
"apache/incubator-systemml" -> "apache/incubator-systemml-website"
"apache/incubator-systemml" -> "apache/bahir-website"
"apache/incubator-systemml" -> "amplab/keystone"
"apache/incubator-systemml" -> "apache/incubator-toree"
"apache/incubator-systemml" -> "zhangyuc/splash"
"apache/incubator-systemml" -> "TrueCar/mleap"
"apache/incubator-systemml" -> "dusenberrymw/systemml-nn"
"apache/incubator-systemml" -> "SparkTC/r4ml"
"apache/incubator-systemml" -> "h2oai/sparkling-water"
"apache/incubator-systemml" -> "apache/incubator-beam"
"apache/incubator-systemml" -> "yahoo/CaffeOnSpark"
"apache/incubator-systemml" -> "cloudera/spark-timeseries"
"apache/incubator-systemml" -> "apache/incubator-zeppelin"
"YotpoLtd/metorikku" -> "SETL-Framework/setl"
"YotpoLtd/metorikku" -> "qubole/sparklens"
"YotpoLtd/metorikku" -> "linkedin/coral"
"YotpoLtd/metorikku" -> "MrPowers/spark-daria"
"YotpoLtd/metorikku" -> "apache/incubator-hudi"
"YotpoLtd/metorikku" -> "linkedin/transport"
"YotpoLtd/metorikku" -> "awslabs/deequ" ["e"=1]
"YotpoLtd/metorikku" -> "smart-data-lake/smart-data-lake"
"YotpoLtd/metorikku" -> "LucaCanali/sparkMeasure"
"YotpoLtd/metorikku" -> "yaooqinn/kyuubi"
"YotpoLtd/metorikku" -> "MrPowers/spark-fast-tests"
"YotpoLtd/metorikku" -> "delta-io/connectors"
"YotpoLtd/metorikku" -> "cloudera-labs/envelope"
"YotpoLtd/metorikku" -> "datamechanics/delight"
"YotpoLtd/metorikku" -> "MrPowers/quinn"
"autodeployai/pypmml" -> "autodeployai/pmml4s"
"autodeployai/pypmml" -> "openscoring/openscoring-python"
"fhueske/flink-sql-demo" -> "ververica/flink-sql-gateway"
"fhueske/flink-sql-demo" -> "ververica/flink-jdbc-driver"
"fhueske/flink-sql-demo" -> "wuchong/flink-sql-submit"
"fhueske/flink-sql-demo" -> "wuchong/flink-sql-demo"
"fhueske/flink-sql-demo" -> "ververica/sql-training"
"fhueske/flink-sql-demo" -> "hairless/plink"
"fhueske/flink-sql-demo" -> "apache/flink-statefun"
"fhueske/flink-sql-demo" -> "ververica/flink-sql-benchmark"
"mistercrunch/panoramix" -> "implydata/pivot"
"mistercrunch/panoramix" -> "implydata/plywood"
"mistercrunch/panoramix" -> "srikalyc/Sql4D"
"tomquirk/linkedin-api" -> "ozgur/python-linkedin"
"tomquirk/linkedin-api" -> "joeyism/linkedin_scraper"
"tomquirk/linkedin-api" -> "eilonmore/linkedin-private-api"
"tomquirk/linkedin-api" -> "eracle/linkedin"
"tomquirk/linkedin-api" -> "austinoboyle/scrape-linkedin-selenium"
"tomquirk/linkedin-api" -> "linkedtales/scrapedin"
"tomquirk/linkedin-api" -> "initstring/linkedin2username" ["e"=1]
"tomquirk/linkedin-api" -> "jvandenaardweg/linkedin-profile-scraper"
"tomquirk/linkedin-api" -> "sns-sdks/python-facebook"
"tomquirk/linkedin-api" -> "dchrastil/ScrapedIn" ["e"=1]
"tomquirk/linkedin-api" -> "everping/Linkedin-Authentication-Challenge"
"tomquirk/linkedin-api" -> "adw0rd/instagrapi" ["e"=1]
"tomquirk/linkedin-api" -> "vysecurity/LinkedInt" ["e"=1]
"tomquirk/linkedin-api" -> "nickls/linkedin-unofficial-api"
"tomquirk/linkedin-api" -> "HootsuiteLabs/python-linkedin-v2"
"nicolomantini/LinkedIn-Easy-Apply-Bot" -> "NathanDuma/LinkedIn-Easy-Apply-Bot"
"nicolomantini/LinkedIn-Easy-Apply-Bot" -> "wodsuz/EasyApplyJobsBot"
"nicolomantini/LinkedIn-Easy-Apply-Bot" -> "harshibar/common-intern"
"nicolomantini/LinkedIn-Easy-Apply-Bot" -> "coding-ai/EasyApply-Linkedin"
"nicolomantini/LinkedIn-Easy-Apply-Bot" -> "MattFlood7/LinkedInBot"
"nicolomantini/LinkedIn-Easy-Apply-Bot" -> "mariiio/linkedin_connect"
"nicolomantini/LinkedIn-Easy-Apply-Bot" -> "madingess/EasyApplyBot"
"nicolomantini/LinkedIn-Easy-Apply-Bot" -> "ichomchom/Indeed-Bot"
"nicolomantini/LinkedIn-Easy-Apply-Bot" -> "wodsuz/LinkedinEasyApplyJobsBot"
"nicolomantini/LinkedIn-Easy-Apply-Bot" -> "kirkhunter/linkedin-jobs-scraper"
"electrum/tpch-dbgen" -> "gregrahn/tpch-kit"
"electrum/tpch-dbgen" -> "electrum/ssb-dbgen"
"electrum/tpch-dbgen" -> "gregrahn/join-order-benchmark" ["e"=1]
"electrum/tpch-dbgen" -> "tvondra/pg_tpch"
"electrum/tpch-dbgen" -> "TimoKersten/db-engine-paradigms" ["e"=1]
"electrum/tpch-dbgen" -> "viktorleis/perfevent" ["e"=1]
"electrum/ssb-dbgen" -> "Kyligence/ssb-kylin"
"meshplus/goduck" -> "meshplus/pier-client-fabric"
"meshplus/goduck" -> "meshplus/premo"
"meshplus/goduck" -> "meshplus/pier"
"meshplus/pier" -> "meshplus/goduck"
"meshplus/pier" -> "meshplus/pier-client-fabric"
"meshplus/pier" -> "meshplus/bitxhub-core"
"meshplus/pier" -> "meshplus/premo"
"meshplus/pier-client-fabric" -> "meshplus/bitxhub-core"
"meshplus/pier-client-fabric" -> "meshplus/goduck"
"meshplus/pier-client-fabric" -> "meshplus/pier"
"meshplus/premo" -> "meshplus/pier-client-ethereum"
"kirkhunter/linkedin-jobs-scraper" -> "chris-lovejoy/job-scraper"
"GoogleCloudPlatform/DataflowJavaSDK" -> "cloudera/spark-dataflow"
"GoogleCloudPlatform/DataflowJavaSDK" -> "apache/incubator-beam"
"GoogleCloudPlatform/DataflowJavaSDK" -> "GoogleCloudPlatform/DataflowJavaSDK-examples"
"GoogleCloudPlatform/DataflowJavaSDK" -> "GoogleCloudPlatform/DataflowPythonSDK"
"GoogleCloudPlatform/DataflowJavaSDK" -> "dataArtisans/flink-dataflow"
"GoogleCloudPlatform/DataflowJavaSDK" -> "linkedin/Cubert" ["e"=1]
"GoogleCloudPlatform/DataflowJavaSDK" -> "spotify/scio" ["e"=1]
"GoogleCloudPlatform/DataflowJavaSDK" -> "spark-jobserver/spark-jobserver"
"GoogleCloudPlatform/DataflowJavaSDK" -> "twitter/heron"
"GoogleCloudPlatform/DataflowJavaSDK" -> "NFLabs/zeppelin"
"GoogleCloudPlatform/DataflowJavaSDK" -> "amplab/tachyon" ["e"=1]
"GoogleCloudPlatform/DataflowJavaSDK" -> "cloudera/spark-timeseries"
"GoogleCloudPlatform/DataflowJavaSDK" -> "ooyala/spark-jobserver"
"GoogleCloudPlatform/DataflowJavaSDK" -> "apache/incubator-samoa" ["e"=1]
"GoogleCloudPlatform/DataflowJavaSDK" -> "GoogleCloudPlatform/cloud-bigtable-examples" ["e"=1]
"dremio/gandiva" -> "dremio/dremio-oss"
"dremio/gandiva" -> "cylondata/cylon"
"dremio/gandiva" -> "substrait-io/substrait" ["e"=1]
"dremio/gandiva" -> "oap-project/gluten"
"dremio/gandiva" -> "apache/incubator-iceberg"
"dremio/gandiva" -> "xhochy/fletcher" ["e"=1]
"dremio/gandiva" -> "weld-project/weld" ["e"=1]
"dremio/gandiva" -> "rymurr/flight-spark-source"
"dremio/gandiva" -> "facebookincubator/velox" ["e"=1]
"dremio/gandiva" -> "TimoKersten/db-engine-paradigms" ["e"=1]
"dremio/gandiva" -> "cmu-db/noisepage" ["e"=1]
"dremio/gandiva" -> "apache/hawq"
"awantik/pyspark-tutorial" -> "zekelabs/pyspark"
"wiibrew/YOLO_tensorflow" -> "wiibrew/Faster-RCNN_TF"
"vdurmont/semver4j" -> "semver4j/semver4j"
"vdurmont/semver4j" -> "zafarkhaja/jsemver"
"Intel-bigdata/spark-streamingsql" -> "thunderain-project/StreamSQL"
"mtth/hdfs" -> "dask/hdfs3"
"mtth/hdfs" -> "mtth/azkaban"
"mtth/hdfs" -> "crs4/pydoop"
"mtth/hdfs" -> "jingw/pyhdfs"
"mtth/hdfs" -> "pywebhdfs/pywebhdfs"
"combust/mleap" -> "databricks/spark-deep-learning"
"combust/mleap" -> "Azure/mmlspark"
"combust/mleap" -> "jpmml/jpmml-sparkml"
"combust/mleap" -> "databricks/spark-sklearn"
"combust/mleap" -> "ucbrise/clipper" ["e"=1]
"combust/mleap" -> "salesforce/TransmogrifAI" ["e"=1]
"combust/mleap" -> "openscoring/openscoring"
"combust/mleap" -> "SeldonIO/seldon-core" ["e"=1]
"combust/mleap" -> "jpmml/jpmml-evaluator"
"combust/mleap" -> "databricks/tensorframes"
"combust/mleap" -> "yahoo/TensorFlowOnSpark"
"combust/mleap" -> "tensorflow/ecosystem" ["e"=1]
"combust/mleap" -> "awslabs/deequ" ["e"=1]
"combust/mleap" -> "databricks/mlflow"
"combust/mleap" -> "intel-analytics/BigDL"
"xiaokugua250/DataMingProject" -> "gglinux/wifi"
"HuaweiBigData/StreamCQL" -> "HuaweiBigData/astro"
"HuaweiBigData/StreamCQL" -> "HuaweiBigData/carbondata"
"HuaweiBigData/StreamCQL" -> "epfldata/squall" ["e"=1]
"HuaweiBigData/StreamCQL" -> "uber/AthenaX"
"HuaweiBigData/StreamCQL" -> "Intel-bigdata/spark-streamingsql"
"HuaweiBigData/StreamCQL" -> "uber/chaperone" ["e"=1]
"HuaweiBigData/StreamCQL" -> "twitter/heron"
"HuaweiBigData/StreamCQL" -> "eBay/Eagle" ["e"=1]
"dask/hdfs3" -> "dask/knit"
"dask/hdfs3" -> "ContinuumIO/libhdfs3-downstream"
"ShifuML/guagua" -> "ShifuML/shifu"
"ShifuML/shifu" -> "ShifuML/guagua"
"apache/incubator-beam" -> "GoogleCloudPlatform/DataflowJavaSDK"
"apache/incubator-beam" -> "GoogleCloudPlatform/DataflowPythonSDK"
"apache/incubator-beam" -> "dataArtisans/flink-dataflow"
"apache/incubator-beam" -> "cloudera/spark-dataflow"
"apache/incubator-beam" -> "yahoo/streaming-benchmarks"
"apache/incubator-beam" -> "twitter/heron"
"apache/incubator-beam" -> "apache/incubator-geode"
"apache/incubator-beam" -> "apache/incubator-gearpump" ["e"=1]
"apache/incubator-beam" -> "linkedin/gobblin"
"apache/incubator-beam" -> "apache/incubator-iceberg"
"apache/incubator-beam" -> "apache/incubator-carbondata"
"apache/incubator-beam" -> "GoogleCloudPlatform/DataflowJavaSDK-examples"
"apache/incubator-beam" -> "apache/incubator-zeppelin"
"apache/incubator-beam" -> "spotify/scio" ["e"=1]
"apache/incubator-beam" -> "apache/incubator-systemml"
"airbnb/reair" -> "HotelsDotCom/waggle-dance"
"blaze-init/blaze" -> "oap-project/gazelle_plugin"
"blaze-init/blaze" -> "alibaba/RemoteShuffleService"
"blaze-init/blaze" -> "oap-project/gluten"
"blaze-init/blaze" -> "apache/arrow-ballista" ["e"=1]
"blaze-init/blaze" -> "Tencent/Firestorm"
"blaze-init/blaze" -> "substrait-io/substrait" ["e"=1]
"blaze-init/blaze" -> "apache/arrow-datafusion" ["e"=1]
"blaze-init/blaze" -> "jorgecarleitao/arrow2" ["e"=1]
"blaze-init/blaze" -> "flock-lab/flock"
"blaze-init/blaze" -> "jorgecarleitao/parquet2" ["e"=1]
"blaze-init/blaze" -> "timvw/qv" ["e"=1]
"blaze-init/blaze" -> "facebookincubator/velox" ["e"=1]
"blaze-init/blaze" -> "delta-io/delta-rs" ["e"=1]
"lw-lin/streaming-readings" -> "wuchong/awesome-flink"
"lw-lin/streaming-readings" -> "takidau/streamingbook"
"lw-lin/streaming-readings" -> "lw-lin/CoolplaySpark"
"lw-lin/streaming-readings" -> "allwefantasy/streamingpro"
"lw-lin/streaming-readings" -> "uber/AthenaX"
"lw-lin/streaming-readings" -> "flink-china/flink-forward-china-2018"
"lw-lin/streaming-readings" -> "Apache-Flink-Docs-ZH/Apache-Flink-Docs-ZH-translation"
"lw-lin/streaming-readings" -> "flink-china/flink-china-doc"
"lw-lin/streaming-readings" -> "apache/bahir-flink"
"lw-lin/streaming-readings" -> "yahoo/streaming-benchmarks"
"lw-lin/streaming-readings" -> "flink-extended/flink-remote-shuffle"
"lw-lin/streaming-readings" -> "apache/incubator-hudi"
"lw-lin/streaming-readings" -> "dyweb/papers-notebook" ["e"=1]
"lw-lin/streaming-readings" -> "ColZer/DigAndBuried"
"lw-lin/streaming-readings" -> "harbby/sylph"
"jdereg/java-util" -> "jdereg/json-io"
"jdereg/java-util" -> "SQiShER/java-object-diff" ["e"=1]
"jdereg/java-util" -> "indeedeng/util"
"apache/sentry" -> "apache/ranger"
"apache/sentry" -> "cloudera/sentry"
"oap-project/gluten" -> "alibaba/RemoteShuffleService"
"oap-project/gluten" -> "oap-project/gazelle_plugin"
"oap-project/gluten" -> "facebookincubator/velox" ["e"=1]
"oap-project/gluten" -> "substrait-io/substrait" ["e"=1]
"oap-project/gluten" -> "Tencent/Firestorm"
"oap-project/gluten" -> "apache/incubator-uniffle"
"oap-project/gluten" -> "blaze-init/blaze"
"oap-project/gluten" -> "uber/RemoteShuffleService"
"oap-project/gluten" -> "bytedance/CloudShuffleService"
"oap-project/gluten" -> "databricks/spark-sql-perf"
"oap-project/gluten" -> "linkedin/coral"
"oap-project/gluten" -> "NetEase/arctic"
"oap-project/gluten" -> "flink-extended/flink-remote-shuffle"
"oap-project/gluten" -> "apache/incubator-kyuubi"
"oap-project/gluten" -> "linkedin/transport"
"hyperchain/hyperchain" -> "hyperchain/javasdk"
"hyperchain/hyperchain" -> "meshplus/pier"
"hyperchain/hyperchain" -> "meshplus/hyperbench"
"hyperchain/hyperchain" -> "meshplus/bitxhub"
"DataThirstLtd/azure.databricks.cicd.tools" -> "gbrueckl/Databricks.API.PowerShell"
"shuzeCloud/shuzeCloud" -> "sevenfang/DataCenter"
"shuzeCloud/shuzeCloud" -> "edp963/moonbox"
"shuzeCloud/shuzeCloud" -> "wxgzgl/LarkMidTable"
"shuzeCloud/shuzeCloud" -> "wxgzgl/flinkx-web"
"intel-hadoop/project-panthera" -> "intel-hadoop/hive-0.9-panthera"
"linkedin/gobblin" -> "linkedin/camus"
"linkedin/gobblin" -> "linkedin/pinot"
"linkedin/gobblin" -> "twitter/heron"
"linkedin/gobblin" -> "cloudera/kudu"
"linkedin/gobblin" -> "linkedin/dr-elephant"
"linkedin/gobblin" -> "linkedin/WhereHows" ["e"=1]
"linkedin/gobblin" -> "miguno/kafka-storm-starter" ["e"=1]
"linkedin/gobblin" -> "OryxProject/oryx" ["e"=1]
"linkedin/gobblin" -> "pinterest/secor" ["e"=1]
"linkedin/gobblin" -> "uber/chaperone" ["e"=1]
"linkedin/gobblin" -> "linkedin/rest.li"
"linkedin/gobblin" -> "druid-io/druid"
"linkedin/gobblin" -> "apache/incubator-beam"
"linkedin/gobblin" -> "Netflix/suro" ["e"=1]
"linkedin/gobblin" -> "twitter/elephant-bird"
"pinterest/pinball" -> "airbnb/airflow"
"pinterest/pinball" -> "cloudera/ibis" ["e"=1]
"pinterest/pinball" -> "thieman/dagobah"
"pinterest/pinball" -> "spotify/luigi" ["e"=1]
"pinterest/pinball" -> "linkedin/gobblin"
"pinterest/pinball" -> "pinterest/secor" ["e"=1]
"pinterest/pinball" -> "samuell/sciluigi"
"pinterest/pinball" -> "common-workflow-language/common-workflow-language" ["e"=1]
"pinterest/pinball" -> "airbnb/airpal"
"pinterest/pinball" -> "knipknap/SpiffWorkflow" ["e"=1]
"pinterest/pinball" -> "pinterest/terrapin"
"pinterest/pinball" -> "linkedin/camus"
"pinterest/pinball" -> "apache/incubator-airflow" ["e"=1]
"pinterest/pinball" -> "databricks/spark-redshift" ["e"=1]
"pinterest/pinball" -> "mistercrunch/panoramix"
"hbwu-ntu/spot-adv-by-vocoder" -> "qiangmouren/query-domain-icp-nodejs"
"WeBankFinTech/EventMesh" -> "WeBankFinTech/DeFiBus"
"cloudera/flink-tutorials" -> "asdaraujo/edge2ai-workshop"
"cloudera/flink-tutorials" -> "afedulov/fraud-detection-demo"
"cloudera/flink-tutorials" -> "cloudera-labs/edge2ai-workshop"
"lyft/presto-gateway" -> "linkedin/coral"
"lyft/presto-gateway" -> "linkedin/transport"
"lyft/presto-gateway" -> "qubole/presto-udfs"
"lyft/presto-gateway" -> "varadaio/presto-workload-analyzer"
"lyft/presto-gateway" -> "airlift/airlift"
"lyft/presto-gateway" -> "qubole/rubix"
"lyft/presto-gateway" -> "prestosql/presto"
"lyft/presto-gateway" -> "prestodb/presto-admin" ["e"=1]
"lyft/presto-gateway" -> "leoChaoGlut/presto-research"
"lyft/presto-gateway" -> "huangfox/dpkb"
"lyft/presto-gateway" -> "razorpay/trino-gateway"
"lyft/presto-gateway" -> "treasure-data/prestogres"
"lyft/presto-gateway" -> "trinodb/charts"
"lyft/presto-gateway" -> "yanagishima/yanagishima"
"neoremind/kraps-rpc" -> "DonnyZone/ANTLR4-SqlBase"
"neoremind/kraps-rpc" -> "liancheng/spear"
"neoremind/kraps-rpc" -> "summerDG/spark-code-analysis"
"neoremind/kraps-rpc" -> "neoremind/coddding" ["e"=1]
"neoremind/kraps-rpc" -> "allwefantasy/spark-binlog"
"neoremind/kraps-rpc" -> "ColZer/DigAndBuried"
"neoremind/kraps-rpc" -> "Intel-bigdata/spark-adaptive"
"yahoo/storm-perf-test" -> "intel-hadoop/storm-benchmark"
"delta-io/connectors" -> "delta-io/delta-sharing"
"delta-io/connectors" -> "delta-io/kafka-delta-ingest"
"delta-io/connectors" -> "delta-io/delta-rs" ["e"=1]
"delta-io/connectors" -> "microsoft/hyperspace"
"delta-io/connectors" -> "delta-io/delta"
"delta-io/connectors" -> "databrickslabs/dbx"
"delta-io/connectors" -> "mspnp/spark-monitoring"
"delta-io/connectors" -> "MrPowers/spark-daria"
"delta-io/connectors" -> "microsoft/sql-spark-connector"
"delta-io/connectors" -> "databricks/dbt-databricks"
"delta-io/connectors" -> "japila-books/delta-lake-internals"
"delta-io/connectors" -> "databrickslabs/overwatch"
"amplab/keystone" -> "amplab/velox-modelserver"
"amplab/keystone" -> "amplab/spark-indexedrdd"
"amplab/keystone" -> "amplab/succinct"
"amplab/keystone" -> "cloudera/spark-timeseries"
"amplab/keystone" -> "ibm-et/spark-kernel"
"amplab/keystone" -> "factorie/factorie" ["e"=1]
"amplab/keystone" -> "coral-streaming/coral"
"amplab/keystone" -> "tuplejump/FiloDB"
"amplab/keystone" -> "Intel-bigdata/spark-streamingsql"
"amplab/keystone" -> "andypetrella/spark-notebook"
"amplab/keystone" -> "linkedin/photon-ml" ["e"=1]
"amplab/keystone" -> "apache/incubator-zeppelin"
"amplab/keystone" -> "h2oai/sparkling-water"
"amplab/keystone" -> "rjagerman/glint" ["e"=1]
"amplab/keystone" -> "collectivemedia/spark-ext"
"amplab/spark-indexedrdd" -> "amplab/succinct"
"amplab/spark-indexedrdd" -> "ankurdave/part" ["e"=1]
"amplab/spark-indexedrdd" -> "InitialDLab/Simba" ["e"=1]
"amplab/spark-indexedrdd" -> "amplab/keystone"
"amplab/spark-indexedrdd" -> "databricks/spark-knowledgebase"
"amplab/spark-indexedrdd" -> "databricks/tensorframes"
"amplab/spark-indexedrdd" -> "amplab/ml-matrix"
"cloudera/spark-timeseries" -> "amplab/keystone"
"cloudera/spark-timeseries" -> "cloudera/spark-dataflow"
"cloudera/spark-timeseries" -> "tuplejump/FiloDB"
"cloudera/spark-timeseries" -> "zhangyuc/splash"
"databricks/spark-perf" -> "databricks/spark-sql-perf"
"databricks/spark-perf" -> "SparkTC/spark-bench"
"databricks/spark-perf" -> "databricks/spark-integration-tests"
"databricks/spark-perf" -> "intel-hadoop/HiBench"
"databricks/spark-perf" -> "holdenk/spark-validator"
"databricks/spark-perf" -> "databricks/spark-knowledgebase"
"databricks/spark-perf" -> "ooyala/spark-jobserver"
"databricks/spark-perf" -> "kayousterhout/trace-analysis"
"databricks/spark-perf" -> "holdenk/spark-testing-base"
"databricks/spark-perf" -> "amplab/spark-indexedrdd"
"databricks/spark-perf" -> "groupon/sparklint"
"databricks/spark-perf" -> "mesos/spark-ec2"
"databricks/spark-perf" -> "yahoo/streaming-benchmarks"
"databricks/spark-perf" -> "databricks/reference-apps"
"databricks/spark-perf" -> "databricks/benchmarks"
"hammerlab/grafana-spark-dashboards" -> "groupon/spark-metrics"
"hammerlab/grafana-spark-dashboards" -> "groupon/sparklint"
"spirom/spark-streaming-with-kafka" -> "polomarcus/Spark-Structured-Streaming-Examples"
"spirom/spark-streaming-with-kafka" -> "trK54Ylmz/kafka-spark-streaming-example"
"spirom/spark-streaming-with-kafka" -> "ansrivas/spark-structured-streaming"
"spirom/spark-streaming-with-kafka" -> "spirom/LearningSpark"
"DTStack/DatasourceX" -> "DTStack/chengying"
"dantezhao/data-warehouse" -> "dantezhao/data-group"
"apache/pulsar-helm-chart" -> "streamnative/charts"
"apache/pulsar-helm-chart" -> "datastax/pulsar-helm-chart"
"apache/pulsar-helm-chart" -> "apache/pulsar-manager"
"linbojin/spark-notes" -> "cjuexuan/mynote"
"linbojin/spark-notes" -> "tophua/spark1.52"
"linbojin/spark-notes" -> "shijinkui/spark_study"
"linbojin/spark-notes" -> "CrestOfWave/Spark-2.3.1"
"linbojin/spark-notes" -> "wanghan0501/UserSessionBehaviorOfflineAnalysis"
"linbojin/spark-notes" -> "LeechanX/Netflix-Recommender-with-Spark" ["e"=1]
"linbojin/spark-notes" -> "lw-lin/CoolplaySpark"
"javierluraschi/awesome-dataviz" -> "Mohitkr95/Best-Data-Science-Resources"
"javierluraschi/awesome-dataviz" -> "newTendermint/awesome-bigdata"
"javierluraschi/awesome-dataviz" -> "newTendermint/awesome-analytics"
"summerDG/spark-code-analysis" -> "marsishandsome/SparkSQL-Internal"
"summerDG/spark-code-analysis" -> "ColZer/DigAndBuried"
"summerDG/spark-code-analysis" -> "neoremind/kraps-rpc"
"summerDG/spark-code-analysis" -> "liancheng/spear"
"summerDG/spark-code-analysis" -> "Intel-bigdata/spark-adaptive"
"pyflink/playgrounds" -> "uncleguanghui/pyflink_learn"
"pyflink/playgrounds" -> "mukess/pyflink-demo"
"pyflink/playgrounds" -> "sunjincheng121/enjoyment.code"
"didi/LogiEM" -> "didi/LogiAM"
"didi/LogiEM" -> "didi/LogIAM"
"runawayhorse001/LearningApacheSpark" -> "runawayhorse001/CheatSheet"
"runawayhorse001/LearningApacheSpark" -> "runawayhorse001/PythonTipsDS"
"runawayhorse001/LearningApacheSpark" -> "runawayhorse001/DatamingTutorial"
"runawayhorse001/LearningApacheSpark" -> "MingChen0919/learning-apache-spark"
"kontext-tech/winutils" -> "cdarlint/winutils"
"java-operator-sdk/java-operator-sdk" -> "quarkiverse/quarkus-operator-sdk"
"java-operator-sdk/java-operator-sdk" -> "apache/flink-kubernetes-operator"
"java-operator-sdk/java-operator-sdk" -> "wangyang0918/flink-native-k8s-operator"
"java-operator-sdk/java-operator-sdk" -> "fabric8io/kubernetes-client" ["e"=1]
"java-operator-sdk/java-operator-sdk" -> "GoogleCloudPlatform/flink-on-k8s-operator"
"java-operator-sdk/java-operator-sdk" -> "dekorateio/dekorate" ["e"=1]
"java-operator-sdk/java-operator-sdk" -> "lyft/flinkk8soperator"
"java-operator-sdk/java-operator-sdk" -> "sundrio/sundrio" ["e"=1]
"spring-projects/spring-gemfire-examples" -> "spring-projects/spring-data-gemfire"
"spring-projects/spring-gemfire-examples" -> "spring-projects/spring-data-geode"
"jvandenaardweg/linkedin-profile-scraper" -> "linkedtales/scrapedin"
"jvandenaardweg/linkedin-profile-scraper" -> "linkedtales/scrapedin-linkedin-crawler"
"jvandenaardweg/linkedin-profile-scraper" -> "joeyism/linkedin_scraper"
"jvandenaardweg/linkedin-profile-scraper" -> "eracle/linkedin"
"jvandenaardweg/linkedin-profile-scraper" -> "federicohaag/LinkedInScraping"
"jvandenaardweg/linkedin-profile-scraper" -> "austinoboyle/scrape-linkedin-selenium"
"jvandenaardweg/linkedin-profile-scraper" -> "hakimkhalafi/linkedin-scraper"
"hurtn/datalake-ADLS-access-patterns-with-Databricks" -> "hurtn/datalake-on-ADLS"
"omnisci/pymapd" -> "omnisci/mapd-charting"
"omnisci/pymapd" -> "omnisci/mapd-connector"
"LucaCanali/Miscellaneous" -> "LucaCanali/sparkMeasure"
"LucaCanali/Miscellaneous" -> "cerndb/spark-dashboard"
"LucaCanali/Miscellaneous" -> "qubole/sparklens"
"LucaCanali/Miscellaneous" -> "banzaicloud/spark-metrics"
"LucaCanali/Miscellaneous" -> "oap-project/gazelle_plugin"
"qubole/rubix" -> "qubole/quark"
"MemVerge/splash" -> "Intel-bigdata/OAP"
"MemVerge/splash" -> "oap-project/sql-ds-cache"
"h2oai/h2o4gpu" -> "h2oai/deepwater"
"h2oai/h2o4gpu" -> "h2oai/sparkling-water"
"Azure/azure-cosmosdb-spark" -> "Azure/azure-event-hubs-spark"
"Azure/azure-cosmosdb-spark" -> "CosmosDB/labs"
"Azure/azure-cosmosdb-spark" -> "anagha-microsoft/databricks-workshops"
"Azure/azure-cosmosdb-spark" -> "Azure/azure-kusto-spark"
"Azure/azure-cosmosdb-spark" -> "Azure-Samples/azure-cosmos-db-change-feed-dotnet-retail-sample"
"Azure/azure-cosmosdb-spark" -> "kromerm/adfdataflowdocs" ["e"=1]
"Azure/azure-cosmosdb-spark" -> "hdinsight/hdinsight-dev-guide"
"jaceklaskowski/kafka-notebook" -> "jaceklaskowski/mastering-kafka-streams-book"
"jaceklaskowski/kafka-notebook" -> "jaceklaskowski/kafka-workshop"
"streamnative/kop" -> "streamnative/aop"
"streamnative/kop" -> "apache/pulsar-manager"
"streamnative/kop" -> "streamnative/pulsarctl"
"streamnative/kop" -> "streamnative/pulsar-flink"
"streamnative/kop" -> "kuangye098/Pulsar-analysis"
"streamnative/kop" -> "streamnative/apache-pulsar-grafana-dashboard"
"streamnative/kop" -> "streamnative/rop"
"streamnative/kop" -> "apache/bookkeeper" ["e"=1]
"streamnative/kop" -> "streamnative/function-mesh"
"streamnative/kop" -> "streamnative/pulsar"
"streamnative/kop" -> "streamnative/charts"
"streamnative/kop" -> "streamnative/tgip-cn"
"streamnative/kop" -> "streamnative/mop"
"streamnative/kop" -> "streamnative/pulsar-manager"
"streamnative/kop" -> "apache/pulsar-client-reactive"
"HotelsDotCom/waggle-dance" -> "HotelsDotCom/circus-train"
"HotelsDotCom/waggle-dance" -> "HotelsDotCom/data-highway"
"HotelsDotCom/waggle-dance" -> "HotelsDotCom/beeju"
"HotelsDotCom/waggle-dance" -> "ExpediaGroup/beekeeper"
"openscoring/openscoring" -> "jpmml/jpmml-sparkml"
"openscoring/openscoring" -> "jpmml/jpmml-evaluator"
"openscoring/openscoring" -> "jpmml/jpmml-model"
"openscoring/openscoring" -> "openscoring/openscoring-python"
"openscoring/openscoring" -> "jpmml/jpmml-sklearn"
"openscoring/openscoring" -> "jpmml/sklearn2pmml"
"openscoring/openscoring" -> "jpmml/jpmml-evaluator-spark"
"openscoring/openscoring" -> "combust/mleap"
"openscoring/openscoring" -> "spotify/zoltar" ["e"=1]
"openscoring/openscoring" -> "jpmml/jpmml-xgboost"
"openscoring/openscoring" -> "opendatagroup/hadrian"
"openscoring/openscoring" -> "rjagerman/glint" ["e"=1]
"openscoring/openscoring" -> "jpmml/jpmml-lightgbm"
"openscoring/openscoring" -> "FlinkML/flink-jpmml"
"HunterChao/User-Portrait" -> "qichangjian/dmpDemo"
"HunterChao/User-Portrait" -> "gingerredjade/flink-userportrait-main"
"senseidb/bobo" -> "senseidb/zoie"
"spring-projects/spring-data-gemfire" -> "spring-projects/spring-gemfire-examples"
"apache/linkis" -> "apache/kyuubi"
"apache/linkis" -> "apache/incubator-seatunnel-web"
"apache/linkis" -> "apache/incubator-streampark"
"ExpediaDotCom/haystack" -> "ExpediaDotCom/haystack-ui"
"ExpediaDotCom/haystack" -> "ExpediaDotCom/haystack-agent"
"ExpediaDotCom/haystack" -> "ExpediaDotCom/haystack-adaptive-alerting"
"ExpediaDotCom/haystack" -> "ExpediaDotCom/haystack-trends"
"ExpediaDotCom/haystack" -> "HotelsDotCom/pitchfork"
"ExpediaDotCom/haystack" -> "ExpediaDotCom/haystack-traces"
"ExpediaDotCom/haystack" -> "ExpediaDotCom/haystack-idl"
"ExpediaDotCom/haystack" -> "ExpediaDotCom/haystack-metrics"
"ExpediaDotCom/haystack" -> "openzipkin/docker-zipkin-dependencies"
"spinlud/linkedin-jobs-scraper" -> "spinlud/py-linkedin-jobs-scraper"
"spinlud/linkedin-jobs-scraper" -> "xtstc131/LinkedIn-Scraper"
"coding-ai/EasyApply-Linkedin" -> "fdupuis659/LinkedIn-Automatic-Job-Applier"
"Intel-bigdata/SSM" -> "linkedin/dynamometer" ["e"=1]
"Intel-bigdata/SSM" -> "Tencent/Firestorm"
"Intel-bigdata/SSM" -> "apache/hadoop-ozone" ["e"=1]
"Intel-bigdata/SSM" -> "HotelsDotCom/waggle-dance"
"Intel-bigdata/SSM" -> "oap-project/gluten"
"Intel-bigdata/SSM" -> "Intel-bigdata/spark-adaptive"
"Intel-bigdata/SSM" -> "apache/incubator-uniffle"
"Netflix/iceberg" -> "apache/incubator-iceberg"
"Netflix/iceberg" -> "rdblue/s3committer"
"Netflix/iceberg" -> "uber/hudi"
"Netflix/iceberg" -> "linkedin/coral"
"Netflix/iceberg" -> "linkedin/transport"
"Netflix/iceberg" -> "lyft/presto-gateway"
"Netflix/iceberg" -> "microsoft/hyperspace"
"Netflix/iceberg" -> "qubole/rubix"
"Netflix/iceberg" -> "apache/parquet-mr"
"Netflix/iceberg" -> "linkedin/dr-elephant"
"Netflix/iceberg" -> "uber/RemoteShuffleService"
"Netflix/iceberg" -> "apache/incubator-livy"
"Netflix/iceberg" -> "uber-common/jvm-profiler" ["e"=1]
"Netflix/iceberg" -> "prestosql/presto"
"Netflix/iceberg" -> "qubole/sparklens"
"akumuli/Akumuli" -> "transceptor-technology/siridb-server"
"akumuli/Akumuli" -> "SoftwareDefinedBuildings/btrdb"
"akumuli/Akumuli" -> "xephonhq/awesome-time-series-database" ["e"=1]
"akumuli/Akumuli" -> "dalmatinerdb/dalmatinerdb" ["e"=1]
"akumuli/Akumuli" -> "dustin/seriesly" ["e"=1]
"akumuli/Akumuli" -> "powturbo/TurboPFor" ["e"=1]
"akumuli/Akumuli" -> "facebookarchive/beringei"
"akumuli/Akumuli" -> "BTrDB/btrdb-server"
"akumuli/Akumuli" -> "facebookincubator/beringei"
"akumuli/Akumuli" -> "traildb/traildb"
"akumuli/Akumuli" -> "google/supersonic"
"akumuli/Akumuli" -> "kairosdb/kairosdb"
"akumuli/Akumuli" -> "indeedeng/lsmtree"
"akumuli/Akumuli" -> "timescale/tsbs"
"akumuli/Akumuli" -> "lemire/simdcomp" ["e"=1]
"tirthajyoti/Spark-with-Python" -> "XD-DENG/Spark-practice"
"tirthajyoti/Spark-with-Python" -> "abulbasar/pyspark-examples"
"tirthajyoti/Spark-with-Python" -> "UrbanInstitute/pyspark-tutorials"
"tirthajyoti/Spark-with-Python" -> "spark-examples/pyspark-examples"
"tirthajyoti/Spark-with-Python" -> "SuperJohn/spark-and-python-for-big-data-with-pyspark"
"tirthajyoti/Spark-with-Python" -> "mahmoudparsian/pyspark-tutorial"
"timescale/prometheus-postgresql-adapter" -> "timescale/pg_prometheus"
"timescale/prometheus-postgresql-adapter" -> "timescale/timescale-prometheus"
"timescale/prometheus-postgresql-adapter" -> "iobeam/iobeam-client-java"
"timescale/prometheus-postgresql-adapter" -> "iobeam/iobeam"
"timescale/prometheus-postgresql-adapter" -> "iobeam/sample-android-wifi-rssi"
"databricks/spark-corenlp" -> "databricks/tensorframes"
"databricks/spark-corenlp" -> "clulab/processors"
"databricks/spark-corenlp" -> "scalanlp/chalk" ["e"=1]
"databricks/spark-corenlp" -> "dlwh/epic" ["e"=1]
"databricks/spark-corenlp" -> "databricks/spark-sklearn"
"databricks/spark-corenlp" -> "vspiewak/twitter-sentiment-analysis"
"databricks/spark-corenlp" -> "FurongHuang/SpectralLDA-TensorSpark"
"databricks/spark-corenlp" -> "rotationsymmetry/sparkxgboost"
"databricks/spark-corenlp" -> "h2oai/sparkling-water"
"databricks/spark-corenlp" -> "high-performance-spark/high-performance-spark-examples"
"databricks/spark-corenlp" -> "collectivemedia/spark-ext"
"databricks/spark-corenlp" -> "databricks/spark-knowledgebase"
"databricks/spark-corenlp" -> "master/spark-stemming"
"databricks/spark-corenlp" -> "dirkneumann/deepdist"
"databricks/spark-corenlp" -> "amplab/keystone"
"apache/hadoop-mapreduce" -> "apache/hadoop-hdfs"
"apache/hadoop-mapreduce" -> "apache/hadoop-common"
"apache/hadoop-mapreduce" -> "apache/pig"
"jaceklaskowski/mastering-spark-sql-book" -> "jaceklaskowski/spark-structured-streaming-book"
"jaceklaskowski/mastering-spark-sql-book" -> "japila-books/apache-spark-internals"
"jaceklaskowski/mastering-spark-sql-book" -> "jaceklaskowski/mastering-apache-spark-book"
"jaceklaskowski/mastering-spark-sql-book" -> "jaceklaskowski/mastering-kafka-streams-book"
"jaceklaskowski/mastering-spark-sql-book" -> "japila-books/delta-lake-internals"
"jaceklaskowski/mastering-spark-sql-book" -> "jaceklaskowski/spark-kubernetes-book"
"jaceklaskowski/mastering-spark-sql-book" -> "jaceklaskowski/kafka-notebook"
"jaceklaskowski/mastering-spark-sql-book" -> "Pushkr/Apache-Spark-Hands-On"
"jaceklaskowski/mastering-spark-sql-book" -> "Intel-bigdata/spark-adaptive"
"jaceklaskowski/mastering-spark-sql-book" -> "vivek-bombatkar/Databricks-Apache-Spark-2X-Certified-Developer"
"databrickslabs/dbx" -> "databrickslabs/cicd-templates"
"databrickslabs/dbx" -> "databrickslabs/dbldatagen"
"databrickslabs/dbx" -> "databrickslabs/overwatch"
"databrickslabs/dbx" -> "niall-turbitt/e2e-mlops"
"databrickslabs/dbx" -> "databricks/databricks-cli"
"databrickslabs/dbx" -> "databrickslabs/terraform-provider-databricks"
"databrickslabs/dbx" -> "microsoft/nutter" ["e"=1]
"databrickslabs/dbx" -> "mspnp/spark-monitoring"
"databrickslabs/dbx" -> "databricks/dbt-databricks"
"databrickslabs/dbx" -> "MrPowers/mack"
"databrickslabs/dbx" -> "databrickslabs/migrate"
"databrickslabs/dbx" -> "databricks/ide-best-practices"
"databrickslabs/dbx" -> "databricks/mlops-stack"
"databrickslabs/dbx" -> "delta-io/connectors"
"databrickslabs/dbx" -> "MrPowers/chispa"
"h2oai/deepwater" -> "h2oai/steam"
"h2oai/deepwater" -> "h2oai/h2o4gpu"
"h2oai/deepwater" -> "h2oai/sparkling-water"
"h2oai/deepwater" -> "h2oai/h2o-meetups"
"Crework/A-to-Z-Resources-for-Students" -> "Crework/Deep-Learning-Resources"
"Crework/A-to-Z-Resources-for-Students" -> "Crework/Machine-Learning-Path"
"Crework/A-to-Z-Resources-for-Students" -> "Crework/ML-Resources"
"Crework/A-to-Z-Resources-for-Students" -> "Crework/Mathematics-for-Machine-Learning"
"abel533/DBMetadata" -> "houbb/metadata"
"apache/flink-kubernetes-operator" -> "apache/flink-table-store"
"apache/flink-kubernetes-operator" -> "GoogleCloudPlatform/flink-on-k8s-operator"
"apache/flink-kubernetes-operator" -> "lyft/flinkk8soperator"
"apache/flink-kubernetes-operator" -> "flink-extended/flink-remote-shuffle"
"apache/flink-kubernetes-operator" -> "spotify/flink-on-k8s-operator"
"apache/flink-kubernetes-operator" -> "apache/flink-docker"
"apache/flink-kubernetes-operator" -> "immerok/recipes"
"apache/flink-kubernetes-operator" -> "apache/flink-statefun"
"apache/flink-kubernetes-operator" -> "java-operator-sdk/java-operator-sdk"
"apache/flink-kubernetes-operator" -> "apache/flink-benchmarks"
"apache/flink-kubernetes-operator" -> "NetEase/arctic"
"apache/flink-kubernetes-operator" -> "bytedance/CloudShuffleService"
"apache/flink-kubernetes-operator" -> "nexmark/nexmark"
"apache/flink-kubernetes-operator" -> "apache/incubator-kyuubi"
"apache/flink-kubernetes-operator" -> "wangyang0918/flink-native-k8s-operator"
"druid-io/pydruid" -> "druid-io/tranquility"
"druid-io/pydruid" -> "implydata/plyql"
"druid-io/pydruid" -> "druid-io/docker-druid"
"druid-io/pydruid" -> "metamx/druid-spark-batch"
"druid-io/pydruid" -> "implydata/pivot"
"druid-io/pydruid" -> "semantalytics/awesome-druid"
"druid-io/pydruid" -> "druid-io/druid-operator"
"druid-io/pydruid" -> "SparklineData/spark-druid-olap"
"druid-io/pydruid" -> "druid-io/druid"
"druid-io/pydruid" -> "allegro/turnilo"
"Intel-bigdata/OAP" -> "Intel-bigdata/spark-adaptive"
"Intel-bigdata/OAP" -> "MemVerge/splash"
"Intel-bigdata/OAP" -> "lightcopy/parquet-index"
"Intel-bigdata/OAP" -> "oap-project/gluten"
"Intel-bigdata/OAP" -> "uber/RemoteShuffleService"
"Intel-bigdata/OAP" -> "databricks/spark-sql-perf"
"Intel-bigdata/OAP" -> "oap-project/gazelle_plugin"
"Intel-bigdata/OAP" -> "Mellanox/SparkRDMA" ["e"=1]
"Intel-bigdata/OAP" -> "apache/incubator-iceberg"
"Intel-bigdata/OAP" -> "oap-project/sql-ds-cache"
"Intel-bigdata/OAP" -> "alibaba/RemoteShuffleService"
"Intel-bigdata/OAP" -> "Tencent/Firestorm"
"Intel-bigdata/OAP" -> "Intel-bigdata/Spark-PMoF"
"Intel-bigdata/OAP" -> "alibaba/SparkCube"
"Intel-bigdata/OAP" -> "yaooqinn/kyuubi"
"wodsuz/EasyApplyJobsBot" -> "nicolomantini/LinkedIn-Easy-Apply-Bot"
"rockthejvm/udemy-scala-beginners" -> "rockthejvm/udemy-scala-advanced"
"rockthejvm/udemy-scala-beginners" -> "rockthejvm/udemy-akka-essentials"
"rockthejvm/udemy-scala-beginners" -> "rockthejvm/spark-essentials"
"rockthejvm/udemy-scala-beginners" -> "rockthejvm/udemy-akka-http"
"apache/rocketmq-mqtt" -> "apache/rocketmq-schema-registry"
"apache/rocketmq-mqtt" -> "apache/rocketmq-streams"
"apache/rocketmq-mqtt" -> "alibaba/rsqldb"
"apache/rocketmq-mqtt" -> "openmessaging/openchaos"
"apache/rocketmq-mqtt" -> "apache/rocketmq-clients"
"apache/rocketmq-mqtt" -> "openmessaging/openmessaging-dledger-jepsen" ["e"=1]
"apache/rocketmq-mqtt" -> "apache/rocketmq-connect"
"banzaicloud/spark-metrics" -> "groupon/spark-metrics"
"banzaicloud/spark-metrics" -> "cerndb/spark-dashboard"
"cubefs/compass" -> "oppo-bigdata/shuttle" ["e"=1]
"cubefs/compass" -> "alibaba/RemoteShuffleService"
"lightning-viz/lightning" -> "lightning-viz/lightning-python"
"lightning-viz/lightning" -> "thunder-project/thunder"
"lightning-viz/lightning" -> "lightning-viz/lightning-scala"
"lightning-viz/lightning" -> "freeman-lab/spark-ml-streaming"
"lightning-viz/lightning" -> "areski/python-nvd3" ["e"=1]
"lightning-viz/lightning" -> "ellisonbg/altair" ["e"=1]
"lightning-viz/lightning" -> "apache/incubator-zeppelin"
"lightning-viz/lightning" -> "adamhajari/spyre" ["e"=1]
"lightning-viz/lightning" -> "andypetrella/spark-notebook"
"lightning-viz/lightning" -> "amplab/spark-indexedrdd"
"lightning-viz/lightning" -> "jakevdp/mpld3" ["e"=1]
"lightning-viz/lightning" -> "yhat/db.py" ["e"=1]
"lightning-viz/lightning" -> "bloomberg/bqplot" ["e"=1]
"lightning-viz/lightning" -> "lightning-viz/lightning.js"
"lightning-viz/lightning" -> "NFLabs/zeppelin"
"marsishandsome/SparkSQL-Internal" -> "summerDG/spark-code-analysis"
"rockthejvm/udemy-akka-essentials" -> "rockthejvm/udemy-akka-streams"
"rockthejvm/udemy-akka-essentials" -> "rockthejvm/udemy-akka-persistence-starter"
"streamnative/apache-pulsar-grafana-dashboard" -> "streamnative/pulsar-tracing"
"alibaba/SparkCube" -> "alibaba/RemoteShuffleService"
"alibaba/SparkCube" -> "lightcopy/parquet-index"
"databricks/spark-knowledgebase" -> "databricks/spark-training"
"databricks/spark-knowledgebase" -> "databricks/reference-apps"
"databricks/spark-knowledgebase" -> "databricks/spark-perf"
"databricks/spark-knowledgebase" -> "amplab/spark-indexedrdd"
"databricks/spark-knowledgebase" -> "databricks/spark-sql-perf"
"databricks/spark-knowledgebase" -> "phatak-dev/spark2.0-examples"
"databricks/spark-knowledgebase" -> "databricks/spark-avro"
"databricks/spark-knowledgebase" -> "databricks/tensorframes"
"databricks/spark-knowledgebase" -> "matteoredaelli/pyspark-examples"
"databricks/spark-knowledgebase" -> "koeninger/kafka-exactly-once" ["e"=1]
"databricks/spark-knowledgebase" -> "hammerlab/spree"
"databricks/spark-knowledgebase" -> "tresata/spark-kafka" ["e"=1]
"databricks/spark-knowledgebase" -> "databricks/spark-csv"
"databricks/spark-knowledgebase" -> "rxin/jvm-unsafe-utils" ["e"=1]
"SparkTC/spark-bench" -> "databricks/spark-perf"
"groupon/spark-metrics" -> "groupon/sparklint"
"groupon/spark-metrics" -> "banzaicloud/spark-metrics"
"groupon/spark-metrics" -> "hammerlab/grafana-spark-dashboards"
"jadianes/data-science-your-way" -> "jadianes/spark-py-notebooks"
"jadianes/data-science-your-way" -> "jadianes/spark-r-notebooks"
"jadianes/data-science-your-way" -> "jadianes/winerama-recommender-tutorial"
"jadianes/data-science-your-way" -> "nborwankar/LearnDataScience" ["e"=1]
"jadianes/data-science-your-way" -> "jadianes/spark-movie-lens"
"jadianes/data-science-your-way" -> "gumption/Python_for_Data_Science" ["e"=1]
"jadianes/data-science-your-way" -> "DrSkippy/Data-Science-45min-Intros" ["e"=1]
"jadianes/data-science-your-way" -> "rouseguy/intro2stats" ["e"=1]
"jadianes/data-science-your-way" -> "ujjwalkarn/DataScienceR" ["e"=1]
"jadianes/data-science-your-way" -> "ledell/useR-machine-learning-tutorial" ["e"=1]
"jadianes/data-science-your-way" -> "fasouto/awesome-dataviz" ["e"=1]
"Intel-bigdata/spark-adaptive" -> "Intel-bigdata/OAP"
"Intel-bigdata/spark-adaptive" -> "yaooqinn/kyuubi"
"Intel-bigdata/spark-adaptive" -> "databricks/spark-sql-perf"
"Intel-bigdata/spark-adaptive" -> "yaooqinn/spark-authorizer"
"Intel-bigdata/spark-adaptive" -> "liancheng/spear"
"Intel-bigdata/spark-adaptive" -> "summerDG/spark-code-analysis"
"Intel-bigdata/spark-adaptive" -> "uber/RemoteShuffleService"
"Intel-bigdata/spark-adaptive" -> "LucaCanali/sparkMeasure"
"Intel-bigdata/spark-adaptive" -> "apache/incubator-iceberg"
"Intel-bigdata/spark-adaptive" -> "teeyog/IQL"
"Intel-bigdata/spark-adaptive" -> "groupon/sparklint"
"Intel-bigdata/spark-adaptive" -> "alibaba/RemoteShuffleService"
"Intel-bigdata/spark-adaptive" -> "neoremind/kraps-rpc"
"Intel-bigdata/spark-adaptive" -> "squito/spark-memory"
"Intel-bigdata/spark-adaptive" -> "allwefantasy/streamingpro"
"dataArtisans/flink-training-exercises" -> "bytefish/FlinkExperiments"
"dataArtisans/flink-training-exercises" -> "flink-china/flink-forward-china-2018"
"dataArtisans/flink-training-exercises" -> "ottogroup/flink-spector"
"dataArtisans/flink-training-exercises" -> "dataArtisans/flink-streaming-demo"
"dataArtisans/flink-training-exercises" -> "wuchong/awesome-flink"
"dataArtisans/flink-training-exercises" -> "dataArtisans/flink-training"
"dataArtisans/flink-training-exercises" -> "tillrohrmann/cep-monitoring" ["e"=1]
"dataArtisans/flink-training-exercises" -> "mushketyk/flink-examples"
"dataArtisans/flink-training-exercises" -> "dataArtisans/kafka-example"
"databricks-academy/data-analysis-with-databricks-sql" -> "hwang-db/db-common-assets"
"databricks-academy/data-analysis-with-databricks-sql" -> "databricks-academy/advanced-data-engineering-with-databricks"
"databricks-academy/data-analysis-with-databricks-sql" -> "databricks-academy/apache-spark-programming-with-databricks"
"yaooqinn/spark-authorizer" -> "yaooqinn/spark-ranger"
"yaooqinn/spark-authorizer" -> "yaooqinn/kyuubi"
"yaooqinn/spark-authorizer" -> "cjuexuan/mynote"
"yaooqinn/spark-authorizer" -> "Intel-bigdata/spark-adaptive"
"krishnan-r/sparkmonitor" -> "mozilla/jupyter-spark"
"SayantanMitra87/Data-Science-Books-1" -> "ZakiaSalod/The-Hundred-Page-Machine-Learning-Book"
"SayantanMitra87/Data-Science-Books-1" -> "ontiyonke/Free-Deep-Learning-Books"
"Azure-Samples/streaming-at-scale" -> "AzureCosmosDB/scenario-based-labs"
"Azure-Samples/streaming-at-scale" -> "Azure/azure-event-hubs-spark"
"Azure-Samples/streaming-at-scale" -> "Azure/azure-event-hubs-for-kafka"
"Azure-Samples/streaming-at-scale" -> "Azure-Samples/azure-cosmos-db-change-feed-dotnet-retail-sample"
"Azure-Samples/streaming-at-scale" -> "Azure-Samples/modern-data-warehouse-dataops" ["e"=1]
"Azure-Samples/streaming-at-scale" -> "microsoft/sqlworkshops-azuresqlworkshop" ["e"=1]
"Azure-Samples/streaming-at-scale" -> "mspnp/spark-monitoring"
"delta-io/kafka-delta-ingest" -> "delta-io/delta-rs" ["e"=1]
"delta-io/kafka-delta-ingest" -> "delta-io/connectors"
"delta-io/kafka-delta-ingest" -> "delta-io/delta-sharing"
"clulab/processors" -> "clulab/reach"
"clulab/processors" -> "clulab/odin-examples"
"clulab/processors" -> "clulab/nlp-reading-group"
"clulab/processors" -> "databricks/spark-corenlp"
"abulbasar/pyspark-examples" -> "rich-iannone/so-many-pyspark-examples"
"databricks/terraform-provider-databricks" -> "databricks/terraform-databricks-examples"
"gaodayu168/datasophon" -> "gaodayu168/datasophon-website"
"gaodayu168/datasophon" -> "qlangtech/tis"
"gaodayu168/datasophon" -> "flowerfine/scaleph"
"apache/flink-statefun" -> "ververica/stateful-functions"
"apache/flink-statefun" -> "nexmark/nexmark"
"apache/flink-statefun" -> "ververica/flink-sql-cookbook"
"apache/flink-statefun" -> "apache/flink-statefun-playground"
"apache/flink-statefun" -> "apache/flink-table-store"
"apache/flink-statefun" -> "apache/flink-web"
"apache/flink-statefun" -> "fhueske/flink-sql-demo"
"apache/flink-statefun" -> "apache/flink-benchmarks"
"apache/flink-statefun" -> "apache/flink-docker"
"apache/flink-statefun" -> "apache/bahir-flink"
"apache/flink-statefun" -> "ververica/flink-sql-gateway"
"apache/flink-statefun" -> "apache/flink-kubernetes-operator"
"apache/flink-statefun" -> "flink-extended/flink-remote-shuffle"
"apache/flink-statefun" -> "streamnative/pulsar-flink"
"apache/flink-statefun" -> "alibaba/flink-ai-extended"
"TrueCar/mleap" -> "combust-ml/mleap"
"Azure/azure-event-hubs-spark" -> "Azure/azure-cosmosdb-spark"
"Azure/azure-event-hubs-spark" -> "Azure/azure-event-hubs-for-kafka"
"Azure/azure-event-hubs-spark" -> "Azure-Samples/streaming-at-scale"
"Azure/azure-event-hubs-spark" -> "microsoft/sql-spark-connector"
"Azure/azure-event-hubs-spark" -> "Azure/azure-kusto-spark"
"Azure/azure-event-hubs-spark" -> "mspnp/azure-databricks-streaming-analytics"
"Azure/azure-event-hubs-spark" -> "Azure/azure-event-hubs" ["e"=1]
"qubole/sparklens" -> "LucaCanali/sparkMeasure"
"qubole/sparklens" -> "groupon/sparklint"
"qubole/sparklens" -> "linkedin/dr-elephant"
"qubole/sparklens" -> "uber/RemoteShuffleService"
"qubole/sparklens" -> "MrPowers/spark-daria"
"qubole/sparklens" -> "datamechanics/delight"
"qubole/sparklens" -> "qubole/rubix"
"qubole/sparklens" -> "YotpoLtd/metorikku"
"qubole/sparklens" -> "databricks/spark-sql-perf"
"qubole/sparklens" -> "yaooqinn/kyuubi"
"qubole/sparklens" -> "microsoft/hyperspace"
"qubole/sparklens" -> "MemVerge/splash"
"qubole/sparklens" -> "linkedin/coral"
"qubole/sparklens" -> "uber/hudi"
"qubole/sparklens" -> "linkedin/transport"
"svenkreiss/pysparkling" -> "ekampf/PySpark-Boilerplate"
"databrickslabs/migrate" -> "databrickslabs/databricks-sync"
"databrickslabs/migrate" -> "databrickslabs/overwatch"
"databrickslabs/overwatch" -> "databrickslabs/dataframe-rules-engine"
"databrickslabs/overwatch" -> "databrickslabs/migrate"
"databrickslabs/overwatch" -> "databrickslabs/databricks-sync"
"databrickslabs/overwatch" -> "databrickslabs/dbx"
"databrickslabs/overwatch" -> "databrickslabs/delta-oms"
"databrickslabs/overwatch" -> "databrickslabs/tempo"
"databrickslabs/overwatch" -> "databrickslabs/cicd-templates"
"databrickslabs/overwatch" -> "databricks/unity-catalog-setup"
"datainfrahq/druid-operator" -> "ballastdata/dsoi-spec"
"datainfrahq/druid-operator" -> "datainfrahq/dsoi-spec"
"druid-io/druid-operator" -> "opstree/druid-exporter"
"druid-io/druid-operator" -> "datainfrahq/druid-operator"
"druid-io/druid-operator" -> "grafadruid/go-druid"
"eBay/griffin" -> "apache/incubator-griffin"
"pranab/sifarish" -> "pranab/beymani"
"pranab/sifarish" -> "pranab/hoidla"
"pranab/sifarish" -> "groveco/content-engine"
"pranab/sifarish" -> "pferrel/solr-recommender" ["e"=1]
"pranab/sifarish" -> "etsy/Conjecture" ["e"=1]
"ruisibi/rsbi-vue" -> "ruisibi/rsbi-os"
"holdenk/chef-cookbook-spark" -> "holdenk/fastdataprocessingwithspark-sharkexamples"
"holdenk/chef-cookbook-spark" -> "holdenk/fastdataprocessingwithsparkexamples"
"openzipkin/docker-zipkin" -> "openzipkin/zipkin-go-opentracing" ["e"=1]
"openzipkin/docker-zipkin" -> "openzipkin/brave" ["e"=1]
"openzipkin/docker-zipkin" -> "jessyZu/dubbo-zipkin-spring-starter" ["e"=1]
"openzipkin/docker-zipkin" -> "spring-cloud/spring-cloud-sleuth" ["e"=1]
"openzipkin/docker-zipkin" -> "openzipkin/zipkin-api"
"openzipkin/docker-zipkin" -> "openzipkin/b3-propagation"
"openzipkin/docker-zipkin" -> "openzipkin/zipkin-dependencies"
"openzipkin/docker-zipkin" -> "openzipkin/docker-zipkin-dependencies"
"openzipkin/docker-zipkin" -> "openzipkin/zipkin-reporter-java"
"openzipkin/docker-zipkin" -> "apache/incubator-zipkin"
"takidau/streamingbook" -> "takidau/animations"
"takidau/streamingbook" -> "lw-lin/streaming-readings"
"HotelsDotCom/circus-train" -> "HotelsDotCom/waggle-dance"
"Crework/ML-Resources" -> "Crework/Mathematics-for-Machine-Learning"
"Crework/ML-Resources" -> "Crework/A-to-Z-Resources-for-Students"
"Crework/ML-Resources" -> "Crework/Deep-Learning-Resources"
"Crework/ML-Resources" -> "Crework/Machine-Learning-Path"
"Crework/Machine-Learning-Path" -> "Crework/A-to-Z-Resources-for-Students"
"Crework/Machine-Learning-Path" -> "Crework/Deep-Learning-Resources"
"Crework/Mathematics-for-Machine-Learning" -> "Crework/ML-Resources"
"Crework/Mathematics-for-Machine-Learning" -> "Crework/A-to-Z-Resources-for-Students"
"Pushkr/Apache-Spark-Hands-On" -> "Venkata09/BigDataCertificationPrep"
"rockthejvm/spark-essentials" -> "rockthejvm/spark-optimization"
"rockthejvm/spark-essentials" -> "rockthejvm/advanced-scala"
"rockthejvm/spark-essentials" -> "rockthejvm/scala-beginners"
"rockthejvm/spark-essentials" -> "rockthejvm/udemy-spark-streaming"
"rockthejvm/spark-essentials" -> "rockthejvm/scala-problems-interviews"
"rockthejvm/spark-essentials" -> "rockthejvm/spark-performance-tuning"
"rockthejvm/spark-essentials" -> "rockthejvm/udemy-scala-beginners"
"konglinghai123/kettle" -> "konglinghai123/renren_kettle"
"alibaba/simplehbase" -> "alibaba/simplehbaseviewer"
"alibaba/simplehbase" -> "zacharyzhanghao/orm-hbase"
"alibaba/simplehbase" -> "alibaba/druid-ha" ["e"=1]
"allwefantasy/delta-plus" -> "allwefantasy/spark-binlog"
"allwefantasy/delta-plus" -> "bebee4java/sqlalarm"
"allwefantasy/delta-plus" -> "allwefantasy/pyjava"
"allwefantasy/mlsql-api-console" -> "allwefantasy/mlsql-web-console"
"allwefantasy/spark-binlog" -> "allwefantasy/delta-plus"
"allwefantasy/spark-binlog" -> "bebee4java/sqlalarm"
"allwefantasy/spark-binlog" -> "teeyog/blog"
"immerok/recipes" -> "apache/flink-connectors"
"immerok/recipes" -> "flink-extended/flink-dynamic-storage"
"alibaba/pemja" -> "dianfu/pyflink-faq"
"flink-extended/flink-dynamic-storage" -> "apache/flink-connectors"
"ottogroup/flink-spector" -> "ottogroup/metascope" ["e"=1]
"ottogroup/flink-spector" -> "dataArtisans/flink-training-exercises"
"ottogroup/flink-spector" -> "dataArtisans/da-streamingledger"
"ottogroup/flink-spector" -> "wuchong/awesome-flink"
"ottogroup/flink-spector" -> "bytefish/FlinkExperiments"
"ottogroup/flink-spector" -> "ververica/stateful-functions"
"ottogroup/flink-spector" -> "dataArtisans/yahoo-streaming-benchmark"
"XichengDong/sparktraining" -> "XichengDong/simplespark"
"tuplejump/FiloDB" -> "krasserm/akka-analytics" ["e"=1]
"tuplejump/FiloDB" -> "gearpump/gearpump" ["e"=1]
"tuplejump/FiloDB" -> "amplab/keystone"
"tuplejump/FiloDB" -> "velvia/links" ["e"=1]
"tuplejump/FiloDB" -> "velvia/filo"
"tuplejump/FiloDB" -> "intel-hadoop/gearpump"
"tuplejump/FiloDB" -> "coral-streaming/coral"
"tuplejump/FiloDB" -> "cloudera/spark-timeseries"
"tuplejump/FiloDB" -> "levkhomich/akka-tracing" ["e"=1]
"vivek-bombatkar/Databricks-Apache-Spark-2X-Certified-Developer" -> "vivek-bombatkar/Spark-with-Python---My-learning-notes-"
"vivek-bombatkar/Databricks-Apache-Spark-2X-Certified-Developer" -> "jaceklaskowski/mastering-spark-sql-book"
"vivek-bombatkar/Databricks-Apache-Spark-2X-Certified-Developer" -> "spoddutur/spark-notes"
"vivek-bombatkar/Databricks-Apache-Spark-2X-Certified-Developer" -> "databricks/tech-talks"
"vivek-bombatkar/Databricks-Apache-Spark-2X-Certified-Developer" -> "dimajix/spark-training"
"apache/incubator-trafodion" -> "trafodion/trafodion"
"apache/incubator-trafodion" -> "trafodion/core"
"susanli2016/Deep-Learning-with-deeplearning.ai" -> "susanli2016/Machine-Learning-with-AndrewNg"
"LearningJournal/Spark-Streaming-In-Python" -> "LearningJournal/SparkProgrammingInScala"
"LearningJournal/Spark-Streaming-In-Python" -> "LearningJournal/Spark-Streaming-In-Scala"
"rockthejvm/spark-optimization" -> "rockthejvm/spark-performance-tuning"
"rockthejvm/spark-optimization" -> "rockthejvm/udemy-spark-streaming"
"rockthejvm/spark-optimization" -> "rockthejvm/spark-optimization-2"
"streamnative/pulsarctl" -> "streamnative/pulsar-tracing"
"streamnative/pulsarctl" -> "streamnative/aop"
"MrPowers/spark-fast-tests" -> "MrPowers/spark-daria"
"MrPowers/spark-fast-tests" -> "MrPowers/spark-style-guide"
"MrPowers/spark-fast-tests" -> "holdenk/spark-testing-base"
"MrPowers/spark-fast-tests" -> "typelevel/frameless" ["e"=1]
"MrPowers/spark-fast-tests" -> "swoop-inc/spark-alchemy"
"MrPowers/spark-fast-tests" -> "MrPowers/spark-sbt.g8"
"MrPowers/spark-fast-tests" -> "MrPowers/quinn"
"MrPowers/spark-fast-tests" -> "qubole/sparklens"
"MrPowers/spark-fast-tests" -> "holdenk/sparkProjectTemplate.g8"
"MrPowers/spark-fast-tests" -> "MrPowers/chispa"
"MrPowers/spark-fast-tests" -> "YotpoLtd/metorikku"
"MrPowers/spark-fast-tests" -> "hablapps/doric"
"rockthejvm/udemy-scala-advanced" -> "rockthejvm/udemy-scala-beginners"
"rockthejvm/udemy-scala-advanced" -> "rockthejvm/udemy-akka-essentials"
"rockthejvm/udemy-scala-advanced" -> "rockthejvm/udemy-akka-http"
"AzureCosmosDB/scenario-based-labs" -> "CosmosDB/labs"
"delta-io/delta-sharing" -> "delta-io/connectors"
"delta-io/delta-sharing" -> "delta-io/delta-rs" ["e"=1]
"delta-io/delta-sharing" -> "delta-io/kafka-delta-ingest"
"delta-io/delta-sharing" -> "databricks/databricks-cli"
"delta-io/delta-sharing" -> "databricks/delta-live-tables-notebooks"
"delta-io/delta-sharing" -> "delta-io/delta"
"delta-io/delta-sharing" -> "datamechanics/delight"
"delta-io/delta-sharing" -> "databrickslabs/dbx"
"delta-io/delta-sharing" -> "databrickslabs/overwatch"
"delta-io/delta-sharing" -> "microsoft/hyperspace"
"delta-io/delta-sharing" -> "OpenLineage/OpenLineage" ["e"=1]
"delta-io/delta-sharing" -> "microsoft/nutter" ["e"=1]
"delta-io/delta-sharing" -> "databricks/dbt-databricks"
"delta-io/delta-sharing" -> "databricks/koalas" ["e"=1]
"dantezhao/data-group" -> "dantezhao/paper-notes"
"LearningJournal/SparkProgrammingInScala" -> "LearningJournal/Spark-Streaming-In-Scala"
"mozilla/jupyter-spark" -> "krishnan-r/sparkmonitor"
"databrickslabs/dataframe-rules-engine" -> "databrickslabs/overwatch"
"databrickslabs/dataframe-rules-engine" -> "databrickslabs/feature-factory"
"linkedin/cleo" -> "jingwei/cleo-primer"
"linkedin/cleo" -> "linkedin/indextank-engine"
"linkedin/cleo" -> "linkedin/indextank-service"
"linkedin/cleo" -> "linkedin/sensei"
"linkedin/cleo" -> "linkedin/zoie"
"linkedin/cleo" -> "senseidb/zoie"
"SiriDB/siridb-server" -> "thingsdb/ThingsDB"
"agile-lab-dev/DataQuality" -> "agile-lab-dev/wasp"
"agile-lab-dev/DataQuality" -> "FRosner/drunken-data-quality"
"agile-lab-dev/DataQuality" -> "piotr-kalanski/data-quality-monitoring"
"srikalyc/Sql4D" -> "implydata/plyql"
"jdereg/json-io" -> "jdereg/java-util"
"jdereg/json-io" -> "jdereg/n-cube"
"indeedeng/lsmtree" -> "indeedeng/util"
"indeedeng/lsmtree" -> "intfrr/lsmtree"
"indeedeng/lsmtree" -> "jordw/heftydb"
"indeedeng/lsmtree" -> "indeedeng/imhotep" ["e"=1]
"ansrivas/spark-structured-streaming" -> "polomarcus/Spark-Structured-Streaming-Examples"
"jaceklaskowski/spark-workshop" -> "jaceklaskowski/mastering-apache-spark-book"
"jaceklaskowski/spark-workshop" -> "jaceklaskowski/kafka-notebook"
"jaceklaskowski/spark-workshop" -> "jaceklaskowski/spark-structured-streaming-book"
"jaceklaskowski/spark-workshop" -> "jaceklaskowski/spark-streaming-notebook"
"opendatagroup/hadrian" -> "CODAIT/aardpfark"
"opendatagroup/hadrian" -> "datamininggroup/pfa"
"mkuthan/example-spark-kafka" -> "mkuthan/example-spark"
"mkuthan/example-spark-kafka" -> "BenFradet/spark-kafka-writer"
"decioferreira/omniauth-linkedin-oauth2" -> "skorks/omniauth-linkedin"
"decioferreira/omniauth-linkedin-oauth2" -> "emorikawa/linkedin-oauth2"
"skorks/omniauth-linkedin" -> "decioferreira/omniauth-linkedin-oauth2"
"jpmml/jpmml-model" -> "jpmml/jpmml-evaluator"
"jpmml/jpmml-model" -> "jpmml/jpmml-sparkml"
"jpmml/jpmml-model" -> "jpmml/jpmml"
"spotify/flink-on-k8s-operator" -> "wangyang0918/flink-native-k8s-operator"
"spotify/flink-on-k8s-operator" -> "apache/flink-kubernetes-operator"
"databricks/databricks-cli" -> "databrickslabs/dbx"
"databricks/databricks-cli" -> "mspnp/spark-monitoring"
"databricks/databricks-cli" -> "databrickslabs/migrate"
"databricks/databricks-cli" -> "databricks/dbt-databricks"
"databricks/databricks-cli" -> "delta-io/delta-sharing"
"databricks/databricks-cli" -> "databrickslabs/overwatch"
"databricks/databricks-cli" -> "crflynn/databricks-api"
"databricks/databricks-cli" -> "databrickslabs/cicd-templates"
"databricks/databricks-cli" -> "microsoft/sql-spark-connector"
"databricks/databricks-cli" -> "Azure/azure-cosmosdb-spark"
"databricks/databricks-cli" -> "microsoft/nutter" ["e"=1]
"databricks/databricks-cli" -> "delta-io/connectors"
"databricks/databricks-cli" -> "Azure/AzureDatabricksBestPractices"
"databricks/databricks-cli" -> "databrickslabs/terraform-provider-databricks"
"databricks/databricks-cli" -> "MrPowers/mack"
"adatao/tensorspark" -> "databricks/tensorframes"
"adatao/tensorspark" -> "amplab/SparkNet"
"adatao/tensorspark" -> "dirkneumann/deepdist"
"adatao/tensorspark" -> "intel-machine-learning/DistML" ["e"=1]
"rockthejvm/scala-beginners" -> "rockthejvm/advanced-scala"
"rockthejvm/scala-beginners" -> "rockthejvm/spark-essentials"
"rockthejvm/scala-beginners" -> "rockthejvm/akka-essentials"
"rockthejvm/scala-beginners" -> "rockthejvm/spark-optimization"
"rockthejvm/udemy-akka-http" -> "rockthejvm/udemy-akka-serialization"
"rockthejvm/udemy-akka-http" -> "rockthejvm/udemy-akka-remoting-clustering"
"Qihoo360/XSQL" -> "teeyog/IQL"
"Qihoo360/XSQL" -> "edp963/moonbox"
"Qihoo360/XSQL" -> "harbby/sylph"
"Qihoo360/XSQL" -> "Qihoo360/Quicksql"
"Jawf/DataX-Migration" -> "zipingdong/datax-web"
"Jawf/DataX-Migration" -> "TianLangStudio/DataXServer"
"Jawf/DataX-Migration" -> "huzekang/springboot-datax"
"Raphtory/Raphtory" -> "fabianmurariu/docbrown"
"Raphtory/Raphtory" -> "alibaba/pemja"
"linkedin/indextank-service" -> "linkedin/indextank-engine"
"linkedin/indextank-service" -> "linkedin/cleo"
"openmessaging/openchaos" -> "lorettax/DB-Lab"
"openmessaging/openchaos" -> "wflin2020/KotlinExtensions" ["e"=1]
"openmessaging/openchaos" -> "flutting/ff_stars" ["e"=1]
"gregrahn/tpch-kit" -> "tvondra/pg_tpch"
"gregrahn/tpch-kit" -> "gregrahn/tpcds-kit"
"gregrahn/tpch-kit" -> "2ndQuadrant/pg-tpch"
"gregrahn/tpch-kit" -> "gregrahn/join-order-benchmark" ["e"=1]
"Azure/AzureDatabricksBestPractices" -> "mspnp/spark-monitoring"
"Azure/AzureDatabricksBestPractices" -> "hurtn/datalake-ADLS-access-patterns-with-Databricks"
"Azure/AzureDatabricksBestPractices" -> "databrickslabs/cicd-templates"
"Azure/AzureDatabricksBestPractices" -> "Azure-Samples/modern-data-warehouse-dataops" ["e"=1]
"Azure/AzureDatabricksBestPractices" -> "databricks-academy/advanced-data-engineering-with-databricks"
"Azure/AzureDatabricksBestPractices" -> "anagha-microsoft/databricks-workshops"
"Azure/AzureDatabricksBestPractices" -> "DataThirstLtd/azure.databricks.cicd.tools"
"Azure/AzureDatabricksBestPractices" -> "Azure/azure-cosmosdb-spark"
"Azure/AzureDatabricksBestPractices" -> "kromerm/adfdataflowdocs" ["e"=1]
"Azure/AzureDatabricksBestPractices" -> "fabragaMS/ADPE2E" ["e"=1]
"Azure/AzureDatabricksBestPractices" -> "microsoft/sql-spark-connector"
"Azure/AzureDatabricksBestPractices" -> "microsoft/nutter" ["e"=1]
"Azure/AzureDatabricksBestPractices" -> "databricks/delta-live-tables-notebooks"
"Azure/AzureDatabricksBestPractices" -> "databricks/databricks-cli"
"Azure/AzureDatabricksBestPractices" -> "solliancenet/azure-synapse-analytics-workshop-400" ["e"=1]
"MrPowers/spark-style-guide" -> "MrPowers/spark-fast-tests"
"MrPowers/spark-style-guide" -> "MrPowers/spark-sbt.g8"
"MrPowers/spark-style-guide" -> "MrPowers/spark-daria"
"MrPowers/spark-style-guide" -> "MrPowers/quinn"
"MrPowers/spark-style-guide" -> "MrPowers/delta-examples"
"datastax/pulsar-helm-chart" -> "datastax/pulsar"
"datastax/pulsar-helm-chart" -> "datastax/pulsar-admin-console"
"cloudera/impala-tpcds-kit" -> "hortonworks/hive-testbench"
"cloudera/impala-tpcds-kit" -> "gregrahn/tpcds-kit"
"cloudera/impala-tpcds-kit" -> "databricks/spark-sql-perf"
"cloudera/impala-tpcds-kit" -> "cartershanklin/hive-testbench"
"intridea/omniauth-identity" -> "skorks/omniauth-linkedin"
"hablapps/doric" -> "hablapps/sparkOptics"
"projectnessie/nessie" -> "substrait-io/substrait" ["e"=1]
"projectnessie/nessie" -> "dremio/dremio-oss"
"projectnessie/nessie" -> "linkedin/coral"
"projectnessie/nessie" -> "apache/iceberg"
"projectnessie/nessie" -> "OpenLineage/OpenLineage" ["e"=1]
"projectnessie/nessie" -> "oap-project/gluten"
"projectnessie/nessie" -> "NetEase/arctic"
"projectnessie/nessie" -> "alibaba/RemoteShuffleService"
"projectnessie/nessie" -> "rymurr/flight-spark-source"
"projectnessie/nessie" -> "apache/incubator-kyuubi"
"projectnessie/nessie" -> "memiiso/debezium-server-iceberg"
"projectnessie/nessie" -> "delta-io/delta-rs" ["e"=1]
"projectnessie/nessie" -> "MarquezProject/marquez" ["e"=1]
"projectnessie/nessie" -> "apache/incubator-iceberg"
"projectnessie/nessie" -> "facebookincubator/velox" ["e"=1]
"kevinschaich/pyspark-cheatsheet" -> "cartershanklin/pyspark-cheatsheet"
"kevinschaich/pyspark-cheatsheet" -> "MingChen0919/learning-apache-spark"
"kevinschaich/pyspark-cheatsheet" -> "mohanakrishnavh/PySpark-Tutorial"
"kevinschaich/pyspark-cheatsheet" -> "spark-examples/pyspark-examples"
"apache/flink-ml" -> "flink-extended/ai-flow"
"apache/flink-ml" -> "flink-extended/flink-remote-shuffle"
"apache/flink-ml" -> "apache/flink-benchmarks"
"apache/flink-ml" -> "apache/flink-table-store"
"apache/flink-ml" -> "flink-extended/dl-on-flink"
"apache/flink-ml" -> "apache/flink-web"
"apache/flink-ml" -> "alibaba/feathub"
"apache/flink-ml" -> "flink-extended/flink-dynamic-storage"
"apache/flink-ml" -> "alibaba/flink-ai-extended"
"apache/flink-ml" -> "flink-china/flink-forward-asia-hackathon-2021"
"apache/flink-ml" -> "apache/doris-flink-connector" ["e"=1]
"qubole/presto-udfs" -> "qubole/quark"
"qubole/presto-udfs" -> "prestodb/presto-yarn"
"hexgnu/linkedin" -> "emorikawa/linkedin-oauth2"
"hexgnu/linkedin" -> "decioferreira/omniauth-linkedin-oauth2"
"swoop-inc/spark-alchemy" -> "swoop-inc/spark-records"
"databricks/mlops-stack" -> "niall-turbitt/e2e-mlops"
"apache/helix" -> "apache/incubator-pinot"
"apache/helix" -> "apache/incubator-gobblin"
"apache/helix" -> "apache/incubator-ratis" ["e"=1]
"OpenTSDB/tcollector" -> "OpenTSDB/opentsdb"
"OpenTSDB/tcollector" -> "OpenTSDB/asynchbase" ["e"=1]
"OpenTSDB/tcollector" -> "sentric/hannibal" ["e"=1]
"OpenTSDB/tcollector" -> "Ticketmaster/metrilyx-2.0" ["e"=1]
"HotelsDotCom/bull" -> "HotelsDotCom/data-highway"
"streamnative/pulsar-rs" -> "streamnative/pulsar-admin-go"
"streamnative/pulsar-rs" -> "apache/pulsar-client-cpp"
"transceptor-technology/pyleri" -> "transceptor-technology/libcleri"
"transceptor-technology/pyleri" -> "transceptor-technology/goleri"
"transceptor-technology/pyleri" -> "transceptor-technology/qpack"
"transceptor-technology/pyleri" -> "transceptor-technology/aiogcd"
"transceptor-technology/pyleri" -> "thingsdb/ThingsDB"
"japila-books/delta-lake-internals" -> "japila-books/apache-spark-internals"
"databrickslabs/cicd-templates" -> "databrickslabs/dbx"
"databrickslabs/cicd-templates" -> "databrickslabs/terraform-provider-databricks"
"databrickslabs/cicd-templates" -> "mspnp/spark-monitoring"
"databrickslabs/cicd-templates" -> "databrickslabs/overwatch"
"databrickslabs/cicd-templates" -> "alexott/databricks-nutter-projects-demo"
"databrickslabs/cicd-templates" -> "Azure/AzureDatabricksBestPractices"
"databrickslabs/cicd-templates" -> "alexott/spark-playground"
"databrickslabs/cicd-templates" -> "niall-turbitt/e2e-mlops"
"databrickslabs/cicd-templates" -> "microsoft/nutter" ["e"=1]
"databrickslabs/cicd-templates" -> "databrickslabs/databricks-sync"
"FRosner/drunken-data-quality" -> "agile-lab-dev/DataQuality"
"FRosner/drunken-data-quality" -> "FRosner/spawncamping-dds"
"FRosner/drunken-data-quality" -> "eBay/griffin"
"MrPowers/mack" -> "MrPowers/jodie"
"MrPowers/mack" -> "MrPowers/chispa"
"databrickslabs/terraform-provider-databricks" -> "databrickslabs/cicd-templates"
"databrickslabs/terraform-provider-databricks" -> "mspnp/spark-monitoring"
"databrickslabs/terraform-provider-databricks" -> "alexott/databricks-nutter-projects-demo"
"databrickslabs/terraform-provider-databricks" -> "databrickslabs/dbx"
"databrickslabs/terraform-provider-databricks" -> "databrickslabs/migrate"
"melentye/flink-kubernetes" -> "melentye/flink-docker"
"senseidb/zoie" -> "senseidb/bobo"
"senseidb/zoie" -> "senseidb/sensei"
"druid-io/docker-druid" -> "druid-io/tranquility"
"druid-io/docker-druid" -> "znly/docker-druid"
"CosmosDB/labs" -> "AzureCosmosDB/scenario-based-labs"
"databricks-academy/ml-in-production-english" -> "databricks-academy/scalable-machine-learning-with-apache-spark-english"
"transceptor-technology/libcleri" -> "transceptor-technology/qpack"
"intel-hadoop/PAT" -> "intel-hadoop/Big-Data-Benchmark-for-Big-Bench"
"bytefish/FlinkExperiments" -> "rmetzger/flink-streaming-etl"
"HuaweiBigData/astro" -> "HuaweiBigData/StreamCQL"
"HuaweiBigData/astro" -> "HuaweiBigData/carbondata"
"HuaweiBigData/astro" -> "Huawei-Spark/Spark-SQL-on-HBase"
"omnisci/mapd-core" -> "omnisci/mapd-charting"
"omnisci/mapd-core" -> "omnisci/pymapd"
"omnisci/mapd-core" -> "omnisci/mapd-connector"
"ExpediaDotCom/haystack-ui" -> "ExpediaDotCom/haystack"
"linkedin/api-get-started" -> "linkedin/zoie"
"MARKETProtocol/MARKET.js" -> "MARKETProtocol/dApp"
"sankamuk/PysparkCheatsheet" -> "arverma007/DataEngineering"
"darkjh/scalaflow" -> "jhlch/scala-dataflow-dsl"
"databricks/delta-live-tables-notebooks" -> "databricks/notebook-best-practices"
"databricks/delta-live-tables-notebooks" -> "databricks-demos/dbdemos"
"databricks/delta-live-tables-notebooks" -> "hwang-db/db-common-assets"
"databricks/delta-live-tables-notebooks" -> "databrickslabs/migrate"
"databricks/delta-live-tables-notebooks" -> "mspnp/spark-monitoring"
"databricks/delta-live-tables-notebooks" -> "databricks/terraform-databricks-examples"
"databricks/delta-live-tables-notebooks" -> "databricks/unity-catalog-setup"
"krypticmouse/ML-Self-Starter-Pack" -> "Crework/NLP-Resources"
"tapdata/idaas-pdk" -> "tapdata/idaas"
"jpmml/openscoring" -> "jpmml/r2pmml"
"cloudera/spark-dataflow" -> "dataArtisans/flink-dataflow"
"cloudera/spark-dataflow" -> "GoogleCloudPlatform/DataflowJavaSDK"
"cloudera/spark-dataflow" -> "apache/incubator-beam"
"cloudera/spark-dataflow" -> "ooyala/spark-jobserver"
"cloudera/spark-dataflow" -> "darkjh/scalaflow"
"cloudera/spark-dataflow" -> "cloudera/spark-timeseries"
"jdereg/n-cube" -> "jdereg/n-cube-editor"
"deanwampler/spark-workshop" -> "hohonuuli/sparknotebook" ["e"=1]
"microsoft/sql-spark-connector" -> "Azure/azure-event-hubs-spark"
"microsoft/sql-spark-connector" -> "microsoft/nutter" ["e"=1]
"microsoft/sql-spark-connector" -> "mspnp/spark-monitoring"
"microsoft/sql-spark-connector" -> "solytic/sql-spark-connector"
"microsoft/sql-spark-connector" -> "Azure-Samples/Synapse" ["e"=1]
"microsoft/sql-spark-connector" -> "gbrueckl/Databricks.API.PowerShell"
"microsoft/sql-spark-connector" -> "SQLPlayer/azure.datafactory.tools" ["e"=1]
"microsoft/sql-spark-connector" -> "Azure/azure-sqldb-spark"
"apache/yunikorn-core" -> "apache/yunikorn-k8shim"
"databricks-academy/INT-JEPFS-V2-IL" -> "databricks-academy/just-enough-python-for-spark"
"databricks-academy/INT-JEPFS-V2-IL" -> "databricks-academy/apache-spark-programming-with-databricks"
"InterestingLab/seatunnel" -> "flink-extended/flink-dynamic-storage"
"linkedtales/scrapedin-linkedin-crawler" -> "linkedtales/scrapedin"
"linkedtales/scrapedin-linkedin-crawler" -> "fabriziomiano/linkedin-scraper"
"linkedtales/scrapedin-linkedin-crawler" -> "jvandenaardweg/linkedin-profile-scraper"
"rockthejvm/udemy-akka-streams" -> "rockthejvm/udemy-akka-remoting-clustering"
"rockthejvm/udemy-akka-streams" -> "rockthejvm/udemy-akka-persistence"
"dataArtisans/yahoo-streaming-benchmark" -> "project-flink/flink-perf"
"dataArtisans/yahoo-streaming-benchmark" -> "dataArtisans/flink-benchmarks"
"dataArtisans/yahoo-streaming-benchmark" -> "lsds/StreamBench"
"dataArtisans/yahoo-streaming-benchmark" -> "yahoo/streaming-benchmarks"
"bit-ware/HBaseXplorer" -> "zpasal/hbase-gui-admin"
"caroljmcdonald/SparkStreamingHBaseExample" -> "mapr-demos/SparkStreamingHBaseExample"
"manuelbernhardt/reactive-web-applications" -> "jsuereth/sbt-in-action-examples" ["e"=1]
"beemojs/beemo" -> "airbnb/nimbus"
"timescale/timescale-prometheus" -> "timescale/timescale-analytics"
"timescale/timescale-prometheus" -> "timescale/docs.timescale.com-content"
"timescale/timescale-prometheus" -> "timescale/pg_prometheus"
"rdblue/s3committer" -> "rdblue/parquet-cli"
"qubole/quark" -> "qubole/rubix"
"guoding83128/OpenDL" -> "dirkneumann/deepdist"
"guoding83128/OpenDL" -> "intel-machine-learning/DistML" ["e"=1]
"guoding83128/OpenDL" -> "mli/parameter_server" ["e"=1]
"guoding83128/OpenDL" -> "jaberg/DeepLearningBenchmarks" ["e"=1]
"guoding83128/OpenDL" -> "jpatanooga/Metronome" ["e"=1]
"hadooparchitecturebook/clickstream-tutorial" -> "hadooparchitecturebook/SparkStreaming.Sessionization"
"hadooparchitecturebook/clickstream-tutorial" -> "hadooparchitecturebook/SparkOnALog"
"memiiso/debezium-server-iceberg" -> "getindata/kafka-connect-iceberg-sink"
"Comcast/pulsar-client-go" -> "wolfstudy/pulsar-client-go"
"cloudfuse-io/buzz-rust" -> "jorgecarleitao/datafusion-python"
"wolfstudy/pulsar-client-go" -> "Comcast/pulsar-client-go"
"linkedin/bobo" -> "linkedin/zoie"
"linkedin/zoie" -> "linkedin/bobo"
"linkedin/zoie" -> "linkedin/krati"
"Hang-Hu/SimpleController" -> "Hang-Hu/ei-check-in"
"Hang-Hu/ei-check-in" -> "Hang-Hu/SimpleController"
"spring-projects-experimental/spring-pulsar" -> "apache/pulsar-client-reactive"
"clulab/reach" -> "clulab/processors"
"flink-extended/ai-flow" -> "flink-extended/dl-on-flink"
"flink-extended/ai-flow" -> "apache/flink-ml"
"flink-extended/ai-flow" -> "flink-extended/flink-dynamic-storage"
"linkedin/iceberg" -> "linkedin/linkedin-calcite"
"linkedin/helix" -> "linkedin/krati"
"rockthejvm/advanced-scala" -> "rockthejvm/scala-beginners"
"trinodb/charts" -> "valeriano-manassero/helm-charts"
"397090770/spark-summit-2017-SanFrancisco" -> "397090770/spark-summit-2017-Europe"
"397090770/spark-summit-2017-SanFrancisco" -> "397090770/spark-summit-north-america-2018-06"
"397090770/spark-summit-2017-SanFrancisco" -> "liancheng/spear"
"docker-flink/docker-flink" -> "melentye/flink-kubernetes"
"docker-flink/docker-flink" -> "docker-flink/examples"
"docker-flink/docker-flink" -> "zqhZY/Flink-docker-HA"
"asdaraujo/edge2ai-workshop" -> "fabiog1901/OneNodeCDHCluster"
"7eggs/node-druid-query" -> "implydata/plywood"
"timescale/pg_prometheus" -> "timescale/prometheus-postgresql-adapter"
"timescale/pg_prometheus" -> "timescale/docs.timescale.com-content"
"timescale/pg_prometheus" -> "iobeam/iobeam-client-java"
"timescale/pg_prometheus" -> "iobeam/iobeam"
"timescale/pg_prometheus" -> "iobeam/sample-android-wifi-rssi"
"influxdata/influx-stress" -> "influxdata/influxdb-comparisons"
"grafadruid/go-druid" -> "skilld-labs/entity-rules-engine"
"GoogleCloudPlatform/DataflowPythonSDK" -> "apache/incubator-beam"
"GoogleCloudPlatform/DataflowPythonSDK" -> "GoogleCloudPlatform/processing-logs-using-dataflow" ["e"=1]
"GoogleCloudPlatform/DataflowPythonSDK" -> "GoogleCloudPlatform/gcloud-python" ["e"=1]
"diennea/bookkeeper-visual-manager" -> "diennea/carapaceproxy"
"diennea/bookkeeper-visual-manager" -> "diennea/blazingcache"
"diennea/bookkeeper-visual-manager" -> "diennea/blobit"
"diennea/herddb" -> "diennea/blobit"
"diennea/herddb" -> "diennea/bookkeeper-visual-manager"
"diennea/herddb" -> "diennea/blazingcache"
"diennea/herddb" -> "diennea/carapaceproxy"
"diennea/herddb" -> "diennea/majordodo"
"h2oai/h2o-flow" -> "h2oai/h2o.js"
"intel-hadoop/storm-benchmark" -> "manuzhang/storm-benchmark"
"intel-hadoop/storm-benchmark" -> "yahoo/storm-perf-test"
"streamnative/mop" -> "streamnative/aop"
"holdenk/spark-validator" -> "databricks/spark-integration-tests"
"josonle/BigData-Learning" -> "josonle/Learning-Spark"
"quarkiverse/quarkus-operator-sdk" -> "java-operator-sdk/java-operator-sdk"
"leoChaoGlut/presto-research" -> "leoChaoGlut/presto-manager"
"metamx/druid-spark-batch" -> "SharpRay/spark-druid-connector"
"databrickslabs/dbldatagen" -> "databrickslabs/dbx"
"allwefantasy/mlsql-web-console" -> "allwefantasy/mlsql-api-console"
"mtth/azkaban" -> "matthayes/azkaban-rb"
"flink-extended/dl-on-flink" -> "flink-extended/ai-flow"
"flink-extended/dl-on-flink" -> "apache/flink-ml"
"allwefantasy/pyjava" -> "allwefantasy/mlsql-web-console"
"senseidb/sensei" -> "senseidb/zoie"
"apache/incubator-tajo" -> "tajo-project/tajo"
"apache/geode-examples" -> "apache/geode-native"
"gingsmith/cocoa" -> "gingsmith/proxcocoa"
"MichaelDrogalis/voluble" -> "knaufk/flink-faker"
"apache/bahir-website" -> "apache/incubator-systemml-website"
"cerndb/SparkPlugins" -> "cerndb/spark-dashboard"
"SnappyDataInc/snappy-store" -> "SnappyDataInc/spark-jobserver"
"yahoo/swiv" -> "geobioboo/pivot"
"apache/incubator-hop" -> "apache/incubator-hop-website"
"apache/tajo" -> "tajo-project/tajo"
"Pardot/Rhombus" -> "deanhiller/databus"
"melentye/flink-docker" -> "melentye/flink-kubernetes"
"NVIDIA/spark-rapids-examples" -> "NVIDIA/spark-rapids-benchmarks"
"NVIDIA/spark-rapids-examples" -> "NVIDIA/spark-rapids-ml"
"zhangyuc/splash" -> "gingsmith/proxcocoa"
"Crework/NLP-Resources" -> "Crework/ML-Resources"
"Crework/NLP-Resources" -> "Crework/Mathematics-for-Machine-Learning"
"runawayhorse001/PythonTipsDS" -> "runawayhorse001/DatamingTutorial"
"runawayhorse001/PythonTipsDS" -> "runawayhorse001/SphinxGithub"
"rockthejvm/udemy-akka-remoting-clustering" -> "rockthejvm/udemy-akka-serialization"
"holdenk/fastdataprocessingwithsparkexamples" -> "holdenk/chef-cookbook-spark"
"holdenk/fastdataprocessingwithsparkexamples" -> "holdenk/fastdataprocessingwithspark-sharkexamples"
"SnappyDataInc/spark-jobserver" -> "SnappyDataInc/snappy-store"
"mapd/mapd-connector" -> "mapd/mapd-crossfilter"
"wlhbdp/bdp-gold" -> "wlhbdp/bdp-cdp"
"facetjs/facetjs" -> "facetjs/facetjs.github.io"
"ExpediaDotCom/haystack-adaptive-alerting" -> "ExpediaDotCom/haystack-metrics"
"hablapps/sparkOptics" -> "hablapps/doric"
"linkedin/krati" -> "linkedin/zoie"
"jaceklaskowski/mastering-kafka-streams-book" -> "jaceklaskowski/kafka-notebook"
"itisaid/cmdb" -> "zhihuili/robot"
"apache/incubator-systemml-website" -> "apache/bahir-website"
"diennea/blazingcache" -> "diennea/majordodo"
"hadooparchitecturebook/SparkStreaming.Sessionization" -> "hadooparchitecturebook/SparkOnALog"
"wlhbdp/bdp-base" -> "wlhbdp/bdp-cdp"
"wlhbdp/bdp-base" -> "wlhbdp/bdp-gold"
"notall/shadowsocksr" -> "itisaid/go-ethereum"
"tinohean/hugo" -> "wikimedia/operations-software-druid_exporter"
"airbnb/aerosolve" ["l"="11.605,24.298"]
"airbnb/airpal" ["l"="11.646,24.316"]
"JohnLangford/vowpal_wabbit" ["l"="27.176,33.948"]
"PredictionIO/PredictionIO" ["l"="27.319,33.841"]
"airbnb/airflow" ["l"="11.526,24.222"]
"airbnb/AirMapView" ["l"="11.72,24.388"]
"airbnb/caravel" ["l"="11.595,24.247"]
"airbnb/knowledge-repo" ["l"="25.352,33.765"]
"linkedin/pinot" ["l"="11.508,24.139"]
"clips/pattern" ["l"="27.254,33.866"]
"haifengl/smile" ["l"="9.891,24.808"]
"johnmyleswhite/ML_for_Hackers" ["l"="27.306,33.884"]
"hangtwenty/dive-into-machine-learning" ["l"="23.377,30.853"]
"numenta/nupic" ["l"="27.266,33.905"]
"scalanlp/breeze" ["l"="9.773,24.758"]
"airbnb/billow" ["l"="11.692,24.407"]
"apache/flink" ["l"="11.322,23.637"]
"zhisheng17/flink-learning" ["l"="11.465,23.583"]
"apache/spark" ["l"="11.192,23.649"]
"apache/kafka" ["l"="9.658,21.672"]
"flink-china/flink-training-course" ["l"="11.506,23.697"]
"apache/hadoop" ["l"="11.2,23.697"]
"alibaba/arthas" ["l"="9.754,21.486"]
"alibaba/canal" ["l"="9.852,21.52"]
"alibaba/DataX" ["l"="9.849,21.572"]
"apache/zookeeper" ["l"="9.654,21.547"]
"apache/pulsar" ["l"="9.703,21.612"]
"netty/netty" ["l"="9.611,21.56"]
"apache/hbase" ["l"="11.262,23.732"]
"apache/hive" ["l"="11.282,23.748"]
"ververica/flink-cdc-connectors" ["l"="11.498,23.649"]
"prestodb/presto" ["l"="11.354,23.736"]
"tomwhite/hadoop-book" ["l"="11.189,23.827"]
"databricks/learning-spark" ["l"="11.203,23.913"]
"larsgeorge/hbase-book" ["l"="10.712,26.462"]
"JerryLead/SparkInternals" ["l"="11.264,23.863"]
"cloudera/hue" ["l"="11.288,23.813"]
"apache/hadoop-common" ["l"="11.197,23.768"]
"databricks/Spark-The-Definitive-Guide" ["l"="11.16,23.927"]
"apache/storm" ["l"="11.251,23.79"]
"sryza/aas" ["l"="11.189,23.944"]
"alexholmes/hadoop-book" ["l"="11.066,24.158"]
"lw-lin/CoolplaySpark" ["l"="11.405,23.814"]
"apache/lucene-solr" ["l"="11.122,23.653"]
"apache/lucene" ["l"="11.172,23.6"]
"apache/cassandra" ["l"="11.156,23.713"]
"apache/solr" ["l"="11.145,23.675"]
"apache/nutch" ["l"="9.856,21.646"]
"apache/tomcat" ["l"="9.539,21.622"]
"apache/mahout" ["l"="11.185,23.74"]
"elastic/elasticsearch" ["l"="9.705,21.715"]
"apache/activemq" ["l"="9.497,21.621"]
"apache/maven" ["l"="9.439,21.699"]
"digoal/blog" ["l"="11.003,23.718"]
"greenplum-db/gpdb" ["l"="11.258,23.828"]
"postgres-cn/pgdoc-cn" ["l"="-9.368,-4.736"]
"pingcap/tidb" ["l"="-10.446,-0.555"]
"postgres/postgres" ["l"="-12.203,22.627"]
"ty4z2008/Qix" ["l"="23.792,31.27"]
"Vonng/ddia" ["l"="6.684,17.289"]
"XiaoMi/soar" ["l"="-12.972,3.259"]
"alibaba/AliSQL" ["l"="9.786,21.13"]
"Meituan-Dianping/SQLAdvisor" ["l"="-12.985,3.193"]
"alibaba/otter" ["l"="9.765,21.347"]
"rootsongjc/kubernetes-handbook" ["l"="-9.223,2.37"]
"citusdata/citus" ["l"="-9.031,-4.67"]
"chai2010/advanced-go-programming-book" ["l"="-12.744,0.936"]
"azkaban/azkaban" ["l"="11.375,23.758"]
"cloudera/Impala" ["l"="11.337,23.849"]
"apache/ambari" ["l"="11.327,23.764"]
"apache/zeppelin" ["l"="11.318,23.732"]
"apache/kylin" ["l"="11.359,23.776"]
"yahoo/kafka-manager" ["l"="10.267,22.552"]
"apache/flume" ["l"="11.283,23.779"]
"DTStack/flinkx" ["l"="11.516,23.675"]
"druid-io/druid" ["l"="11.522,24.022"]
"spark-jobserver/spark-jobserver" ["l"="11.264,23.966"]
"apache/oozie" ["l"="11.307,23.803"]
"databricks-academy/data-engineering-with-databricks" ["l"="10.959,24.248"]
"databricks-academy/advanced-data-engineering-with-databricks" ["l"="10.958,24.268"]
"databricks-academy/apache-spark-programming-with-databricks" ["l"="10.947,24.28"]
"databricks-academy/data-analysis-with-databricks-sql" ["l"="10.966,24.288"]
"terra-money/core" ["l"="47.358,-23.516"]
"databricks-academy/just-enough-python-for-spark" ["l"="10.931,24.291"]
"databricks/tech-talks" ["l"="11.007,24.18"]
"hurtn/datalake-ADLS-access-patterns-with-Databricks" ["l"="10.93,24.261"]
"hwang-db/db-common-assets" ["l"="10.971,24.276"]
"databrickslabs/overwatch" ["l"="10.987,24.193"]
"databricks/delta-live-tables-notebooks" ["l"="10.991,24.252"]
"databricks-academy/ml-in-production" ["l"="10.922,24.281"]
"Azure/AzureDatabricksBestPractices" ["l"="10.945,24.237"]
"Azure-Samples/modern-data-warehouse-dataops" ["l"="-12.923,-44.14"]
"MicrosoftLearning/DP-203-Data-Engineer" ["l"="-12.965,-44.079"]
"databricks-academy/data-engineer-learning-path" ["l"="10.953,24.297"]
"databricks/spark-deep-learning" ["l"="11.126,23.979"]
"yahoo/TensorFlowOnSpark" ["l"="11.133,23.94"]
"databricks/tensorframes" ["l"="11.16,24.022"]
"databricks/spark-sklearn" ["l"="11.105,24.017"]
"maxpumperla/elephas" ["l"="11.076,24.001"]
"intel-analytics/BigDL" ["l"="11.097,23.964"]
"Azure/mmlspark" ["l"="11.097,23.932"]
"cerndb/dist-keras" ["l"="11.061,23.983"]
"combust/mleap" ["l"="11.031,24.021"]
"databricks/koalas" ["l"="25.405,33.998"]
"JohnSnowLabs/spark-nlp" ["l"="29.627,32.567"]
"jaceklaskowski/mastering-apache-spark-book" ["l"="11.255,23.984"]
"databricks/mlflow" ["l"="11.069,23.937"]
"tensorflow/ecosystem" ["l"="22.754,37.219"]
"endymecy/spark-ml-source-analysis" ["l"="11.304,23.886"]
"databricks/scala-style-guide" ["l"="9.924,24.743"]
"susanli2016/Data-Analysis-with-R" ["l"="10.686,24.014"]
"susanli2016/Statistics-with-R-Specialization" ["l"="10.656,24.01"]
"justmarkham/dplyr-tutorial" ["l"="10.623,24.011"]
"susanli2016/PySpark-and-MLlib" ["l"="10.837,24.025"]
"wiibrew/DeepLearningCourseCodes" ["l"="11.619,24.349"]
"ionvision/DeepLearningCourseCodes" ["l"="11.611,24.389"]
"wiibrew/wiibrew.github.io" ["l"="11.632,24.374"]
"wiibrew/YOLO_tensorflow" ["l"="11.629,24.391"]
"intel-analytics/analytics-zoo" ["l"="11.31,23.831"]
"Tencent/angel" ["l"="11.102,23.869"]
"yahoo/CaffeOnSpark" ["l"="11.128,24.05"]
"dmlc/mxnet" ["l"="27.064,33.96"]
"intel-analytics/BigDL-Tutorials" ["l"="10.965,23.902"]
"uber/horovod" ["l"="34.123,35.271"]
"WeiYe-Jing/datax-web" ["l"="11.555,23.595"]
"WeBankFinTech/DataSphereStudio" ["l"="11.56,23.643"]
"WeiYe-Jing/datax-web-ui" ["l"="11.682,23.658"]
"edp963/davinci" ["l"="11.532,23.624"]
"dataease/dataease" ["l"="6.928,17.768"]
"pentaho/pentaho-kettle" ["l"="9.986,21.577"]
"apache/incubator-dolphinscheduler" ["l"="11.472,23.648"]
"zhp8341/flink-streaming-platform-web" ["l"="11.592,23.653"]
"streamxhub/streamx" ["l"="11.552,23.664"]
"DataLinkDC/dlink" ["l"="11.569,23.67"]
"apache/dolphinscheduler" ["l"="11.457,23.532"]
"DTStack/flinkStreamSQL" ["l"="11.552,23.702"]
"scala/scala" ["l"="10.019,24.764"]
"akka/akka" ["l"="9.958,24.722"]
"scikit-learn/scikit-learn" ["l"="33.568,35.426"]
"google/guava" ["l"="9.536,21.556"]
"dmlc/xgboost" ["l"="25.345,33.814"]
"apache/airflow" ["l"="13.569,23.791"]
"ExpediaGroup/mittens" ["l"="11.624,24.539"]
"HotelsDotCom/data-highway" ["l"="11.619,24.504"]
"HotelsDotCom/flyte" ["l"="11.706,24.717"]
"HotelsDotCom/kube-aws" ["l"="11.715,24.737"]
"HotelsDotCom/flyte-client" ["l"="11.7,24.735"]
"HotelsDotCom/flyte-shell" ["l"="11.722,24.727"]
"RedisLabs/spark-redis" ["l"="11.292,23.946"]
"hortonworks-spark/shc" ["l"="11.377,23.933"]
"elastic/elasticsearch-hadoop" ["l"="11.314,23.858"]
"debasishg/scala-redis" ["l"="9.759,24.693"]
"allwefantasy/streamingpro" ["l"="11.419,23.857"]
"Huawei-Spark/Spark-SQL-on-HBase" ["l"="11.401,23.998"]
"cloudera/livy" ["l"="11.288,23.977"]
"jaceklaskowski/spark-structured-streaming-book" ["l"="11.284,24.011"]
"databricks/spark-avro" ["l"="11.29,24.031"]
"datastax/spark-cassandra-connector" ["l"="11.223,23.973"]
"apache/hbase-connectors" ["l"="11.435,23.968"]
"apache/samza" ["l"="11.339,23.883"]
"apache/samza-hello-samza" ["l"="11.225,23.864"]
"apache/tez" ["l"="11.334,23.823"]
"apache/drill" ["l"="11.365,23.798"]
"linkedin/gobblin" ["l"="11.453,24.077"]
"apache/avro" ["l"="11.25,23.765"]
"apache/parquet-mr" ["l"="11.354,23.828"]
"HuaweiBigData/StreamCQL" ["l"="11.417,24.014"]
"apache/incubator-heron" ["l"="11.438,23.85"]
"apache/incubator-beam" ["l"="11.398,24.103"]
"twitter/heron" ["l"="11.449,24.047"]
"apache/pig" ["l"="11.228,23.781"]
"apache/incubator-ratis" ["l"="9.319,21.425"]
"pravega/pravega" ["l"="11.501,23.789"]
"apache/bookkeeper" ["l"="9.456,21.502"]
"pravega/flink-connectors" ["l"="11.474,23.76"]
"apache/incubator-hudi" ["l"="11.456,23.842"]
"uber/AthenaX" ["l"="11.544,23.802"]
"apache/incubator-pinot" ["l"="11.453,23.806"]
"apache/bahir-flink" ["l"="11.605,23.767"]
"apache/flink-table-store" ["l"="11.619,23.778"]
"alibaba/Alink" ["l"="11.488,23.675"]
"apache/calcite" ["l"="11.399,23.741"]
"Qihoo360/Quicksql" ["l"="11.53,23.703"]
"apache/iceberg" ["l"="11.44,23.721"]
"delta-io/delta" ["l"="11.33,23.789"]
"apache/flink-statefun" ["l"="11.69,23.797"]
"sql-machine-learning/sqlflow" ["l"="11.438,23.675"]
"sql-machine-learning/elasticdl" ["l"="-9.393,2.872"]
"alibaba/x-deeplearning" ["l"="22.682,37.143"]
"apache/incubator-doris" ["l"="11.426,23.7"]
"InterestingLab/waterdrop" ["l"="11.521,23.719"]
"dmlc/ps-lite" ["l"="26.832,33.933"]
"ICT-BDA/EasyML" ["l"="11.097,23.83"]
"Qihoo360/XLearning" ["l"="11.145,23.822"]
"aksnzhy/xlearn" ["l"="22.788,37.244"]
"guestwalk/libffm" ["l"="22.791,37.311"]
"wnzhang/rtb-papers" ["l"="22.773,37.2"]
"cnkuangshi/LightCTR" ["l"="26.803,33.913"]
"Microsoft/LightGBM" ["l"="25.421,33.759"]
"guestwalk/kaggle-2014-criteo" ["l"="22.754,37.307"]
"alibaba/euler" ["l"="22.585,37.136"]
"wzhe06/Ad-papers" ["l"="22.718,37.135"]
"baidu/Familia" ["l"="31.975,30.129"]
"heibaiying/spring-samples-for-all" ["l"="11.791,23.244"]
"heibaiying/Full-Stack-Notes" ["l"="11.777,23.299"]
"tobegit3hub/deep_recommend_system" ["l"="22.845,37.311"]
"faneshion/MatchZoo" ["l"="31.986,30.034"]
"samdeeplearning/The-Terrible-Deep-Learning-List" ["l"="23.322,31.055"]
"memect/hao" ["l"="26.955,34.04"]
"mli/gluon-tutorials-zh" ["l"="34.209,35.232"]
"TalkingData/Fregata" ["l"="22.869,37.335"]
"koth/kcws" ["l"="32.038,30.083"]
"JustFollowUs/Natural-Language-Processing" ["l"="31.96,30.098"]
"josonle/Coding-Now" ["l"="11.707,23.501"]
"realguoshuai/hadoop_study" ["l"="11.679,23.586"]
"WadeStack/BigDataIE" ["l"="11.724,23.521"]
"sunnyandgood/BigData" ["l"="11.737,23.499"]
"CheckChe0803/BigData-Interview" ["l"="11.678,23.548"]
"oeljeklaus-you/UserActionAnalyzePlatform" ["l"="11.731,23.552"]
"monsonlee/BigData" ["l"="11.75,23.53"]
"josonle/BigData-Learning" ["l"="11.711,23.413"]
"chu888chu888/HadoopAndSparkDataStudy" ["l"="11.769,23.544"]
"Thpffcj/BigData-Getting-Started" ["l"="11.72,23.537"]
"Dr11ft/BigDataGuide" ["l"="11.676,23.52"]
"SwordfallYeung/Interview_BigData" ["l"="11.746,23.519"]
"LuckyZXL2016/News_Spark" ["l"="11.747,23.546"]
"wangzhiwubigdata/God-Of-BigData" ["l"="11.579,23.561"]
"weiweifan/Big-Data-Resources" ["l"="11.742,23.467"]
"gingerredjade/flink-userportrait-main" ["l"="11.69,23.606"]
"authorwlh/alldata" ["l"="11.662,23.593"]
"birdLark/LarkMidTable" ["l"="11.646,23.611"]
"didi/Logi-KafkaManager" ["l"="11.52,23.547"]
"didi/nightingale" ["l"="-9.269,2.24"]
"smartloli/kafka-eagle" ["l"="10.302,22.5"]
"xaecbd/KafkaCenter" ["l"="11.539,23.573"]
"meshplus/bitxhub" ["l"="11.517,23.324"]
"vran-dev/PrettyZoo" ["l"="10.019,21.268"]
"yahoo/CMAK" ["l"="10.226,22.504"]
"erda-project/erda" ["l"="-9.348,2.423"]
"greenplum-db/gporca" ["l"="-10.928,5.106"]
"yandex/ClickHouse" ["l"="11.532,23.928"]
"oceanbase/oceanbase" ["l"="-11.106,5.091"]
"StarRocks/starrocks" ["l"="11.405,23.66"]
"apache/incubator-hawq" ["l"="11.419,24.037"]
"heibaiying/BigData-Notes" ["l"="6.646,17.728"]
"CheckChe0803/flink-recommandSystem-demo" ["l"="11.6,23.593"]
"xuxueli/xxl-job" ["l"="9.912,21.491"]
"qiurunze123/miaosha" ["l"="6.696,17.753"]
"xkcoding/spring-boot-demo" ["l"="6.741,17.812"]
"ververica/flink-sql-gateway" ["l"="11.656,23.743"]
"wxgzgl/LarkMidTable" ["l"="11.671,23.629"]
"hairless/plink" ["l"="11.659,23.677"]
"collabH/repository" ["l"="11.666,23.611"]
"intsmaze/flink-boot" ["l"="-26.807,18.416"]
"airbnb/binaryalert" ["l"="11.715,24.465"]
"airbnb/bugsnag-android" ["l"="11.702,24.414"]
"airbnb/alerts" ["l"="11.686,24.417"]
"airbnb/brace" ["l"="11.708,24.408"]
"airbnb/buck" ["l"="11.741,24.467"]
"airbnb/butterknife" ["l"="11.712,24.431"]
"airbnb/bossbat" ["l"="11.731,24.437"]
"airbnb/aws-cli" ["l"="11.714,24.414"]
"airbnb/brakeman" ["l"="11.743,24.435"]
"airbnb/android-mapviewballoons" ["l"="11.72,24.417"]
"airbnb/appear" ["l"="11.698,24.42"]
"airbnb/apollo-android" ["l"="11.715,24.422"]
"airbnb/apple-tv-auth" ["l"="11.702,24.427"]
"airbnb/audited" ["l"="11.706,24.421"]
"airbnb/chancery" ["l"="11.757,24.428"]
"ljygz/Flink-CEPplus" ["l"="11.785,23.702"]
"ljygz/flink1.8-analyse" ["l"="11.83,23.7"]
"apache/nifi" ["l"="11.327,23.702"]
"jfrazee/awesome-nifi" ["l"="13.818,24.058"]
"Teradata/kylo" ["l"="13.846,23.938"]
"apache/atlas" ["l"="13.845,23.815"]
"debezium/debezium" ["l"="9.721,21.65"]
"apache/ignite" ["l"="11.294,23.709"]
"streamsets/datacollector" ["l"="11.509,23.809"]
"apache/beam" ["l"="11.267,23.654"]
"salesforce/TransmogrifAI" ["l"="25.583,33.923"]
"Featuretools/featuretools" ["l"="25.564,33.851"]
"awesome-spark/awesome-spark" ["l"="11.179,24.02"]
"awesome-spark/spark-gotchas" ["l"="11.184,24.074"]
"youngwookim/awesome-hadoop" ["l"="11.375,24.113"]
"manuzhang/awesome-streaming" ["l"="13.524,23.864"]
"igorbarinov/awesome-data-engineering" ["l"="13.477,23.87"]
"MrPowers/spark-daria" ["l"="11.231,24.055"]
"jadianes/spark-py-notebooks" ["l"="10.97,24.008"]
"japila-books/apache-spark-internals" ["l"="11.27,24.02"]
"spark-notebook/spark-notebook" ["l"="11.192,23.976"]
"qubole/sparklens" ["l"="11.361,23.994"]
"holdenk/spark-testing-base" ["l"="11.239,24.031"]
"databricks/reference-apps" ["l"="11.228,23.995"]
"databricks/spark-csv" ["l"="11.229,24.015"]
"mahmoudparsian/data-algorithms-book" ["l"="11.243,23.929"]
"andypetrella/spark-notebook" ["l"="11.208,24.07"]
"databricks/spark-redshift" ["l"="-10.18,-1.594"]
"apache/incubator-zeppelin" ["l"="11.278,24.116"]
"databricks/spark-knowledgebase" ["l"="11.209,24.038"]
"harsha2010/magellan" ["l"="18.609,25.017"]
"amplab-extras/SparkR-pkg" ["l"="10.478,26.517"]
"killrweather/killrweather" ["l"="11.183,23.999"]
"datastax/java-driver" ["l"="10.958,22.421"]
"datastax/python-driver" ["l"="10.972,22.394"]
"pcmanus/ccm" ["l"="10.974,22.45"]
"Stratio/cassandra-lucene-index" ["l"="12.274,25.958"]
"json4s/json4s" ["l"="9.768,24.733"]
"jsevellec/cassandra-unit" ["l"="10.985,22.434"]
"intel-analytics/BigDL-core" ["l"="10.923,23.879"]
"jaceklaskowski/mastering-spark-sql-book" ["l"="11.215,24.052"]
"jaceklaskowski/spark-workshop" ["l"="11.25,24.042"]
"high-performance-spark/high-performance-spark-examples" ["l"="11.252,24.003"]
"ColZer/DigAndBuried" ["l"="11.395,23.899"]
"databricks/spark-sql-perf" ["l"="11.394,23.968"]
"LucaCanali/sparkMeasure" ["l"="11.319,24.014"]
"linkedin/dr-elephant" ["l"="11.39,23.946"]
"sryza/spark-timeseries" ["l"="11.151,24.043"]
"amplab/SparkNet" ["l"="11.191,24.056"]
"dirkneumann/deepdist" ["l"="11.106,24.078"]
"h2oai/sparkling-water" ["l"="11.165,24.15"]
"Microsoft/DMTK" ["l"="26.987,33.948"]
"fluxcapacitor/pipeline" ["l"="11.139,24.011"]
"jay-mahadeokar/pynetbuilder" ["l"="34.542,35.037"]
"adatao/tensorspark" ["l"="11.104,24.049"]
"baidu/Paddle" ["l"="27.045,33.93"]
"yahoo/open_nsfw" ["l"="33.575,30.447"]
"tensorflow/serving" ["l"="25.476,34.212"]
"apache/incubator-airflow" ["l"="13.525,23.942"]
"stitchfix/pyxley" ["l"="21.597,28.823"]
"spotify/luigi" ["l"="22.964,4.425"]
"caesar0301/awesome-public-datasets" ["l"="23.272,30.931"]
"tflearn/tflearn" ["l"="23.478,31.121"]
"autumnai/leaf" ["l"="-9.524,5.031"]
"timothycrosley/hug" ["l"="22.707,4.024"]
"google/cayley" ["l"="-12.701,1.925"]
"cantino/huginn" ["l"="10.308,-34.21"]
"firehol/netdata" ["l"="28.551,-19.448"]
"linkedin/parseq" ["l"="11.492,24.391"]
"linkedin/rest.li" ["l"="11.488,24.21"]
"linkedin/ambry" ["l"="11.53,24.157"]
"linkedin/PalDB" ["l"="8.961,21.606"]
"linkedin/helix" ["l"="11.48,24.654"]
"linkedin/databus" ["l"="9.678,21.404"]
"eBay/parallec" ["l"="11.31,22.572"]
"linkedin/URL-Detector" ["l"="11.484,24.515"]
"linkedin/JTune" ["l"="11.476,24.46"]
"reactor/reactor" ["l"="9.196,21.451"]
"linkedin/photon-ml" ["l"="22.936,37.343"]
"facebook/jcommon" ["l"="11.231,22.556"]
"linkedin/sensei" ["l"="11.476,24.75"]
"puniverse/quasar" ["l"="9.202,21.481"]
"jdeferred/jdeferred" ["l"="8.901,21.328"]
"shzlw/poli" ["l"="11.544,23.524"]
"TuiQiao/CBoard" ["l"="11.516,23.586"]
"ananas-analytics/ananas-desktop" ["l"="11.543,23.423"]
"ruisibi/rsbi-pom" ["l"="11.505,23.44"]
"thenaturalist/awesome-business-intelligence" ["l"="13.704,23.858"]
"xianrendzw/EasyReport" ["l"="10.111,21.374"]
"youseries/ureport" ["l"="10.061,21.367"]
"analysys/EasyScheduler" ["l"="11.556,23.718"]
"liaochong/myexcel" ["l"="9.97,21.364"]
"forbesmyester/esqlate" ["l"="-24.651,-20.648"]
"BriData/DBus" ["l"="11.563,23.687"]
"jtablesaw/tablesaw" ["l"="8.756,21.453"]
"edp963/wormhole" ["l"="11.539,23.743"]
"edp963/moonbox" ["l"="11.569,23.729"]
"WeBankFinTech/Scriptis" ["l"="11.595,23.694"]
"ucarGroup/DataLink" ["l"="11.609,23.691"]
"uavorg/uavstack" ["l"="11.609,23.718"]
"WeBankFinTech/Linkis" ["l"="11.573,23.656"]
"Flowerowl/Big-Data-Resources" ["l"="11.229,23.948"]
"proflin/CoolplaySpark" ["l"="11.334,23.999"]
"xpqiu/fnlp" ["l"="31.81,30.121"]
"Flowerowl/ici" ["l"="-39.086,-15.996"]
"Syndrome777/DeepLearningTutorial" ["l"="23.693,31.396"]
"Flowerowl/python_articles" ["l"="11.168,23.904"]
"ocelma/python-recsys" ["l"="22.947,37.185"]
"egrcc/guidetodatamining" ["l"="6.183,16.068"]
"ververica/flink-training-exercises" ["l"="11.706,23.787"]
"ververica/sql-training" ["l"="11.646,23.757"]
"streaming-with-flink/examples-scala" ["l"="11.753,23.775"]
"afedulov/fraud-detection-demo" ["l"="11.737,23.748"]
"cloudera/flink-tutorials" ["l"="11.786,23.771"]
"apache/flink-playgrounds" ["l"="11.727,23.778"]
"wuchong/awesome-flink" ["l"="11.621,23.836"]
"apache/flink-training" ["l"="11.714,23.757"]
"bethunebtj/flink_tutorial" ["l"="8.834,17.121"]
"wuchong/flink-sql-submit" ["l"="11.662,23.725"]
"dataArtisans/flink-benchmarks" ["l"="11.702,23.891"]
"ververica/stateful-functions" ["l"="11.668,23.845"]
"flink-china/flink-forward-china-2018" ["l"="11.604,23.789"]
"mbode/flink-prometheus-example" ["l"="11.794,23.803"]
"streaming-with-flink/examples-java" ["l"="11.77,23.784"]
"alibaba/flink-ai-extended" ["l"="11.638,23.79"]
"apache/iotdb" ["l"="11.482,23.711"]
"apache/hudi" ["l"="11.461,23.694"]
"apache/incubator-seatunnel" ["l"="11.504,23.628"]
"apache/ratis" ["l"="11.656,23.809"]
"thulab/iotdb-benchmark" ["l"="11.814,23.951"]
"jetlinks/jetlinks-community" ["l"="6.949,17.894"]
"apache/doris" ["l"="11.427,23.618"]
"ververica/flink-sql-cookbook" ["l"="11.666,23.762"]
"flink-extended/flink-remote-shuffle" ["l"="11.629,23.82"]
"apache/bahir" ["l"="11.417,24.066"]
"NLPchina/elasticsearch-sql" ["l"="9.801,21.617"]
"apache/phoenix" ["l"="11.347,23.807"]
"mongodb/mongo-hadoop" ["l"="11.276,23.893"]
"jprante/elasticsearch-jdbc" ["l"="9.782,21.593"]
"groupon/sparklint" ["l"="11.334,24.022"]
"linkedin/WhereHows" ["l"="13.858,23.867"]
"uber-common/jvm-profiler" ["l"="9.179,21.435"]
"yaooqinn/kyuubi" ["l"="11.48,23.856"]
"intel-hadoop/HiBench" ["l"="11.444,24.006"]
"Intel-bigdata/spark-adaptive" ["l"="11.433,23.927"]
"dataArtisans/flink-training-exercises" ["l"="11.703,23.851"]
"Apache-Flink-Docs-ZH/Apache-Flink-Docs-ZH-translation" ["l"="11.612,23.802"]
"harbby/sylph" ["l"="11.573,23.76"]
"wuchong/my-flink-project" ["l"="11.691,23.774"]
"flink-china/flink-china-doc" ["l"="11.624,23.767"]
"lw-lin/streaming-readings" ["l"="11.549,23.839"]
"leesf/hudi-resources" ["l"="11.627,23.711"]
"trinodb/trino" ["l"="11.374,23.653"]
"oldratlee/reactive-practice-at-taobao" ["l"="11.556,24.244"]
"zhihuili/Dew" ["l"="11.549,24.181"]
"itisaid/Doris" ["l"="11.555,24.211"]
"oldratlee/software-practice-thoughts" ["l"="11.565,24.331"]
"apache/geode" ["l"="11.407,23.775"]
"apache/geode-examples" ["l"="11.335,23.748"]
"SnappyDataInc/snappydata" ["l"="11.48,24.001"]
"hazelcast/hazelcast" ["l"="9.258,21.545"]
"atomix/atomix" ["l"="9.127,21.479"]
"apache/kudu" ["l"="11.383,23.805"]
"OpenHFT/Chronicle-Map" ["l"="8.923,21.491"]
"apache/curator" ["l"="9.579,21.408"]
"apache/geode-native" ["l"="11.35,23.758"]
"scylladb/scylla" ["l"="-12.127,22.347"]
"kshvakov/clickhouse" ["l"="-13.545,-4.273"]
"yandex/clickhouse-jdbc" ["l"="-13.555,-4.231"]
"facebook/rocksdb" ["l"="-12.095,22.379"]
"cockroachdb/cockroach" ["l"="-10.393,-0.588"]
"catboost/catboost" ["l"="25.477,33.803"]
"tabixio/tabix" ["l"="-13.578,-4.221"]
"tarantool/tarantool" ["l"="-13.87,21.92"]
"GoogleTrends/data" ["l"="23.336,31.14"]
"GSA/data" ["l"="23.301,31.197"]
"AlexIoannides/pyspark-example-project" ["l"="10.99,24.065"]
"mahmoudparsian/pyspark-tutorial" ["l"="10.949,24.048"]
"spark-examples/pyspark-examples" ["l"="10.945,24.08"]
"ekampf/PySpark-Boilerplate" ["l"="11.034,24.083"]
"damklis/DataEngineeringProject" ["l"="13.399,23.911"]
"san089/goodreads_etl_pipeline" ["l"="13.391,23.871"]
"MrPowers/quinn" ["l"="11.1,24.102"]
"UrbanInstitute/pyspark-tutorials" ["l"="10.93,24.056"]
"san089/Udacity-Data-Engineering-Projects" ["l"="13.379,23.883"]
"palantir/pyspark-style-guide" ["l"="11.021,24.104"]
"adilkhash/Data-Engineering-HowTo" ["l"="13.414,23.878"]
"tirthajyoti/Spark-with-Python" ["l"="10.912,24.049"]
"cartershanklin/pyspark-cheatsheet" ["l"="10.939,24.109"]
"gtoonstra/etl-with-airflow" ["l"="13.589,23.883"]
"h2oai/driverlessai-recipes" ["l"="11.125,24.374"]
"h2oai/tutorials" ["l"="11.104,24.388"]
"h2oai/awesome-h2o" ["l"="11.122,24.348"]
"lensacom/sparkit-learn" ["l"="11.015,24.058"]
"PacktPublishing/Learning-PySpark" ["l"="10.914,24.03"]
"drabastomek/learningPySpark" ["l"="10.947,24.021"]
"XD-DENG/Spark-practice" ["l"="10.932,24.036"]
"jkthompson/pyspark-pictures" ["l"="10.89,24.033"]
"awantik/pyspark-tutorial" ["l"="10.892,24.012"]
"MingChen0919/learning-apache-spark" ["l"="10.898,24.06"]
"mahmoudparsian/data-algorithms-with-spark" ["l"="10.989,24.033"]
"20100507/emotional_analysis" ["l"="11.777,23.563"]
"pengLP/sina_analysis" ["l"="15.435,5.469"]
"luochana/News_recommend" ["l"="21.716,36.641"]
"virgoC0der/SentimentAnalysisOfProductReview" ["l"="15.379,5.356"]
"yangtong123/StudySpark" ["l"="11.722,23.602"]
"wankunde/logcount" ["l"="11.762,23.622"]
"Zephery/weiboanalysis" ["l"="15.391,5.414"]
"ljcan/SparkStreaming" ["l"="11.716,23.586"]
"liguozhong/demo_11.11_storm-spark-hadoop" ["l"="11.797,23.548"]
"LeechanX/Netflix-Recommender-with-Spark" ["l"="21.707,36.576"]
"whirlys/BigData-In-Practice" ["l"="11.734,23.531"]
"LuckyZXL2016/Movie_Recommend" ["l"="21.754,36.69"]
"prestosql/presto" ["l"="11.485,23.893"]
"Alluxio/alluxio" ["l"="11.312,23.677"]
"fayson/cdhproject" ["l"="11.501,23.74"]
"scxwhite/hera" ["l"="11.583,23.714"]
"hortonworks/hive-testbench" ["l"="11.433,23.939"]
"fayson/cdh-autouninstall" ["l"="11.449,23.617"]
"apachecn/spark-doc-zh" ["l"="11.512,23.758"]
"CHINA-JD/presto" ["l"="11.576,23.957"]
"analysys/presto-hbase-connector" ["l"="11.581,23.889"]
"wyukawa/yanagishima" ["l"="11.72,24.005"]
"MTDATA/presto" ["l"="11.628,24.008"]
"michael8335/zeus2" ["l"="10.866,26.498"]
"airlift/slice" ["l"="8.945,21.57"]
"summerDG/spark-code-analysis" ["l"="11.44,23.908"]
"neoremind/kraps-rpc" ["l"="11.461,23.897"]
"cjuexuan/mynote" ["l"="11.513,23.824"]
"Intel-bigdata/OAP" ["l"="11.466,23.955"]
"ihainan/SparkInternals" ["l"="11.362,23.904"]
"hustnn/TungstenSecret" ["l"="11.355,23.917"]
"qlangtech/tis" ["l"="11.623,23.618"]
"DTStack/Taier" ["l"="22.151,27.339"]
"DTStack/chunjun" ["l"="11.58,23.624"]
"cerndb/spark-dashboard" ["l"="11.355,24.088"]
"banzaicloud/spark-metrics" ["l"="11.342,24.078"]
"uber/RemoteShuffleService" ["l"="11.457,23.945"]
"LucaCanali/Miscellaneous" ["l"="11.37,24.039"]
"datamechanics/delight" ["l"="11.346,24.042"]
"groupon/spark-metrics" ["l"="11.326,24.064"]
"oeljeklaus-you/JavaOrBigData-Interview" ["l"="11.763,23.523"]
"pyfrm/review-pamphlet" ["l"="11.779,23.492"]
"yoghurtjia/-python-BAT-" ["l"="11.797,23.488"]
"vbay/big-data" ["l"="11.778,23.517"]
"appleappleapple/BigDataLearning" ["l"="11.795,23.513"]
"houshanren/big_data_architect_skills" ["l"="11.708,23.551"]
"TALKDATA/JavaBigData" ["l"="11.722,23.506"]
"opensourceteams/spark-scala-maven-2.4.0" ["l"="11.753,23.676"]
"Tencent/Firestorm" ["l"="11.513,23.904"]
"alibaba/RemoteShuffleService" ["l"="11.516,23.886"]
"apache/incubator-uniffle" ["l"="11.559,23.849"]
"oap-project/gluten" ["l"="11.508,23.879"]
"bytedance/CloudShuffleService" ["l"="11.575,23.84"]
"blaze-init/blaze" ["l"="11.516,23.948"]
"NetEase/arctic" ["l"="11.568,23.795"]
"oap-project/gazelle_plugin" ["l"="11.494,23.944"]
"maropu/spark-sql-flow-plugin" ["l"="11.335,24.105"]
"SaurabhChawla100/spark-radiant" ["l"="11.343,24.094"]
"xskipper-io/xskipper" ["l"="11.365,24.055"]
"linkedin/transport" ["l"="11.482,23.953"]
"delta-io/delta-sharing" ["l"="11.155,24.113"]
"jupyter-incubator/sparkmagic" ["l"="11.211,23.998"]
"apache/incubator-toree" ["l"="11.227,24.082"]
"apache/incubator-livy" ["l"="11.378,23.916"]
"awslabs/deequ" ["l"="13.79,23.766"]
"dropbox/PyHive" ["l"="11.35,23.939"]
"graphframes/graphframes" ["l"="11.176,24.039"]
"steveloughran/winutils" ["l"="11.367,23.707"]
"cdarlint/winutils" ["l"="11.442,23.644"]
"srccodes/hadoop-common-2.2.0-bin" ["l"="11.26,23.588"]
"winghc/hadoop2x-eclipse-plugin" ["l"="11.255,23.694"]
"thieman/dagobah" ["l"="11.703,24.287"]
"binarydud/pyres" ["l"="22.334,3.946"]
"pinterest/pinball" ["l"="11.611,24.22"]
"thieman/py-dag" ["l"="11.754,24.318"]
"yuqi1129/schema" ["l"="11.757,23.751"]
"yuqi1129/calcite-test" ["l"="11.692,23.753"]
"qiushangwenyue/Interview_BigData" ["l"="11.769,23.601"]
"pengshuangbao/review-pamphlet" ["l"="11.83,23.601"]
"apache/sqoop" ["l"="11.306,23.785"]
"apache/impala" ["l"="11.375,23.822"]
"apache/hcatalog" ["l"="11.204,23.792"]
"yahoo/oozie" ["l"="10.516,26.529"]
"arverma007/DataEngineering" ["l"="10.902,24.122"]
"sankamuk/PysparkCheatsheet" ["l"="10.908,24.133"]
"maxpumperla/hyperas" ["l"="25.623,33.787"]
"matthiasplappert/keras-rl" ["l"="24.894,35.902"]
"farizrahman4u/seq2seq" ["l"="31.273,31.598"]
"EderSantana/seya" ["l"="31.11,31.571"]
"NervanaSystems/neon" ["l"="27.093,34.021"]
"spark-examples/spark-scala-examples" ["l"="10.884,24.091"]
"kevinschaich/pyspark-cheatsheet" ["l"="10.923,24.095"]
"LearningJournal/Spark-Programming-In-Python" ["l"="10.779,24.049"]
"databricks/LearningSparkV2" ["l"="11.08,24.034"]
"apache/hadoop-hdfs" ["l"="11.18,23.775"]
"apache/hadoop-mapreduce" ["l"="11.156,23.769"]
"cloudera/sqoop" ["l"="10.487,26.625"]
"omnisci/omniscidb" ["l"="11.638,23.95"]
"BlazingDB/blazingsql" ["l"="25.216,33.942"]
"omnisci/mapd-charting" ["l"="11.774,23.997"]
"heterodb/pg-strom" ["l"="-9.324,-4.806"]
"uber/aresdb" ["l"="11.611,23.932"]
"TileDB-Inc/TileDB" ["l"="19.088,28.216"]
"facebookincubator/velox" ["l"="-10.894,5.252"]
"cwida/duckdb" ["l"="-10.856,5.167"]
"uwdata/falcon" ["l"="16.602,-31.98"]
"TimoKersten/db-engine-paradigms" ["l"="-10.904,5.055"]
"omnisci/pymapd" ["l"="11.758,23.989"]
"cylondata/cylon" ["l"="11.712,23.975"]
"cmu-db/noisepage" ["l"="-10.981,5.094"]
"BlazingDB/pyBlazing" ["l"="11.534,23.894"]
"ZakiaSalod/The-Hundred-Page-Machine-Learning-Book" ["l"="10.646,23.722"]
"SayantanMitra87/Data-Science-Books-1" ["l"="10.664,23.711"]
"ontiyonke/Free-Deep-Learning-Books" ["l"="10.689,23.732"]
"apache/druid" ["l"="11.357,23.681"]
"apache/pinot" ["l"="11.401,23.713"]
"apache/incubator-kyuubi" ["l"="11.545,23.784"]
"TurboWay/bigdata_analyse" ["l"="11.654,23.443"]
"geekyouth/SZT-bigdata" ["l"="11.65,23.551"]
"hi-weijun/PythonDataScience-Collections" ["l"="24.304,31.236"]
"justinzm/gopup" ["l"="15.75,5.713"]
"TurboWay/big_screen" ["l"="9.632,-11.606"]
"hustcc/PyG2Plot" ["l"="-10.182,-46.722"]
"dunwu/db-tutorial" ["l"="6.845,17.397"]
"yqchilde/JDMemberCloseAccount" ["l"="-36.336,-13.525"]
"ben1234560/AiLearning-Theory-Applying" ["l"="-25.757,19.223"]
"dataabc/weiboSpider" ["l"="15.728,5.596"]
"jackzhenguo/python-small-examples" ["l"="15.748,5.86"]
"aimuch/iAI" ["l"="27.425,29.947"]
"linkedin/kafka-monitor" ["l"="10.247,22.486"]
"didi/kafka-manager" ["l"="11.476,23.617"]
"NaNShaner/repoll" ["l"="11.48,23.426"]
"ngbdf/redis-manager" ["l"="-12.879,3.232"]
"smartloli/EFAK" ["l"="11.547,23.557"]
"linkedin/cruise-control" ["l"="10.232,22.455"]
"wanghan0501/WiFiProbeAnalysis" ["l"="11.782,23.535"]
"hepingood/mpu9250" ["l"="22.004,27.615"]
"njustkmg/PaddleMM" ["l"="22.003,27.542"]
"galaxyzxcv/tokencore" ["l"="22.011,27.582"]
"TinyDataML/Tiny3D" ["l"="21.985,27.448"]
"FiboAI/EngineX" ["l"="22.008,27.509"]
"FxPool/FxMinerProxyV3" ["l"="22.02,27.434"]
"chengshiwen/influxdb-cluster" ["l"="22.023,27.536"]
"ntt360/pmon2" ["l"="22.023,27.481"]
"longguikeji/arkid" ["l"="22.025,27.369"]
"minerproxyeth/minerproxy" ["l"="22.06,27.569"]
"WAMAWAMA/wama_modules" ["l"="21.972,27.548"]
"HummerRisk/HummerRisk" ["l"="22.048,27.35"]
"CyrilFeng/Q-calculator" ["l"="22.044,27.38"]
"alibaba/zeus" ["l"="9.622,21.117"]
"cloudera/cdh-twitter-example" ["l"="10.692,26.611"]
"bsspirit/maven_hadoop_template" ["l"="11.193,23.567"]
"xianglei/easyhadoop" ["l"="10.923,26.56"]
"bsspirit/maven_mahout_template" ["l"="11.212,23.58"]
"spring-projects/spring-hadoop" ["l"="9.489,20.997"]
"Huawei-Hadoop/hindex" ["l"="10.69,26.479"]
"fangyuzhong2016/HadoopIntellijPlugin" ["l"="11.427,23.74"]
"amplab/spark-ec2" ["l"="11.221,24.176"]
"nchammas/flintrock" ["l"="11.205,24.137"]
"databricks/spark-perf" ["l"="11.299,24.054"]
"rxin/db-readings" ["l"="-11.013,4.904"]
"onurakpolat/awesome-bigdata" ["l"="23.209,30.906"]
"HotelsDotCom/styx" ["l"="11.688,24.677"]
"HotelsDotCom/heat" ["l"="11.682,24.703"]
"HotelsDotCom/bull" ["l"="11.658,24.605"]
"ExpediaGroup/secrets-injector" ["l"="11.704,24.69"]
"ExpediaDotCom/haystack" ["l"="11.762,24.844"]
"JoeyBling/webkettle" ["l"="11.877,23.62"]
"ziliang001/etl-kettle-web" ["l"="11.882,23.596"]
"zhaxiaodong9860/kettle-scheduler" ["l"="11.862,23.609"]
"xuanbo/kettle-web" ["l"="11.892,23.613"]
"majinju/kettle-manager" ["l"="11.916,23.613"]
"classtag/OpenKettleWebUI" ["l"="11.904,23.583"]
"HiromuHota/pentaho-kettle" ["l"="11.897,23.633"]
"xiaoymin/KettleInAction100" ["l"="11.91,23.596"]
"young-datafan/data-integration" ["l"="-27.344,19.437"]
"zhaodongxx/awesome-kettle" ["l"="11.924,23.586"]
"zllkyo/kettle-manager" ["l"="11.917,23.628"]
"zhaoyachao/zdh_web" ["l"="11.727,23.62"]
"huzekang/springboot-datax" ["l"="11.912,23.687"]
"konglinghai123/renren_kettle" ["l"="11.925,23.601"]
"haochenchn/kettle-springboot" ["l"="11.898,23.596"]
"IBM/spark-tpc-ds-performance-test" ["l"="11.394,23.983"]
"databricks/tpcds-kit" ["l"="11.363,23.979"]
"maropu/spark-tpcds-datagen" ["l"="11.353,23.978"]
"gregrahn/tpcds-kit" ["l"="11.343,23.957"]
"CODAIT/spark-bench" ["l"="11.363,23.965"]
"ssavvides/tpch-spark" ["l"="11.393,24.021"]
"cloudera/impala-tpcds-kit" ["l"="11.379,23.976"]
"druid-io/tranquility" ["l"="11.617,24.094"]
"airbnb/superset" ["l"="25.265,33.68"]
"alibaba/jstorm" ["l"="9.643,21.245"]
"OpenTSDB/opentsdb" ["l"="11.492,23.926"]
"alibaba/RocketMQ" ["l"="9.667,21.232"]
"BradRuderman/pyhs2" ["l"="11.314,23.939"]
"cloudera/impyla" ["l"="11.302,23.92"]
"bytedance/byteps" ["l"="22.578,37.111"]
"linkedin/TonY" ["l"="22.985,37.336"]
"Qihoo360/tensornet" ["l"="22.617,37.069"]
"Angel-ML/angel" ["l"="22.63,37.144"]
"Qihoo360/Lipland" ["l"="11.027,23.785"]
"apache/carbondata" ["l"="11.425,23.808"]
"prestodb/presto-python-client" ["l"="11.271,23.934"]
"dpkp/kafka-python" ["l"="22.606,3.673"]
"spotify/snakebite" ["l"="11.303,23.998"]
"yanagishima/yanagishima" ["l"="11.553,23.882"]
"zapr-oss/druidry" ["l"="11.699,24.172"]
"implydata/druid-client" ["l"="11.732,24.21"]
"implydata/plyql" ["l"="11.647,24.137"]
"cloudera/ibis" ["l"="21.634,28.843"]
"cloudera/kudu" ["l"="11.406,23.957"]
"wbolster/happybase" ["l"="10.664,26.469"]
"laserson/impyla" ["l"="11.246,23.906"]
"mtth/hdfs" ["l"="11.06,23.965"]
"apache/incubator-carbondata" ["l"="11.435,24.075"]
"apache/incubator-geode" ["l"="11.444,24.149"]
"sameeragarwal/blinkdb" ["l"="10.427,26.511"]
"SparklineData/spark-druid-olap" ["l"="11.595,24.099"]
"tuplejump/FiloDB" ["l"="11.351,24.13"]
"SnappyDataInc/snappy-store" ["l"="11.476,24.113"]
"facebook/presto" ["l"="10.446,26.407"]
"EverythingMe/redash" ["l"="11.53,24.274"]
"pinterest/secor" ["l"="10.267,22.481"]
"mistercrunch/panoramix" ["l"="11.615,24.169"]
"confluentinc/bottledwater-pg" ["l"="-9.033,-4.752"]
"airbnb/anotherlens" ["l"="11.723,24.408"]
"airbnb/airbnb-spark-thrift" ["l"="11.695,24.397"]
"dremio/dremio-oss" ["l"="11.441,23.791"]
"twitter/finagle" ["l"="9.938,24.685"]
"Netflix/archaius" ["l"="11.065,22.617"]
"twitter/ambrose" ["l"="10.434,26.431"]
"voldemort/voldemort" ["l"="10.357,26.473"]
"typesafehub/config" ["l"="9.825,24.699"]
"linkedin/camus" ["l"="11.474,24.056"]
"Netflix/RxJava" ["l"="9.067,21.571"]
"dropwizard/dropwizard" ["l"="9.321,21.561"]
"will-che/flink-recommandSystem-demo" ["l"="11.635,23.562"]
"collabH/bigdata-growth" ["l"="11.655,23.582"]
"will-che/BigData-Interview" ["l"="11.647,23.498"]
"ittqqzz/ECommerceRecommendSystem" ["l"="21.727,36.658"]
"qu-way/flink-commodity-recommendation-system" ["l"="21.687,36.665"]
"MoRan1607/BigDataGuide" ["l"="11.676,23.503"]
"apache/incubator-streampark" ["l"="11.537,23.649"]
"threeknowbigdata/flink_second_understand" ["l"="11.652,23.634"]
"will-che/flink-simple-tutorial" ["l"="11.633,23.51"]
"simbafl/DataWarehouse" ["l"="11.699,23.568"]
"nathanmarz/storm" ["l"="10.423,26.372"]
"apache/mesos" ["l"="-12.17,-5.985"]
"didi/LogiKM" ["l"="11.492,23.551"]
"didi/LogiEM" ["l"="11.381,23.467"]
"pingfangushi/screw" ["l"="6.97,17.913"]
"didi/LogiAM" ["l"="11.413,23.471"]
"alibaba/SREWorks" ["l"="-9.356,2.352"]
"timescaledb/timescaledb" ["l"="12.098,24.165"]
"timescale/docs.timescale.com-content" ["l"="12.087,24.142"]
"iobeam/iobeam-client-java" ["l"="12.124,24.17"]
"timescale/pg_prometheus" ["l"="12.116,24.155"]
"iobeam/iobeam" ["l"="12.131,24.166"]
"iobeam/sample-android-wifi-rssi" ["l"="12.128,24.177"]
"transceptor-technology/siridb-server" ["l"="12.107,24.25"]
"transceptor-technology/aiogcd" ["l"="12.158,24.272"]
"thingsdb/ThingsDB" ["l"="12.179,24.266"]
"Observe-secretly/HbaseGUI" ["l"="11.96,23.525"]
"bit-ware/HBaseXplorer" ["l"="12.044,23.499"]
"HY-ZhengWei/HBaseClient" ["l"="12.034,23.465"]
"apachecn/hbase-doc-zh" ["l"="11.722,23.655"]
"zeeshanabid94/presto" ["l"="11.629,23.912"]
"harbby/presto-connectors" ["l"="11.643,23.916"]
"TianLangStudio/DataXServer" ["l"="11.862,23.74"]
"nerdammer/spark-hbase-connector" ["l"="11.417,23.97"]
"cloudera-labs/SparkOnHBase" ["l"="11.39,24.006"]
"unicredit/hbase-rdd" ["l"="11.379,23.993"]
"allwefantasy/spark-binlog" ["l"="11.505,23.845"]
"NGDATA/hbase-indexer" ["l"="10.696,26.515"]
"teeyog/IQL" ["l"="11.547,23.76"]
"lyft/presto-gateway" ["l"="11.559,23.944"]
"treasure-data/prestogres" ["l"="11.659,23.971"]
"yaooqinn/spark-authorizer" ["l"="11.493,23.871"]
"WeBankFinTech/Qualitis" ["l"="11.591,23.675"]
"line/decaton" ["l"="-11.932,-4.884"]
"wix/quix" ["l"="8.568,25.734"]
"confluentinc/schema-registry" ["l"="10.151,22.5"]
"apache/thrift" ["l"="-12.108,22.454"]
"apache/parquet-format" ["l"="11.374,23.839"]
"jacksu/utils4s" ["l"="11.409,23.839"]
"xubo245/SparkLearning" ["l"="11.457,23.828"]
"spirom/LearningSpark" ["l"="11.319,23.955"]
"Centaur/repox" ["l"="9.118,19.909"]
"datageartech/datagear" ["l"="11.585,23.607"]
"running-elephant/datart" ["l"="11.561,23.62"]
"ddiu8081/ChartFun" ["l"="9.659,-11.675"]
"jeecgboot/JimuReport" ["l"="7.009,17.812"]
"freakchick/DBApi" ["l"="21.993,27.677"]
"datafuselabs/databend" ["l"="-10.908,5.356"]
"pingcap/tiflash" ["l"="-10.982,5.15"]
"ClickHouse/ClickHouse" ["l"="-10.399,-0.748"]
"allegro/turnilo" ["l"="11.72,24.158"]
"yahoo/swiv" ["l"="11.683,24.157"]
"implydata/plywood" ["l"="11.656,24.153"]
"implydata/pivot" ["l"="11.627,24.148"]
"druid-io/pydruid" ["l"="11.663,24.115"]
"allegro/vaas" ["l"="5.451,22.911"]
"allegro/hermes" ["l"="5.429,22.936"]
"allegro/envoy-control" ["l"="5.417,22.912"]
"druid-io/druid-operator" ["l"="11.778,24.055"]
"geo-opensource/pivot" ["l"="11.771,24.199"]
"divolte/divolte-collector" ["l"="11.793,24.23"]
"allegro/biggerquery" ["l"="11.75,24.182"]
"wikimedia/operations-software-druid_exporter" ["l"="11.753,24.2"]
"allegro/node-worker-nodes" ["l"="5.466,22.878"]
"datahub-project/datahub" ["l"="13.774,23.789"]
"projectnessie/nessie" ["l"="11.49,23.823"]
"dremio/gandiva" ["l"="11.555,23.907"]
"substrait-io/substrait" ["l"="-10.773,5.353"]
"dremio/arrow" ["l"="11.444,23.757"]
"dremio/dremio-cloud-tools" ["l"="11.374,23.622"]
"apache/arrow" ["l"="-10.729,5.305"]
"apache/incubator-iceberg" ["l"="11.444,23.891"]
"duckdb/duckdb" ["l"="-10.858,5.333"]
"airbytehq/airbyte" ["l"="13.667,23.729"]
"apache/arrow-datafusion" ["l"="-10.821,5.388"]
"linkedtales/scrapedin" ["l"="11.438,25.616"]
"linkedtales/scrapedin-linkedin-crawler" ["l"="11.461,25.612"]
"jvandenaardweg/linkedin-profile-scraper" ["l"="11.437,25.601"]
"joeyism/linkedin_scraper" ["l"="11.457,25.573"]
"eracle/linkedin" ["l"="11.426,25.589"]
"austinoboyle/scrape-linkedin-selenium" ["l"="11.453,25.594"]
"fabriziomiano/linkedin-scraper" ["l"="11.477,25.596"]
"FutoRicky/linkedin-email-extractor" ["l"="11.466,25.648"]
"spinlud/linkedin-jobs-scraper" ["l"="11.389,25.669"]
"federicohaag/LinkedInScraping" ["l"="11.418,25.607"]
"tomquirk/linkedin-api" ["l"="11.426,25.563"]
"Zouxxyy/bigdata-learning" ["l"="11.77,23.459"]
"asdud/Bigdata_project" ["l"="11.759,23.508"]
"397090770/spark-summit-north-america-2018-06" ["l"="11.781,23.964"]
"397090770/spark-summit-2017-SanFrancisco" ["l"="11.741,23.949"]
"397090770/spark-summit-2017-Europe" ["l"="11.798,23.972"]
"ooyala/spark-jobserver" ["l"="11.274,24.142"]
"OryxProject/oryx" ["l"="10.534,26.28"]
"radishT/Job_Analysis" ["l"="15.893,5.132"]
"openlookeng/hetu-core" ["l"="11.533,23.771"]
"linkedin/coral" ["l"="11.474,23.911"]
"bytedance/bitsail" ["l"="11.548,23.681"]
"cubefs/compass" ["l"="11.568,23.781"]
"Qihoo360/XSQL" ["l"="11.541,23.73"]
"databricks/spark-training" ["l"="11.164,23.992"]
"amplab/training" ["l"="11.017,23.944"]
"databricks/spark-corenlp" ["l"="11.132,24.069"]
"JerryLead/SparkLearning" ["l"="11.262,23.911"]
"apachecn/flink-doc-zh" ["l"="11.654,23.689"]
"springMoon/sqlSubmit" ["l"="11.712,23.666"]
"shengjk/flinksql-platform" ["l"="11.763,23.66"]
"springMoon/flink-rookie" ["l"="11.799,23.66"]
"juicedata/juicefs" ["l"="-10.296,-0.639"]
"alibaba/rsqldb" ["l"="11.933,23.785"]
"apache/rocketmq-streams" ["l"="11.933,23.77"]
"apache/rocketmq-schema-registry" ["l"="11.944,23.775"]
"amplab/succinct" ["l"="11.183,24.172"]
"amplab/spark-indexedrdd" ["l"="11.193,24.119"]
"amplab/keystone" ["l"="11.227,24.137"]
"quxiucheng/apache-calcite-tutorial" ["l"="11.623,23.748"]
"apache/gobblin" ["l"="11.415,23.938"]
"apache/incubator-gobblin" ["l"="11.48,23.841"]
"apache/incubator-druid" ["l"="11.472,23.789"]
"apache/rocketmq-mqtt" ["l"="11.959,23.782"]
"apache/rocketmq-connect" ["l"="11.917,23.77"]
"apache/rocketmq-flink" ["l"="11.968,23.762"]
"openmessaging/openchaos" ["l"="11.945,23.798"]
"apache/rocketmq-clients" ["l"="11.976,23.779"]
"openmessaging/dledger" ["l"="11.864,23.778"]
"apache/rocketmq-eventbridge" ["l"="11.889,23.754"]
"eventql/eventql" ["l"="11.758,24.127"]
"shunfei/indexr" ["l"="11.528,24.064"]
"SoftwareDefinedBuildings/btrdb" ["l"="11.866,24.155"]
"traildb/traildb" ["l"="11.928,24.219"]
"mapd/mapd-core" ["l"="11.667,24.041"]
"facebookincubator/beringei" ["l"="11.654,24.08"]
"andygrove/datafusion-rs" ["l"="-9.372,5.445"]
"cruppstahl/upscaledb" ["l"="9.916,-30.483"]
"mapd/mapd-charting" ["l"="11.767,24.083"]
"mapd/mapd-connector" ["l"="11.821,24.099"]
"mapd/mapd-crossfilter" ["l"="11.805,24.1"]
"mapd/mapd-tweetmap-2" ["l"="11.803,24.084"]
"xinghalo/Teddy" ["l"="11.69,23.716"]
"qindongliang/streaming-offset-to-zk" ["l"="11.592,23.752"]
"xiaokugua250/DataMingProject" ["l"="11.86,23.55"]
"twitter/distributedlog" ["l"="11.556,24.116"]
"twitter/summingbird" ["l"="10.479,26.399"]
"amplab/tachyon" ["l"="10.475,26.443"]
"yahoo/pulsar" ["l"="9.578,21.142"]
"twitter/scalding" ["l"="9.858,24.687"]
"SPLWare/esProc" ["l"="11.497,23.606"]
"alibaba/compileflow" ["l"="9.899,21.185"]
"meshplus/pier" ["l"="11.501,23.277"]
"hyperchain/hyperchain" ["l"="11.52,23.283"]
"meshplus/hyperbench" ["l"="11.537,23.281"]
"meshplus/pier-client-fabric" ["l"="11.496,23.293"]
"hyperchain/javasdk" ["l"="11.532,23.264"]
"meshplus/goduck" ["l"="11.489,23.281"]
"hyperbench/hyperbench" ["l"="11.544,23.293"]
"WeBankBlockchain/WeCross" ["l"="11.509,23.257"]
"WeBankFinTech/WeCross" ["l"="44.159,-26.05"]
"meshplus/bitxhub-core" ["l"="11.509,23.297"]
"jonluo94/baasmanager" ["l"="44.826,-24.555"]
"go-chassis/go-chassis" ["l"="0.402,19.172"]
"GoogleCloudPlatform/flink-on-k8s-operator" ["l"="11.72,23.841"]
"lyft/flinkk8soperator" ["l"="11.727,23.824"]
"apache/flink-kubernetes-operator" ["l"="11.674,23.825"]
"apache/flink-docker" ["l"="11.699,23.809"]
"GoogleCloudPlatform/spark-on-k8s-operator" ["l"="-9.463,2.732"]
"spotify/flink-on-k8s-operator" ["l"="11.726,23.866"]
"wangyang0918/flink-native-k8s-operator" ["l"="11.735,23.852"]
"volcano-sh/volcano" ["l"="-9.433,2.686"]
"streamnative/pulsar-flink" ["l"="11.864,23.818"]
"apache/flink-benchmarks" ["l"="11.678,23.809"]
"uber/marmaray" ["l"="11.419,23.906"]
"uber/hudi" ["l"="11.452,23.932"]
"uber/storagetapper" ["l"="11.283,23.92"]
"YotpoLtd/metorikku" ["l"="11.311,24.026"]
"MrPowers/chispa" ["l"="11.068,24.133"]
"awslabs/python-deequ" ["l"="13.769,23.729"]
"databrickslabs/dbx" ["l"="11.031,24.169"]
"MrPowers/mack" ["l"="11.027,24.148"]
"MrPowers/spark-style-guide" ["l"="11.129,24.108"]
"abhishek-ch/around-dataengineering" ["l"="13.414,23.9"]
"OpenLineage/OpenLineage" ["l"="13.811,23.75"]
"luxiaoxun/eagle" ["l"="11.732,23.666"]
"WeBankFinTech/WeDataSphere" ["l"="11.609,23.66"]
"WeBankFinTech/Exchangis" ["l"="11.624,23.671"]
"wuchong/flink-sql-demo" ["l"="11.719,23.711"]
"fhueske/flink-sql-demo" ["l"="11.684,23.742"]
"leonardBang/flink-sql-etl" ["l"="11.738,23.704"]
"sunjincheng121/know_how_know_why" ["l"="11.674,23.729"]
"pyflink/playgrounds" ["l"="11.967,23.664"]
"mlflow/mlflow" ["l"="25.373,34.026"]
"linkedin/datahub" ["l"="13.837,23.784"]
"delta-io/connectors" ["l"="11.16,24.087"]
"apache/ranger" ["l"="11.427,23.83"]
"yahoo/streaming-benchmarks" ["l"="11.498,23.961"]
"intel-hadoop/HiTune" ["l"="11.651,23.86"]
"SparkTC/spark-bench" ["l"="11.354,24.064"]
"intel-hadoop/Big-Data-Benchmark-for-Big-Bench" ["l"="11.468,24.128"]
"amplab/benchmark" ["l"="11.514,24.083"]
"kayousterhout/trace-analysis" ["l"="11.385,24.075"]
"amplab/shark" ["l"="10.482,26.466"]
"taireum/go-taireum" ["l"="11.544,24.322"]
"intel-hadoop/project-panthera-ase" ["l"="11.575,24.208"]
"Intel-bigdata/HiBench" ["l"="11.508,23.981"]
"HamaWhiteGG/flink-sql-lineage" ["l"="11.611,23.752"]
"apache/flink-ml" ["l"="11.69,23.828"]
"nexmark/nexmark" ["l"="11.651,23.83"]
"flink-extended/flink-dynamic-storage" ["l"="11.7,23.818"]
"DataLinkDC/dinky" ["l"="11.595,23.639"]
"apache/linkis" ["l"="11.617,23.637"]
"apache/kyuubi" ["l"="11.584,23.736"]
"king/bravo" ["l"="11.741,23.872"]
"dataArtisans/da-streamingledger" ["l"="11.719,23.889"]
"apache/flink-web" ["l"="11.684,23.817"]
"ottogroup/flink-spector" ["l"="11.694,23.874"]
"crate/crate" ["l"="11.466,23.872"]
"VoltDB/voltdb" ["l"="-10.928,4.996"]
"kairosdb/kairosdb" ["l"="11.687,24.094"]
"orientechnologies/orientdb" ["l"="29.262,30.124"]
"DmitryKey/luke" ["l"="11.077,23.53"]
"tarzanek/luke" ["l"="11.04,23.482"]
"wks/ik-analyzer" ["l"="31.718,30.211"]
"javasoze/clue" ["l"="11.011,23.487"]
"spring-projects/spring-data-elasticsearch" ["l"="9.602,21.336"]
"searchbox-io/Jest" ["l"="9.756,21.562"]
"LuXugang/Lucene-7.5.0" ["l"="11.169,23.493"]
"medcl/elasticsearch-analysis-pinyin" ["l"="9.869,21.711"]
"chewiebug/GCViewer" ["l"="9.321,21.399"]
"lionsoul2014/jcseg" ["l"="31.75,30.221"]
"apache/tika" ["l"="11.098,23.588"]
"elastic/rally" ["l"="-7.081,2.328"]
"didi/KnowStreaming" ["l"="11.504,23.525"]
"dromara/dynamic-tp" ["l"="10.033,21.221"]
"PowerJob/PowerJob" ["l"="9.98,21.237"]
"ZhongFuCheng3y/austin" ["l"="6.955,17.803"]
"Tencent/spring-cloud-tencent" ["l"="9.994,21.22"]
"opensearch-project/OpenSearch" ["l"="-7.407,3.606"]
"alibaba/havenask" ["l"="22.524,37.065"]
"mikemccand/luceneutil" ["l"="11.141,23.521"]
"zzboy/lucene" ["l"="11.128,23.49"]
"redis/jedis" ["l"="9.658,21.43"]
"apache/incubator-superset" ["l"="32.734,-26.083"]
"apache/incubator-shardingsphere" ["l"="9.885,21.302"]
"influxdata/influxdb-comparisons" ["l"="12.102,24.106"]
"influxdata/influx-stress" ["l"="12.133,24.093"]
"timescale/tsbs" ["l"="12.025,24.12"]
"influxdata/inch" ["l"="12.155,24.106"]
"caict-benchmark/BDC-TS" ["l"="12.131,24.113"]
"Qihoo360/influx-proxy" ["l"="22.195,27.753"]
"gpuopenanalytics/pygdf" ["l"="11.79,24.121"]
"antonmks/Alenka" ["l"="28.076,35.469"]
"cmu-db/peloton" ["l"="-10.977,5.002"]
"weld-project/weld" ["l"="-10.775,5.271"]
"pilosa/pilosa" ["l"="-12.912,1.731"]
"mapd/pymapd" ["l"="11.741,24.083"]
"pg-strom/devel" ["l"="28.176,35.487"]
"pingcap/tikv" ["l"="-10.991,4.958"]
"tmulc18/Distributed-TensorFlow-Guide" ["l"="27.836,35.223"]
"kuza55/keras-extras" ["l"="30.984,31.66"]
"rjagerman/glint" ["l"="22.848,37.339"]
"facebookarchive/scribe" ["l"="11.331,23.907"]
"zhihu/kids" ["l"="-12.997,3.782"]
"cloudera/flume" ["l"="10.47,26.484"]
"Qihoo360/QConf" ["l"="-12.995,3.543"]
"facebook/fbthrift" ["l"="-11.833,22.169"]
"twitter/twemproxy" ["l"="-12.934,3.574"]
"mesos/chronos" ["l"="-12.19,-6.038"]
"alibaba/tair" ["l"="9.728,21.115"]
"mozilla-services/heka" ["l"="-12.657,1.915"]
"wandoulabs/codis" ["l"="-12.979,3.646"]
"session-replay-tools/tcpcopy" ["l"="-13.009,3.575"]
"tagomoris/shib" ["l"="11.801,24.033"]
"tagomoris/presto-client-node" ["l"="11.87,24.044"]
"apache/pulsar-manager" ["l"="12.04,23.852"]
"streamnative/kop" ["l"="12.031,23.834"]
"diennea/bookkeeper-visual-manager" ["l"="12.147,23.849"]
"apache/pulsar-helm-chart" ["l"="12.074,23.878"]
"streamnative/tgip-cn" ["l"="11.991,23.851"]
"streamnative/apache-pulsar-grafana-dashboard" ["l"="12.005,23.838"]
"kuangye098/Pulsar-analysis" ["l"="12.025,23.863"]
"apache/pulsar-client-go" ["l"="12.068,23.852"]
"streamnative/pulsarctl" ["l"="12.062,23.83"]
"diennea/herddb" ["l"="12.165,23.86"]
"bbonnin/pulsar-express" ["l"="12.095,23.893"]
"streamnative/charts" ["l"="12.012,23.85"]
"streamnative/function-mesh" ["l"="12.011,23.818"]
"streamnative/aop" ["l"="12.078,23.83"]
"confluentinc/kafka-connect-hdfs" ["l"="10.231,22.59"]
"apache/griffin" ["l"="11.485,23.741"]
"databricks-academy/data-engineering-with-databricks-english" ["l"="10.986,24.272"]
"databricks-academy/ml-in-production-english" ["l"="10.97,24.307"]
"OBenner/data-engineering-interview-questions" ["l"="13.371,23.921"]
"databricks-academy/scalable-machine-learning-with-apache-spark-english" ["l"="10.977,24.325"]
"gunnarmorling/awesome-opensource-data-engineering" ["l"="13.389,23.897"]
"alanchn31/Data-Engineering-Projects" ["l"="13.383,23.914"]
"vivek-bombatkar/Databricks-Apache-Spark-2X-Certified-Developer" ["l"="11.072,24.113"]
"data-engineering-community/data-engineering-wiki" ["l"="13.332,23.931"]
"shunfei/sfmind" ["l"="11.564,24.084"]
"HuaweiBigData/carbondata" ["l"="11.431,24.055"]
"shunfei/aproxy" ["l"="11.506,24.291"]
"metamx/druid-spark-batch" ["l"="11.615,24.115"]
"mustangore/kylin-mondrian-interaction" ["l"="12.023,22.694"]
"Flowerowl/Big_Data_Resources" ["l"="11.381,23.877"]
"jobbole/awesome-machine-learning-cn" ["l"="-12.663,22.27"]
"linyiqun/DataMiningAlgorithm" ["l"="24.12,31.372"]
"lzjqsdd/scikit-learn-doc-cn" ["l"="23.821,31.404"]
"warmheartli/MachineLearningCourse" ["l"="23.795,31.396"]
"wagamamaz/tensorflow-tutorial" ["l"="23.44,31.298"]
"lenskit/lenskit" ["l"="22.978,37.228"]
"wxyyxc1992/DataScience-And-MachineLearning-Handbook-For-Coders" ["l"="11.211,-6.924"]
"IndustryEssentials/ymir" ["l"="11.85,23.673"]
"IndustryEssentials/label-free" ["l"="11.896,23.666"]
"WeBankFinTech/Prophecis" ["l"="11.639,23.683"]
"layerism/TensorRT-Inference-Server-Tutorial" ["l"="34.649,35.588"]
"zerollzeng/tiny-tensorrt" ["l"="34.621,35.575"]
"harshibar/common-intern" ["l"="11.486,25.777"]
"nicolomantini/LinkedIn-Easy-Apply-Bot" ["l"="11.482,25.723"]
"harshibar/5-python-projects" ["l"="11.505,25.808"]
"harshibar/resume" ["l"="11.473,25.809"]
"sun199412/education-project" ["l"="-26.152,18.064"]
"fanshanhong/note" ["l"="-26.05,18.946"]
"ltframe/menthol" ["l"="-26.228,18.082"]
"spotify/heroic" ["l"="11.638,24.192"]
"spotify/ffwd" ["l"="11.716,24.246"]
"spotify/semantic-metrics" ["l"="11.688,24.23"]
"pyr/cyanite" ["l"="-15.545,-4.834"]
"spotify/helios" ["l"="-14.078,-6.442"]
"spotify/styx" ["l"="9.626,25.252"]
"spotify/apollo" ["l"="-13.811,-6.406"]
"eilonmore/linkedin-private-api" ["l"="11.369,25.616"]
"slavab89/in-the-hopper" ["l"="11.357,25.635"]
"eilonmore/job-finder" ["l"="11.342,25.631"]
"airbnb/backpack" ["l"="11.737,24.414"]
"ankurchavda/SparkLearning" ["l"="13.37,23.938"]
"BasPH/data-pipelines-with-apache-airflow" ["l"="13.528,23.887"]
"LiuXingMing/LinkedinSpider" ["l"="11.383,25.597"]
"madpudding/linkedIn-crawler" ["l"="11.343,25.608"]
"ozgur/python-linkedin" ["l"="11.462,25.519"]
"initstring/linkedin2username" ["l"="-6.956,-43.301"]
"dchrastil/ScrapedIn" ["l"="-6.86,-43.189"]
"ericfourrier/scrape-linkedin" ["l"="11.485,25.545"]
"kirkhunter/linkedin-jobs-scraper" ["l"="11.48,25.614"]
"yatish27/linkedin-scraper" ["l"="11.514,25.543"]
"m8sec/CrossLinked" ["l"="11.387,25.56"]
"wavvs/nanorobeus" ["l"="-8.579,-44.104"]
"knavesec/CredMaster" ["l"="-6.84,-43.417"]
"allwefantasy/my-life" ["l"="11.434,23.872"]
"shijinkui/spark_study" ["l"="11.454,23.907"]
"keepsimplefocus/spark-sourcecodes-analysis" ["l"="11.493,23.86"]
"mattshma/bigdata" ["l"="11.334,23.927"]
"siaorg/sia-task" ["l"="9.913,21.13"]
"endymecy/spark-graphx-source-analysis" ["l"="11.403,23.923"]
"wzhe06/CTRmodel" ["l"="22.732,37.184"]
"rapidsai/tpcx-bb" ["l"="25.067,33.877"]
"rapidsai/cudf" ["l"="25.298,33.93"]
"rapidsai/cuxfilter" ["l"="25.123,33.886"]
"alibaba/SparkCube" ["l"="11.476,23.937"]
"ibis-project/ibis-substrait" ["l"="-10.706,5.412"]
"apache/orc" ["l"="11.399,23.86"]
"ercoppa/HadoopInternals" ["l"="11.421,24.115"]
"steveloughran/kerberos_and_hadoop" ["l"="11.399,24.235"]
"hortonworks/simple-yarn-app" ["l"="10.692,26.323"]
"romainr/hadoop-tutorials-examples" ["l"="10.732,26.65"]
"edwardcapriolo/filecrush" ["l"="10.498,26.593"]
"airbnb/reair" ["l"="11.46,24.194"]
"apachecn/RecommenderSystems" ["l"="21.784,36.702"]
"lpty/recommendation" ["l"="21.801,36.709"]
"apachecn/python_data_analysis_and_mining_action" ["l"="24.24,31.289"]
"Tongzhenguo/ebooks" ["l"="11.763,23.476"]
"YouChouNoBB/data-mining-introduction" ["l"="11.782,23.347"]
"Magic-Bubble/RecommendSystemPractice" ["l"="21.795,36.724"]
"chengstone/movie_recommender" ["l"="21.826,36.711"]
"princewen/tensorflow_practice" ["l"="22.756,37.093"]
"MeetYouDevs/big-whale" ["l"="11.695,23.649"]
"zhangjun0x01/bigdata-examples" ["l"="11.683,23.644"]
"wlhbdp/bdp-platform" ["l"="11.734,23.577"]
"MoriatyBug/flink-commodity-recommendation-system" ["l"="21.774,27.288"]
"todd5167/flink-spark-submiter" ["l"="11.696,23.661"]
"binglind/alchemy" ["l"="11.646,23.704"]
"HunterChao/User-Portrait" ["l"="11.789,23.585"]
"perkinls/flink-local-train" ["l"="11.66,23.648"]
"gingerredjade/flink-userportrait-VuejsShow" ["l"="11.718,23.571"]
"yangtong123/RoadOfStudySpark" ["l"="11.714,23.643"]
"Erik-ly/SprakProject" ["l"="11.754,23.563"]
"airbnb/prop-types" ["l"="11.86,24.618"]
"airbnb/eslint-plugin-react-with-styles" ["l"="11.857,24.651"]
"airbnb/prop-types-exact" ["l"="11.89,24.66"]
"airbnb/react-with-styles" ["l"="25.537,-26.593"]
"airbnb/lunar" ["l"="11.93,24.707"]
"airbnb/babel-preset-airbnb" ["l"="11.735,24.454"]
"airbnb/react-with-styles-interface-aphrodite" ["l"="11.893,24.628"]
"kontext-tech/winutils" ["l"="11.386,23.568"]
"big-data-europe/docker-hadoop" ["l"="-8.027,0.854"]
"hyh1750522171/bigData" ["l"="11.789,23.466"]
"hyh1750522171/google-chrome" ["l"="11.825,23.425"]
"wx-chevalier/Database-Series" ["l"="11.704,23.53"]
"jackfrued/Python-Interview-Bible" ["l"="15.598,6.084"]
"apache/incubator-linkis" ["l"="11.608,23.676"]
"twosigma/flint" ["l"="11.149,24.063"]
"hyperopt/hyperopt-sklearn" ["l"="25.592,33.788"]
"rhiever/tpot" ["l"="25.564,33.773"]
"moutainhigh/datax-cloud-base" ["l"="11.754,23.584"]
"Hyhyhyhyhyhyh/Django-Data-quality-system" ["l"="11.755,23.606"]
"zbwfisher1/vue-metadata" ["l"="11.821,23.563"]
"312075478/datax-cloud" ["l"="11.836,23.537"]
"sevenfang/DataCenter" ["l"="11.774,23.579"]
"alldatacenter/alldata" ["l"="11.633,23.604"]
"muniao/SuperBigData" ["l"="11.829,23.521"]
"quan2005/flink-connector-debezium" ["l"="11.841,23.555"]
"javasqlbug/zhili-dataplatform" ["l"="11.813,23.532"]
"shuzeCloud/shuzeCloud" ["l"="11.738,23.629"]
"twosigma/beakerx" ["l"="21.362,28.821"]
"manahl/arctic" ["l"="21.806,32.806"]
"typelevel/frameless" ["l"="9.763,24.938"]
"RJT1990/pyflux" ["l"="22.429,36.087"]
"vegas-viz/Vegas" ["l"="9.649,24.966"]
"sofastack/sofa-jraft" ["l"="-11.39,5.015"]
"Netflix/iceberg" ["l"="11.433,23.954"]
"linkedin/dynamometer" ["l"="23.051,37.374"]
"qubole/rubix" ["l"="11.493,23.984"]
"ambition119/FlinkSQL" ["l"="32.96,37.419"]
"coffeehu/CBoard-v" ["l"="11.47,23.472"]
"OSBI/saiku" ["l"="12.012,22.723"]
"WeBankFinTech/Schedulis" ["l"="11.627,23.648"]
"WeBankFinTech/Visualis" ["l"="11.627,23.66"]
"WeBankFinTech/Streamis" ["l"="11.648,23.656"]
"WeBankFinTech/Linkis-Doc" ["l"="11.643,23.648"]
"zenkay/bigdata-ecosystem" ["l"="11.358,24.252"]
"haifengl/bigdata" ["l"="11.347,24.36"]
"project-geode/docs" ["l"="11.454,24.232"]
"apache/incubator-madlib" ["l"="11.421,24.155"]
"Pivotal-Open-Source-Hub/StockInference-Spark" ["l"="11.431,24.227"]
"apache/incubator-trafodion" ["l"="11.445,24.277"]
"Pivotal-Open-Source-Hub/WifiAnalyticsIoT" ["l"="11.435,24.202"]
"spring-projects/spring-gemfire-examples" ["l"="11.426,24.298"]
"Pivotal-Open-Source-Hub/StockPrediction" ["l"="11.446,24.214"]
"wangzw/hawq-devel-env" ["l"="11.429,24.089"]
"madlib/madlib" ["l"="11.406,24.2"]
"PivotalRD/libhdfs3" ["l"="11.448,24.116"]
"facebookincubator/LogDevice" ["l"="-11.072,4.95"]
"tencent-wechat/phxpaxos" ["l"="-11.217,4.827"]
"atomix/copycat" ["l"="9.039,21.688"]
"pinterest/rocksplicator" ["l"="-11.05,5.034"]
"pivotalsoftware/PivotalR" ["l"="11.411,24.266"]
"GreenplumChorus/chorus" ["l"="11.39,24.268"]
"jconway/plr" ["l"="11.395,24.287"]
"cloudera/impala" ["l"="10.5,26.449"]
"graphlab-code/graphlab" ["l"="10.456,26.51"]
"apache/parquet-cpp" ["l"="11.295,23.847"]
"facebook/hadoop-20" ["l"="10.421,26.471"]
"apache/incubator-spark" ["l"="10.499,26.468"]
"mesos/spark" ["l"="10.458,26.454"]
"apache/incubator-drill" ["l"="10.549,26.448"]
"mongodb/mongo-spark" ["l"="11.314,23.972"]
"mongodb/mongo-java-driver" ["l"="-33.536,40.097"]
"mongodb/casbah" ["l"="9.739,24.564"]
"rcongiu/Hive-JSON-Serde" ["l"="10.614,26.612"]
"Stratio/spark-mongodb" ["l"="12.329,25.973"]
"mongodb/mongo-snippets" ["l"="-13.975,3.52"]
"cas-bigdatalab/piflow" ["l"="11.607,23.733"]
"cas-bigdatalab/piflow-web" ["l"="11.703,23.718"]
"NetEase/kyuubi" ["l"="11.668,23.709"]
"cas-packone/packone" ["l"="11.682,23.703"]
"claudemamo/kafka-web-console" ["l"="10.329,22.57"]
"mumrah/kafka-python" ["l"="22.385,3.693"]
"metamx/druid" ["l"="10.502,26.423"]
"quantifind/KafkaOffsetMonitor" ["l"="10.295,22.531"]
"nathanmarz/storm-contrib" ["l"="10.565,26.33"]
"miguno/kafka-storm-starter" ["l"="10.555,26.251"]
"Parquet/parquet-format" ["l"="10.543,26.433"]
"Parquet/parquet-mr" ["l"="10.562,26.473"]
"klout/brickhouse" ["l"="10.586,26.606"]
"newTendermint/awesome-bigdata" ["l"="11.771,23.4"]
"AllDataTeam/alldata" ["l"="11.682,23.395"]
"BigDataScholar/TheKingOfBigData" ["l"="11.683,23.568"]
"apache/doris-flink-connector" ["l"="-13.652,-4.002"]
"itinycheng/flink-connector-clickhouse" ["l"="-13.612,-4.067"]
"docker-flink/docker-flink" ["l"="11.821,23.849"]
"streaming-with-flink/examples" ["l"="11.802,23.784"]
"fangyidong/json-simple" ["l"="12.649,24.564"]
"stleary/JSON-java" ["l"="9.315,21.653"]
"ralfstx/minimal-json" ["l"="12.686,24.578"]
"jdereg/json-io" ["l"="12.595,24.53"]
"cliftonlabs/json-simple" ["l"="12.669,24.54"]
"billdavidson/JSONUtil" ["l"="12.638,24.593"]
"hadoopecosystemtable/hadoopecosystemtable.github.io" ["l"="11.405,24.087"]
"sequenceiq/sequenceiq-samples" ["l"="11.421,24.176"]
"proofpoint/kairosdb" ["l"="11.889,24.281"]
"proofpoint/kairosdb-client" ["l"="11.906,24.307"]
"Pardot/Rhombus" ["l"="11.941,24.337"]
"apache/incubator-hugegraph" ["l"="11.704,23.692"]
"apache/incubator-hugegraph-toolchain" ["l"="11.767,23.691"]
"apache/incubator-hugegraph-doc" ["l"="11.745,23.691"]
"TuGraph-db/tugraph-db" ["l"="30.123,31.417"]
"apache/incubator-eventmesh" ["l"="11.759,23.716"]
"apache/incubator-hugegraph-computer" ["l"="11.755,23.693"]
"influxdata/influxdb_iox" ["l"="-10.82,5.349"]
"facebookarchive/beringei" ["l"="11.98,24.128"]
"timescale/timescale-prometheus" ["l"="12.12,24.137"]
"timescale/timescaledb-tune" ["l"="-12.143,-4.918"]
"ClickHouse/ClickBench" ["l"="-10.875,5.13"]
"chengshiwen/influx-proxy" ["l"="22.131,27.711"]
"jacksontj/promxy" ["l"="-11.843,-4.935"]
"dgryski/go-tsz" ["l"="12.001,24.161"]
"rockset/rocksdb-cloud" ["l"="-10.995,5.112"]
"thulab/tsfile" ["l"="-31.279,39.998"]
"authorwlh/wlhbdp" ["l"="11.71,23.615"]
"wgzhao/Addax" ["l"="11.603,23.621"]
"didi/ES-Fastloader" ["l"="11.295,23.476"]
"didi/DDMQ" ["l"="9.769,21.146"]
"didi/sds" ["l"="-11.646,5.011"]
"didi/go-spring" ["l"="-12.736,1.154"]
"sxfad/porter" ["l"="-33.64,-15.821"]
"lyft/envoy" ["l"="-12.765,1.88"]
"fastio/pedis" ["l"="-12.114,22.309"]
"baidu/bfs" ["l"="-11.278,4.858"]
"facebook/wangle" ["l"="-11.75,22.073"]
"scylladb/seastar" ["l"="-11.913,22.206"]
"traildb/traildb-go" ["l"="11.963,24.254"]
"traildb/traildb-python" ["l"="11.944,24.249"]
"lemire/streamvbyte" ["l"="-14.772,22.018"]
"traildb/trck" ["l"="11.968,24.237"]
"akumuli/Akumuli" ["l"="11.953,24.182"]
"cswinter/LocustDB" ["l"="-10.779,5.316"]
"pmwkaa/sophia" ["l"="-13.74,21.958"]
"leo-yuriev/t1ha" ["l"="-11.209,22.18"]
"colinmarc/hdfs" ["l"="-12.768,1.58"]
"crs4/pydoop" ["l"="11.112,23.993"]
"Yelp/mrjob" ["l"="10.527,26.463"]
"klbostee/dumbo" ["l"="10.566,26.534"]
"cloudera/cdk" ["l"="10.618,26.52"]
"leesf/hudi-demos" ["l"="11.723,23.726"]
"apache/couchdb" ["l"="34.165,-26.171"]
"jadianes/spark-movie-lens" ["l"="10.784,23.949"]
"XuefengHuang/RecommendationSystem" ["l"="21.805,36.639"]
"IBM/elasticsearch-spark-recommender" ["l"="22.995,37.125"]
"jadianes/winerama-recommender-tutorial" ["l"="10.805,23.931"]
"jadianes/data-science-your-way" ["l"="10.839,23.953"]
"khanhnamle1994/movielens" ["l"="21.859,36.752"]
"marklit/recommend" ["l"="10.736,23.945"]
"smallnest/douban-recommender" ["l"="21.714,36.594"]
"songgc/TF-recomm" ["l"="22.932,37.17"]
"groveco/content-engine" ["l"="10.668,23.926"]
"OndraFiedler/spark-recommender" ["l"="10.728,23.922"]
"chyikwei/recommend" ["l"="22.995,37.178"]
"jadianes/spark-r-notebooks" ["l"="10.867,23.95"]
"deanwampler/spark-scala-tutorial" ["l"="11.126,24.027"]
"bolerio/mjson" ["l"="12.694,24.61"]
"owlike/genson" ["l"="12.732,24.581"]
"boonproject/boon" ["l"="7.334,21.54"]
"mmastrac/nanojson" ["l"="12.714,24.556"]
"ui4j/ui4j" ["l"="21.037,-28.219"]
"zafarkhaja/jsemver" ["l"="12.744,24.62"]
"ngs-doo/dsl-json" ["l"="9.072,21.466"]
"lmdbjava/lmdbjava" ["l"="8.958,21.582"]
"fabienrenaud/java-json-benchmark" ["l"="9.021,21.497"]
"zsoltherpai/feather" ["l"="25.51,0.852"]
"m3db/m3" ["l"="-10.6,-0.068"]
"uber/peloton" ["l"="11.747,24.017"]
"uber/kraken" ["l"="-10.864,0.048"]
"uber/petastorm" ["l"="25.306,34.101"]
"google/zetasql" ["l"="-10.819,5.219"]
"achinnasamy/bigdata" ["l"="10.983,23.851"]
"achinnasamy/Free-Deep-Learning-Books" ["l"="10.82,23.785"]
"Larry3z/HadoopRelatedBooks" ["l"="10.904,23.822"]
"hadooparchitecturebook/hadoop-arch-book" ["l"="11.014,24.335"]
"alexholmes/hadoop-utils" ["l"="11.05,24.197"]
"alexholmes/hdfs-file-slurper" ["l"="11.049,24.215"]
"jasonTangxd/recommendSys" ["l"="21.731,36.615"]
"gglinux/wifi" ["l"="11.85,23.525"]
"longyinzaitian/HadoopDemo" ["l"="11.821,23.547"]
"baifendian/SparkDemo" ["l"="11.929,23.425"]
"sectong/SparkToParquet" ["l"="11.821,23.582"]
"supermy/flume-kafka-storm" ["l"="11.861,23.503"]
"adobe-research/spindle" ["l"="11.248,24.197"]
"krasserm/akka-analytics" ["l"="9.409,24.795"]
"ibm-et/spark-kernel" ["l"="11.242,24.147"]
"spoddutur/spark-notes" ["l"="11.11,24.144"]
"vaquarkhan/Apache-Kafka-poc-and-notes" ["l"="11.082,24.219"]
"NFLabs/zeppelin" ["l"="11.246,24.175"]
"twitter/algebird" ["l"="9.777,24.707"]
"awesome-spark/learn-by-examples" ["l"="11.137,24.149"]
"zero323/pyspark-stubs" ["l"="11.116,24.196"]
"MrPowers/spark-fast-tests" ["l"="11.188,24.094"]
"zero323/pyspark-asyncactions" ["l"="11.097,24.243"]
"databricks/spark-xml" ["l"="11.248,24.066"]
"elsevierlabs-os/spark-xml-utils" ["l"="11.238,24.116"]
"crealytics/spark-excel" ["l"="11.354,24.019"]
"sakserv/hadoop-mini-clusters" ["l"="10.074,22.711"]
"weibocom/motan" ["l"="9.687,21.278"]
"apache/incubator-distributedlog" ["l"="11.576,24.168"]
"real-logic/Aeron" ["l"="9.014,21.544"]
"Netflix/exhibitor" ["l"="11.095,22.573"]
"twitter/snowflake" ["l"="9.711,21.2"]
"mrniko/redisson" ["l"="9.475,21.302"]
"newTendermint/awesome-analytics" ["l"="11.817,23.351"]
"javierluraschi/awesome-dataviz" ["l"="11.826,23.329"]
"awesome-foss/awesome-sysadmin" ["l"="-32.742,-22.908"]
"gdcmarinho/awesome-project" ["l"="27.427,-19.466"]
"inputsh/awesome-linux" ["l"="27.526,-19.466"]
"DopplerHQ/awesome-bots" ["l"="27.47,-19.476"]
"goabstract/Awesome-Design-Tools" ["l"="28.042,-19.718"]
"georgezouq/awesome-ai-in-finance" ["l"="21.762,32.589"]
"pingcap/awesome-database-learning" ["l"="-11.101,5.132"]
"terkelg/awesome-creative-coding" ["l"="30.758,-23.525"]
"markusschanta/awesome-jupyter" ["l"="21.29,28.893"]
"Zheaoli/awesome-coins" ["l"="46.918,-25.1"]
"OpenTSDB/tcollector" ["l"="11.576,23.982"]
"dropwizard/metrics" ["l"="9.345,21.443"]
"influxdata/influxdb" ["l"="-10.488,-0.623"]
"bosun-monitor/bosun" ["l"="-12.672,1.972"]
"influxdb/influxdb" ["l"="-12.688,1.889"]
"openzipkin/zipkin" ["l"="9.611,21.465"]
"apache/incubator-paimon" ["l"="11.588,23.784"]
"japila-books/spark-sql-internals" ["l"="11.425,23.89"]
"apache/hbase-operator-tools" ["l"="11.494,24.032"]
"DarkPhoenixs/hbase-meta-repair" ["l"="11.552,24.063"]
"flowerfine/scaleph" ["l"="11.617,23.556"]
"gaodayu168/datasophon" ["l"="11.613,23.536"]
"datasophon/datasophon" ["l"="11.625,23.528"]
"datavines-ops/datavines" ["l"="11.629,23.578"]
"liancheng/spear" ["l"="11.559,23.867"]
"apache/hawq" ["l"="11.41,23.879"]
"holdenk/spark-validator" ["l"="11.264,24.071"]
"spotify/scio" ["l"="9.737,24.95"]
"sbt/sbt-assembly" ["l"="9.805,24.745"]
"scopt/scopt" ["l"="9.784,24.8"]
"mspnp/spark-monitoring" ["l"="10.981,24.215"]
"microsoft/nutter" ["l"="24.58,19.284"]
"databrickslabs/terraform-provider-databricks" ["l"="10.998,24.205"]
"databrickslabs/cicd-templates" ["l"="10.973,24.202"]
"mspnp/azure-databricks-streaming-analytics" ["l"="10.907,24.257"]
"Azure/azure-databricks-client" ["l"="10.919,24.24"]
"Kyligence/ssb-kylin" ["l"="10.887,23.759"]
"Kyligence/kylin-tpch" ["l"="10.855,23.743"]
"electrum/ssb-dbgen" ["l"="10.928,23.778"]
"apache/sentry" ["l"="11.381,23.856"]
"apache/knox" ["l"="11.362,23.872"]
"cartershanklin/hive-testbench" ["l"="11.375,23.961"]
"HotelsDotCom/waggle-dance" ["l"="11.513,24.197"]
"Stratio/Spark-MongoDB" ["l"="12.341,25.904"]
"mongodb/mongo-scala-driver" ["l"="9.668,24.578"]
"breinero/MongoDB_Spark_Course" ["l"="11.32,23.989"]
"scalaj/scalaj-http" ["l"="9.757,24.749"]
"sibirbil/IMO2020" ["l"="22.726,-23.871"]
"datacleaner/DataCleaner" ["l"="11.427,23.428"]
"apache/metamodel" ["l"="11.402,23.362"]
"agile-lab-dev/DataQuality" ["l"="11.371,23.332"]
"FRosner/drunken-data-quality" ["l"="11.391,23.323"]
"datacleaner/AnalyzerBeans" ["l"="11.419,23.396"]
"eBay/griffin" ["l"="11.399,23.294"]
"schic/DQCS" ["l"="11.403,23.389"]
"xupengpai/Lipland" ["l"="10.983,23.774"]
"Hydrospheredata/mist" ["l"="14.021,23.644"]
"Bridgewater/scala-notebook" ["l"="9.65,24.73"]
"alexarchambault/jupyter-scala" ["l"="9.634,24.789"]
"neo4j-contrib/neo4j-spark-connector" ["l"="29.02,29.882"]
"opencypher/morpheus" ["l"="-12.638,4.952"]
"Sotera/spark-distributed-louvain-modularity" ["l"="22.049,38.922"]
"opencypher/cypher-for-apache-spark" ["l"="-12.638,4.918"]
"Sotera/distributed-graph-analytics" ["l"="22.098,38.945"]
"bolt-project/bolt" ["l"="11.038,24.133"]
"google/skflow" ["l"="27.14,34.153"]
"thunder-project/thunder" ["l"="11.125,24.171"]
"sparklingpandas/sparklingpandas" ["l"="10.918,23.994"]
"ottogroup/palladium" ["l"="21.651,28.689"]
"ogrisel/parallel_ml_tutorial" ["l"="23.213,30.729"]
"paulgb/sklearn-pandas" ["l"="21.659,28.823"]
"aigamedev/scikit-neuralnetwork" ["l"="27.127,34.12"]
"piskvorky/gensim" ["l"="27.115,34.08"]
"nborwankar/LearnDataScience" ["l"="23.28,30.725"]
"rushter/data-science-blogs" ["l"="23.38,30.705"]
"apache/incubator-yunikorn-core" ["l"="11.787,23.922"]
"apache/incubator-yunikorn-k8shim" ["l"="11.841,23.948"]
"apache/hadoop-ozone" ["l"="9.243,21.563"]
"datapunchorg/punch" ["l"="11.848,23.933"]
"apache/ozone" ["l"="11.56,23.816"]
"apache/incubator-celeborn" ["l"="11.591,23.828"]
"apache/incubator-inlong" ["l"="11.667,23.778"]
"opencurve/curve" ["l"="-12.099,-0.809"]
"linkedin/indextank-engine" ["l"="11.504,24.825"]
"linkedin/indextank-service" ["l"="11.494,24.855"]
"linkedin/cleo" ["l"="11.473,24.827"]
"linkedin/zoie" ["l"="11.473,24.89"]
"senseidb/zoie" ["l"="11.444,24.801"]
"linkedin/linkedin-zookeeper" ["l"="11.502,24.767"]
"linkedin/krati" ["l"="11.477,24.796"]
"linkedin/datafu" ["l"="10.515,26.489"]
"senseidb/sensei" ["l"="11.446,24.778"]
"lyltj2010/DataMining" ["l"="11.809,23.292"]
"liancheng/brainsuck" ["l"="11.603,23.886"]
"konglinghai123/kettle" ["l"="11.944,23.596"]
"lightning-viz/lightning-python" ["l"="11.183,24.271"]
"lightning-viz/lightning" ["l"="11.189,24.226"]
"pranab/sifarish" ["l"="10.591,23.912"]
"muricoca/crab" ["l"="22.952,37.214"]
"ttvand/Santander-Product-Recommendation" ["l"="22.682,37.518"]
"h2oai/h2o-tutorials" ["l"="11.117,24.314"]
"h2oai/h2o-3" ["l"="25.425,33.838"]
"h2oai/h2o-meetups" ["l"="11.139,24.294"]
"ledell/useR-machine-learning-tutorial" ["l"="23.043,30.66"]
"mlr-org/mlr" ["l"="20.308,43.561"]
"h2oai/mli-resources" ["l"="25.806,33.973"]
"DarrenCook/h2o" ["l"="11.082,24.371"]
"h2oai/deepwater" ["l"="11.137,24.259"]
"scikit-learn-contrib/categorical-encoding" ["l"="25.62,33.864"]
"topepo/caret" ["l"="20.332,43.574"]
"rstudio/sparklyr" ["l"="20.379,43.569"]
"thomasp85/lime" ["l"="20.359,43.466"]
"jpmml/r2pmml" ["l"="10.658,24.215"]
"jpmml/jpmml-r" ["l"="10.629,24.232"]
"jpmml/sklearn2pmml" ["l"="10.788,24.133"]
"jpmml/jpmml-sklearn" ["l"="10.816,24.105"]
"jpmml/jpmml-evaluator" ["l"="10.829,24.135"]
"openscoring/openscoring" ["l"="10.836,24.109"]
"jpmml/jpmml-xgboost" ["l"="10.803,24.117"]
"jpmml/jpmml-sparkml" ["l"="10.856,24.099"]
"SoftwareAG/nyoka" ["l"="10.744,24.171"]
"ShichenXie/scorecardpy" ["l"="10.802,21.195"]
"boredbird/woe" ["l"="10.782,21.185"]
"amphibian-dev/toad" ["l"="10.808,21.17"]
"jpmml/pyspark2pmml" ["l"="10.785,24.106"]
"jpmml/jpmml-model" ["l"="10.812,24.131"]
"autodeployai/pypmml" ["l"="10.716,24.149"]
"jpmml/jpmml-lightgbm" ["l"="10.773,24.119"]
"onnx/sklearn-onnx" ["l"="34.696,35.608"]
"nyoka-pmml/nyoka" ["l"="10.734,24.154"]
"xubo245/MLlibLearning" ["l"="11.512,23.86"]
"LinMingQiang/spark-util" ["l"="11.575,23.85"]
"prestosql/presto-python-client" ["l"="11.22,23.896"]
"holdenk/spark-structured-streaming-ml" ["l"="11.27,24.059"]
"polomarcus/Spark-Structured-Streaming-Examples" ["l"="11.312,24.044"]
"holdenk/learning-spark-examples" ["l"="11.161,23.959"]
"cloudera/oryx" ["l"="10.537,26.377"]
"tdunning/MiA" ["l"="10.658,26.383"]
"ibm-research-ireland/sparkoscope" ["l"="11.312,24.072"]
"hammerlab/grafana-spark-dashboards" ["l"="11.327,24.084"]
"Stratio/sparta" ["l"="12.405,25.879"]
"criteo/babar" ["l"="11.33,24.12"]
"Mellanox/SparkRDMA" ["l"="28.136,35.129"]
"horovod/horovod" ["l"="34.127,35.595"]
"Azure/azure-event-hubs-for-kafka" ["l"="10.829,24.297"]
"Azure/azure-event-hubs-spark" ["l"="10.868,24.272"]
"Azure-Samples/streaming-at-scale" ["l"="10.858,24.294"]
"Intel-bigdata/SSM" ["l"="11.528,23.977"]
"gregrahn/tpch-kit" ["l"="11.196,23.886"]
"gregrahn/join-order-benchmark" ["l"="-10.781,4.942"]
"balsa-project/balsa" ["l"="-10.743,4.904"]
"learnedsystems/BaoForPostgreSQL" ["l"="-10.749,4.918"]
"hyrise/index_selection_evaluation" ["l"="-10.733,4.887"]
"tvondra/pg_tpch" ["l"="11.168,23.878"]
"antonismand/ReJOIN" ["l"="-10.712,4.906"]
"databricks/benchmarks" ["l"="11.299,24.016"]
"postgrespro/sr_plan" ["l"="-9.361,-4.84"]
"wanghan0501/UserSessionBehaviorOfflineAnalysis" ["l"="11.632,23.726"]
"cocofree/azkaban_assistant" ["l"="11.014,24.226"]
"researchgate/azkaban-ldap-usermanager" ["l"="11.017,24.269"]
"mtth/azkaban" ["l"="10.998,24.12"]
"lessonone1/fiflow" ["l"="11.7,23.675"]
"itisaid/sokeeper" ["l"="11.551,24.348"]
"itisaid/go-ethereum" ["l"="11.536,24.36"]
"CheckChe0803/flink-simple-tutorial" ["l"="11.778,23.648"]
"liumingmusic/HadoopLearning" ["l"="11.85,23.464"]
"hanson007/FirstBlood" ["l"="11.822,23.675"]
"apache/bahir-website" ["l"="11.37,24.155"]
"apache/incubator-systemml-website" ["l"="11.366,24.147"]
"apache/incubator-systemml" ["l"="11.308,24.16"]
"apachecn/scikit-learn-doc-zh" ["l"="23.965,31.286"]
"apachecn/storm-doc-zh" ["l"="23.943,31.498"]
"apachecn/kafka-doc-zh" ["l"="11.7,23.736"]
"haoch/flink-siddhi" ["l"="12.408,26.143"]
"jaceklaskowski/kafka-notebook" ["l"="11.242,24.097"]
"phatak-dev/spark2.0-examples" ["l"="11.284,24.065"]
"japila-books/delta-lake-internals" ["l"="11.199,24.086"]
"jerryshao/spark-hive-streaming-sink" ["l"="11.298,23.964"]
"jaceklaskowski/spark-streaming-notebook" ["l"="11.27,24.045"]
"BenFradet/spark-kafka-writer" ["l"="11.382,24.056"]
"jaceklaskowski/mastering-kafka-streams-book" ["l"="11.252,24.083"]
"woloqun/flink-cep" ["l"="11.781,23.662"]
"streamsets/tutorials" ["l"="11.62,23.868"]
"streamsets/datacollector-edge" ["l"="11.597,23.853"]
"zendesk/maxwell" ["l"="9.753,21.59"]
"streamsets/datacollector-api" ["l"="11.532,23.836"]
"zhaoyachao/zdh_server" ["l"="11.777,23.616"]
"wlhbdp/bdp-dataplatform" ["l"="11.789,23.605"]
"cloudera/kudu-examples" ["l"="11.461,24.01"]
"apache/incubator-kudu" ["l"="11.402,24.031"]
"baidu/palo" ["l"="-11.351,4.875"]
"drabastomek/PySparkCookbook" ["l"="10.896,23.984"]
"dennyglee/databricks" ["l"="10.938,24.132"]
"Apress/machine-learning-with-pyspark" ["l"="10.866,23.982"]
"baifendian/harpc" ["l"="12.008,23.346"]
"slimina/thrift-zookeeper-rpc" ["l"="12.054,23.302"]
"HamaWhiteGG/flink-sql-security" ["l"="11.646,23.735"]
"apple/batch-processing-gateway" ["l"="11.505,24.055"]
"apache/yunikorn-release" ["l"="11.534,24.083"]
"apache/yunikorn-k8shim" ["l"="11.494,24.171"]
"apache/inlong" ["l"="11.576,23.699"]
"luweizheng/flink-tutorials" ["l"="11.775,23.737"]
"knaufk/flink-faker" ["l"="11.747,23.798"]
"pierre94/flink-notes" ["l"="11.692,23.633"]
"confucianzuoyuan/flink-tutorial" ["l"="11.666,23.568"]
"yangyichao-mango/flink-study" ["l"="11.646,23.67"]
"czy006/FlinkClub" ["l"="11.666,23.665"]
"jeff-zou/flink-connector-redis" ["l"="-13.61,-4.026"]
"spirom/spark-streaming-with-kafka" ["l"="11.327,24.042"]
"spirom/learning-spark-with-java" ["l"="11.332,23.979"]
"linbojin/spark-notes" ["l"="11.52,23.847"]
"ymgd/codereader" ["l"="11.599,24.15"]
"XichengDong/sparktraining" ["l"="11.667,24.225"]
"danny0405/flink-source-code-analysis" ["l"="11.672,23.868"]
"bigdataguide/hadooptraining" ["l"="11.595,24.329"]
"zipingdong/datax-web" ["l"="11.914,23.703"]
"Jawf/DataX-Migration" ["l"="11.906,23.718"]
"luoce/bt-ware-datasync-datax" ["l"="11.944,23.697"]
"zhouhongfa/datax-vue-admin" ["l"="11.944,23.683"]
"dedededede/datax_web_ui" ["l"="11.955,23.707"]
"oldratlee/rp-pratice" ["l"="11.561,24.266"]
"chrismattmann/tika-python" ["l"="24.492,3.794"]
"apache/pdfbox" ["l"="10.96,20.425"]
"apache/poi" ["l"="11,20.405"]
"apache/opennlp" ["l"="29.873,32.951"]
"google/go-tika" ["l"="11.014,23.558"]
"apache/commons-io" ["l"="9.349,21.823"]
"dadoonet/fscrawler" ["l"="-6.974,2.354"]
"apache/commons-collections" ["l"="9.37,21.827"]
"apache/gora" ["l"="11.031,23.537"]
"apache/phoenix-connectors" ["l"="11.489,24.017"]
"KangU4/BigDataPlatform" ["l"="11.741,23.596"]
"edyoda/machine-learning-using-pyspark" ["l"="10.833,23.976"]
"WeBankFinTech/DeFiBus" ["l"="11.702,23.593"]
"WeBankFinTech/EventMesh" ["l"="11.687,23.49"]
"WeBankFinTech/WeBASE" ["l"="44.212,-26.071"]
"WeBankFinTech/WeBank-all-Project" ["l"="11.702,23.464"]
"allwefantasy/mlsql" ["l"="11.569,23.746"]
"allwefantasy/pyjava" ["l"="11.53,23.79"]
"ameyamk/spark-streaming-direct-kafka" ["l"="11.633,23.738"]
"ruozedata/BigData" ["l"="11.189,23.459"]
"Hackeruncle/OnlineLogAnalysis" ["l"="11.167,23.433"]
"Hackeruncle/MySQL" ["l"="11.169,23.413"]
"jydata/MCP" ["l"="11.183,23.432"]
"amihalik/hadoop-common-2.6.0-bin" ["l"="11.228,23.537"]
"SweetInk/hadoop-common-2.7.1-bin" ["l"="11.248,23.539"]
"azkaban/azkaban-plugins" ["l"="10.87,22.738"]
"zhang-xzhi/simplehbase" ["l"="11.232,23.518"]
"niall-turbitt/e2e-mlops" ["l"="10.969,24.176"]
"databricks/mlops-stack" ["l"="10.997,24.161"]
"niall-turbitt/e2e-mlops-azure" ["l"="10.935,24.177"]
"deanwampler/spark-workshop" ["l"="11.077,23.904"]
"dibbhatt/kafka-spark-consumer" ["l"="10.574,26.168"]
"databricks-academy/INT-JEPFS-V2-IL" ["l"="10.924,24.315"]
"deeplearning4j/ScalNet" ["l"="9.587,24.995"]
"swoop-inc/spark-alchemy" ["l"="11.216,24.113"]
"ironmussa/Optimus" ["l"="25.657,33.899"]
"databrickslabs/dbldatagen" ["l"="11.048,24.155"]
"deanwampler/JustEnoughScalaForSpark" ["l"="11.203,24.017"]
"deanwampler/prog-scala-2nd-ed-code-examples" ["l"="11.073,24.183"]
"dehun/learn-fp" ["l"="9.839,24.968"]
"tapdata/tapdata" ["l"="11.609,23.439"]
"tapdata/idaas-pdk" ["l"="11.603,23.384"]
"tapdata/tapdata.github.io" ["l"="11.612,23.407"]
"tapdata/idaas" ["l"="11.601,23.4"]
"apache/flink-connector-jdbc" ["l"="11.62,23.386"]
"sdksdk0/Elasticsearch-Hbase" ["l"="12.015,23.454"]
"2shou/HBaseObserver" ["l"="12.039,23.422"]
"SpringForAll/spring-boot-starter-hbase" ["l"="12.068,23.429"]
"jiangzongyao/kettle-master" ["l"="11.935,23.568"]
"JThink/SkyEye" ["l"="9.812,21.106"]
"alibaba/simplehbase" ["l"="12.128,23.394"]
"YunaiV/RuoYi-Vue" ["l"="-9.343,1.728"]
"doushini/lucene" ["l"="11.092,23.45"]
"hankcs/hanlp-lucene-plugin" ["l"="31.647,30.228"]
"sryza/spark-ts-examples" ["l"="11.121,24.088"]
"51nb/miox" ["l"="11.98,23.729"]
"51nb/nym-cli" ["l"="12.047,23.721"]
"51nb/marble" ["l"="11.807,23.74"]
"liyangready/multiple-host" ["l"="12.074,23.711"]
"cevio/super-vuex" ["l"="12.029,23.731"]
"51nb/miox-vuc" ["l"="12.007,23.731"]
"cevio/soyie" ["l"="12.015,23.719"]
"cevio/miox2" ["l"="12.071,23.729"]
"linkedin/brooklin" ["l"="10.31,22.438"]
"apache/helix" ["l"="11.453,23.774"]
"MARKETProtocol/MARKET.js" ["l"="11.532,23.877"]
"apache/eagle" ["l"="12.39,26.121"]
"qiangmouren/query-domain-icp-nodejs" ["l"="11.829,23.719"]
"apache/incubator-shenyu" ["l"="9.984,21.257"]
"polarismesh/polaris" ["l"="-12.825,1.002"]
"apache/incubator-devlake" ["l"="25.632,36.588"]
"flingyp/vue-admire-plus" ["l"="-26.694,19.546"]
"xianyongjian080402/Minecraft-Optimal-Starter_2" ["l"="-26.691,19.567"]
"hbwu-ntu/spot-adv-by-vocoder" ["l"="11.845,23.714"]
"huichen/mlf" ["l"="-12.586,1.583"]
"Tencent/feflow" ["l"="10.834,-10.783"]
"daizikaikou/learningSpark" ["l"="11.801,23.429"]
"sjyttkl/spark_learning" ["l"="11.841,23.39"]
"dgryski/go-jump" ["l"="12.067,24.208"]
"burmanm/gorilla-tsc" ["l"="12.034,24.155"]
"alibaba/celeborn" ["l"="11.604,23.873"]
"MemVerge/splash" ["l"="11.45,23.984"]
"openzipkin/b3-propagation" ["l"="11.844,25.063"]
"openzipkin/zipkin-reporter-java" ["l"="11.825,25.04"]
"openzipkin/brave" ["l"="9.497,21.277"]
"openzipkin/zipkin-api" ["l"="11.866,25.058"]
"w3c/distributed-tracing" ["l"="27.135,18.292"]
"opentracing/specification" ["l"="-16.335,3.076"]
"openzipkin/docker-zipkin" ["l"="11.857,25.032"]
"census-instrumentation/opencensus-specs" ["l"="27.153,18.303"]
"wanghan0501/AdRealTimeAnalysis" ["l"="11.833,23.503"]
"sakura521/wifiProject" ["l"="11.811,23.498"]
"pkeropen/BigData-News" ["l"="11.834,23.487"]
"michaelhelmick/linkedin" ["l"="11.485,25.487"]
"HootsuiteLabs/python-linkedin-v2" ["l"="11.433,25.531"]
"DEKHTIARJonathan/python3-linkedin" ["l"="11.46,25.482"]
"mrgaaron/LinkedIn-Client-Library" ["l"="11.44,25.495"]
"junks/linkedInScraper" ["l"="11.505,25.514"]
"linkedin/api-get-started" ["l"="11.468,25.209"]
"mobolic/facebook-sdk" ["l"="-4.867,-45.238"]
"ptwobrussell/Mining-the-Social-Web-2nd-Edition" ["l"="22.793,4.78"]
"pythonforfacebook/facebook-sdk" ["l"="25.865,0.931"]
"KylinOLAP/Kylin" ["l"="10.474,26.342"]
"wx-chevalier/DistributedSystem-Series" ["l"="-11.252,5.194"]
"wx-chevalier/Linux-Series" ["l"="-11.363,5.236"]
"fenglei110/DataWarehouse" ["l"="11.72,23.443"]
"wx-chevalier/Cloud-Series" ["l"="-11.349,5.223"]
"GoogleCloudPlatform/DataflowTemplates" ["l"="-7.491,-0.689"]
"worldligang/CodeReading" ["l"="11.588,24.446"]
"worldligang/awesome-wechat-weapp" ["l"="11.587,24.486"]
"didi/elastic-trib" ["l"="11.278,23.439"]
"didi/sgt" ["l"="11.236,23.359"]
"didi/levin" ["l"="11.268,23.415"]
"mingyitianxia/elastic-certified-engineer" ["l"="11.221,23.454"]
"vipshop/pallas" ["l"="-7.33,2.078"]
"didi/hetsann" ["l"="21.926,38.778"]
"chubbyjiang/MapReduce" ["l"="11.787,23.629"]
"josonle/MapReduce-Demo" ["l"="11.88,23.566"]
"adamjshook/mapreducepatterns" ["l"="10.594,26.542"]
"andreaiacono/MapReduce" ["l"="11.864,23.58"]
"jfpuget/LibFM_in_Keras" ["l"="22.684,37.43"]
"anttttti/Wordbatch" ["l"="22.738,37.41"]
"jphall663/interpretable_machine_learning_with_python" ["l"="25.804,33.989"]
"sowla/useR2019-materials" ["l"="20.054,43.386"]
"h2oai/data-science-examples" ["l"="11.149,24.342"]
"h2oai/steam" ["l"="11.148,24.315"]
"alno/kaggle-allstate-claims-severity" ["l"="22.774,37.456"]
"lyg5623/lightgbm_predict4j" ["l"="10.705,24.126"]
"alipay/jpmml-sparkml-lightgbm" ["l"="10.728,24.125"]
"dushixiang/kafka-map" ["l"="11.524,23.475"]
"xxd763795151/kafka-console-ui" ["l"="11.544,23.455"]
"DTStack/chengying" ["l"="11.597,23.506"]
"hexgnu/linkedin" ["l"="11.589,25.577"]
"pondering/scrapy-linkedin" ["l"="11.549,25.537"]
"mdsecactivebreach/LinkedInt" ["l"="-6.925,-43.113"]
"starsliao/ConsulManager" ["l"="-9.343,2.228"]
"nacos-group/nacos-k8s" ["l"="10.081,21.065"]
"dair-ai/AI-Product-Index" ["l"="27.157,31.336"]
"databricks/notebook-best-practices" ["l"="10.958,24.319"]
"eirslett/thrift-zookeeper" ["l"="12.08,23.277"]
"baidu/BIPlatform" ["l"="11.509,23.383"]
"ruisibi/olap" ["l"="11.492,23.393"]
"openzipkin/zipkin-dependencies" ["l"="11.83,25.004"]
"openzipkin/docker-zipkin-dependencies" ["l"="11.815,24.957"]
"airbnb/babel-plugin-dynamic-import-node" ["l"="11.683,24.437"]
"airbnb/babel-plugin-dynamic-import-webpack" ["l"="11.698,24.449"]
"airbnb/Backbone-relational" ["l"="11.745,24.444"]
"airbnb/backbone.baseview" ["l"="11.722,24.431"]
"xzt1995/Data-Warehouse" ["l"="11.741,23.436"]
"baolibin/Bigdata" ["l"="11.769,23.436"]
"Thpffcj/cloud-computing" ["l"="11.719,23.477"]
"zhuxiaoshang/flink-be-god" ["l"="11.774,23.675"]
"xianqiangHub/flink-practice" ["l"="12.367,26.153"]
"HiromuHota/webspoon-docker" ["l"="11.948,23.631"]
"HiromuHota/pdi-git-plugin" ["l"="11.959,23.62"]
"wangzzu/program-example" ["l"="11.655,23.774"]
"susanli2016/Deep-Learning-with-deeplearning.ai" ["l"="10.769,24.005"]
"srivatsan88/Mastering-Apache-Spark" ["l"="23.019,35.89"]
"immerok/recipes" ["l"="11.716,23.806"]
"uncleguanghui/pyflink_learn" ["l"="12.02,23.66"]
"mukess/pyflink-demo" ["l"="12.004,23.65"]
"apache/incubator-hop" ["l"="12.001,23.601"]
"pentaho/big-data-plugin" ["l"="11.915,22.731"]
"apache/hop" ["l"="11.724,23.677"]
"tlw-ray/pentaho-kettle-webspoon-0.8.1.17" ["l"="11.94,23.643"]
"zhangrenhua/pentaho-kettle" ["l"="-27.656,19.088"]
"griddb/griddb_nosql" ["l"="11.853,24.127"]
"pfnet/chainer" ["l"="27.058,34.064"]
"crowi/crowi" ["l"="-11.043,-23.773"]
"biokoda/actordb" ["l"="34.148,-25.945"]
"ucbrise/confluo" ["l"="49.336,-4.592"]
"citusdata/cstore_fdw" ["l"="-9.098,-4.736"]
"griddb/python_client" ["l"="11.905,24.141"]
"hatena/Hatena-Textbook" ["l"="-11.063,-23.729"]
"itamae-kitchen/itamae" ["l"="-11.159,-23.673"]
"rackerlabs/blueflood" ["l"="11.801,24.174"]
"groonga/groonga" ["l"="-9.333,-4.445"]
"tencentmusic/cube-studio" ["l"="22.06,27.624"]
"shikanon/kubeflow-manifests" ["l"="-9.342,2.815"]
"ysc/data-generator" ["l"="11.798,23.684"]
"svenkreiss/pysparkling" ["l"="10.977,24.122"]
"vivek-bombatkar/Spark-with-Python---My-learning-notes-" ["l"="11.015,24.127"]
"DTStack/DatasourceX" ["l"="11.599,23.483"]
"apache/incubator-seatunnel-web" ["l"="11.609,23.52"]
"aoju/kettle" ["l"="11.918,23.567"]
"apache/submarine" ["l"="11.576,23.82"]
"yaooqinn/spark-ranger" ["l"="11.532,23.862"]
"hortonworks-spark/spark-atlas-connector" ["l"="13.905,23.844"]
"hadoopsubmarine/submarine" ["l"="23.085,37.381"]
"ansrivas/spark-structured-streaming" ["l"="11.339,24.063"]
"AndrewKuzmin/spark-structured-streaming-examples" ["l"="11.295,24.08"]
"trK54Ylmz/kafka-spark-streaming-example" ["l"="11.308,24.087"]
"pjpan/PPJUtils" ["l"="10.788,24.181"]
"jpmml/jpmml-android" ["l"="10.812,24.172"]
"komiya-atsushi/xgboost-predictor-java" ["l"="22.837,37.37"]
"jpmml/openscoring" ["l"="10.713,24.187"]
"ShifuML/shifu" ["l"="10.737,24.21"]
"FlinkML/flink-jpmml" ["l"="10.807,24.157"]
"jpmml/jpmml" ["l"="10.783,24.159"]
"timveil/hive-jdbc-uber-jar" ["l"="11.239,23.889"]
"timveil/hive-jdbc-driver" ["l"="11.184,23.866"]
"fayson/hbaseexport" ["l"="11.414,23.556"]
"leiguorui/programming-video-tutorials" ["l"="11.831,23.454"]
"airlift/airlift" ["l"="11.539,23.957"]
"dotnet/docs.es-es" ["l"="30.071,-21.906"]
"kata-containers/packaging" ["l"="30.12,-21.893"]
"box/box-ui-elements" ["l"="30.088,-21.888"]
"twitter/hadoop-lzo" ["l"="11.423,23.998"]
"kevinweil/hadoop-lzo" ["l"="10.514,26.553"]
"twitter/elephant-bird" ["l"="11.472,24.091"]
"kevinweil/elephant-bird" ["l"="10.519,26.504"]
"electrum/hadoop-snappy" ["l"="11.48,24.039"]
"carlomedas/4mc" ["l"="11.494,24.071"]
"twitter/hdfs-du" ["l"="10.803,22.75"]
"zhihuili/flower" ["l"="11.555,24.298"]
"ppdaicorp/pmq" ["l"="8.412,18.267"]
"JavaCourse00/JavaCourseCodes" ["l"="8.606,18.371"]
"geektime-geekbang/staffjoy" ["l"="8.493,18.24"]
"wangzheng0822/ratelimiter4j" ["l"="9.695,21.019"]
"mercyblitz/geekbang-lessons" ["l"="8.509,18.337"]
"liyue2008/simple-rpc-framework" ["l"="8.629,18.445"]
"codingdebugallday/common-datax" ["l"="12.068,23.644"]
"srikalyc/Sql4D" ["l"="11.64,24.159"]
"implydata/druid" ["l"="11.679,24.174"]
"tmalaska/SparkOnHBase" ["l"="11.387,24.039"]
"Intel-bigdata/spark-streamingsql" ["l"="11.366,24.078"]
"wxgzgl/flinkx-web" ["l"="11.743,23.65"]
"apache/incubator-seatunnel-website" ["l"="11.597,23.463"]
"hellobike/tunnel" ["l"="-9.443,-4.63"]
"HashDataInc/bireme" ["l"="-9.484,-4.658"]
"hanson007/YGOL" ["l"="11.882,23.68"]
"QiangCai/carbondata_guide" ["l"="11.43,23.765"]
"ruisibi/rsbi-vue" ["l"="11.484,23.366"]
"wangyapu0714/DataVisual" ["l"="9.837,-11.662"]
"intel-hadoop/project-panthera" ["l"="11.742,23.922"]
"minrk/findspark" ["l"="11.112,24.122"]
"mozilla/jupyter-spark" ["l"="11.227,24.263"]
"almond-sh/almond" ["l"="9.736,25.027"]
"alibaba/feathub" ["l"="11.707,23.83"]
"flink-extended/feathub-examples" ["l"="11.759,23.838"]
"flink-extended/ai-flow" ["l"="11.743,23.84"]
"alibaba/pemja" ["l"="11.861,23.891"]
"laoyang360/deep_elasticsearch" ["l"="11.078,23.368"]
"medcl/book-elastic-search-in-action" ["l"="9.964,21.919"]
"felayman/elasticsearch-full" ["l"="11.124,23.428"]
"Pushkr/Apache-Spark-Hands-On" ["l"="11.044,24.058"]
"abulbasar/pyspark-examples" ["l"="10.864,24.022"]
"XD-DENG/Spark-ML-Intro" ["l"="10.875,24.005"]
"LearningJournal/Spark-Streaming-In-Python" ["l"="10.732,24.056"]
"LearningJournal/SparkProgrammingInScala" ["l"="10.776,24.066"]
"LearningJournal/Python-Foundation-Course" ["l"="10.745,24.038"]
"LearningJournal/Spark-Streaming-In-Scala" ["l"="10.748,24.055"]
"zhutiansama/FocusBigData" ["l"="11.738,23.407"]
"wlhbdp/bdp-ecology" ["l"="11.806,23.579"]
"csy512889371/learnDoc" ["l"="11.731,23.363"]
"csy512889371/learndemo" ["l"="11.731,23.307"]
"flink-china/flink-forward-asia-hackathon-2021" ["l"="11.683,23.841"]
"intel-hadoop/PAT" ["l"="11.473,24.166"]
"twitter/hraven" ["l"="10.809,22.728"]
"prestodb/presto-admin" ["l"="30.626,-29.985"]
"mahmoudparsian/big-data-mapreduce-course" ["l"="11.143,23.886"]
"wlhbdp/bdp-gold" ["l"="11.831,23.585"]
"wlhbdp/bdp-base" ["l"="11.842,23.589"]
"bluishglc/bdp" ["l"="11.902,23.542"]
"ruisibi/rsbi-os" ["l"="11.474,23.337"]
"BTrDB/btrdb-server" ["l"="12.013,24.191"]
"prometheus/tsdb" ["l"="-11.645,-4.755"]
"logcabin/logcabin" ["l"="-11.183,4.911"]
"zrlio/disni" ["l"="28.109,35.126"]
"efficient/SuRF" ["l"="-10.888,4.902"]
"lindb/lindb" ["l"="-12.638,1.223"]
"URL-Detector/URL-Detector" ["l"="11.484,24.545"]
"robinst/autolink-java" ["l"="11.454,24.564"]
"CognitiveJ/cognitivej" ["l"="11.494,24.577"]
"shekhargulati/strman-java" ["l"="8.842,21.459"]
"shunfei/DCMonitor" ["l"="11.525,24.404"]
"shunfei/flume-plugin" ["l"="11.524,24.442"]
"opensourceteams/flink-maven-scala" ["l"="11.794,23.758"]
"liguohua-bigdata/simple-flink" ["l"="11.817,23.769"]
"hequn8128/TableApiDemo" ["l"="11.767,23.763"]
"dataArtisans/flink-streaming-demo" ["l"="11.774,23.846"]
"spring-projects/spring-data-solr" ["l"="9.501,21.041"]
"apache/solr-operator" ["l"="11.068,23.64"]
"apache/httpd" ["l"="-12.142,22.639"]
"theiterators/akka-http-microservice" ["l"="9.601,24.803"]
"RBMHTechnology/eventuate" ["l"="9.531,24.807"]
"eligosource/eventsourced" ["l"="9.681,24.633"]
"alexandru/scala-best-practices" ["l"="9.91,24.787"]
"pkinsky/akka-streams-example" ["l"="9.543,24.76"]
"vkostyukov/scalacaster" ["l"="9.831,24.773"]
"pusuo/spark_meetup" ["l"="11.544,23.971"]
"apache/rocketmq-apis" ["l"="12.008,23.775"]
"GuoNingNing/fire-spark" ["l"="11.813,23.601"]
"copywang/kettleNotebook" ["l"="11.952,23.577"]
"pentaho/pdi-sdk-plugins" ["l"="11.959,22.813"]
"teeyog/blog" ["l"="11.543,23.858"]
"passionke/starry" ["l"="11.631,23.803"]
"confucianzuoyuan/mini-flink" ["l"="11.688,23.438"]
"wushengran/FlinkTutorial" ["l"="11.66,23.48"]
"streamnative/rop" ["l"="12.088,23.811"]
"majinju/KettleEasyExpand" ["l"="11.972,23.6"]
"839536/kettle" ["l"="11.975,23.582"]
"alibaba/alibaba-flink-connectors" ["l"="11.787,23.722"]
"jacksoup/hiveMetaMgr" ["l"="11.884,23.529"]
"houbb/metadata" ["l"="11.881,23.514"]
"abel533/DBMetadata" ["l"="11.9,23.506"]
"Pulkit-Khandelwal/Reinforcement-Learning-Notebooks" ["l"="34.588,32.666"]
"salesforce/decaNLP" ["l"="29.901,32.554"]
"ucbrise/clipper" ["l"="25.401,34.049"]
"mitdbg/modeldb" ["l"="25.455,34.061"]
"jpmml/jpmml-evaluator-spark" ["l"="10.821,24.088"]
"jpmml/jpmml-tensorflow" ["l"="10.795,24.092"]
"opendatagroup/hadrian" ["l"="10.743,24.105"]
"nok/sklearn-porter" ["l"="25.687,33.746"]
"meshplus/gosdk" ["l"="11.537,23.235"]
"ververica/flink-jdbc-driver" ["l"="11.711,23.773"]
"ververica/flink-sql-benchmark" ["l"="11.679,23.787"]
"apache/flink-shaded" ["l"="11.75,23.819"]
"clulab/nlp-reading-group" ["l"="10.941,23.962"]
"clulab/processors" ["l"="10.998,23.993"]
"johanpel/fletcher" ["l"="11.211,23.849"]
"sunchao/parquet-rs" ["l"="11.164,23.801"]
"dask/fastparquet" ["l"="25.16,33.823"]
"blue-yonder/turbodbc" ["l"="25.056,33.785"]
"apache/incubator-griffin" ["l"="11.389,23.245"]
"Hang-Hu/ei-check-in" ["l"="11.381,23.213"]
"h2oai/h2o4gpu" ["l"="11.139,24.231"]
"h2oai/h2o-flow" ["l"="11.163,24.255"]
"opensourceteams/spark-scala-maven" ["l"="11.751,23.731"]
"CrestOfWave/Spark-2.3.1" ["l"="11.682,23.765"]
"pranab/avenir" ["l"="10.475,23.894"]
"pranab/beymani" ["l"="10.519,23.901"]
"wzhe06/ipdatabase" ["l"="11.413,23.575"]
"kairosdb/kairosdb-client" ["l"="11.731,24.106"]
"zalando/zmon" ["l"="10.682,-11.427"]
"OpenNMS/newts" ["l"="11.771,24.159"]
"salesforce/Argus" ["l"="10.742,-11.453"]
"jmxtrans/jmxtrans" ["l"="9.182,21.537"]
"velvia/ScalaStorm" ["l"="10.573,26.392"]
"cloudera/spark-dataflow" ["l"="11.328,24.18"]
"intel-hadoop/gearpump" ["l"="11.303,24.198"]
"knoldus/Play-Spark-Scala" ["l"="11.264,24.216"]
"datastax/cassandra-driver-spark" ["l"="11.27,24.235"]
"amplab/docker-scripts" ["l"="10.459,26.559"]
"tresata/spark-kafka" ["l"="10.593,26.075"]
"wxgzgl/LarkMidTableUI" ["l"="11.757,23.638"]
"FlinkML/flink-tensorflow" ["l"="11.73,23.8"]
"flowerfine/flinkful" ["l"="11.62,23.496"]
"wu-sheng/sky-walking" ["l"="9.702,21.177"]
"Tencent/Metis" ["l"="22.961,35.165"]
"uavorg/main" ["l"="11.647,23.719"]
"siaorg/sia-gateway" ["l"="9.904,21.074"]
"chenryn/aiops-handbook" ["l"="22.965,35.198"]
"roncoo/roncoo-cmdb" ["l"="-9.195,2.017"]
"dangdangdotcom/sharding-jdbc" ["l"="9.67,21.248"]
"apache/incubator-skywalking-ui" ["l"="-16.462,3.079"]
"kplcloud/kplcloud" ["l"="-9.28,2.264"]
"jixinpu/aiopstools" ["l"="22.98,35.193"]
"CreditEaseDBA/Themis" ["l"="-13.076,3.227"]
"numetriclabz/awesome-db" ["l"="27.457,-19.433"]
"shlomi-noach/awesome-mysql" ["l"="27.579,-19.425"]
"okulbilisim/awesome-datascience" ["l"="23.252,30.725"]
"hortonworks/hadoop-tutorials" ["l"="10.745,26.673"]
"onurakpolat/awesome-analytics" ["l"="27.39,-19.337"]
"sequenceiq/hadoop-docker" ["l"="-8.046,0.909"]
"lucasviola/awesome-tech-videos" ["l"="27.422,-19.516"]
"mickey0524/flink-streaming-source-analysis" ["l"="11.719,23.913"]
"Macr0phag3/GithubMonitor" ["l"="-10.56,-45.28"]
"wwwbjqcom/mysql_audit" ["l"="11.464,23.39"]
"zr-hebo/sniffer-agent" ["l"="-13.217,3.309"]
"zqhxuyuan/kafka-book" ["l"="11.821,23.795"]
"wangliangbd/SparkStreaming_Store_KafkaTopicOffset_To_HBase" ["l"="11.797,23.844"]
"Thinkgamer/Hadoop-Spark-Learning" ["l"="11.853,23.486"]
"oap-project/sql-ds-cache" ["l"="11.478,23.977"]
"oap-project/gazelle-jni" ["l"="11.545,23.984"]
"gmmstrive/flink-connector-clickhouse" ["l"="-13.611,-4.09"]
"InterestingLab/seatunnel" ["l"="11.767,23.812"]
"omnisci/mapd-connector" ["l"="11.794,24.005"]
"omnisci/mapd-core" ["l"="11.814,24.008"]
"druid-io/docker-druid" ["l"="11.642,24.116"]
"ing-bank/scruid" ["l"="11.668,24.131"]
"anskarl/druid-docker-cluster" ["l"="11.702,24.144"]
"strymon-system/ds2" ["l"="11.759,23.901"]
"streamnative/pulsar-spark" ["l"="11.928,23.841"]
"streamnative/pulsar-io-kafka" ["l"="11.902,23.83"]
"ivi-ru/flink-clickhouse-sink" ["l"="-13.587,-4.139"]
"microsoft/Dhalion" ["l"="11.81,23.92"]
"zhang637/kafka_spark_hbase_demo" ["l"="11.84,23.633"]
"javachen/grab" ["l"="21.755,36.599"]
"qidasheng/storm-kafka-xlog" ["l"="11.825,23.622"]
"caroljmcdonald/SparkStreamingHBaseExample" ["l"="11.572,23.875"]
"MattFlood7/LinkedInBot" ["l"="11.441,25.659"]
"SethRzeszutek/LinkedIn-Bot" ["l"="11.456,25.68"]
"helloitsim/LInBot" ["l"="11.431,25.689"]
"hiimim/LInBot" ["l"="11.426,25.673"]
"ehiggs/spark-terasort" ["l"="11.232,23.912"]
"rxin/spark" ["l"="11.179,23.89"]
"opendistro-for-elasticsearch/k-NN" ["l"="-7.165,3.645"]
"medcl/infini-gateway" ["l"="-6.938,2.322"]
"gpuopenanalytics/libgdf" ["l"="11.829,24.154"]
"gpuopenanalytics/demo-docker" ["l"="11.841,24.177"]
"gpuopenanalytics/dask_gdf" ["l"="11.818,24.137"]
"rapidsai/cudf-alpha" ["l"="11.874,24.21"]
"zjffdu/flink-sql-cookbook-on-zeppelin" ["l"="11.83,23.82"]
"MichaelDrogalis/voluble" ["l"="11.81,23.817"]
"airbnb/nimbus" ["l"="11.969,24.716"]
"beemojs/beemo" ["l"="11.964,24.733"]
"datafuselabs/datafuse" ["l"="-10.895,5.279"]
"MaterializeInc/materialize" ["l"="-10.848,5.387"]
"amundsen-io/amundsen" ["l"="13.755,23.763"]
"dantezhao/data-group" ["l"="11.885,23.721"]
"Mohitkr95/Best-Data-Science-Resources" ["l"="11.849,23.294"]
"ayonroy2000/100DaysOfMLCode" ["l"="26.049,-21.619"]
"Leo-G/Data-Science-Wiki" ["l"="23.387,30.604"]
"tunguz/ML_Resources" ["l"="23.793,30.245"]
"krypticmouse/ML-Self-Starter-Pack" ["l"="11.893,23.221"]
"smv1999/CompetitiveProgrammingQuestionBank" ["l"="31.464,-21.817"]
"Jassi10000/LGM-SOC-21" ["l"="31.691,-21.954"]
"PiercingDan/spark-Jupyter-AWS" ["l"="11.181,24.202"]
"rdblue/s3committer" ["l"="11.316,24.104"]
"broxtronix/spark-gce" ["l"="11.197,24.182"]
"gbrueckl/Databricks.API.PowerShell" ["l"="10.898,24.237"]
"tribbloid/ISpark" ["l"="9.483,24.713"]
"NFLabs/z-manager" ["l"="11.244,24.235"]
"apache/tajo" ["l"="11.248,24.304"]
"cloudera/spark-timeseries" ["l"="11.28,24.18"]
"apache/incubator-flink" ["l"="11.117,24.29"]
"airbnb/BuckSample" ["l"="11.715,24.443"]
"airbnb/camus" ["l"="11.762,24.439"]
"airbnb/browser-shims" ["l"="11.737,24.426"]
"hohonuuli/sparknotebook" ["l"="9.518,24.729"]
"ddf-project/DDF" ["l"="26.776,33.852"]
"collectivemedia/spark-ext" ["l"="11.189,24.152"]
"mrsqueeze/spark-hash" ["l"="18.544,25.421"]
"dataArtisans/yahoo-streaming-benchmark" ["l"="11.65,23.932"]
"intel-hadoop/storm-benchmark" ["l"="11.589,24.041"]
"apache/incubator-crail" ["l"="28.125,35.096"]
"yueyunyue/liteflow" ["l"="11.584,23.53"]
"hortonworks/structor" ["l"="-8.168,1.062"]
"unicredit/hbase-rdd-examples" ["l"="11.379,24.028"]
"HuaweiBigData/astro" ["l"="11.406,24.047"]
"jorgecarleitao/datafusion-python" ["l"="11.838,24.001"]
"apache/giraph" ["l"="10.429,26.569"]
"apache/chukwa" ["l"="11.117,23.762"]
"UrbanInstitute/spark-social-science" ["l"="10.876,24.053"]
"dimajix/spark-training" ["l"="10.985,24.102"]
"andfanilo/pyspark-tutorial" ["l"="10.866,24.071"]
"cfregly/fluxcapacitor" ["l"="11.027,22.573"]
"szilard/benchm-ml" ["l"="20.318,43.65"]
"didi/gatekeeper" ["l"="11.189,23.267"]
"didi/collection" ["l"="11.167,23.224"]
"QiangCai/CarbonDataLearning" ["l"="11.446,24.104"]
"facetjs/facetjs" ["l"="11.687,24.203"]
"7eggs/node-druid-query" ["l"="11.663,24.177"]
"yahoo/druid-dashboard" ["l"="11.663,24.192"]
"MrPowers/delta-examples" ["l"="11.086,24.146"]
"iboxdb/ftserver" ["l"="11.505,24.626"]
"mkuthan/example-spark-kafka" ["l"="11.351,24.11"]
"jerryshao/spark-kafka-0-8-sql" ["l"="11.401,24.126"]
"E-SoulDataGroup/spark_streaming_kafka_offset" ["l"="11.71,23.872"]
"koeninger/kafka-exactly-once" ["l"="10.583,26.131"]
"LinMingQiang/spark-kafka" ["l"="11.624,23.884"]
"sksamuel/avro4s" ["l"="9.88,24.933"]
"laserson/avro2parquet" ["l"="11.279,24.082"]
"holdenk/elasticsearchspark" ["l"="11.046,23.908"]
"holdenk/fastdataprocessingwithsparkexamples" ["l"="11.023,23.897"]
"coderplay/perfj" ["l"="8.877,21.511"]
"wecite/papers" ["l"="9.15,19.881"]
"ngaut/builddatabase" ["l"="-11.042,4.974"]
"codefollower/Lealone" ["l"="8.866,19.936"]
"huawei-noah/streamDM" ["l"="25.047,34.137"]
"sunbow1/SparkMLlibDeepLearn" ["l"="11.573,23.907"]
"chimpler/blog-spark-food-recommendation" ["l"="11.667,23.945"]
"swartzrock/LearningScalaMaterials" ["l"="11.056,24.241"]
"Ryan--Yang/CBoard-boot" ["l"="11.457,23.44"]
"cerndb/SparkPlugins" ["l"="11.373,24.135"]
"codingdebugallday/image-recognition" ["l"="12.095,23.627"]
"codingdebugallday/dtx-explore" ["l"="12.084,23.633"]
"codingdebugallday/juc-explore" ["l"="12.078,23.626"]
"codingdebugallday/spark-explore" ["l"="12.087,23.654"]
"codingdebugallday/spring-cloud-stream-explore" ["l"="12.088,23.644"]
"codingdebugallday/DataX" ["l"="12.092,23.637"]
"codingdebugallday/azkaban" ["l"="12.087,23.622"]
"codingdebugallday/azkaban-mail-service" ["l"="12.1,23.644"]
"codingdebugallday/docker-kubernetes" ["l"="12.103,23.634"]
"codingdebugallday/pub-sub-explore" ["l"="12.096,23.653"]
"NVIDIA/spark-rapids" ["l"="11.458,24.026"]
"NVIDIA/spark-rapids-examples" ["l"="11.492,24.108"]
"microsoft/hyperspace" ["l"="11.371,24.01"]
"NVIDIA/spark-rapids-jni" ["l"="11.493,24.058"]
"rapidsai/rmm" ["l"="27.99,35.498"]
"NVIDIA/spark-rapids-tools" ["l"="11.481,24.072"]
"NVIDIA/spark-rapids-benchmarks" ["l"="11.49,24.086"]
"NVIDIA/spark-xgboost-examples" ["l"="11.502,24.093"]
"NVIDIA/NVTabular" ["l"="22.633,36.938"]
"nipy/nitime" ["l"="28.457,37.308"]
"simonsfoundation/CaImAn" ["l"="29.442,37.768"]
"AbsaOSS/spline" ["l"="13.928,23.847"]
"apache/pulsar-site" ["l"="12.034,23.796"]
"spring-projects-experimental/spring-pulsar" ["l"="12.071,23.787"]
"streamthoughts/apache-pulsar-cheat-sheet" ["l"="12.046,23.801"]
"streamnative/pulsar-rs" ["l"="12.106,23.817"]
"VaughnVernon/ReactiveMessagingPatterns_ActorModel" ["l"="9.591,24.869"]
"manuelbernhardt/reactive-web-applications" ["l"="11.05,24.271"]
"Hawstein/play-for-scala-developers" ["l"="9.112,19.807"]
"jsuereth/scala-arm" ["l"="9.726,24.724"]
"jpmml/jpmml-sparkml-xgboost" ["l"="10.807,24.08"]
"hadooparchitecturebook/clickstream-tutorial" ["l"="10.99,24.375"]
"hadooparchitecturebook/SparkOnALog" ["l"="10.997,24.359"]
"hadooparchitecturebook/SparkStreaming.Sessionization" ["l"="11.007,24.366"]
"hadooparchitecturebook/fraud-detection-tutorial" ["l"="11.006,24.387"]
"wolfstudy/pulsar-client-go" ["l"="12.112,23.873"]
"Comcast/pulsar-client-go" ["l"="12.126,23.863"]
"streamnative/mop" ["l"="12.099,23.836"]
"apache/bigtop" ["l"="11.355,23.858"]
"apache/hama" ["l"="10.46,26.59"]
"intel-machine-learning/DistML" ["l"="22.904,37.358"]
"petuum/bosen" ["l"="26.875,33.964"]
"dmlc/parameter_server" ["l"="26.844,33.974"]
"cloudml/zen" ["l"="22.892,37.336"]
"rotationsymmetry/sparkxgboost" ["l"="11.14,24.093"]
"wxgzgl/flinkx-web-ui" ["l"="11.798,23.647"]
"rapidsai/pygdf" ["l"="11.941,24.282"]
"rapidsai/libgdf" ["l"="11.976,24.309"]
"apache/incubator-zipkin" ["l"="11.896,25.059"]
"apache/incubator-zipkin-brave" ["l"="11.926,25.069"]
"openopps/openopps-platform" ["l"="11.909,25.091"]
"airlift/airbase" ["l"="11.589,24.001"]
"martint/jmxutils" ["l"="9.002,21.654"]
"qubole/presto-udfs" ["l"="11.567,23.997"]
"airlift/airline" ["l"="9.041,21.557"]
"airlift/discovery" ["l"="11.601,23.99"]
"proofpoint/platform" ["l"="11.603,24.011"]
"bytefish/FlinkExperiments" ["l"="11.771,23.884"]
"StephanEwen/flink-demos" ["l"="11.848,23.868"]
"project-flink/flink-perf" ["l"="11.734,23.905"]
"linkedin/iceberg" ["l"="11.547,23.999"]
"linkedin/linkedin-calcite" ["l"="11.529,23.992"]
"IBM/sparksql-for-hbase" ["l"="11.478,24.026"]
"irvingc/dbscan-on-spark" ["l"="18.566,25.227"]
"yahoo/egads" ["l"="22.943,35.139"]
"vdurmont/semver4j" ["l"="12.772,24.638"]
"milesj/aesthetic" ["l"="11.941,24.751"]
"airbnb/react-component-variations" ["l"="11.922,24.733"]
"guoding83128/OpenDL" ["l"="11.049,24.109"]
"petuum/public" ["l"="26.85,34.012"]
"yajiemiao/pdnn" ["l"="0.736,39.75"]
"skrusche63/spark-fm" ["l"="22.894,37.321"]
"ZuInnoTe/hadoopoffice" ["l"="11.373,24.091"]
"fabragaMS/ADPE2E" ["l"="-12.915,-44.128"]
"Azure-Samples/Synapse" ["l"="-12.895,-44.127"]
"databrickslabs/tempo" ["l"="10.89,24.222"]
"databrickslabs/mosaic" ["l"="18.647,25.013"]
"databrickslabs/geoscan" ["l"="10.835,24.238"]
"databrickslabs/dataframe-rules-engine" ["l"="10.916,24.215"]
"paiqo/Databricks-VSCode" ["l"="10.823,24.255"]
"apache/iotdb-web-workbench" ["l"="11.868,23.97"]
"deanwampler/programming-scala-book-code-examples" ["l"="11.035,23.986"]
"endymecy/spark-config-and-tuning" ["l"="11.449,23.966"]
"SparkTC/systemml" ["l"="11.358,24.191"]
"Microsoft/multiverso" ["l"="26.918,33.961"]
"Samsung/veles" ["l"="27.017,34.093"]
"IDSIA/brainstorm" ["l"="27.044,34.164"]
"PacktPublishing/PySpark-Cookbook" ["l"="10.852,24.003"]
"matteoredaelli/pyspark-examples" ["l"="11.05,24.039"]
"awantik/pyspark-learning" ["l"="10.867,24.036"]
"Saurav3218/Pyspark_Questions_SKS" ["l"="10.908,24.147"]
"martandsingh/ApacheSpark" ["l"="10.89,24.154"]
"itversity/data-engineering-spark" ["l"="10.883,24.137"]
"lightcopy/parquet-index" ["l"="11.458,23.992"]
"stratosphere/stratosphere" ["l"="11.085,24.335"]
"stratosphere/stratosphere-streaming" ["l"="11.09,24.316"]
"continuuity/weave" ["l"="10.613,26.459"]
"amplab/training-scripts" ["l"="10.963,23.928"]
"julianhyde/sqlline" ["l"="11.584,23.803"]
"apache/calcite-avatica" ["l"="11.675,23.895"]
"janino-compiler/janino" ["l"="9.093,21.598"]
"julianhyde/linq4j" ["l"="10.793,26.371"]
"julianhyde/optiq" ["l"="10.622,26.409"]
"ericxiao251/spark-syntax" ["l"="10.975,24.084"]
"runawayhorse001/LearningApacheSpark" ["l"="10.85,24.058"]
"walkr/oi" ["l"="22.273,3.874"]
"EverythingMe/redshift_console" ["l"="-10.175,-1.644"]
"onefinestay/nameko" ["l"="22.535,3.814"]
"paulasmuth/fnordmetric" ["l"="8.971,-30.323"]
"kvh/ramp" ["l"="27.251,34.075"]
"epantry/django-sql-explorer" ["l"="25.612,0.77"]
"yhat/db.py" ["l"="21.663,28.84"]
"EverythingMe/rainbow" ["l"="11.516,24.329"]
"tylertreat/BigQuery-Python" ["l"="-7.446,-0.561"]
"mikesall/charted" ["l"="10.358,-33.795"]
"clarkduvall/serpy" ["l"="25.758,1.131"]
"docker-flink/examples" ["l"="11.811,23.862"]
"cld378632668/A-community-detect-System-based-on-GraphX" ["l"="9.67,19.629"]
"endymecy/spark-programming-guide-zh-cn" ["l"="11.43,23.982"]
"amplab/graphx" ["l"="10.425,26.545"]
"cld378632668/Source-Notes-Chinese-translations-of-Spark-GraphX" ["l"="9.615,19.628"]
"weijie-he/jinyong" ["l"="11.414,23.983"]
"streamsets/datacollector-docker" ["l"="11.691,23.921"]
"openzipkin/zipkin-aws" ["l"="11.802,25.061"]
"mkuthan/example-spark" ["l"="11.314,24.125"]
"itisaid/cmdb" ["l"="11.561,24.374"]
"zhihuili/robot" ["l"="11.549,24.374"]
"zlb1028/learning-flink" ["l"="11.848,23.798"]
"sangaline/advanced-web-scraping-tutorial" ["l"="11.349,25.579"]
"spinlud/py-linkedin-jobs-scraper" ["l"="11.365,25.689"]
"sparkbyexamples/spark-examples" ["l"="10.82,24.069"]
"rockthejvm/spark-essentials" ["l"="10.585,24.158"]
"microsoft/sql-spark-connector" ["l"="10.931,24.199"]
"Baeldung/scala-tutorials" ["l"="10.764,24.084"]
"rymurr/flight-spark-source" ["l"="11.599,23.9"]
"BryanCutler/SparkArrowFlight" ["l"="11.66,23.92"]
"NathanDuma/LinkedIn-Easy-Apply-Bot" ["l"="11.457,25.732"]
"wodsuz/EasyApplyJobsBot" ["l"="11.476,25.745"]
"brutasse/graphite-api" ["l"="-15.559,-4.845"]
"dromara/CloudEon" ["l"="11.623,23.471"]
"lingbin/kudu_src_analysis" ["l"="11.378,23.895"]
"zhangyuc/splash" ["l"="11.287,24.253"]
"TrueCar/mleap" ["l"="11.302,24.268"]
"dusenberrymw/systemml-nn" ["l"="11.32,24.205"]
"SparkTC/r4ml" ["l"="11.308,24.225"]
"SETL-Framework/setl" ["l"="11.3,24.106"]
"smart-data-lake/smart-data-lake" ["l"="11.29,24.093"]
"cloudera-labs/envelope" ["l"="11.299,24.139"]
"autodeployai/pmml4s" ["l"="10.67,24.161"]
"openscoring/openscoring-python" ["l"="10.757,24.137"]
"sns-sdks/python-facebook" ["l"="11.377,25.526"]
"everping/Linkedin-Authentication-Challenge" ["l"="11.403,25.545"]
"adw0rd/instagrapi" ["l"="-4.559,-45.158"]
"vysecurity/LinkedInt" ["l"="-6.86,-43.291"]
"nickls/linkedin-unofficial-api" ["l"="11.41,25.536"]
"coding-ai/EasyApply-Linkedin" ["l"="11.526,25.753"]
"mariiio/linkedin_connect" ["l"="11.453,25.754"]
"madingess/EasyApplyBot" ["l"="11.504,25.71"]
"ichomchom/Indeed-Bot" ["l"="11.5,25.743"]
"wodsuz/LinkedinEasyApplyJobsBot" ["l"="11.514,25.726"]
"electrum/tpch-dbgen" ["l"="11.052,23.83"]
"viktorleis/perfevent" ["l"="-10.858,4.971"]
"meshplus/premo" ["l"="11.488,23.253"]
"meshplus/pier-client-ethereum" ["l"="11.484,23.228"]
"chris-lovejoy/job-scraper" ["l"="11.513,25.632"]
"GoogleCloudPlatform/DataflowJavaSDK" ["l"="11.341,24.152"]
"GoogleCloudPlatform/DataflowJavaSDK-examples" ["l"="11.381,24.174"]
"GoogleCloudPlatform/DataflowPythonSDK" ["l"="11.393,24.161"]
"dataArtisans/flink-dataflow" ["l"="11.363,24.172"]
"linkedin/Cubert" ["l"="10.379,26.263"]
"apache/incubator-samoa" ["l"="25.067,34.121"]
"GoogleCloudPlatform/cloud-bigtable-examples" ["l"="-7.185,-0.727"]
"xhochy/fletcher" ["l"="25.018,33.74"]
"zekelabs/pyspark" ["l"="10.828,23.994"]
"wiibrew/Faster-RCNN_TF" ["l"="11.627,24.416"]
"semver4j/semver4j" ["l"="12.795,24.651"]
"thunderain-project/StreamSQL" ["l"="11.393,24.143"]
"dask/hdfs3" ["l"="10.919,23.906"]
"jingw/pyhdfs" ["l"="10.989,23.929"]
"pywebhdfs/pywebhdfs" ["l"="10.993,23.95"]
"SeldonIO/seldon-core" ["l"="25.392,34.143"]
"epfldata/squall" ["l"="10.597,26.299"]
"uber/chaperone" ["l"="10.271,22.513"]
"eBay/Eagle" ["l"="10.454,26.256"]
"dask/knit" ["l"="10.875,23.878"]
"ContinuumIO/libhdfs3-downstream" ["l"="10.875,23.895"]
"ShifuML/guagua" ["l"="10.71,24.229"]
"apache/incubator-gearpump" ["l"="9.527,24.842"]
"apache/arrow-ballista" ["l"="-10.808,5.367"]
"jorgecarleitao/arrow2" ["l"="-10.792,5.364"]
"flock-lab/flock" ["l"="11.58,24.02"]
"jorgecarleitao/parquet2" ["l"="-10.808,5.332"]
"timvw/qv" ["l"="-10.701,5.455"]
"delta-io/delta-rs" ["l"="-10.783,5.391"]
"takidau/streamingbook" ["l"="11.644,23.893"]
"dyweb/papers-notebook" ["l"="-11.181,5.148"]
"jdereg/java-util" ["l"="12.518,24.491"]
"SQiShER/java-object-diff" ["l"="9.215,21.309"]
"indeedeng/util" ["l"="12.361,24.414"]
"cloudera/sentry" ["l"="11.361,23.889"]
"DataThirstLtd/azure.databricks.cicd.tools" ["l"="10.884,24.254"]
"intel-hadoop/hive-0.9-panthera" ["l"="11.769,23.939"]
"Netflix/suro" ["l"="11.001,22.614"]
"samuell/sciluigi" ["l"="11.65,24.254"]
"common-workflow-language/common-workflow-language" ["l"="21.565,43.19"]
"knipknap/SpiffWorkflow" ["l"="26.123,1.121"]
"pinterest/terrapin" ["l"="11.672,24.272"]
"asdaraujo/edge2ai-workshop" ["l"="11.882,23.795"]
"cloudera-labs/edge2ai-workshop" ["l"="11.841,23.767"]
"varadaio/presto-workload-analyzer" ["l"="11.629,23.982"]
"leoChaoGlut/presto-research" ["l"="11.619,23.994"]
"huangfox/dpkb" ["l"="11.648,23.997"]
"razorpay/trino-gateway" ["l"="11.601,23.97"]
"trinodb/charts" ["l"="11.67,24"]
"DonnyZone/ANTLR4-SqlBase" ["l"="11.465,23.927"]
"neoremind/coddding" ["l"="-11.781,5.248"]
"yahoo/storm-perf-test" ["l"="11.611,24.064"]
"delta-io/kafka-delta-ingest" ["l"="11.134,24.13"]
"databricks/dbt-databricks" ["l"="11.089,24.161"]
"amplab/velox-modelserver" ["l"="11.224,24.225"]
"factorie/factorie" ["l"="9.566,24.76"]
"coral-streaming/coral" ["l"="11.28,24.202"]
"ankurdave/part" ["l"="-10.862,4.806"]
"InitialDLab/Simba" ["l"="18.605,25.06"]
"amplab/ml-matrix" ["l"="11.159,24.193"]
"databricks/spark-integration-tests" ["l"="11.267,24.098"]
"mesos/spark-ec2" ["l"="11.256,24.124"]
"dantezhao/data-warehouse" ["l"="11.984,23.699"]
"datastax/pulsar-helm-chart" ["l"="12.139,23.906"]
"tophua/spark1.52" ["l"="11.588,23.869"]
"marsishandsome/SparkSQL-Internal" ["l"="11.421,23.92"]
"sunjincheng121/enjoyment.code" ["l"="12.028,23.638"]
"didi/LogIAM" ["l"="11.366,23.438"]
"runawayhorse001/CheatSheet" ["l"="10.803,24.052"]
"runawayhorse001/PythonTipsDS" ["l"="10.797,24.036"]
"runawayhorse001/DatamingTutorial" ["l"="10.816,24.045"]
"java-operator-sdk/java-operator-sdk" ["l"="11.771,23.866"]
"quarkiverse/quarkus-operator-sdk" ["l"="11.821,23.884"]
"fabric8io/kubernetes-client" ["l"="9.273,21.262"]
"dekorateio/dekorate" ["l"="10.077,23.025"]
"sundrio/sundrio" ["l"="9.985,23.092"]
"spring-projects/spring-data-gemfire" ["l"="11.422,24.332"]
"spring-projects/spring-data-geode" ["l"="11.421,24.352"]
"hakimkhalafi/linkedin-scraper" ["l"="11.414,25.633"]
"hurtn/datalake-on-ADLS" ["l"="10.904,24.307"]
"qubole/quark" ["l"="11.552,24.019"]
"Azure/azure-cosmosdb-spark" ["l"="10.887,24.294"]
"CosmosDB/labs" ["l"="10.837,24.343"]
"anagha-microsoft/databricks-workshops" ["l"="10.896,24.279"]
"Azure/azure-kusto-spark" ["l"="10.85,24.311"]
"Azure-Samples/azure-cosmos-db-change-feed-dotnet-retail-sample" ["l"="10.858,24.327"]
"kromerm/adfdataflowdocs" ["l"="-12.951,-44.153"]
"hdinsight/hdinsight-dev-guide" ["l"="10.876,24.326"]
"jaceklaskowski/kafka-workshop" ["l"="11.216,24.159"]
"streamnative/pulsar" ["l"="12.095,23.858"]
"streamnative/pulsar-manager" ["l"="12.084,23.842"]
"apache/pulsar-client-reactive" ["l"="12.067,23.806"]
"HotelsDotCom/circus-train" ["l"="11.501,24.237"]
"HotelsDotCom/beeju" ["l"="11.516,24.246"]
"ExpediaGroup/beekeeper" ["l"="11.5,24.257"]
"spotify/zoltar" ["l"="9.614,25.2"]
"qichangjian/dmpDemo" ["l"="11.838,23.571"]
"senseidb/bobo" ["l"="11.421,24.82"]
"ExpediaDotCom/haystack-ui" ["l"="11.787,24.856"]
"ExpediaDotCom/haystack-agent" ["l"="11.739,24.858"]
"ExpediaDotCom/haystack-adaptive-alerting" ["l"="11.774,24.871"]
"ExpediaDotCom/haystack-trends" ["l"="11.741,24.841"]
"HotelsDotCom/pitchfork" ["l"="11.758,24.875"]
"ExpediaDotCom/haystack-traces" ["l"="11.751,24.863"]
"ExpediaDotCom/haystack-idl" ["l"="11.782,24.836"]
"ExpediaDotCom/haystack-metrics" ["l"="11.767,24.861"]
"xtstc131/LinkedIn-Scraper" ["l"="11.389,25.692"]
"fdupuis659/LinkedIn-Automatic-Job-Applier" ["l"="11.549,25.771"]
"xephonhq/awesome-time-series-database" ["l"="22.39,35.884"]
"dalmatinerdb/dalmatinerdb" ["l"="34.354,-26.046"]
"dustin/seriesly" ["l"="-14.869,3.823"]
"powturbo/TurboPFor" ["l"="-14.747,22.02"]
"google/supersonic" ["l"="12.008,24.231"]
"indeedeng/lsmtree" ["l"="12.191,24.33"]
"lemire/simdcomp" ["l"="-14.779,21.994"]
"SuperJohn/spark-and-python-for-big-data-with-pyspark" ["l"="10.836,24.043"]
"timescale/prometheus-postgresql-adapter" ["l"="12.15,24.169"]
"scalanlp/chalk" ["l"="9.528,24.717"]
"dlwh/epic" ["l"="9.553,24.723"]
"vspiewak/twitter-sentiment-analysis" ["l"="11.061,24.083"]
"FurongHuang/SpectralLDA-TensorSpark" ["l"="11.069,24.097"]
"master/spark-stemming" ["l"="11.085,24.089"]
"jaceklaskowski/spark-kubernetes-book" ["l"="11.177,24.113"]
"databricks/databricks-cli" ["l"="11.022,24.196"]
"databrickslabs/migrate" ["l"="10.997,24.221"]
"databricks/ide-best-practices" ["l"="10.986,24.175"]
"Crework/A-to-Z-Resources-for-Students" ["l"="11.94,23.13"]
"Crework/Deep-Learning-Resources" ["l"="11.959,23.128"]
"Crework/Machine-Learning-Path" ["l"="11.949,23.12"]
"Crework/ML-Resources" ["l"="11.944,23.142"]
"Crework/Mathematics-for-Machine-Learning" ["l"="11.932,23.144"]
"semantalytics/awesome-druid" ["l"="11.716,24.13"]
"Intel-bigdata/Spark-PMoF" ["l"="11.505,23.999"]
"rockthejvm/udemy-scala-beginners" ["l"="10.5,24.176"]
"rockthejvm/udemy-scala-advanced" ["l"="10.471,24.185"]
"rockthejvm/udemy-akka-essentials" ["l"="10.451,24.197"]
"rockthejvm/udemy-akka-http" ["l"="10.454,24.176"]
"openmessaging/openmessaging-dledger-jepsen" ["l"="9.785,21.025"]
"oppo-bigdata/shuttle" ["l"="-12.057,-0.742"]
"lightning-viz/lightning-scala" ["l"="11.187,24.291"]
"freeman-lab/spark-ml-streaming" ["l"="11.187,24.324"]
"areski/python-nvd3" ["l"="21.686,28.765"]
"ellisonbg/altair" ["l"="21.564,28.863"]
"adamhajari/spyre" ["l"="21.613,28.815"]
"jakevdp/mpld3" ["l"="21.644,28.797"]
"bloomberg/bqplot" ["l"="21.442,28.848"]
"lightning-viz/lightning.js" ["l"="11.201,24.28"]
"rockthejvm/udemy-akka-streams" ["l"="10.417,24.199"]
"rockthejvm/udemy-akka-persistence-starter" ["l"="10.435,24.211"]
"streamnative/pulsar-tracing" ["l"="12.044,23.822"]
"hammerlab/spree" ["l"="11.081,24.069"]
"rxin/jvm-unsafe-utils" ["l"="-10.915,4.711"]
"gumption/Python_for_Data_Science" ["l"="23.317,30.464"]
"DrSkippy/Data-Science-45min-Intros" ["l"="23.26,30.741"]
"rouseguy/intro2stats" ["l"="23.207,30.668"]
"ujjwalkarn/DataScienceR" ["l"="20.248,43.632"]
"fasouto/awesome-dataviz" ["l"="15.329,-31.361"]
"squito/spark-memory" ["l"="11.465,23.975"]
"dataArtisans/flink-training" ["l"="11.795,23.884"]
"tillrohrmann/cep-monitoring" ["l"="12.465,26.101"]
"mushketyk/flink-examples" ["l"="11.749,23.889"]
"dataArtisans/kafka-example" ["l"="11.782,23.897"]
"krishnan-r/sparkmonitor" ["l"="11.223,24.314"]
"AzureCosmosDB/scenario-based-labs" ["l"="10.817,24.338"]
"microsoft/sqlworkshops-azuresqlworkshop" ["l"="27.353,18.539"]
"clulab/reach" ["l"="10.958,23.976"]
"clulab/odin-examples" ["l"="10.973,23.97"]
"rich-iannone/so-many-pyspark-examples" ["l"="10.809,24.009"]
"databricks/terraform-provider-databricks" ["l"="10.915,24.386"]
"databricks/terraform-databricks-examples" ["l"="10.943,24.34"]
"gaodayu168/datasophon-website" ["l"="11.611,23.498"]
"apache/flink-statefun-playground" ["l"="11.786,23.823"]
"combust-ml/mleap" ["l"="11.298,24.308"]
"Azure/azure-event-hubs" ["l"="22.708,14.669"]
"databrickslabs/databricks-sync" ["l"="10.967,24.222"]
"databrickslabs/delta-oms" ["l"="10.951,24.194"]
"databricks/unity-catalog-setup" ["l"="10.981,24.235"]
"datainfrahq/druid-operator" ["l"="11.857,24.071"]
"ballastdata/dsoi-spec" ["l"="11.884,24.082"]
"datainfrahq/dsoi-spec" ["l"="11.885,24.072"]
"opstree/druid-exporter" ["l"="11.84,24.076"]
"grafadruid/go-druid" ["l"="11.825,24.06"]
"pranab/hoidla" ["l"="10.555,23.905"]
"pferrel/solr-recommender" ["l"="10.721,26.352"]
"etsy/Conjecture" ["l"="10.76,26.258"]
"holdenk/chef-cookbook-spark" ["l"="10.995,23.885"]
"holdenk/fastdataprocessingwithspark-sharkexamples" ["l"="10.979,23.88"]
"openzipkin/zipkin-go-opentracing" ["l"="-12.63,1.615"]
"jessyZu/dubbo-zipkin-spring-starter" ["l"="9.236,18.718"]
"spring-cloud/spring-cloud-sleuth" ["l"="9.417,21.084"]
"takidau/animations" ["l"="11.714,23.939"]
"Venkata09/BigDataCertificationPrep" ["l"="11.013,24.078"]
"rockthejvm/spark-optimization" ["l"="10.547,24.16"]
"rockthejvm/advanced-scala" ["l"="10.541,24.177"]
"rockthejvm/scala-beginners" ["l"="10.558,24.183"]
"rockthejvm/udemy-spark-streaming" ["l"="10.561,24.149"]
"rockthejvm/scala-problems-interviews" ["l"="10.547,24.138"]
"rockthejvm/spark-performance-tuning" ["l"="10.565,24.165"]
"alibaba/simplehbaseviewer" ["l"="12.146,23.373"]
"zacharyzhanghao/orm-hbase" ["l"="12.155,23.386"]
"alibaba/druid-ha" ["l"="9.642,21.021"]
"allwefantasy/delta-plus" ["l"="11.533,23.827"]
"bebee4java/sqlalarm" ["l"="11.534,23.849"]
"allwefantasy/mlsql-api-console" ["l"="11.496,23.77"]
"allwefantasy/mlsql-web-console" ["l"="11.514,23.778"]
"apache/flink-connectors" ["l"="11.741,23.813"]
"dianfu/pyflink-faq" ["l"="11.896,23.906"]
"ottogroup/metascope" ["l"="21.702,28.598"]
"XichengDong/simplespark" ["l"="11.691,24.25"]
"gearpump/gearpump" ["l"="9.49,24.82"]
"velvia/links" ["l"="9.574,24.868"]
"velvia/filo" ["l"="11.346,24.214"]
"levkhomich/akka-tracing" ["l"="9.427,24.794"]
"trafodion/trafodion" ["l"="11.449,24.304"]
"trafodion/core" ["l"="11.448,24.318"]
"susanli2016/Machine-Learning-with-AndrewNg" ["l"="10.736,23.998"]
"rockthejvm/spark-optimization-2" ["l"="10.523,24.155"]
"MrPowers/spark-sbt.g8" ["l"="11.151,24.135"]
"holdenk/sparkProjectTemplate.g8" ["l"="11.152,24.174"]
"hablapps/doric" ["l"="11.137,24.196"]
"dantezhao/paper-notes" ["l"="11.933,23.726"]
"databrickslabs/feature-factory" ["l"="10.863,24.235"]
"jingwei/cleo-primer" ["l"="11.45,24.863"]
"SiriDB/siridb-server" ["l"="12.227,24.265"]
"agile-lab-dev/wasp" ["l"="11.345,23.291"]
"piotr-kalanski/data-quality-monitoring" ["l"="11.353,23.309"]
"jdereg/n-cube" ["l"="12.623,24.509"]
"intfrr/lsmtree" ["l"="12.23,24.341"]
"jordw/heftydb" ["l"="12.221,24.366"]
"indeedeng/imhotep" ["l"="14.608,-32.571"]
"CODAIT/aardpfark" ["l"="10.686,24.106"]
"datamininggroup/pfa" ["l"="10.704,24.098"]
"decioferreira/omniauth-linkedin-oauth2" ["l"="11.635,25.603"]
"skorks/omniauth-linkedin" ["l"="11.662,25.621"]
"emorikawa/linkedin-oauth2" ["l"="11.617,25.587"]
"crflynn/databricks-api" ["l"="11.019,24.247"]
"rockthejvm/akka-essentials" ["l"="10.535,24.205"]
"rockthejvm/udemy-akka-serialization" ["l"="10.429,24.17"]
"rockthejvm/udemy-akka-remoting-clustering" ["l"="10.425,24.183"]
"Raphtory/Raphtory" ["l"="11.937,23.923"]
"fabianmurariu/docbrown" ["l"="11.963,23.933"]
"lorettax/DB-Lab" ["l"="11.979,23.807"]
"wflin2020/KotlinExtensions" ["l"="-25.687,19.094"]
"flutting/ff_stars" ["l"="-25.671,19.089"]
"2ndQuadrant/pg-tpch" ["l"="11.149,23.863"]
"solliancenet/azure-synapse-analytics-workshop-400" ["l"="-12.903,-44.135"]
"datastax/pulsar" ["l"="12.161,23.92"]
"datastax/pulsar-admin-console" ["l"="12.177,23.915"]
"intridea/omniauth-identity" ["l"="11.692,25.643"]
"hablapps/sparkOptics" ["l"="11.116,24.224"]
"memiiso/debezium-server-iceberg" ["l"="11.395,23.626"]
"MarquezProject/marquez" ["l"="13.806,23.784"]
"mohanakrishnavh/PySpark-Tutorial" ["l"="10.887,24.114"]
"flink-extended/dl-on-flink" ["l"="11.751,23.856"]
"prestodb/presto-yarn" ["l"="11.617,24.034"]
"swoop-inc/spark-records" ["l"="11.209,24.197"]
"OpenTSDB/asynchbase" ["l"="10.716,26.483"]
"sentric/hannibal" ["l"="10.654,26.451"]
"Ticketmaster/metrilyx-2.0" ["l"="20.534,-29.007"]
"streamnative/pulsar-admin-go" ["l"="12.133,23.807"]
"apache/pulsar-client-cpp" ["l"="12.149,23.808"]
"transceptor-technology/pyleri" ["l"="12.202,24.287"]
"transceptor-technology/libcleri" ["l"="12.234,24.299"]
"transceptor-technology/goleri" ["l"="12.217,24.303"]
"transceptor-technology/qpack" ["l"="12.225,24.29"]
"alexott/databricks-nutter-projects-demo" ["l"="10.955,24.213"]
"alexott/spark-playground" ["l"="10.939,24.215"]
"FRosner/spawncamping-dds" ["l"="11.375,23.283"]
"MrPowers/jodie" ["l"="10.979,24.155"]
"melentye/flink-kubernetes" ["l"="11.906,23.877"]
"melentye/flink-docker" ["l"="11.936,23.886"]
"znly/docker-druid" ["l"="11.688,24.131"]
"rmetzger/flink-streaming-etl" ["l"="11.831,23.907"]
"MARKETProtocol/dApp" ["l"="11.588,23.913"]
"darkjh/scalaflow" ["l"="11.326,24.264"]
"jhlch/scala-dataflow-dsl" ["l"="11.324,24.297"]
"databricks-demos/dbdemos" ["l"="10.997,24.309"]
"Crework/NLP-Resources" ["l"="11.922,23.17"]
"jdereg/n-cube-editor" ["l"="12.642,24.497"]
"solytic/sql-spark-connector" ["l"="10.9,24.199"]
"SQLPlayer/azure.datafactory.tools" ["l"="-12.965,-44.215"]
"Azure/azure-sqldb-spark" ["l"="10.867,24.209"]
"apache/yunikorn-core" ["l"="11.477,24.261"]
"rockthejvm/udemy-akka-persistence" ["l"="10.395,24.205"]
"lsds/StreamBench" ["l"="11.699,23.959"]
"zpasal/hbase-gui-admin" ["l"="12.084,23.487"]
"mapr-demos/SparkStreamingHBaseExample" ["l"="11.619,23.9"]
"jsuereth/sbt-in-action-examples" ["l"="9.884,24.536"]
"timescale/timescale-analytics" ["l"="12.17,24.139"]
"rdblue/parquet-cli" ["l"="11.292,24.154"]
"mli/parameter_server" ["l"="26.86,34.02"]
"jaberg/DeepLearningBenchmarks" ["l"="26.84,34.063"]
"jpatanooga/Metronome" ["l"="26.708,34.042"]
"getindata/kafka-connect-iceberg-sink" ["l"="11.353,23.556"]
"cloudfuse-io/buzz-rust" ["l"="11.908,24.02"]
"linkedin/bobo" ["l"="11.472,24.912"]
"Hang-Hu/SimpleController" ["l"="11.377,23.196"]
"valeriano-manassero/helm-charts" ["l"="11.708,24.026"]
"zqhZY/Flink-docker-HA" ["l"="11.876,23.861"]
"fabiog1901/OneNodeCDHCluster" ["l"="11.917,23.808"]
"skilld-labs/entity-rules-engine" ["l"="11.848,24.058"]
"GoogleCloudPlatform/processing-logs-using-dataflow" ["l"="-7.284,-0.762"]
"GoogleCloudPlatform/gcloud-python" ["l"="28.753,-30.347"]
"diennea/carapaceproxy" ["l"="12.174,23.84"]
"diennea/blazingcache" ["l"="12.186,23.862"]
"diennea/blobit" ["l"="12.186,23.846"]
"diennea/majordodo" ["l"="12.203,23.866"]
"h2oai/h2o.js" ["l"="11.165,24.297"]
"manuzhang/storm-benchmark" ["l"="11.624,24.054"]
"josonle/Learning-Spark" ["l"="11.71,23.38"]
"leoChaoGlut/presto-manager" ["l"="11.644,24.016"]
"SharpRay/spark-druid-connector" ["l"="11.629,24.128"]
"matthayes/azkaban-rb" ["l"="10.963,24.142"]
"apache/incubator-tajo" ["l"="11.228,24.414"]
"tajo-project/tajo" ["l"="11.238,24.37"]
"gingsmith/cocoa" ["l"="11.275,24.396"]
"gingsmith/proxcocoa" ["l"="11.28,24.341"]
"SnappyDataInc/spark-jobserver" ["l"="11.48,24.138"]
"geobioboo/pivot" ["l"="11.719,24.192"]
"apache/incubator-hop-website" ["l"="12.029,23.589"]
"deanhiller/databus" ["l"="11.969,24.364"]
"NVIDIA/spark-rapids-ml" ["l"="11.488,24.15"]
"runawayhorse001/SphinxGithub" ["l"="10.765,24.026"]
"wlhbdp/bdp-cdp" ["l"="11.853,23.574"]
"facetjs/facetjs.github.io" ["l"="11.71,24.22"]
"notall/shadowsocksr" ["l"="11.534,24.376"]
"tinohean/hugo" ["l"="11.763,24.216"]
}