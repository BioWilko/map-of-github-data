digraph G {
"yikangshen/Ordered-Neurons" -> "bojone/on-lstm"
"yikangshen/Ordered-Neurons" -> "yikangshen/PRPN"
"yikangshen/Ordered-Neurons" -> "harvardnlp/urnng"
"yikangshen/Ordered-Neurons" -> "iesl/diora"
"yikangshen/Ordered-Neurons" -> "yaushian/Tree-Transformer"
"yikangshen/Ordered-Neurons" -> "salesforce/awd-lstm-lm" ["e"=1]
"yikangshen/Ordered-Neurons" -> "dasguptar/treelstm.pytorch" ["e"=1]
"yikangshen/Ordered-Neurons" -> "qipeng/gcn-over-pruned-trees" ["e"=1]
"yikangshen/Ordered-Neurons" -> "jihunchoi/unsupervised-treelstm"
"yikangshen/Ordered-Neurons" -> "nikitakit/self-attentive-parser"
"yikangshen/Ordered-Neurons" -> "harvardnlp/compound-pcfg"
"yikangshen/Ordered-Neurons" -> "harvardnlp/var-attn" ["e"=1]
"yikangshen/Ordered-Neurons" -> "Smerity/sha-rnn" ["e"=1]
"yikangshen/Ordered-Neurons" -> "nyu-mll/spinn"
"yikangshen/Ordered-Neurons" -> "huggingface/pytorch-openai-transformer-lm" ["e"=1]
"clab/rnng" -> "harvardnlp/urnng"
"clab/rnng" -> "clab/lstm-parser"
"clab/rnng" -> "jihunchoi/unsupervised-treelstm"
"clab/rnng" -> "kmkurn/pytorch-rnng"
"clab/rnng" -> "yikangshen/PRPN"
"yzhangcs/parser" -> "nikitakit/self-attentive-parser"
"yzhangcs/parser" -> "yzhangcs/crfpar"
"yzhangcs/parser" -> "zhangmeishan/BiaffineDParser"
"yzhangcs/parser" -> "KhalilMrini/LAL-Parser"
"yzhangcs/parser" -> "juntaoy/biaffine-ner" ["e"=1]
"yzhangcs/parser" -> "hankcs/TreebankPreprocessing"
"yzhangcs/parser" -> "baidu/DDParser" ["e"=1]
"yzhangcs/parser" -> "bamtercelboo/PyTorch_Biaffine_Dependency_Parsing"
"yzhangcs/parser" -> "yzhangcs/crfsrl"
"yzhangcs/parser" -> "NLPInBLCU/BiaffineDependencyParsing"
"yzhangcs/parser" -> "XuezheMax/NeuroNLP2"
"yzhangcs/parser" -> "DoodleJZ/HPSG-Neural-Parser"
"yzhangcs/parser" -> "harvardnlp/pytorch-struct" ["e"=1]
"yzhangcs/parser" -> "HillZhang1999/MuCGEC" ["e"=1]
"yzhangcs/parser" -> "dropreg/R-Drop" ["e"=1]
"harvardnlp/urnng" -> "iesl/diora"
"harvardnlp/urnng" -> "yikangshen/PRPN"
"harvardnlp/urnng" -> "harvardnlp/compound-pcfg"
"harvardnlp/urnng" -> "jihunchoi/unsupervised-treelstm"
"harvardnlp/urnng" -> "mingdachen/disentangle-semantics-syntax"
"harvardnlp/urnng" -> "clab/rnng"
"harvardnlp/urnng" -> "jxhe/struct-learning-with-flow" ["e"=1]
"harvardnlp/urnng" -> "nyu-mll/spinn"
"harvardnlp/urnng" -> "yoonkim/neural-qcfg"
"harvardnlp/urnng" -> "hantek/distance-parser"
"Alibaba-NLP/MultilangStructureKD" -> "wangxinyu0922/Second_Order_SDP"
"Alibaba-NLP/MultilangStructureKD" -> "wangxinyu0922/Second_Order_Parsing"
"akjindal53244/dependency_parsing_tf" -> "SmartLi8/cs224n-assignment"
"zysite/biaffine-parser" -> "tdozat/Parser-v1"
"zysite/biaffine-parser" -> "daandouwe/biaffine-dependency-parser"
"zysite/biaffine-parser" -> "zhangmeishan/BiaffineDParser"
"zysite/biaffine-parser" -> "chantera/biaffineparser"
"bamtercelboo/PyTorch_Biaffine_Dependency_Parsing" -> "zhangmeishan/BiaffineDParser"
"bamtercelboo/PyTorch_Biaffine_Dependency_Parsing" -> "NLPInBLCU/BiaffineDependencyParsing"
"ufal/udpipe" -> "TakeLab/spacy-udpipe"
"ufal/udpipe" -> "CoNLL-UD-2018/UDPipe-Future"
"ufal/udpipe" -> "bnosac/udpipe" ["e"=1]
"ufal/udpipe" -> "buriy/spacy-ru" ["e"=1]
"ufal/udpipe" -> "jonorthwash/ud-annotatrix"
"ufal/udpipe" -> "UniversalDependencies/docs"
"ufal/udpipe" -> "Hyperparticle/udify"
"ufal/udpipe" -> "EmilStenstrom/conllu"
"hantek/distance-parser" -> "yikangshen/Ordered-Memory"
"XuezheMax/NeuroNLP2" -> "zysite/biaffine-parser"
"XuezheMax/NeuroNLP2" -> "LiyuanLucasLiu/LM-LSTM-CRF" ["e"=1]
"XuezheMax/NeuroNLP2" -> "elikip/bist-parser"
"XuezheMax/NeuroNLP2" -> "XuezheMax/LasagneNLP"
"XuezheMax/NeuroNLP2" -> "nikitakit/self-attentive-parser"
"XuezheMax/NeuroNLP2" -> "sheng-z/stog" ["e"=1]
"XuezheMax/NeuroNLP2" -> "chantera/biaffineparser"
"XuezheMax/NeuroNLP2" -> "DoodleJZ/HPSG-Neural-Parser"
"XuezheMax/NeuroNLP2" -> "clab/rnng"
"XuezheMax/NeuroNLP2" -> "tdozat/Parser-v1"
"XuezheMax/NeuroNLP2" -> "allenai/acl2018-semantic-parsing-tutorial" ["e"=1]
"XuezheMax/NeuroNLP2" -> "NLPInBLCU/BiaffineDependencyParsing"
"XuezheMax/NeuroNLP2" -> "UKPLab/emnlp2017-bilstm-cnn-crf" ["e"=1]
"XuezheMax/NeuroNLP2" -> "jiesutd/NCRFpp" ["e"=1]
"XuezheMax/NeuroNLP2" -> "yzhangcs/parser"
"daandouwe/biaffine-dependency-parser" -> "EelcovdW/Biaffine-Parser"
"tdozat/Parser-v1" -> "zysite/biaffine-parser"
"tdozat/Parser-v1" -> "zhangmeishan/BiaffineDParser"
"tdozat/Parser-v1" -> "tdozat/Parser-v2"
"zhangmeishan/BiaffineDParser" -> "bamtercelboo/PyTorch_Biaffine_Dependency_Parsing"
"zhangmeishan/BiaffineDParser" -> "tdozat/Parser-v1"
"zhangmeishan/BiaffineDParser" -> "zysite/biaffine-parser"
"hankcs/TreebankPreprocessing" -> "yzhangcs/crfpar"
"hankcs/TreebankPreprocessing" -> "tdozat/Parser-v1"
"hankcs/TreebankPreprocessing" -> "mitchellstern/minimal-span-parser"
"hankcs/TreebankPreprocessing" -> "hantek/distance-parser"
"hankcs/TreebankPreprocessing" -> "zysite/biaffine-parser"
"hankcs/TreebankPreprocessing" -> "fastnlp/JointCwsParser"
"hankcs/TreebankPreprocessing" -> "wangxinyu0922/Second_Order_SDP"
"nikitakit/self-attentive-parser" -> "mitchellstern/minimal-span-parser"
"nikitakit/self-attentive-parser" -> "yzhangcs/parser"
"nikitakit/self-attentive-parser" -> "KhalilMrini/LAL-Parser"
"nikitakit/self-attentive-parser" -> "harvardnlp/pytorch-struct" ["e"=1]
"nikitakit/self-attentive-parser" -> "hantek/distance-parser"
"nikitakit/self-attentive-parser" -> "DoodleJZ/HPSG-Neural-Parser"
"nikitakit/self-attentive-parser" -> "XuezheMax/NeuroNLP2"
"nikitakit/self-attentive-parser" -> "hankcs/TreebankPreprocessing"
"nikitakit/self-attentive-parser" -> "john-hewitt/structural-probes" ["e"=1]
"nikitakit/self-attentive-parser" -> "harvardnlp/urnng"
"nikitakit/self-attentive-parser" -> "jihunchoi/unsupervised-treelstm"
"nikitakit/self-attentive-parser" -> "clab/rnng"
"nikitakit/self-attentive-parser" -> "yikangshen/Ordered-Neurons"
"nikitakit/self-attentive-parser" -> "yikangshen/PRPN"
"nikitakit/self-attentive-parser" -> "recognai/spacy-wordnet" ["e"=1]
"yzhangcs/crfpar" -> "sustcsonglin/second-order-neural-dmv"
"yzhangcs/crfpar" -> "KhalilMrini/LAL-Parser"
"nxphi47/tree_transformer" -> "sdpmas/TreeCodeGen"
"KhalilMrini/LAL-Parser" -> "DoodleJZ/HPSG-Neural-Parser"
"KhalilMrini/LAL-Parser" -> "yzhangcs/crfpar"
"KhalilMrini/LAL-Parser" -> "hantek/distance-parser"
"Hyperparticle/udify" -> "zzsfornlp/zmsp"
"Hyperparticle/udify" -> "CoNLL-UD-2018/UDPipe-Future"
"bojone/on-lstm" -> "yikangshen/Ordered-Neurons"
"bojone/on-lstm" -> "CyberZHG/keras-ordered-neurons"
"harvardnlp/struct-attn" -> "nlpyang/structured"
"harvardnlp/struct-attn" -> "clab/rnng"
"jihunchoi/unsupervised-treelstm" -> "nyu-mll/spinn"
"jihunchoi/unsupervised-treelstm" -> "harvardnlp/urnng"
"jihunchoi/unsupervised-treelstm" -> "yikangshen/PRPN"
"jihunchoi/unsupervised-treelstm" -> "iesl/diora"
"nlpyang/structured" -> "vidhishanair/structured-text-representations"
"nlpyang/structured" -> "nyu-mll/spinn"
"nlpyang/structured" -> "nlpyang/SUMO" ["e"=1]
"yikangshen/PRPN" -> "harvardnlp/urnng"
"yikangshen/PRPN" -> "iesl/diora"
"yikangshen/PRPN" -> "hantek/distance-parser"
"yikangshen/PRPN" -> "nyu-mll/PRPN-Analysis"
"tdozat/Parser-v3" -> "zhangmeishan/BiaffineDParser"
"yaushian/Tree-Transformer" -> "zychen423/UHop"
"yaushian/Tree-Transformer" -> "iesl/diora"
"yaushian/Tree-Transformer" -> "nxphi47/tree_transformer"
"yaushian/Tree-Transformer" -> "harvardnlp/compound-pcfg"
"yaushian/Tree-Transformer" -> "harvardnlp/urnng"
"yaushian/Tree-Transformer" -> "yikangshen/Ordered-Neurons"
"BLLIP/bllip-parser" -> "dmcc/PyStanfordDependencies"
"BLLIP/bllip-parser" -> "UniversalDependencies/tools"
"BLLIP/bllip-parser" -> "jbjorne/TEES" ["e"=1]
"BLLIP/bllip-parser" -> "ncbi-nlp/NegBio" ["e"=1]
"BLLIP/bllip-parser" -> "syllog1sm/redshift"
"vitutorial/VITutorial" -> "FilippoC/diffdp"
"NLPInBLCU/BiaffineDependencyParsing" -> "LiangsLi/LSTM_Biaffine_Dependency_Parser_PyTorch"
"UniversalDependencies/docs" -> "UniversalDependencies/tools"
"UniversalDependencies/docs" -> "jonorthwash/ud-annotatrix"
"UniversalDependencies/docs" -> "udapi/udapi-python"
"nyu-mll/spinn" -> "jihunchoi/unsupervised-treelstm"
"nyu-mll/spinn" -> "iesl/diora"
"TakeLab/spacy-udpipe" -> "ufal/udpipe"
"TakeLab/spacy-udpipe" -> "TakeLab/podium"
"syllog1sm/redshift" -> "syllog1sm/TextBlob"
"syllog1sm/redshift" -> "honnibal/spaCy" ["e"=1]
"syllog1sm/redshift" -> "BLLIP/bllip-parser"
"syllog1sm/redshift" -> "sobhe/dependency-parse-tree"
"syllog1sm/redshift" -> "yahoo/YaraParser"
"syllog1sm/redshift" -> "clab/lstm-parser"
"syllog1sm/redshift" -> "elikip/bist-parser"
"syllog1sm/redshift" -> "jimmycallin/pydsm" ["e"=1]
"syllog1sm/redshift" -> "sloria/textblob-aptagger"
"EmilStenstrom/conllu" -> "pyconll/pyconll"
"EmilStenstrom/conllu" -> "UniversalDependencies/tools"
"EmilStenstrom/conllu" -> "UniversalDependencies/UD_French-GSD"
"EmilStenstrom/conllu" -> "interrogator/conll-df"
"EmilStenstrom/conllu" -> "ufal/udpipe"
"elikip/bist-parser" -> "clab/lstm-parser"
"elikip/bist-parser" -> "akjindal53244/dependency_parsing_tf"
"elikip/bist-parser" -> "tdozat/Parser-v1"
"elikip/bist-parser" -> "jhcross/span-parser"
"elikip/bist-parser" -> "tdozat/Parser"
"elikip/bist-parser" -> "UppsalaNLP/uuparser"
"elikip/bist-parser" -> "XuezheMax/NeuroNLP2"
"elikip/bist-parser" -> "Samurais/text-dependency-parser"
"elikip/bist-parser" -> "wddabc/bist-parser"
"elikip/bist-parser" -> "rsennrich/nematus" ["e"=1]
"jonorthwash/ud-annotatrix" -> "udapi/udapi-python"
"jonorthwash/ud-annotatrix" -> "Orange-OpenSource/conllueditor"
"mitchellstern/minimal-span-parser" -> "dgaddy/parser-analysis"
"clab/lstm-parser" -> "elikip/bist-parser"
"clab/lstm-parser" -> "clab/rnng"
"clab/lstm-parser" -> "yahoo/YaraParser"
"clab/lstm-parser" -> "clab/joint-lstm-parser"
"clab/lstm-parser" -> "tdozat/Parser"
"clab/lstm-parser" -> "wlin12/wang2vec" ["e"=1]
"DoodleJZ/HPSG-Neural-Parser" -> "KhalilMrini/LAL-Parser"
"DoodleJZ/HPSG-Neural-Parser" -> "hantek/distance-parser"
"DoodleJZ/HPSG-Neural-Parser" -> "yzhangcs/crfpar"
"UniversalDependencies/tools" -> "jonorthwash/ud-annotatrix"
"UniversalDependencies/tools" -> "UniversalDependencies/docs"
"UniversalDependencies/tools" -> "udapi/udapi-python"
"UniversalDependencies/tools" -> "Orange-OpenSource/conllueditor"
"UniversalDependencies/tools" -> "ftyers/ud-scripts"
"TakeLab/podium" -> "josipjukic/alanno"
"harvardnlp/compound-pcfg" -> "harvardnlp/urnng"
"harvardnlp/compound-pcfg" -> "iesl/diora"
"harvardnlp/compound-pcfg" -> "yikangshen/PRPN"
"sustcsonglin/second-order-neural-dmv" -> "LouChao98/neural_based_dmv"
"sustcsonglin/second-order-neural-dmv" -> "ByronCHAO/neural_based_dmv"
"iesl/diora" -> "harvardnlp/urnng"
"iesl/diora" -> "yikangshen/PRPN"
"iesl/diora" -> "FilippoC/diffdp"
"AntNLP/gnn-dep-parsing" -> "wangxinyu0922/Second_Order_SDP"
"josipjukic/alanno" -> "TakeLab/podium"
"josipjukic/alanno" -> "cyanic-selkie/cutters"
"yikangshen/Ordered-Neurons" ["l"="27.613,32.842"]
"bojone/on-lstm" ["l"="27.653,32.856"]
"yikangshen/PRPN" ["l"="27.588,32.842"]
"harvardnlp/urnng" ["l"="27.588,32.827"]
"iesl/diora" ["l"="27.605,32.827"]
"yaushian/Tree-Transformer" ["l"="27.632,32.818"]
"salesforce/awd-lstm-lm" ["l"="30.028,32.509"]
"dasguptar/treelstm.pytorch" ["l"="27.054,34.49"]
"qipeng/gcn-over-pruned-trees" ["l"="30.681,30.944"]
"jihunchoi/unsupervised-treelstm" ["l"="27.576,32.838"]
"nikitakit/self-attentive-parser" ["l"="27.545,32.848"]
"harvardnlp/compound-pcfg" ["l"="27.606,32.814"]
"harvardnlp/var-attn" ["l"="28.121,33.81"]
"Smerity/sha-rnn" ["l"="29.836,32.436"]
"nyu-mll/spinn" ["l"="27.597,32.857"]
"huggingface/pytorch-openai-transformer-lm" ["l"="29.96,32.482"]
"clab/rnng" ["l"="27.552,32.819"]
"clab/lstm-parser" ["l"="27.507,32.773"]
"kmkurn/pytorch-rnng" ["l"="27.556,32.794"]
"yzhangcs/parser" ["l"="27.497,32.864"]
"yzhangcs/crfpar" ["l"="27.521,32.894"]
"zhangmeishan/BiaffineDParser" ["l"="27.447,32.857"]
"KhalilMrini/LAL-Parser" ["l"="27.534,32.881"]
"juntaoy/biaffine-ner" ["l"="32.458,30.155"]
"hankcs/TreebankPreprocessing" ["l"="27.503,32.88"]
"baidu/DDParser" ["l"="32.24,30.273"]
"bamtercelboo/PyTorch_Biaffine_Dependency_Parsing" ["l"="27.455,32.874"]
"yzhangcs/crfsrl" ["l"="27.479,32.893"]
"NLPInBLCU/BiaffineDependencyParsing" ["l"="27.473,32.871"]
"XuezheMax/NeuroNLP2" ["l"="27.495,32.833"]
"DoodleJZ/HPSG-Neural-Parser" ["l"="27.525,32.866"]
"harvardnlp/pytorch-struct" ["l"="29.82,32.33"]
"HillZhang1999/MuCGEC" ["l"="31.559,28.706"]
"dropreg/R-Drop" ["l"="32.252,30.327"]
"mingdachen/disentangle-semantics-syntax" ["l"="27.639,32.833"]
"jxhe/struct-learning-with-flow" ["l"="25.203,32.633"]
"yoonkim/neural-qcfg" ["l"="27.59,32.796"]
"hantek/distance-parser" ["l"="27.554,32.866"]
"Alibaba-NLP/MultilangStructureKD" ["l"="27.475,32.958"]
"wangxinyu0922/Second_Order_SDP" ["l"="27.481,32.928"]
"wangxinyu0922/Second_Order_Parsing" ["l"="27.471,32.977"]
"akjindal53244/dependency_parsing_tf" ["l"="27.416,32.784"]
"SmartLi8/cs224n-assignment" ["l"="27.391,32.782"]
"zysite/biaffine-parser" ["l"="27.466,32.854"]
"tdozat/Parser-v1" ["l"="27.461,32.839"]
"daandouwe/biaffine-dependency-parser" ["l"="27.43,32.874"]
"chantera/biaffineparser" ["l"="27.469,32.827"]
"ufal/udpipe" ["l"="27.408,32.55"]
"TakeLab/spacy-udpipe" ["l"="27.379,32.533"]
"CoNLL-UD-2018/UDPipe-Future" ["l"="27.436,32.556"]
"bnosac/udpipe" ["l"="19.705,42.368"]
"buriy/spacy-ru" ["l"="-9.309,20.396"]
"jonorthwash/ud-annotatrix" ["l"="27.415,32.581"]
"UniversalDependencies/docs" ["l"="27.399,32.578"]
"Hyperparticle/udify" ["l"="27.458,32.549"]
"EmilStenstrom/conllu" ["l"="27.428,32.534"]
"yikangshen/Ordered-Memory" ["l"="27.561,32.893"]
"LiyuanLucasLiu/LM-LSTM-CRF" ["l"="32.309,29.985"]
"elikip/bist-parser" ["l"="27.469,32.786"]
"XuezheMax/LasagneNLP" ["l"="27.495,32.808"]
"sheng-z/stog" ["l"="29.804,31.843"]
"allenai/acl2018-semantic-parsing-tutorial" ["l"="-10.894,-4.63"]
"UKPLab/emnlp2017-bilstm-cnn-crf" ["l"="32.265,29.967"]
"jiesutd/NCRFpp" ["l"="32.281,30.019"]
"EelcovdW/Biaffine-Parser" ["l"="27.411,32.886"]
"tdozat/Parser-v2" ["l"="27.43,32.833"]
"mitchellstern/minimal-span-parser" ["l"="27.518,32.848"]
"fastnlp/JointCwsParser" ["l"="27.498,32.909"]
"john-hewitt/structural-probes" ["l"="29.745,32.296"]
"recognai/spacy-wordnet" ["l"="29.1,30.724"]
"sustcsonglin/second-order-neural-dmv" ["l"="27.529,32.926"]
"nxphi47/tree_transformer" ["l"="27.669,32.803"]
"sdpmas/TreeCodeGen" ["l"="27.691,32.797"]
"zzsfornlp/zmsp" ["l"="27.483,32.541"]
"CyberZHG/keras-ordered-neurons" ["l"="27.681,32.865"]
"harvardnlp/struct-attn" ["l"="27.586,32.878"]
"nlpyang/structured" ["l"="27.613,32.894"]
"vidhishanair/structured-text-representations" ["l"="27.628,32.912"]
"nlpyang/SUMO" ["l"="28.362,33.72"]
"nyu-mll/PRPN-Analysis" ["l"="27.618,32.867"]
"tdozat/Parser-v3" ["l"="27.407,32.86"]
"zychen423/UHop" ["l"="27.66,32.818"]
"BLLIP/bllip-parser" ["l"="27.457,32.668"]
"dmcc/PyStanfordDependencies" ["l"="27.47,32.647"]
"UniversalDependencies/tools" ["l"="27.427,32.596"]
"jbjorne/TEES" ["l"="32.851,30.046"]
"ncbi-nlp/NegBio" ["l"="28.962,36.659"]
"syllog1sm/redshift" ["l"="27.475,32.718"]
"vitutorial/VITutorial" ["l"="27.649,32.773"]
"FilippoC/diffdp" ["l"="27.632,32.793"]
"LiangsLi/LSTM_Biaffine_Dependency_Parser_PyTorch" ["l"="27.455,32.891"]
"udapi/udapi-python" ["l"="27.399,32.596"]
"TakeLab/podium" ["l"="27.351,32.514"]
"syllog1sm/TextBlob" ["l"="27.447,32.712"]
"honnibal/spaCy" ["l"="21.733,28.836"]
"sobhe/dependency-parse-tree" ["l"="27.465,32.696"]
"yahoo/YaraParser" ["l"="27.497,32.741"]
"jimmycallin/pydsm" ["l"="25.558,30.811"]
"sloria/textblob-aptagger" ["l"="27.499,32.696"]
"pyconll/pyconll" ["l"="27.423,32.5"]
"UniversalDependencies/UD_French-GSD" ["l"="27.45,32.524"]
"interrogator/conll-df" ["l"="27.442,32.513"]
"jhcross/span-parser" ["l"="27.442,32.782"]
"tdozat/Parser" ["l"="27.485,32.768"]
"UppsalaNLP/uuparser" ["l"="27.458,32.759"]
"Samurais/text-dependency-parser" ["l"="27.435,32.765"]
"wddabc/bist-parser" ["l"="27.445,32.797"]
"rsennrich/nematus" ["l"="30.046,32.322"]
"Orange-OpenSource/conllueditor" ["l"="27.412,32.608"]
"dgaddy/parser-analysis" ["l"="27.522,32.826"]
"clab/joint-lstm-parser" ["l"="27.529,32.754"]
"wlin12/wang2vec" ["l"="30.667,33.738"]
"ftyers/ud-scripts" ["l"="27.449,32.6"]
"josipjukic/alanno" ["l"="27.335,32.502"]
"LouChao98/neural_based_dmv" ["l"="27.542,32.941"]
"ByronCHAO/neural_based_dmv" ["l"="27.526,32.945"]
"AntNLP/gnn-dep-parsing" ["l"="27.459,32.941"]
"cyanic-selkie/cutters" ["l"="27.32,32.491"]
}