digraph G {
"xmonad/xmonad" -> "xmonad/xmonad-contrib"
"xmonad/xmonad" -> "jaor/xmobar"
"xmonad/xmonad" -> "haskell/haskell-language-server"
"xmonad/xmonad" -> "commercialhaskell/stack"
"xmonad/xmonad" -> "waymonad/waymonad"
"xmonad/xmonad" -> "ghc/ghc"
"xmonad/xmonad" -> "haskell/haskell-ide-engine"
"xmonad/xmonad" -> "awesomeWM/awesome" ["e"=1]
"xmonad/xmonad" -> "jtdaugherty/brick"
"xmonad/xmonad" -> "ndmitchell/hlint"
"xmonad/xmonad" -> "ekmett/lens"
"xmonad/xmonad" -> "jaspervdj/hakyll"
"xmonad/xmonad" -> "qtile/qtile" ["e"=1]
"xmonad/xmonad" -> "haskell/cabal"
"xmonad/xmonad" -> "haskell-servant/servant"
"xmonad/xmonad-contrib" -> "xmonad/xmonad"
"xmonad/xmonad-contrib" -> "jaor/xmobar"
"xmonad/xmonad-contrib" -> "taffybar/taffybar"
"xmonad/xmonad-contrib" -> "xmonad/X11"
"xmonad/xmonad-contrib" -> "xmonad/xmonad-extras"
"xmonad/xmonad-contrib" -> "waymonad/waymonad"
"xmonad/xmonad-contrib" -> "altercation/dotfiles-tilingwm"
"xmonad/xmonad-contrib" -> "cdepillabout/termonad"
"xmonad/xmonad-contrib" -> "haskell/cabal"
"xmonad/xmonad-contrib" -> "mrkkrp/megaparsec"
"xmonad/xmonad-contrib" -> "polysemy-research/polysemy"
"xmonad/xmonad-contrib" -> "Ongy/waymonad"
"xmonad/xmonad-contrib" -> "travitch/taffybar"
"xmonad/xmonad-contrib" -> "david-janssen/kmonad"
"xmonad/xmonad-contrib" -> "haskell/vector"
"bitemyapp/learnhaskell" -> "krispo/awesome-haskell"
"bitemyapp/learnhaskell" -> "NICTA/course"
"bitemyapp/learnhaskell" -> "commercialhaskell/stack"
"bitemyapp/learnhaskell" -> "sdiehl/write-you-a-haskell"
"bitemyapp/learnhaskell" -> "sdiehl/wiwinwlh"
"bitemyapp/learnhaskell" -> "facebook/Haxl"
"bitemyapp/learnhaskell" -> "caiorss/Functional-Programming"
"bitemyapp/learnhaskell" -> "Gabriel439/post-rfc"
"bitemyapp/learnhaskell" -> "purescript/purescript"
"bitemyapp/learnhaskell" -> "hmemcpy/milewski-ctfp-pdf"
"bitemyapp/learnhaskell" -> "data61/fp-course"
"bitemyapp/learnhaskell" -> "steshaw/plt"
"bitemyapp/learnhaskell" -> "kanaka/mal" ["e"=1]
"bitemyapp/learnhaskell" -> "gibiansky/IHaskell"
"bitemyapp/learnhaskell" -> "yesodweb/yesod"
"data61/fp-course" -> "qfpl/applied-fp-course"
"data61/fp-course" -> "tonymorris/fp-course"
"data61/fp-course" -> "haskell/haskell-ide-engine"
"data61/fp-course" -> "cohomolo-gy/haskell-resources"
"data61/fp-course" -> "sdiehl/write-you-a-haskell"
"data61/fp-course" -> "bitemyapp/learnhaskell"
"data61/fp-course" -> "sdiehl/wiwinwlh"
"data61/fp-course" -> "i-am-tom/haskell-exercises"
"data61/fp-course" -> "Gabriel439/haskell-nix"
"data61/fp-course" -> "google/haskell-trainings"
"data61/fp-course" -> "graninas/software-design-in-haskell"
"data61/fp-course" -> "tssm/up-to-date-real-world-haskell"
"data61/fp-course" -> "Gabriel439/post-rfc"
"data61/fp-course" -> "jagajaga/FP-Course-ITMO"
"data61/fp-course" -> "ekmett/lens"
"krispo/awesome-haskell" -> "bitemyapp/learnhaskell"
"krispo/awesome-haskell" -> "sdiehl/write-you-a-haskell"
"krispo/awesome-haskell" -> "commercialhaskell/stack"
"krispo/awesome-haskell" -> "sdiehl/wiwinwlh"
"krispo/awesome-haskell" -> "haskell/haskell-ide-engine"
"krispo/awesome-haskell" -> "hzlmn/haskell-must-watch"
"krispo/awesome-haskell" -> "yesodweb/yesod"
"krispo/awesome-haskell" -> "Gabriel439/post-rfc"
"krispo/awesome-haskell" -> "dmjio/miso"
"krispo/awesome-haskell" -> "facebook/Haxl"
"krispo/awesome-haskell" -> "haskell/haskell-language-server"
"krispo/awesome-haskell" -> "haskell-servant/servant"
"krispo/awesome-haskell" -> "tensorflow/haskell"
"krispo/awesome-haskell" -> "uhub/awesome-haskell"
"krispo/awesome-haskell" -> "purescript/purescript"
"Dobiasd/programming-language-subreddits-and-their-choice-of-words" -> "Dobiasd/articles"
"Dobiasd/programming-language-subreddits-and-their-choice-of-words" -> "MurtzaM/Developer-Conferences" ["e"=1]
"Dobiasd/programming-language-subreddits-and-their-choice-of-words" -> "ukupat/tabs-or-spaces"
"soupi/haskell-study-plan" -> "graninas/software-design-in-haskell"
"soupi/haskell-study-plan" -> "i-am-tom/haskell-exercises"
"soupi/haskell-study-plan" -> "cohomolo-gy/haskell-resources"
"soupi/haskell-study-plan" -> "haskell-beginners-2022/course-plan"
"soupi/haskell-study-plan" -> "soupi/learn-haskell-blog-generator"
"soupi/haskell-study-plan" -> "tssm/up-to-date-real-world-haskell"
"soupi/haskell-study-plan" -> "erkmos/haskell-companies"
"soupi/haskell-study-plan" -> "qfpl/applied-fp-course"
"soupi/haskell-study-plan" -> "alpacaaa/zero-bullshit-haskell"
"soupi/haskell-study-plan" -> "hzlmn/haskell-must-watch"
"soupi/haskell-study-plan" -> "polysemy-research/polysemy"
"soupi/haskell-study-plan" -> "kowainik/learn4haskell"
"soupi/haskell-study-plan" -> "kowainik/stan"
"soupi/haskell-study-plan" -> "thma/LtuPatternFactory"
"soupi/haskell-study-plan" -> "fjvallarino/monomer"
"hablapps/DontFearTheProfunctorOptics" -> "i-am-tom/haskell-exercises"
"hablapps/DontFearTheProfunctorOptics" -> "fused-effects/fused-effects"
"hablapps/DontFearTheProfunctorOptics" -> "cohomolo-gy/haskell-resources"
"hablapps/DontFearTheProfunctorOptics" -> "isovector/polysemy"
"hablapps/DontFearTheProfunctorOptics" -> "ChrisPenner/comonads-by-example"
"hablapps/DontFearTheProfunctorOptics" -> "isovector/thinking-with-types"
"hablapps/DontFearTheProfunctorOptics" -> "ghc-proposals/ghc-proposals"
"hablapps/DontFearTheProfunctorOptics" -> "graninas/software-design-in-haskell"
"ndmitchell/tagsoup" -> "fimad/scalpel"
"github/semantic" -> "tree-sitter/tree-sitter" ["e"=1]
"github/semantic" -> "haskell/haskell-ide-engine"
"github/semantic" -> "unisonweb/unison" ["e"=1]
"github/semantic" -> "idris-lang/Idris-dev"
"github/semantic" -> "hmemcpy/milewski-ctfp-pdf"
"github/semantic" -> "dhall-lang/dhall-lang"
"github/semantic" -> "agda/agda" ["e"=1]
"github/semantic" -> "ghc/ghc"
"github/semantic" -> "purescript/purescript"
"github/semantic" -> "commercialhaskell/stack"
"github/semantic" -> "tweag/asterius"
"github/semantic" -> "facebook/Haxl"
"github/semantic" -> "haskell/haskell-language-server"
"github/semantic" -> "coq/coq" ["e"=1]
"github/semantic" -> "plfa/plfa.github.io" ["e"=1]
"fptudelft/FP101x-Content-2015" -> "fptudelft/learnhaskell"
"fptudelft/FP101x-Content-2015" -> "fptudelft/FP101x-Content"
"fptudelft/FP101x-Content-2015" -> "NICTA/course"
"haskell/haskell-ide-engine" -> "haskell/haskell-language-server"
"haskell/haskell-ide-engine" -> "commercialhaskell/stack"
"haskell/haskell-ide-engine" -> "ndmitchell/ghcid"
"haskell/haskell-ide-engine" -> "haskell-servant/servant"
"haskell/haskell-ide-engine" -> "ekmett/lens"
"haskell/haskell-ide-engine" -> "ghc/ghc"
"haskell/haskell-ide-engine" -> "ghcjs/ghcjs"
"haskell/haskell-ide-engine" -> "dmjio/miso"
"haskell/haskell-ide-engine" -> "tweag/asterius"
"haskell/haskell-ide-engine" -> "rikvdkleij/intellij-haskell"
"haskell/haskell-ide-engine" -> "jtdaugherty/brick"
"haskell/haskell-ide-engine" -> "digital-asset/ghcide"
"haskell/haskell-ide-engine" -> "ndmitchell/hlint"
"haskell/haskell-ide-engine" -> "Gabriel439/haskell-nix"
"haskell/haskell-ide-engine" -> "commercialhaskell/intero"
"hmemcpy/milewski-ctfp-pdf" -> "bitemyapp/learnhaskell"
"hmemcpy/milewski-ctfp-pdf" -> "typelevel/cats" ["e"=1]
"hmemcpy/milewski-ctfp-pdf" -> "fantasyland/fantasy-land" ["e"=1]
"hmemcpy/milewski-ctfp-pdf" -> "fpinscala/fpinscala" ["e"=1]
"hmemcpy/milewski-ctfp-pdf" -> "lampepfl/dotty" ["e"=1]
"hmemcpy/milewski-ctfp-pdf" -> "purescript/purescript"
"hmemcpy/milewski-ctfp-pdf" -> "steshaw/plt"
"hmemcpy/milewski-ctfp-pdf" -> "unisonweb/unison" ["e"=1]
"hmemcpy/milewski-ctfp-pdf" -> "haskell/haskell-ide-engine"
"hmemcpy/milewski-ctfp-pdf" -> "hemanth/functional-programming-jargon" ["e"=1]
"hmemcpy/milewski-ctfp-pdf" -> "lauris/awesome-scala" ["e"=1]
"hmemcpy/milewski-ctfp-pdf" -> "data61/fp-course"
"hmemcpy/milewski-ctfp-pdf" -> "gcanti/fp-ts" ["e"=1]
"hmemcpy/milewski-ctfp-pdf" -> "sdiehl/write-you-a-haskell"
"hmemcpy/milewski-ctfp-pdf" -> "github/semantic"
"ndmitchell/ghcid" -> "tweag/ormolu"
"ndmitchell/ghcid" -> "haskell/haskell-ide-engine"
"ndmitchell/ghcid" -> "Gabriel439/haskell-nix"
"ndmitchell/ghcid" -> "ndmitchell/hlint"
"ndmitchell/ghcid" -> "haskell-servant/servant"
"ndmitchell/ghcid" -> "lspitzner/brittany"
"ndmitchell/ghcid" -> "jaspervdj/stylish-haskell"
"ndmitchell/ghcid" -> "sol/hpack"
"ndmitchell/ghcid" -> "hedgehogqa/haskell-hedgehog"
"ndmitchell/ghcid" -> "ekmett/lens"
"ndmitchell/ghcid" -> "pcapriotti/optparse-applicative"
"ndmitchell/ghcid" -> "jtdaugherty/brick"
"ndmitchell/ghcid" -> "kcsongor/generic-lens"
"ndmitchell/ghcid" -> "ndmitchell/hoogle"
"ndmitchell/ghcid" -> "ghc-proposals/ghc-proposals"
"rikvdkleij/intellij-haskell" -> "carymrobbins/intellij-haskforce"
"rikvdkleij/intellij-haskell" -> "haskell/haskell-ide-engine"
"rikvdkleij/intellij-haskell" -> "haskell/haskell-language-server"
"rikvdkleij/intellij-haskell" -> "commercialhaskell/stack"
"rikvdkleij/intellij-haskell" -> "haskell-servant/servant"
"rikvdkleij/intellij-haskell" -> "typelead/eta"
"rikvdkleij/intellij-haskell" -> "commercialhaskell/intero"
"rikvdkleij/intellij-haskell" -> "ndmitchell/ghcid"
"rikvdkleij/intellij-haskell" -> "jaspervdj/stylish-haskell"
"rikvdkleij/intellij-haskell" -> "bos/aeson"
"rikvdkleij/intellij-haskell" -> "sol/hpack"
"rikvdkleij/intellij-haskell" -> "SublimeHaskell/SublimeHaskell"
"rikvdkleij/intellij-haskell" -> "leksah/leksah"
"rikvdkleij/intellij-haskell" -> "ekmett/lens"
"rikvdkleij/intellij-haskell" -> "tweag/asterius"
"tssm/up-to-date-real-world-haskell" -> "graninas/software-design-in-haskell"
"tssm/up-to-date-real-world-haskell" -> "i-am-tom/haskell-exercises"
"tssm/up-to-date-real-world-haskell" -> "cohomolo-gy/haskell-resources"
"tssm/up-to-date-real-world-haskell" -> "thma/LtuPatternFactory"
"tssm/up-to-date-real-world-haskell" -> "Holmusk/three-layer"
"tssm/up-to-date-real-world-haskell" -> "soupi/haskell-study-plan"
"tssm/up-to-date-real-world-haskell" -> "composewell/streamly"
"tssm/up-to-date-real-world-haskell" -> "tweag/ormolu"
"tssm/up-to-date-real-world-haskell" -> "qfpl/applied-fp-course"
"tssm/up-to-date-real-world-haskell" -> "kowainik/stan"
"tssm/up-to-date-real-world-haskell" -> "commercialhaskell/rio"
"tssm/up-to-date-real-world-haskell" -> "haskell/ide"
"tssm/up-to-date-real-world-haskell" -> "fjvallarino/monomer"
"tssm/up-to-date-real-world-haskell" -> "hasura/eff"
"tssm/up-to-date-real-world-haskell" -> "polysemy-research/polysemy"
"liuxinyu95/AlgoXY" -> "liuxinyu95/unplugged"
"liuxinyu95/AlgoXY" -> "DeathKing/Learning-SICP" ["e"=1]
"liuxinyu95/AlgoXY" -> "cisco/ChezScheme" ["e"=1]
"liuxinyu95/AlgoXY" -> "soulmachine/leetcode" ["e"=1]
"liuxinyu95/AlgoXY" -> "qyuhen/book" ["e"=1]
"liuxinyu95/AlgoXY" -> "ty4z2008/Qix" ["e"=1]
"liuxinyu95/AlgoXY" -> "jeffgerickson/algorithms" ["e"=1]
"liuxinyu95/AlgoXY" -> "julycoding/The-Art-Of-Programming-By-July" ["e"=1]
"liuxinyu95/AlgoXY" -> "aosabook/500lines" ["e"=1]
"liuxinyu95/AlgoXY" -> "bitemyapp/learnhaskell"
"liuxinyu95/AlgoXY" -> "haoel/leetcode" ["e"=1]
"liuxinyu95/AlgoXY" -> "yangyangwithgnu/use_vim_as_ide" ["e"=1]
"liuxinyu95/AlgoXY" -> "sarabander/sicp-pdf" ["e"=1]
"liuxinyu95/AlgoXY" -> "redguardtoo/mastering-emacs-in-one-year-guide" ["e"=1]
"liuxinyu95/AlgoXY" -> "kevin-wayne/algs4" ["e"=1]
"incoherentsoftware/defect-process" -> "SimulaVR/godot-haskell"
"SodiumFRP/sodium" -> "SodiumFRP/sodium-typescript"
"SodiumFRP/sodium" -> "gelisam/frp-zoo"
"SodiumFRP/sodium" -> "SodiumFRP/sodium-cxx"
"SodiumFRP/sodium" -> "HeinrichApfelmus/reactive-banana"
"SodiumFRP/sodium" -> "Reactive-Extensions/RxCpp" ["e"=1]
"SodiumFRP/sodium" -> "lihaoyi/scala.rx" ["e"=1]
"SodiumFRP/sodium" -> "slamdata/purescript-halogen" ["e"=1]
"digital-asset/daml" -> "digital-asset/canton"
"digital-asset/daml" -> "digital-asset/ghcide"
"digital-asset/daml" -> "digital-asset/ex-models"
"digital-asset/daml" -> "digital-asset/ghc-lib"
"digital-asset/daml" -> "digital-asset/daml-on-fabric"
"digital-asset/daml" -> "hacera/daml-on-fabric"
"digital-asset/daml" -> "PegaSysEng/orion" ["e"=1]
"digital-asset/daml" -> "hyperledger/fabric-chaincode-evm" ["e"=1]
"digital-asset/daml" -> "haskell/ide"
"digital-asset/daml" -> "typelevel/cats-tagless" ["e"=1]
"digital-asset/daml" -> "vmware/concord-bft" ["e"=1]
"digital-asset/daml" -> "typelevel/scalacheck" ["e"=1]
"digital-asset/daml" -> "hyperledger/besu" ["e"=1]
"begriffs/haskell-vim-now" -> "eagletmt/ghcmod-vim"
"begriffs/haskell-vim-now" -> "ndmitchell/ghcid"
"begriffs/haskell-vim-now" -> "neovimhaskell/haskell-vim"
"begriffs/haskell-vim-now" -> "NICTA/course"
"begriffs/haskell-vim-now" -> "dag/vim2hs"
"begriffs/haskell-vim-now" -> "commercialhaskell/stack"
"begriffs/haskell-vim-now" -> "mikeizbicki/HLearn"
"begriffs/haskell-vim-now" -> "tibbe/haskell-style-guide"
"begriffs/haskell-vim-now" -> "Gabriel439/post-rfc"
"begriffs/haskell-vim-now" -> "Gabriel439/Haskell-Turtle-Library"
"begriffs/haskell-vim-now" -> "leksah/leksah"
"begriffs/haskell-vim-now" -> "sdiehl/wiwinwlh"
"begriffs/haskell-vim-now" -> "ekmett/lens"
"begriffs/haskell-vim-now" -> "sdiehl/write-you-a-haskell"
"begriffs/haskell-vim-now" -> "haskell-servant/servant"
"commercialhaskell/stack" -> "haskell/haskell-ide-engine"
"commercialhaskell/stack" -> "ghc/ghc"
"commercialhaskell/stack" -> "haskell-servant/servant"
"commercialhaskell/stack" -> "haskell/cabal"
"commercialhaskell/stack" -> "ghcjs/ghcjs"
"commercialhaskell/stack" -> "facebook/Haxl"
"commercialhaskell/stack" -> "yesodweb/yesod"
"commercialhaskell/stack" -> "ndmitchell/hlint"
"commercialhaskell/stack" -> "ekmett/lens"
"commercialhaskell/stack" -> "purescript/purescript"
"commercialhaskell/stack" -> "jaspervdj/hakyll"
"commercialhaskell/stack" -> "sdiehl/write-you-a-haskell"
"commercialhaskell/stack" -> "Gabriel439/post-rfc"
"commercialhaskell/stack" -> "pcapriotti/optparse-applicative"
"commercialhaskell/stack" -> "bos/aeson"
"ghc/ghc" -> "commercialhaskell/stack"
"ghc/ghc" -> "ekmett/lens"
"ghc/ghc" -> "haskell/cabal"
"ghc/ghc" -> "ghcjs/ghcjs"
"ghc/ghc" -> "idris-lang/Idris-dev"
"ghc/ghc" -> "yesodweb/yesod"
"ghc/ghc" -> "haskell/haskell-ide-engine"
"ghc/ghc" -> "facebook/Haxl"
"ghc/ghc" -> "sdiehl/write-you-a-haskell"
"ghc/ghc" -> "agda/agda" ["e"=1]
"ghc/ghc" -> "bos/aeson"
"ghc/ghc" -> "haskell-servant/servant"
"ghc/ghc" -> "yi-editor/yi"
"ghc/ghc" -> "jaspervdj/hakyll"
"ghc/ghc" -> "coq/coq" ["e"=1]
"ghcjs/ghcjs" -> "valderman/haste-compiler"
"ghcjs/ghcjs" -> "faylang/fay"
"ghcjs/ghcjs" -> "commercialhaskell/stack"
"ghcjs/ghcjs" -> "ghc/ghc"
"ghcjs/ghcjs" -> "yesodweb/yesod"
"ghcjs/ghcjs" -> "ekmett/lens"
"ghcjs/ghcjs" -> "dmjio/miso"
"ghcjs/ghcjs" -> "haskell-servant/servant"
"ghcjs/ghcjs" -> "purescript/purescript"
"ghcjs/ghcjs" -> "tweag/asterius"
"ghcjs/ghcjs" -> "haskell/haskell-ide-engine"
"ghcjs/ghcjs" -> "idris-lang/Idris-dev"
"ghcjs/ghcjs" -> "facebook/Haxl"
"ghcjs/ghcjs" -> "reflex-frp/reflex"
"ghcjs/ghcjs" -> "yi-editor/yi"
"sdiehl/write-you-a-haskell" -> "sdiehl/wiwinwlh"
"sdiehl/write-you-a-haskell" -> "sdiehl/kaleidoscope"
"sdiehl/write-you-a-haskell" -> "commercialhaskell/stack"
"sdiehl/write-you-a-haskell" -> "ghc/ghc"
"sdiehl/write-you-a-haskell" -> "idris-lang/Idris-dev"
"sdiehl/write-you-a-haskell" -> "bitemyapp/learnhaskell"
"sdiehl/write-you-a-haskell" -> "haskell/haskell-ide-engine"
"sdiehl/write-you-a-haskell" -> "facebook/Haxl"
"sdiehl/write-you-a-haskell" -> "krispo/awesome-haskell"
"sdiehl/write-you-a-haskell" -> "ekmett/lens"
"sdiehl/write-you-a-haskell" -> "purescript/purescript"
"sdiehl/write-you-a-haskell" -> "caiorss/Functional-Programming"
"sdiehl/write-you-a-haskell" -> "Gabriel439/post-rfc"
"sdiehl/write-you-a-haskell" -> "steshaw/plt"
"sdiehl/write-you-a-haskell" -> "ghcjs/ghcjs"
"altercation/dotfiles-tilingwm" -> "xmonad/xmonad-contrib"
"altercation/dotfiles-tilingwm" -> "liskin/dotfiles"
"altercation/dotfiles-tilingwm" -> "pjones/xmonadrc"
"altercation/dotfiles-tilingwm" -> "IvanMalison/dotfiles"
"altercation/dotfiles-tilingwm" -> "vicfryzel/xmonad-config"
"altercation/dotfiles-tilingwm" -> "jaor/xmobar"
"altercation/dotfiles-tilingwm" -> "cdepillabout/termonad"
"altercation/dotfiles-tilingwm" -> "domenkozar/hie-nix"
"fosskers/aura" -> "haskell/haskell-language-server"
"fosskers/aura" -> "Morganamilo/paru" ["e"=1]
"fosskers/aura" -> "jaor/xmobar"
"fosskers/aura" -> "jtdaugherty/brick"
"fosskers/aura" -> "xmonad/xmonad"
"fosskers/aura" -> "kowainik/relude"
"fosskers/aura" -> "yi-editor/yi"
"fosskers/aura" -> "actionless/pikaur" ["e"=1]
"fosskers/aura" -> "tweag/ormolu"
"fosskers/aura" -> "chaotic-aur/packages"
"fosskers/aura" -> "hspec/hspec"
"fosskers/aura" -> "hasura/eff"
"fosskers/aura" -> "taffybar/taffybar"
"fosskers/aura" -> "snoyberg/conduit"
"fosskers/aura" -> "waymonad/waymonad"
"digitallyinduced/ihp" -> "haskell/haskell-language-server"
"digitallyinduced/ihp" -> "redwoodjs/redwood" ["e"=1]
"digitallyinduced/ihp" -> "dmjio/miso"
"digitallyinduced/ihp" -> "tweag/asterius"
"digitallyinduced/ihp" -> "haskell-servant/servant"
"digitallyinduced/ihp" -> "unisonweb/unison" ["e"=1]
"digitallyinduced/ihp" -> "obsidiansystems/obelisk"
"digitallyinduced/ihp" -> "purescript/purescript"
"digitallyinduced/ihp" -> "jtdaugherty/brick"
"digitallyinduced/ihp" -> "tweag/ormolu"
"digitallyinduced/ihp" -> "haskell/haskell-ide-engine"
"digitallyinduced/ihp" -> "yesodweb/yesod"
"digitallyinduced/ihp" -> "graninas/software-design-in-haskell"
"digitallyinduced/ihp" -> "gleam-lang/gleam" ["e"=1]
"digitallyinduced/ihp" -> "kowainik/stan"
"pufuwozu/roy" -> "pufuwozu/bilby.js"
"pufuwozu/roy" -> "chrisdone/fay"
"pufuwozu/roy" -> "disnet/contracts.coffee"
"pufuwozu/roy" -> "evancz/Elm"
"pufuwozu/roy" -> "mezzohaskell/mezzohaskell"
"pufuwozu/roy" -> "faylang/fay"
"pufuwozu/roy" -> "satyr/coco"
"pufuwozu/roy" -> "frenchy64/typed-clojure" ["e"=1]
"pufuwozu/roy" -> "tolmasky/language" ["e"=1]
"pufuwozu/roy" -> "raimohanska/bacon.js" ["e"=1]
"pufuwozu/roy" -> "paf31/purescript"
"pufuwozu/roy" -> "graydon/rust" ["e"=1]
"pufuwozu/roy" -> "Constellation/escodegen" ["e"=1]
"pufuwozu/roy" -> "djspiewak/anti-xml" ["e"=1]
"pufuwozu/roy" -> "rsms/move"
"NorfairKing/syds-rules-for-sustainable-haskell" -> "NorfairKing/haskell-WAT"
"NorfairKing/syds-rules-for-sustainable-haskell" -> "NorfairKing/haskell-dangerous-functions"
"purescript/purescript" -> "idris-lang/Idris-dev"
"purescript/purescript" -> "commercialhaskell/stack"
"purescript/purescript" -> "ghcjs/ghcjs"
"purescript/purescript" -> "elm-lang/elm-compiler" ["e"=1]
"purescript/purescript" -> "slamdata/purescript-halogen" ["e"=1]
"purescript/purescript" -> "fantasyland/fantasy-land" ["e"=1]
"purescript/purescript" -> "typelead/eta"
"purescript/purescript" -> "haskell-servant/servant"
"purescript/purescript" -> "yesodweb/yesod"
"purescript/purescript" -> "elm/compiler" ["e"=1]
"purescript/purescript" -> "haskell/haskell-ide-engine"
"purescript/purescript" -> "Frege/frege"
"purescript/purescript" -> "unisonweb/unison" ["e"=1]
"purescript/purescript" -> "facebook/Haxl"
"purescript/purescript" -> "purescript/documentation" ["e"=1]
"system-f/fp-course" -> "qfpl/applied-fp-course"
"system-f/fp-course" -> "kowainik/learn4haskell"
"system-f/fp-course" -> "tonymorris/fp-course"
"system-f/fp-course" -> "graninas/software-design-in-haskell"
"system-f/fp-course" -> "haskell/haskell-language-server"
"system-f/fp-course" -> "tssm/up-to-date-real-world-haskell"
"system-f/fp-course" -> "soupi/haskell-study-plan"
"system-f/fp-course" -> "cohomolo-gy/haskell-resources"
"system-f/fp-course" -> "bitemyapp/fp-course"
"system-f/fp-course" -> "tweag/awesome-learning-haskell"
"system-f/fp-course" -> "kowainik/stan"
"system-f/fp-course" -> "plfa/plfa.github.io" ["e"=1]
"system-f/fp-course" -> "sdiehl/wiwinwlh"
"system-f/fp-course" -> "haskell-beginners-2022/course-plan"
"system-f/fp-course" -> "polysemy-research/polysemy"
"clash-lang/clash-compiler" -> "B-Lang-org/bsc" ["e"=1]
"clash-lang/clash-compiler" -> "grin-compiler/grin" ["e"=1]
"clash-lang/clash-compiler" -> "AndrasKovacs/smalltt" ["e"=1]
"clash-lang/clash-compiler" -> "SpinalHDL/SpinalHDL" ["e"=1]
"clash-lang/clash-compiler" -> "agda/agda" ["e"=1]
"clash-lang/clash-compiler" -> "llvm-hs/llvm-hs"
"clash-lang/clash-compiler" -> "LeventErkok/sbv"
"clash-lang/clash-compiler" -> "ndmitchell/ghcid"
"clash-lang/clash-compiler" -> "composewell/streamly"
"clash-lang/clash-compiler" -> "granule-project/granule" ["e"=1]
"clash-lang/clash-compiler" -> "hasura/eff"
"clash-lang/clash-compiler" -> "ollef/sixten" ["e"=1]
"clash-lang/clash-compiler" -> "edwinb/Idris2" ["e"=1]
"clash-lang/clash-compiler" -> "facebookincubator/retrie"
"clash-lang/clash-compiler" -> "agentm/project-m36"
"idris-lang/Idris-dev" -> "edwinb/Idris2" ["e"=1]
"idris-lang/Idris-dev" -> "agda/agda" ["e"=1]
"idris-lang/Idris-dev" -> "purescript/purescript"
"idris-lang/Idris-dev" -> "idris-lang/Idris2" ["e"=1]
"idris-lang/Idris-dev" -> "ghc/ghc"
"idris-lang/Idris-dev" -> "edwinb/Blodwen" ["e"=1]
"idris-lang/Idris-dev" -> "FStarLang/FStar" ["e"=1]
"idris-lang/Idris-dev" -> "ekmett/lens"
"idris-lang/Idris-dev" -> "typelead/eta"
"idris-lang/Idris-dev" -> "ucsd-progsys/liquidhaskell"
"idris-lang/Idris-dev" -> "ghcjs/ghcjs"
"idris-lang/Idris-dev" -> "sdiehl/write-you-a-haskell"
"idris-lang/Idris-dev" -> "Frege/frege"
"idris-lang/Idris-dev" -> "coq/coq" ["e"=1]
"idris-lang/Idris-dev" -> "commercialhaskell/stack"
"jaspervdj/patat" -> "jtdaugherty/brick"
"jaspervdj/patat" -> "lspitzner/brittany"
"jaspervdj/patat" -> "ndmitchell/ghcid"
"jaspervdj/patat" -> "haskell-servant/servant"
"jaspervdj/patat" -> "visit1985/mdp" ["e"=1]
"jaspervdj/patat" -> "tweag/ormolu"
"jaspervdj/patat" -> "Gabriel439/haskell-nix"
"jaspervdj/patat" -> "hedgehogqa/haskell-hedgehog"
"jaspervdj/patat" -> "kowainik/summoner"
"jaspervdj/patat" -> "smallhadroncollider/taskell"
"jaspervdj/patat" -> "erkmos/haskell-companies"
"jaspervdj/patat" -> "dmjio/miso"
"jaspervdj/patat" -> "i-am-tom/haskell-exercises"
"jaspervdj/patat" -> "quchen/articles"
"jaspervdj/patat" -> "kowainik/stan"
"sebastiaanvisser/clay" -> "chrisdone/lucid"
"sebastiaanvisser/clay" -> "tibbe/cassava"
"sebastiaanvisser/clay" -> "bodil/pulp" ["e"=1]
"sebastiaanvisser/clay" -> "xich/scotty"
"sebastiaanvisser/clay" -> "Gabriel439/Haskell-Pipes-Library"
"sebastiaanvisser/clay" -> "jaspervdj/blaze-html"
"sebastiaanvisser/clay" -> "agocorona/MFlow"
"sebastiaanvisser/clay" -> "sol/reserve"
"liuxinyu95/unplugged" -> "liuxinyu95/AlgoXY"
"liuxinyu95/unplugged" -> "graninas/software-design-in-haskell"
"liuxinyu95/unplugged" -> "foxsen/archbase" ["e"=1]
"liuxinyu95/unplugged" -> "tssm/up-to-date-real-world-haskell"
"liuxinyu95/unplugged" -> "cohomolo-gy/haskell-resources"
"liuxinyu95/unplugged" -> "Coq-zh/SF-zh" ["e"=1]
"liuxinyu95/unplugged" -> "spring2go/cs_study_plan" ["e"=1]
"liuxinyu95/unplugged" -> "BartoszMilewski/Publications"
"liuxinyu95/unplugged" -> "YatSenOS/YatSenOS-Tutorial-Volume-1" ["e"=1]
"liuxinyu95/unplugged" -> "thma/LtuPatternFactory"
"liuxinyu95/unplugged" -> "winitzki/sofp" ["e"=1]
"liuxinyu95/unplugged" -> "missing-semester-cn/missing-semester-cn.github.io" ["e"=1]
"liuxinyu95/unplugged" -> "steshaw/plt"
"liuxinyu95/unplugged" -> "haskell/haskell-language-server"
"liuxinyu95/unplugged" -> "sdiehl/write-you-a-haskell"
"google/proto-lens" -> "kcsongor/generic-lens"
"google/proto-lens" -> "grpc/grpc-haskell"
"google/proto-lens" -> "lehins/massiv"
"google/proto-lens" -> "awakesecurity/gRPC-haskell"
"google/proto-lens" -> "Soostone/katip"
"google/proto-lens" -> "nikita-volkov/hasql"
"google/proto-lens" -> "brendanhay/gogol"
"google/proto-lens" -> "awakesecurity/proto3-suite"
"Gabriel439/grace" -> "awakesecurity/spectacle"
"Gabriel439/grace" -> "arybczak/effectful"
"Gabriel439/grace" -> "chshersh/dr-cabal"
"Gabriel439/grace" -> "Bodigrim/tasty-bench"
"haskell-beginners-2022/course-plan" -> "haskell-beginners-2022/exercises"
"haskell-beginners-2022/course-plan" -> "soupi/haskell-study-plan"
"haskell-beginners-2022/course-plan" -> "kowainik/learn4haskell"
"haskell-beginners-2022/course-plan" -> "chshersh/iris"
"haskell-beginners-2022/course-plan" -> "tweag/awesome-learning-haskell"
"haskell-beginners-2022/course-plan" -> "soupi/learn-haskell-blog-generator"
"haskell-beginners-2022/course-plan" -> "graninas/software-design-in-haskell"
"haskell-beginners-2022/course-plan" -> "system-f/fp-course"
"haskell-beginners-2022/course-plan" -> "dnikolovv/practical-haskell"
"haskell-beginners-2022/course-plan" -> "fjvallarino/monomer"
"haskell-beginners-2022/course-plan" -> "kowainik/stan"
"haskell-beginners-2022/course-plan" -> "willbasky/Awesome-list-of-Haskell-mentors"
"haskell-beginners-2022/course-plan" -> "BartoszMilewski/Publications"
"haskell-beginners-2022/course-plan" -> "i-am-tom/haskell-exercises"
"haskell-beginners-2022/course-plan" -> "tssm/up-to-date-real-world-haskell"
"neovimhaskell/haskell-vim" -> "eagletmt/neco-ghc"
"neovimhaskell/haskell-vim" -> "parsonsmatt/intero-neovim"
"neovimhaskell/haskell-vim" -> "begriffs/haskell-vim-now"
"neovimhaskell/haskell-vim" -> "ndmitchell/ghcid"
"neovimhaskell/haskell-vim" -> "itchyny/vim-haskell-indent"
"neovimhaskell/haskell-vim" -> "eagletmt/ghcmod-vim"
"neovimhaskell/haskell-vim" -> "bitc/vim-hdevtools"
"neovimhaskell/haskell-vim" -> "jaspervdj/stylish-haskell"
"neovimhaskell/haskell-vim" -> "neovimhaskell/nvim-hs"
"neovimhaskell/haskell-vim" -> "haskell/haskell-language-server"
"neovimhaskell/haskell-vim" -> "lspitzner/brittany"
"neovimhaskell/haskell-vim" -> "hdevtools/hdevtools"
"neovimhaskell/haskell-vim" -> "neovimhaskell/neovim-ghcmod"
"neovimhaskell/haskell-vim" -> "haskell/haskell-ide-engine"
"neovimhaskell/haskell-vim" -> "alx741/vim-hindent"
"qfpl/applied-fp-course" -> "data61/fp-course"
"qfpl/applied-fp-course" -> "data61/lets-lens"
"qfpl/applied-fp-course" -> "i-am-tom/haskell-exercises"
"qfpl/applied-fp-course" -> "cohomolo-gy/haskell-resources"
"qfpl/applied-fp-course" -> "system-f/fp-course"
"qfpl/applied-fp-course" -> "soupi/haskell-study-plan"
"qfpl/applied-fp-course" -> "tssm/up-to-date-real-world-haskell"
"qfpl/applied-fp-course" -> "tonymorris/fp-course"
"qfpl/applied-fp-course" -> "alpacaaa/zero-bullshit-haskell"
"qfpl/applied-fp-course" -> "graninas/software-design-in-haskell"
"qfpl/applied-fp-course" -> "ndmitchell/ghcid"
"qfpl/applied-fp-course" -> "JordanMartinez/learn-halogen" ["e"=1]
"qfpl/applied-fp-course" -> "Holmusk/three-layer"
"qfpl/applied-fp-course" -> "Gabriel439/haskell-nix"
"qfpl/applied-fp-course" -> "quchen/articles"
"sjsyrek/haskell-study-startup" -> "haskell-learning-group/haskell-learning-group"
"sjsyrek/haskell-study-startup" -> "ennocramer/floskell"
"wasp-lang/wasp" -> "NangoHQ/nango" ["e"=1]
"wasp-lang/wasp" -> "digitallyinduced/ihp"
"wasp-lang/wasp" -> "alephjs/aleph.js" ["e"=1]
"wasp-lang/wasp" -> "triggerdotdev/trigger.dev" ["e"=1]
"wasp-lang/wasp" -> "blitz-js/blitz" ["e"=1]
"wasp-lang/wasp" -> "haskell/haskell-language-server"
"wasp-lang/wasp" -> "svix/svix-webhooks" ["e"=1]
"wasp-lang/wasp" -> "tamagui/tamagui" ["e"=1]
"wasp-lang/wasp" -> "unisonweb/unison" ["e"=1]
"wasp-lang/wasp" -> "kowainik/stan"
"wasp-lang/wasp" -> "koskimas/kysely" ["e"=1]
"wasp-lang/wasp" -> "tremorlabs/tremor" ["e"=1]
"wasp-lang/wasp" -> "getlago/lago" ["e"=1]
"wasp-lang/wasp" -> "exhibitionist-digital/ultra" ["e"=1]
"wasp-lang/wasp" -> "mint-lang/mint" ["e"=1]
"haskell/cabal" -> "ghc/ghc"
"haskell/cabal" -> "commercialhaskell/stack"
"haskell/cabal" -> "ekmett/lens"
"haskell/cabal" -> "bos/aeson"
"haskell/cabal" -> "haskell/hackage-server"
"haskell/cabal" -> "ndmitchell/hlint"
"haskell/cabal" -> "haskell-servant/servant"
"haskell/cabal" -> "haskell/haskell-mode"
"haskell/cabal" -> "ghc-proposals/ghc-proposals"
"haskell/cabal" -> "haskell/haddock"
"haskell/cabal" -> "jaspervdj/hakyll"
"haskell/cabal" -> "yi-editor/yi"
"haskell/cabal" -> "haskell/haskell-platform"
"haskell/cabal" -> "haskell/haskell-language-server"
"haskell/cabal" -> "fpco/stackage"
"jaspervdj/stylish-haskell" -> "lspitzner/brittany"
"jaspervdj/stylish-haskell" -> "ndmitchell/ghcid"
"jaspervdj/stylish-haskell" -> "pcapriotti/optparse-applicative"
"jaspervdj/stylish-haskell" -> "ndmitchell/hlint"
"jaspervdj/stylish-haskell" -> "feuerbach/tasty"
"jaspervdj/stylish-haskell" -> "commercialhaskell/hindent"
"jaspervdj/stylish-haskell" -> "eagletmt/ghcmod-vim"
"jaspervdj/stylish-haskell" -> "fpco/stackage"
"jaspervdj/stylish-haskell" -> "haskell/haskell-ide-engine"
"jaspervdj/stylish-haskell" -> "tibbe/haskell-style-guide"
"jaspervdj/stylish-haskell" -> "bos/aeson"
"jaspervdj/stylish-haskell" -> "hspec/hspec"
"jaspervdj/stylish-haskell" -> "chrisdone/structured-haskell-mode"
"jaspervdj/stylish-haskell" -> "tomjaguarpaw/haskell-opaleye"
"jaspervdj/stylish-haskell" -> "hedgehogqa/haskell-hedgehog"
"ndmitchell/shake" -> "pcapriotti/optparse-applicative"
"ndmitchell/shake" -> "tomjaguarpaw/haskell-opaleye"
"ndmitchell/shake" -> "digital-asset/ghcide"
"ndmitchell/shake" -> "ekmett/lens"
"ndmitchell/shake" -> "ghc-proposals/ghc-proposals"
"ndmitchell/shake" -> "yi-editor/yi"
"ndmitchell/shake" -> "haskell-servant/servant"
"ndmitchell/shake" -> "Gabriel439/Haskell-Pipes-Library"
"ndmitchell/shake" -> "GaloisInc/HaLVM"
"ndmitchell/shake" -> "Gabriel439/Haskell-Turtle-Library"
"ndmitchell/shake" -> "ndmitchell/hoogle"
"ndmitchell/shake" -> "snowleopard/hadrian"
"ndmitchell/shake" -> "ndmitchell/hlint"
"ndmitchell/shake" -> "sol/hpack"
"ndmitchell/shake" -> "hvr/multi-ghc-travis"
"snowleopard/alga" -> "snowleopard/alga-paper"
"snowleopard/alga" -> "lehins/massiv"
"snowleopard/alga" -> "kcsongor/generic-lens"
"snowleopard/alga" -> "composewell/streamly"
"snowleopard/alga" -> "agentm/project-m36"
"snowleopard/alga" -> "hedgehogqa/haskell-hedgehog"
"snowleopard/alga" -> "LeventErkok/sbv"
"snowleopard/alga" -> "antalsz/hs-to-coq" ["e"=1]
"snowleopard/alga" -> "HeinrichApfelmus/hyper-haskell"
"snowleopard/alga" -> "HuwCampbell/grenade"
"snowleopard/alga" -> "haskell-nix/hnix"
"snowleopard/alga" -> "ndmitchell/ghcid"
"snowleopard/alga" -> "haskell-foundation/foundation"
"snowleopard/alga" -> "snowleopard/selective"
"snowleopard/alga" -> "nikita-volkov/hasql"
"ajtulloch/deeplearning-hs" -> "ajtulloch/haskell-ml"
"informatikr/hedis" -> "simonmar/async"
"informatikr/hedis" -> "jaspervdj/websockets"
"informatikr/hedis" -> "bos/aeson"
"informatikr/hedis" -> "snoyberg/http-client"
"informatikr/hedis" -> "acid-state/acid-state"
"informatikr/hedis" -> "mrkkrp/req"
"informatikr/hedis" -> "lpsmith/postgresql-simple"
"informatikr/hedis" -> "hreinhardt/amqp"
"informatikr/hedis" -> "aristidb/aws"
"informatikr/hedis" -> "bos/attoparsec"
"informatikr/hedis" -> "frasertweedale/hs-jose"
"informatikr/hedis" -> "yesodweb/wai"
"informatikr/hedis" -> "haskell/ThreadScope"
"informatikr/hedis" -> "tibbe/ekg"
"informatikr/hedis" -> "Soostone/katip"
"tibbe/haskell-style-guide" -> "ekmett/lens"
"tibbe/haskell-style-guide" -> "jaspervdj/stylish-haskell"
"tibbe/haskell-style-guide" -> "bos/aeson"
"tibbe/haskell-style-guide" -> "commercialhaskell/stack"
"tibbe/haskell-style-guide" -> "hspec/hspec"
"tibbe/haskell-style-guide" -> "jaspervdj/hakyll"
"tibbe/haskell-style-guide" -> "begriffs/haskell-vim-now"
"tibbe/haskell-style-guide" -> "quchen/articles"
"tibbe/haskell-style-guide" -> "haskell/cabal"
"tibbe/haskell-style-guide" -> "yi-editor/yi"
"tibbe/haskell-style-guide" -> "Gabriel439/post-rfc"
"tibbe/haskell-style-guide" -> "serras/emacs-haskell-tutorial"
"tibbe/haskell-style-guide" -> "haskell-servant/servant"
"tibbe/haskell-style-guide" -> "scotty-web/scotty"
"tibbe/haskell-style-guide" -> "eagletmt/ghcmod-vim"
"luna/enso" -> "luna/hiring"
"luna/enso" -> "luna/ide"
"SublimeHaskell/SublimeHaskell" -> "mvoidex/hsdev"
"SublimeHaskell/SublimeHaskell" -> "fpco/stackage"
"SublimeHaskell/SublimeHaskell" -> "leksah/leksah"
"SublimeHaskell/SublimeHaskell" -> "kazu-yamamoto/ghc-mod"
"SublimeHaskell/SublimeHaskell" -> "jaspervdj/stylish-haskell"
"SublimeHaskell/SublimeHaskell" -> "rikvdkleij/intellij-haskell"
"SublimeHaskell/SublimeHaskell" -> "haskell/cabal"
"SublimeHaskell/SublimeHaskell" -> "bos/aeson"
"SublimeHaskell/SublimeHaskell" -> "bitc/hdevtools"
"SublimeHaskell/SublimeHaskell" -> "ndmitchell/ghcid"
"SublimeHaskell/SublimeHaskell" -> "commercialhaskell/intero"
"SublimeHaskell/SublimeHaskell" -> "carymrobbins/intellij-haskforce"
"SublimeHaskell/SublimeHaskell" -> "tibbe/haskell-style-guide"
"SublimeHaskell/SublimeHaskell" -> "ekmett/lens"
"SublimeHaskell/SublimeHaskell" -> "valderman/haste-compiler"
"creswick/cabal-dev" -> "Paczesiowa/virthualenv"
"jaspervdj/hakyll" -> "yesodweb/yesod"
"jaspervdj/hakyll" -> "commercialhaskell/stack"
"jaspervdj/hakyll" -> "ekmett/lens"
"jaspervdj/hakyll" -> "haskell/cabal"
"jaspervdj/hakyll" -> "haskell-servant/servant"
"jaspervdj/hakyll" -> "ghcjs/ghcjs"
"jaspervdj/hakyll" -> "faylang/fay"
"jaspervdj/hakyll" -> "yi-editor/yi"
"jaspervdj/hakyll" -> "ghc/ghc"
"jaspervdj/hakyll" -> "sdiehl/wiwinwlh"
"jaspervdj/hakyll" -> "scotty-web/scotty"
"jaspervdj/hakyll" -> "haskell/haskell-ide-engine"
"jaspervdj/hakyll" -> "gibiansky/IHaskell"
"jaspervdj/hakyll" -> "bos/aeson"
"jaspervdj/hakyll" -> "facebook/Haxl"
"vincenthz/hs-tls" -> "simonmar/async"
"vincenthz/hs-tls" -> "yesodweb/wai"
"vincenthz/hs-tls" -> "haskell/network"
"vincenthz/hs-tls" -> "bitemyapp/bloodhound"
"vincenthz/hs-tls" -> "haskell-distributed/distributed-process"
"vincenthz/hs-tls" -> "kazu-yamamoto/logger"
"vincenthz/hs-tls" -> "jaspervdj/websockets"
"vincenthz/hs-tls" -> "haskell/hackage-server"
"vincenthz/hs-tls" -> "snoyberg/keter"
"facundoolano/advenjure" -> "LambdaHack/LambdaHack"
"smallhadroncollider/taskell" -> "jtdaugherty/brick"
"smallhadroncollider/taskell" -> "jaspervdj/patat"
"smallhadroncollider/taskell" -> "GothenburgBitFactory/taskwarrior" ["e"=1]
"smallhadroncollider/taskell" -> "lspitzner/brittany"
"smallhadroncollider/taskell" -> "Gabriel439/haskell-nix"
"smallhadroncollider/taskell" -> "kdheepak/taskwarrior-tui" ["e"=1]
"smallhadroncollider/taskell" -> "graninas/software-design-in-haskell"
"smallhadroncollider/taskell" -> "coderofsalvation/kanban.bash"
"smallhadroncollider/taskell" -> "tweag/ormolu"
"smallhadroncollider/taskell" -> "commercialhaskell/rio"
"smallhadroncollider/taskell" -> "composewell/streamly"
"smallhadroncollider/taskell" -> "pcapriotti/optparse-applicative"
"smallhadroncollider/taskell" -> "tools-life/taskwiki" ["e"=1]
"smallhadroncollider/taskell" -> "pimutils/khal" ["e"=1]
"smallhadroncollider/taskell" -> "cohomolo-gy/haskell-resources"
"byorgey/swarm" -> "fjvallarino/monomer"
"byorgey/swarm" -> "tweag/linear-base"
"byorgey/swarm" -> "tweag/ormolu"
"byorgey/swarm" -> "kowainik/stan"
"byorgey/swarm" -> "digital-asset/ghcide"
"byorgey/swarm" -> "composewell/streamly"
"dmjio/miso" -> "obsidiansystems/obelisk"
"dmjio/miso" -> "tweag/asterius"
"dmjio/miso" -> "haskell-servant/servant"
"dmjio/miso" -> "ghcjs/ghcjs"
"dmjio/miso" -> "reflex-frp/reflex"
"dmjio/miso" -> "Gabriel439/haskell-nix"
"dmjio/miso" -> "haskell/haskell-ide-engine"
"dmjio/miso" -> "reflex-frp/reflex-platform"
"dmjio/miso" -> "ndmitchell/ghcid"
"dmjio/miso" -> "composewell/streamly"
"dmjio/miso" -> "jtdaugherty/brick"
"dmjio/miso" -> "thomashoneyman/purescript-halogen-realworld" ["e"=1]
"dmjio/miso" -> "yesodweb/yesod"
"dmjio/miso" -> "scotty-web/scotty"
"dmjio/miso" -> "haskell/haskell-language-server"
"caiorss/Functional-Programming" -> "sdiehl/write-you-a-haskell"
"caiorss/Functional-Programming" -> "bitemyapp/learnhaskell"
"caiorss/Functional-Programming" -> "NICTA/course"
"caiorss/Functional-Programming" -> "sdiehl/wiwinwlh"
"caiorss/Functional-Programming" -> "commercialhaskell/stack"
"caiorss/Functional-Programming" -> "krispo/awesome-haskell"
"caiorss/Functional-Programming" -> "adamwulf/app-launch-guide" ["e"=1]
"caiorss/Functional-Programming" -> "facebook/Haxl"
"caiorss/Functional-Programming" -> "Gabriel439/post-rfc"
"caiorss/Functional-Programming" -> "gibiansky/IHaskell"
"caiorss/Functional-Programming" -> "steshaw/plt"
"caiorss/Functional-Programming" -> "DrBoolean/mostly-adequate-guide" ["e"=1]
"caiorss/Functional-Programming" -> "drKraken/haskell-must-watch"
"caiorss/Functional-Programming" -> "yesodweb/yesod"
"caiorss/Functional-Programming" -> "data61/fp-course"
"tweag/asterius" -> "composewell/streamly"
"tweag/asterius" -> "dmjio/miso"
"tweag/asterius" -> "tweag/ormolu"
"tweag/asterius" -> "ghcjs/ghcjs"
"tweag/asterius" -> "haskell-servant/servant"
"tweag/asterius" -> "haskell/haskell-language-server"
"tweag/asterius" -> "obsidiansystems/obelisk"
"tweag/asterius" -> "haskell/haskell-ide-engine"
"tweag/asterius" -> "jtdaugherty/brick"
"tweag/asterius" -> "digital-asset/ghcide"
"tweag/asterius" -> "agda/agda" ["e"=1]
"tweag/asterius" -> "mrkkrp/megaparsec"
"tweag/asterius" -> "ndmitchell/ghcid"
"tweag/asterius" -> "reflex-frp/reflex"
"tweag/asterius" -> "kowainik/summoner"
"Atsky/haskell-idea-plugin" -> "carymrobbins/intellij-haskforce"
"carymrobbins/intellij-haskforce" -> "rikvdkleij/intellij-haskell"
"carymrobbins/intellij-haskforce" -> "Atsky/haskell-idea-plugin"
"carymrobbins/intellij-haskforce" -> "rahulmutt/ghcvm"
"carymrobbins/intellij-haskforce" -> "leksah/leksah"
"carymrobbins/intellij-haskforce" -> "JPMoresmau/eclipsefp"
"carymrobbins/intellij-haskforce" -> "slamdata/purescript-halogen" ["e"=1]
"carymrobbins/intellij-haskforce" -> "khibino/haskell-relational-record"
"carymrobbins/intellij-haskforce" -> "begriffs/haskell-vim-now"
"carymrobbins/intellij-haskforce" -> "haskell/haskell-ide-engine"
"carymrobbins/intellij-haskforce" -> "tibbe/haskell-style-guide"
"carymrobbins/intellij-haskforce" -> "HeinrichApfelmus/hyper-haskell"
"carymrobbins/intellij-haskforce" -> "rainbyte/haskell-ide-chart"
"carymrobbins/intellij-haskforce" -> "tomjaguarpaw/haskell-opaleye"
"carymrobbins/intellij-haskforce" -> "silkapp/rest"
"carymrobbins/intellij-haskforce" -> "nikita-volkov/record"
"nh2/call-haskell-from-anything" -> "rahulmutt/ghcvm"
"nh2/call-haskell-from-anything" -> "nh2/haskell-from-python"
"nh2/call-haskell-from-anything" -> "kcsongor/generic-lens"
"nh2/call-haskell-from-anything" -> "mrkgnao/silica"
"nh2/call-haskell-from-anything" -> "ndmitchell/debug"
"nh2/call-haskell-from-anything" -> "fpco/inline-c"
"haskell/network" -> "haskell/bytestring"
"haskell/network" -> "haskell/containers"
"haskell/network" -> "haskell/HTTP"
"haskell/network" -> "simonmar/async"
"haskell/network" -> "yesodweb/wai"
"haskell/network" -> "haskell/process"
"haskell/network" -> "haskell/time"
"haskell/network" -> "tibbe/unordered-containers"
"haskell/network" -> "vincenthz/hs-tls"
"Gabriel439/Haskell-Turtle-Library" -> "pcapriotti/optparse-applicative"
"Gabriel439/Haskell-Turtle-Library" -> "haskell-servant/servant"
"Gabriel439/Haskell-Turtle-Library" -> "commercialhaskell/stack"
"Gabriel439/Haskell-Turtle-Library" -> "Gabriel439/Haskell-Pipes-Library"
"Gabriel439/Haskell-Turtle-Library" -> "bos/aeson"
"Gabriel439/Haskell-Turtle-Library" -> "Gabriel439/haskell-nix"
"Gabriel439/Haskell-Turtle-Library" -> "haskell-foundation/foundation"
"Gabriel439/Haskell-Turtle-Library" -> "bitemyapp/esqueleto"
"Gabriel439/Haskell-Turtle-Library" -> "jtdaugherty/brick"
"Gabriel439/Haskell-Turtle-Library" -> "jaspervdj/stylish-haskell"
"Gabriel439/Haskell-Turtle-Library" -> "feuerbach/tasty"
"Gabriel439/Haskell-Turtle-Library" -> "ndmitchell/shake"
"Gabriel439/Haskell-Turtle-Library" -> "agentm/project-m36"
"Gabriel439/Haskell-Turtle-Library" -> "hedgehogqa/haskell-hedgehog"
"Gabriel439/Haskell-Turtle-Library" -> "haskell/haskell-ide-engine"
"dhall-lang/dhall-lang" -> "dhall-lang/dhall-haskell"
"dhall-lang/dhall-lang" -> "unisonweb/unison" ["e"=1]
"dhall-lang/dhall-lang" -> "dhall-lang/dhall-kubernetes"
"dhall-lang/dhall-lang" -> "haskell/haskell-ide-engine"
"dhall-lang/dhall-lang" -> "haskell-servant/servant"
"dhall-lang/dhall-lang" -> "ndmitchell/ghcid"
"dhall-lang/dhall-lang" -> "tweag/asterius"
"dhall-lang/dhall-lang" -> "tweag/ormolu"
"dhall-lang/dhall-lang" -> "haskell/haskell-language-server"
"dhall-lang/dhall-lang" -> "purescript/purescript"
"dhall-lang/dhall-lang" -> "Gabriel439/haskell-nix"
"dhall-lang/dhall-lang" -> "idris-lang/Idris-dev"
"dhall-lang/dhall-lang" -> "agda/agda" ["e"=1]
"dhall-lang/dhall-lang" -> "typelead/eta"
"dhall-lang/dhall-lang" -> "dmjio/miso"
"jyp/dante" -> "commercialhaskell/intero"
"jyp/dante" -> "knupfer/haskell-emacs"
"jyp/dante" -> "nmattia/snack"
"jyp/dante" -> "emacs-lsp/lsp-haskell"
"jyp/dante" -> "ndmitchell/ghcid"
"jyp/dante" -> "alexwl/haskell-code-explorer"
"jyp/dante" -> "Gabriel439/haskell-nix"
"jyp/dante" -> "nh2/static-haskell-nix"
"jyp/dante" -> "input-output-hk/haskell.nix"
"jyp/dante" -> "NixOS/cabal2nix"
"jyp/dante" -> "ghc-proposals/ghc-proposals"
"jyp/dante" -> "hedgehogqa/haskell-hedgehog"
"jyp/dante" -> "digital-asset/ghcide"
"jyp/dante" -> "obsidiansystems/obelisk"
"jyp/dante" -> "lspitzner/brittany"
"ndmitchell/hlint" -> "ndmitchell/ghcid"
"ndmitchell/hlint" -> "tweag/ormolu"
"ndmitchell/hlint" -> "clutchski/coffeelint" ["e"=1]
"ndmitchell/hlint" -> "commercialhaskell/stack"
"ndmitchell/hlint" -> "haskell/haskell-language-server"
"ndmitchell/hlint" -> "lspitzner/brittany"
"ndmitchell/hlint" -> "jaspervdj/stylish-haskell"
"ndmitchell/hlint" -> "rodjek/puppet-lint" ["e"=1]
"ndmitchell/hlint" -> "hspec/hspec"
"ndmitchell/hlint" -> "haskell/cabal"
"ndmitchell/hlint" -> "ndmitchell/hoogle"
"ndmitchell/hlint" -> "haskell-servant/servant"
"ndmitchell/hlint" -> "pcapriotti/optparse-applicative"
"ndmitchell/hlint" -> "haskell/haskell-ide-engine"
"ndmitchell/hlint" -> "ekmett/lens"
"waymonad/waymonad" -> "L-as/waymonad"
"waymonad/waymonad" -> "cdepillabout/termonad"
"waymonad/waymonad" -> "xmonad/xmonad"
"waymonad/waymonad" -> "xmonad/xmonad-contrib"
"waymonad/waymonad" -> "jaor/xmobar"
"waymonad/waymonad" -> "taffybar/taffybar"
"waymonad/waymonad" -> "inclement/vivarium" ["e"=1]
"waymonad/waymonad" -> "haskell-nix/hnix"
"waymonad/waymonad" -> "tweag/ormolu"
"waymonad/waymonad" -> "swaywm/wlroots" ["e"=1]
"waymonad/waymonad" -> "emersion/grim" ["e"=1]
"waymonad/waymonad" -> "hasura/eff"
"waymonad/waymonad" -> "ndmitchell/ghcid"
"waymonad/waymonad" -> "way-cooler/way-cooler" ["e"=1]
"waymonad/waymonad" -> "rycee/home-manager" ["e"=1]
"HuwCampbell/grenade" -> "tensorflow/haskell"
"HuwCampbell/grenade" -> "hasktorch/hasktorch"
"HuwCampbell/grenade" -> "mikeizbicki/HLearn"
"HuwCampbell/grenade" -> "haskell-servant/servant"
"HuwCampbell/grenade" -> "ndmitchell/ghcid"
"HuwCampbell/grenade" -> "Gabriel439/haskell-nix"
"HuwCampbell/grenade" -> "snowleopard/alga"
"HuwCampbell/grenade" -> "hedgehogqa/haskell-hedgehog"
"HuwCampbell/grenade" -> "AccelerateHS/accelerate"
"HuwCampbell/grenade" -> "haskell/haskell-ide-engine"
"HuwCampbell/grenade" -> "Gabriel439/post-rfc"
"HuwCampbell/grenade" -> "lehins/massiv"
"HuwCampbell/grenade" -> "valderman/selda"
"HuwCampbell/grenade" -> "tweag/HaskellR"
"HuwCampbell/grenade" -> "transient-haskell/transient"
"neovimhaskell/nvim-hs" -> "neovimhaskell/nvim-hs-contrib"
"neovimhaskell/nvim-hs" -> "parsonsmatt/intero-neovim"
"neovimhaskell/nvim-hs" -> "MarcWeber/hasktags"
"yesodweb/Shelly.hs" -> "tibbe/ekg"
"yesodweb/Shelly.hs" -> "chrisdone/ghci-ng"
"yesodweb/Shelly.hs" -> "mezzohaskell/mezzohaskell"
"yesodweb/Shelly.hs" -> "jaspervdj/stylish-haskell"
"yesodweb/Shelly.hs" -> "Paczesiowa/virthualenv"
"yesodweb/Shelly.hs" -> "dag/vim2hs"
"yesodweb/Shelly.hs" -> "faylang/fay"
"yesodweb/Shelly.hs" -> "bos/statistics"
"yesodweb/Shelly.hs" -> "ndmitchell/shake"
"yesodweb/Shelly.hs" -> "Paczesiowa/hsenv"
"yesodweb/Shelly.hs" -> "chrisdone/shell-conduit"
"yesodweb/Shelly.hs" -> "chrisdone/structured-haskell-mode"
"yesodweb/Shelly.hs" -> "Gabriel439/Haskell-Pipes-Library"
"yesodweb/Shelly.hs" -> "Gabriel439/Haskell-Turtle-Library"
"yesodweb/Shelly.hs" -> "fpco/stackage"
"Frege/frege" -> "typelead/eta"
"Frege/frege" -> "idris-lang/Idris-dev"
"Frege/frege" -> "purescript/purescript"
"Frege/frege" -> "ghcjs/ghcjs"
"Frege/frege" -> "facebook/Haxl"
"Frege/frege" -> "commercialhaskell/stack"
"Frege/frege" -> "milessabin/shapeless" ["e"=1]
"Frege/frege" -> "scalaz/scalaz" ["e"=1]
"Frege/frege" -> "ghc/ghc"
"Frege/frege" -> "Gabriel439/post-rfc"
"Frege/frege" -> "ekmett/lens"
"Frege/frege" -> "scala-native/scala-native" ["e"=1]
"Frege/frege" -> "lampepfl/dotty" ["e"=1]
"Frege/frege" -> "faylang/fay"
"Frege/frege" -> "elm-lang/elm-compiler" ["e"=1]
"ucsd-progsys/liquidhaskell" -> "LeventErkok/sbv"
"ucsd-progsys/liquidhaskell" -> "agda/agda" ["e"=1]
"ucsd-progsys/liquidhaskell" -> "ghc-proposals/ghc-proposals"
"ucsd-progsys/liquidhaskell" -> "idris-lang/Idris-dev"
"ucsd-progsys/liquidhaskell" -> "composewell/streamly"
"ucsd-progsys/liquidhaskell" -> "polysemy-research/polysemy"
"ucsd-progsys/liquidhaskell" -> "plfa/plfa.github.io" ["e"=1]
"ucsd-progsys/liquidhaskell" -> "hedgehogqa/haskell-hedgehog"
"ucsd-progsys/liquidhaskell" -> "agda/agda-stdlib" ["e"=1]
"ucsd-progsys/liquidhaskell" -> "ekmett/lens"
"ucsd-progsys/liquidhaskell" -> "edwinb/Idris2" ["e"=1]
"ucsd-progsys/liquidhaskell" -> "feuerbach/tasty"
"ucsd-progsys/liquidhaskell" -> "goldfirere/singletons"
"ucsd-progsys/liquidhaskell" -> "fused-effects/fused-effects"
"ucsd-progsys/liquidhaskell" -> "FStarLang/FStar" ["e"=1]
"lukexi/halive" -> "HeinrichApfelmus/hyper-haskell"
"lukexi/halive" -> "sol/reserve"
"bos/attoparsec" -> "bos/aeson"
"bos/attoparsec" -> "bos/criterion"
"bos/attoparsec" -> "bos/text"
"bos/attoparsec" -> "tibbe/unordered-containers"
"bos/attoparsec" -> "snoyberg/conduit"
"bos/attoparsec" -> "Gabriel439/Haskell-Pipes-Library"
"bos/attoparsec" -> "informatikr/hedis"
"bos/attoparsec" -> "mrkkrp/megaparsec"
"bos/attoparsec" -> "ekmett/lens"
"bos/attoparsec" -> "haskell-distributed/distributed-process"
"bos/attoparsec" -> "yesodweb/wai"
"bos/attoparsec" -> "haskell/containers"
"bos/attoparsec" -> "ekmett/trifecta"
"bos/attoparsec" -> "kazu-yamamoto/logger"
"bos/attoparsec" -> "haskell/text"
"coderofsalvation/kanban.bash" -> "smallhadroncollider/taskell"
"coderofsalvation/kanban.bash" -> "mateogianolio/sshync" ["e"=1]
"ChrisPenner/rasa" -> "yi-editor/yi"
"ChrisPenner/rasa" -> "commercialhaskell/intero"
"ChrisPenner/rasa" -> "agentm/project-m36"
"ChrisPenner/rasa" -> "HuwCampbell/grenade"
"ChrisPenner/rasa" -> "snowleopard/alga"
"ChrisPenner/rasa" -> "haskus/haskus-system"
"ChrisPenner/rasa" -> "nikita-volkov/hasql"
"ChrisPenner/rasa" -> "valderman/selda"
"ChrisPenner/rasa" -> "ajnsit/concur"
"ChrisPenner/rasa" -> "jtdaugherty/brick"
"ChrisPenner/rasa" -> "Gabriel439/Haskell-Turtle-Library"
"ChrisPenner/rasa" -> "ChrisPenner/eve"
"ChrisPenner/rasa" -> "chrisdone/hindent"
"ChrisPenner/rasa" -> "haskell-foundation/foundation"
"ChrisPenner/rasa" -> "tweag/ormolu"
"fourmolu/fourmolu" -> "NorfairKing/autodocodec"
"fourmolu/fourmolu" -> "UnkindPartition/tasty"
"fourmolu/fourmolu" -> "tweag/ormolu"
"fourmolu/fourmolu" -> "haskell/aeson"
"fourmolu/fourmolu" -> "haskell/stylish-haskell"
"haskell/haskell-language-server" -> "haskell/haskell-ide-engine"
"haskell/haskell-language-server" -> "tweag/ormolu"
"haskell/haskell-language-server" -> "ndmitchell/hlint"
"haskell/haskell-language-server" -> "haskell-servant/servant"
"haskell/haskell-language-server" -> "jtdaugherty/brick"
"haskell/haskell-language-server" -> "polysemy-research/polysemy"
"haskell/haskell-language-server" -> "tweag/asterius"
"haskell/haskell-language-server" -> "commercialhaskell/stack"
"haskell/haskell-language-server" -> "kowainik/stan"
"haskell/haskell-language-server" -> "kowainik/relude"
"haskell/haskell-language-server" -> "haskell/cabal"
"haskell/haskell-language-server" -> "idris-lang/Idris2" ["e"=1]
"haskell/haskell-language-server" -> "digital-asset/ghcide"
"haskell/haskell-language-server" -> "ndmitchell/ghcid"
"haskell/haskell-language-server" -> "haskell/vscode-haskell"
"haskell/stylish-haskell" -> "haskell/text"
"haskell/stylish-haskell" -> "fourmolu/fourmolu"
"haskell/stylish-haskell" -> "haskell/ghcup-hs"
"haskell/stylish-haskell" -> "tweag/ormolu"
"i-am-tom/haskell-exercises" -> "cohomolo-gy/haskell-resources"
"i-am-tom/haskell-exercises" -> "graninas/software-design-in-haskell"
"i-am-tom/haskell-exercises" -> "soupi/haskell-study-plan"
"i-am-tom/haskell-exercises" -> "alpacaaa/zero-bullshit-haskell"
"i-am-tom/haskell-exercises" -> "qfpl/applied-fp-course"
"i-am-tom/haskell-exercises" -> "tssm/up-to-date-real-world-haskell"
"i-am-tom/haskell-exercises" -> "kowainik/summoner"
"i-am-tom/haskell-exercises" -> "erkmos/haskell-companies"
"i-am-tom/haskell-exercises" -> "facebookincubator/retrie"
"i-am-tom/haskell-exercises" -> "Holmusk/three-layer"
"i-am-tom/haskell-exercises" -> "hedgehogqa/haskell-hedgehog"
"i-am-tom/haskell-exercises" -> "digital-asset/ghcide"
"i-am-tom/haskell-exercises" -> "JordanMartinez/purescript-jordans-reference" ["e"=1]
"i-am-tom/haskell-exercises" -> "ndmitchell/ghcid"
"i-am-tom/haskell-exercises" -> "hablapps/DontFearTheProfunctorOptics"
"jtdaugherty/brick" -> "pcapriotti/optparse-applicative"
"jtdaugherty/brick" -> "tweag/ormolu"
"jtdaugherty/brick" -> "haskell-servant/servant"
"jtdaugherty/brick" -> "haskell/haskell-language-server"
"jtdaugherty/brick" -> "composewell/streamly"
"jtdaugherty/brick" -> "ndmitchell/ghcid"
"jtdaugherty/brick" -> "kowainik/summoner"
"jtdaugherty/brick" -> "haskell/haskell-ide-engine"
"jtdaugherty/brick" -> "jtdaugherty/vty"
"jtdaugherty/brick" -> "tweag/asterius"
"jtdaugherty/brick" -> "dmjio/miso"
"jtdaugherty/brick" -> "sol/hpack"
"jtdaugherty/brick" -> "ekmett/lens"
"jtdaugherty/brick" -> "ndmitchell/hlint"
"jtdaugherty/brick" -> "mrkkrp/megaparsec"
"jtdaugherty/vty" -> "jtdaugherty/brick"
"kowainik/relude" -> "kowainik/summoner"
"kowainik/relude" -> "tweag/ormolu"
"kowainik/relude" -> "polysemy-research/polysemy"
"kowainik/relude" -> "well-typed/optics"
"kowainik/relude" -> "kowainik/stan"
"kowainik/relude" -> "commercialhaskell/rio"
"kowainik/relude" -> "hedgehogqa/haskell-hedgehog"
"kowainik/relude" -> "haskell/mtl"
"kowainik/relude" -> "haskell/bytestring"
"kowainik/relude" -> "hspec/hspec"
"kowainik/relude" -> "obsidiansystems/obelisk"
"kowainik/relude" -> "composewell/streamly"
"kowainik/relude" -> "hasura/eff"
"kowainik/relude" -> "haskell-servant/servant"
"kowainik/relude" -> "haskell/haskell-language-server"
"sdiehl/wiwinwlh" -> "sdiehl/write-you-a-haskell"
"sdiehl/wiwinwlh" -> "Gabriel439/post-rfc"
"sdiehl/wiwinwlh" -> "commercialhaskell/stack"
"sdiehl/wiwinwlh" -> "quchen/articles"
"sdiehl/wiwinwlh" -> "haskell-servant/servant"
"sdiehl/wiwinwlh" -> "ekmett/lens"
"sdiehl/wiwinwlh" -> "bitemyapp/learnhaskell"
"sdiehl/wiwinwlh" -> "haskell/haskell-ide-engine"
"sdiehl/wiwinwlh" -> "jaspervdj/hakyll"
"sdiehl/wiwinwlh" -> "krispo/awesome-haskell"
"sdiehl/wiwinwlh" -> "ndmitchell/hlint"
"sdiehl/wiwinwlh" -> "facebook/Haxl"
"sdiehl/wiwinwlh" -> "jtdaugherty/brick"
"sdiehl/wiwinwlh" -> "ghcjs/ghcjs"
"sdiehl/wiwinwlh" -> "sdiehl/kaleidoscope"
"soupi/learn-haskell-blog-generator" -> "soupi/haskell-study-plan"
"tweag/ormolu" -> "polysemy-research/polysemy"
"tweag/ormolu" -> "input-output-hk/haskell.nix"
"tweag/ormolu" -> "digital-asset/ghcide"
"tweag/ormolu" -> "composewell/streamly"
"tweag/ormolu" -> "lspitzner/brittany"
"tweag/ormolu" -> "kowainik/relude"
"tweag/ormolu" -> "ndmitchell/ghcid"
"tweag/ormolu" -> "ndmitchell/hlint"
"tweag/ormolu" -> "haskell-nix/hnix"
"tweag/ormolu" -> "kowainik/stan"
"tweag/ormolu" -> "haskell/haskell-language-server"
"tweag/ormolu" -> "hedgehogqa/haskell-hedgehog"
"tweag/ormolu" -> "kowainik/summoner"
"tweag/ormolu" -> "mrkkrp/megaparsec"
"tweag/ormolu" -> "well-typed/optics"
"yi-editor/yi" -> "faylang/fay"
"yi-editor/yi" -> "haskell/cabal"
"yi-editor/yi" -> "ghcjs/ghcjs"
"yi-editor/yi" -> "valderman/haste-compiler"
"yi-editor/yi" -> "GaloisInc/HaLVM"
"yi-editor/yi" -> "leksah/leksah"
"yi-editor/yi" -> "jaspervdj/hakyll"
"yi-editor/yi" -> "ghc/ghc"
"yi-editor/yi" -> "ekmett/lens"
"yi-editor/yi" -> "ndmitchell/shake"
"yi-editor/yi" -> "yesodweb/yesod"
"yi-editor/yi" -> "commercialhaskell/stack"
"yi-editor/yi" -> "chrisdone/structured-haskell-mode"
"yi-editor/yi" -> "idris-lang/Idris-dev"
"yi-editor/yi" -> "haskell/haskell-mode"
"alexwl/haskell-code-explorer" -> "kcsongor/generic-lens"
"alexwl/haskell-code-explorer" -> "isovector/polysemy"
"alexwl/haskell-code-explorer" -> "nmattia/snack"
"alexwl/haskell-code-explorer" -> "hedgehogqa/haskell-hedgehog"
"alexwl/haskell-code-explorer" -> "tweag/capability"
"alexwl/haskell-code-explorer" -> "mrkgnao/silica"
"alexwl/haskell-code-explorer" -> "haskell/ide"
"alexwl/haskell-code-explorer" -> "tweag/ormolu"
"alexwl/haskell-code-explorer" -> "ghc-proposals/ghc-proposals"
"alexwl/haskell-code-explorer" -> "feuerbach/tasty"
"alexwl/haskell-code-explorer" -> "valderman/selda"
"alexwl/haskell-code-explorer" -> "composewell/streamly"
"alexwl/haskell-code-explorer" -> "Lemmih/reanimate"
"alexwl/haskell-code-explorer" -> "isovector/thinking-with-types"
"alexwl/haskell-code-explorer" -> "ndmitchell/weeder"
"google/haskell-trainings" -> "cohomolo-gy/haskell-resources"
"google/haskell-trainings" -> "data61/fp-course"
"google/haskell-trainings" -> "soupi/haskell-study-plan"
"google/haskell-trainings" -> "i-am-tom/haskell-exercises"
"google/haskell-trainings" -> "graninas/software-design-in-haskell"
"google/haskell-trainings" -> "sdiehl/wiwinwlh"
"google/haskell-trainings" -> "alpacaaa/zero-bullshit-haskell"
"google/haskell-trainings" -> "tssm/up-to-date-real-world-haskell"
"google/haskell-trainings" -> "hzlmn/haskell-must-watch"
"google/haskell-trainings" -> "kowainik/summoner"
"google/haskell-trainings" -> "ndmitchell/ghcid"
"google/haskell-trainings" -> "krispo/awesome-haskell"
"google/haskell-trainings" -> "isovector/thinking-with-types"
"google/haskell-trainings" -> "plfa/plfa.github.io" ["e"=1]
"google/haskell-trainings" -> "qfpl/applied-fp-course"
"Copilot-Language/copilot" -> "composewell/streamly"
"Copilot-Language/copilot" -> "kowainik/stan"
"Copilot-Language/copilot" -> "polysemy-research/polysemy"
"Copilot-Language/copilot" -> "nasa/ogma"
"Copilot-Language/copilot" -> "grin-compiler/grin" ["e"=1]
"Copilot-Language/copilot" -> "facebookincubator/retrie"
"Copilot-Language/copilot" -> "well-typed/optics"
"composewell/streamly" -> "tweag/ormolu"
"composewell/streamly" -> "hedgehogqa/haskell-hedgehog"
"composewell/streamly" -> "polysemy-research/polysemy"
"composewell/streamly" -> "tweag/asterius"
"composewell/streamly" -> "reflex-frp/reflex"
"composewell/streamly" -> "well-typed/optics"
"composewell/streamly" -> "commercialhaskell/rio"
"composewell/streamly" -> "morphismtech/squeal"
"composewell/streamly" -> "obsidiansystems/obelisk"
"composewell/streamly" -> "mrkkrp/megaparsec"
"composewell/streamly" -> "fused-effects/fused-effects"
"composewell/streamly" -> "agentm/project-m36"
"composewell/streamly" -> "reflex-frp/reflex-platform"
"composewell/streamly" -> "isovector/polysemy"
"composewell/streamly" -> "nmattia/snack"
"Gabriel439/post-rfc" -> "commercialhaskell/stack"
"Gabriel439/post-rfc" -> "sdiehl/wiwinwlh"
"Gabriel439/post-rfc" -> "haskell-servant/servant"
"Gabriel439/post-rfc" -> "haskell/haskell-ide-engine"
"Gabriel439/post-rfc" -> "sdiehl/write-you-a-haskell"
"Gabriel439/post-rfc" -> "bitemyapp/learnhaskell"
"Gabriel439/post-rfc" -> "ndmitchell/ghcid"
"Gabriel439/post-rfc" -> "quchen/articles"
"Gabriel439/post-rfc" -> "facebook/Haxl"
"Gabriel439/post-rfc" -> "ekmett/lens"
"Gabriel439/post-rfc" -> "Gabriel439/Haskell-Turtle-Library"
"Gabriel439/post-rfc" -> "gibiansky/IHaskell"
"Gabriel439/post-rfc" -> "HuwCampbell/grenade"
"Gabriel439/post-rfc" -> "begriffs/haskell-vim-now"
"Gabriel439/post-rfc" -> "krispo/awesome-haskell"
"ajtulloch/dnngraph" -> "mikeizbicki/HLearn"
"ajtulloch/dnngraph" -> "mikeizbicki/subhask"
"ajtulloch/dnngraph" -> "HuwCampbell/grenade"
"ajtulloch/dnngraph" -> "twitter/torch-autograd" ["e"=1]
"ajtulloch/dnngraph" -> "tensorflow/haskell"
"ajtulloch/dnngraph" -> "jbarrow/LambdaNet"
"ajtulloch/dnngraph" -> "jcjohnson/cnn-vis" ["e"=1]
"ajtulloch/dnngraph" -> "ajtulloch/deeplearning-hs"
"ajtulloch/dnngraph" -> "ollef/Earley" ["e"=1]
"ajtulloch/dnngraph" -> "facebook/fb-caffe-exts" ["e"=1]
"ajtulloch/dnngraph" -> "Yangqing/caffe2" ["e"=1]
"ajtulloch/dnngraph" -> "ekmett/ad"
"ajtulloch/dnngraph" -> "joschu/cgt" ["e"=1]
"ajtulloch/dnngraph" -> "agocorona/transient"
"ajtulloch/dnngraph" -> "tweag/HaskellR"
"hasktorch/hasktorch" -> "HuwCampbell/grenade"
"hasktorch/hasktorch" -> "google-research/dex-lang" ["e"=1]
"hasktorch/hasktorch" -> "austinvhuang/awesome-haskell-deep-learning"
"hasktorch/hasktorch" -> "tensorflow/haskell"
"hasktorch/hasktorch" -> "mstksg/backprop"
"hasktorch/hasktorch" -> "Gabriel439/haskell-nix"
"hasktorch/hasktorch" -> "AccelerateHS/accelerate"
"hasktorch/hasktorch" -> "composewell/streamly"
"hasktorch/hasktorch" -> "lehins/massiv"
"hasktorch/hasktorch" -> "tweag/asterius"
"hasktorch/hasktorch" -> "ndmitchell/ghcid"
"hasktorch/hasktorch" -> "hasura/eff"
"hasktorch/hasktorch" -> "facebookincubator/retrie"
"hasktorch/hasktorch" -> "tweag/ormolu"
"hasktorch/hasktorch" -> "dhall-lang/dhall-haskell"
"kowainik/learn4haskell" -> "system-f/fp-course"
"kowainik/learn4haskell" -> "soupi/haskell-study-plan"
"kowainik/learn4haskell" -> "kowainik/summoner"
"kowainik/learn4haskell" -> "graninas/software-design-in-haskell"
"kowainik/learn4haskell" -> "haskell-beginners-2022/exercises"
"kowainik/learn4haskell" -> "haskell-beginners-2022/course-plan"
"kowainik/learn4haskell" -> "tssm/up-to-date-real-world-haskell"
"kowainik/learn4haskell" -> "i-am-tom/haskell-exercises"
"kowainik/learn4haskell" -> "exercism/haskell"
"kowainik/learn4haskell" -> "kowainik/stan"
"kowainik/learn4haskell" -> "haskell/haskell-language-server"
"kowainik/learn4haskell" -> "kowainik/relude"
"kowainik/learn4haskell" -> "haskell/aeson"
"kowainik/learn4haskell" -> "tweag/awesome-learning-haskell"
"kowainik/learn4haskell" -> "cohomolo-gy/haskell-resources"
"quchen/articles" -> "sdiehl/wiwinwlh"
"quchen/articles" -> "ekmett/lens"
"quchen/articles" -> "ndmitchell/ghcid"
"quchen/articles" -> "ghc-proposals/ghc-proposals"
"quchen/articles" -> "cohomolo-gy/haskell-resources"
"quchen/articles" -> "Gabriel439/post-rfc"
"quchen/articles" -> "jwbuurlage/category-theory-programmers"
"quchen/articles" -> "Gabriel439/haskell-nix"
"quchen/articles" -> "gelisam/frp-zoo"
"quchen/articles" -> "tibbe/haskell-style-guide"
"quchen/articles" -> "jtdaugherty/brick"
"quchen/articles" -> "lspitzner/brittany"
"quchen/articles" -> "ollef/sixten" ["e"=1]
"quchen/articles" -> "ndmitchell/shake"
"quchen/articles" -> "haskell-servant/servant"
"steshaw/plt" -> "jozefg/learn-tt" ["e"=1]
"steshaw/plt" -> "sdiehl/write-you-a-haskell"
"steshaw/plt" -> "aalhour/awesome-compilers" ["e"=1]
"steshaw/plt" -> "bitemyapp/learnhaskell"
"steshaw/plt" -> "idris-lang/Idris-dev"
"steshaw/plt" -> "tomprimozic/type-systems" ["e"=1]
"steshaw/plt" -> "cisco/ChezScheme" ["e"=1]
"steshaw/plt" -> "hmemcpy/milewski-ctfp-pdf"
"steshaw/plt" -> "kanaka/mal" ["e"=1]
"steshaw/plt" -> "sdiehl/wiwinwlh"
"steshaw/plt" -> "agda/agda" ["e"=1]
"steshaw/plt" -> "caiorss/Functional-Programming"
"steshaw/plt" -> "coq/coq" ["e"=1]
"steshaw/plt" -> "andrejbauer/plzoo" ["e"=1]
"steshaw/plt" -> "Gabriel439/post-rfc"
"haskell/aeson" -> "haskell/text"
"haskell/aeson" -> "UnkindPartition/tasty"
"haskell/aeson" -> "haskell/mtl"
"haskell/aeson" -> "fourmolu/fourmolu"
"haskell/aeson" -> "tweag/ormolu"
"haskell/aeson" -> "mrkkrp/req"
"haskell/aeson" -> "haskell/bytestring"
"haskell/aeson" -> "haskell/haddock"
"haskell/aeson" -> "polysemy-research/polysemy"
"haskell/aeson" -> "haskell-unordered-containers/unordered-containers"
"haskell/aeson" -> "haskell/lsp"
"tdietert/nanocoin" -> "aviaviavi/legion"
"tdietert/nanocoin" -> "haskoin/haskoin"
"tdietert/nanocoin" -> "adjoint-io/nanochain"
"tdietert/nanocoin" -> "sdiehl/protolude"
"tdietert/nanocoin" -> "haskell-wasm/wasm"
"tdietert/nanocoin" -> "adjoint-io/uplink"
"tdietert/nanocoin" -> "adjoint-io/merkle-tree"
"tdietert/nanocoin" -> "alexmingoia/purescript-pux" ["e"=1]
"tdietert/nanocoin" -> "chrisdone/wish"
"tdietert/nanocoin" -> "mrkgnao/silica"
"tdietert/nanocoin" -> "HuwCampbell/grenade"
"tdietert/nanocoin" -> "jamesob/tinychain" ["e"=1]
"tdietert/nanocoin" -> "Gabriel439/haskell-nix"
"tdietert/nanocoin" -> "agentm/project-m36"
"lettier/gifcurry" -> "lettier/movie-monad"
"lettier/gifcurry" -> "onmyway133/GifCapture"
"lettier/gifcurry" -> "haskell-servant/servant"
"lettier/gifcurry" -> "quchen/prettyprinter"
"lettier/gifcurry" -> "dmjio/miso"
"lettier/gifcurry" -> "rgleichman/glance"
"lettier/gifcurry" -> "obsidiansystems/obelisk"
"lettier/gifcurry" -> "jtdaugherty/brick"
"lettier/gifcurry" -> "chrisdone/wish"
"lettier/gifcurry" -> "composewell/streamly"
"lettier/gifcurry" -> "cdepillabout/termonad"
"lettier/gifcurry" -> "ndmitchell/hoogle"
"lettier/gifcurry" -> "jliljebl/flowblade" ["e"=1]
"lettier/gifcurry" -> "soupi/haskell-study-plan"
"lettier/gifcurry" -> "graninas/software-design-in-haskell"
"yesodweb/yesod" -> "commercialhaskell/stack"
"yesodweb/yesod" -> "ghcjs/ghcjs"
"yesodweb/yesod" -> "jaspervdj/hakyll"
"yesodweb/yesod" -> "ghc/ghc"
"yesodweb/yesod" -> "faylang/fay"
"yesodweb/yesod" -> "scotty-web/scotty"
"yesodweb/yesod" -> "haskell-servant/servant"
"yesodweb/yesod" -> "ekmett/lens"
"yesodweb/yesod" -> "yesodweb/wai"
"yesodweb/yesod" -> "facebook/Haxl"
"yesodweb/yesod" -> "yesodweb/persistent"
"yesodweb/yesod" -> "bos/aeson"
"yesodweb/yesod" -> "purescript/purescript"
"yesodweb/yesod" -> "snoyberg/conduit"
"yesodweb/yesod" -> "haskell/cabal"
"chrisdone/haskell-emacs" -> "pheaver/haskell-mode"
"faylang/fay" -> "valderman/haste-compiler"
"faylang/fay" -> "evancz/Elm"
"faylang/fay" -> "ghcjs/ghcjs"
"faylang/fay" -> "yesodweb/yesod"
"faylang/fay" -> "yi-editor/yi"
"faylang/fay" -> "ekmett/lens"
"faylang/fay" -> "jaspervdj/hakyll"
"faylang/fay" -> "bos/aeson"
"faylang/fay" -> "haskell/cabal"
"faylang/fay" -> "GaloisInc/HaLVM"
"faylang/fay" -> "haskell-distributed/distributed-process"
"faylang/fay" -> "Gabriel439/Haskell-Pipes-Library"
"faylang/fay" -> "chrisdone/structured-haskell-mode"
"faylang/fay" -> "ghc/ghc"
"faylang/fay" -> "chrisdone/hell"
"jagajaga/FP-Course-ITMO" -> "mbuzdalov/latex-styles"
"jagajaga/FP-Course-ITMO" -> "data61/fp-course"
"jagajaga/FP-Course-ITMO" -> "cohomolo-gy/haskell-resources"
"jagajaga/FP-Course-ITMO" -> "volhovM/study-notes"
"jagajaga/FP-Course-ITMO" -> "artemohanjanyan/tt-conspect"
"jagajaga/FP-Course-ITMO" -> "graninas/software-design-in-haskell"
"jagajaga/FP-Course-ITMO" -> "ruHaskell/ruhaskell" ["e"=1]
"jagajaga/FP-Course-ITMO" -> "erkmos/haskell-companies"
"jagajaga/FP-Course-ITMO" -> "soupi/haskell-study-plan"
"jagajaga/FP-Course-ITMO" -> "qfpl/applied-fp-course"
"jagajaga/FP-Course-ITMO" -> "i-am-tom/haskell-exercises"
"jagajaga/FP-Course-ITMO" -> "mrkkrp/megaparsec"
"jagajaga/FP-Course-ITMO" -> "Gabriel439/post-rfc"
"jagajaga/FP-Course-ITMO" -> "quchen/articles"
"jagajaga/FP-Course-ITMO" -> "serokell/importify"
"steshaw/plt-study" -> "yallop/popl2015-papers" ["e"=1]
"cdepillabout/termonad" -> "cdepillabout/pretty-simple"
"cdepillabout/termonad" -> "ndmitchell/ghcid"
"cdepillabout/termonad" -> "tweag/ormolu"
"cdepillabout/termonad" -> "lazamar/haskell-docs-cli"
"cdepillabout/termonad" -> "fjvallarino/monomer"
"cdepillabout/termonad" -> "waymonad/waymonad"
"cdepillabout/termonad" -> "haskell-nix/hnix"
"cdepillabout/termonad" -> "composewell/streamly"
"owickstrom/gi-gtk-declarative" -> "haskell-gi/haskell-gi"
"owickstrom/gi-gtk-declarative" -> "natefaubion/purescript-routing-duplex" ["e"=1]
"owickstrom/gi-gtk-declarative" -> "ennocramer/floskell"
"owickstrom/gi-gtk-declarative" -> "owickstrom/komposition"
"owickstrom/gi-gtk-declarative" -> "fjvallarino/monomer"
"ekmett/lens" -> "ghc/ghc"
"ekmett/lens" -> "haskell-servant/servant"
"ekmett/lens" -> "bos/aeson"
"ekmett/lens" -> "haskell/cabal"
"ekmett/lens" -> "ghcjs/ghcjs"
"ekmett/lens" -> "commercialhaskell/stack"
"ekmett/lens" -> "haskell/haskell-ide-engine"
"ekmett/lens" -> "pcapriotti/optparse-applicative"
"ekmett/lens" -> "ndmitchell/ghcid"
"ekmett/lens" -> "yesodweb/yesod"
"ekmett/lens" -> "facebook/Haxl"
"ekmett/lens" -> "idris-lang/Idris-dev"
"ekmett/lens" -> "snoyberg/conduit"
"ekmett/lens" -> "jaspervdj/hakyll"
"ekmett/lens" -> "ndmitchell/hlint"
"serras/emacs-haskell-tutorial" -> "haskell/haskell-mode"
"serras/emacs-haskell-tutorial" -> "chrisdone/structured-haskell-mode"
"serras/emacs-haskell-tutorial" -> "chrisdone/emacs-haskell-config"
"serras/emacs-haskell-tutorial" -> "commercialhaskell/intero"
"serras/emacs-haskell-tutorial" -> "iquiw/company-ghc"
"serras/emacs-haskell-tutorial" -> "jyp/dante"
"serras/emacs-haskell-tutorial" -> "tibbe/haskell-style-guide"
"serras/emacs-haskell-tutorial" -> "kazu-yamamoto/ghc-mod"
"serras/emacs-haskell-tutorial" -> "JakeWheat/intro_to_parsing"
"serras/emacs-haskell-tutorial" -> "ekmett/lens"
"serras/emacs-haskell-tutorial" -> "quchen/articles"
"serras/emacs-haskell-tutorial" -> "chrisdone/hindent"
"serras/emacs-haskell-tutorial" -> "NICTA/course"
"serras/emacs-haskell-tutorial" -> "knupfer/haskell-emacs"
"serras/emacs-haskell-tutorial" -> "jaspervdj/stylish-haskell"
"fumieval/deriving-aeson" -> "gelisam/typelevel-rewrite-rules"
"input-output-hk/haskell.nix" -> "nh2/static-haskell-nix"
"input-output-hk/haskell.nix" -> "tweag/ormolu"
"input-output-hk/haskell.nix" -> "Gabriel439/haskell-nix"
"input-output-hk/haskell.nix" -> "nmattia/snack"
"input-output-hk/haskell.nix" -> "nmattia/niv" ["e"=1]
"input-output-hk/haskell.nix" -> "target/lorri" ["e"=1]
"input-output-hk/haskell.nix" -> "haskell-nix/hnix"
"input-output-hk/haskell.nix" -> "cachix/cachix" ["e"=1]
"input-output-hk/haskell.nix" -> "NixOS/cabal2nix"
"input-output-hk/haskell.nix" -> "alpmestan/ghc.nix"
"input-output-hk/haskell.nix" -> "digital-asset/ghcide"
"input-output-hk/haskell.nix" -> "sol/hpack"
"input-output-hk/haskell.nix" -> "input-output-hk/nix-tools"
"input-output-hk/haskell.nix" -> "lspitzner/brittany"
"input-output-hk/haskell.nix" -> "matthewbauer/nix-bundle" ["e"=1]
"lspitzner/brittany" -> "tweag/ormolu"
"lspitzner/brittany" -> "jaspervdj/stylish-haskell"
"lspitzner/brittany" -> "kcsongor/generic-lens"
"lspitzner/brittany" -> "ndmitchell/ghcid"
"lspitzner/brittany" -> "hedgehogqa/haskell-hedgehog"
"lspitzner/brittany" -> "ndmitchell/hlint"
"lspitzner/brittany" -> "sol/hpack"
"lspitzner/brittany" -> "kowainik/summoner"
"lspitzner/brittany" -> "nh2/static-haskell-nix"
"lspitzner/brittany" -> "pcapriotti/optparse-applicative"
"lspitzner/brittany" -> "Gabriel439/haskell-nix"
"lspitzner/brittany" -> "digital-asset/ghcide"
"lspitzner/brittany" -> "feuerbach/tasty"
"lspitzner/brittany" -> "mrkkrp/megaparsec"
"lspitzner/brittany" -> "morphismtech/squeal"
"siers/nix-gitignore" -> "hercules-ci/gitignore"
"simonmar/parconc-examples" -> "haskell/ThreadScope"
"simonmar/parconc-examples" -> "bos/wreq"
"simonmar/parconc-examples" -> "simonmar/async"
"simonmar/parconc-examples" -> "informatikr/hedis"
"simonmar/parconc-examples" -> "fpco/unliftio"
"simonmar/parconc-examples" -> "simonmar/par-tutorial"
"simonmar/parconc-examples" -> "pepeiborra/hls-tutorial"
"luna/luna" -> "luna/luna-studio"
"luna/luna" -> "luna/enso"
"luna/luna" -> "typelead/eta"
"luna/luna" -> "unisonweb/unison" ["e"=1]
"luna/luna" -> "idris-lang/Idris-dev"
"luna/luna" -> "purescript/purescript"
"luna/luna" -> "dmjio/miso"
"luna/luna" -> "haskell/haskell-ide-engine"
"luna/luna" -> "commercialhaskell/stack"
"luna/luna" -> "witheve/Eve" ["e"=1]
"luna/luna" -> "tweag/asterius"
"luna/luna" -> "facebook/Haxl"
"luna/luna" -> "sdiehl/write-you-a-haskell"
"luna/luna" -> "ghcjs/ghcjs"
"luna/luna" -> "dhall-lang/dhall-lang"
"facebook/Haxl" -> "commercialhaskell/stack"
"facebook/Haxl" -> "ekmett/lens"
"facebook/Haxl" -> "yesodweb/yesod"
"facebook/Haxl" -> "ghcjs/ghcjs"
"facebook/Haxl" -> "ghc/ghc"
"facebook/Haxl" -> "haskell-servant/servant"
"facebook/Haxl" -> "scotty-web/scotty"
"facebook/Haxl" -> "sdiehl/write-you-a-haskell"
"facebook/Haxl" -> "purescript/purescript"
"facebook/Haxl" -> "bitemyapp/learnhaskell"
"facebook/Haxl" -> "idris-lang/Idris-dev"
"facebook/Haxl" -> "NICTA/course"
"facebook/Haxl" -> "gibiansky/IHaskell"
"facebook/Haxl" -> "jaspervdj/hakyll"
"facebook/Haxl" -> "tensorflow/haskell"
"erkmos/haskell-companies" -> "ndmitchell/ghcid"
"erkmos/haskell-companies" -> "i-am-tom/haskell-exercises"
"erkmos/haskell-companies" -> "hedgehogqa/haskell-hedgehog"
"erkmos/haskell-companies" -> "graninas/software-design-in-haskell"
"erkmos/haskell-companies" -> "cohomolo-gy/haskell-resources"
"erkmos/haskell-companies" -> "willbasky/Awesome-list-of-Haskell-mentors"
"erkmos/haskell-companies" -> "kowainik/summoner"
"erkmos/haskell-companies" -> "Gabriel439/haskell-nix"
"erkmos/haskell-companies" -> "digital-asset/ghcide"
"erkmos/haskell-companies" -> "soupi/haskell-study-plan"
"erkmos/haskell-companies" -> "ghc-proposals/ghc-proposals"
"erkmos/haskell-companies" -> "haskell-perf/checklist"
"erkmos/haskell-companies" -> "lspitzner/brittany"
"erkmos/haskell-companies" -> "haskell-nix/hnix"
"erkmos/haskell-companies" -> "composewell/streamly"
"scotty-web/scotty" -> "agrafix/Spock"
"scotty-web/scotty" -> "haskell-servant/servant"
"scotty-web/scotty" -> "yesodweb/yesod"
"scotty-web/scotty" -> "yesodweb/wai"
"scotty-web/scotty" -> "bos/aeson"
"scotty-web/scotty" -> "commercialhaskell/stack"
"scotty-web/scotty" -> "ekmett/lens"
"scotty-web/scotty" -> "facebook/Haxl"
"scotty-web/scotty" -> "ghcjs/ghcjs"
"scotty-web/scotty" -> "pcapriotti/optparse-applicative"
"scotty-web/scotty" -> "dmjio/miso"
"scotty-web/scotty" -> "jaspervdj/hakyll"
"scotty-web/scotty" -> "ndmitchell/ghcid"
"scotty-web/scotty" -> "hspec/hspec"
"scotty-web/scotty" -> "mrkkrp/megaparsec"
"david-janssen/kmonad" -> "cdepillabout/termonad"
"david-janssen/kmonad" -> "taffybar/taffybar"
"david-janssen/kmonad" -> "ItayGarin/ktrl" ["e"=1]
"david-janssen/kmonad" -> "davidphilipbarr/36keys" ["e"=1]
"david-janssen/kmonad" -> "xmonad/xmonad-contrib"
"david-janssen/kmonad" -> "kowainik/stan"
"david-janssen/kmonad" -> "target/lorri" ["e"=1]
"david-janssen/kmonad" -> "digital-asset/ghcide"
"david-janssen/kmonad" -> "nh2/static-haskell-nix"
"david-janssen/kmonad" -> "facebookincubator/retrie"
"david-janssen/kmonad" -> "jyp/dante"
"david-janssen/kmonad" -> "nrdxp/nixflk" ["e"=1]
"david-janssen/kmonad" -> "manna-harbour/miryoku" ["e"=1]
"david-janssen/kmonad" -> "nix-community/NUR" ["e"=1]
"david-janssen/kmonad" -> "nmattia/niv" ["e"=1]
"reanimate/reanimate" -> "Wikunia/Javis.jl" ["e"=1]
"reanimate/reanimate" -> "fjvallarino/monomer"
"reanimate/reanimate" -> "kowainik/stan"
"reanimate/reanimate" -> "hasura/eff"
"reanimate/reanimate" -> "composewell/streamly"
"reanimate/reanimate" -> "haskell/haskell-language-server"
"reanimate/reanimate" -> "tweag/asterius"
"reanimate/reanimate" -> "tweag/ormolu"
"reanimate/reanimate" -> "haskell/actions"
"reanimate/reanimate" -> "Matheart/manim-physics" ["e"=1]
"reanimate/reanimate" -> "tssm/up-to-date-real-world-haskell"
"reanimate/reanimate" -> "input-output-hk/haskell.nix"
"reanimate/reanimate" -> "byorgey/swarm"
"reanimate/reanimate" -> "fused-effects/fused-effects"
"reanimate/reanimate" -> "haskell-servant/servant"
"cohomolo-gy/haskell-resources" -> "i-am-tom/haskell-exercises"
"cohomolo-gy/haskell-resources" -> "graninas/software-design-in-haskell"
"cohomolo-gy/haskell-resources" -> "qfpl/applied-fp-course"
"cohomolo-gy/haskell-resources" -> "tssm/up-to-date-real-world-haskell"
"cohomolo-gy/haskell-resources" -> "soupi/haskell-study-plan"
"cohomolo-gy/haskell-resources" -> "Gabriel439/haskell-nix"
"cohomolo-gy/haskell-resources" -> "thma/LtuPatternFactory"
"cohomolo-gy/haskell-resources" -> "alexwl/haskell-code-explorer"
"cohomolo-gy/haskell-resources" -> "erkmos/haskell-companies"
"cohomolo-gy/haskell-resources" -> "plfa/plfa.github.io" ["e"=1]
"cohomolo-gy/haskell-resources" -> "thomashoneyman/purescript-halogen-realworld" ["e"=1]
"cohomolo-gy/haskell-resources" -> "quchen/articles"
"cohomolo-gy/haskell-resources" -> "ndmitchell/ghcid"
"cohomolo-gy/haskell-resources" -> "Holmusk/three-layer"
"cohomolo-gy/haskell-resources" -> "hasura/eff"
"digital-asset/ghcide" -> "haskell/ide"
"digital-asset/ghcide" -> "tweag/ormolu"
"digital-asset/ghcide" -> "kowainik/stan"
"digital-asset/ghcide" -> "ghc-proposals/ghc-proposals"
"digital-asset/ghcide" -> "mpickering/hie-bios"
"digital-asset/ghcide" -> "pepeiborra/hls-tutorial"
"digital-asset/ghcide" -> "well-typed/optics"
"digital-asset/ghcide" -> "facebookincubator/retrie"
"digital-asset/ghcide" -> "composewell/streamly"
"digital-asset/ghcide" -> "nmattia/snack"
"digital-asset/ghcide" -> "sol/hpack"
"digital-asset/ghcide" -> "input-output-hk/haskell.nix"
"digital-asset/ghcide" -> "haskell/haskell-ide-engine"
"digital-asset/ghcide" -> "lspitzner/brittany"
"digital-asset/ghcide" -> "ndmitchell/ghcid"
"kcsongor/generic-lens" -> "tweag/capability"
"kcsongor/generic-lens" -> "i-am-tom/higgledy"
"kcsongor/generic-lens" -> "nomeata/inspection-testing"
"kcsongor/generic-lens" -> "isovector/polysemy"
"kcsongor/generic-lens" -> "lexi-lambda/freer-simple"
"kcsongor/generic-lens" -> "well-typed/optics"
"kcsongor/generic-lens" -> "alexwl/haskell-code-explorer"
"kcsongor/generic-lens" -> "hedgehogqa/haskell-hedgehog"
"kcsongor/generic-lens" -> "lspitzner/brittany"
"kcsongor/generic-lens" -> "fumieval/deriving-aeson"
"kcsongor/generic-lens" -> "goldfirere/singletons"
"kcsongor/generic-lens" -> "tathougies/beam"
"kcsongor/generic-lens" -> "valderman/selda"
"kcsongor/generic-lens" -> "nh2/static-haskell-nix"
"kcsongor/generic-lens" -> "ghc-proposals/ghc-proposals"
"lexi-lambda/freer-simple" -> "kcsongor/generic-lens"
"lexi-lambda/freer-simple" -> "isovector/polysemy"
"lexi-lambda/freer-simple" -> "jkachmar/alpine-haskell-stack"
"lexi-lambda/freer-simple" -> "tweag/capability"
"nh2/static-haskell-nix" -> "input-output-hk/haskell.nix"
"nh2/static-haskell-nix" -> "nmattia/snack"
"nh2/static-haskell-nix" -> "alpmestan/ghc.nix"
"nh2/static-haskell-nix" -> "haskell-nix/hnix"
"nh2/static-haskell-nix" -> "Infinisil/all-hies"
"nh2/static-haskell-nix" -> "utdemir/ghc-musl"
"nh2/static-haskell-nix" -> "Gabriel439/haskell-nix"
"nh2/static-haskell-nix" -> "fghibellini/nix-haskell-monorepo"
"nh2/static-haskell-nix" -> "kcsongor/generic-lens"
"nh2/static-haskell-nix" -> "tweag/rules_haskell"
"nh2/static-haskell-nix" -> "tweag/ormolu"
"nh2/static-haskell-nix" -> "lspitzner/brittany"
"nh2/static-haskell-nix" -> "jkachmar/alpine-haskell-stack"
"nh2/static-haskell-nix" -> "nmattia/niv" ["e"=1]
"nh2/static-haskell-nix" -> "input-output-hk/stack2nix"
"quchen/stgi" -> "takenobu-hs/haskell-ghc-illustrated"
"quchen/stgi" -> "IntelLabs/flrc"
"quchen/stgi" -> "ghc-proposals/ghc-proposals"
"quchen/stgi" -> "ollef/sixten" ["e"=1]
"quchen/stgi" -> "agentm/project-m36"
"quchen/stgi" -> "grin-compiler/grin" ["e"=1]
"quchen/stgi" -> "valderman/selda"
"quchen/stgi" -> "nmattia/snack"
"quchen/stgi" -> "bjpop/ministg"
"quchen/stgi" -> "isovector/polysemy"
"quchen/stgi" -> "ollef/Earley" ["e"=1]
"quchen/stgi" -> "haskus/haskus-system"
"quchen/stgi" -> "grin-tech/grin"
"quchen/stgi" -> "jozefg/higher-order-unification" ["e"=1]
"quchen/stgi" -> "beerendlauwers/haskell-papers-ereader"
"takenobu-hs/haskell-symbol-search-cheatsheet" -> "takenobu-hs/haskell-ghc-illustrated"
"takenobu-hs/haskell-symbol-search-cheatsheet" -> "fbsamples/ghc-hotswap"
"pkamenarsky/concur-replica" -> "pkamenarsky/replica"
"sdiehl/kaleidoscope" -> "sdiehl/write-you-a-haskell"
"sdiehl/kaleidoscope" -> "llvm-hs/llvm-hs"
"sdiehl/kaleidoscope" -> "sdiehl/wiwinwlh"
"sdiehl/kaleidoscope" -> "mrkkrp/megaparsec"
"sdiehl/kaleidoscope" -> "Gabriel439/Haskell-Turtle-Library"
"sdiehl/kaleidoscope" -> "JakeWheat/intro_to_parsing"
"sdiehl/kaleidoscope" -> "write-you-a-scheme-v2/scheme"
"sdiehl/kaleidoscope" -> "llvm-hs/llvm-hs-kaleidoscope"
"sdiehl/kaleidoscope" -> "ghc/ghc"
"sdiehl/kaleidoscope" -> "quchen/articles"
"sdiehl/kaleidoscope" -> "ghcjs/ghcjs"
"sdiehl/kaleidoscope" -> "ollef/Earley" ["e"=1]
"sdiehl/kaleidoscope" -> "jauhien/iron-kaleidoscope" ["e"=1]
"sdiehl/kaleidoscope" -> "tomprimozic/type-systems" ["e"=1]
"sdiehl/kaleidoscope" -> "GaloisInc/HaLVM"
"tonymorris/fp-course" -> "data61/fp-course"
"tonymorris/fp-course" -> "qfpl/applied-fp-course"
"tonymorris/fp-course" -> "system-f/fp-course"
"tonymorris/fp-course" -> "jdegoes/functional-scala" ["e"=1]
"tonymorris/fp-course" -> "bitemyapp/fp-course"
"typelead/eta" -> "Frege/frege"
"typelead/eta" -> "idris-lang/Idris-dev"
"typelead/eta" -> "purescript/purescript"
"typelead/eta" -> "haskell/haskell-ide-engine"
"typelead/eta" -> "ghcjs/ghcjs"
"typelead/eta" -> "commercialhaskell/stack"
"typelead/eta" -> "functional-streams-for-scala/fs2" ["e"=1]
"typelead/eta" -> "lampepfl/dotty" ["e"=1]
"typelead/eta" -> "dmjio/miso"
"typelead/eta" -> "haskell-servant/servant"
"typelead/eta" -> "tensorflow/haskell"
"typelead/eta" -> "unisonweb/unison" ["e"=1]
"typelead/eta" -> "ekmett/lens"
"typelead/eta" -> "typelevel/cats" ["e"=1]
"typelead/eta" -> "ghc/ghc"
"jtdaugherty/tart" -> "purebred-mua/purebred" ["e"=1]
"sharkdp/cube-composer" -> "purescript/purescript"
"sharkdp/cube-composer" -> "thomashoneyman/purescript-halogen-realworld" ["e"=1]
"sharkdp/cube-composer" -> "slamdata/purescript-halogen" ["e"=1]
"sharkdp/cube-composer" -> "haskell-servant/servant"
"sharkdp/cube-composer" -> "JordanMartinez/purescript-jordans-reference" ["e"=1]
"sharkdp/cube-composer" -> "sharkdp/insect" ["e"=1]
"sharkdp/cube-composer" -> "alexmingoia/purescript-pux" ["e"=1]
"sharkdp/cube-composer" -> "typelead/eta"
"sharkdp/cube-composer" -> "passy/awesome-purescript" ["e"=1]
"sharkdp/cube-composer" -> "paf31/purescript-book" ["e"=1]
"sharkdp/cube-composer" -> "google/codeworld"
"sharkdp/cube-composer" -> "sdiehl/write-you-a-haskell"
"sharkdp/cube-composer" -> "idris-lang/Idris-dev"
"sharkdp/cube-composer" -> "ekmett/lens"
"sharkdp/cube-composer" -> "commercialhaskell/stack"
"parsonsmatt/intero-neovim" -> "myfreeweb/intero.nvim"
"parsonsmatt/intero-neovim" -> "neovimhaskell/nvim-hs"
"parsonsmatt/intero-neovim" -> "aloiscochard/codex"
"parsonsmatt/intero-neovim" -> "owickstrom/neovim-ghci"
"parsonsmatt/intero-neovim" -> "neovimhaskell/haskell-vim"
"parsonsmatt/intero-neovim" -> "lspitzner/brittany"
"parsonsmatt/intero-neovim" -> "MarcWeber/hasktags"
"parsonsmatt/intero-neovim" -> "sol/hpack"
"bitemyapp/fp-course" -> "exercism/haskell"
"bitemyapp/fp-course" -> "data61/fp-course"
"bitemyapp/fp-course" -> "tonymorris/fp-course"
"bitemyapp/fp-course" -> "qfpl/applied-fp-course"
"bitemyapp/fp-course" -> "system-f/fp-course"
"bitemyapp/fp-course" -> "bitemyapp/learnhaskell"
"bitemyapp/fp-course" -> "hzlmn/haskell-must-watch"
"bitemyapp/fp-course" -> "google/haskell-trainings"
"bitemyapp/fp-course" -> "bravit/hid-examples"
"bitemyapp/fp-course" -> "graninas/software-design-in-haskell"
"bitemyapp/fp-course" -> "i-am-tom/haskell-exercises"
"chris-taylor/aima-haskell" -> "mikeizbicki/HLearn"
"chris-taylor/aima-haskell" -> "commercialhaskell/commercialhaskell"
"chris-taylor/aima-haskell" -> "meiersi/HaskellerZ"
"chris-taylor/aima-haskell" -> "jbarrow/LambdaNet"
"jgm/gitit" -> "jaspervdj/hakyll"
"jgm/gitit" -> "yi-editor/yi"
"jgm/gitit" -> "jgm/gitit2"
"jgm/gitit" -> "yesodweb/yesod"
"jgm/gitit" -> "joeyh/git-annex" ["e"=1]
"jgm/gitit" -> "jgm/yst" ["e"=1]
"jgm/gitit" -> "faylang/fay"
"jgm/gitit" -> "gollum/gollum" ["e"=1]
"jgm/gitit" -> "menduo/gitit-bigger"
"jgm/gitit" -> "github/gollum" ["e"=1]
"jgm/gitit" -> "gibiansky/IHaskell"
"jgm/gitit" -> "commercialhaskell/stack"
"jgm/gitit" -> "haskell/haskell-mode"
"jgm/gitit" -> "ghc/ghc"
"jgm/gitit" -> "vim-pandoc/vim-pandoc" ["e"=1]
"gibiansky/IHaskell" -> "mikeizbicki/HLearn"
"gibiansky/IHaskell" -> "ghcjs/ghcjs"
"gibiansky/IHaskell" -> "ekmett/lens"
"gibiansky/IHaskell" -> "commercialhaskell/stack"
"gibiansky/IHaskell" -> "haskell/haskell-ide-engine"
"gibiansky/IHaskell" -> "jaspervdj/hakyll"
"gibiansky/IHaskell" -> "facebook/Haxl"
"gibiansky/IHaskell" -> "tensorflow/haskell"
"gibiansky/IHaskell" -> "ndmitchell/ghcid"
"gibiansky/IHaskell" -> "ghc/ghc"
"gibiansky/IHaskell" -> "sdiehl/write-you-a-haskell"
"gibiansky/IHaskell" -> "Gabriel439/post-rfc"
"gibiansky/IHaskell" -> "yi-editor/yi"
"gibiansky/IHaskell" -> "idris-lang/Idris-dev"
"gibiansky/IHaskell" -> "valderman/haste-compiler"
"mikeizbicki/HLearn" -> "mikeizbicki/subhask"
"mikeizbicki/HLearn" -> "tensorflow/haskell"
"mikeizbicki/HLearn" -> "gibiansky/IHaskell"
"mikeizbicki/HLearn" -> "HuwCampbell/grenade"
"mikeizbicki/HLearn" -> "ekmett/lens"
"mikeizbicki/HLearn" -> "ghcjs/ghcjs"
"mikeizbicki/HLearn" -> "NICTA/course"
"mikeizbicki/HLearn" -> "begriffs/haskell-vim-now"
"mikeizbicki/HLearn" -> "ajtulloch/dnngraph"
"mikeizbicki/HLearn" -> "AccelerateHS/accelerate"
"mikeizbicki/HLearn" -> "commercialhaskell/stack"
"mikeizbicki/HLearn" -> "valderman/haste-compiler"
"mikeizbicki/HLearn" -> "facebook/Haxl"
"mikeizbicki/HLearn" -> "haskell-distributed/distributed-process"
"mikeizbicki/HLearn" -> "timbod7/haskell-chart"
"tweag/sparkle" -> "rahulmutt/ghcvm"
"tweag/sparkle" -> "tweag/funflow"
"tweag/sparkle" -> "tweag/HaskellR"
"tweag/sparkle" -> "aristidb/aws"
"tweag/sparkle" -> "brendanhay/gogol"
"tweag/sparkle" -> "Soostone/katip"
"tweag/sparkle" -> "transient-haskell/transient"
"tweag/sparkle" -> "acid-state/acid-state"
"tweag/sparkle" -> "tepf/QuickPlot"
"tweag/sparkle" -> "tomjaguarpaw/haskell-opaleye"
"tweag/sparkle" -> "haskell-distributed/distributed-process"
"tweag/sparkle" -> "sdiehl/protolude"
"tweag/sparkle" -> "tibbe/ekg"
"tweag/sparkle" -> "haskell/vector"
"adjoint-io/raft" -> "adjoint-io/uplink"
"hzlmn/haskell-must-watch" -> "soupi/haskell-study-plan"
"hzlmn/haskell-must-watch" -> "krispo/awesome-haskell"
"hzlmn/haskell-must-watch" -> "graninas/software-design-in-haskell"
"hzlmn/haskell-must-watch" -> "sdiehl/wiwinwlh"
"hzlmn/haskell-must-watch" -> "tssm/up-to-date-real-world-haskell"
"hzlmn/haskell-must-watch" -> "HuwCampbell/grenade"
"hzlmn/haskell-must-watch" -> "data61/fp-course"
"hzlmn/haskell-must-watch" -> "i-am-tom/haskell-exercises"
"hzlmn/haskell-must-watch" -> "quchen/articles"
"hzlmn/haskell-must-watch" -> "qfpl/applied-fp-course"
"hzlmn/haskell-must-watch" -> "erkmos/haskell-companies"
"hzlmn/haskell-must-watch" -> "google/haskell-trainings"
"hzlmn/haskell-must-watch" -> "thma/LtuPatternFactory"
"hzlmn/haskell-must-watch" -> "serras/emacs-haskell-tutorial"
"hzlmn/haskell-must-watch" -> "sdiehl/write-you-a-haskell"
"yesodweb/wai" -> "yesodweb/persistent"
"yesodweb/wai" -> "bos/aeson"
"yesodweb/wai" -> "scotty-web/scotty"
"yesodweb/wai" -> "yesodweb/yesod"
"yesodweb/wai" -> "snoyberg/conduit"
"yesodweb/wai" -> "haskell-servant/servant"
"yesodweb/wai" -> "ekmett/lens"
"yesodweb/wai" -> "snoyberg/http-client"
"yesodweb/wai" -> "kazu-yamamoto/mighttpd2"
"yesodweb/wai" -> "simonmar/async"
"yesodweb/wai" -> "informatikr/hedis"
"yesodweb/wai" -> "haskell/network"
"yesodweb/wai" -> "snoyberg/keter"
"yesodweb/wai" -> "pcapriotti/optparse-applicative"
"yesodweb/wai" -> "mrkkrp/megaparsec"
"bitemyapp/esqueleto" -> "yesodweb/persistent"
"bitemyapp/esqueleto" -> "mrkkrp/req"
"bitemyapp/esqueleto" -> "nikita-volkov/hasql"
"bitemyapp/esqueleto" -> "sol/hpack"
"bitemyapp/esqueleto" -> "parsonsmatt/servant-persistent"
"bitemyapp/esqueleto" -> "commercialhaskell/rio"
"bitemyapp/esqueleto" -> "well-typed/optics"
"bitemyapp/esqueleto" -> "kcsongor/generic-lens"
"bitemyapp/esqueleto" -> "tathougies/beam"
"bitemyapp/esqueleto" -> "frasertweedale/hs-jose"
"bitemyapp/esqueleto" -> "haskell/mtl"
"bitemyapp/esqueleto" -> "tomjaguarpaw/haskell-opaleye"
"bitemyapp/esqueleto" -> "haskell-servant/servant-auth" ["e"=1]
"bitemyapp/esqueleto" -> "lspitzner/brittany"
"bitemyapp/esqueleto" -> "Gabriel439/Haskell-Turtle-Library"
"haskell-CI/haskell-ci" -> "well-typed/optics"
"haskell-CI/haskell-ci" -> "haskell/actions"
"haskell-CI/haskell-ci" -> "haskell/haddock"
"haskell-CI/haskell-ci" -> "mpickering/apply-refact"
"pcapriotti/optparse-applicative" -> "mrkkrp/megaparsec"
"pcapriotti/optparse-applicative" -> "jtdaugherty/brick"
"pcapriotti/optparse-applicative" -> "jaspervdj/stylish-haskell"
"pcapriotti/optparse-applicative" -> "haskell-servant/servant"
"pcapriotti/optparse-applicative" -> "hspec/hspec"
"pcapriotti/optparse-applicative" -> "ekmett/lens"
"pcapriotti/optparse-applicative" -> "snoyberg/conduit"
"pcapriotti/optparse-applicative" -> "lspitzner/brittany"
"pcapriotti/optparse-applicative" -> "ndmitchell/ghcid"
"pcapriotti/optparse-applicative" -> "hedgehogqa/haskell-hedgehog"
"pcapriotti/optparse-applicative" -> "bos/aeson"
"pcapriotti/optparse-applicative" -> "simonmar/async"
"pcapriotti/optparse-applicative" -> "tweag/ormolu"
"pcapriotti/optparse-applicative" -> "sol/hpack"
"pcapriotti/optparse-applicative" -> "ndmitchell/hlint"
"samtay/tetris" -> "jtdaugherty/brick"
"samtay/tetris" -> "samtay/conway"
"samtay/tetris" -> "tiehuis/2048-cli"
"samtay/tetris" -> "jtdaugherty/tart"
"samtay/tetris" -> "DimaSamoz/mezzo"
"samtay/tetris" -> "lspitzner/brittany"
"samtay/tetris" -> "Yvee1/hascard"
"samtay/tetris" -> "ndmitchell/ghcid"
"samtay/tetris" -> "composewell/streamly"
"samtay/tetris" -> "samtay/snake"
"haskell/haskell-mode" -> "serras/emacs-haskell-tutorial"
"haskell/haskell-mode" -> "chrisdone/structured-haskell-mode"
"haskell/haskell-mode" -> "commercialhaskell/intero"
"haskell/haskell-mode" -> "haskell/cabal"
"haskell/haskell-mode" -> "ekmett/lens"
"haskell/haskell-mode" -> "commercialhaskell/stack"
"haskell/haskell-mode" -> "kazu-yamamoto/ghc-mod"
"haskell/haskell-mode" -> "ghc/ghc"
"haskell/haskell-mode" -> "company-mode/company-mode" ["e"=1]
"haskell/haskell-mode" -> "yi-editor/yi"
"haskell/haskell-mode" -> "haskell/haskell-ide-engine"
"haskell/haskell-mode" -> "emacs-helm/helm" ["e"=1]
"haskell/haskell-mode" -> "bbatsov/projectile" ["e"=1]
"haskell/haskell-mode" -> "ndmitchell/ghcid"
"haskell/haskell-mode" -> "jaspervdj/hakyll"
"BartoszMilewski/Publications" -> "BartoszMilewski/DaoFP"
"BartoszMilewski/Publications" -> "cohomolo-gy/haskell-resources"
"BartoszMilewski/Publications" -> "graninas/software-design-in-haskell"
"BartoszMilewski/Publications" -> "plfa/plfa.github.io" ["e"=1]
"BartoszMilewski/Publications" -> "i-am-tom/haskell-exercises"
"BartoszMilewski/Publications" -> "thma/LtuPatternFactory"
"BartoszMilewski/Publications" -> "hablapps/DontFearTheProfunctorOptics"
"BartoszMilewski/Publications" -> "hmemcpy/milewski-ctfp-pdf"
"BartoszMilewski/Publications" -> "idris-lang/Idris2" ["e"=1]
"BartoszMilewski/Publications" -> "ghc-proposals/ghc-proposals"
"BartoszMilewski/Publications" -> "haskell/haskell-language-server"
"BartoszMilewski/Publications" -> "kowainik/learn4haskell"
"BartoszMilewski/Publications" -> "polysemy-research/polysemy"
"BartoszMilewski/Publications" -> "soupi/haskell-study-plan"
"BartoszMilewski/Publications" -> "thma/WhyHaskellMatters"
"polysemy-research/polysemy" -> "tweag/ormolu"
"polysemy-research/polysemy" -> "hasura/eff"
"polysemy-research/polysemy" -> "kowainik/relude"
"polysemy-research/polysemy" -> "fused-effects/fused-effects"
"polysemy-research/polysemy" -> "composewell/streamly"
"polysemy-research/polysemy" -> "well-typed/optics"
"polysemy-research/polysemy" -> "kowainik/stan"
"polysemy-research/polysemy" -> "haskell-servant/servant"
"polysemy-research/polysemy" -> "haskell/haskell-language-server"
"polysemy-research/polysemy" -> "tweag/linear-base"
"polysemy-research/polysemy" -> "obsidiansystems/obelisk"
"polysemy-research/polysemy" -> "haskell/mtl"
"polysemy-research/polysemy" -> "reflex-frp/reflex"
"polysemy-research/polysemy" -> "mrkkrp/megaparsec"
"polysemy-research/polysemy" -> "ucsd-progsys/liquidhaskell"
"brendanhay/gogol" -> "brendanhay/amazonka"
"brendanhay/gogol" -> "frasertweedale/hs-jose"
"brendanhay/gogol" -> "tathougies/beam"
"brendanhay/gogol" -> "nikita-volkov/hasql"
"adjoint-io/uplink" -> "adjoint-io/fcl"
"adjoint-io/uplink" -> "adjoint-io/merkle-tree"
"adjoint-io/uplink" -> "jberryman/unagi-chan"
"adjoint-io/uplink" -> "ocharles/logging-effect"
"commercialhaskell/rio" -> "kowainik/relude"
"commercialhaskell/rio" -> "composewell/streamly"
"commercialhaskell/rio" -> "tweag/ormolu"
"commercialhaskell/rio" -> "hedgehogqa/haskell-hedgehog"
"commercialhaskell/rio" -> "isovector/polysemy"
"commercialhaskell/rio" -> "kowainik/summoner"
"commercialhaskell/rio" -> "bitemyapp/esqueleto"
"commercialhaskell/rio" -> "fused-effects/fused-effects"
"commercialhaskell/rio" -> "snoyberg/conduit"
"commercialhaskell/rio" -> "lspitzner/brittany"
"commercialhaskell/rio" -> "haskell-servant/servant"
"commercialhaskell/rio" -> "haskell-foundation/foundation"
"commercialhaskell/rio" -> "thomashoneyman/purescript-halogen-realworld" ["e"=1]
"commercialhaskell/rio" -> "sol/hpack"
"commercialhaskell/rio" -> "haskell/haskell-ide-engine"
"sdiehl/protolude" -> "tweag/capability"
"sdiehl/protolude" -> "feuerbach/tasty"
"sdiehl/protolude" -> "haskell-foundation/foundation"
"sdiehl/protolude" -> "kcsongor/generic-lens"
"sdiehl/protolude" -> "hedgehogqa/haskell-hedgehog"
"2mol/pboy" -> "cdepillabout/termonad"
"2mol/pboy" -> "litxio/ptghci"
"2mol/pboy" -> "jtdaugherty/brick"
"2mol/pboy" -> "smallhadroncollider/taskell"
"2mol/pboy" -> "snowleopard/alga"
"2mol/pboy" -> "hedgehogqa/haskell-hedgehog"
"2mol/pboy" -> "alexwl/haskell-code-explorer"
"2mol/pboy" -> "nh2/static-haskell-nix"
"2mol/pboy" -> "ndmitchell/ghcid"
"2mol/pboy" -> "kcsongor/generic-lens"
"2mol/pboy" -> "grin-compiler/grin" ["e"=1]
"2mol/pboy" -> "fjvallarino/monomer"
"2mol/pboy" -> "facebookincubator/retrie"
"2mol/pboy" -> "kowainik/summoner"
"2mol/pboy" -> "nmattia/snack"
"BinRoot/Haskell-Data-Analysis-Cookbook" -> "timbod7/haskell-chart"
"BinRoot/Haskell-Data-Analysis-Cookbook" -> "tweag/HaskellR"
"BinRoot/Haskell-Data-Analysis-Cookbook" -> "mikeizbicki/HLearn"
"BinRoot/Haskell-Data-Analysis-Cookbook" -> "commercialhaskell/commercialhaskell"
"BinRoot/Haskell-Data-Analysis-Cookbook" -> "NICTA/course"
"BinRoot/Haskell-Data-Analysis-Cookbook" -> "silkapp/rest"
"BinRoot/Haskell-Data-Analysis-Cookbook" -> "fptudelft/FP101x-Content"
"BinRoot/Haskell-Data-Analysis-Cookbook" -> "begriffs/haskell-vim-now"
"BinRoot/Haskell-Data-Analysis-Cookbook" -> "elm-lang/Elm"
"BinRoot/Haskell-Data-Analysis-Cookbook" -> "drKraken/haskell-must-watch"
"BinRoot/Haskell-Data-Analysis-Cookbook" -> "serras/emacs-haskell-tutorial"
"BinRoot/Haskell-Data-Analysis-Cookbook" -> "commercialhaskell/stack"
"BinRoot/Haskell-Data-Analysis-Cookbook" -> "leksah/leksah"
"BinRoot/Haskell-Data-Analysis-Cookbook" -> "Gabriel439/Haskell-Pipes-Library"
"BinRoot/Haskell-Data-Analysis-Cookbook" -> "gibiansky/IHaskell"
"GaloisInc/HaLVM" -> "haskell-distributed/distributed-process"
"GaloisInc/HaLVM" -> "yi-editor/yi"
"GaloisInc/HaLVM" -> "Gabriel439/Haskell-Pipes-Library"
"GaloisInc/HaLVM" -> "faylang/fay"
"GaloisInc/HaLVM" -> "valderman/haste-compiler"
"GaloisInc/HaLVM" -> "ghcjs/ghcjs"
"GaloisInc/HaLVM" -> "ndmitchell/shake"
"GaloisInc/HaLVM" -> "GaloisInc/HaNS"
"GaloisInc/HaLVM" -> "ekmett/lens"
"GaloisInc/HaLVM" -> "Gabriel439/Haskell-Turtle-Library"
"GaloisInc/HaLVM" -> "mirage/mirage" ["e"=1]
"GaloisInc/HaLVM" -> "jepst/CloudHaskell"
"GaloisInc/HaLVM" -> "tomjaguarpaw/haskell-opaleye"
"GaloisInc/HaLVM" -> "facebook/Haxl"
"GaloisInc/HaLVM" -> "snoyberg/conduit"
"breuleux/quaint" -> "breuleux/engage"
"commercialhaskell/intero" -> "jyp/dante"
"commercialhaskell/intero" -> "sol/hpack"
"commercialhaskell/intero" -> "haskell/haskell-mode"
"commercialhaskell/intero" -> "haskell/haskell-ide-engine"
"commercialhaskell/intero" -> "tomjaguarpaw/haskell-opaleye"
"commercialhaskell/intero" -> "commercialhaskell/stack"
"commercialhaskell/intero" -> "chrisdone/structured-haskell-mode"
"commercialhaskell/intero" -> "lspitzner/brittany"
"commercialhaskell/intero" -> "valderman/selda"
"commercialhaskell/intero" -> "serras/emacs-haskell-tutorial"
"commercialhaskell/intero" -> "ndmitchell/ghcid"
"commercialhaskell/intero" -> "haskell-foundation/foundation"
"commercialhaskell/intero" -> "jaspervdj/stylish-haskell"
"commercialhaskell/intero" -> "ghc-proposals/ghc-proposals"
"commercialhaskell/intero" -> "HeinrichApfelmus/hyper-haskell"
"chshersh/iris" -> "chshersh/dr-cabal"
"chshersh/iris" -> "reubenharry/haskell-docs"
"graninas/software-design-in-haskell" -> "tssm/up-to-date-real-world-haskell"
"graninas/software-design-in-haskell" -> "soupi/haskell-study-plan"
"graninas/software-design-in-haskell" -> "thma/LtuPatternFactory"
"graninas/software-design-in-haskell" -> "cohomolo-gy/haskell-resources"
"graninas/software-design-in-haskell" -> "i-am-tom/haskell-exercises"
"graninas/software-design-in-haskell" -> "kowainik/summoner"
"graninas/software-design-in-haskell" -> "Holmusk/three-layer"
"graninas/software-design-in-haskell" -> "fjvallarino/monomer"
"graninas/software-design-in-haskell" -> "erkmos/haskell-companies"
"graninas/software-design-in-haskell" -> "polysemy-research/polysemy"
"graninas/software-design-in-haskell" -> "kowainik/stan"
"graninas/software-design-in-haskell" -> "graninas/hierarchical-free-monads-the-most-developed-approach-in-haskell"
"graninas/software-design-in-haskell" -> "thomashoneyman/purescript-halogen-realworld" ["e"=1]
"graninas/software-design-in-haskell" -> "graninas/Functional-Design-and-Architecture"
"graninas/software-design-in-haskell" -> "thma/PolysemyCleanArchitecture"
"thma/LtuPatternFactory" -> "graninas/software-design-in-haskell"
"thma/LtuPatternFactory" -> "cohomolo-gy/haskell-resources"
"thma/LtuPatternFactory" -> "tssm/up-to-date-real-world-haskell"
"thma/LtuPatternFactory" -> "i-am-tom/haskell-exercises"
"thma/LtuPatternFactory" -> "polysemy-research/polysemy"
"thma/LtuPatternFactory" -> "tweag/ormolu"
"thma/LtuPatternFactory" -> "haskell/ide"
"thma/LtuPatternFactory" -> "soupi/haskell-study-plan"
"thma/LtuPatternFactory" -> "thma/PolysemyCleanArchitecture"
"thma/LtuPatternFactory" -> "thma/WhyHaskellMatters"
"thma/LtuPatternFactory" -> "isovector/thinking-with-types"
"thma/LtuPatternFactory" -> "kowainik/summoner"
"thma/LtuPatternFactory" -> "Holmusk/three-layer"
"thma/LtuPatternFactory" -> "alpacaaa/zero-bullshit-haskell"
"thma/LtuPatternFactory" -> "commercialhaskell/rio"
"oden-lang/oden" -> "xixixao/Shem"
"oden-lang/oden" -> "justinethier/husk-scheme"
"oden-lang/oden" -> "psygnisfive/SimpleFP-v2"
"oden-lang/oden" -> "tcard/sgo"
"oden-lang/oden" -> "j14159/mlfe" ["e"=1]
"oden-lang/oden" -> "neugram/ng" ["e"=1]
"oden-lang/oden" -> "elm-native-ui/elm-native-ui" ["e"=1]
"oden-lang/oden" -> "albrow/fo" ["e"=1]
"NICTA/course" -> "tonymorris/course"
"NICTA/course" -> "bitemyapp/learnhaskell"
"NICTA/course" -> "begriffs/haskell-vim-now"
"NICTA/course" -> "facebook/Haxl"
"NICTA/course" -> "bos/stanford-cs240h"
"NICTA/course" -> "mikeizbicki/HLearn"
"NICTA/course" -> "sdiehl/wiwinwlh"
"NICTA/course" -> "gibiansky/IHaskell"
"NICTA/course" -> "caiorss/Functional-Programming"
"NICTA/course" -> "sdiehl/write-you-a-haskell"
"NICTA/course" -> "ghcjs/ghcjs"
"NICTA/course" -> "serras/emacs-haskell-tutorial"
"NICTA/course" -> "Gabriel439/post-rfc"
"NICTA/course" -> "ekmett/lens"
"NICTA/course" -> "commercialhaskell/stack"
"Dobiasd/articles" -> "Dobiasd/programming-language-subreddits-and-their-choice-of-words"
"Dobiasd/articles" -> "sagivo/algorithms" ["e"=1]
"Dobiasd/articles" -> "caiorss/Functional-Programming"
"Dobiasd/articles" -> "sdiehl/write-you-a-haskell"
"Dobiasd/articles" -> "NICTA/course"
"Dobiasd/articles" -> "thoughtbot/til" ["e"=1]
"Dobiasd/articles" -> "bitemyapp/learnhaskell"
"Dobiasd/articles" -> "tjmehta/101" ["e"=1]
"Dobiasd/articles" -> "begriffs/haskell-vim-now"
"Dobiasd/articles" -> "Snaipe/c-smart-pointers" ["e"=1]
"Dobiasd/articles" -> "Gabriel439/Haskell-Turtle-Library"
"Dobiasd/articles" -> "google/lisp-koans" ["e"=1]
"Dobiasd/articles" -> "isRuslan/awesome-elm" ["e"=1]
"Dobiasd/articles" -> "Dobiasd/FunctionalPlus" ["e"=1]
"Dobiasd/articles" -> "feuerbach/tasty"
"valderman/haste-compiler" -> "faylang/fay"
"valderman/haste-compiler" -> "ghcjs/ghcjs"
"valderman/haste-compiler" -> "yi-editor/yi"
"valderman/haste-compiler" -> "evancz/Elm"
"valderman/haste-compiler" -> "yesodweb/yesod"
"valderman/haste-compiler" -> "joelburget/react-haskell"
"valderman/haste-compiler" -> "facebook/Haxl"
"valderman/haste-compiler" -> "ekmett/lens"
"valderman/haste-compiler" -> "ghc/ghc"
"valderman/haste-compiler" -> "GaloisInc/HaLVM"
"valderman/haste-compiler" -> "scotty-web/scotty"
"valderman/haste-compiler" -> "commercialhaskell/stack"
"valderman/haste-compiler" -> "mikeizbicki/HLearn"
"valderman/haste-compiler" -> "bos/aeson"
"valderman/haste-compiler" -> "purescript/purescript"
"chrisdone/jl" -> "tathougies/beam"
"chrisdone/jl" -> "mrkgnao/silica"
"chrisdone/jl" -> "Gabriel439/Haskell-Optparse-Generic-Library"
"chrisdone/jl" -> "Gabriel439/Haskell-Pipes-Library"
"haskell-servant/servant" -> "commercialhaskell/stack"
"haskell-servant/servant" -> "tomjaguarpaw/haskell-opaleye"
"haskell-servant/servant" -> "ekmett/lens"
"haskell-servant/servant" -> "scotty-web/scotty"
"haskell-servant/servant" -> "ndmitchell/ghcid"
"haskell-servant/servant" -> "Gabriel439/haskell-nix"
"haskell-servant/servant" -> "haskell/haskell-ide-engine"
"haskell-servant/servant" -> "bos/aeson"
"haskell-servant/servant" -> "dmjio/miso"
"haskell-servant/servant" -> "polysemy-research/polysemy"
"haskell-servant/servant" -> "slamdata/purescript-halogen" ["e"=1]
"haskell-servant/servant" -> "sol/hpack"
"haskell-servant/servant" -> "tathougies/beam"
"haskell-servant/servant" -> "pcapriotti/optparse-applicative"
"haskell-servant/servant" -> "ghcjs/ghcjs"
"reflex-frp/reflex" -> "reflex-frp/reflex-platform"
"reflex-frp/reflex" -> "reflex-frp/reflex-dom"
"reflex-frp/reflex" -> "obsidiansystems/obelisk"
"reflex-frp/reflex" -> "composewell/streamly"
"reflex-frp/reflex" -> "dmjio/miso"
"reflex-frp/reflex" -> "haskell-servant/servant"
"reflex-frp/reflex" -> "polysemy-research/polysemy"
"reflex-frp/reflex" -> "ndmitchell/ghcid"
"reflex-frp/reflex" -> "Gabriel439/haskell-nix"
"reflex-frp/reflex" -> "ghcjs/ghcjs"
"reflex-frp/reflex" -> "tweag/asterius"
"reflex-frp/reflex" -> "commercialhaskell/rio"
"reflex-frp/reflex" -> "slamdata/purescript-halogen" ["e"=1]
"reflex-frp/reflex" -> "haskell/haskell-ide-engine"
"reflex-frp/reflex" -> "tomjaguarpaw/haskell-opaleye"
"elm-lang/Elm" -> "faylang/fay"
"elm-lang/Elm" -> "elm-lang/elm-platform" ["e"=1]
"elm-lang/Elm" -> "puffnfresh/roy" ["e"=1]
"elm-lang/Elm" -> "BinRoot/Haskell-Data-Analysis-Cookbook"
"elm-lang/Elm" -> "switchface/helm"
"elm-lang/Elm" -> "valderman/haste-compiler"
"mbuzdalov/latex-styles" -> "volhovM/study-notes"
"mbuzdalov/latex-styles" -> "sandwwraith/os2016-conspect"
"knupfer/haskell-emacs" -> "jyp/dante"
"knupfer/haskell-emacs" -> "chrisdone/structured-haskell-mode"
"knupfer/haskell-emacs" -> "commercialhaskell/intero"
"facebookincubator/Glean" -> "facebookexperimental/skybison"
"facebookincubator/Glean" -> "facebookincubator/hsthrift"
"facebookincubator/Glean" -> "kythe/kythe" ["e"=1]
"facebookincubator/Glean" -> "tweag/linear-base"
"facebookincubator/Glean" -> "tweag/ormolu"
"facebookincubator/Glean" -> "facebookincubator/retrie"
"facebookincubator/Glean" -> "haskell/text"
"facebookincubator/Glean" -> "quickstrom/quickstrom"
"onmyway133/GifCapture" -> "Nightonke/Gitee" ["e"=1]
"onmyway133/GifCapture" -> "Kevin-De-Koninck/Get-It" ["e"=1]
"onmyway133/GifCapture" -> "lettier/gifcurry"
"onmyway133/GifCapture" -> "duyquoc/ScreenToLayers"
"onmyway133/GifCapture" -> "onmyway133/FinderGo" ["e"=1]
"onmyway133/GifCapture" -> "younatics/Highlighter" ["e"=1]
"Nax/longflow-manifesto" -> "ChrisPenner/rasa"
"typeclasses/haskell-phrasebook" -> "kowainik/hit-on"
"jonascarpay/apecs" -> "isovector/ecstasy"
"jonascarpay/apecs" -> "tobbebex/GPipe-Core"
"jonascarpay/apecs" -> "ivanperez-keera/Yampa"
"jonascarpay/apecs" -> "haskell-game/sdl2"
"jonascarpay/apecs" -> "expipiplus1/vulkan"
"jonascarpay/apecs" -> "lukexi/halive"
"jonascarpay/apecs" -> "SimulaVR/godot-haskell"
"jonascarpay/apecs" -> "isovector/polysemy"
"ndmitchell/hoogle" -> "haskell/haddock"
"ndmitchell/hoogle" -> "ndmitchell/hlint"
"ndmitchell/hoogle" -> "ndmitchell/ghcid"
"ndmitchell/hoogle" -> "pcapriotti/optparse-applicative"
"ndmitchell/hoogle" -> "jaspervdj/stylish-haskell"
"ndmitchell/hoogle" -> "mrkkrp/megaparsec"
"ndmitchell/hoogle" -> "tweag/ormolu"
"ndmitchell/hoogle" -> "nick8325/quickcheck"
"ndmitchell/hoogle" -> "well-typed/optics"
"ndmitchell/hoogle" -> "hspec/hspec"
"ndmitchell/hoogle" -> "bos/aeson"
"ndmitchell/hoogle" -> "haskell/vector"
"ndmitchell/hoogle" -> "ndmitchell/shake"
"ndmitchell/hoogle" -> "haskell/cabal"
"ndmitchell/hoogle" -> "composewell/streamly"
"awgn/cgrep" -> "RaphaelJ/friday"
"awgn/cgrep" -> "Gabriel439/Haskell-Pipes-Library"
"awgn/cgrep" -> "aloiscochard/codex"
"awgn/cgrep" -> "bos/wreq"
"awgn/cgrep" -> "1HaskellADay/1HAD"
"awgn/cgrep" -> "dag/vim2hs"
"awgn/cgrep" -> "z0w0/helm"
"awgn/cgrep" -> "hut8labs/diffscuss"
"awgn/cgrep" -> "takeoutweight/shade"
"awgn/cgrep" -> "silkapp/rest"
"tensorflow/haskell" -> "HuwCampbell/grenade"
"tensorflow/haskell" -> "mikeizbicki/HLearn"
"tensorflow/haskell" -> "commercialhaskell/stack"
"tensorflow/haskell" -> "haskell-servant/servant"
"tensorflow/haskell" -> "haskell/haskell-ide-engine"
"tensorflow/haskell" -> "hasktorch/hasktorch"
"tensorflow/haskell" -> "gibiansky/IHaskell"
"tensorflow/haskell" -> "facebook/Haxl"
"tensorflow/haskell" -> "tweag/asterius"
"tensorflow/haskell" -> "ekmett/lens"
"tensorflow/haskell" -> "ndmitchell/ghcid"
"tensorflow/haskell" -> "ghcjs/ghcjs"
"tensorflow/haskell" -> "typelead/eta"
"tensorflow/haskell" -> "ghc/ghc"
"tensorflow/haskell" -> "sdiehl/write-you-a-haskell"
"bitemyapp/bloodhound" -> "silkapp/rest"
"bitemyapp/bloodhound" -> "simonmar/async"
"bitemyapp/bloodhound" -> "sol/hpack"
"bitemyapp/bloodhound" -> "bos/wreq"
"bitemyapp/bloodhound" -> "bos/criterion"
"bitemyapp/bloodhound" -> "tomjaguarpaw/haskell-opaleye"
"bitemyapp/bloodhound" -> "vincenthz/hs-tls"
"bitemyapp/bloodhound" -> "informatikr/hedis"
"bitemyapp/bloodhound" -> "Gabriel439/haskell-in-the-large"
"bitemyapp/bloodhound" -> "agrafix/Spock"
"bitemyapp/bloodhound" -> "bitemyapp/esqueleto"
"facebookincubator/duckling" -> "wit-ai/duckling" ["e"=1]
"facebookincubator/duckling" -> "valderman/selda"
"facebookincubator/duckling" -> "kcsongor/generic-lens"
"facebookincubator/duckling" -> "wit-ai/duckling_old"
"facebookincubator/duckling" -> "haskell-foundation/foundation"
"facebookincubator/duckling" -> "hedgehogqa/haskell-hedgehog"
"facebookincubator/duckling" -> "tweag/sparkle"
"facebookincubator/duckling" -> "Gabriel439/Haskell-Turtle-Library"
"facebookincubator/duckling" -> "IntelLabs/flrc"
"facebookincubator/duckling" -> "HuwCampbell/grenade"
"facebookincubator/duckling" -> "theam/haskell-do"
"facebookincubator/duckling" -> "rahulmutt/ghcvm"
"facebookincubator/duckling" -> "quchen/prettyprinter"
"facebookincubator/duckling" -> "haskell-servant/servant"
"facebookincubator/duckling" -> "tensorflow/haskell"
"breuleux/earl-grey" -> "breuleux/quaint"
"breuleux/earl-grey" -> "unisonweb/platform"
"graninas/The-Voids-Of-Haskell" -> "thma/PolysemyCleanArchitecture"
"aviaviavi/legion" -> "tdietert/nanocoin"
"aviaviavi/legion" -> "haskoin/haskoin"
"aviaviavi/legion" -> "HuwCampbell/grenade"
"aviaviavi/legion" -> "adjoint-io/nanochain"
"aviaviavi/legion" -> "morphismtech/squeal"
"aviaviavi/legion" -> "chrisdone/wish"
"aviaviavi/legion" -> "valderman/selda"
"aviaviavi/legion" -> "chrisdone/structured-haskell-mode"
"aviaviavi/legion" -> "adjoint-io/uplink"
"rsms/move" -> "rsms/ec2-webapp"
"rsms/move" -> "rsms/uilayer"
"haskell/parsec" -> "mrkkrp/megaparsec"
"haskell/parsec" -> "haskell/mtl"
"haskell/parsec" -> "agda/cubical" ["e"=1]
"haskell/parsec" -> "bos/aeson"
"haskell/parsec" -> "hspec/hspec"
"haskell/parsec" -> "haskell/containers"
"haskell/parsec" -> "llvm-hs/llvm-hs"
"haskell/parsec" -> "haskell/aeson"
"haskell/parsec" -> "nick8325/quickcheck"
"haskell/parsec" -> "JakeWheat/intro_to_parsing"
"haskell/parsec" -> "haskell/haddock"
"haskell/parsec" -> "ndmitchell/hlint"
"haskell/parsec" -> "agda/agda" ["e"=1]
"haskell/parsec" -> "ekmett/lens"
"haskell/parsec" -> "commercialhaskell/rio"
"mrkkrp/megaparsec" -> "pcapriotti/optparse-applicative"
"mrkkrp/megaparsec" -> "haskell/parsec"
"mrkkrp/megaparsec" -> "tweag/ormolu"
"mrkkrp/megaparsec" -> "sol/hpack"
"mrkkrp/megaparsec" -> "ghc-proposals/ghc-proposals"
"mrkkrp/megaparsec" -> "composewell/streamly"
"mrkkrp/megaparsec" -> "haskell-servant/servant"
"mrkkrp/megaparsec" -> "haskell/mtl"
"mrkkrp/megaparsec" -> "hspec/hspec"
"mrkkrp/megaparsec" -> "haskell/containers"
"mrkkrp/megaparsec" -> "lspitzner/brittany"
"mrkkrp/megaparsec" -> "polysemy-research/polysemy"
"mrkkrp/megaparsec" -> "haskell/bytestring"
"mrkkrp/megaparsec" -> "llvm-hs/llvm-hs"
"mrkkrp/megaparsec" -> "ekmett/lens"
"jubalh/nudoku" -> "tiehuis/2048-cli"
"jubalh/nudoku" -> "seehuhn/moon-buggy"
"haskell-game/sdl2" -> "jonascarpay/apecs"
"haskell-game/sdl2" -> "expipiplus1/vulkan"
"haskell-game/sdl2" -> "benl23x5/gloss"
"haskell-game/sdl2" -> "ivanperez-keera/haskanoid"
"haskell-game/sdl2" -> "ivanperez-keera/Yampa"
"haskell-game/sdl2" -> "HeinrichApfelmus/reactive-banana"
"haskell-game/sdl2" -> "palf/haskell-sdl2-examples"
"haskell-game/sdl2" -> "switchface/helm"
"haskell-game/sdl2" -> "palf/haskellSDL2Examples"
"haskell-game/sdl2" -> "Lemmih/hsSDL2"
"haskell-game/sdl2" -> "elisehuard/game-in-haskell"
"haskell-game/sdl2" -> "ekmett/quine"
"haskell-game/sdl2" -> "mchakravarty/HaskellSpriteKit"
"haskell-game/sdl2" -> "sol/hpack"
"haskell-game/sdl2" -> "isovector/ecstasy"
"keera-studios/haskell-game-programming" -> "ivanperez-keera/haskanoid"
"passy/awesome-recursion-schemes" -> "ekmett/recursion-schemes"
"passy/awesome-recursion-schemes" -> "sellout/recursion-scheme-talk"
"passy/awesome-recursion-schemes" -> "slamdata/matryoshka" ["e"=1]
"passy/awesome-recursion-schemes" -> "cohomolo-gy/haskell-resources"
"passy/awesome-recursion-schemes" -> "quchen/articles"
"passy/awesome-recursion-schemes" -> "grin-tech/grin"
"passy/awesome-recursion-schemes" -> "jwiegley/category-theory" ["e"=1]
"passy/awesome-recursion-schemes" -> "Gabriel439/haskell-nix"
"passy/awesome-recursion-schemes" -> "yallop/effects-bibliography" ["e"=1]
"passy/awesome-recursion-schemes" -> "jwbuurlage/category-theory-programmers"
"passy/awesome-recursion-schemes" -> "isovector/polysemy"
"passy/awesome-recursion-schemes" -> "pigworker/CS410-17"
"passy/awesome-recursion-schemes" -> "snowleopard/alga"
"passy/awesome-recursion-schemes" -> "grin-compiler/grin" ["e"=1]
"passy/awesome-recursion-schemes" -> "mmhelloworld/idris-jvm" ["e"=1]
"reflex-frp/reflex-platform" -> "reflex-frp/reflex"
"reflex-frp/reflex-platform" -> "reflex-frp/reflex-dom"
"reflex-frp/reflex-platform" -> "obsidiansystems/obelisk"
"reflex-frp/reflex-platform" -> "Gabriel439/haskell-nix"
"reflex-frp/reflex-platform" -> "ElvishJerricco/reflex-project-skeleton"
"reflex-frp/reflex-platform" -> "hansroland/reflex-dom-inbits"
"reflex-frp/reflex-platform" -> "composewell/streamly"
"reflex-frp/reflex-platform" -> "reflex-frp/reflex-examples"
"reflex-frp/reflex-platform" -> "dmjio/miso"
"reflex-frp/reflex-platform" -> "imalsogreg/servant-reflex"
"reflex-frp/reflex-platform" -> "polysemy-research/polysemy"
"reflex-frp/reflex-platform" -> "haskell-nix/hnix"
"reflex-frp/reflex-platform" -> "reflex-frp/reflex-dom-contrib"
"reflex-frp/reflex-platform" -> "tathougies/beam"
"reflex-frp/reflex-platform" -> "ndmitchell/ghcid"
"isovector/polysemy" -> "hasura/eff"
"isovector/polysemy" -> "kcsongor/generic-lens"
"isovector/polysemy" -> "i-am-tom/higgledy"
"isovector/polysemy" -> "alexwl/haskell-code-explorer"
"isovector/polysemy" -> "isovector/type-sets"
"isovector/polysemy" -> "tweag/capability"
"isovector/polysemy" -> "nmattia/snack"
"isovector/polysemy" -> "lexi-lambda/freer-simple"
"isovector/polysemy" -> "composewell/streamly"
"isovector/polysemy" -> "haskell/ide"
"isovector/polysemy" -> "kowainik/co-log"
"isovector/polysemy" -> "isovector/thinking-with-types"
"isovector/polysemy" -> "fused-effects/fused-effects"
"isovector/polysemy" -> "tathougies/beam"
"isovector/polysemy" -> "commercialhaskell/rio"
"kowainik/stan" -> "kowainik/summoner"
"kowainik/stan" -> "facebookincubator/retrie"
"kowainik/stan" -> "tweag/ormolu"
"kowainik/stan" -> "digital-asset/ghcide"
"kowainik/stan" -> "kowainik/relude"
"kowainik/stan" -> "polysemy-research/polysemy"
"kowainik/stan" -> "tweag/linear-base"
"kowainik/stan" -> "well-typed/optics"
"kowainik/stan" -> "higherkindness/mu-haskell"
"kowainik/stan" -> "ghc-proposals/ghc-proposals"
"kowainik/stan" -> "hedgehogqa/haskell-hedgehog"
"kowainik/stan" -> "haskell/ide"
"kowainik/stan" -> "composewell/streamly"
"kowainik/stan" -> "fjvallarino/monomer"
"kowainik/stan" -> "ocharles/weeder"
"utdemir/ghc-musl" -> "nh2/static-haskell-nix"
"Nike-Inc/hal" -> "theam/aws-lambda-haskell-runtime"
"arybczak/effectful" -> "Kleidukos/effectful-contrib"
"arybczak/effectful" -> "re-xyr/cleff"
"fimad/scalpel" -> "ndmitchell/tagsoup"
"fimad/scalpel" -> "bos/wreq"
"fimad/scalpel" -> "mrkkrp/req"
"fused-effects/fused-effects" -> "hasura/eff"
"fused-effects/fused-effects" -> "polysemy-research/polysemy"
"fused-effects/fused-effects" -> "tweag/linear-base"
"fused-effects/fused-effects" -> "tweag/ormolu"
"fused-effects/fused-effects" -> "tweag/capability"
"fused-effects/fused-effects" -> "composewell/streamly"
"fused-effects/fused-effects" -> "well-typed/optics"
"fused-effects/fused-effects" -> "isovector/polysemy"
"fused-effects/fused-effects" -> "dhall-lang/dhall-haskell"
"fused-effects/fused-effects" -> "lehins/massiv"
"fused-effects/fused-effects" -> "commercialhaskell/rio"
"fused-effects/fused-effects" -> "facebookincubator/retrie"
"fused-effects/fused-effects" -> "haskell-effectful/effectful"
"fused-effects/fused-effects" -> "kowainik/relude"
"fused-effects/fused-effects" -> "higherkindness/mu-haskell"
"hasura/eff" -> "polysemy-research/polysemy"
"hasura/eff" -> "isovector/polysemy"
"hasura/eff" -> "fused-effects/fused-effects"
"hasura/eff" -> "haskell/ide"
"hasura/eff" -> "tweag/ormolu"
"hasura/eff" -> "kcsongor/generic-lens"
"hasura/eff" -> "arybczak/effectful"
"hasura/eff" -> "well-typed/optics"
"hasura/eff" -> "dhall-lang/dhall-haskell"
"hasura/eff" -> "kowainik/stan"
"hasura/eff" -> "lexi-lambda/freer-simple"
"hasura/eff" -> "digital-asset/ghcide"
"hasura/eff" -> "kowainik/relude"
"hasura/eff" -> "haskell-effectful/effectful"
"hasura/eff" -> "tweag/capability"
"hedgehogqa/haskell-hedgehog" -> "composewell/streamly"
"hedgehogqa/haskell-hedgehog" -> "kcsongor/generic-lens"
"hedgehogqa/haskell-hedgehog" -> "tweag/ormolu"
"hedgehogqa/haskell-hedgehog" -> "lspitzner/brittany"
"hedgehogqa/haskell-hedgehog" -> "kowainik/relude"
"hedgehogqa/haskell-hedgehog" -> "alexwl/haskell-code-explorer"
"hedgehogqa/haskell-hedgehog" -> "feuerbach/tasty"
"hedgehogqa/haskell-hedgehog" -> "sol/hpack"
"hedgehogqa/haskell-hedgehog" -> "commercialhaskell/rio"
"hedgehogqa/haskell-hedgehog" -> "ndmitchell/ghcid"
"hedgehogqa/haskell-hedgehog" -> "pcapriotti/optparse-applicative"
"hedgehogqa/haskell-hedgehog" -> "kowainik/summoner"
"hedgehogqa/haskell-hedgehog" -> "kowainik/stan"
"hedgehogqa/haskell-hedgehog" -> "nikita-volkov/hasql"
"hedgehogqa/haskell-hedgehog" -> "haskell-perf/checklist"
"quchen/prettyprinter" -> "well-typed/optics"
"quchen/prettyprinter" -> "valderman/selda"
"jaor/xmobar" -> "xmonad/xmonad-contrib"
"jaor/xmobar" -> "xmonad/xmonad"
"jaor/xmobar" -> "taffybar/taffybar"
"jaor/xmobar" -> "waymonad/waymonad"
"jaor/xmobar" -> "cdepillabout/termonad"
"jaor/xmobar" -> "haskell/cabal"
"jaor/xmobar" -> "ndmitchell/hlint"
"jaor/xmobar" -> "hspec/hspec"
"jaor/xmobar" -> "fosskers/aura"
"jaor/xmobar" -> "jtdaugherty/brick"
"jaor/xmobar" -> "altercation/dotfiles-tilingwm"
"jaor/xmobar" -> "travitch/taffybar"
"jaor/xmobar" -> "jaspervdj/hakyll"
"jaor/xmobar" -> "vicfryzel/xmonad-config"
"jaor/xmobar" -> "haskell-servant/servant"
"facebookexperimental/skybison" -> "facebookincubator/Glean"
"MaiaVictor/caramel" -> "Gabriel439/Haskell-Morte-Library"
"MaiaVictor/caramel" -> "ollef/Earley" ["e"=1]
"luna/luna-studio" -> "luna/luna-manager"
"luna/luna-studio" -> "luna/luna"
"luna/luna-studio" -> "luna/enso"
"AccelerateHS/accelerate" -> "AccelerateHS/accelerate-llvm"
"AccelerateHS/accelerate" -> "HuwCampbell/grenade"
"AccelerateHS/accelerate" -> "mikeizbicki/HLearn"
"AccelerateHS/accelerate" -> "hasktorch/hasktorch"
"AccelerateHS/accelerate" -> "lehins/massiv"
"AccelerateHS/accelerate" -> "valderman/haste-compiler"
"AccelerateHS/accelerate" -> "snoyberg/conduit"
"AccelerateHS/accelerate" -> "GaloisInc/HaLVM"
"AccelerateHS/accelerate" -> "ekmett/lens"
"AccelerateHS/accelerate" -> "ndmitchell/ghcid"
"AccelerateHS/accelerate" -> "ghcjs/ghcjs"
"AccelerateHS/accelerate" -> "haskell-distributed/distributed-process"
"AccelerateHS/accelerate" -> "AccelerateHS/accelerate-cuda"
"AccelerateHS/accelerate" -> "tensorflow/haskell"
"AccelerateHS/accelerate" -> "ucsd-progsys/liquidhaskell"
"dhall-lang/dhall-kubernetes" -> "dhall-lang/dhall-haskell"
"dhall-lang/dhall-kubernetes" -> "EarnestResearch/dhall-packages"
"dhall-lang/dhall-kubernetes" -> "dhall-lang/dhall-lang"
"dhall-lang/dhall-kubernetes" -> "xtruder/kubenix" ["e"=1]
"dhall-lang/dhall-kubernetes" -> "dhall-lang/awesome-dhall"
"dhall-lang/dhall-kubernetes" -> "nh2/static-haskell-nix"
"dhall-lang/dhall-kubernetes" -> "nmattia/snack"
"dhall-lang/dhall-kubernetes" -> "travisbrown/dhallj"
"dhall-lang/dhall-kubernetes" -> "hasura/eff"
"dhall-lang/dhall-kubernetes" -> "Nadrieril/dhall-rust"
"dhall-lang/dhall-kubernetes" -> "philandstuff/dhall-golang"
"dhall-lang/dhall-kubernetes" -> "tweag/terraform-nixos" ["e"=1]
"dhall-lang/dhall-kubernetes" -> "isovector/polysemy"
"dhall-lang/dhall-kubernetes" -> "haskell-nix/hnix"
"dhall-lang/dhall-kubernetes" -> "cachix/cachix" ["e"=1]
"z0w0/helm" -> "cobbpg/elerea"
"z0w0/helm" -> "Lemmih/hsSDL2"
"z0w0/helm" -> "haskell-game/sdl2"
"z0w0/helm" -> "ermine-language/ermine"
"z0w0/helm" -> "HeinrichApfelmus/reactive-banana"
"z0w0/helm" -> "ocharles/netwire-classics"
"z0w0/helm" -> "chrisdone/hell"
"z0w0/helm" -> "isovector/ecstasy"
"z0w0/helm" -> "seliopou/typo"
"fpco/stackage" -> "hvr/multi-ghc-travis"
"fpco/stackage" -> "sol/doctest"
"fpco/stackage" -> "simonmar/async"
"fpco/stackage" -> "fpco/stackage-server"
"fpco/stackage" -> "haskell/bytestring"
"fpco/stackage" -> "haskell-lang/haskell-lang"
"fpco/stackage" -> "feuerbach/tasty"
"fpco/stackage" -> "pcapriotti/optparse-applicative"
"fpco/stackage" -> "haskell/containers"
"fpco/stackage" -> "haskell/haddock"
"fpco/stackage" -> "kazu-yamamoto/ghc-mod"
"fpco/stackage" -> "haskell/cabal"
"fpco/stackage" -> "haskell/hackage-server"
"fpco/stackage" -> "jaspervdj/stylish-haskell"
"fpco/stackage" -> "snoyberg/keter"
"kazu-yamamoto/ghc-mod" -> "eagletmt/ghcmod-vim"
"kazu-yamamoto/ghc-mod" -> "fpco/ide-backend"
"kazu-yamamoto/ghc-mod" -> "fpco/stackage"
"kazu-yamamoto/ghc-mod" -> "commercialhaskell/stack-ide"
"kazu-yamamoto/ghc-mod" -> "chrisdone/structured-haskell-mode"
"kazu-yamamoto/ghc-mod" -> "hvr/multi-ghc-travis"
"kazu-yamamoto/ghc-mod" -> "chrisdone/haskell-emacs"
"kazu-yamamoto/ghc-mod" -> "haskell/haskell-mode"
"kazu-yamamoto/ghc-mod" -> "bos/aeson"
"kazu-yamamoto/ghc-mod" -> "mikeizbicki/subhask"
"kazu-yamamoto/ghc-mod" -> "haskell/haskell-ide"
"kazu-yamamoto/ghc-mod" -> "haskell/cabal"
"kazu-yamamoto/ghc-mod" -> "haskell/hackage-server"
"kazu-yamamoto/ghc-mod" -> "nominolo/scion"
"kazu-yamamoto/ghc-mod" -> "dag/vim2hs"
"thma/WhyHaskellMatters" -> "thma/LtuPatternFactory"
"thma/WhyHaskellMatters" -> "graninas/software-design-in-haskell"
"thma/WhyHaskellMatters" -> "thma/PolysemyCleanArchitecture"
"thma/WhyHaskellMatters" -> "digital-asset/ghcide"
"thma/WhyHaskellMatters" -> "theindigamer/not-a-blog"
"thma/WhyHaskellMatters" -> "polysemy-research/polysemy"
"thma/WhyHaskellMatters" -> "kowainik/relude"
"thma/WhyHaskellMatters" -> "kowainik/summoner"
"thma/WhyHaskellMatters" -> "ChrisPenner/slick"
"thma/WhyHaskellMatters" -> "lettier/parsing-with-haskell-parser-combinators"
"thma/WhyHaskellMatters" -> "tssm/up-to-date-real-world-haskell"
"thma/WhyHaskellMatters" -> "tweag/awesome-learning-haskell"
"thma/WhyHaskellMatters" -> "Holmusk/three-layer"
"thma/WhyHaskellMatters" -> "cohomolo-gy/haskell-resources"
"thma/WhyHaskellMatters" -> "kowainik/stan"
"drKraken/haskell-must-watch" -> "michaelochurch/summer-2015-haskell-class"
"drKraken/haskell-must-watch" -> "NICTA/course"
"drKraken/haskell-must-watch" -> "meiersi/HaskellerZ"
"drKraken/haskell-must-watch" -> "commercialhaskell/haskelldocumentation"
"drKraken/haskell-must-watch" -> "JakeWheat/intro_to_parsing"
"drKraken/haskell-must-watch" -> "bfpg/cis194-yorgey-lectures"
"drKraken/haskell-must-watch" -> "steshaw/plt-study"
"drKraken/haskell-must-watch" -> "caiorss/Functional-Programming"
"drKraken/haskell-must-watch" -> "begriffs/haskell-vim-now"
"drKraken/haskell-must-watch" -> "lukexi/halive"
"drKraken/haskell-must-watch" -> "tweag/HaskellR"
"drKraken/haskell-must-watch" -> "BinRoot/Haskell-Data-Analysis-Cookbook"
"drKraken/haskell-must-watch" -> "tonymorris/course"
"drKraken/haskell-must-watch" -> "Gabriel439/haskell-in-the-large"
"gkz/LiveScript" -> "gkz/prelude-ls"
"gkz/LiveScript" -> "satyr/coco"
"gkz/LiveScript" -> "michaelficarra/CoffeeScriptRedux" ["e"=1]
"gkz/LiveScript" -> "purescript/purescript"
"gkz/LiveScript" -> "mozilla/sweet.js" ["e"=1]
"gkz/LiveScript" -> "faylang/fay"
"gkz/LiveScript" -> "jashkenas/coffeescript" ["e"=1]
"gkz/LiveScript" -> "Frege/frege"
"gkz/LiveScript" -> "elm-lang/elm-compiler" ["e"=1]
"gkz/LiveScript" -> "idris-lang/Idris-dev"
"gkz/LiveScript" -> "puffnfresh/roy" ["e"=1]
"gkz/LiveScript" -> "valderman/haste-compiler"
"gkz/LiveScript" -> "typelead/eta"
"gkz/LiveScript" -> "Gozala/wisp" ["e"=1]
"gkz/LiveScript" -> "raimohanska/bacon.js" ["e"=1]
"tweag/funflow" -> "tweag/porcupine"
"tweag/funflow" -> "nmattia/snack"
"tweag/funflow" -> "quchen/prettyprinter"
"tweag/funflow" -> "tweag/sparkle"
"theam/aws-lambda-haskell-runtime" -> "Nike-Inc/hal"
"theam/aws-lambda-haskell-runtime" -> "seek-oss/serverless-haskell"
"theam/aws-lambda-haskell-runtime" -> "brendanhay/amazonka"
"theam/aws-lambda-haskell-runtime" -> "utdemir/distributed-dataset"
"theam/aws-lambda-haskell-runtime" -> "morpheusgraphql/morpheus-graphql"
"chrisdone/hell" -> "chrisdone/ghci-ng"
"chrisdone/hell" -> "chrisdone/structured-haskell-mode"
"chrisdone/hell" -> "faylang/fay"
"chrisdone/hell" -> "yi-editor/yi"
"chrisdone/hell" -> "bos/attoparsec"
"chrisdone/hell" -> "ndmitchell/shake"
"chrisdone/hell" -> "vincenthz/hs-tls"
"chrisdone/hell" -> "yesodweb/Shelly.hs"
"chrisdone/hell" -> "ermine-language/ermine"
"chrisdone/hell" -> "bos/criterion"
"chrisdone/hell" -> "valderman/haste-compiler"
"chrisdone/hell" -> "z0w0/helm"
"chrisdone/hell" -> "paf31/purescript"
"chrisdone/hell" -> "lukexi/halive"
"chrisdone/hell" -> "hvr/multi-ghc-travis"
"gelisam/hawk" -> "lukasmartinelli/hwk"
"gelisam/hawk" -> "imeckler/mote"
"google/codeworld" -> "Gabriel439/haskell-nix"
"google/codeworld" -> "Gabriel439/Haskell-Turtle-Library"
"google/codeworld" -> "sdiehl/wiwinwlh"
"google/codeworld" -> "sol/hpack"
"google/codeworld" -> "commercialhaskell/stack"
"google/codeworld" -> "JakeWheat/intro_to_parsing"
"google/codeworld" -> "HeinrichApfelmus/hyper-haskell"
"google/codeworld" -> "jtdaugherty/brick"
"google/codeworld" -> "HuwCampbell/grenade"
"google/codeworld" -> "hzlmn/haskell-must-watch"
"google/codeworld" -> "ndmitchell/ghcid"
"google/codeworld" -> "theam/haskell-do"
"google/codeworld" -> "hspec/hspec"
"google/codeworld" -> "quchen/articles"
"google/codeworld" -> "jaspervdj/stylish-haskell"
"phadej/github" -> "Gabriel439/Haskell-Optparse-Generic-Library"
"simonmar/par-tutorial" -> "simonmar/monad-par"
"xmonad/osxmonad" -> "fjolnir/xnomad"
"xmonad/osxmonad" -> "puffnfresh/iridium" ["e"=1]
"xmonad/osxmonad" -> "evancz/Elm"
"xmonad/osxmonad" -> "pufuwozu/toggle-osx-shadows"
"xmonad/osxmonad" -> "chrisdone/structured-haskell-mode"
"xmonad/osxmonad" -> "bos/stanford-cs240h"
"xmonad/osxmonad" -> "faylang/fay"
"xmonad/osxmonad" -> "dag/vim2hs"
"xmonad/osxmonad" -> "chrisdone/ghci-ng"
"volhovM/study-notes" -> "sugakandrey/Functional-analysis"
"SimulaVR/godot-haskell" -> "incoherentsoftware/defect-process"
"rgleichman/glance" -> "keera-studios/keera-hails"
"rgleichman/glance" -> "sjsyrek/haskell-study-startup"
"rgleichman/glance" -> "snowleopard/alga"
"rgleichman/glance" -> "haskus/haskus-system"
"rgleichman/glance" -> "i-am-tom/haskell-exercises"
"rgleichman/glance" -> "gelisam/frp-zoo"
"rgleichman/glance" -> "lukexi/halive"
"rgleichman/glance" -> "simonmar/async"
"tiehuis/2048-cli" -> "jubalh/nudoku"
"alanz/vscode-hie-server" -> "alanz/haskell-lsp"
"alanz/vscode-hie-server" -> "phoityne/phoityne-vscode"
"goldfirere/singletons" -> "haskell/containers"
"goldfirere/singletons" -> "kcsongor/generic-lens"
"goldfirere/singletons" -> "ghc-proposals/ghc-proposals"
"goldfirere/singletons" -> "ekmett/machines"
"goldfirere/singletons" -> "tweag/linear-base"
"goldfirere/singletons" -> "haskell/vector"
"goldfirere/singletons" -> "alpmestan/ghc.nix"
"haskell/actions" -> "actions/setup-haskell"
"haskell/actions" -> "haskell-CI/haskell-ci"
"haskell/actions" -> "mpickering/apply-refact"
"hspec/hspec" -> "sol/hpack"
"hspec/hspec" -> "bos/aeson"
"hspec/hspec" -> "nick8325/quickcheck"
"hspec/hspec" -> "pcapriotti/optparse-applicative"
"hspec/hspec" -> "ndmitchell/hlint"
"hspec/hspec" -> "mrkkrp/megaparsec"
"hspec/hspec" -> "haskell-servant/servant"
"hspec/hspec" -> "haskell/text"
"hspec/hspec" -> "kowainik/relude"
"hspec/hspec" -> "haskell/mtl"
"hspec/hspec" -> "ndmitchell/ghcid"
"hspec/hspec" -> "haskell/haddock"
"hspec/hspec" -> "haskell/cabal"
"hspec/hspec" -> "commercialhaskell/stack"
"hspec/hspec" -> "haskell/bytestring"
"kazu-yamamoto/unit-test-example" -> "sol/doctest-haskell"
"kazu-yamamoto/unit-test-example" -> "fujimura/hi"
"mfine/heroku-buildpack-stack" -> "parsonsmatt/servant-persistent"
"mfine/heroku-buildpack-stack" -> "nikita-volkov/hasql"
"valderman/selda" -> "tathougies/beam"
"valderman/selda" -> "tomjaguarpaw/haskell-opaleye"
"valderman/selda" -> "morphismtech/squeal"
"valderman/selda" -> "kcsongor/generic-lens"
"valderman/selda" -> "i-am-tom/higgledy"
"valderman/selda" -> "quchen/prettyprinter"
"valderman/selda" -> "acid-state/acid-state"
"valderman/selda" -> "nikita-volkov/hasql"
"valderman/selda" -> "nmattia/snack"
"valderman/selda" -> "well-typed/optics"
"valderman/selda" -> "alexwl/haskell-code-explorer"
"valderman/selda" -> "agentm/project-m36"
"valderman/selda" -> "advancedtelematic/quickcheck-state-machine"
"valderman/selda" -> "mrkkrp/req"
"valderman/selda" -> "composewell/streamly"
"vicfryzel/xmonad-config" -> "davidbrewer/xmonad-ubuntu-conf"
"vicfryzel/xmonad-config" -> "altercation/dotfiles-tilingwm"
"vicfryzel/xmonad-config" -> "travitch/taffybar"
"vicfryzel/xmonad-config" -> "xmonad/xmonad-contrib"
"vicfryzel/xmonad-config" -> "jaor/xmobar"
"vicfryzel/xmonad-config" -> "davidbeckingsale/xmonad-config"
"vicfryzel/xmonad-config" -> "taffybar/taffybar"
"vicfryzel/xmonad-config" -> "randomthought/xmonad-config"
"ghcjs/ghcjs-dom" -> "ghcjs/jsaddle"
"ghcjs/jsaddle" -> "ghcjs/ghcjs-dom"
"obsidiansystems/obelisk" -> "reflex-frp/reflex"
"obsidiansystems/obelisk" -> "reflex-frp/reflex-platform"
"obsidiansystems/obelisk" -> "reflex-frp/reflex-dom"
"obsidiansystems/obelisk" -> "dmjio/miso"
"obsidiansystems/obelisk" -> "Gabriel439/haskell-nix"
"obsidiansystems/obelisk" -> "composewell/streamly"
"obsidiansystems/obelisk" -> "tweag/ormolu"
"obsidiansystems/obelisk" -> "haskell-servant/servant"
"obsidiansystems/obelisk" -> "polysemy-research/polysemy"
"obsidiansystems/obelisk" -> "tweag/asterius"
"obsidiansystems/obelisk" -> "fjvallarino/monomer"
"obsidiansystems/obelisk" -> "kowainik/relude"
"obsidiansystems/obelisk" -> "hedgehogqa/haskell-hedgehog"
"obsidiansystems/obelisk" -> "ndmitchell/ghcid"
"obsidiansystems/obelisk" -> "input-output-hk/haskell.nix"
"reflex-frp/reflex-dom" -> "reflex-frp/reflex"
"reflex-frp/reflex-dom" -> "reflex-frp/reflex-platform"
"reflex-frp/reflex-dom" -> "obsidiansystems/obelisk"
"reflex-frp/reflex-dom" -> "imalsogreg/servant-reflex"
"reflex-frp/reflex-dom" -> "reflex-frp/reflex-examples"
"reflex-frp/reflex-dom" -> "reflex-frp/reflex-dom-contrib"
"reflex-frp/reflex-dom" -> "ElvishJerricco/reflex-project-skeleton"
"reflex-frp/reflex-dom" -> "reflex-frp/reflex-dom-semui"
"reflex-frp/reflex-dom" -> "hansroland/reflex-dom-inbits"
"reflex-frp/reflex-dom" -> "ghcjs/ghcjs-dom"
"idris-hackers/idris-vim" -> "raichoo/haskell-vim"
"leksah/leksah" -> "yi-editor/yi"
"leksah/leksah" -> "haskell/haskell-ide-engine"
"leksah/leksah" -> "ghc/ghc"
"leksah/leksah" -> "commercialhaskell/intero"
"leksah/leksah" -> "yesodweb/yesod"
"leksah/leksah" -> "haskell/cabal"
"leksah/leksah" -> "commercialhaskell/stack"
"leksah/leksah" -> "begriffs/haskell-vim-now"
"leksah/leksah" -> "SublimeHaskell/SublimeHaskell"
"leksah/leksah" -> "ghcjs/ghcjs"
"leksah/leksah" -> "carymrobbins/intellij-haskforce"
"leksah/leksah" -> "haskell-distributed/distributed-process"
"leksah/leksah" -> "DanielG/ghc-mod"
"leksah/leksah" -> "valderman/haste-compiler"
"leksah/leksah" -> "kazu-yamamoto/ghc-mod"
"sleexyz/hylogen" -> "haskus/haskus-system"
"sleexyz/hylogen" -> "Twinside/Juicy.Pixels"
"sleexyz/hylogen" -> "shawnlawson/The_Force" ["e"=1]
"sleexyz/hylogen" -> "flannelhead/blackstar"
"sleexyz/hylogen" -> "lukexi/halive"
"sleexyz/hylogen" -> "jonascarpay/apecs"
"sleexyz/hylogen" -> "tobbebex/GPipe-Core"
"switchface/helm" -> "haskell-game/sdl2"
"switchface/helm" -> "palf/haskellSDL2Examples"
"switchface/helm" -> "nikita-volkov/record"
"switchface/helm" -> "cobbpg/elerea"
"switchface/helm" -> "fpco/ide-backend"
"switchface/helm" -> "takeoutweight/shade"
"switchface/helm" -> "madjestic/Haskell-OpenGL-Tutorial"
"haskell-beginners-2022/exercises" -> "haskell-beginners-2022/course-plan"
"haskell-beginners-2022/exercises" -> "chshersh/iris"
"bos/aeson" -> "bos/attoparsec"
"bos/aeson" -> "snoyberg/conduit"
"bos/aeson" -> "ekmett/lens"
"bos/aeson" -> "yesodweb/wai"
"bos/aeson" -> "bos/wreq"
"bos/aeson" -> "bos/criterion"
"bos/aeson" -> "haskell/cabal"
"bos/aeson" -> "haskell-servant/servant"
"bos/aeson" -> "hspec/hspec"
"bos/aeson" -> "simonmar/async"
"bos/aeson" -> "informatikr/hedis"
"bos/aeson" -> "pcapriotti/optparse-applicative"
"bos/aeson" -> "Gabriel439/Haskell-Pipes-Library"
"bos/aeson" -> "sol/hpack"
"bos/aeson" -> "commercialhaskell/stack"
"barrucadu/dejafu" -> "nomeata/inspection-testing"
"gkz/prelude-ls" -> "gkz/LiveScript"
"gkz/prelude-ls" -> "gkz/LiveScript-style-guide"
"gkz/prelude-ls" -> "gkz/vim-ls"
"gkz/prelude-ls" -> "gkz/optionator"
"gkz/prelude-ls" -> "dk00/livescript-next"
"gkz/prelude-ls" -> "gkz/coffee2ls"
"gkz/prelude-ls" -> "arch-js/arch"
"gkz/prelude-ls" -> "Roonin-mx/livescript-rails"
"gkz/prelude-ls" -> "tomchentw/gulp-livescript"
"gkz/prelude-ls" -> "natefaubion/adt.js" ["e"=1]
"ekmett/trifecta" -> "ekmett/machines"
"ekmett/trifecta" -> "ekmett/bound"
"ekmett/trifecta" -> "ekmett/succinct"
"Avi-D-coder/implicit-hie" -> "mpickering/hie-bios"
"Avi-D-coder/implicit-hie" -> "pepeiborra/hls-tutorial"
"Avi-D-coder/implicit-hie" -> "kowainik/stan"
"Avi-D-coder/implicit-hie" -> "tweag/ormolu"
"Avi-D-coder/implicit-hie" -> "digital-asset/ghcide"
"LeventErkok/sbv" -> "ucsd-progsys/liquidhaskell"
"LeventErkok/sbv" -> "antalsz/hs-to-coq" ["e"=1]
"LeventErkok/sbv" -> "GaloisInc/crucible" ["e"=1]
"LeventErkok/sbv" -> "cedille/cedille" ["e"=1]
"LeventErkok/sbv" -> "granule-project/granule" ["e"=1]
"LeventErkok/sbv" -> "goldfirere/singletons"
"LeventErkok/sbv" -> "kcsongor/generic-lens"
"LeventErkok/sbv" -> "hedgehogqa/haskell-hedgehog"
"LeventErkok/sbv" -> "snowleopard/alga"
"LeventErkok/sbv" -> "PrincetonUniversity/VST" ["e"=1]
"LeventErkok/sbv" -> "GaloisInc/saw-script" ["e"=1]
"LeventErkok/sbv" -> "nick8325/quickspec" ["e"=1]
"LeventErkok/sbv" -> "ghc-proposals/ghc-proposals"
"LeventErkok/sbv" -> "composewell/streamly"
"LeventErkok/sbv" -> "nomeata/inspection-testing"
"NorfairKing/haskell-WAT" -> "NorfairKing/syds-rules-for-sustainable-haskell"
"NorfairKing/haskell-WAT" -> "NorfairKing/haskell-dangerous-functions"
"cdepillabout/pretty-simple" -> "chrisdone/dynamic"
"chrisdone/dynamic" -> "cdepillabout/pretty-simple"
"ennocramer/floskell" -> "chessai/hedgehog-classes"
"haskell-distributed/distributed-process" -> "jepst/CloudHaskell"
"haskell-distributed/distributed-process" -> "Gabriel439/Haskell-Pipes-Library"
"haskell-distributed/distributed-process" -> "simonmar/async"
"haskell-distributed/distributed-process" -> "GaloisInc/HaLVM"
"haskell-distributed/distributed-process" -> "bos/aeson"
"haskell-distributed/distributed-process" -> "albertoruiz/hmatrix"
"haskell-distributed/distributed-process" -> "tibbe/ekg"
"haskell-distributed/distributed-process" -> "ekmett/lens"
"haskell-distributed/distributed-process" -> "twittner/zeromq-haskell"
"haskell-distributed/distributed-process" -> "transient-haskell/transient"
"haskell-distributed/distributed-process" -> "snoyberg/conduit"
"haskell-distributed/distributed-process" -> "HeinrichApfelmus/reactive-banana"
"haskell-distributed/distributed-process" -> "jaspervdj/websockets"
"haskell-distributed/distributed-process" -> "bos/attoparsec"
"haskell-distributed/distributed-process" -> "hedgehogqa/haskell-hedgehog"
"haskell-nix/hnix" -> "nh2/static-haskell-nix"
"haskell-nix/hnix" -> "tweag/ormolu"
"haskell-nix/hnix" -> "well-typed/optics"
"haskell-nix/hnix" -> "input-output-hk/haskell.nix"
"haskell-nix/hnix" -> "NixOS/cabal2nix"
"haskell-nix/hnix" -> "sol/hpack"
"haskell-nix/hnix" -> "nix-community/NUR" ["e"=1]
"haskell-nix/hnix" -> "nmattia/snack"
"haskell-nix/hnix" -> "haskell/text"
"haskell-nix/hnix" -> "cachix/cachix" ["e"=1]
"haskell-nix/hnix" -> "serokell/nixfmt" ["e"=1]
"haskell-nix/hnix" -> "tweag/linear-base"
"haskell-nix/hnix" -> "target/lorri" ["e"=1]
"haskell-nix/hnix" -> "Infinisil/all-hies"
"haskell-nix/hnix" -> "ghc-proposals/ghc-proposals"
"haskell/ide" -> "digital-asset/ghcide"
"haskell/ide" -> "hasura/eff"
"haskell/ide" -> "nmattia/snack"
"haskell/ide" -> "isovector/polysemy"
"haskell/ide" -> "alexwl/haskell-code-explorer"
"haskell/ide" -> "tweag/ormolu"
"haskell/ide" -> "kowainik/stan"
"haskell/ide" -> "facebookincubator/retrie"
"haskell/ide" -> "pepeiborra/hls-tutorial"
"haskell/ide" -> "well-typed/optics"
"haskell/ide" -> "Lemmih/reanimate"
"haskell/ide" -> "codedownio/time-ghc-modules"
"haskell/ide" -> "fumieval/deriving-aeson"
"haskell/ide" -> "haskell-nix/hnix"
"haskell/text" -> "haskell/bytestring"
"haskell/text" -> "haskell/mtl"
"haskell/text" -> "haskell/vector"
"haskell/text" -> "haskell/containers"
"haskell/text" -> "haskell/aeson"
"haskell/text" -> "haskell/haddock"
"haskell/text" -> "haskell/time"
"haskell/text" -> "haskell/stylish-haskell"
"haskell/text" -> "haskell/process"
"haskell/text" -> "haskell-nix/hnix"
"haskell/text" -> "tweag/linear-base"
"haskell/text" -> "haskell-unordered-containers/unordered-containers"
"haskell/text" -> "well-typed/optics"
"haskell/text" -> "hspec/hspec"
"haskell/vscode-haskell" -> "haskell/haskell-language-server"
"haskell/vscode-haskell" -> "mpickering/hie-bios"
"haskell/vscode-haskell" -> "haskell/lsp"
"haskell/vscode-haskell" -> "tweag/linear-base"
"haskell/vscode-haskell" -> "haskell/aeson"
"haskell/vscode-haskell" -> "haskell/actions"
"mpickering/hie-bios" -> "Avi-D-coder/implicit-hie"
"nick8325/quickcheck" -> "hspec/hspec"
"nick8325/quickcheck" -> "feuerbach/tasty"
"nick8325/quickcheck" -> "bos/aeson"
"nick8325/quickcheck" -> "haskell/haddock"
"nick8325/quickcheck" -> "mrkkrp/megaparsec"
"nick8325/quickcheck" -> "pcapriotti/optparse-applicative"
"nick8325/quickcheck" -> "hedgehogqa/haskell-hedgehog"
"nick8325/quickcheck" -> "bos/criterion"
"nick8325/quickcheck" -> "haskell/bytestring"
"nick8325/quickcheck" -> "ndmitchell/hlint"
"nick8325/quickcheck" -> "haskell/containers"
"nick8325/quickcheck" -> "ndmitchell/hoogle"
"nick8325/quickcheck" -> "ekmett/lens"
"nick8325/quickcheck" -> "haskell/cabal"
"nick8325/quickcheck" -> "ucsd-progsys/liquidhaskell"
"sol/hpack" -> "hspec/hspec"
"sol/hpack" -> "sol/doctest"
"sol/hpack" -> "haskell-foundation/foundation"
"sol/hpack" -> "ghc-proposals/ghc-proposals"
"sol/hpack" -> "mrkkrp/megaparsec"
"sol/hpack" -> "hedgehogqa/haskell-hedgehog"
"sol/hpack" -> "haskell-servant/servant"
"sol/hpack" -> "ndmitchell/ghcid"
"sol/hpack" -> "haskell-nix/hnix"
"sol/hpack" -> "lspitzner/brittany"
"sol/hpack" -> "bitemyapp/esqueleto"
"sol/hpack" -> "tweag/ormolu"
"sol/hpack" -> "tomjaguarpaw/haskell-opaleye"
"sol/hpack" -> "cdepillabout/pretty-simple"
"sol/hpack" -> "commercialhaskell/intero"
"Gabriel439/Haskell-Pipes-Library" -> "ekmett/machines"
"Gabriel439/Haskell-Pipes-Library" -> "snoyberg/conduit"
"Gabriel439/Haskell-Pipes-Library" -> "haskell-distributed/distributed-process"
"Gabriel439/Haskell-Pipes-Library" -> "bos/criterion"
"Gabriel439/Haskell-Pipes-Library" -> "chrisdone/structured-haskell-mode"
"Gabriel439/Haskell-Pipes-Library" -> "bos/aeson"
"Gabriel439/Haskell-Pipes-Library" -> "tibbe/ekg"
"Gabriel439/Haskell-Pipes-Library" -> "ekmett/lens"
"Gabriel439/Haskell-Pipes-Library" -> "Gabriel439/Haskell-Morte-Library"
"Gabriel439/Haskell-Pipes-Library" -> "simonmar/async"
"Gabriel439/Haskell-Pipes-Library" -> "acid-state/acid-state"
"Gabriel439/Haskell-Pipes-Library" -> "Gabriel439/Haskell-Turtle-Library"
"Gabriel439/Haskell-Pipes-Library" -> "Gabriel439/Haskell-Pipes-Concurrency-Library"
"Gabriel439/Haskell-Pipes-Library" -> "bos/attoparsec"
"Gabriel439/Haskell-Pipes-Library" -> "sebastiaanvisser/clay"
"Gabriel439/haskell-nix" -> "ndmitchell/ghcid"
"Gabriel439/haskell-nix" -> "shajra/example-nix"
"Gabriel439/haskell-nix" -> "input-output-hk/haskell.nix"
"Gabriel439/haskell-nix" -> "nh2/static-haskell-nix"
"Gabriel439/haskell-nix" -> "reflex-frp/reflex-platform"
"Gabriel439/haskell-nix" -> "haskell-servant/servant"
"Gabriel439/haskell-nix" -> "obsidiansystems/obelisk"
"Gabriel439/haskell-nix" -> "dmjio/miso"
"Gabriel439/haskell-nix" -> "fghibellini/nix-haskell-monorepo"
"Gabriel439/haskell-nix" -> "tweag/ormolu"
"Gabriel439/haskell-nix" -> "target/lorri" ["e"=1]
"Gabriel439/haskell-nix" -> "lspitzner/brittany"
"Gabriel439/haskell-nix" -> "nmattia/niv" ["e"=1]
"Gabriel439/haskell-nix" -> "nmattia/snack"
"Gabriel439/haskell-nix" -> "haskell/haskell-ide-engine"
"Gabriel439/simple-twitter" -> "owickstrom/gi-gtk-declarative"
"Gabriel439/simple-twitter" -> "wendigojaeger/ZigGBAHelloWorld"
"Gabriel439/simple-twitter" -> "fghibellini/nix-haskell-monorepo"
"Gabriel439/simple-twitter" -> "ajnsit/concur"
"Gabriel439/simple-twitter" -> "nh2/static-haskell-nix"
"Gabriel439/simple-twitter" -> "thomashoneyman/purescript-halogen-realworld" ["e"=1]
"Gabriel439/simple-twitter" -> "sapir/gcc-rust"
"Gabriel439/simple-twitter" -> "reflex-frp/reflex-platform"
"Gabriel439/simple-twitter" -> "morphismtech/squeal"
"Gabriel439/simple-twitter" -> "robrix/starlight"
"Gabriel439/simple-twitter" -> "cohomolo-gy/haskell-resources"
"Gabriel439/simple-twitter" -> "Gabriel439/haskell-nix"
"Gabriel439/simple-twitter" -> "cdepillabout/termonad"
"Gabriel439/simple-twitter" -> "hasura/eff"
"HeinrichApfelmus/hyper-haskell" -> "theam/haskell-do"
"HeinrichApfelmus/hyper-haskell" -> "rahulmutt/ghcvm"
"HeinrichApfelmus/hyper-haskell" -> "tweag/capability"
"HeinrichApfelmus/hyper-haskell" -> "Lemmih/reanimate"
"HeinrichApfelmus/hyper-haskell" -> "agocorona/transient"
"HeinrichApfelmus/hyper-haskell" -> "mstksg/auto"
"HeinrichApfelmus/hyper-haskell" -> "quchen/prettyprinter"
"HeinrichApfelmus/hyper-haskell" -> "tweag/inline-java"
"HeinrichApfelmus/hyper-haskell" -> "lukexi/halive"
"Lemmih/reanimate" -> "kcsongor/generic-lens"
"Lemmih/reanimate" -> "isovector/polysemy"
"Lemmih/reanimate" -> "HeinrichApfelmus/hyper-haskell"
"Lemmih/reanimate" -> "grin-tech/grin"
"Lemmih/reanimate" -> "quchen/prettyprinter"
"Lemmih/reanimate" -> "alexwl/haskell-code-explorer"
"NorfairKing/smos" -> "NorfairKing/intray"
"NorfairKing/smos" -> "NorfairKing/validity"
"NorfairKing/smos" -> "NorfairKing/feedback"
"Twinside/Rasterific" -> "Twinside/FontyFruity"
"awakesecurity/proto3-suite" -> "awakesecurity/proto3-wire"
"bos/criterion" -> "simonmar/async"
"bos/criterion" -> "bos/attoparsec"
"bos/criterion" -> "bos/aeson"
"bos/criterion" -> "feuerbach/tasty"
"bos/criterion" -> "Gabriel439/Haskell-Pipes-Library"
"bos/criterion" -> "tibbe/unordered-containers"
"bos/criterion" -> "hedgehogqa/haskell-hedgehog"
"bos/criterion" -> "ekmett/lens"
"bos/criterion" -> "pcapriotti/optparse-applicative"
"bos/criterion" -> "snoyberg/http-client"
"bos/criterion" -> "nick8325/quickcheck"
"bos/criterion" -> "tibbe/ekg"
"bos/criterion" -> "ekmett/trifecta"
"bos/criterion" -> "acid-state/acid-state"
"bos/criterion" -> "fpco/stackage"
"brendanhay/amazonka" -> "brendanhay/gogol"
"brendanhay/amazonka" -> "aristidb/aws"
"brendanhay/amazonka" -> "nikita-volkov/hasql"
"brendanhay/amazonka" -> "haskell-servant/servant"
"brendanhay/amazonka" -> "sol/hpack"
"brendanhay/amazonka" -> "bos/wreq"
"brendanhay/amazonka" -> "seek-oss/serverless-haskell"
"brendanhay/amazonka" -> "lykahb/groundhog"
"brendanhay/amazonka" -> "bos/aeson"
"brendanhay/amazonka" -> "theam/aws-lambda-haskell-runtime"
"brendanhay/amazonka" -> "kcsongor/generic-lens"
"brendanhay/amazonka" -> "mrkkrp/req"
"brendanhay/amazonka" -> "tathougies/beam"
"brendanhay/amazonka" -> "fpco/stackage"
"brendanhay/amazonka" -> "composewell/streamly"
"davidbrewer/xmonad-ubuntu-conf" -> "vicfryzel/xmonad-config"
"davidbrewer/xmonad-ubuntu-conf" -> "Gekkio/gnome-session-xmonad"
"davidbrewer/xmonad-ubuntu-conf" -> "Gabriel439/Haskell-Pipes-Library"
"eckyputrady/haskell-scotty-realworld-example-app" -> "tzemanovic/haskell-yesod-realworld-example-app"
"eckyputrady/haskell-scotty-realworld-example-app" -> "ameingast/postgresql-simple-migration"
"eckyputrady/haskell-scotty-realworld-example-app" -> "Holmusk/three-layer"
"ezyang/compact" -> "nh2/haskell-cpu-instruction-counter"
"gelisam/frp-zoo" -> "ivanperez-keera/Yampa"
"gelisam/frp-zoo" -> "HeinrichApfelmus/reactive-banana"
"gelisam/frp-zoo" -> "agocorona/transient"
"gelisam/frp-zoo" -> "ivanperez-keera/dunai"
"gelisam/frp-zoo" -> "quchen/articles"
"gelisam/frp-zoo" -> "haskell-perf/checklist"
"gelisam/frp-zoo" -> "madjestic/Haskell-OpenGL-Tutorial"
"gelisam/frp-zoo" -> "atzeus/FRPNow"
"gelisam/frp-zoo" -> "isovector/polysemy"
"gelisam/frp-zoo" -> "ocharles/netwire-classics"
"gelisam/frp-zoo" -> "HeinrichApfelmus/frp-guides"
"gelisam/frp-zoo" -> "haskus/haskus-system"
"gelisam/frp-zoo" -> "haskell-game/sdl2"
"gelisam/frp-zoo" -> "Gabriel439/haskell-nix"
"gelisam/frp-zoo" -> "mstksg/auto"
"kowainik/summoner" -> "kowainik/relude"
"kowainik/summoner" -> "kowainik/stan"
"kowainik/summoner" -> "tweag/ormolu"
"kowainik/summoner" -> "graninas/software-design-in-haskell"
"kowainik/summoner" -> "lspitzner/brittany"
"kowainik/summoner" -> "hedgehogqa/haskell-hedgehog"
"kowainik/summoner" -> "i-am-tom/haskell-exercises"
"kowainik/summoner" -> "jtdaugherty/brick"
"kowainik/summoner" -> "well-typed/optics"
"kowainik/summoner" -> "commercialhaskell/rio"
"kowainik/summoner" -> "ndmitchell/ghcid"
"kowainik/summoner" -> "composewell/streamly"
"kowainik/summoner" -> "higherkindness/mu-haskell"
"kowainik/summoner" -> "polysemy-research/polysemy"
"kowainik/summoner" -> "Holmusk/three-layer"
"lehins/massiv" -> "haskell/vector"
"lehins/massiv" -> "snowleopard/alga"
"lehins/massiv" -> "composewell/streamly"
"lehins/massiv" -> "fused-effects/fused-effects"
"lehins/massiv" -> "goldfirere/singletons"
"lehins/massiv" -> "lehins/haskell-scheduler"
"lehins/massiv" -> "tweag/capability"
"lehins/massiv" -> "ghc-proposals/ghc-proposals"
"lehins/massiv" -> "psibi/fakedata"
"lehins/massiv" -> "sol/hpack"
"lehins/massiv" -> "digital-asset/ghcide"
"lehins/massiv" -> "kcsongor/generic-lens"
"lehins/massiv" -> "mrkkrp/req"
"lehins/massiv" -> "commercialhaskell/rio"
"lehins/massiv" -> "hedgehogqa/haskell-hedgehog"
"mchakravarty/HaskellSpriteKit" -> "mchakravarty/lazy-lambda"
"morphismtech/squeal" -> "valderman/selda"
"morphismtech/squeal" -> "tathougies/beam"
"morphismtech/squeal" -> "nikita-volkov/hasql"
"morphismtech/squeal" -> "mrkkrp/req"
"morphismtech/squeal" -> "composewell/streamly"
"morphismtech/squeal" -> "tomjaguarpaw/haskell-opaleye"
"morphismtech/squeal" -> "nmattia/snack"
"morphismtech/squeal" -> "kcsongor/generic-lens"
"morphismtech/squeal" -> "hedgehogqa/haskell-hedgehog"
"morphismtech/squeal" -> "lspitzner/brittany"
"morphismtech/squeal" -> "fumieval/deriving-aeson"
"morphismtech/squeal" -> "ajnsit/concur"
"mrkgnao/silica" -> "i-am-tom/higgledy"
"mvoidex/hsdev" -> "commercialhaskell/stack-ide"
"nh2/haskell-cpu-instruction-counter" -> "ezyang/compact"
"nikita-volkov/hasql" -> "morphismtech/squeal"
"nikita-volkov/hasql" -> "tomjaguarpaw/haskell-opaleye"
"nikita-volkov/hasql" -> "tathougies/beam"
"nikita-volkov/hasql" -> "nikita-volkov/hasql-th"
"nikita-volkov/hasql" -> "bitemyapp/esqueleto"
"nikita-volkov/hasql" -> "brendanhay/amazonka"
"nikita-volkov/hasql" -> "valderman/selda"
"nikita-volkov/hasql" -> "hedgehogqa/haskell-hedgehog"
"nikita-volkov/hasql" -> "haskell-servant/servant"
"nikita-volkov/hasql" -> "composewell/streamly"
"nikita-volkov/hasql" -> "brendanhay/gogol"
"nikita-volkov/hasql" -> "mrkkrp/req"
"nikita-volkov/hasql" -> "chrisdone/lucid"
"nikita-volkov/hasql" -> "sdiehl/protolude"
"nikita-volkov/hasql" -> "yesodweb/wai"
"nmattia/snack" -> "nh2/static-haskell-nix"
"nmattia/snack" -> "alpmestan/ghc.nix"
"nmattia/snack" -> "nmattia/niv" ["e"=1]
"nmattia/snack" -> "alexwl/haskell-code-explorer"
"nmattia/snack" -> "input-output-hk/haskell.nix"
"nmattia/snack" -> "tathougies/beam"
"nmattia/snack" -> "isovector/polysemy"
"nmattia/snack" -> "mrkgnao/silica"
"nmattia/snack" -> "haskell/ide"
"nmattia/snack" -> "haskell-nix/hnix"
"nmattia/snack" -> "cachix/cachix" ["e"=1]
"nmattia/snack" -> "siers/nix-gitignore"
"nmattia/snack" -> "fghibellini/nix-haskell-monorepo"
"nmattia/snack" -> "composewell/streamly"
"nmattia/snack" -> "valderman/selda"
"owickstrom/komposition" -> "owickstrom/gi-gtk-declarative"
"owickstrom/komposition" -> "i-am-tom/higgledy"
"owickstrom/komposition" -> "alexwl/haskell-code-explorer"
"owickstrom/komposition" -> "isovector/polysemy"
"owickstrom/komposition" -> "feuerbach/tasty"
"pushcx/hpffp-resources" -> "lukleh/haskell-book-exercises"
"pushcx/hpffp-resources" -> "dmvianna/haskellbook"
"pushcx/hpffp-resources" -> "haskell-learning-group/haskell-learning-group"
"pushcx/hpffp-resources" -> "quchen/stgi"
"pushcx/hpffp-resources" -> "hzlmn/haskell-must-watch"
"pushcx/hpffp-resources" -> "goldfirere/glambda" ["e"=1]
"pushcx/hpffp-resources" -> "data61/fp-course"
"pushcx/hpffp-resources" -> "write-you-a-scheme-v2/scheme"
"pushcx/hpffp-resources" -> "dwayne/haskell-programming"
"pushcx/hpffp-resources" -> "gelisam/frp-zoo"
"pushcx/hpffp-resources" -> "sol/hpack"
"pushcx/hpffp-resources" -> "sjsyrek/haskell-study-startup"
"shajra/example-nix" -> "Gabriel439/haskell-nix"
"shajra/example-nix" -> "jwiegley/nix-config" ["e"=1]
"shajra/example-nix" -> "nmattia/snack"
"shajra/example-nix" -> "peti/hydra-tutorial" ["e"=1]
"shajra/example-nix" -> "xtruder/kubenix" ["e"=1]
"shajra/example-nix" -> "target/lorri" ["e"=1]
"shajra/example-nix" -> "fghibellini/nix-haskell-monorepo"
"shajra/example-nix" -> "morphismtech/squeal"
"shajra/example-nix" -> "matthewbauer/nix-bundle" ["e"=1]
"shajra/example-nix" -> "nh2/static-haskell-nix"
"shajra/example-nix" -> "haskell-nix/hnix"
"shajra/example-nix" -> "puffnfresh/nix-files"
"snowleopard/alga-paper" -> "snowleopard/alga"
"snowleopard/alga-paper" -> "dpndnt/library"
"snowleopard/alga-paper" -> "algebraic-graphs/scala"
"tathougies/beam" -> "tomjaguarpaw/haskell-opaleye"
"tathougies/beam" -> "valderman/selda"
"tathougies/beam" -> "morphismtech/squeal"
"tathougies/beam" -> "nmattia/snack"
"tathougies/beam" -> "nikita-volkov/hasql"
"tathougies/beam" -> "kcsongor/generic-lens"
"tathougies/beam" -> "haskell-servant/servant"
"tathougies/beam" -> "agentm/project-m36"
"tathougies/beam" -> "isovector/polysemy"
"tathougies/beam" -> "brendanhay/gogol"
"tathougies/beam" -> "lykahb/groundhog"
"tathougies/beam" -> "bitemyapp/esqueleto"
"tathougies/beam" -> "composewell/streamly"
"tathougies/beam" -> "sol/hpack"
"tathougies/beam" -> "reflex-frp/reflex-dom"
"tibbe/ekg" -> "bos/configurator"
"tibbe/ekg" -> "simonmar/async"
"tibbe/ekg" -> "Gabriel439/Haskell-Pipes-Library"
"tibbe/ekg" -> "ermine-language/ermine"
"tibbe/ekg" -> "bos/pronk"
"tibbe/ekg" -> "hreinhardt/amqp"
"timbod7/haskell-chart" -> "albertoruiz/hmatrix"
"timbod7/haskell-chart" -> "hvr/multi-ghc-travis"
"timbod7/haskell-chart" -> "tweag/HaskellR"
"timbod7/haskell-chart" -> "lspitzner/brittany"
"timbod7/haskell-chart" -> "HeinrichApfelmus/hyper-haskell"
"timbod7/haskell-chart" -> "pcapriotti/optparse-applicative"
"timbod7/haskell-chart" -> "sebastiaanvisser/clay"
"timbod7/haskell-chart" -> "Gabriel439/Haskell-Pipes-Library"
"timbod7/haskell-chart" -> "feuerbach/tasty"
"timbod7/haskell-chart" -> "acowley/Frames"
"timbod7/haskell-chart" -> "mikeizbicki/subhask"
"timbod7/haskell-chart" -> "mikeizbicki/HLearn"
"timbod7/haskell-chart" -> "BinRoot/Haskell-Data-Analysis-Cookbook"
"timbod7/haskell-chart" -> "bos/statistics"
"timbod7/haskell-chart" -> "hedgehogqa/haskell-hedgehog"
"hansroland/reflex-dom-inbits" -> "ElvishJerricco/reflex-project-skeleton"
"hansroland/reflex-dom-inbits" -> "mightybyte/hsnippet"
"hansroland/reflex-dom-inbits" -> "reflex-frp/reflex-examples"
"hansroland/reflex-dom-inbits" -> "qfpl/reflex-tutorial"
"hansroland/reflex-dom-inbits" -> "imalsogreg/servant-reflex"
"hansroland/reflex-dom-inbits" -> "yamafaktory/reflex-starter"
"lettier/movie-monad" -> "lettier/gifcurry"
"write-you-a-scheme-v2/scheme" -> "JakeWheat/intro_to_parsing"
"write-you-a-scheme-v2/scheme" -> "sdiehl/kaleidoscope"
"write-you-a-scheme-v2/scheme" -> "quchen/articles"
"write-you-a-scheme-v2/scheme" -> "sdiehl/write-you-a-haskell"
"write-you-a-scheme-v2/scheme" -> "llvm-hs/llvm-hs"
"write-you-a-scheme-v2/scheme" -> "JKTKops/Write-You-a-Haskell-2"
"write-you-a-scheme-v2/scheme" -> "justinethier/husk-scheme"
"write-you-a-scheme-v2/scheme" -> "mrkkrp/megaparsec"
"write-you-a-scheme-v2/scheme" -> "quchen/stgi"
"write-you-a-scheme-v2/scheme" -> "haskell-servant/servant"
"write-you-a-scheme-v2/scheme" -> "sdiehl/wiwinwlh"
"write-you-a-scheme-v2/scheme" -> "nanopass/nanopass-framework-scheme" ["e"=1]
"write-you-a-scheme-v2/scheme" -> "sol/hpack"
"write-you-a-scheme-v2/scheme" -> "fused-effects/fused-effects"
"write-you-a-scheme-v2/scheme" -> "haskell-crypto/cryptonite"
"IntelLabs/flrc" -> "quchen/stgi"
"IntelLabs/flrc" -> "valderman/selda"
"IntelLabs/flrc" -> "ghc-proposals/ghc-proposals"
"IntelLabs/flrc" -> "ollef/Earley" ["e"=1]
"IntelLabs/flrc" -> "nomeata/veggies"
"IntelLabs/flrc" -> "ollef/sixten" ["e"=1]
"IntelLabs/flrc" -> "hedgehogqa/haskell-hedgehog"
"IntelLabs/flrc" -> "dbousamra/hnes"
"IntelLabs/flrc" -> "antalsz/hs-to-coq" ["e"=1]
"IntelLabs/flrc" -> "haskell/containers"
"IntelLabs/flrc" -> "haskus/haskus-system"
"IntelLabs/flrc" -> "grin-tech/grin"
"IntelLabs/flrc" -> "mortberg/cubicaltt" ["e"=1]
"IntelLabs/flrc" -> "sweirich/pi-forall" ["e"=1]
"IntelLabs/flrc" -> "mikeizbicki/subhask"
"AllureOfTheStars/Allure" -> "LambdaHack/LambdaHack"
"LambdaHack/LambdaHack" -> "AllureOfTheStars/Allure"
"LambdaHack/LambdaHack" -> "jonascarpay/apecs"
"LambdaHack/LambdaHack" -> "haskell-game/sdl2"
"LambdaHack/LambdaHack" -> "facundoolano/advenjure"
"LambdaHack/LambdaHack" -> "jtdaugherty/brick"
"LambdaHack/LambdaHack" -> "elisehuard/game-in-haskell"
"LambdaHack/LambdaHack" -> "ivanperez-keera/Yampa"
"LambdaHack/LambdaHack" -> "sdiehl/protolude"
"LambdaHack/LambdaHack" -> "cobbpg/elerea"
"LambdaHack/LambdaHack" -> "kowainik/summoner"
"LambdaHack/LambdaHack" -> "ndmitchell/ghcid"
"LambdaHack/LambdaHack" -> "expipiplus1/vulkan"
"LambdaHack/LambdaHack" -> "ivanperez-keera/haskanoid"
"LambdaHack/LambdaHack" -> "HeinrichApfelmus/reactive-banana"
"LambdaHack/LambdaHack" -> "haskell-foundation/foundation"
"chrisdone/structured-haskell-mode" -> "serras/emacs-haskell-tutorial"
"chrisdone/structured-haskell-mode" -> "Gabriel439/Haskell-Pipes-Library"
"chrisdone/structured-haskell-mode" -> "haskell/haskell-mode"
"chrisdone/structured-haskell-mode" -> "knupfer/haskell-emacs"
"chrisdone/structured-haskell-mode" -> "chrisdone/chrisdone-emacs"
"chrisdone/structured-haskell-mode" -> "chrisdone/hindent"
"chrisdone/structured-haskell-mode" -> "kazu-yamamoto/ghc-mod"
"chrisdone/structured-haskell-mode" -> "chrisdone/emacs-haskell-config"
"chrisdone/structured-haskell-mode" -> "commercialhaskell/intero"
"chrisdone/structured-haskell-mode" -> "chrisdone/god-mode" ["e"=1]
"chrisdone/structured-haskell-mode" -> "jaspervdj/stylish-haskell"
"chrisdone/structured-haskell-mode" -> "chrisdone/hell"
"chrisdone/structured-haskell-mode" -> "yi-editor/yi"
"chrisdone/structured-haskell-mode" -> "faylang/fay"
"chrisdone/structured-haskell-mode" -> "bos/criterion"
"ekmett/hask" -> "ekmett/kan-extensions"
"Paczesiowa/virthualenv" -> "Paczesiowa/hsenv"
"tweag/awesome-learning-haskell" -> "tweag/servant-template"
"tweag/awesome-learning-haskell" -> "willbasky/Awesome-list-of-Haskell-mentors"
"tweag/awesome-learning-haskell" -> "haskell-beginners-2022/course-plan"
"tweag/awesome-learning-haskell" -> "purenix-org/purenix" ["e"=1]
"tweag/awesome-learning-haskell" -> "thma/PolysemyCleanArchitecture"
"snoyberg/conduit" -> "bos/aeson"
"snoyberg/conduit" -> "Gabriel439/Haskell-Pipes-Library"
"snoyberg/conduit" -> "simonmar/async"
"snoyberg/conduit" -> "pcapriotti/optparse-applicative"
"snoyberg/conduit" -> "ekmett/lens"
"snoyberg/conduit" -> "yesodweb/wai"
"snoyberg/conduit" -> "yesodweb/persistent"
"snoyberg/conduit" -> "commercialhaskell/rio"
"snoyberg/conduit" -> "haskell/cabal"
"snoyberg/conduit" -> "ekmett/machines"
"snoyberg/conduit" -> "mrkkrp/megaparsec"
"snoyberg/conduit" -> "haskell-servant/servant"
"snoyberg/conduit" -> "bos/attoparsec"
"snoyberg/conduit" -> "composewell/streamly"
"snoyberg/conduit" -> "hspec/hspec"
"DanielG/ghc-mod" -> "eagletmt/ghcmod-vim"
"DanielG/ghc-mod" -> "feuerbach/tasty"
"DanielG/ghc-mod" -> "eagletmt/neco-ghc"
"DanielG/ghc-mod" -> "haskell/haskell-ide-engine"
"DanielG/ghc-mod" -> "fpco/safe-exceptions"
"DanielG/ghc-mod" -> "bos/configurator"
"DanielG/ghc-mod" -> "iquiw/company-ghc"
"DanielG/ghc-mod" -> "ndmitchell/hoogle"
"DanielG/ghc-mod" -> "ndmitchell/ghcid"
"Holmusk/three-layer" -> "i-am-tom/haskell-exercises"
"Holmusk/three-layer" -> "graninas/software-design-in-haskell"
"Holmusk/three-layer" -> "composewell/streamly"
"Holmusk/three-layer" -> "kowainik/hit-on"
"Holmusk/three-layer" -> "isovector/thinking-with-types"
"Holmusk/three-layer" -> "NorfairKing/haskell-dangerous-functions"
"Holmusk/three-layer" -> "tssm/up-to-date-real-world-haskell"
"Holmusk/three-layer" -> "thomashoneyman/purescript-halogen-realworld" ["e"=1]
"Holmusk/three-layer" -> "digital-asset/ghcide"
"Holmusk/three-layer" -> "morpheusgraphql/morpheus-graphql"
"Holmusk/three-layer" -> "hasura/eff"
"Holmusk/three-layer" -> "kowainik/summoner"
"Holmusk/three-layer" -> "kowainik/relude"
"Holmusk/three-layer" -> "codedownio/time-ghc-modules"
"Holmusk/three-layer" -> "tweag/ormolu"
"Infinisil/all-hies" -> "domenkozar/hie-nix"
"Infinisil/all-hies" -> "nh2/static-haskell-nix"
"Infinisil/all-hies" -> "haskell-nix/hnix"
"Infinisil/all-hies" -> "nmattia/snack"
"agentm/project-m36" -> "composewell/streamly"
"agentm/project-m36" -> "tathougies/beam"
"agentm/project-m36" -> "kcsongor/generic-lens"
"agentm/project-m36" -> "valderman/selda"
"agentm/project-m36" -> "morphismtech/squeal"
"agentm/project-m36" -> "tomjaguarpaw/haskell-opaleye"
"agentm/project-m36" -> "lspitzner/brittany"
"agentm/project-m36" -> "ajnsit/concur"
"agentm/project-m36" -> "ollef/sixten" ["e"=1]
"agentm/project-m36" -> "haskell-servant/servant"
"agentm/project-m36" -> "Gabriel439/haskell-nix"
"agentm/project-m36" -> "snowleopard/alga"
"agentm/project-m36" -> "obsidiansystems/obelisk"
"agentm/project-m36" -> "hedgehogqa/haskell-hedgehog"
"agentm/project-m36" -> "digital-asset/ghcide"
"alanz/haskell-lsp" -> "alanz/haskell-ide-engine"
"chrisdone/hindent" -> "chrisdone/structured-haskell-mode"
"chrisdone/hindent" -> "chrisdone/lucid"
"chrisdone/hindent" -> "iquiw/company-ghc"
"chrisdone/hindent" -> "feuerbach/tasty"
"chrisdone/hindent" -> "jaspervdj/stylish-haskell"
"chrisdone/hindent" -> "Gabriel439/Haskell-Pipes-Library"
"chrisdone/hindent" -> "nikita-volkov/record"
"chrisdone/hindent" -> "commercialhaskell/haskelldocumentation"
"chrisdone/hindent" -> "mietek/halcyon"
"commercialhaskell/commercialhaskell" -> "commercialhaskell/haskelldocumentation"
"commercialhaskell/commercialhaskell" -> "fpco/stackage"
"commercialhaskell/commercialhaskell" -> "feuerbach/tasty"
"commercialhaskell/commercialhaskell" -> "haskell/hackage-server"
"commercialhaskell/commercialhaskell" -> "fpco/stackage-server"
"commercialhaskell/commercialhaskell" -> "aristidb/aws"
"commercialhaskell/commercialhaskell" -> "pcapriotti/optparse-applicative"
"commercialhaskell/commercialhaskell" -> "haskell-foundation/foundation"
"commercialhaskell/commercialhaskell" -> "tweag/HaskellR"
"commercialhaskell/commercialhaskell" -> "haskell-servant/servant"
"commercialhaskell/commercialhaskell" -> "snoyberg/conduit"
"commercialhaskell/commercialhaskell" -> "ocharles/papers"
"commercialhaskell/commercialhaskell" -> "ekmett/linear"
"commercialhaskell/commercialhaskell" -> "kazu-yamamoto/ghc-mod"
"commercialhaskell/commercialhaskell" -> "suhailshergill/extensible-effects"
"haskell/hackage-server" -> "haskell/bytestring"
"haskell/hackage-server" -> "haskell/haddock"
"haskell/hackage-server" -> "haskell/vector"
"haskell/hackage-server" -> "haskell/cabal"
"haskell/hackage-server" -> "simonmar/async"
"haskell/hackage-server" -> "haskell/containers"
"haskell/hackage-server" -> "fpco/stackage"
"haskell/hackage-server" -> "haskell/text"
"haskell/hackage-server" -> "ghc-proposals/ghc-proposals"
"haskell/hackage-server" -> "hspec/hspec"
"haskell/hackage-server" -> "well-typed/optics"
"haskell/hackage-server" -> "tomjaguarpaw/haskell-opaleye"
"haskell/hackage-server" -> "haskell/mtl"
"haskell/hackage-server" -> "haskell-CI/haskell-ci"
"haskell/hackage-server" -> "hvr/multi-ghc-travis"
"haskell/haddock" -> "haskell/bytestring"
"haskell/haddock" -> "haskell/text"
"haskell/haddock" -> "haskell/hackage-server"
"haskell/haddock" -> "haskell/mtl"
"haskell/haddock" -> "haskell-CI/haskell-ci"
"haskell/haddock" -> "ndmitchell/hoogle"
"haskell/haddock" -> "haskell/containers"
"haskell/haddock" -> "well-typed/optics"
"haskell/haddock" -> "hvr/multi-ghc-travis"
"haskell/haddock" -> "ghc-proposals/ghc-proposals"
"haskell/haddock" -> "haskell/cabal"
"haskell/haddock" -> "fpco/stackage"
"haskell/haddock" -> "tweag/linear-base"
"haskell/haddock" -> "haskell/time"
"haskell/haddock" -> "commercialhaskell/stackage"
"haskell/mtl" -> "haskell/text"
"haskell/mtl" -> "haskell/containers"
"haskell/mtl" -> "haskell/bytestring"
"haskell/mtl" -> "tweag/linear-base"
"haskell/mtl" -> "haskell/haddock"
"haskell/mtl" -> "haskell/vector"
"haskell/mtl" -> "haskell/aeson"
"haskell/mtl" -> "kowainik/relude"
"haskell/mtl" -> "well-typed/optics"
"haskell/mtl" -> "mrkkrp/megaparsec"
"haskell/mtl" -> "polysemy-research/polysemy"
"haskell/mtl" -> "monadfix/microlens"
"haskell/mtl" -> "haskell/process"
"haskell/mtl" -> "composewell/streamly"
"haskell/mtl" -> "haskell-CI/haskell-ci"
"kowainik/co-log" -> "kowainik/tomland"
"kowainik/co-log" -> "isovector/type-sets"
"mrkkrp/req" -> "morphismtech/squeal"
"mrkkrp/req" -> "bitemyapp/esqueleto"
"mrkkrp/req" -> "kcsongor/generic-lens"
"mrkkrp/req" -> "Soostone/katip"
"mrkkrp/req" -> "composewell/streamly"
"mrkkrp/req" -> "haskell/text"
"mrkkrp/req" -> "snoyberg/http-client"
"mrkkrp/req" -> "quchen/prettyprinter"
"mrkkrp/req" -> "hedgehogqa/haskell-hedgehog"
"mrkkrp/req" -> "haskell/aeson"
"mrkkrp/req" -> "bos/wreq"
"mrkkrp/req" -> "haskell/vector"
"mrkkrp/req" -> "informatikr/hedis"
"mrkkrp/req" -> "valderman/selda"
"mrkkrp/req" -> "monadfix/microlens"
"parsonsmatt/servant-persistent" -> "haskell-servant/example-servant-persistent"
"parsonsmatt/servant-persistent" -> "tomjaguarpaw/haskell-opaleye"
"parsonsmatt/servant-persistent" -> "bitemyapp/esqueleto"
"parsonsmatt/servant-persistent" -> "haskell-servant/servant"
"parsonsmatt/servant-persistent" -> "dorlowd/haskell-servant-realworld-example-app"
"parsonsmatt/servant-persistent" -> "mrkkrp/req"
"parsonsmatt/servant-persistent" -> "myfreeweb/magicbane"
"parsonsmatt/servant-persistent" -> "ndmitchell/ghcid"
"parsonsmatt/servant-persistent" -> "yesodweb/persistent"
"parsonsmatt/servant-persistent" -> "kcsongor/generic-lens"
"parsonsmatt/servant-persistent" -> "sol/hpack"
"parsonsmatt/servant-persistent" -> "Soostone/katip"
"parsonsmatt/servant-persistent" -> "k-bx/owlcloud"
"parsonsmatt/servant-persistent" -> "vacationlabs/haskell-webapps"
"parsonsmatt/servant-persistent" -> "lykahb/groundhog"
"snoyberg/http-client" -> "simonmar/async"
"snoyberg/http-client" -> "bos/wreq"
"snoyberg/http-client" -> "informatikr/hedis"
"snoyberg/http-client" -> "mrkkrp/req"
"snoyberg/http-client" -> "sol/doctest"
"snoyberg/http-client" -> "kowainik/co-log"
"snoyberg/http-client" -> "bos/aeson"
"snoyberg/http-client" -> "haskell/bytestring"
"sol/doctest" -> "sol/hpack"
"sol/doctest" -> "haskell/containers"
"sol/doctest" -> "fpco/stackage"
"sol/doctest" -> "fbsamples/ghc-hotswap"
"sol/doctest" -> "snoyberg/http-client"
"well-typed/optics" -> "haskell-CI/haskell-ci"
"well-typed/optics" -> "tweag/linear-base"
"well-typed/optics" -> "kcsongor/generic-lens"
"well-typed/optics" -> "tweag/capability"
"well-typed/optics" -> "kowainik/relude"
"well-typed/optics" -> "polysemy-research/polysemy"
"well-typed/optics" -> "quchen/prettyprinter"
"well-typed/optics" -> "haskell-nix/hnix"
"well-typed/optics" -> "tweag/ormolu"
"well-typed/optics" -> "ekmett/recursion-schemes"
"well-typed/optics" -> "composewell/streamly"
"well-typed/optics" -> "facebookincubator/retrie"
"well-typed/optics" -> "digital-asset/ghcide"
"well-typed/optics" -> "haskell/mtl"
"well-typed/optics" -> "kowainik/stan"
"Yvee1/hascard" -> "rmehri01/thock"
"Yvee1/hascard" -> "RyanGreenup/cadmus"
"Sirupsen/localjob" -> "Sirupsen/posix-mqueue"
"NorfairKing/sydtest" -> "NorfairKing/feedback"
"haskell/bytestring" -> "haskell/text"
"haskell/bytestring" -> "haskell/vector"
"haskell/bytestring" -> "haskell/containers"
"haskell/bytestring" -> "haskell/haddock"
"haskell/bytestring" -> "haskell/hackage-server"
"haskell/bytestring" -> "haskell/process"
"haskell/bytestring" -> "haskell/mtl"
"haskell/bytestring" -> "kolmodin/binary"
"haskell/bytestring" -> "haskell/deepseq"
"haskell/bytestring" -> "haskell-unordered-containers/unordered-containers"
"haskell/bytestring" -> "tibbe/unordered-containers"
"haskell/bytestring" -> "simonmar/async"
"haskell/bytestring" -> "haskell/directory"
"haskell/bytestring" -> "haskell/filepath"
"rsms/ec2-webapp" -> "rsms/move"
"rsms/ec2-webapp" -> "visionmedia/express-namespace" ["e"=1]
"mietek/halcyon" -> "mietek/haskell-on-heroku"
"hercules-ci/hercules" -> "ocharles/micro-ci"
"hercules-ci/hercules" -> "jwiegley/hnix"
"hercules-ci/hercules" -> "TaktInc/hail"
"tweag/HaskellR" -> "tweag/sparkle"
"tweag/HaskellR" -> "tweag/funflow"
"tweag/HaskellR" -> "acowley/Frames"
"tweag/HaskellR" -> "haskell-foundation/foundation"
"tweag/HaskellR" -> "timbod7/haskell-chart"
"tweag/HaskellR" -> "tomjaguarpaw/haskell-opaleye"
"tweag/HaskellR" -> "HuwCampbell/grenade"
"tweag/HaskellR" -> "adscib/monad-bayes" ["e"=1]
"tweag/HaskellR" -> "Gabriel439/Haskell-Turtle-Library"
"tweag/HaskellR" -> "BinRoot/Haskell-Data-Analysis-Cookbook"
"tweag/HaskellR" -> "brendanhay/gogol"
"tweag/HaskellR" -> "mikeizbicki/HLearn"
"tweag/HaskellR" -> "commercialhaskell/commercialhaskell"
"tweag/HaskellR" -> "sol/hpack"
"tweag/HaskellR" -> "rahulmutt/ghcvm"
"beerendlauwers/haskell-papers-ereader" -> "robbinch/Papers"
"beerendlauwers/haskell-papers-ereader" -> "rahulmutt/ghcvm"
"grin-tech/grin" -> "iu-parfunc/gibbon"
"awakesecurity/gRPC-haskell" -> "awakesecurity/proto3-suite"
"awakesecurity/gRPC-haskell" -> "grpc/grpc-haskell"
"Gabriel439/bench" -> "hedgehogqa/haskell-hedgehog"
"Gabriel439/bench" -> "haskell-perf/checklist"
"Gabriel439/bench" -> "Gabriel439/Haskell-Dhall-Library"
"Gabriel439/bench" -> "sdiehl/protolude"
"Gabriel439/bench" -> "sol/hpack"
"Gabriel439/bench" -> "fpco/safe-exceptions"
"Gabriel439/bench" -> "bos/criterion"
"Gabriel439/bench" -> "rahulmutt/ghcvm"
"Gabriel439/bench" -> "sol/doctest"
"Gabriel439/bench" -> "ndmitchell/ghcid"
"Gabriel439/bench" -> "feuerbach/tasty"
"Gabriel439/bench" -> "lspitzner/brittany"
"Gabriel439/bench" -> "aelve/microlens"
"Gabriel439/bench" -> "barrucadu/dejafu"
"Gabriel439/bench" -> "well-typed/optics"
"dhall-lang/dhall-haskell" -> "dhall-lang/dhall-lang"
"dhall-lang/dhall-haskell" -> "dhall-lang/dhall-kubernetes"
"dhall-lang/dhall-haskell" -> "composewell/streamly"
"dhall-lang/dhall-haskell" -> "fused-effects/fused-effects"
"dhall-lang/dhall-haskell" -> "hasura/eff"
"dhall-lang/dhall-haskell" -> "kcsongor/generic-lens"
"dhall-lang/dhall-haskell" -> "nh2/static-haskell-nix"
"dhall-lang/dhall-haskell" -> "nmattia/snack"
"dhall-lang/dhall-haskell" -> "haskell-nix/hnix"
"dhall-lang/dhall-haskell" -> "tweag/capability"
"dhall-lang/dhall-haskell" -> "haskell-servant/servant"
"dhall-lang/dhall-haskell" -> "well-typed/optics"
"dhall-lang/dhall-haskell" -> "ghc-proposals/ghc-proposals"
"dhall-lang/dhall-haskell" -> "Gabriel439/haskell-nix"
"dhall-lang/dhall-haskell" -> "facebookincubator/retrie"
"ivanperez-keera/dunai" -> "turion/rhine"
"ivanperez-keera/dunai" -> "turion/essence-of-live-coding"
"theam/haskell-do" -> "HeinrichApfelmus/hyper-haskell"
"theam/haskell-do" -> "haskell-foundation/foundation"
"theam/haskell-do" -> "haskell-tools/haskell-tools"
"theam/haskell-do" -> "aisamanra/haddock-cheatsheet"
"theam/haskell-do" -> "Gabriel439/Haskell-Foldl-Library"
"llvm-hs/llvm-hs" -> "llvm-hs/llvm-hs-pretty"
"llvm-hs/llvm-hs" -> "llvm-hs/llvm-hs-kaleidoscope"
"llvm-hs/llvm-hs" -> "mrkkrp/megaparsec"
"llvm-hs/llvm-hs" -> "llvm-hs/llvm-hs-examples"
"llvm-hs/llvm-hs" -> "sdiehl/kaleidoscope"
"llvm-hs/llvm-hs" -> "goldfirere/singletons"
"llvm-hs/llvm-hs" -> "grin-tech/grin"
"llvm-hs/llvm-hs" -> "ollef/sixten" ["e"=1]
"llvm-hs/llvm-hs" -> "grin-compiler/grin" ["e"=1]
"llvm-hs/llvm-hs" -> "divipp/x86-64"
"llvm-hs/llvm-hs" -> "ollef/rock"
"llvm-hs/llvm-hs" -> "cdepillabout/pretty-simple"
"jaspervdj/websockets" -> "informatikr/hedis"
"jaspervdj/websockets" -> "simonmar/async"
"jaspervdj/websockets" -> "yesodweb/persistent"
"jaspervdj/websockets" -> "haskell-distributed/distributed-process"
"jaspervdj/websockets" -> "snoyberg/conduit"
"jaspervdj/websockets" -> "frasertweedale/hs-jose"
"jaspervdj/websockets" -> "acid-state/acid-state"
"jaspervdj/websockets" -> "jaspervdj/blaze-html"
"jaspervdj/websockets" -> "bos/aeson"
"jaspervdj/websockets" -> "yesodweb/wai"
"jaspervdj/websockets" -> "aristidb/aws"
"jaspervdj/websockets" -> "snoyberg/keter"
"jaspervdj/websockets" -> "haskell-servant/servant"
"jaspervdj/websockets" -> "mrkkrp/req"
"jaspervdj/websockets" -> "tomjaguarpaw/haskell-opaleye"
"facebookincubator/retrie" -> "kowainik/stan"
"facebookincubator/retrie" -> "well-typed/optics"
"facebookincubator/retrie" -> "digital-asset/ghcide"
"facebookincubator/retrie" -> "tweag/ormolu"
"facebookincubator/retrie" -> "tweag/linear-base"
"facebookincubator/retrie" -> "haskell/ide"
"facebookincubator/retrie" -> "fused-effects/fused-effects"
"facebookincubator/retrie" -> "ndmitchell/ghcid"
"facebookincubator/retrie" -> "polysemy-research/polysemy"
"facebookincubator/retrie" -> "ghc-proposals/ghc-proposals"
"facebookincubator/retrie" -> "i-am-tom/haskell-exercises"
"facebookincubator/retrie" -> "sol/hpack"
"facebookincubator/retrie" -> "paf31/dovetail"
"facebookincubator/retrie" -> "hasura/eff"
"facebookincubator/retrie" -> "composewell/streamly"
"graninas/Functional-Design-and-Architecture" -> "graninas/automatic-whitebox-testing-showcase"
"graninas/Functional-Design-and-Architecture" -> "graninas/software-design-in-haskell"
"graninas/Functional-Design-and-Architecture" -> "graninas/Andromeda"
"graninas/Functional-Design-and-Architecture" -> "cohomolo-gy/haskell-resources"
"graninas/Functional-Design-and-Architecture" -> "isovector/thinking-with-types"
"graninas/Functional-Design-and-Architecture" -> "kowainik/summoner"
"haskell/containers" -> "haskell/bytestring"
"haskell/containers" -> "haskell/text"
"haskell/containers" -> "haskell/vector"
"haskell/containers" -> "haskell/mtl"
"haskell/containers" -> "tibbe/unordered-containers"
"haskell/containers" -> "haskell/primitive"
"haskell/containers" -> "goldfirere/singletons"
"haskell/containers" -> "kolmodin/binary"
"haskell/containers" -> "haskell/directory"
"haskell/containers" -> "sol/doctest"
"haskell/containers" -> "haskell/deepseq"
"haskell/containers" -> "haskell/hackage-server"
"haskell/containers" -> "haskell/haddock"
"Gabriel439/nix-diff" -> "ocharles/ghc-nix"
"Gabriel439/nix-diff" -> "hercules-ci/gitignore"
"haskell-wasm/wasm" -> "dfinity/dhc"
"hvr/multi-ghc-travis" -> "fpco/stackage"
"hvr/multi-ghc-travis" -> "haskell/haddock"
"khibino/haskell-relational-record" -> "tomjaguarpaw/haskell-opaleye"
"khibino/haskell-relational-record" -> "kazu-yamamoto/unit-test-example"
"khibino/haskell-relational-record" -> "fujimura/spot"
"takenobu-hs/haskell-ghc-illustrated" -> "takenobu-hs/lazy_evaluation"
"takenobu-hs/haskell-ghc-illustrated" -> "nomeata/veggies"
"takenobu-hs/haskell-ghc-illustrated" -> "takenobu-hs/haskell-ghc-reading-guide"
"tweag/capability" -> "kcsongor/generic-lens"
"tweag/capability" -> "well-typed/optics"
"jamshidh/ethereum-client-haskell" -> "bkirwi/ethereum-haskell"
"ekmett/free" -> "ekmett/contravariant"
"ekmett/free" -> "ekmett/kan-extensions"
"tweag/linear-base" -> "well-typed/optics"
"tweag/linear-base" -> "haskell/mtl"
"tweag/linear-base" -> "fused-effects/fused-effects"
"tweag/linear-base" -> "kowainik/stan"
"tweag/linear-base" -> "goldfirere/singletons"
"tweag/linear-base" -> "facebookincubator/retrie"
"tweag/linear-base" -> "ghc-proposals/ghc-proposals"
"tweag/linear-base" -> "haskell/text"
"tweag/linear-base" -> "polysemy-research/polysemy"
"tweag/linear-base" -> "ekmett/linear-logic"
"tweag/linear-base" -> "haskell-nix/hnix"
"tweag/linear-base" -> "haskell/actions"
"tweag/linear-base" -> "haskell/bytestring"
"tweag/linear-base" -> "Gabriel439/grace"
"litxio/ptghci" -> "alexwl/haskell-code-explorer"
"litxio/ptghci" -> "well-typed/optics"
"litxio/ptghci" -> "tweag/capability"
"evancz/Elm" -> "faylang/fay"
"evancz/Elm" -> "evancz/elm-lang.org"
"evancz/Elm" -> "valderman/haste-compiler"
"evancz/Elm" -> "Peaker/lamdu"
"evancz/Elm" -> "xich/scotty"
"evancz/Elm" -> "pufuwozu/roy"
"evancz/Elm" -> "paf31/purescript"
"evancz/Elm" -> "raimohanska/bacon.js" ["e"=1]
"evancz/Elm" -> "haskell-distributed/distributed-process"
"evancz/Elm" -> "z0w0/helm"
"evancz/Elm" -> "ekmett/lens"
"evancz/Elm" -> "yi-editor/yi"
"evancz/Elm" -> "ghcjs/ghcjs"
"evancz/Elm" -> "edwinb/Idris-dev" ["e"=1]
"evancz/Elm" -> "GaloisInc/HaLVM"
"fjvallarino/monomer" -> "composewell/streamly"
"fjvallarino/monomer" -> "haskell-game/dear-imgui.hs"
"fjvallarino/monomer" -> "obsidiansystems/obelisk"
"fjvallarino/monomer" -> "kowainik/stan"
"fjvallarino/monomer" -> "graninas/software-design-in-haskell"
"fjvallarino/monomer" -> "digital-asset/ghcide"
"fjvallarino/monomer" -> "owickstrom/gi-gtk-declarative"
"fjvallarino/monomer" -> "kowainik/summoner"
"fjvallarino/monomer" -> "facebookincubator/retrie"
"fjvallarino/monomer" -> "hasura/eff"
"fjvallarino/monomer" -> "ndmitchell/ghcid"
"fjvallarino/monomer" -> "jtdaugherty/brick"
"fjvallarino/monomer" -> "fused-effects/fused-effects"
"fjvallarino/monomer" -> "tweag/ormolu"
"fjvallarino/monomer" -> "well-typed/optics"
"iquiw/company-ghc" -> "fpco/ide-backend"
"alpacaaa/zero-bullshit-haskell" -> "i-am-tom/haskell-exercises"
"alpacaaa/zero-bullshit-haskell" -> "JordanMartinez/purescript-jordans-reference" ["e"=1]
"alpacaaa/zero-bullshit-haskell" -> "soupi/haskell-study-plan"
"alpacaaa/zero-bullshit-haskell" -> "thomashoneyman/purescript-halogen-realworld" ["e"=1]
"alpacaaa/zero-bullshit-haskell" -> "qfpl/applied-fp-course"
"alpacaaa/zero-bullshit-haskell" -> "kowainik/summoner"
"alpacaaa/zero-bullshit-haskell" -> "lumihq/purescript-react-basic" ["e"=1]
"alpacaaa/zero-bullshit-haskell" -> "thma/LtuPatternFactory"
"alpacaaa/zero-bullshit-haskell" -> "cohomolo-gy/haskell-resources"
"alpacaaa/zero-bullshit-haskell" -> "erkmos/haskell-companies"
"alpacaaa/zero-bullshit-haskell" -> "dwhitney/purescript-book" ["e"=1]
"alpacaaa/zero-bullshit-haskell" -> "Holmusk/three-layer"
"alpacaaa/zero-bullshit-haskell" -> "tssm/up-to-date-real-world-haskell"
"alpacaaa/zero-bullshit-haskell" -> "sassela/haskell-learning"
"alpacaaa/zero-bullshit-haskell" -> "litxio/ptghci"
"fptudelft/FP101x-Content" -> "NICTA/course"
"fptudelft/FP101x-Content" -> "BinRoot/Haskell-Data-Analysis-Cookbook"
"fptudelft/FP101x-Content" -> "joshcough/HaskellStarter"
"fptudelft/FP101x-Content" -> "headinthebox/CourseraCodeSamplesReactiveProgramming" ["e"=1]
"fptudelft/FP101x-Content" -> "tonymorris/course"
"fptudelft/FP101x-Content" -> "bos/stanford-cs240h"
"fptudelft/FP101x-Content" -> "fptudelft/FP101x-Content-2015"
"fptudelft/FP101x-Content" -> "drKraken/haskell-must-watch"
"fptudelft/FP101x-Content" -> "kqr/gists"
"fptudelft/FP101x-Content" -> "non/cats" ["e"=1]
"fptudelft/FP101x-Content" -> "degoes-consulting/lambdaconf-2015"
"fptudelft/FP101x-Content" -> "pchiusano/fpinscala" ["e"=1]
"fptudelft/FP101x-Content" -> "sdiehl/wiwinwlh"
"fptudelft/FP101x-Content" -> "steshaw/plt-study"
"fptudelft/FP101x-Content" -> "chrisdone/hindent"
"jwbuurlage/category-theory-programmers" -> "quchen/articles"
"jwbuurlage/category-theory-programmers" -> "jwiegley/category-theory" ["e"=1]
"jwbuurlage/category-theory-programmers" -> "antalsz/hs-to-coq" ["e"=1]
"jwbuurlage/category-theory-programmers" -> "idris-hackers/software-foundations" ["e"=1]
"jwbuurlage/category-theory-programmers" -> "cohomolo-gy/haskell-resources"
"jwbuurlage/category-theory-programmers" -> "chrisdone/wish"
"jwbuurlage/category-theory-programmers" -> "haskell-tools/haskell-tools"
"jwbuurlage/category-theory-programmers" -> "isovector/thinking-with-types"
"jwbuurlage/category-theory-programmers" -> "IntelLabs/flrc"
"jwbuurlage/category-theory-programmers" -> "pigworker/CS410-17"
"jwbuurlage/category-theory-programmers" -> "gelisam/frp-zoo"
"jwbuurlage/category-theory-programmers" -> "goldfirere/glambda" ["e"=1]
"jwbuurlage/category-theory-programmers" -> "conal/concat" ["e"=1]
"jwbuurlage/category-theory-programmers" -> "theam/haskell-do"
"jwbuurlage/category-theory-programmers" -> "sdiehl/protolude"
"HeinrichApfelmus/threepenny-gui" -> "HeinrichApfelmus/reactive-banana"
"HeinrichApfelmus/threepenny-gui" -> "gtk2hs/gtk2hs"
"HeinrichApfelmus/threepenny-gui" -> "jcollard/unm-hip"
"HeinrichApfelmus/threepenny-gui" -> "thma/ThreepennyElectron"
"HeinrichApfelmus/threepenny-gui" -> "faylang/fay"
"HeinrichApfelmus/threepenny-gui" -> "benl23x5/gloss"
"HeinrichApfelmus/threepenny-gui" -> "Twinside/Juicy.Pixels"
"HeinrichApfelmus/threepenny-gui" -> "ekmett/machines"
"HeinrichApfelmus/threepenny-gui" -> "HeinrichApfelmus/hyper-haskell"
"HeinrichApfelmus/threepenny-gui" -> "ekmett/lens"
"HeinrichApfelmus/threepenny-gui" -> "JakeWheat/intro_to_parsing"
"taffybar/taffybar" -> "xmonad/xmonad-contrib"
"taffybar/taffybar" -> "jaor/xmobar"
"taffybar/taffybar" -> "IvanMalison/dotfiles"
"taffybar/taffybar" -> "waymonad/waymonad"
"taffybar/taffybar" -> "cdepillabout/termonad"
"taffybar/taffybar" -> "nix-community/NUR" ["e"=1]
"taffybar/taffybar" -> "liskin/dotfiles"
"taffybar/taffybar" -> "david-janssen/kmonad"
"taffybar/taffybar" -> "xmonad/xmonad"
"Twinside/Juicy.Pixels" -> "Twinside/Rasterific"
"Twinside/Juicy.Pixels" -> "ekmett/linear"
"Twinside/Juicy.Pixels" -> "RaphaelJ/friday"
"Twinside/Juicy.Pixels" -> "ekmett/gl"
"benl23x5/gloss" -> "haskell-game/sdl2"
"benl23x5/gloss" -> "Twinside/Juicy.Pixels"
"benl23x5/gloss" -> "lehins/massiv"
"benl23x5/gloss" -> "HeinrichApfelmus/reactive-banana"
"benl23x5/gloss" -> "elisehuard/game-in-haskell"
"benl23x5/gloss" -> "suhailshergill/extensible-effects"
"benl23x5/gloss" -> "Twinside/Rasterific"
"benl23x5/gloss" -> "HeinrichApfelmus/threepenny-gui"
"ekmett/linear" -> "Twinside/Juicy.Pixels"
"ekmett/linear" -> "albertoruiz/hmatrix"
"adjoint-io/nanochain" -> "adjoint-io/nanocoin"
"adjoint-io/nanochain" -> "adjoint-io/uplink"
"adjoint-io/nanochain" -> "adjoint-io/merkle-tree"
"adjoint-io/nanochain" -> "MichaelBurge/haskoin"
"grpc/grpc-haskell" -> "awakesecurity/gRPC-haskell"
"tweag/inline-java" -> "wavewave/fficxx"
"tweag/inline-java" -> "HeinrichApfelmus/hyper-haskell"
"HeinrichApfelmus/reactive-banana" -> "ivanperez-keera/Yampa"
"HeinrichApfelmus/reactive-banana" -> "gelisam/frp-zoo"
"HeinrichApfelmus/reactive-banana" -> "haskell-game/sdl2"
"HeinrichApfelmus/reactive-banana" -> "Gabriel439/Haskell-Pipes-Library"
"HeinrichApfelmus/reactive-banana" -> "haskell-distributed/distributed-process"
"HeinrichApfelmus/reactive-banana" -> "HeinrichApfelmus/threepenny-gui"
"HeinrichApfelmus/reactive-banana" -> "benl23x5/gloss"
"HeinrichApfelmus/reactive-banana" -> "ekmett/lens"
"HeinrichApfelmus/reactive-banana" -> "z0w0/helm"
"HeinrichApfelmus/reactive-banana" -> "snoyberg/conduit"
"HeinrichApfelmus/reactive-banana" -> "keera-studios/keera-hails"
"HeinrichApfelmus/reactive-banana" -> "ghcjs/ghcjs"
"HeinrichApfelmus/reactive-banana" -> "kazu-yamamoto/ghc-mod"
"HeinrichApfelmus/reactive-banana" -> "valderman/haste-compiler"
"HeinrichApfelmus/reactive-banana" -> "jonascarpay/apecs"
"satyr/coco" -> "gkz/LiveScript"
"satyr/coco" -> "disnet/contracts.coffee"
"satyr/coco" -> "michaelficarra/CoffeeScript2"
"satyr/coco" -> "weepy/kaffeine"
"satyr/coco" -> "fab13n/parsec-coffee-script"
"satyr/coco" -> "pufuwozu/roy"
"satyr/coco" -> "mauricemach/zappa" ["e"=1]
"satyr/coco" -> "Constellation/escodegen" ["e"=1]
"satyr/coco" -> "maxtaco/coffee-script" ["e"=1]
"satyr/coco" -> "michaelficarra/CoffeeScriptRedux" ["e"=1]
"Ongy/waymonad" -> "ocharles/micro-ci"
"Ongy/waymonad" -> "abooij/sudbury"
"Ongy/waymonad" -> "hercules-ci/hercules"
"JPMoresmau/eclipsefp" -> "JPMoresmau/BuildWrapper"
"JPMoresmau/eclipsefp" -> "nominolo/scion"
"JPMoresmau/eclipsefp" -> "JPMoresmau/scion-class-browser"
"JPMoresmau/eclipsefp" -> "fpco/stackage"
"ajnsit/purescript-concur" -> "ajnsit/concur"
"ajnsit/purescript-concur" -> "natefaubion/purescript-cst" ["e"=1]
"ajnsit/purescript-concur" -> "ajnsit/concur-documentation"
"ajnsit/purescript-concur" -> "paf31/purescript-sdom" ["e"=1]
"domenkozar/hie-nix" -> "Infinisil/all-hies"
"ekmett/profunctors" -> "ekmett/contravariant"
"ekmett/profunctors" -> "ekmett/adjunctions"
"sellout/caterwaul" -> "FormationAI/dhall-bhat"
"morpheusgraphql/morpheus-graphql" -> "higherkindness/mu-haskell"
"morpheusgraphql/morpheus-graphql" -> "haskell-graphql/graphql-api"
"morpheusgraphql/morpheus-graphql" -> "dandoh/web-haskell-graphql-postgres-boilerplate"
"morpheusgraphql/morpheus-graphql" -> "Holmusk/three-layer"
"morpheusgraphql/morpheus-graphql" -> "kowainik/relude"
"morpheusgraphql/morpheus-graphql" -> "NorfairKing/sydtest"
"morpheusgraphql/morpheus-graphql" -> "theam/aws-lambda-haskell-runtime"
"morpheusgraphql/morpheus-graphql" -> "valderman/selda"
"morpheusgraphql/morpheus-graphql" -> "haskell/ide"
"morpheusgraphql/morpheus-graphql" -> "circuithub/rel8"
"morpheusgraphql/morpheus-graphql" -> "haskell-beam/beam"
"morpheusgraphql/morpheus-graphql" -> "kowainik/stan"
"morpheusgraphql/morpheus-graphql" -> "dillonkearns/elm-graphql" ["e"=1]
"morpheusgraphql/morpheus-graphql" -> "haskell-servant/servant"
"morpheusgraphql/morpheus-graphql" -> "i-am-tom/haskell-exercises"
"haskoin/haskoin" -> "aviaviavi/legion"
"haskoin/haskoin" -> "RaphaelJ/friday"
"haskoin/haskoin" -> "tdietert/nanocoin"
"haskoin/haskoin" -> "bkirwi/ethereum-haskell"
"haskoin/haskoin" -> "sdiehl/protolude"
"haskoin/haskoin" -> "haskoin/haskoin-wallet"
"haskoin/haskoin" -> "boundedvariation/quantfin" ["e"=1]
"albertoruiz/hmatrix" -> "ekmett/linear"
"albertoruiz/hmatrix" -> "ekmett/ad"
"albertoruiz/hmatrix" -> "bos/statistics"
"albertoruiz/hmatrix" -> "timbod7/haskell-chart"
"albertoruiz/hmatrix" -> "haskell-distributed/distributed-process"
"albertoruiz/hmatrix" -> "albertoruiz/easyVision"
"albertoruiz/hmatrix" -> "DDCSF/repa"
"albertoruiz/hmatrix" -> "acowley/Frames"
"albertoruiz/hmatrix" -> "commercialhaskell/haskelldocumentation"
"jepst/CloudHaskell" -> "haskell-distributed/distributed-process"
"jepst/CloudHaskell" -> "bos/stanford-cs240h"
"jepst/CloudHaskell" -> "chrisdone/haskell-emacs"
"jepst/CloudHaskell" -> "sviperll/ghcjs"
"jepst/CloudHaskell" -> "GaloisInc/HaLVM"
"jepst/CloudHaskell" -> "creswick/cabal-dev"
"jepst/CloudHaskell" -> "faylang/fay"
"jepst/CloudHaskell" -> "snapframework/snap-core"
"jepst/CloudHaskell" -> "bos/llvm"
"jepst/CloudHaskell" -> "simonmar/monad-par"
"jepst/CloudHaskell" -> "simonmar/par-tutorial"
"jepst/CloudHaskell" -> "jamwt/Angel"
"jepst/CloudHaskell" -> "yi-editor/yi"
"jepst/CloudHaskell" -> "Gabriel439/Haskell-Pipes-Library"
"jepst/CloudHaskell" -> "edwinb/Idris-dev" ["e"=1]
"expipiplus1/vulkan" -> "achirkin/vulkan"
"paf31/purescript" -> "seliopou/typo"
"xixixao/Shem" -> "xixixao/Golem"
"xixixao/Shem" -> "oden-lang/oden"
"pigworker/CS410-17" -> "martinescardo/HoTT-UF-Agda-Lecture-Notes" ["e"=1]
"pigworker/CS410-17" -> "pigworker/CS410-18"
"transient-haskell/transient" -> "transient-haskell/transient-universe"
"transient-haskell/transient" -> "haskell-tools/haskell-tools"
"transient-haskell/transient" -> "transient-haskell/axiom"
"transient-haskell/transient" -> "commercialhaskell/rio"
"transient-haskell/transient" -> "haskell-distributed/distributed-process"
"transient-haskell/transient" -> "reflex-frp/reflex-platform"
"transient-haskell/transient" -> "tathougies/beam"
"transient-haskell/transient" -> "tweag/sparkle"
"transient-haskell/transient" -> "composewell/streamly"
"transient-haskell/transient" -> "mrkkrp/req"
"transient-haskell/transient" -> "dmjio/miso"
"transient-haskell/transient" -> "ivanperez-keera/dunai"
"transient-haskell/transient" -> "fpco/store"
"transient-haskell/transient" -> "conal/concat" ["e"=1]
"transient-haskell/transient" -> "theam/haskell-do"
"travitch/taffybar" -> "alexkay/xmonad-log-applet"
"jbarrow/LambdaNet" -> "alpmestan/hnn"
"jbarrow/LambdaNet" -> "mikeizbicki/HLearn"
"jbarrow/LambdaNet" -> "brunjlar/neural"
"jbarrow/LambdaNet" -> "ajtulloch/dnngraph"
"jbarrow/LambdaNet" -> "chris-taylor/aima-haskell"
"jbarrow/LambdaNet" -> "JPMoresmau/rnn"
"Gabriel439/Haskell-Morte-Library" -> "Gabriel439/Haskell-Annah-Library"
"Gabriel439/Haskell-Morte-Library" -> "mikeizbicki/subhask"
"Gabriel439/Haskell-Morte-Library" -> "MaiaVictor/caramel"
"Gabriel439/Haskell-Morte-Library" -> "Gabriel439/Haskell-Pipes-Library"
"Gabriel439/Haskell-Morte-Library" -> "ollef/Earley" ["e"=1]
"NixOS/cabal2nix" -> "haskell-nix/hnix"
"NixOS/cabal2nix" -> "input-output-hk/haskell.nix"
"NixOS/cabal2nix" -> "cachix/cachix" ["e"=1]
"NixOS/cabal2nix" -> "Gabriel439/haskell-nix"
"NixOS/cabal2nix" -> "composewell/streamly"
"NixOS/cabal2nix" -> "haskell/haddock"
"NixOS/cabal2nix" -> "hasura/eff"
"NixOS/cabal2nix" -> "NixOS/hydra" ["e"=1]
"NixOS/cabal2nix" -> "haskell/bytestring"
"NixOS/cabal2nix" -> "haskell/text"
"NixOS/cabal2nix" -> "sol/hpack"
"snoyberg/keter" -> "fpco/stackage"
"JakeWheat/intro_to_parsing" -> "write-you-a-scheme-v2/scheme"
"JakeWheat/intro_to_parsing" -> "serras/emacs-haskell-tutorial"
"JakeWheat/intro_to_parsing" -> "sdiehl/kaleidoscope"
"JakeWheat/intro_to_parsing" -> "gelisam/frp-zoo"
"JakeWheat/intro_to_parsing" -> "NICTA/course"
"JakeWheat/intro_to_parsing" -> "ekmett/lens"
"JakeWheat/intro_to_parsing" -> "justinethier/husk-scheme"
"JakeWheat/intro_to_parsing" -> "ocharles/papers"
"JakeWheat/intro_to_parsing" -> "bitemyapp/bloodhound"
"JakeWheat/intro_to_parsing" -> "tibbe/haskell-style-guide"
"JakeWheat/intro_to_parsing" -> "begriffs/haskell-vim-now"
"JakeWheat/intro_to_parsing" -> "aslatter/parsec"
"JakeWheat/intro_to_parsing" -> "haskell/parsec"
"JakeWheat/intro_to_parsing" -> "HeinrichApfelmus/threepenny-gui"
"JakeWheat/intro_to_parsing" -> "quchen/articles"
"bscarlet/llvm-general" -> "bos/llvm"
"ocharles/papers" -> "beerendlauwers/haskell-papers-ereader"
"ocharles/papers" -> "quchen/articles"
"ocharles/papers" -> "agocorona/transient"
"ocharles/papers" -> "gelisam/frp-zoo"
"ocharles/papers" -> "commercialhaskell/commercialhaskell"
"ocharles/papers" -> "ekmett/lens"
"ocharles/papers" -> "steshaw/plt-study"
"ocharles/papers" -> "ndmitchell/shake"
"ocharles/papers" -> "JakeWheat/intro_to_parsing"
"ocharles/papers" -> "haskell-game/sdl2"
"ocharles/papers" -> "serras/emacs-haskell-tutorial"
"ocharles/papers" -> "sebastiaanvisser/clay"
"ocharles/papers" -> "nikita-volkov/record"
"ocharles/papers" -> "NICTA/course"
"ocharles/papers" -> "Gabriel439/haskell-in-the-large"
"ekmett/ad" -> "albertoruiz/hmatrix"
"ekmett/ad" -> "mikeizbicki/subhask"
"ekmett/ad" -> "conal/concat" ["e"=1]
"ekmett/ad" -> "mstksg/backprop"
"bos/stanford-cs240h" -> "jepst/CloudHaskell"
"bos/stanford-cs240h" -> "NICTA/course"
"bos/stanford-cs240h" -> "haskell-distributed/distributed-process"
"bos/stanford-cs240h" -> "mezzohaskell/mezzohaskell"
"bos/stanford-cs240h" -> "tonymorris/course"
"bos/stanford-cs240h" -> "faylang/fay"
"bos/stanford-cs240h" -> "eagletmt/ghcmod-vim"
"bos/stanford-cs240h" -> "jaspervdj/stylish-haskell"
"bos/stanford-cs240h" -> "tibbe/haskell-style-guide"
"bos/stanford-cs240h" -> "yesodweb/yesod"
"bos/stanford-cs240h" -> "leonidas/codeblog"
"bos/stanford-cs240h" -> "simonmar/par-tutorial"
"bos/stanford-cs240h" -> "ekmett/lens"
"bos/stanford-cs240h" -> "evancz/Elm"
"bos/stanford-cs240h" -> "joshcough/HaskellStarter"
"dmvianna/haskellbook" -> "abevoelker/haskellbook-solutions"
"dmvianna/haskellbook" -> "lukleh/haskell-book-exercises"
"dmvianna/haskellbook" -> "dwayne/haskell-programming"
"dmvianna/haskellbook" -> "Tclv/HaskellBook"
"exercism/haskell" -> "bitemyapp/fp-course"
"exercism/haskell" -> "kowainik/learn4haskell"
"exercism/haskell" -> "hzlmn/haskell-must-watch"
"exercism/haskell" -> "i-am-tom/haskell-exercises"
"exercism/haskell" -> "TheAlgorithms/Haskell" ["e"=1]
"exercism/haskell" -> "tensorflow/haskell"
"ekmett/contravariant" -> "ekmett/profunctors"
"ekmett/recursion-schemes" -> "well-typed/optics"
"mikeizbicki/subhask" -> "mikeizbicki/HLearn"
"mikeizbicki/subhask" -> "haskell-foundation/foundation"
"mikeizbicki/subhask" -> "Gabriel439/Haskell-Morte-Library"
"mikeizbicki/subhask" -> "conal/concat" ["e"=1]
"mikeizbicki/subhask" -> "Gabriel439/Haskell-Annah-Library"
"mikeizbicki/subhask" -> "mikeizbicki/HerbiePlugin" ["e"=1]
"mikeizbicki/subhask" -> "ghc-proposals/ghc-proposals"
"mikeizbicki/subhask" -> "kazu-yamamoto/ghc-mod"
"mikeizbicki/subhask" -> "rahulmutt/ghcvm"
"mikeizbicki/subhask" -> "ekmett/ad"
"mikeizbicki/subhask" -> "atzeus/FRPNow"
"ekmett/quine" -> "ekmett/gl"
"ekmett/quine" -> "madjestic/Haskell-OpenGL-Tutorial"
"ekmett/quine" -> "phaazon/luminance"
"WebGHC/wasm-cross" -> "ElvishJerricco/reflex-project-skeleton"
"haskell-perf/checklist" -> "hedgehogqa/haskell-hedgehog"
"haskell-perf/checklist" -> "composewell/streaming-benchmarks"
"haskell-perf/checklist" -> "alexwl/haskell-code-explorer"
"haskell-perf/checklist" -> "nh2/static-haskell-nix"
"haskell-perf/checklist" -> "sol/hpack"
"haskell-perf/checklist" -> "i-am-tom/haskell-exercises"
"haskell-perf/checklist" -> "composewell/streamly"
"haskell-perf/checklist" -> "kowainik/summoner"
"haskell-perf/checklist" -> "fbsamples/ghc-hotswap"
"haskell-perf/checklist" -> "haskell-perf/sequences"
"haskell-perf/checklist" -> "erkmos/haskell-companies"
"haskell-perf/checklist" -> "haskell-foundation/foundation"
"haskell-perf/checklist" -> "commercialhaskell/rio"
"haskell-perf/checklist" -> "nikita-volkov/hasql"
"haskell-perf/checklist" -> "cohomolo-gy/haskell-resources"
"cobbpg/elerea" -> "cobbpg/dow"
"eagletmt/ghcmod-vim" -> "eagletmt/neco-ghc"
"eagletmt/ghcmod-vim" -> "ujihisa/neco-ghc"
"eagletmt/ghcmod-vim" -> "dag/vim2hs"
"eagletmt/ghcmod-vim" -> "bitc/vim-hdevtools"
"eagletmt/ghcmod-vim" -> "kazu-yamamoto/ghc-mod"
"eagletmt/ghcmod-vim" -> "lukerandall/haskellmode-vim"
"eagletmt/ghcmod-vim" -> "bitc/lushtags"
"eagletmt/ghcmod-vim" -> "begriffs/haskell-vim-now"
"eagletmt/ghcmod-vim" -> "jaspervdj/stylish-haskell"
"eagletmt/ghcmod-vim" -> "Shougo/vimproc" ["e"=1]
"eagletmt/ghcmod-vim" -> "DanielG/ghc-mod"
"eagletmt/ghcmod-vim" -> "bitc/hdevtools"
"eagletmt/ghcmod-vim" -> "neovimhaskell/haskell-vim"
"eagletmt/ghcmod-vim" -> "creswick/cabal-dev"
"eagletmt/ghcmod-vim" -> "Shougo/vimproc.vim" ["e"=1]
"fjolnir/xnomad" -> "xmonad/osxmonad"
"fjolnir/xnomad" -> "fjolnir/Tranquil"
"fjolnir/xnomad" -> "pufuwozu/osxmonad"
"fjolnir/xnomad" -> "fjolnir/spectacle"
"fjolnir/xnomad" -> "sdegutis/Phoenix"
"fjolnir/xnomad" -> "mmirman/caledon" ["e"=1]
"fjolnir/xnomad" -> "fjolnir/Menufela"
"fjolnir/xnomad" -> "puffnfresh/toggle-osx-shadows" ["e"=1]
"silkapp/rest" -> "bitemyapp/bloodhound"
"silkapp/rest" -> "agrafix/Spock"
"silkapp/rest" -> "tibbe/ekg"
"silkapp/rest" -> "zalora/servant"
"silkapp/rest" -> "bos/configurator"
"silkapp/rest" -> "Gabriel439/haskell-in-the-large"
"silkapp/rest" -> "bos/wreq"
"silkapp/rest" -> "fujimura/hi"
"silkapp/rest" -> "joelburget/react-haskell"
"silkapp/rest" -> "jetaggart/light-haskell"
"silkapp/rest" -> "snoyberg/keter"
"silkapp/rest" -> "xich/scotty"
"silkapp/rest" -> "meteficha/esqueleto"
"silkapp/rest" -> "tomjaguarpaw/haskell-opaleye"
"silkapp/rest" -> "vincenthz/hs-tls"
"bitc/hdevtools" -> "bitc/vim-hdevtools"
"bitc/hdevtools" -> "aloiscochard/codex"
"bitc/hdevtools" -> "bitc/lushtags"
"ocharles/Francium" -> "ocharles/virtual-dom"
"mattgreen/hython" -> "ermine-language/ermine"
"mattgreen/hython" -> "JakeWheat/intro_to_parsing"
"mattgreen/hython" -> "tonymorris/course"
"mattgreen/hython" -> "justinethier/husk-scheme"
"mattgreen/hython" -> "psygnisfive/SimpleFP-v2"
"mattgreen/hython" -> "bjpop/language-python"
"mattgreen/hython" -> "chrisdone/structured-haskell-mode"
"mattgreen/hython" -> "Gabriel439/post-rfc"
"mattgreen/hython" -> "bjpop/berp"
"artemZholus/matan" -> "sandwwraith/os2016-conspect"
"bitc/lushtags" -> "ujihisa/neco-ghc"
"snapframework/snap-core" -> "snapframework/snap-server"
"snapframework/snap-core" -> "snapframework/snap"
"snapframework/snap-core" -> "snapframework/heist"
"snapframework/snap-core" -> "snapframework/snap-auth"
"snapframework/snap-core" -> "snapframework/snap-website"
"snapframework/snap-core" -> "snapframework/io-streams"
"snapframework/snap-core" -> "snapframework/xmlhtml"
"snapframework/snap-core" -> "creswick/cabal-dev"
"snapframework/snap-core" -> "haskell-distributed/distributed-process"
"neurocyte/android-haskell-activity" -> "neurocyte/foreign-jni"
"neurocyte/android-haskell-activity" -> "neurocyte/ghc-android"
"judah/haskeline" -> "haskell/vector"
"phaazon/luminance" -> "ublubu/shapes"
"jberryman/unagi-chan" -> "rrnewton/haskell-lockfree"
"Peaker/lamdu" -> "evancz/Elm"
"Peaker/lamdu" -> "rahulmutt/ghcvm"
"Peaker/lamdu" -> "faylang/fay"
"Peaker/lamdu" -> "JPMoresmau/eclipsefp"
"Peaker/lamdu" -> "kazu-yamamoto/ghc-mod"
"Peaker/lamdu" -> "jetaggart/light-haskell"
"Peaker/lamdu" -> "unisonweb/platform"
"Peaker/lamdu" -> "mikeizbicki/subhask"
"Peaker/lamdu" -> "agocorona/transient"
"Peaker/lamdu" -> "chrisdone/structured-haskell-mode"
"Peaker/lamdu" -> "GaloisInc/HaLVM"
"Peaker/lamdu" -> "valderman/haste-compiler"
"Peaker/lamdu" -> "ekmett/lens"
"Peaker/lamdu" -> "tomjaguarpaw/haskell-opaleye"
"Peaker/lamdu" -> "begriffs/heroku-buildpack-ghc"
"UnkindPartition/tasty" -> "haskell/aeson"
"UnkindPartition/tasty" -> "fourmolu/fourmolu"
"isovector/thinking-with-types" -> "isovector/polysemy"
"isovector/thinking-with-types" -> "david-christiansen/pie-hs" ["e"=1]
"isovector/thinking-with-types" -> "kcsongor/generic-lens"
"isovector/thinking-with-types" -> "Holmusk/three-layer"
"isovector/thinking-with-types" -> "alexwl/haskell-code-explorer"
"isovector/thinking-with-types" -> "kowainik/stan"
"isovector/thinking-with-types" -> "ghc-proposals/ghc-proposals"
"isovector/thinking-with-types" -> "i-am-tom/haskell-exercises"
"isovector/thinking-with-types" -> "ndmitchell/weeder"
"isovector/thinking-with-types" -> "nh2/static-haskell-nix"
"isovector/thinking-with-types" -> "cdepillabout/pretty-simple"
"isovector/thinking-with-types" -> "thma/ThreepennyElectron"
"agocorona/transient" -> "rahulmutt/ghcvm"
"agocorona/transient" -> "agocorona/transient-universe"
"agocorona/transient" -> "commercialhaskell/jump"
"agocorona/transient" -> "HeinrichApfelmus/hyper-haskell"
"agocorona/transient" -> "fpco/ide-backend"
"agocorona/transient" -> "gelisam/frp-zoo"
"agocorona/transient" -> "agocorona/hplayground"
"agocorona/transient" -> "reiddraper/ordeal"
"nomeata/incredible" -> "LeventErkok/sbv"
"nomeata/incredible" -> "nomeata/ghc-proofs"
"nomeata/incredible" -> "nomeata/gipeda"
"i-am-tom/higgledy" -> "jcpetruzza/barbies"
"i-am-tom/higgledy" -> "kcsongor/generic-lens"
"i-am-tom/higgledy" -> "mrkgnao/silica"
"i-am-tom/holmes" -> "i-am-tom/higgledy"
"i-am-tom/holmes" -> "ocharles/weeder"
"i-am-tom/holmes" -> "ekmett/guanxi"
"i-am-tom/holmes" -> "kowainik/prolens"
"i-am-tom/holmes" -> "Gabriel439/grace"
"i-am-tom/holmes" -> "chessai/hedgehog-classes"
"ocharles/weeder" -> "kowainik/validation-selective"
"simonmar/async" -> "bos/criterion"
"simonmar/async" -> "snoyberg/http-client"
"simonmar/async" -> "jberryman/unagi-chan"
"simonmar/async" -> "kazu-yamamoto/logger"
"simonmar/async" -> "informatikr/hedis"
"simonmar/async" -> "tibbe/ekg"
"simonmar/async" -> "fpco/stackage"
"simonmar/async" -> "haskell/hackage-server"
"simonmar/async" -> "haskell/bytestring"
"simonmar/async" -> "bos/aeson"
"simonmar/async" -> "haskell-distributed/distributed-process"
"simonmar/async" -> "snoyberg/conduit"
"simonmar/async" -> "jaspervdj/websockets"
"simonmar/async" -> "vincenthz/hs-tls"
"simonmar/async" -> "fpco/unliftio"
"ermine-language/ermine" -> "ermine-language/ermine-scala-core"
"ermine-language/ermine" -> "ekmett/machines"
"snapframework/snap" -> "snapframework/snap-server"
"snapframework/snap" -> "snapframework/snap-core"
"snapframework/snap" -> "snapframework/heist"
"snapframework/snap" -> "snapframework/snap-auth"
"snapframework/snap" -> "snapframework/snap-website"
"snapframework/snap" -> "haskell-distributed/distributed-process"
"snapframework/snap" -> "agrafix/Spock"
"snapframework/snap" -> "snapframework/xmlhtml"
"snapframework/snap" -> "jaspervdj/stylish-haskell"
"snapframework/snap" -> "simonmar/async"
"snapframework/snap" -> "sebastiaanvisser/clay"
"snapframework/snap" -> "tibbe/ekg"
"snapframework/snap" -> "haskell/cabal"
"snapframework/snap" -> "scotty-web/scotty"
"snapframework/snap" -> "tathougies/beam"
"wavewave/nix-build-ghc-android" -> "wavewave/haskell-android-example"
"RaphaelJ/friday" -> "jcollard/unm-hip"
"RaphaelJ/friday" -> "Twinside/Juicy.Pixels"
"RaphaelJ/friday" -> "TomMD/friday-juicypixels"
"RaphaelJ/friday" -> "RaphaelJ/friday-examples"
"psygnisfive/SimpleFP-v2" -> "psygnisfive/SimpleFP"
"tonymorris/course" -> "NICTA/course"
"tonymorris/course" -> "runarorama/scala-machines" ["e"=1]
"tonymorris/course" -> "non/cats" ["e"=1]
"tonymorris/course" -> "bos/stanford-cs240h"
"tonymorris/course" -> "pchiusano/fpinscala" ["e"=1]
"tonymorris/course" -> "imeckler/mote"
"tonymorris/course" -> "mattgreen/hython"
"tonymorris/course" -> "djspiewak/anti-xml" ["e"=1]
"tonymorris/course" -> "ocharles/papers"
"tonymorris/course" -> "faylang/fay"
"tonymorris/course" -> "JakeWheat/intro_to_parsing"
"tonymorris/course" -> "joshcough/HaskellStarter"
"tonymorris/course" -> "mikeizbicki/HLearn"
"tonymorris/course" -> "gibiansky/IHaskell"
"tonymorris/course" -> "steshaw/plt-study"
"ocharles/micro-ci" -> "hercules-ci/hercules"
"analytics/analytics" -> "ekmett/succinct"
"ghc-ios/ghc-ios-scripts" -> "ghc-ios/TestApp"
"ghc-ios/ghc-ios-scripts" -> "neurocyte/ghc-android"
"ghc-proposals/ghc-proposals" -> "goldfirere/singletons"
"ghc-proposals/ghc-proposals" -> "sol/hpack"
"ghc-proposals/ghc-proposals" -> "digital-asset/ghcide"
"ghc-proposals/ghc-proposals" -> "kcsongor/generic-lens"
"ghc-proposals/ghc-proposals" -> "mrkkrp/megaparsec"
"ghc-proposals/ghc-proposals" -> "tweag/linear-base"
"ghc-proposals/ghc-proposals" -> "alexwl/haskell-code-explorer"
"ghc-proposals/ghc-proposals" -> "haskell-foundation/foundation"
"ghc-proposals/ghc-proposals" -> "kowainik/stan"
"ghc-proposals/ghc-proposals" -> "ucsd-progsys/liquidhaskell"
"ghc-proposals/ghc-proposals" -> "haskell/haddock"
"ghc-proposals/ghc-proposals" -> "ndmitchell/ghcid"
"ghc-proposals/ghc-proposals" -> "haskell-nix/hnix"
"ghc-proposals/ghc-proposals" -> "polysemy-research/polysemy"
"ghc-proposals/ghc-proposals" -> "tweag/ormolu"
"NorfairKing/validity" -> "NorfairKing/easyspec"
"dbousamra/hnes" -> "chrisdone/wish"
"dbousamra/hnes" -> "valderman/selda"
"dbousamra/hnes" -> "psibi/fakedata"
"dbousamra/hnes" -> "aisamanra/haddock-cheatsheet"
"dbousamra/hnes" -> "quchen/stgi"
"dbousamra/hnes" -> "IntelLabs/flrc"
"dbousamra/hnes" -> "isovector/ecstasy"
"dbousamra/hnes" -> "ekmett/coda"
"dbousamra/hnes" -> "jonascarpay/apecs"
"haskell-graphql/graphql-api" -> "morpheusgraphql/morpheus-graphql"
"haskell-graphql/graphql-api" -> "nmattia/snack"
"haskell-graphql/graphql-api" -> "doolse/purescript-reactnative" ["e"=1]
"yesodweb/yesod-cookbook" -> "yesodweb/yesod-scaffold"
"yesodweb/yesod-cookbook" -> "yesodweb/persistent"
"austinvhuang/awesome-haskell-deep-learning" -> "hasktorch/hasktorch"
"austinvhuang/awesome-haskell-deep-learning" -> "mstksg/backprop"
"michaelochurch/summer-2015-haskell-class" -> "drKraken/haskell-must-watch"
"tfausak/haskeleton" -> "fujimura/hi"
"ivanperez-keera/Yampa" -> "ivanperez-keera/haskanoid"
"ivanperez-keera/Yampa" -> "keera-studios/keera-hails"
"ivanperez-keera/Yampa" -> "ivanperez-keera/dunai"
"ivanperez-keera/Yampa" -> "HeinrichApfelmus/reactive-banana"
"ivanperez-keera/Yampa" -> "jonascarpay/apecs"
"ivanperez-keera/Yampa" -> "keera-studios/haskell-game-programming"
"ivanperez-keera/Yampa" -> "gelisam/frp-zoo"
"ivanperez-keera/Yampa" -> "haskell-game/sdl2"
"ivanperez-keera/Yampa" -> "tobbebex/GPipe-Core"
"ivanperez-keera/Yampa" -> "madjestic/Haskell-OpenGL-Tutorial"
"ivanperez-keera/Yampa" -> "isovector/thinking-with-types"
"ivanperez-keera/Yampa" -> "composewell/streamly"
"ivanperez-keera/Yampa" -> "fpco/weigh"
"ivanperez-keera/Yampa" -> "reflex-frp/reflex"
"ivanperez-keera/Yampa" -> "reflex-frp/reflex-platform"
"quickstrom/quickstrom" -> "ocharles/weeder"
"quickstrom/quickstrom" -> "NorfairKing/sydtest"
"quickstrom/quickstrom" -> "ChrisPenner/json-to-haskell"
"swarm-game/swarm" -> "haskell/stylish-haskell"
"swarm-game/swarm" -> "fourmolu/fourmolu"
"swarm-game/swarm" -> "haskell/mtl"
"haskell/haskell-platform" -> "haskell/cabal"
"haskell/haskell-platform" -> "haskell/hackage-server"
"haskell/haskell-platform" -> "haskell/vector"
"haskell/haskell-platform" -> "Gabriel439/Haskell-Pipes-Library"
"haskell/haskell-platform" -> "haskell/ThreadScope"
"haskell/haskell-platform" -> "ndmitchell/hoogle"
"haskell/haskell-platform" -> "haskell/containers"
"graninas/Hydra" -> "graninas/Andromeda"
"graninas/Hydra" -> "juspay/euler-hs" ["e"=1]
"agrafix/Spock" -> "scotty-web/scotty"
"agrafix/Spock" -> "haskell-servant/servant"
"agrafix/Spock" -> "silkapp/rest"
"agrafix/Spock" -> "bos/wreq"
"agrafix/Spock" -> "simonmar/async"
"agrafix/Spock" -> "pcapriotti/optparse-applicative"
"agrafix/Spock" -> "yesodweb/wai"
"agrafix/Spock" -> "yesodweb/persistent"
"agrafix/Spock" -> "ekmett/lens"
"agrafix/Spock" -> "snapframework/snap"
"agrafix/Spock" -> "tibbe/ekg"
"agrafix/Spock" -> "sebastiaanvisser/clay"
"agrafix/Spock" -> "haskell-distributed/distributed-process"
"agrafix/Spock" -> "bitemyapp/bloodhound"
"agrafix/Spock" -> "nikita-volkov/hasql"
"begriffs/heroku-buildpack-ghc" -> "mietek/haskell-on-heroku"
"begriffs/heroku-buildpack-ghc" -> "mietek/halcyon"
"begriffs/heroku-buildpack-ghc" -> "blitzcode/ghc-stack"
"begriffs/heroku-buildpack-ghc" -> "rubik/argon"
"seliopou/typo" -> "walpurgisriot/wisp"
"uhub/awesome-haskell" -> "krispo/awesome-haskell"
"ajnsit/concur" -> "ajnsit/purescript-concur"
"ajnsit/concur" -> "ajnsit/concur-documentation"
"ajnsit/concur" -> "pkamenarsky/concur-replica"
"ajnsit/concur" -> "pkamenarsky/replica"
"ajnsit/concur" -> "myfreeweb/magicbane"
"ajnsit/concur" -> "purescript-concur/purescript-concur-react" ["e"=1]
"ajnsit/concur" -> "morphismtech/squeal"
"ajnsit/concur" -> "composewell/streamly"
"ajnsit/concur" -> "agentm/project-m36"
"haskell-perf/dictionaries" -> "haskell-perf/sequences"
"haskell-perf/dictionaries" -> "haskell-perf/serialization"
"pkamenarsky/replica" -> "pkamenarsky/concur-replica"
"ivanperez-keera/haskanoid" -> "ivanperez-keera/Yampa"
"ivanperez-keera/haskanoid" -> "keera-studios/haskell-game-programming"
"ivanperez-keera/haskanoid" -> "sseefried/docker-epidemic-build-env"
"ivanperez-keera/haskanoid" -> "haskell-game/sdl2"
"ivanperez-keera/haskanoid" -> "rainbyte/frag"
"bos/llvm" -> "bscarlet/llvm-general"
"lukleh/haskell-book-exercises" -> "dmvianna/haskellbook"
"haskell-gi/haskell-gi" -> "owickstrom/gi-gtk-declarative"
"haskell/vector" -> "haskell/bytestring"
"haskell/vector" -> "haskell/text"
"haskell/vector" -> "haskell/containers"
"haskell/vector" -> "haskell/mtl"
"haskell/vector" -> "haskell/primitive"
"haskell/vector" -> "haskell/process"
"haskell/vector" -> "haskell/hackage-server"
"haskell/vector" -> "snoyberg/mono-traversable" ["e"=1]
"haskell/vector" -> "lehins/massiv"
"haskell/vector" -> "goldfirere/singletons"
"haskell/vector" -> "judah/haskeline"
"haskell/vector" -> "kazu-yamamoto/logger"
"haskell/vector" -> "mrkkrp/req"
"haskell/vector" -> "tweag/linear-base"
"haskell/vector" -> "simonmar/async"
"zerotier/kissdb" -> "pufuwozu/toggle-osx-shadows"
"haskell-foundation/foundation" -> "sol/hpack"
"haskell-foundation/foundation" -> "mikeizbicki/subhask"
"haskell-foundation/foundation" -> "theam/haskell-do"
"haskell-foundation/foundation" -> "sdiehl/protolude"
"haskell-foundation/foundation" -> "ghc-proposals/ghc-proposals"
"haskell-foundation/foundation" -> "hedgehogqa/haskell-hedgehog"
"haskell-foundation/foundation" -> "haskell/haddock"
"haskell-foundation/foundation" -> "ndmitchell/ghcid"
"haskell-foundation/foundation" -> "lspitzner/brittany"
"haskell-foundation/foundation" -> "commercialhaskell/rio"
"haskell-foundation/foundation" -> "feuerbach/tasty"
"haskell-foundation/foundation" -> "Gabriel439/Haskell-Turtle-Library"
"haskell-foundation/foundation" -> "kcsongor/generic-lens"
"haskell-foundation/foundation" -> "kowainik/relude"
"haskell-foundation/foundation" -> "tweag/HaskellR"
"haskell-perf/sequences" -> "haskell-perf/dictionaries"
"haskell-perf/sequences" -> "haskell-perf/serialization"
"nomeata/inspection-testing" -> "nh2/haskell-cpu-instruction-counter"
"nomeata/inspection-testing" -> "ezyang/compact"
"emacs-lsp/lsp-haskell" -> "jyp/dante"
"emacs-lsp/lsp-haskell" -> "alanz/haskell-lsp"
"NorfairKing/haskell-dangerous-functions" -> "NorfairKing/haskell-WAT"
"NorfairKing/haskell-dangerous-functions" -> "NorfairKing/syds-rules-for-sustainable-haskell"
"NorfairKing/haskell-dangerous-functions" -> "NorfairKing/sydtest"
"justinethier/husk-scheme" -> "mthom/shentong" ["e"=1]
"feuerbach/tasty" -> "hedgehogqa/haskell-hedgehog"
"feuerbach/tasty" -> "bos/criterion"
"feuerbach/tasty" -> "sdiehl/protolude"
"feuerbach/tasty" -> "nick8325/quickcheck"
"feuerbach/tasty" -> "jaspervdj/stylish-haskell"
"feuerbach/tasty" -> "alexwl/haskell-code-explorer"
"feuerbach/tasty" -> "fpco/stackage"
"feuerbach/tasty" -> "lspitzner/brittany"
"feuerbach/tasty" -> "ndmitchell/ghcid"
"feuerbach/tasty" -> "pcapriotti/optparse-applicative"
"feuerbach/tasty" -> "feuerbach/smallcheck"
"feuerbach/tasty" -> "mrkkrp/megaparsec"
"feuerbach/tasty" -> "sol/hpack"
"feuerbach/tasty" -> "kcsongor/generic-lens"
"feuerbach/tasty" -> "ucsd-progsys/liquidhaskell"
"xich/scotty" -> "Paczesiowa/hsenv"
"xich/scotty" -> "sebastiaanvisser/clay"
"xich/scotty" -> "evancz/Elm"
"xich/scotty" -> "lymar/hastache"
"xich/scotty" -> "meteficha/esqueleto"
"xich/scotty" -> "creswick/cabal-dev"
"xich/scotty" -> "chrisdone/hl"
"xich/scotty" -> "lpsmith/postgresql-simple"
"xich/scotty" -> "twittner/zeromq-haskell"
"xich/scotty" -> "faylang/fay"
"xich/scotty" -> "Paczesiowa/virthualenv"
"xich/scotty" -> "zalora/servant"
"disnet/contracts.coffee" -> "disnet/contracts.js"
"disnet/contracts.coffee" -> "pufuwozu/roy"
"sandwwraith/os2016-conspect" -> "artemZholus/matan"
"sandwwraith/os2016-conspect" -> "artemohanjanyan/tt-conspect"
"joelburget/react-haskell" -> "takeoutweight/shade"
"joelburget/react-haskell" -> "meiersi/blaze-react"
"joelburget/react-haskell" -> "boothead/oHm"
"joelburget/react-haskell" -> "valderman/haste-compiler"
"joelburget/react-haskell" -> "ocharles/Francium"
"Nadrieril/dhall-rust" -> "MonoidMusician/dhall-purescript"
"Nadrieril/dhall-rust" -> "dhall-mock/dhall-mock"
"Nadrieril/dhall-rust" -> "Gabriel439/dhall-manual"
"Nadrieril/dhall-rust" -> "FormationAI/dhall-bhat"
"Nadrieril/dhall-rust" -> "nmattia/naersk" ["e"=1]
"Nadrieril/dhall-rust" -> "EarnestResearch/dhall-packages"
"Gabriel439/Haskell-Annah-Library" -> "Gabriel439/Haskell-Morte-Library"
"commercialhaskell/jump" -> "agocorona/transient"
"ekmett/guanxi" -> "ekmett/coda"
"ekmett/guanxi" -> "i-am-tom/holmes"
"higherkindness/mu-haskell" -> "morpheusgraphql/morpheus-graphql"
"higherkindness/mu-haskell" -> "kowainik/stan"
"higherkindness/mu-haskell" -> "kowainik/summoner"
"higherkindness/mu-haskell" -> "fused-effects/fused-effects"
"higherkindness/mu-haskell" -> "well-typed/optics"
"higherkindness/mu-haskell" -> "visortelle/hackage-ui"
"higherkindness/mu-haskell" -> "hasura/eff"
"higherkindness/mu-haskell" -> "seek-oss/serverless-haskell"
"higherkindness/mu-haskell" -> "kowainik/relude"
"reflex-frp/reflex-examples" -> "reflex-frp/reflex-todomvc"
"dag/vim2hs" -> "eagletmt/ghcmod-vim"
"dag/vim2hs" -> "lukerandall/haskellmode-vim"
"dag/vim2hs" -> "ujihisa/neco-ghc"
"dag/vim2hs" -> "bitc/vim-hdevtools"
"dag/vim2hs" -> "eagletmt/neco-ghc"
"dag/vim2hs" -> "raichoo/haskell-vim"
"dag/vim2hs" -> "bitc/lushtags"
"dag/vim2hs" -> "begriffs/haskell-vim-now"
"dag/vim2hs" -> "bosu/hscope"
"dag/vim2hs" -> "kazu-yamamoto/ghc-mod"
"dag/vim2hs" -> "yesodweb/Shelly.hs"
"dag/vim2hs" -> "bitc/hdevtools"
"dag/vim2hs" -> "hvr/multi-ghc-travis"
"dag/vim2hs" -> "jejansse/Haskim"
"lukerandall/haskellmode-vim" -> "dag/vim2hs"
"lukerandall/haskellmode-vim" -> "ujihisa/neco-ghc"
"lukerandall/haskellmode-vim" -> "eagletmt/ghcmod-vim"
"lukerandall/haskellmode-vim" -> "pbrisbin/html-template-syntax"
"lukerandall/haskellmode-vim" -> "bitc/vim-hdevtools"
"michaelficarra/CoffeeScript2" -> "michaelficarra/coffee-of-my-dreams"
"michaelficarra/CoffeeScript2" -> "michaelficarra/cscodegen"
"michaelficarra/CoffeeScript2" -> "satyr/coco"
"rahulmutt/ghcvm" -> "agocorona/transient"
"rahulmutt/ghcvm" -> "HeinrichApfelmus/hyper-haskell"
"rahulmutt/ghcvm" -> "tweag/sparkle"
"rahulmutt/ghcvm" -> "kcsongor/generic-lens"
"rahulmutt/ghcvm" -> "nh2/call-haskell-from-anything"
"lpsmith/postgresql-simple" -> "hspec/hspec-wai"
"lpsmith/postgresql-simple" -> "meteficha/esqueleto"
"snapframework/snap-server" -> "snapframework/snap-core"
"snapframework/snap-server" -> "snapframework/heist"
"snapframework/snap-server" -> "snapframework/snap"
"snapframework/snap-server" -> "snapframework/snap-auth"
"snapframework/snap-server" -> "snapframework/xmlhtml"
"snapframework/snap-server" -> "snapframework/snap-website"
"snapframework/snap-server" -> "snapframework/io-streams"
"keera-studios/keera-hails" -> "ivanperez-keera/Yampa"
"bos/wreq" -> "bos/aeson"
"bos/wreq" -> "snoyberg/http-client"
"bos/wreq" -> "brendanhay/amazonka"
"bos/wreq" -> "mrkkrp/req"
"bos/wreq" -> "simonmar/async"
"bos/wreq" -> "agrafix/Spock"
"bos/wreq" -> "acowley/Frames"
"bos/wreq" -> "hspec/hspec"
"bos/wreq" -> "ekmett/lens"
"bos/wreq" -> "pcapriotti/optparse-applicative"
"bos/wreq" -> "simonmar/parconc-examples"
"bos/wreq" -> "bitemyapp/bloodhound"
"bos/wreq" -> "aloiscochard/codex"
"bos/wreq" -> "bos/configurator"
"bos/wreq" -> "bos/criterion"
"mezzohaskell/mezzohaskell" -> "creswick/cabal-dev"
"mezzohaskell/mezzohaskell" -> "meteficha/esqueleto"
"mezzohaskell/mezzohaskell" -> "yesodweb/Shelly.hs"
"1HaskellADay/1HAD" -> "gelisam/hawk"
"alanz/HaRe" -> "RefactoringTools/HaRe"
"alanz/HaRe" -> "chrisdone/ghci-ng"
"chrisdone/emacs-haskell-config" -> "jfeltz/dash-haskell"
"chrisdone/emacs-haskell-config" -> "serras/emacs-haskell-tutorial"
"chrisdone/emacs-haskell-config" -> "iquiw/company-ghc"
"pufuwozu/bilby.js" -> "mudge/pacta"
"pufuwozu/bilby.js" -> "pufuwozu/fantasy-land" ["e"=1]
"aloiscochard/codex" -> "MarcWeber/hasktags"
"aloiscochard/codex" -> "bitc/hdevtools"
"aloiscochard/codex" -> "dan-t/vim-hsimport"
"sdegutis/zephyros" -> "sdegutis/Phoenix"
"sdegutis/zephyros" -> "Sirupsen/localjob"
"ekmett/bound" -> "ekmett/contravariant"
"feuerbach/regex-applicative" -> "feuerbach/smallcheck"
"feuerbach/smallcheck" -> "feuerbach/regex-applicative"
"tibbe/unordered-containers" -> "haskell/containers"
"tibbe/unordered-containers" -> "bos/text"
"tweag/rules_haskell" -> "nh2/static-haskell-nix"
"unisonweb/platform" -> "rahulmutt/ghcvm"
"unisonweb/platform" -> "Gabriel439/Haskell-Morte-Library"
"unisonweb/platform" -> "Peaker/lamdu"
"unisonweb/platform" -> "xixixao/Shem"
"unisonweb/platform" -> "lamdu/lamdu" ["e"=1]
"unisonweb/platform" -> "nikita-volkov/record"
"unisonweb/platform" -> "non/cats" ["e"=1]
"unisonweb/platform" -> "paulp/psp-std" ["e"=1]
"unisonweb/platform" -> "breuleux/earl-grey"
"unisonweb/platform" -> "paulp/policy" ["e"=1]
"unisonweb/platform" -> "mikeizbicki/subhask"
"unisonweb/platform" -> "paf31/purescript-thermite" ["e"=1]
"AccelerateHS/accelerate-llvm" -> "AccelerateHS/accelerate-cuda"
"AccelerateHS/accelerate-llvm" -> "AccelerateHS/accelerate-examples"
"tzemanovic/haskell-yesod-realworld-example-app" -> "eckyputrady/haskell-scotty-realworld-example-app"
"JPMoresmau/BuildWrapper" -> "JPMoresmau/scion-class-browser"
"artemohanjanyan/tt-conspect" -> "sandwwraith/os2016-conspect"
"dwayne/haskell-programming" -> "abevoelker/haskellbook-solutions"
"dwayne/haskell-programming" -> "dmvianna/haskellbook"
"BartoszMilewski/DaoFP" -> "BartoszMilewski/Publications"
"tobbebex/GPipe-Core" -> "tobbebex/GPipe"
"tobbebex/GPipe-Core" -> "plredmond/GPipe-GLFW"
"tobbebex/GPipe-Core" -> "isovector/ecstasy"
"tobbebex/GPipe-Core" -> "jonascarpay/apecs"
"yesodweb/persistent" -> "bitemyapp/esqueleto"
"yesodweb/persistent" -> "yesodweb/wai"
"yesodweb/persistent" -> "yesodweb/yesod"
"yesodweb/persistent" -> "bos/aeson"
"yesodweb/persistent" -> "snoyberg/conduit"
"yesodweb/persistent" -> "sol/hpack"
"yesodweb/persistent" -> "simonmar/async"
"yesodweb/persistent" -> "haskell-servant/servant"
"yesodweb/persistent" -> "lykahb/groundhog"
"yesodweb/persistent" -> "jaspervdj/websockets"
"yesodweb/persistent" -> "yesodweb/yesod-cookbook"
"yesodweb/persistent" -> "commercialhaskell/stackage"
"yesodweb/persistent" -> "frasertweedale/hs-jose"
"yesodweb/persistent" -> "parsonsmatt/servant-persistent"
"yesodweb/persistent" -> "snoyberg/keter"
"madjestic/Haskell-OpenGL-Tutorial" -> "bergey/haskell-OpenGL-examples"
"madjestic/Haskell-OpenGL-Tutorial" -> "tobbebex/GPipe-Core"
"madjestic/Haskell-OpenGL-Tutorial" -> "ekmett/quine"
"madjestic/Haskell-OpenGL-Tutorial" -> "ekmett/gl"
"madjestic/Haskell-OpenGL-Tutorial" -> "dagit/nehe-tuts"
"haskell/ghcup" -> "Bodigrim/tasty-bench"
"imalsogreg/servant-reflex" -> "reflex-frp/reflex-dom-contrib"
"imalsogreg/servant-reflex" -> "ElvishJerricco/servant-router"
"acid-state/acid-state" -> "kcsongor/generic-lens"
"acid-state/acid-state" -> "acid-state/safecopy"
"acid-state/acid-state" -> "valderman/selda"
"acid-state/acid-state" -> "dmbarbour/haskell-vcache"
"acid-state/acid-state" -> "informatikr/hedis"
"acid-state/acid-state" -> "fumieval/extensible" ["e"=1]
"acid-state/acid-state" -> "nmattia/snack"
"commercialhaskell/haskelldocumentation" -> "Gabriel439/haskell-in-the-large"
"commercialhaskell/haskelldocumentation" -> "commercialhaskell/commercialhaskell"
"commercialhaskell/haskelldocumentation" -> "fpco/mezzohaskell"
"kqr/gists" -> "Holmusk/three-layer"
"kqr/gists" -> "benkolera/talk-stacking-your-monads"
"kqr/gists" -> "chemouna/HaskellResources"
"kqr/gists" -> "quchen/articles"
"kqr/gists" -> "jwbuurlage/category-theory-programmers"
"nikita-volkov/record" -> "chrisdone/lucid"
"nikita-volkov/record" -> "mstksg/auto"
"nikita-volkov/record" -> "agocorona/transient"
"nikita-volkov/record" -> "chrisdone/hindent"
"sviperll/ghcjs" -> "hamishmack/ghcjs"
"fjolnir/Tranquil" -> "fjolnir/HTTPKit"
"fjolnir/Tranquil" -> "fjolnir/xnomad"
"tomjaguarpaw/haskell-opaleye" -> "tathougies/beam"
"tomjaguarpaw/haskell-opaleye" -> "valderman/selda"
"tomjaguarpaw/haskell-opaleye" -> "haskell-servant/servant"
"tomjaguarpaw/haskell-opaleye" -> "nikita-volkov/hasql"
"tomjaguarpaw/haskell-opaleye" -> "parsonsmatt/servant-persistent"
"tomjaguarpaw/haskell-opaleye" -> "morphismtech/squeal"
"tomjaguarpaw/haskell-opaleye" -> "sol/hpack"
"tomjaguarpaw/haskell-opaleye" -> "bos/aeson"
"tomjaguarpaw/haskell-opaleye" -> "ndmitchell/ghcid"
"tomjaguarpaw/haskell-opaleye" -> "commercialhaskell/intero"
"tomjaguarpaw/haskell-opaleye" -> "agentm/project-m36"
"tomjaguarpaw/haskell-opaleye" -> "khibino/haskell-relational-record"
"tomjaguarpaw/haskell-opaleye" -> "chrisdone/lucid"
"tomjaguarpaw/haskell-opaleye" -> "lspitzner/brittany"
"tomjaguarpaw/haskell-opaleye" -> "hedgehogqa/haskell-hedgehog"
"haskell-tools/haskell-tools" -> "digital-asset/ghc-lib"
"ocharles/netwire-classics" -> "ocharles/ocharles.org.uk--Getting-Started-with-Netwire-and-SDL"
"fujimura/hi" -> "tfausak/haskeleton"
"fujimura/hi" -> "kazu-yamamoto/unit-test-example"
"fujimura/hi" -> "mgajda/json-autotype"
"kazu-yamamoto/mighttpd2" -> "kazu-yamamoto/wai-app-file-cgi"
"xmonad/xmonad-extras" -> "xmonad/xmonad-web"
"seek-oss/serverless-haskell" -> "theam/aws-lambda-haskell-runtime"
"bjpop/berp" -> "bjpop/blip"
"bjpop/berp" -> "bjpop/language-python"
"chrisdone/lucid" -> "sebastiaanvisser/clay"
"chrisdone/lucid" -> "jaspervdj/digestive-functors"
"chrisdone/lucid" -> "chrisdone/hindent"
"commercialhaskell/stack-ide" -> "lukexi/stack-ide-sublime"
"commercialhaskell/stack-ide" -> "fpco/ide-backend"
"FormationAI/dhall-bhat" -> "sellout/caterwaul"
"chrisdone/ghci-ng" -> "fpco/ide-backend"
"NorfairKing/intray" -> "NorfairKing/tickler"
"Paczesiowa/hsenv" -> "Paczesiowa/virthualenv"
"Paczesiowa/hsenv" -> "tmhedberg/hsenv"
"acowley/Frames" -> "VinylRecords/Vinyl"
"acowley/Frames" -> "bos/wreq"
"acowley/Frames" -> "tweag/HaskellR"
"jwiegley/hnix" -> "hercules-ci/hercules"
"pufuwozu/osxmonad" -> "fjolnir/spectacle"
"data61/lets-lens" -> "kowainik/hit-on"
"data61/lets-lens" -> "qfpl/applied-fp-course"
"fpco/ide-backend" -> "commercialhaskell/stack-ide"
"fpco/ide-backend" -> "fpco/stackage-server"
"fpco/ide-backend" -> "chrisdone/ghci-ng"
"fpco/ide-backend" -> "chrisdone/ide-backend-mode"
"ujihisa/neco-ghc" -> "eagletmt/ghcmod-vim"
"ujihisa/neco-ghc" -> "kana/vim-filetype-haskell"
"ujihisa/neco-ghc" -> "Shougo/vimproc" ["e"=1]
"ujihisa/neco-ghc" -> "bitc/lushtags"
"neurocyte/ghc-android" -> "neurocyte/android-haskell-activity"
"neurocyte/ghc-android" -> "sseefried/docker-build-ghc-android"
"neurocyte/ghc-android" -> "neurocyte/foreign-jni"
"neurocyte/ghc-android" -> "ghc-ios/ghc-ios-scripts"
"neurocyte/ghc-android" -> "sseefried/docker-epidemic-build-env"
"neurocyte/ghc-android" -> "wavewave/nix-build-ghc-android"
"eagletmt/neco-ghc" -> "eagletmt/ghcmod-vim"
"eagletmt/neco-ghc" -> "neovimhaskell/haskell-vim"
"eagletmt/neco-ghc" -> "dag/vim2hs"
"eagletmt/neco-ghc" -> "bitc/lushtags"
"eagletmt/neco-ghc" -> "bitc/vim-hdevtools"
"eagletmt/neco-ghc" -> "parsonsmatt/intero-neovim"
"eagletmt/neco-ghc" -> "Shougo/vimproc.vim" ["e"=1]
"eagletmt/neco-ghc" -> "DanielG/ghc-mod"
"eagletmt/neco-ghc" -> "lukerandall/haskellmode-vim"
"eagletmt/neco-ghc" -> "bitc/hdevtools"
"fjolnir/spectacle" -> "pufuwozu/osxmonad"
"fpco/mezzohaskell" -> "Gabriel439/haskell-in-the-large"
"GaloisInc/HaNS" -> "GaloisInc/halfs"
"sdegutis/Phoenix" -> "sdegutis/zephyros"
"sdegutis/Phoenix" -> "sdegutis/Hydra"
"re-xyr/cleff" -> "arybczak/effectful"
"MarcWeber/hasktags" -> "aloiscochard/codex"
"snapframework/io-streams" -> "afcowie/http-streams"
"mietek/haskell-on-heroku" -> "mietek/halcyon"
"mietek/haskell-on-heroku" -> "begriffs/heroku-buildpack-ghc"
"boothead/oHm" -> "ocharles/Francium"
"takeoutweight/shade" -> "joelburget/react-haskell"
"takeoutweight/shade" -> "takeoutweight/shade-todomvc"
"ekmett/linear-logic" -> "ekmett/parsnip"
"bos/statistics" -> "bos/text"
"bos/statistics" -> "albertoruiz/hmatrix"
"bos/statistics" -> "bos/criterion"
"fjolnir/HTTPKit" -> "fjolnir/Tranquil"
"alpmestan/ghc.nix" -> "nh2/hatrace"
"alpmestan/ghc.nix" -> "mpickering/ghc-artefact-nix"
"aristidb/aws" -> "brendanhay/amazonka"
"aristidb/aws" -> "simonmar/async"
"aristidb/aws" -> "informatikr/hedis"
"Gabriel439/Haskell-Dhall-Library" -> "Gabriel439/Haskell-Dhall-Nix-Library"
"AccelerateHS/accelerate-cuda" -> "AccelerateHS/accelerate-io"
"bos/configurator" -> "tibbe/ekg"
"bitc/vim-hdevtools" -> "bitc/hdevtools"
"bitc/vim-hdevtools" -> "eagletmt/ghcmod-vim"
"bitc/vim-hdevtools" -> "dag/vim2hs"
"bitc/vim-hdevtools" -> "hdevtools/hdevtools"
"snapframework/snap-website" -> "snapframework/snap-auth"
"snapframework/snap-website" -> "snapframework/snap-server"
"ekmett/machines" -> "ekmett/trifecta"
"ekmett/machines" -> "Gabriel439/Haskell-Pipes-Library"
"ekmett/machines" -> "ermine-language/ermine"
"ekmett/machines" -> "runarorama/scala-machines" ["e"=1]
"ekmett/machines" -> "ekmett/bound"
"ekmett/machines" -> "goldfirere/singletons"
"ekmett/machines" -> "ekmett/tables"
"ekmett/machines" -> "simonmar/async"
"ekmett/machines" -> "snoyberg/conduit"
"bos/pronk" -> "bos/configurator"
"RefactoringTools/HaRe" -> "alanz/HaRe"
"fpco/weigh" -> "fpco/store"
"EarnestResearch/dhall-packages" -> "justinwoo/easy-dhall-nix"
"snapframework/heist" -> "snapframework/xmlhtml"
"snapframework/heist" -> "snapframework/snap-server"
"snapframework/heist" -> "snapframework/snap-auth"
"xmonad/xmonad" ["l"="-8.163,12.149"]
"xmonad/xmonad-contrib" ["l"="-8.026,12.137"]
"jaor/xmobar" ["l"="-8.072,12.146"]
"haskell/haskell-language-server" ["l"="-8.227,12.071"]
"commercialhaskell/stack" ["l"="-8.326,12.148"]
"waymonad/waymonad" ["l"="-8.06,12.109"]
"ghc/ghc" ["l"="-8.353,12.171"]
"haskell/haskell-ide-engine" ["l"="-8.281,12.124"]
"awesomeWM/awesome" ["l"="-9.285,-20.151"]
"jtdaugherty/brick" ["l"="-8.191,12.102"]
"ndmitchell/hlint" ["l"="-8.227,12.157"]
"ekmett/lens" ["l"="-8.285,12.196"]
"jaspervdj/hakyll" ["l"="-8.307,12.178"]
"qtile/qtile" ["l"="-9.285,-20.215"]
"haskell/cabal" ["l"="-8.243,12.201"]
"haskell-servant/servant" ["l"="-8.236,12.145"]
"taffybar/taffybar" ["l"="-8.017,12.122"]
"xmonad/X11" ["l"="-7.939,12.133"]
"xmonad/xmonad-extras" ["l"="-7.905,12.139"]
"altercation/dotfiles-tilingwm" ["l"="-7.966,12.128"]
"cdepillabout/termonad" ["l"="-8.065,12.076"]
"mrkkrp/megaparsec" ["l"="-8.183,12.148"]
"polysemy-research/polysemy" ["l"="-8.159,12.068"]
"Ongy/waymonad" ["l"="-7.75,12.063"]
"travitch/taffybar" ["l"="-7.925,12.148"]
"david-janssen/kmonad" ["l"="-8.045,12.084"]
"haskell/vector" ["l"="-8.095,12.207"]
"bitemyapp/learnhaskell" ["l"="-8.393,12.043"]
"krispo/awesome-haskell" ["l"="-8.334,12.056"]
"NICTA/course" ["l"="-8.38,12.196"]
"sdiehl/write-you-a-haskell" ["l"="-8.361,12.092"]
"sdiehl/wiwinwlh" ["l"="-8.317,12.092"]
"facebook/Haxl" ["l"="-8.366,12.143"]
"caiorss/Functional-Programming" ["l"="-8.397,12.092"]
"Gabriel439/post-rfc" ["l"="-8.331,12.116"]
"purescript/purescript" ["l"="-8.421,12.109"]
"hmemcpy/milewski-ctfp-pdf" ["l"="-8.441,11.962"]
"data61/fp-course" ["l"="-8.279,12.009"]
"steshaw/plt" ["l"="-8.413,12.001"]
"kanaka/mal" ["l"="-8.073,13.616"]
"gibiansky/IHaskell" ["l"="-8.378,12.173"]
"yesodweb/yesod" ["l"="-8.329,12.19"]
"qfpl/applied-fp-course" ["l"="-8.212,11.982"]
"tonymorris/fp-course" ["l"="-8.249,11.933"]
"cohomolo-gy/haskell-resources" ["l"="-8.183,12.008"]
"i-am-tom/haskell-exercises" ["l"="-8.168,12.012"]
"Gabriel439/haskell-nix" ["l"="-8.171,12.093"]
"google/haskell-trainings" ["l"="-8.23,12.001"]
"graninas/software-design-in-haskell" ["l"="-8.19,11.98"]
"tssm/up-to-date-real-world-haskell" ["l"="-8.174,11.992"]
"jagajaga/FP-Course-ITMO" ["l"="-8.254,11.975"]
"hzlmn/haskell-must-watch" ["l"="-8.236,12.037"]
"dmjio/miso" ["l"="-8.261,12.097"]
"tensorflow/haskell" ["l"="-8.301,12.144"]
"uhub/awesome-haskell" ["l"="-8.381,11.962"]
"Dobiasd/programming-language-subreddits-and-their-choice-of-words" ["l"="-8.595,12.086"]
"Dobiasd/articles" ["l"="-8.457,12.128"]
"MurtzaM/Developer-Conferences" ["l"="30.971,-21.372"]
"ukupat/tabs-or-spaces" ["l"="-8.691,12.054"]
"soupi/haskell-study-plan" ["l"="-8.186,11.967"]
"haskell-beginners-2022/course-plan" ["l"="-8.163,11.916"]
"soupi/learn-haskell-blog-generator" ["l"="-8.187,11.893"]
"erkmos/haskell-companies" ["l"="-8.167,12.031"]
"alpacaaa/zero-bullshit-haskell" ["l"="-8.155,11.963"]
"kowainik/learn4haskell" ["l"="-8.172,11.954"]
"kowainik/stan" ["l"="-8.132,12.037"]
"thma/LtuPatternFactory" ["l"="-8.16,11.982"]
"fjvallarino/monomer" ["l"="-8.125,12.023"]
"hablapps/DontFearTheProfunctorOptics" ["l"="-8.131,11.999"]
"fused-effects/fused-effects" ["l"="-8.124,12.075"]
"isovector/polysemy" ["l"="-8.077,12.118"]
"ChrisPenner/comonads-by-example" ["l"="-8.089,11.906"]
"isovector/thinking-with-types" ["l"="-8.111,12.064"]
"ghc-proposals/ghc-proposals" ["l"="-8.144,12.127"]
"ndmitchell/tagsoup" ["l"="-7.973,12.411"]
"fimad/scalpel" ["l"="-8.03,12.357"]
"github/semantic" ["l"="-8.448,12.033"]
"tree-sitter/tree-sitter" ["l"="-10.935,-20.763"]
"unisonweb/unison" ["l"="-9.243,13.61"]
"idris-lang/Idris-dev" ["l"="-8.4,12.137"]
"dhall-lang/dhall-lang" ["l"="-8.29,12.052"]
"agda/agda" ["l"="-9.334,13.485"]
"tweag/asterius" ["l"="-8.249,12.081"]
"coq/coq" ["l"="-9.437,13.471"]
"plfa/plfa.github.io" ["l"="-9.298,13.469"]
"fptudelft/FP101x-Content-2015" ["l"="-8.493,12.216"]
"fptudelft/learnhaskell" ["l"="-8.544,12.229"]
"fptudelft/FP101x-Content" ["l"="-8.402,12.225"]
"ndmitchell/ghcid" ["l"="-8.202,12.131"]
"ghcjs/ghcjs" ["l"="-8.331,12.167"]
"rikvdkleij/intellij-haskell" ["l"="-8.281,12.171"]
"digital-asset/ghcide" ["l"="-8.141,12.073"]
"commercialhaskell/intero" ["l"="-8.223,12.204"]
"typelevel/cats" ["l"="9.879,24.847"]
"fantasyland/fantasy-land" ["l"="27.751,-28.711"]
"fpinscala/fpinscala" ["l"="9.941,24.812"]
"lampepfl/dotty" ["l"="9.904,24.831"]
"hemanth/functional-programming-jargon" ["l"="28.214,-19.451"]
"lauris/awesome-scala" ["l"="9.943,24.769"]
"gcanti/fp-ts" ["l"="28.903,-27.102"]
"tweag/ormolu" ["l"="-8.151,12.089"]
"lspitzner/brittany" ["l"="-8.17,12.135"]
"jaspervdj/stylish-haskell" ["l"="-8.258,12.214"]
"sol/hpack" ["l"="-8.171,12.167"]
"hedgehogqa/haskell-hedgehog" ["l"="-8.147,12.146"]
"pcapriotti/optparse-applicative" ["l"="-8.212,12.191"]
"kcsongor/generic-lens" ["l"="-8.089,12.152"]
"ndmitchell/hoogle" ["l"="-8.196,12.183"]
"carymrobbins/intellij-haskforce" ["l"="-8.282,12.297"]
"typelead/eta" ["l"="-8.38,12.118"]
"bos/aeson" ["l"="-8.231,12.23"]
"SublimeHaskell/SublimeHaskell" ["l"="-8.295,12.252"]
"leksah/leksah" ["l"="-8.335,12.229"]
"Holmusk/three-layer" ["l"="-8.131,11.983"]
"composewell/streamly" ["l"="-8.139,12.105"]
"commercialhaskell/rio" ["l"="-8.163,12.115"]
"haskell/ide" ["l"="-8.089,12.055"]
"hasura/eff" ["l"="-8.104,12.048"]
"liuxinyu95/AlgoXY" ["l"="-8.44,11.849"]
"liuxinyu95/unplugged" ["l"="-8.314,11.941"]
"DeathKing/Learning-SICP" ["l"="6.698,17.193"]
"cisco/ChezScheme" ["l"="-8.001,13.58"]
"soulmachine/leetcode" ["l"="5.798,16.057"]
"qyuhen/book" ["l"="-12.629,1.115"]
"ty4z2008/Qix" ["l"="23.792,31.27"]
"jeffgerickson/algorithms" ["l"="24.003,30.928"]
"julycoding/The-Art-Of-Programming-By-July" ["l"="6.296,17.591"]
"aosabook/500lines" ["l"="15.862,6.08"]
"haoel/leetcode" ["l"="5.789,16.116"]
"yangyangwithgnu/use_vim_as_ide" ["l"="-10.691,-22.686"]
"sarabander/sicp-pdf" ["l"="-8.008,13.678"]
"redguardtoo/mastering-emacs-in-one-year-guide" ["l"="-8.567,-21.963"]
"kevin-wayne/algs4" ["l"="5.628,16.179"]
"incoherentsoftware/defect-process" ["l"="-7.961,12.531"]
"SimulaVR/godot-haskell" ["l"="-7.99,12.494"]
"SodiumFRP/sodium" ["l"="-8.14,12.503"]
"SodiumFRP/sodium-typescript" ["l"="-8.128,12.588"]
"gelisam/frp-zoo" ["l"="-8.144,12.296"]
"SodiumFRP/sodium-cxx" ["l"="-8.136,12.561"]
"HeinrichApfelmus/reactive-banana" ["l"="-8.186,12.335"]
"Reactive-Extensions/RxCpp" ["l"="-11.576,21.854"]
"lihaoyi/scala.rx" ["l"="9.666,24.794"]
"slamdata/purescript-halogen" ["l"="-7.306,11.733"]
"digital-asset/daml" ["l"="-8.022,11.902"]
"digital-asset/canton" ["l"="-8.01,11.843"]
"digital-asset/ex-models" ["l"="-7.99,11.843"]
"digital-asset/ghc-lib" ["l"="-7.982,11.963"]
"digital-asset/daml-on-fabric" ["l"="-7.992,11.862"]
"hacera/daml-on-fabric" ["l"="-8.008,11.86"]
"PegaSysEng/orion" ["l"="46.865,-24.863"]
"hyperledger/fabric-chaincode-evm" ["l"="44.711,-24.639"]
"typelevel/cats-tagless" ["l"="9.749,25.028"]
"vmware/concord-bft" ["l"="45.433,-25.267"]
"typelevel/scalacheck" ["l"="9.827,25.023"]
"hyperledger/besu" ["l"="46.8,-25.145"]
"begriffs/haskell-vim-now" ["l"="-8.352,12.209"]
"eagletmt/ghcmod-vim" ["l"="-8.373,12.277"]
"neovimhaskell/haskell-vim" ["l"="-8.38,12.221"]
"dag/vim2hs" ["l"="-8.396,12.315"]
"mikeizbicki/HLearn" ["l"="-8.323,12.245"]
"tibbe/haskell-style-guide" ["l"="-8.301,12.207"]
"Gabriel439/Haskell-Turtle-Library" ["l"="-8.242,12.184"]
"yi-editor/yi" ["l"="-8.318,12.222"]
"valderman/haste-compiler" ["l"="-8.353,12.25"]
"faylang/fay" ["l"="-8.346,12.275"]
"reflex-frp/reflex" ["l"="-8.222,12.097"]
"sdiehl/kaleidoscope" ["l"="-8.299,12.116"]
"liskin/dotfiles" ["l"="-7.943,12.115"]
"pjones/xmonadrc" ["l"="-7.874,12.115"]
"IvanMalison/dotfiles" ["l"="-7.915,12.122"]
"vicfryzel/xmonad-config" ["l"="-7.957,12.179"]
"domenkozar/hie-nix" ["l"="-7.964,12.06"]
"fosskers/aura" ["l"="-8.125,12.12"]
"Morganamilo/paru" ["l"="-9.208,-20.175"]
"kowainik/relude" ["l"="-8.137,12.085"]
"actionless/pikaur" ["l"="-8.934,-20.083"]
"chaotic-aur/packages" ["l"="-7.974,12.031"]
"hspec/hspec" ["l"="-8.183,12.179"]
"snoyberg/conduit" ["l"="-8.208,12.231"]
"digitallyinduced/ihp" ["l"="-8.267,12.033"]
"redwoodjs/redwood" ["l"="26.574,-25.845"]
"obsidiansystems/obelisk" ["l"="-8.19,12.076"]
"gleam-lang/gleam" ["l"="34.726,-26.759"]
"pufuwozu/roy" ["l"="-8.546,12.346"]
"pufuwozu/bilby.js" ["l"="-8.646,12.39"]
"chrisdone/fay" ["l"="-8.612,12.373"]
"disnet/contracts.coffee" ["l"="-8.626,12.339"]
"evancz/Elm" ["l"="-8.372,12.324"]
"mezzohaskell/mezzohaskell" ["l"="-8.402,12.371"]
"satyr/coco" ["l"="-8.635,12.286"]
"frenchy64/typed-clojure" ["l"="-7.398,14.823"]
"tolmasky/language" ["l"="11.42,-31.873"]
"raimohanska/bacon.js" ["l"="11.416,-31.926"]
"paf31/purescript" ["l"="-8.422,12.399"]
"graydon/rust" ["l"="-11.43,22.733"]
"Constellation/escodegen" ["l"="11.515,-31.977"]
"djspiewak/anti-xml" ["l"="9.736,24.522"]
"rsms/move" ["l"="-8.723,12.408"]
"NorfairKing/syds-rules-for-sustainable-haskell" ["l"="-7.978,11.79"]
"NorfairKing/haskell-WAT" ["l"="-7.992,11.783"]
"NorfairKing/haskell-dangerous-functions" ["l"="-8.005,11.821"]
"elm-lang/elm-compiler" ["l"="-7.844,10.794"]
"elm/compiler" ["l"="-7.873,10.677"]
"Frege/frege" ["l"="-8.438,12.162"]
"purescript/documentation" ["l"="-7.272,11.714"]
"system-f/fp-course" ["l"="-8.204,11.953"]
"bitemyapp/fp-course" ["l"="-8.258,11.954"]
"tweag/awesome-learning-haskell" ["l"="-8.171,11.878"]
"clash-lang/clash-compiler" ["l"="-8.081,12.035"]
"B-Lang-org/bsc" ["l"="-9.567,46.608"]
"grin-compiler/grin" ["l"="-9.215,13.518"]
"AndrasKovacs/smalltt" ["l"="-9.224,13.47"]
"SpinalHDL/SpinalHDL" ["l"="-9.687,46.567"]
"llvm-hs/llvm-hs" ["l"="-8.176,12.059"]
"LeventErkok/sbv" ["l"="-8.051,12.126"]
"granule-project/granule" ["l"="-9.218,13.487"]
"ollef/sixten" ["l"="-9.196,13.502"]
"edwinb/Idris2" ["l"="-9.24,13.476"]
"facebookincubator/retrie" ["l"="-8.119,12.054"]
"agentm/project-m36" ["l"="-8.12,12.149"]
"idris-lang/Idris2" ["l"="-9.262,13.535"]
"edwinb/Blodwen" ["l"="-9.2,13.454"]
"FStarLang/FStar" ["l"="-9.448,13.501"]
"ucsd-progsys/liquidhaskell" ["l"="-8.186,12.124"]
"jaspervdj/patat" ["l"="-8.204,12.048"]
"visit1985/mdp" ["l"="-12.091,-20.399"]
"kowainik/summoner" ["l"="-8.154,12.052"]
"smallhadroncollider/taskell" ["l"="-8.206,12.02"]
"quchen/articles" ["l"="-8.227,12.124"]
"sebastiaanvisser/clay" ["l"="-8.259,12.387"]
"chrisdone/lucid" ["l"="-8.218,12.362"]
"tibbe/cassava" ["l"="-8.261,12.492"]
"bodil/pulp" ["l"="-7.361,11.727"]
"xich/scotty" ["l"="-8.341,12.409"]
"Gabriel439/Haskell-Pipes-Library" ["l"="-8.223,12.303"]
"jaspervdj/blaze-html" ["l"="-8.196,12.399"]
"agocorona/MFlow" ["l"="-8.283,12.495"]
"sol/reserve" ["l"="-8.203,12.417"]
"foxsen/archbase" ["l"="6.829,17.193"]
"Coq-zh/SF-zh" ["l"="-7.844,13.802"]
"spring2go/cs_study_plan" ["l"="6.791,17.156"]
"BartoszMilewski/Publications" ["l"="-8.222,11.949"]
"YatSenOS/YatSenOS-Tutorial-Volume-1" ["l"="27.347,29.932"]
"winitzki/sofp" ["l"="9.875,24.973"]
"missing-semester-cn/missing-semester-cn.github.io" ["l"="6.653,17.149"]
"google/proto-lens" ["l"="-7.992,12.243"]
"grpc/grpc-haskell" ["l"="-7.895,12.296"]
"lehins/massiv" ["l"="-8.117,12.17"]
"awakesecurity/gRPC-haskell" ["l"="-7.877,12.286"]
"Soostone/katip" ["l"="-8.089,12.26"]
"nikita-volkov/hasql" ["l"="-8.132,12.2"]
"brendanhay/gogol" ["l"="-8.104,12.235"]
"awakesecurity/proto3-suite" ["l"="-7.89,12.271"]
"Gabriel439/grace" ["l"="-7.905,11.92"]
"awakesecurity/spectacle" ["l"="-7.838,11.877"]
"arybczak/effectful" ["l"="-7.949,11.921"]
"chshersh/dr-cabal" ["l"="-7.97,11.848"]
"Bodigrim/tasty-bench" ["l"="-7.812,11.856"]
"haskell-beginners-2022/exercises" ["l"="-8.137,11.862"]
"chshersh/iris" ["l"="-8.075,11.827"]
"dnikolovv/practical-haskell" ["l"="-8.162,11.821"]
"willbasky/Awesome-list-of-Haskell-mentors" ["l"="-8.143,11.897"]
"eagletmt/neco-ghc" ["l"="-8.397,12.284"]
"parsonsmatt/intero-neovim" ["l"="-8.409,12.245"]
"itchyny/vim-haskell-indent" ["l"="-8.493,12.192"]
"bitc/vim-hdevtools" ["l"="-8.424,12.285"]
"neovimhaskell/nvim-hs" ["l"="-8.468,12.254"]
"hdevtools/hdevtools" ["l"="-8.452,12.246"]
"neovimhaskell/neovim-ghcmod" ["l"="-8.441,12.23"]
"alx741/vim-hindent" ["l"="-8.464,12.221"]
"data61/lets-lens" ["l"="-8.208,11.885"]
"JordanMartinez/learn-halogen" ["l"="-7.239,11.691"]
"sjsyrek/haskell-study-startup" ["l"="-7.946,12.161"]
"haskell-learning-group/haskell-learning-group" ["l"="-7.942,12.199"]
"ennocramer/floskell" ["l"="-7.885,12.052"]
"wasp-lang/wasp" ["l"="-8.278,11.897"]
"NangoHQ/nango" ["l"="34.678,-28.372"]
"alephjs/aleph.js" ["l"="26.924,-28.309"]
"triggerdotdev/trigger.dev" ["l"="34.624,-28.356"]
"blitz-js/blitz" ["l"="26.371,-25.89"]
"svix/svix-webhooks" ["l"="34.615,-28.46"]
"tamagui/tamagui" ["l"="24.562,-29.211"]
"koskimas/kysely" ["l"="29.191,-27.228"]
"tremorlabs/tremor" ["l"="29.44,-27.198"]
"getlago/lago" ["l"="34.596,-28.38"]
"exhibitionist-digital/ultra" ["l"="26.936,-28.257"]
"mint-lang/mint" ["l"="9.79,-29.436"]
"haskell/hackage-server" ["l"="-8.162,12.226"]
"haskell/haskell-mode" ["l"="-8.29,12.222"]
"haskell/haddock" ["l"="-8.143,12.191"]
"haskell/haskell-platform" ["l"="-8.167,12.25"]
"fpco/stackage" ["l"="-8.206,12.259"]
"feuerbach/tasty" ["l"="-8.176,12.201"]
"commercialhaskell/hindent" ["l"="-8.354,12.119"]
"chrisdone/structured-haskell-mode" ["l"="-8.285,12.281"]
"tomjaguarpaw/haskell-opaleye" ["l"="-8.184,12.222"]
"ndmitchell/shake" ["l"="-8.254,12.233"]
"GaloisInc/HaLVM" ["l"="-8.313,12.262"]
"snowleopard/hadrian" ["l"="-8.354,12.307"]
"hvr/multi-ghc-travis" ["l"="-8.249,12.262"]
"snowleopard/alga" ["l"="-8.075,12.166"]
"snowleopard/alga-paper" ["l"="-7.933,12.186"]
"antalsz/hs-to-coq" ["l"="-9.492,13.413"]
"HeinrichApfelmus/hyper-haskell" ["l"="-8.144,12.276"]
"HuwCampbell/grenade" ["l"="-8.211,12.173"]
"haskell-nix/hnix" ["l"="-8.097,12.09"]
"haskell-foundation/foundation" ["l"="-8.162,12.196"]
"snowleopard/selective" ["l"="-7.913,12.191"]
"ajtulloch/deeplearning-hs" ["l"="-8.394,12.435"]
"ajtulloch/haskell-ml" ["l"="-8.42,12.493"]
"informatikr/hedis" ["l"="-8.164,12.289"]
"simonmar/async" ["l"="-8.171,12.276"]
"jaspervdj/websockets" ["l"="-8.18,12.262"]
"snoyberg/http-client" ["l"="-8.137,12.259"]
"acid-state/acid-state" ["l"="-8.107,12.258"]
"mrkkrp/req" ["l"="-8.116,12.212"]
"lpsmith/postgresql-simple" ["l"="-8.295,12.452"]
"hreinhardt/amqp" ["l"="-8.152,12.366"]
"aristidb/aws" ["l"="-8.155,12.267"]
"bos/attoparsec" ["l"="-8.184,12.28"]
"frasertweedale/hs-jose" ["l"="-8.15,12.247"]
"yesodweb/wai" ["l"="-8.196,12.246"]
"haskell/ThreadScope" ["l"="-8.133,12.332"]
"tibbe/ekg" ["l"="-8.218,12.332"]
"serras/emacs-haskell-tutorial" ["l"="-8.278,12.241"]
"scotty-web/scotty" ["l"="-8.266,12.191"]
"luna/enso" ["l"="-8.587,12.008"]
"luna/hiring" ["l"="-8.622,11.996"]
"luna/ide" ["l"="-8.634,11.979"]
"mvoidex/hsdev" ["l"="-8.377,12.367"]
"kazu-yamamoto/ghc-mod" ["l"="-8.299,12.301"]
"bitc/hdevtools" ["l"="-8.41,12.303"]
"creswick/cabal-dev" ["l"="-8.372,12.39"]
"Paczesiowa/virthualenv" ["l"="-8.372,12.421"]
"vincenthz/hs-tls" ["l"="-8.184,12.307"]
"haskell/network" ["l"="-8.108,12.29"]
"bitemyapp/bloodhound" ["l"="-8.214,12.288"]
"haskell-distributed/distributed-process" ["l"="-8.251,12.286"]
"kazu-yamamoto/logger" ["l"="-8.129,12.306"]
"snoyberg/keter" ["l"="-8.203,12.309"]
"facundoolano/advenjure" ["l"="-8.032,12.391"]
"LambdaHack/LambdaHack" ["l"="-8.1,12.326"]
"GothenburgBitFactory/taskwarrior" ["l"="-11.746,-21.481"]
"kdheepak/taskwarrior-tui" ["l"="-11.774,-21.456"]
"coderofsalvation/kanban.bash" ["l"="-8.236,11.887"]
"tools-life/taskwiki" ["l"="-11.808,-21.455"]
"pimutils/khal" ["l"="-8.91,-20.339"]
"byorgey/swarm" ["l"="-8.109,12.014"]
"tweag/linear-base" ["l"="-8.083,12.089"]
"reflex-frp/reflex-platform" ["l"="-8.206,12.065"]
"thomashoneyman/purescript-halogen-realworld" ["l"="-7.254,11.73"]
"adamwulf/app-launch-guide" ["l"="10.193,-33.702"]
"DrBoolean/mostly-adequate-guide" ["l"="27.981,-19.144"]
"drKraken/haskell-must-watch" ["l"="-8.38,12.256"]
"Atsky/haskell-idea-plugin" ["l"="-8.315,12.365"]
"rahulmutt/ghcvm" ["l"="-8.15,12.314"]
"JPMoresmau/eclipsefp" ["l"="-8.293,12.386"]
"khibino/haskell-relational-record" ["l"="-8.188,12.379"]
"rainbyte/haskell-ide-chart" ["l"="-8.348,12.45"]
"silkapp/rest" ["l"="-8.27,12.362"]
"nikita-volkov/record" ["l"="-8.24,12.391"]
"nh2/call-haskell-from-anything" ["l"="-7.997,12.324"]
"nh2/haskell-from-python" ["l"="-7.941,12.367"]
"mrkgnao/silica" ["l"="-8,12.201"]
"ndmitchell/debug" ["l"="-7.929,12.391"]
"fpco/inline-c" ["l"="-7.902,12.407"]
"haskell/bytestring" ["l"="-8.111,12.205"]
"haskell/containers" ["l"="-8.116,12.226"]
"haskell/HTTP" ["l"="-8.005,12.384"]
"haskell/process" ["l"="-8.071,12.222"]
"haskell/time" ["l"="-8.065,12.238"]
"tibbe/unordered-containers" ["l"="-8.123,12.288"]
"bitemyapp/esqueleto" ["l"="-8.162,12.182"]
"dhall-lang/dhall-haskell" ["l"="-8.137,12.058"]
"dhall-lang/dhall-kubernetes" ["l"="-8.109,11.965"]
"jyp/dante" ["l"="-8.133,12.137"]
"knupfer/haskell-emacs" ["l"="-8.231,12.247"]
"nmattia/snack" ["l"="-8.077,12.102"]
"emacs-lsp/lsp-haskell" ["l"="-7.968,12.08"]
"alexwl/haskell-code-explorer" ["l"="-8.095,12.111"]
"nh2/static-haskell-nix" ["l"="-8.076,12.064"]
"input-output-hk/haskell.nix" ["l"="-8.115,12.082"]
"NixOS/cabal2nix" ["l"="-8.108,12.122"]
"clutchski/coffeelint" ["l"="21.143,1.524"]
"rodjek/puppet-lint" ["l"="21.157,1.375"]
"L-as/waymonad" ["l"="-7.956,12.093"]
"inclement/vivarium" ["l"="-9.412,-19.864"]
"swaywm/wlroots" ["l"="-9.281,-19.941"]
"emersion/grim" ["l"="-9.311,-19.947"]
"way-cooler/way-cooler" ["l"="-9.2,-19.984"]
"rycee/home-manager" ["l"="-8.417,11.275"]
"hasktorch/hasktorch" ["l"="-8.21,12.11"]
"AccelerateHS/accelerate" ["l"="-8.263,12.165"]
"valderman/selda" ["l"="-8.093,12.182"]
"tweag/HaskellR" ["l"="-8.218,12.264"]
"transient-haskell/transient" ["l"="-8.158,12.208"]
"neovimhaskell/nvim-hs-contrib" ["l"="-8.509,12.262"]
"MarcWeber/hasktags" ["l"="-8.459,12.305"]
"yesodweb/Shelly.hs" ["l"="-8.321,12.335"]
"chrisdone/ghci-ng" ["l"="-8.358,12.426"]
"bos/statistics" ["l"="-8.227,12.35"]
"Paczesiowa/hsenv" ["l"="-8.376,12.447"]
"chrisdone/shell-conduit" ["l"="-8.388,12.4"]
"milessabin/shapeless" ["l"="9.816,24.785"]
"scalaz/scalaz" ["l"="9.872,24.733"]
"scala-native/scala-native" ["l"="9.86,24.82"]
"agda/agda-stdlib" ["l"="-9.288,13.428"]
"goldfirere/singletons" ["l"="-8.103,12.17"]
"lukexi/halive" ["l"="-8.164,12.348"]
"bos/criterion" ["l"="-8.194,12.267"]
"bos/text" ["l"="-8.147,12.346"]
"ekmett/trifecta" ["l"="-8.116,12.394"]
"haskell/text" ["l"="-8.091,12.166"]
"mateogianolio/sshync" ["l"="-24.789,23.184"]
"ChrisPenner/rasa" ["l"="-8.132,12.216"]
"haskus/haskus-system" ["l"="-8.056,12.293"]
"ajnsit/concur" ["l"="-8.012,12.106"]
"ChrisPenner/eve" ["l"="-8.038,12.301"]
"chrisdone/hindent" ["l"="-8.259,12.322"]
"fourmolu/fourmolu" ["l"="-7.998,12.123"]
"NorfairKing/autodocodec" ["l"="-7.894,12.106"]
"UnkindPartition/tasty" ["l"="-7.988,12.112"]
"haskell/aeson" ["l"="-8.071,12.129"]
"haskell/stylish-haskell" ["l"="-8.004,12.146"]
"haskell/vscode-haskell" ["l"="-8.071,12.048"]
"haskell/ghcup-hs" ["l"="-7.881,12.148"]
"JordanMartinez/purescript-jordans-reference" ["l"="-7.236,11.737"]
"jtdaugherty/vty" ["l"="-8.146,12.014"]
"well-typed/optics" ["l"="-8.107,12.102"]
"haskell/mtl" ["l"="-8.109,12.156"]
"tweag/capability" ["l"="-8.092,12.124"]
"Lemmih/reanimate" ["l"="-8.061,12.175"]
"ndmitchell/weeder" ["l"="-8.037,12.03"]
"Copilot-Language/copilot" ["l"="-8.097,11.987"]
"nasa/ogma" ["l"="-8.04,11.862"]
"morphismtech/squeal" ["l"="-8.101,12.146"]
"ajtulloch/dnngraph" ["l"="-8.321,12.313"]
"mikeizbicki/subhask" ["l"="-8.232,12.32"]
"twitter/torch-autograd" ["l"="26.939,34.298"]
"jbarrow/LambdaNet" ["l"="-8.434,12.369"]
"jcjohnson/cnn-vis" ["l"="33.602,32.314"]
"ollef/Earley" ["l"="-9.135,13.448"]
"facebook/fb-caffe-exts" ["l"="26.89,34.187"]
"Yangqing/caffe2" ["l"="26.918,34.16"]
"ekmett/ad" ["l"="-8.258,12.352"]
"joschu/cgt" ["l"="27.002,34.183"]
"agocorona/transient" ["l"="-8.203,12.375"]
"google-research/dex-lang" ["l"="23.482,33.812"]
"austinvhuang/awesome-haskell-deep-learning" ["l"="-8.255,12.112"]
"mstksg/backprop" ["l"="-8.242,12.221"]
"exercism/haskell" ["l"="-8.235,11.971"]
"jwbuurlage/category-theory-programmers" ["l"="-8.087,12.135"]
"jozefg/learn-tt" ["l"="-9.307,13.491"]
"aalhour/awesome-compilers" ["l"="-13.778,17.431"]
"tomprimozic/type-systems" ["l"="-9.301,13.567"]
"andrejbauer/plzoo" ["l"="-9.286,13.513"]
"haskell-unordered-containers/unordered-containers" ["l"="-8.042,12.162"]
"haskell/lsp" ["l"="-7.992,12.073"]
"tdietert/nanocoin" ["l"="-7.992,12.272"]
"aviaviavi/legion" ["l"="-8.028,12.281"]
"haskoin/haskoin" ["l"="-7.996,12.35"]
"adjoint-io/nanochain" ["l"="-7.895,12.339"]
"sdiehl/protolude" ["l"="-8.089,12.224"]
"haskell-wasm/wasm" ["l"="-7.811,12.328"]
"adjoint-io/uplink" ["l"="-7.913,12.362"]
"adjoint-io/merkle-tree" ["l"="-7.914,12.333"]
"alexmingoia/purescript-pux" ["l"="-7.346,11.743"]
"chrisdone/wish" ["l"="-8.025,12.195"]
"jamesob/tinychain" ["l"="28.692,-19.118"]
"lettier/gifcurry" ["l"="-8.18,12.038"]
"lettier/movie-monad" ["l"="-8.215,11.914"]
"onmyway133/GifCapture" ["l"="-8.219,11.844"]
"quchen/prettyprinter" ["l"="-8.08,12.188"]
"rgleichman/glance" ["l"="-8.084,12.241"]
"jliljebl/flowblade" ["l"="-13.471,27.403"]
"yesodweb/persistent" ["l"="-8.208,12.213"]
"chrisdone/haskell-emacs" ["l"="-8.39,12.386"]
"pheaver/haskell-mode" ["l"="-8.436,12.426"]
"chrisdone/hell" ["l"="-8.282,12.324"]
"mbuzdalov/latex-styles" ["l"="-8.281,11.851"]
"volhovM/study-notes" ["l"="-8.273,11.87"]
"artemohanjanyan/tt-conspect" ["l"="-8.29,11.862"]
"ruHaskell/ruhaskell" ["l"="9.106,25.607"]
"serokell/importify" ["l"="-8.311,11.883"]
"steshaw/plt-study" ["l"="-8.425,12.264"]
"yallop/popl2015-papers" ["l"="-12.12,-18.822"]
"cdepillabout/pretty-simple" ["l"="-8.093,12.003"]
"lazamar/haskell-docs-cli" ["l"="-7.966,12.009"]
"owickstrom/gi-gtk-declarative" ["l"="-7.989,12.016"]
"haskell-gi/haskell-gi" ["l"="-7.926,11.971"]
"natefaubion/purescript-routing-duplex" ["l"="-7.224,11.776"]
"owickstrom/komposition" ["l"="-8,12.092"]
"chrisdone/emacs-haskell-config" ["l"="-8.338,12.302"]
"iquiw/company-ghc" ["l"="-8.305,12.322"]
"JakeWheat/intro_to_parsing" ["l"="-8.298,12.237"]
"fumieval/deriving-aeson" ["l"="-8.025,12.098"]
"gelisam/typelevel-rewrite-rules" ["l"="-7.937,12.065"]
"nmattia/niv" ["l"="-8.449,11.251"]
"target/lorri" ["l"="-8.448,11.272"]
"cachix/cachix" ["l"="-8.486,11.284"]
"alpmestan/ghc.nix" ["l"="-8.016,12.071"]
"input-output-hk/nix-tools" ["l"="-8.055,11.971"]
"matthewbauer/nix-bundle" ["l"="-8.5,11.281"]
"siers/nix-gitignore" ["l"="-7.95,11.962"]
"hercules-ci/gitignore" ["l"="-7.869,11.87"]
"simonmar/parconc-examples" ["l"="-8.171,12.316"]
"bos/wreq" ["l"="-8.196,12.288"]
"fpco/unliftio" ["l"="-8.127,12.353"]
"simonmar/par-tutorial" ["l"="-8.337,12.375"]
"pepeiborra/hls-tutorial" ["l"="-8.113,12.132"]
"luna/luna" ["l"="-8.447,12.075"]
"luna/luna-studio" ["l"="-8.55,12.016"]
"witheve/Eve" ["l"="25.614,-27.126"]
"haskell-perf/checklist" ["l"="-8.119,12.099"]
"agrafix/Spock" ["l"="-8.235,12.272"]
"ItayGarin/ktrl" ["l"="-11.494,-20.656"]
"davidphilipbarr/36keys" ["l"="-37.894,42.332"]
"nrdxp/nixflk" ["l"="-8.514,11.284"]
"manna-harbour/miryoku" ["l"="-37.91,42.325"]
"nix-community/NUR" ["l"="-8.467,11.26"]
"reanimate/reanimate" ["l"="-8.147,12.035"]
"Wikunia/Javis.jl" ["l"="17.217,39.005"]
"haskell/actions" ["l"="-8.02,12.084"]
"Matheart/manim-physics" ["l"="28.147,-17.905"]
"mpickering/hie-bios" ["l"="-8.077,12.003"]
"i-am-tom/higgledy" ["l"="-7.989,12.137"]
"nomeata/inspection-testing" ["l"="-7.918,12.167"]
"lexi-lambda/freer-simple" ["l"="-8.041,12.102"]
"tathougies/beam" ["l"="-8.133,12.167"]
"jkachmar/alpine-haskell-stack" ["l"="-8,12.037"]
"Infinisil/all-hies" ["l"="-8.022,12.054"]
"utdemir/ghc-musl" ["l"="-8.017,12.013"]
"fghibellini/nix-haskell-monorepo" ["l"="-8.051,12.039"]
"tweag/rules_haskell" ["l"="-8.012,11.993"]
"input-output-hk/stack2nix" ["l"="-8.006,11.969"]
"quchen/stgi" ["l"="-8.044,12.199"]
"takenobu-hs/haskell-ghc-illustrated" ["l"="-7.855,12.255"]
"IntelLabs/flrc" ["l"="-8.049,12.225"]
"bjpop/ministg" ["l"="-7.966,12.243"]
"grin-tech/grin" ["l"="-8.01,12.161"]
"jozefg/higher-order-unification" ["l"="-9.164,13.379"]
"beerendlauwers/haskell-papers-ereader" ["l"="-8.089,12.31"]
"takenobu-hs/haskell-symbol-search-cheatsheet" ["l"="-7.832,12.234"]
"fbsamples/ghc-hotswap" ["l"="-7.978,12.195"]
"pkamenarsky/concur-replica" ["l"="-7.887,12.082"]
"pkamenarsky/replica" ["l"="-7.901,12.071"]
"write-you-a-scheme-v2/scheme" ["l"="-8.269,12.148"]
"llvm-hs/llvm-hs-kaleidoscope" ["l"="-8.262,12.058"]
"jauhien/iron-kaleidoscope" ["l"="-9.301,5.141"]
"jdegoes/functional-scala" ["l"="8.69,25.848"]
"functional-streams-for-scala/fs2" ["l"="9.78,24.882"]
"jtdaugherty/tart" ["l"="-7.798,12.11"]
"purebred-mua/purebred" ["l"="-27.597,-23.056"]
"sharkdp/cube-composer" ["l"="-8.368,12.067"]
"sharkdp/insect" ["l"="-11.899,-18.405"]
"passy/awesome-purescript" ["l"="-7.284,11.743"]
"paf31/purescript-book" ["l"="-7.321,11.746"]
"google/codeworld" ["l"="-8.253,12.132"]
"myfreeweb/intero.nvim" ["l"="-8.524,12.255"]
"aloiscochard/codex" ["l"="-8.4,12.333"]
"owickstrom/neovim-ghci" ["l"="-8.492,12.243"]
"bravit/hid-examples" ["l"="-8.311,11.826"]
"chris-taylor/aima-haskell" ["l"="-8.409,12.35"]
"commercialhaskell/commercialhaskell" ["l"="-8.24,12.299"]
"meiersi/HaskellerZ" ["l"="-8.475,12.329"]
"jgm/gitit" ["l"="-8.433,12.2"]
"jgm/gitit2" ["l"="-8.52,12.171"]
"joeyh/git-annex" ["l"="-10.448,-19.695"]
"jgm/yst" ["l"="7.367,7.896"]
"gollum/gollum" ["l"="-30.925,-21.236"]
"menduo/gitit-bigger" ["l"="-8.563,12.16"]
"github/gollum" ["l"="9.118,-30.386"]
"vim-pandoc/vim-pandoc" ["l"="-10.612,-22.093"]
"timbod7/haskell-chart" ["l"="-8.232,12.286"]
"tweag/sparkle" ["l"="-8.129,12.272"]
"tweag/funflow" ["l"="-8.071,12.269"]
"tepf/QuickPlot" ["l"="-8.068,12.331"]
"adjoint-io/raft" ["l"="-7.824,12.431"]
"kazu-yamamoto/mighttpd2" ["l"="-8.095,12.399"]
"parsonsmatt/servant-persistent" ["l"="-8.198,12.146"]
"haskell-servant/servant-auth" ["l"="-7.886,11.239"]
"haskell-CI/haskell-ci" ["l"="-8.053,12.146"]
"mpickering/apply-refact" ["l"="-7.966,12.106"]
"samtay/tetris" ["l"="-7.925,12.101"]
"samtay/conway" ["l"="-7.854,12.081"]
"tiehuis/2048-cli" ["l"="-7.736,12.098"]
"DimaSamoz/mezzo" ["l"="-7.802,12.076"]
"Yvee1/hascard" ["l"="-7.745,12.137"]
"samtay/snake" ["l"="-7.853,12.099"]
"company-mode/company-mode" ["l"="-8.405,-21.812"]
"emacs-helm/helm" ["l"="-8.446,-21.828"]
"bbatsov/projectile" ["l"="-8.426,-21.837"]
"BartoszMilewski/DaoFP" ["l"="-8.247,11.864"]
"thma/WhyHaskellMatters" ["l"="-8.14,11.952"]
"brendanhay/amazonka" ["l"="-8.113,12.191"]
"adjoint-io/fcl" ["l"="-7.877,12.382"]
"jberryman/unagi-chan" ["l"="-7.981,12.378"]
"ocharles/logging-effect" ["l"="-7.869,12.407"]
"2mol/pboy" ["l"="-8.096,12.073"]
"litxio/ptghci" ["l"="-8.063,12.026"]
"BinRoot/Haskell-Data-Analysis-Cookbook" ["l"="-8.323,12.276"]
"elm-lang/Elm" ["l"="-8.343,12.333"]
"GaloisInc/HaNS" ["l"="-8.488,12.302"]
"mirage/mirage" ["l"="-9.312,12.615"]
"jepst/CloudHaskell" ["l"="-8.353,12.352"]
"breuleux/quaint" ["l"="-8.329,12.651"]
"breuleux/engage" ["l"="-8.334,12.678"]
"reubenharry/haskell-docs" ["l"="-8.064,11.776"]
"graninas/hierarchical-free-monads-the-most-developed-approach-in-haskell" ["l"="-8.192,11.856"]
"graninas/Functional-Design-and-Architecture" ["l"="-8.139,11.921"]
"thma/PolysemyCleanArchitecture" ["l"="-8.154,11.883"]
"oden-lang/oden" ["l"="-8.456,12.548"]
"xixixao/Shem" ["l"="-8.408,12.582"]
"justinethier/husk-scheme" ["l"="-8.385,12.349"]
"psygnisfive/SimpleFP-v2" ["l"="-8.476,12.481"]
"tcard/sgo" ["l"="-8.496,12.612"]
"j14159/mlfe" ["l"="34.176,-25.69"]
"neugram/ng" ["l"="-13.335,1.928"]
"elm-native-ui/elm-native-ui" ["l"="-7.737,10.826"]
"albrow/fo" ["l"="-24.902,23.184"]
"tonymorris/course" ["l"="-8.405,12.268"]
"bos/stanford-cs240h" ["l"="-8.38,12.292"]
"sagivo/algorithms" ["l"="8.634,-30.796"]
"thoughtbot/til" ["l"="-12.34,-20.443"]
"tjmehta/101" ["l"="10.323,-33.815"]
"Snaipe/c-smart-pointers" ["l"="-13.755,17.769"]
"google/lisp-koans" ["l"="-8.143,13.543"]
"isRuslan/awesome-elm" ["l"="-7.83,10.769"]
"Dobiasd/FunctionalPlus" ["l"="-11.553,21.851"]
"joelburget/react-haskell" ["l"="-8.408,12.416"]
"chrisdone/jl" ["l"="-8,12.298"]
"Gabriel439/Haskell-Optparse-Generic-Library" ["l"="-7.849,12.39"]
"reflex-frp/reflex-dom" ["l"="-8.251,12.008"]
"elm-lang/elm-platform" ["l"="-7.776,10.828"]
"puffnfresh/roy" ["l"="27.526,-28.853"]
"switchface/helm" ["l"="-8.215,12.442"]
"sandwwraith/os2016-conspect" ["l"="-8.294,11.821"]
"facebookincubator/Glean" ["l"="-7.982,11.989"]
"facebookexperimental/skybison" ["l"="-7.913,11.948"]
"facebookincubator/hsthrift" ["l"="-7.883,11.944"]
"kythe/kythe" ["l"="-14.108,-0.132"]
"quickstrom/quickstrom" ["l"="-7.913,11.868"]
"Nightonke/Gitee" ["l"="-51.623,4.705"]
"Kevin-De-Koninck/Get-It" ["l"="-47.649,-1.198"]
"duyquoc/ScreenToLayers" ["l"="-8.238,11.764"]
"onmyway133/FinderGo" ["l"="-47.616,-1.142"]
"younatics/Highlighter" ["l"="-51.474,4.734"]
"Nax/longflow-manifesto" ["l"="-7.943,12.323"]
"typeclasses/haskell-phrasebook" ["l"="-8.191,11.741"]
"kowainik/hit-on" ["l"="-8.178,11.839"]
"jonascarpay/apecs" ["l"="-8.081,12.366"]
"isovector/ecstasy" ["l"="-8.093,12.382"]
"tobbebex/GPipe-Core" ["l"="-8.063,12.413"]
"ivanperez-keera/Yampa" ["l"="-8.115,12.323"]
"haskell-game/sdl2" ["l"="-8.135,12.4"]
"expipiplus1/vulkan" ["l"="-8.079,12.418"]
"nick8325/quickcheck" ["l"="-8.191,12.205"]
"awgn/cgrep" ["l"="-8.31,12.43"]
"RaphaelJ/friday" ["l"="-8.128,12.473"]
"1HaskellADay/1HAD" ["l"="-8.451,12.495"]
"z0w0/helm" ["l"="-8.224,12.404"]
"hut8labs/diffscuss" ["l"="-8.357,12.549"]
"takeoutweight/shade" ["l"="-8.35,12.471"]
"Gabriel439/haskell-in-the-large" ["l"="-8.302,12.335"]
"facebookincubator/duckling" ["l"="-8.141,12.226"]
"wit-ai/duckling" ["l"="-7.663,14.704"]
"wit-ai/duckling_old" ["l"="-8.056,12.318"]
"theam/haskell-do" ["l"="-8.129,12.184"]
"breuleux/earl-grey" ["l"="-8.31,12.584"]
"unisonweb/platform" ["l"="-8.277,12.468"]
"graninas/The-Voids-Of-Haskell" ["l"="-8.158,11.771"]
"rsms/ec2-webapp" ["l"="-8.764,12.414"]
"rsms/uilayer" ["l"="-8.781,12.441"]
"haskell/parsec" ["l"="-8.194,12.166"]
"agda/cubical" ["l"="-9.307,13.435"]
"jubalh/nudoku" ["l"="-7.671,12.098"]
"seehuhn/moon-buggy" ["l"="-7.624,12.101"]
"benl23x5/gloss" ["l"="-8.147,12.386"]
"ivanperez-keera/haskanoid" ["l"="-8.076,12.439"]
"palf/haskell-sdl2-examples" ["l"="-8.091,12.473"]
"palf/haskellSDL2Examples" ["l"="-8.166,12.467"]
"Lemmih/hsSDL2" ["l"="-8.172,12.448"]
"elisehuard/game-in-haskell" ["l"="-8.105,12.416"]
"ekmett/quine" ["l"="-8.087,12.514"]
"mchakravarty/HaskellSpriteKit" ["l"="-8.103,12.552"]
"keera-studios/haskell-game-programming" ["l"="-8.052,12.443"]
"passy/awesome-recursion-schemes" ["l"="-8.034,12.067"]
"ekmett/recursion-schemes" ["l"="-8.02,12.034"]
"sellout/recursion-scheme-talk" ["l"="-7.91,11.993"]
"slamdata/matryoshka" ["l"="9.708,24.916"]
"jwiegley/category-theory" ["l"="-9.436,13.417"]
"yallop/effects-bibliography" ["l"="-9.262,13.492"]
"pigworker/CS410-17" ["l"="-7.943,12.047"]
"mmhelloworld/idris-jvm" ["l"="-9.125,13.406"]
"ElvishJerricco/reflex-project-skeleton" ["l"="-8.279,11.94"]
"hansroland/reflex-dom-inbits" ["l"="-8.291,11.928"]
"reflex-frp/reflex-examples" ["l"="-8.279,11.958"]
"imalsogreg/servant-reflex" ["l"="-8.287,11.969"]
"reflex-frp/reflex-dom-contrib" ["l"="-8.269,11.987"]
"isovector/type-sets" ["l"="-7.986,12.171"]
"kowainik/co-log" ["l"="-7.978,12.212"]
"higherkindness/mu-haskell" ["l"="-8.089,12.021"]
"ocharles/weeder" ["l"="-7.934,11.937"]
"Nike-Inc/hal" ["l"="-7.911,12.026"]
"theam/aws-lambda-haskell-runtime" ["l"="-7.985,12.052"]
"Kleidukos/effectful-contrib" ["l"="-7.911,11.898"]
"re-xyr/cleff" ["l"="-7.925,11.89"]
"haskell-effectful/effectful" ["l"="-8.077,11.978"]
"MaiaVictor/caramel" ["l"="-8.238,12.515"]
"Gabriel439/Haskell-Morte-Library" ["l"="-8.239,12.421"]
"luna/luna-manager" ["l"="-8.595,11.978"]
"AccelerateHS/accelerate-llvm" ["l"="-8.362,12"]
"AccelerateHS/accelerate-cuda" ["l"="-8.346,12.026"]
"EarnestResearch/dhall-packages" ["l"="-8.093,11.817"]
"xtruder/kubenix" ["l"="-8.478,11.323"]
"dhall-lang/awesome-dhall" ["l"="-8.083,11.872"]
"travisbrown/dhallj" ["l"="-8.068,11.852"]
"Nadrieril/dhall-rust" ["l"="-8.081,11.751"]
"philandstuff/dhall-golang" ["l"="-8.065,11.885"]
"tweag/terraform-nixos" ["l"="-8.44,11.197"]
"cobbpg/elerea" ["l"="-8.159,12.435"]
"ermine-language/ermine" ["l"="-8.253,12.374"]
"ocharles/netwire-classics" ["l"="-8.156,12.416"]
"seliopou/typo" ["l"="-8.349,12.503"]
"sol/doctest" ["l"="-8.119,12.243"]
"fpco/stackage-server" ["l"="-8.271,12.343"]
"haskell-lang/haskell-lang" ["l"="-8.128,12.37"]
"fpco/ide-backend" ["l"="-8.309,12.4"]
"commercialhaskell/stack-ide" ["l"="-8.357,12.404"]
"haskell/haskell-ide" ["l"="-8.361,12.371"]
"nominolo/scion" ["l"="-8.329,12.396"]
"theindigamer/not-a-blog" ["l"="-8.105,11.872"]
"ChrisPenner/slick" ["l"="-8.111,11.84"]
"lettier/parsing-with-haskell-parser-combinators" ["l"="-8.117,11.86"]
"michaelochurch/summer-2015-haskell-class" ["l"="-8.469,12.282"]
"commercialhaskell/haskelldocumentation" ["l"="-8.305,12.349"]
"bfpg/cis194-yorgey-lectures" ["l"="-8.511,12.282"]
"gkz/LiveScript" ["l"="-8.548,12.196"]
"gkz/prelude-ls" ["l"="-8.709,12.177"]
"michaelficarra/CoffeeScriptRedux" ["l"="11.472,-31.845"]
"mozilla/sweet.js" ["l"="11.543,-32.001"]
"jashkenas/coffeescript" ["l"="26.638,-27.157"]
"Gozala/wisp" ["l"="-7.605,14.952"]
"tweag/porcupine" ["l"="-7.976,12.31"]
"seek-oss/serverless-haskell" ["l"="-8.004,12.059"]
"utdemir/distributed-dataset" ["l"="-7.894,12.01"]
"morpheusgraphql/morpheus-graphql" ["l"="-8.064,11.993"]
"gelisam/hawk" ["l"="-8.548,12.484"]
"lukasmartinelli/hwk" ["l"="-8.591,12.508"]
"imeckler/mote" ["l"="-8.507,12.39"]
"phadej/github" ["l"="-7.768,12.435"]
"simonmar/monad-par" ["l"="-8.386,12.418"]
"xmonad/osxmonad" ["l"="-8.452,12.408"]
"fjolnir/xnomad" ["l"="-8.612,12.561"]
"puffnfresh/iridium" ["l"="-9.053,13.281"]
"pufuwozu/toggle-osx-shadows" ["l"="-8.523,12.486"]
"sugakandrey/Functional-analysis" ["l"="-8.277,11.825"]
"keera-studios/keera-hails" ["l"="-8.097,12.346"]
"alanz/vscode-hie-server" ["l"="-7.695,11.966"]
"alanz/haskell-lsp" ["l"="-7.783,12.009"]
"phoityne/phoityne-vscode" ["l"="-7.657,11.946"]
"ekmett/machines" ["l"="-8.158,12.331"]
"actions/setup-haskell" ["l"="-7.922,12.048"]
"kazu-yamamoto/unit-test-example" ["l"="-8.196,12.554"]
"sol/doctest-haskell" ["l"="-8.186,12.609"]
"fujimura/hi" ["l"="-8.226,12.572"]
"mfine/heroku-buildpack-stack" ["l"="-8.212,12.146"]
"advancedtelematic/quickcheck-state-machine" ["l"="-7.957,12.228"]
"davidbrewer/xmonad-ubuntu-conf" ["l"="-7.957,12.279"]
"davidbeckingsale/xmonad-config" ["l"="-7.894,12.192"]
"randomthought/xmonad-config" ["l"="-7.865,12.191"]
"ghcjs/ghcjs-dom" ["l"="-8.35,11.876"]
"ghcjs/jsaddle" ["l"="-8.374,11.831"]
"reflex-frp/reflex-dom-semui" ["l"="-8.301,11.963"]
"idris-hackers/idris-vim" ["l"="-8.624,12.421"]
"raichoo/haskell-vim" ["l"="-8.551,12.379"]
"DanielG/ghc-mod" ["l"="-8.278,12.26"]
"sleexyz/hylogen" ["l"="-8.045,12.42"]
"Twinside/Juicy.Pixels" ["l"="-8.128,12.447"]
"shawnlawson/The_Force" ["l"="3.059,37.063"]
"flannelhead/blackstar" ["l"="-7.965,12.486"]
"madjestic/Haskell-OpenGL-Tutorial" ["l"="-8.1,12.454"]
"barrucadu/dejafu" ["l"="-7.923,12.209"]
"gkz/LiveScript-style-guide" ["l"="-8.754,12.143"]
"gkz/vim-ls" ["l"="-8.762,12.195"]
"gkz/optionator" ["l"="-8.785,12.169"]
"dk00/livescript-next" ["l"="-8.742,12.182"]
"gkz/coffee2ls" ["l"="-8.735,12.199"]
"arch-js/arch" ["l"="-8.76,12.167"]
"Roonin-mx/livescript-rails" ["l"="-8.726,12.153"]
"tomchentw/gulp-livescript" ["l"="-8.739,12.162"]
"natefaubion/adt.js" ["l"="11.344,-31.758"]
"ekmett/bound" ["l"="-8.057,12.473"]
"ekmett/succinct" ["l"="-8.044,12.518"]
"Avi-D-coder/implicit-hie" ["l"="-8.104,12.03"]
"GaloisInc/crucible" ["l"="-9.584,13.357"]
"cedille/cedille" ["l"="-9.252,13.456"]
"PrincetonUniversity/VST" ["l"="-9.513,13.405"]
"GaloisInc/saw-script" ["l"="-9.594,13.384"]
"nick8325/quickspec" ["l"="-9.195,13.259"]
"chrisdone/dynamic" ["l"="-8.056,11.927"]
"chessai/hedgehog-classes" ["l"="-7.846,12.023"]
"albertoruiz/hmatrix" ["l"="-8.232,12.375"]
"twittner/zeromq-haskell" ["l"="-8.315,12.386"]
"serokell/nixfmt" ["l"="-8.528,11.293"]
"codedownio/time-ghc-modules" ["l"="-8.083,11.958"]
"Gabriel439/Haskell-Pipes-Concurrency-Library" ["l"="-8.215,12.388"]
"shajra/example-nix" ["l"="-8.056,12.058"]
"Gabriel439/simple-twitter" ["l"="-8.048,12.01"]
"wendigojaeger/ZigGBAHelloWorld" ["l"="-7.966,11.94"]
"sapir/gcc-rust" ["l"="-7.969,11.908"]
"robrix/starlight" ["l"="-8.004,11.944"]
"mstksg/auto" ["l"="-8.164,12.377"]
"tweag/inline-java" ["l"="-8.055,12.37"]
"NorfairKing/smos" ["l"="-7.831,11.639"]
"NorfairKing/intray" ["l"="-7.826,11.606"]
"NorfairKing/validity" ["l"="-7.794,11.595"]
"NorfairKing/feedback" ["l"="-7.887,11.728"]
"Twinside/Rasterific" ["l"="-8.108,12.493"]
"Twinside/FontyFruity" ["l"="-8.081,12.546"]
"awakesecurity/proto3-wire" ["l"="-7.847,12.284"]
"lykahb/groundhog" ["l"="-8.148,12.177"]
"Gekkio/gnome-session-xmonad" ["l"="-7.871,12.322"]
"eckyputrady/haskell-scotty-realworld-example-app" ["l"="-8.042,11.79"]
"tzemanovic/haskell-yesod-realworld-example-app" ["l"="-8.026,11.75"]
"ameingast/postgresql-simple-migration" ["l"="-8.013,11.726"]
"ezyang/compact" ["l"="-7.835,12.175"]
"nh2/haskell-cpu-instruction-counter" ["l"="-7.823,12.163"]
"ivanperez-keera/dunai" ["l"="-8.071,12.348"]
"atzeus/FRPNow" ["l"="-8.175,12.362"]
"HeinrichApfelmus/frp-guides" ["l"="-8.104,12.369"]
"lehins/haskell-scheduler" ["l"="-8.012,12.182"]
"psibi/fakedata" ["l"="-7.993,12.224"]
"mchakravarty/lazy-lambda" ["l"="-8.089,12.612"]
"nikita-volkov/hasql-th" ["l"="-8.033,12.245"]
"pushcx/hpffp-resources" ["l"="-8.044,12.177"]
"lukleh/haskell-book-exercises" ["l"="-7.938,12.22"]
"dmvianna/haskellbook" ["l"="-7.907,12.224"]
"goldfirere/glambda" ["l"="-9.211,13.426"]
"dwayne/haskell-programming" ["l"="-7.922,12.233"]
"jwiegley/nix-config" ["l"="-8.377,11.209"]
"peti/hydra-tutorial" ["l"="-8.372,11.323"]
"puffnfresh/nix-files" ["l"="-7.953,11.986"]
"dpndnt/library" ["l"="-7.835,12.2"]
"algebraic-graphs/scala" ["l"="-7.879,12.199"]
"bos/configurator" ["l"="-8.239,12.357"]
"bos/pronk" ["l"="-8.238,12.439"]
"acowley/Frames" ["l"="-8.198,12.357"]
"mightybyte/hsnippet" ["l"="-8.317,11.864"]
"qfpl/reflex-tutorial" ["l"="-8.337,11.89"]
"yamafaktory/reflex-starter" ["l"="-8.331,11.872"]
"JKTKops/Write-You-a-Haskell-2" ["l"="-8.471,12.154"]
"nanopass/nanopass-framework-scheme" ["l"="-7.903,13.45"]
"haskell-crypto/cryptonite" ["l"="-8.479,12.102"]
"nomeata/veggies" ["l"="-7.913,12.256"]
"dbousamra/hnes" ["l"="-8.01,12.256"]
"mortberg/cubicaltt" ["l"="-9.317,13.446"]
"sweirich/pi-forall" ["l"="-9.267,13.462"]
"AllureOfTheStars/Allure" ["l"="-8.057,12.39"]
"chrisdone/chrisdone-emacs" ["l"="-8.334,12.358"]
"chrisdone/god-mode" ["l"="-8.424,-21.731"]
"ekmett/hask" ["l"="-7.818,12.766"]
"ekmett/kan-extensions" ["l"="-7.846,12.733"]
"tweag/servant-template" ["l"="-8.182,11.81"]
"purenix-org/purenix" ["l"="-8.595,11.187"]
"fpco/safe-exceptions" ["l"="-8.115,12.275"]
"alanz/haskell-ide-engine" ["l"="-7.744,12"]
"mietek/halcyon" ["l"="-8.275,12.529"]
"ocharles/papers" ["l"="-8.266,12.298"]
"ekmett/linear" ["l"="-8.186,12.42"]
"suhailshergill/extensible-effects" ["l"="-8.174,12.403"]
"commercialhaskell/stackage" ["l"="-8.096,12.276"]
"monadfix/microlens" ["l"="-8.032,12.211"]
"kowainik/tomland" ["l"="-7.881,12.226"]
"haskell-servant/example-servant-persistent" ["l"="-8.274,12.073"]
"dorlowd/haskell-servant-realworld-example-app" ["l"="-8.303,12.031"]
"myfreeweb/magicbane" ["l"="-8.059,12.092"]
"k-bx/owlcloud" ["l"="-8.321,11.989"]
"vacationlabs/haskell-webapps" ["l"="-8.314,12.013"]
"rmehri01/thock" ["l"="-7.699,12.143"]
"RyanGreenup/cadmus" ["l"="-7.675,12.154"]
"Sirupsen/localjob" ["l"="-8.817,12.747"]
"Sirupsen/posix-mqueue" ["l"="-8.843,12.771"]
"NorfairKing/sydtest" ["l"="-7.956,11.836"]
"kolmodin/binary" ["l"="-8.053,12.268"]
"haskell/deepseq" ["l"="-8.061,12.248"]
"haskell/directory" ["l"="-8.071,12.255"]
"haskell/filepath" ["l"="-8.03,12.262"]
"visionmedia/express-namespace" ["l"="11.753,-31.734"]
"mietek/haskell-on-heroku" ["l"="-8.273,12.582"]
"hercules-ci/hercules" ["l"="-7.64,12.035"]
"ocharles/micro-ci" ["l"="-7.669,12.042"]
"jwiegley/hnix" ["l"="-7.598,12.034"]
"TaktInc/hail" ["l"="-7.606,12.009"]
"adscib/monad-bayes" ["l"="8.819,25.092"]
"robbinch/Papers" ["l"="-8.047,12.339"]
"iu-parfunc/gibbon" ["l"="-7.889,12.173"]
"Gabriel439/bench" ["l"="-8.073,12.207"]
"Gabriel439/Haskell-Dhall-Library" ["l"="-7.921,12.281"]
"aelve/microlens" ["l"="-7.946,12.255"]
"turion/rhine" ["l"="-8.006,12.425"]
"turion/essence-of-live-coding" ["l"="-8.013,12.407"]
"haskell-tools/haskell-tools" ["l"="-8.036,12.118"]
"aisamanra/haddock-cheatsheet" ["l"="-8.02,12.235"]
"Gabriel439/Haskell-Foldl-Library" ["l"="-8.226,12.05"]
"llvm-hs/llvm-hs-pretty" ["l"="-8.121,11.945"]
"llvm-hs/llvm-hs-examples" ["l"="-8.154,11.94"]
"divipp/x86-64" ["l"="-8.179,11.927"]
"ollef/rock" ["l"="-8.191,11.928"]
"paf31/dovetail" ["l"="-8.065,11.948"]
"graninas/automatic-whitebox-testing-showcase" ["l"="-8.129,11.828"]
"graninas/Andromeda" ["l"="-8.131,11.79"]
"haskell/primitive" ["l"="-8.045,12.255"]
"Gabriel439/nix-diff" ["l"="-7.811,11.805"]
"ocharles/ghc-nix" ["l"="-7.783,11.772"]
"dfinity/dhc" ["l"="-7.745,12.35"]
"fujimura/spot" ["l"="-8.175,12.431"]
"takenobu-hs/lazy_evaluation" ["l"="-7.787,12.268"]
"takenobu-hs/haskell-ghc-reading-guide" ["l"="-7.81,12.269"]
"jamshidh/ethereum-client-haskell" ["l"="-7.865,12.486"]
"bkirwi/ethereum-haskell" ["l"="-7.906,12.442"]
"ekmett/free" ["l"="-7.887,12.687"]
"ekmett/contravariant" ["l"="-7.953,12.613"]
"ekmett/linear-logic" ["l"="-7.957,12.025"]
"evancz/elm-lang.org" ["l"="-8.461,12.382"]
"Peaker/lamdu" ["l"="-8.289,12.354"]
"edwinb/Idris-dev" ["l"="-9.163,13.247"]
"haskell-game/dear-imgui.hs" ["l"="-8.081,11.925"]
"lumihq/purescript-react-basic" ["l"="-7.242,11.722"]
"dwhitney/purescript-book" ["l"="-7.201,11.685"]
"sassela/haskell-learning" ["l"="-8.152,11.844"]
"joshcough/HaskellStarter" ["l"="-8.449,12.272"]
"headinthebox/CourseraCodeSamplesReactiveProgramming" ["l"="9.828,24.51"]
"kqr/gists" ["l"="-8.154,12.003"]
"non/cats" ["l"="9.661,24.812"]
"degoes-consulting/lambdaconf-2015" ["l"="-8.516,12.231"]
"pchiusano/fpinscala" ["l"="9.677,24.695"]
"idris-hackers/software-foundations" ["l"="-9.175,13.405"]
"conal/concat" ["l"="-9.259,13.393"]
"HeinrichApfelmus/threepenny-gui" ["l"="-8.202,12.341"]
"gtk2hs/gtk2hs" ["l"="-8.176,12.486"]
"jcollard/unm-hip" ["l"="-8.154,12.451"]
"thma/ThreepennyElectron" ["l"="-8.132,12.239"]
"ekmett/gl" ["l"="-8.087,12.494"]
"adjoint-io/nanocoin" ["l"="-7.846,12.358"]
"MichaelBurge/haskoin" ["l"="-7.823,12.369"]
"wavewave/fficxx" ["l"="-7.982,12.446"]
"michaelficarra/CoffeeScript2" ["l"="-8.714,12.286"]
"weepy/kaffeine" ["l"="-8.698,12.311"]
"fab13n/parsec-coffee-script" ["l"="-8.682,12.277"]
"mauricemach/zappa" ["l"="11.519,-31.814"]
"maxtaco/coffee-script" ["l"="11.531,-31.774"]
"abooij/sudbury" ["l"="-7.703,12.048"]
"JPMoresmau/BuildWrapper" ["l"="-8.318,12.465"]
"JPMoresmau/scion-class-browser" ["l"="-8.317,12.447"]
"ajnsit/purescript-concur" ["l"="-7.941,12.084"]
"natefaubion/purescript-cst" ["l"="-7.42,11.878"]
"ajnsit/concur-documentation" ["l"="-7.922,12.076"]
"paf31/purescript-sdom" ["l"="-7.18,11.636"]
"ekmett/profunctors" ["l"="-7.934,12.644"]
"ekmett/adjunctions" ["l"="-7.921,12.673"]
"sellout/caterwaul" ["l"="-8.071,11.644"]
"FormationAI/dhall-bhat" ["l"="-8.075,11.673"]
"haskell-graphql/graphql-api" ["l"="-8.029,11.971"]
"dandoh/web-haskell-graphql-postgres-boilerplate" ["l"="-8.024,11.928"]
"circuithub/rel8" ["l"="-8,11.915"]
"haskell-beam/beam" ["l"="-7.997,11.887"]
"dillonkearns/elm-graphql" ["l"="-7.807,10.643"]
"haskoin/haskoin-wallet" ["l"="-7.956,12.387"]
"boundedvariation/quantfin" ["l"="-6.974,12.573"]
"albertoruiz/easyVision" ["l"="-8.238,12.482"]
"DDCSF/repa" ["l"="-8.239,12.461"]
"sviperll/ghcjs" ["l"="-8.418,12.465"]
"snapframework/snap-core" ["l"="-8.291,12.404"]
"bos/llvm" ["l"="-8.447,12.473"]
"jamwt/Angel" ["l"="-8.421,12.438"]
"achirkin/vulkan" ["l"="-8.032,12.48"]
"xixixao/Golem" ["l"="-8.424,12.635"]
"martinescardo/HoTT-UF-Agda-Lecture-Notes" ["l"="-9.302,13.413"]
"pigworker/CS410-18" ["l"="-7.875,12.026"]
"transient-haskell/transient-universe" ["l"="-8.236,12.111"]
"transient-haskell/axiom" ["l"="-8.226,12.183"]
"fpco/store" ["l"="-8.072,12.307"]
"alexkay/xmonad-log-applet" ["l"="-7.839,12.137"]
"alpmestan/hnn" ["l"="-8.519,12.424"]
"brunjlar/neural" ["l"="-8.496,12.426"]
"JPMoresmau/rnn" ["l"="-8.481,12.4"]
"Gabriel439/Haskell-Annah-Library" ["l"="-8.22,12.425"]
"NixOS/hydra" ["l"="-8.433,11.285"]
"aslatter/parsec" ["l"="-8.485,12.265"]
"bscarlet/llvm-general" ["l"="-8.48,12.514"]
"leonidas/codeblog" ["l"="-8.531,12.313"]
"abevoelker/haskellbook-solutions" ["l"="-7.885,12.243"]
"Tclv/HaskellBook" ["l"="-7.854,12.229"]
"TheAlgorithms/Haskell" ["l"="14.555,5.618"]
"mikeizbicki/HerbiePlugin" ["l"="-18.092,-32.22"]
"phaazon/luminance" ["l"="-8.053,12.603"]
"WebGHC/wasm-cross" ["l"="-8.337,11.843"]
"composewell/streaming-benchmarks" ["l"="-8.036,11.993"]
"haskell-perf/sequences" ["l"="-7.988,11.932"]
"cobbpg/dow" ["l"="-8.151,12.481"]
"ujihisa/neco-ghc" ["l"="-8.442,12.318"]
"lukerandall/haskellmode-vim" ["l"="-8.438,12.301"]
"bitc/lushtags" ["l"="-8.428,12.311"]
"Shougo/vimproc" ["l"="-10.261,-22.073"]
"Shougo/vimproc.vim" ["l"="-10.418,-22.125"]
"fjolnir/Tranquil" ["l"="-8.647,12.618"]
"pufuwozu/osxmonad" ["l"="-8.658,12.576"]
"fjolnir/spectacle" ["l"="-8.675,12.587"]
"sdegutis/Phoenix" ["l"="-8.729,12.67"]
"mmirman/caledon" ["l"="-9.133,13.232"]
"fjolnir/Menufela" ["l"="-8.626,12.592"]
"puffnfresh/toggle-osx-shadows" ["l"="-47.094,-0.721"]
"zalora/servant" ["l"="-8.321,12.416"]
"jetaggart/light-haskell" ["l"="-8.291,12.426"]
"meteficha/esqueleto" ["l"="-8.337,12.427"]
"ocharles/Francium" ["l"="-8.496,12.481"]
"ocharles/virtual-dom" ["l"="-8.528,12.515"]
"mattgreen/hython" ["l"="-8.422,12.333"]
"bjpop/language-python" ["l"="-8.529,12.392"]
"bjpop/berp" ["l"="-8.56,12.416"]
"artemZholus/matan" ["l"="-8.302,11.792"]
"snapframework/snap-server" ["l"="-8.277,12.431"]
"snapframework/snap" ["l"="-8.249,12.337"]
"snapframework/heist" ["l"="-8.262,12.426"]
"snapframework/snap-auth" ["l"="-8.271,12.404"]
"snapframework/snap-website" ["l"="-8.274,12.417"]
"snapframework/io-streams" ["l"="-8.309,12.494"]
"snapframework/xmlhtml" ["l"="-8.262,12.408"]
"neurocyte/android-haskell-activity" ["l"="-7.93,12.785"]
"neurocyte/foreign-jni" ["l"="-7.948,12.8"]
"neurocyte/ghc-android" ["l"="-7.953,12.775"]
"judah/haskeline" ["l"="-8.012,12.222"]
"ublubu/shapes" ["l"="-8.041,12.639"]
"rrnewton/haskell-lockfree" ["l"="-7.935,12.434"]
"begriffs/heroku-buildpack-ghc" ["l"="-8.287,12.562"]
"david-christiansen/pie-hs" ["l"="-9.185,13.432"]
"agocorona/transient-universe" ["l"="-8.212,12.467"]
"commercialhaskell/jump" ["l"="-8.192,12.446"]
"agocorona/hplayground" ["l"="-8.188,12.464"]
"reiddraper/ordeal" ["l"="-8.198,12.48"]
"nomeata/incredible" ["l"="-7.827,12.006"]
"nomeata/ghc-proofs" ["l"="-7.758,11.963"]
"nomeata/gipeda" ["l"="-7.779,11.978"]
"jcpetruzza/barbies" ["l"="-7.889,12.129"]
"i-am-tom/holmes" ["l"="-7.862,11.999"]
"ekmett/guanxi" ["l"="-7.822,12.046"]
"kowainik/prolens" ["l"="-7.812,11.962"]
"kowainik/validation-selective" ["l"="-7.879,11.899"]
"ermine-language/ermine-scala-core" ["l"="-8.258,12.444"]
"wavewave/nix-build-ghc-android" ["l"="-7.949,12.832"]
"wavewave/haskell-android-example" ["l"="-7.943,12.862"]
"TomMD/friday-juicypixels" ["l"="-8.116,12.511"]
"RaphaelJ/friday-examples" ["l"="-8.12,12.522"]
"psygnisfive/SimpleFP" ["l"="-8.507,12.52"]
"runarorama/scala-machines" ["l"="9.662,24.611"]
"analytics/analytics" ["l"="-8.009,12.575"]
"ghc-ios/ghc-ios-scripts" ["l"="-7.926,12.811"]
"ghc-ios/TestApp" ["l"="-7.909,12.833"]
"NorfairKing/easyspec" ["l"="-7.776,11.572"]
"ekmett/coda" ["l"="-7.858,12.157"]
"doolse/purescript-reactnative" ["l"="-7.203,11.623"]
"yesodweb/yesod-cookbook" ["l"="-8.287,12.09"]
"yesodweb/yesod-scaffold" ["l"="-8.343,12.003"]
"tfausak/haskeleton" ["l"="-8.223,12.617"]
"fpco/weigh" ["l"="-8.053,12.349"]
"ChrisPenner/json-to-haskell" ["l"="-7.878,11.821"]
"swarm-game/swarm" ["l"="-7.976,12.154"]
"graninas/Hydra" ["l"="-8.133,11.713"]
"juspay/euler-hs" ["l"="32.045,-26.864"]
"blitzcode/ghc-stack" ["l"="-8.281,12.625"]
"rubik/argon" ["l"="-8.301,12.635"]
"walpurgisriot/wisp" ["l"="-8.368,12.587"]
"purescript-concur/purescript-concur-react" ["l"="-7.113,11.737"]
"haskell-perf/dictionaries" ["l"="-7.954,11.891"]
"haskell-perf/serialization" ["l"="-7.953,11.874"]
"sseefried/docker-epidemic-build-env" ["l"="-8.008,12.618"]
"rainbyte/frag" ["l"="-8.018,12.518"]
"snoyberg/mono-traversable" ["l"="-8.938,13.186"]
"zerotier/kissdb" ["l"="-8.566,12.542"]
"mthom/shentong" ["l"="-9.065,13.786"]
"feuerbach/smallcheck" ["l"="-8.017,12.316"]
"lymar/hastache" ["l"="-8.385,12.494"]
"chrisdone/hl" ["l"="-8.377,12.476"]
"disnet/contracts.js" ["l"="-8.687,12.356"]
"meiersi/blaze-react" ["l"="-8.464,12.458"]
"boothead/oHm" ["l"="-8.485,12.46"]
"MonoidMusician/dhall-purescript" ["l"="-8.06,11.695"]
"dhall-mock/dhall-mock" ["l"="-8.072,11.718"]
"Gabriel439/dhall-manual" ["l"="-8.087,11.705"]
"nmattia/naersk" ["l"="-8.563,11.289"]
"visortelle/hackage-ui" ["l"="-8.042,11.946"]
"reflex-frp/reflex-todomvc" ["l"="-8.318,11.908"]
"bosu/hscope" ["l"="-8.456,12.339"]
"jejansse/Haskim" ["l"="-8.473,12.352"]
"pbrisbin/html-template-syntax" ["l"="-8.508,12.324"]
"michaelficarra/coffee-of-my-dreams" ["l"="-8.764,12.286"]
"michaelficarra/cscodegen" ["l"="-8.746,12.297"]
"hspec/hspec-wai" ["l"="-8.311,12.522"]
"alanz/HaRe" ["l"="-8.422,12.557"]
"RefactoringTools/HaRe" ["l"="-8.447,12.6"]
"jfeltz/dash-haskell" ["l"="-8.442,12.348"]
"mudge/pacta" ["l"="-8.686,12.416"]
"pufuwozu/fantasy-land" ["l"="11.329,-31.778"]
"dan-t/vim-hsimport" ["l"="-8.475,12.369"]
"sdegutis/zephyros" ["l"="-8.776,12.711"]
"feuerbach/regex-applicative" ["l"="-7.968,12.352"]
"lamdu/lamdu" ["l"="-9.214,13.558"]
"paulp/psp-std" ["l"="9.593,24.777"]
"paulp/policy" ["l"="9.626,24.766"]
"paf31/purescript-thermite" ["l"="-7.333,11.731"]
"AccelerateHS/accelerate-examples" ["l"="-8.401,11.925"]
"tobbebex/GPipe" ["l"="-8.014,12.467"]
"plredmond/GPipe-GLFW" ["l"="-8.03,12.45"]
"bergey/haskell-OpenGL-examples" ["l"="-8.067,12.523"]
"dagit/nehe-tuts" ["l"="-8.063,12.501"]
"haskell/ghcup" ["l"="-7.754,11.817"]
"ElvishJerricco/servant-router" ["l"="-8.341,11.917"]
"acid-state/safecopy" ["l"="-8.037,12.319"]
"dmbarbour/haskell-vcache" ["l"="-8.026,12.333"]
"fumieval/extensible" ["l"="-10.844,-24.486"]
"fpco/mezzohaskell" ["l"="-8.349,12.388"]
"benkolera/talk-stacking-your-monads" ["l"="-8.111,11.923"]
"chemouna/HaskellResources" ["l"="-8.113,11.895"]
"hamishmack/ghcjs" ["l"="-8.437,12.51"]
"fjolnir/HTTPKit" ["l"="-8.669,12.65"]
"ocharles/ocharles.org.uk--Getting-Started-with-Netwire-and-SDL" ["l"="-8.143,12.459"]
"mgajda/json-autotype" ["l"="-8.22,12.646"]
"kazu-yamamoto/wai-app-file-cgi" ["l"="-8.069,12.455"]
"xmonad/xmonad-web" ["l"="-7.857,12.131"]
"bjpop/blip" ["l"="-8.622,12.459"]
"jaspervdj/digestive-functors" ["l"="-8.215,12.492"]
"lukexi/stack-ide-sublime" ["l"="-8.393,12.456"]
"NorfairKing/tickler" ["l"="-7.823,11.582"]
"tmhedberg/hsenv" ["l"="-8.404,12.515"]
"VinylRecords/Vinyl" ["l"="-8.186,12.511"]
"chrisdone/ide-backend-mode" ["l"="-8.329,12.454"]
"kana/vim-filetype-haskell" ["l"="-8.501,12.346"]
"sseefried/docker-build-ghc-android" ["l"="-7.972,12.806"]
"GaloisInc/halfs" ["l"="-8.555,12.303"]
"sdegutis/Hydra" ["l"="-8.739,12.7"]
"afcowie/http-streams" ["l"="-8.325,12.55"]
"takeoutweight/shade-todomvc" ["l"="-8.37,12.514"]
"ekmett/parsnip" ["l"="-7.919,12.005"]
"nh2/hatrace" ["l"="-7.935,12.014"]
"mpickering/ghc-artefact-nix" ["l"="-7.96,12.043"]
"Gabriel439/Haskell-Dhall-Nix-Library" ["l"="-7.862,12.302"]
"AccelerateHS/accelerate-io" ["l"="-8.365,11.98"]
"ekmett/tables" ["l"="-8.123,12.424"]
"justinwoo/easy-dhall-nix" ["l"="-8.092,11.779"]
}