digraph G {
"DataDog/dd-trace-java" -> "DataDog/java-dogstatsd-client"
"DataDog/dd-trace-java" -> "DataDog/datadog-agent"
"DataDog/dd-trace-java" -> "newrelic/newrelic-java-agent"
"DataDog/dd-trace-java" -> "DataDog/dd-trace-js"
"DataDog/dd-trace-java" -> "raphw/concurrent-trees"
"DataDog/java-dogstatsd-client" -> "tim-group/java-statsd-client"
"DataDog/java-dogstatsd-client" -> "DataDog/jmxfetch"
"SkyAPM/document-cn-translation-of-skywalking" -> "opentracing-contrib/opentracing-specification-zh"
"SkyAPM/document-cn-translation-of-skywalking" -> "apache/skywalking-kubernetes"
"SkyAPM/document-cn-translation-of-skywalking" -> "apache/skywalking-java"
"SkyAPM/document-cn-translation-of-skywalking" -> "apache/skywalking-rocketbot-ui"
"SkyAPM/document-cn-translation-of-skywalking" -> "SkyAPM/java-plugin-extensions"
"SkyAPM/document-cn-translation-of-skywalking" -> "apache/skywalking-cli"
"SkyAPM/document-cn-translation-of-skywalking" -> "apache/skywalking-docker"
"SkyAPM/document-cn-translation-of-skywalking" -> "apache/skywalking-banyandb"
"SkyAPM/document-cn-translation-of-skywalking" -> "SkyAPM/go2sky"
"SkyAPM/document-cn-translation-of-skywalking" -> "SkyAPM/SkyAPM-php-sdk"
"SkyAPM/document-cn-translation-of-skywalking" -> "apache/skywalking" ["e"=1]
"SkyAPM/document-cn-translation-of-skywalking" -> "JaredTan95/skywalking-docker"
"SkyAPM/document-cn-translation-of-skywalking" -> "apache/skywalking-client-js"
"SkyAPM/document-cn-translation-of-skywalking" -> "apache/skywalking-satellite"
"SkyAPM/document-cn-translation-of-skywalking" -> "SkyAPMTest/skywalking-live-demo"
"DataDog/ansible-datadog" -> "DataDog/ansible-datadog-callback"
"DataDog/ansible-datadog" -> "DataDog/integrations-extras"
"DataDog/ansible-datadog" -> "terraform-providers/terraform-provider-datadog"
"DataDog/datadog-agent" -> "DataDog/integrations-core"
"DataDog/datadog-agent" -> "DataDog/dd-agent"
"DataDog/datadog-agent" -> "DataDog/helm-charts"
"DataDog/datadog-agent" -> "DataDog/documentation"
"DataDog/datadog-agent" -> "DataDog/dd-trace-java"
"DataDog/datadog-agent" -> "DataDog/dd-trace-go"
"DataDog/datadog-agent" -> "DataDog/datadog-operator"
"DataDog/datadog-agent" -> "open-telemetry/opentelemetry-collector"
"DataDog/datadog-agent" -> "kubernetes/kube-state-metrics" ["e"=1]
"DataDog/datadog-agent" -> "cilium/ebpf" ["e"=1]
"DataDog/datadog-agent" -> "DataDog/datadogpy"
"DataDog/datadog-agent" -> "DataDog/integrations-extras"
"DataDog/datadog-agent" -> "DataDog/dd-trace-py"
"DataDog/datadog-agent" -> "DataDog/ansible-datadog"
"DataDog/datadog-agent" -> "aquasecurity/tracee" ["e"=1]
"DataDog/dd-trace-js" -> "DataDog/browser-sdk"
"DataDog/dd-trace-py" -> "DataDog/datadogpy"
"DataDog/dd-trace-py" -> "DataDog/datadog-trace-agent"
"DataDog/helm-charts" -> "DataDog/terraform-provider-datadog"
"DataDog/helm-charts" -> "DataDog/datadog-operator"
"DataDog/helm-charts" -> "DataDog/datadog-agent"
"DataDog/integrations-extras" -> "DataDog/integrations-core"
"DataDog/terraform-provider-datadog" -> "laurmurclar/datadog-to-terraform"
"DataDog/terraform-provider-datadog" -> "claranet/terraform-datadog-monitors"
"DataDog/terraform-provider-datadog" -> "DataDog/datadog-api-client-go"
"DataDog/terraform-provider-datadog" -> "DataDog/helm-charts"
"DataDog/watermarkpodautoscaler" -> "DataDog/extendeddaemonset"
"open-telemetry/opentelemetry-collector" -> "open-telemetry/opentelemetry-collector-contrib"
"open-telemetry/opentelemetry-collector" -> "open-telemetry/opentelemetry-specification"
"open-telemetry/opentelemetry-collector" -> "open-telemetry/opentelemetry-go" ["e"=1]
"open-telemetry/opentelemetry-collector" -> "open-telemetry/opentelemetry-operator"
"open-telemetry/opentelemetry-collector" -> "open-telemetry/opentelemetry-java-instrumentation"
"open-telemetry/opentelemetry-collector" -> "open-telemetry/opentelemetry-proto"
"open-telemetry/opentelemetry-collector" -> "grafana/tempo" ["e"=1]
"open-telemetry/opentelemetry-collector" -> "open-telemetry/opentelemetry-java"
"open-telemetry/opentelemetry-collector" -> "open-telemetry/community"
"open-telemetry/opentelemetry-collector" -> "open-telemetry/opentelemetry-go-contrib"
"open-telemetry/opentelemetry-collector" -> "open-telemetry/opentelemetry-python"
"open-telemetry/opentelemetry-collector" -> "open-telemetry/opentelemetry-js"
"open-telemetry/opentelemetry-collector" -> "open-telemetry/opentelemetry-helm-charts"
"open-telemetry/opentelemetry-collector" -> "grafana/mimir" ["e"=1]
"open-telemetry/opentelemetry-collector" -> "OpenObservability/OpenMetrics"
"DataDog/documentation" -> "DataDog/integrations-core"
"DataDog/documentation" -> "DataDog/integrations-extras"
"DataDog/documentation" -> "DataDog/datadog-agent"
"open-telemetry/docs-cn" -> "chenmudu/open-telemetry-java-guides"
"open-telemetry/docs-cn" -> "open-telemetry/opentelemetry-java"
"open-telemetry/docs-cn" -> "open-telemetry/opentelemetry-collector-contrib"
"open-telemetry/docs-cn" -> "opentracing-contrib/opentracing-specification-zh"
"open-telemetry/docs-cn" -> "open-telemetry/opentelemetry-collector"
"open-telemetry/docs-cn" -> "open-telemetry/opentelemetry-java-instrumentation"
"open-telemetry/docs-cn" -> "open-telemetry/opentelemetry-specification"
"open-telemetry/docs-cn" -> "opensergo/opensergo-specification" ["e"=1]
"DataDog/the-monitor" -> "DataDog/dd-agent"
"GoogleCloudPlatform/google-cloud-ruby" -> "GoogleCloudPlatform/ruby-docs-samples"
"GoogleCloudPlatform/google-cloud-ruby" -> "slack-ruby/slack-ruby-bot" ["e"=1]
"GoogleCloudPlatform/google-cloud-ruby" -> "ontio/ontology" ["e"=1]
"GoogleCloudPlatform/google-cloud-ruby" -> "somaticio/tensorflow.rb" ["e"=1]
"GoogleCloudPlatform/google-cloud-ruby" -> "google/google-api-ruby-client" ["e"=1]
"GoogleCloudPlatform/google-cloud-ruby" -> "GoogleCloudPlatform/getting-started-ruby"
"GoogleCloudPlatform/google-cloud-ruby" -> "GoogleCloudPlatform/appengine-ruby"
"owenliang/go-raft" -> "owenliang/k8s-jumpserver"
"owenliang/go-raft" -> "owenliang/nacos-forward-proxy"
"owenliang/go-raft" -> "owenliang/mit-6.824"
"open-telemetry/opentelemetry-java" -> "open-telemetry/opentelemetry-java-instrumentation"
"open-telemetry/opentelemetry-java" -> "open-telemetry/opentelemetry-specification"
"open-telemetry/opentelemetry-java" -> "open-telemetry/opentelemetry-collector"
"open-telemetry/opentelemetry-java" -> "opentracing/opentracing-java"
"open-telemetry/opentelemetry-java" -> "open-telemetry/opentelemetry-collector-contrib"
"open-telemetry/opentelemetry-java" -> "micrometer-metrics/micrometer" ["e"=1]
"open-telemetry/opentelemetry-java" -> "open-telemetry/community"
"open-telemetry/opentelemetry-java" -> "open-telemetry/docs-cn"
"open-telemetry/opentelemetry-java" -> "open-telemetry/opentelemetry-proto"
"open-telemetry/opentelemetry-java" -> "prometheus/client_java" ["e"=1]
"open-telemetry/opentelemetry-java" -> "apache/skywalking-java"
"open-telemetry/opentelemetry-java" -> "jaegertracing/jaeger-client-java"
"open-telemetry/opentelemetry-java" -> "open-telemetry/opentelemetry-go" ["e"=1]
"open-telemetry/opentelemetry-java" -> "open-telemetry/opentelemetry-java-docs"
"open-telemetry/opentelemetry-java" -> "census-instrumentation/opencensus-java" ["e"=1]
"open-telemetry/opentelemetry-proto" -> "open-telemetry/community"
"open-telemetry/opentelemetry-proto" -> "open-telemetry/opentelemetry-collector-contrib"
"open-telemetry/opentelemetry-proto" -> "open-telemetry/oteps"
"open-telemetry/opentelemetry-proto" -> "open-telemetry/opentelemetry-specification"
"open-telemetry/opentelemetry-proto" -> "open-telemetry/opentelemetry-collector"
"open-telemetry/opentelemetry-proto" -> "open-telemetry/opentelemetry-operator"
"open-telemetry/opentelemetry-proto" -> "open-telemetry/opentelemetry-helm-charts"
"open-telemetry/opentelemetry-proto" -> "open-telemetry/opentelemetry-cpp"
"open-telemetry/opentelemetry-proto" -> "open-telemetry/opentelemetry-log-collection"
"open-telemetry/opentelemetry-proto" -> "open-telemetry/opentelemetry.io"
"open-telemetry/opentelemetry-proto" -> "open-telemetry/opentelemetry-go-contrib"
"open-telemetry/opentelemetry-proto" -> "open-telemetry/build-tools"
"open-telemetry/opentelemetry-proto" -> "open-telemetry/opentelemetry-collector-releases"
"aws/aws-for-fluent-bit" -> "aws-samples/amazon-ecs-firelens-examples"
"aws/aws-for-fluent-bit" -> "aws/amazon-cloudwatch-logs-for-fluent-bit"
"aws/aws-for-fluent-bit" -> "aws/amazon-kinesis-streams-for-fluent-bit"
"aws/aws-for-fluent-bit" -> "aws/amazon-kinesis-firehose-for-fluent-bit"
"aws/aws-for-fluent-bit" -> "aws/eks-charts" ["e"=1]
"aws/aws-for-fluent-bit" -> "aws-samples/amazon-eks-custom-amis"
"aws/aws-for-fluent-bit" -> "aws-observability/aws-otel-collector"
"aliyun/aliyun-log-jaeger" -> "jukylin/blog"
"aliyun/aliyun-log-jaeger" -> "aliyun/aliyun-log-cli" ["e"=1]
"apache/skywalking-cli" -> "apache/skywalking-infra-e2e"
"apache/skywalking-cli" -> "apache/skywalking-swck"
"apache/skywalking-cli" -> "apache/skywalking-satellite"
"apache/skywalking-cli" -> "apache/skywalking-banyandb"
"apache/skywalking-kubernetes" -> "apache/skywalking-swck"
"apache/skywalking-kubernetes" -> "apache/skywalking-docker"
"apache/skywalking-kubernetes" -> "apache/skywalking-showcase"
"apache/skywalking-kubernetes" -> "SkyAPM/document-cn-translation-of-skywalking"
"apache/skywalking-kubernetes" -> "evanxuhe/skywalking-kubernetes"
"apache/skywalking-kubernetes" -> "apache/skywalking-cli"
"apache/skywalking-kubernetes" -> "apache/skywalking-satellite"
"apache/skywalking-kubernetes" -> "apache/skywalking-banyandb"
"apache/skywalking-kubernetes" -> "hepyu/k8s-app-config"
"apache/skywalking-kubernetes" -> "SkyAPM/go2sky"
"apache/skywalking-kubernetes" -> "apache/skywalking-java"
"apache/skywalking-kubernetes" -> "apache/skywalking-client-js"
"apache/skywalking-kubernetes" -> "AliyunContainerService/kube-eventer" ["e"=1]
"apache/skywalking-kubernetes" -> "apache/skywalking-booster-ui"
"apache/skywalking-kubernetes" -> "apache/skywalking-rocketbot-ui"
"open-telemetry/opentelemetry-collector-contrib" -> "open-telemetry/opentelemetry-collector"
"open-telemetry/opentelemetry-collector-contrib" -> "open-telemetry/opentelemetry-specification"
"open-telemetry/opentelemetry-collector-contrib" -> "open-telemetry/opentelemetry-operator"
"open-telemetry/opentelemetry-collector-contrib" -> "open-telemetry/opentelemetry-go" ["e"=1]
"open-telemetry/opentelemetry-collector-contrib" -> "open-telemetry/opentelemetry-proto"
"open-telemetry/opentelemetry-collector-contrib" -> "open-telemetry/opentelemetry-go-contrib"
"open-telemetry/opentelemetry-collector-contrib" -> "open-telemetry/opentelemetry-java-instrumentation"
"open-telemetry/opentelemetry-collector-contrib" -> "open-telemetry/opentelemetry-helm-charts"
"open-telemetry/opentelemetry-collector-contrib" -> "open-telemetry/community"
"open-telemetry/opentelemetry-collector-contrib" -> "signalfx/splunk-otel-collector"
"open-telemetry/opentelemetry-collector-contrib" -> "open-telemetry/opentelemetry-java"
"open-telemetry/opentelemetry-collector-contrib" -> "open-telemetry/opentelemetry-python"
"open-telemetry/opentelemetry-collector-contrib" -> "aws-observability/aws-otel-collector"
"open-telemetry/opentelemetry-collector-contrib" -> "grafana/tempo" ["e"=1]
"open-telemetry/opentelemetry-collector-contrib" -> "open-telemetry/oteps"
"GoogleCloudPlatform/ruby-docs-samples" -> "GoogleCloudPlatform/getting-started-ruby"
"GoogleCloudPlatform/ruby-docs-samples" -> "googleapis/google-cloud-ruby" ["e"=1]
"GoogleCloudPlatform/ruby-docs-samples" -> "GoogleCloudPlatform/ruby-docker"
"GoogleCloudPlatform/ruby-docs-samples" -> "GoogleCloudPlatform/google-cloud-ruby"
"open-telemetry/opentelemetry-go-contrib" -> "open-telemetry/opentelemetry-go" ["e"=1]
"open-telemetry/opentelemetry-go-contrib" -> "open-telemetry/opentelemetry-collector-contrib"
"open-telemetry/opentelemetry-go-contrib" -> "open-telemetry/opentelemetry-collector"
"open-telemetry/opentelemetry-go-contrib" -> "uptrace/opentelemetry-go-extra"
"open-telemetry/opentelemetry-go-contrib" -> "open-telemetry/opentelemetry-operator"
"open-telemetry/opentelemetry-go-contrib" -> "open-telemetry/opentelemetry-specification"
"open-telemetry/opentelemetry-go-contrib" -> "go-logr/logr" ["e"=1]
"open-telemetry/opentelemetry-go-contrib" -> "open-telemetry/opentelemetry-proto"
"open-telemetry/opentelemetry-go-contrib" -> "XSAM/otelsql"
"open-telemetry/opentelemetry-go-contrib" -> "GoogleCloudPlatform/opentelemetry-operations-go"
"open-telemetry/opentelemetry-go-contrib" -> "uptrace/uptrace"
"open-telemetry/opentelemetry-go-contrib" -> "rabbitmq/amqp091-go"
"open-telemetry/opentelemetry-go-contrib" -> "protocolbuffers/protobuf-go" ["e"=1]
"open-telemetry/opentelemetry-go-contrib" -> "keyval-dev/opentelemetry-go-instrumentation"
"open-telemetry/opentelemetry-go-contrib" -> "grpc-ecosystem/go-grpc-middleware" ["e"=1]
"getsentry/sentry-go" -> "evalphobia/logrus_sentry"
"getsentry/sentry-go" -> "getsentry/raven-go"
"getsentry/sentry-go" -> "uber-go/multierr" ["e"=1]
"getsentry/sentry-go" -> "ztrue/tracerr" ["e"=1]
"getsentry/sentry-go" -> "DataDog/dd-trace-go"
"yurishkuro/opentracing-tutorial" -> "jaegertracing/jaeger-client-go" ["e"=1]
"yurishkuro/opentracing-tutorial" -> "opentracing/opentracing-go" ["e"=1]
"yurishkuro/opentracing-tutorial" -> "opentracing/specification"
"yurishkuro/opentracing-tutorial" -> "jaegertracing/jaeger" ["e"=1]
"yurishkuro/opentracing-tutorial" -> "jaegertracing/jaeger-operator"
"yurishkuro/opentracing-tutorial" -> "PacktPublishing/Mastering-Distributed-Tracing"
"yurishkuro/opentracing-tutorial" -> "opentracing/opentracing-java"
"yurishkuro/opentracing-tutorial" -> "opentracing/opentracing-javascript"
"yurishkuro/opentracing-tutorial" -> "jaegertracing/jaeger-client-node"
"yurishkuro/opentracing-tutorial" -> "jaegertracing/jaeger-client-java"
"yurishkuro/opentracing-tutorial" -> "jaegertracing/jaeger-kubernetes"
"yurishkuro/opentracing-tutorial" -> "opentracing-contrib/opentracing-specification-zh"
"yurishkuro/opentracing-tutorial" -> "jaegertracing/jaeger-client-python"
"yurishkuro/opentracing-tutorial" -> "opentracing-contrib/java-spring-cloud"
"yurishkuro/opentracing-tutorial" -> "grpc-ecosystem/go-grpc-middleware" ["e"=1]
"w3c/trace-context" -> "w3c/distributed-tracing-wg"
"uptrace/uptrace" -> "uptrace/bun" ["e"=1]
"uptrace/uptrace" -> "open-telemetry/opentelemetry-go-contrib"
"uptrace/uptrace" -> "open-telemetry/opentelemetry-collector-contrib"
"uptrace/uptrace" -> "uptrace/go-clickhouse"
"uptrace/uptrace" -> "open-telemetry/opentelemetry-go" ["e"=1]
"uptrace/uptrace" -> "open-telemetry/opentelemetry-collector"
"uptrace/uptrace" -> "grafana/tempo" ["e"=1]
"uptrace/uptrace" -> "SigNoz/signoz" ["e"=1]
"uptrace/uptrace" -> "jaegertracing/jaeger-clickhouse"
"uptrace/uptrace" -> "uptrace/uptrace-go"
"uptrace/uptrace" -> "parca-dev/parca" ["e"=1]
"uptrace/uptrace" -> "lmangani/cLoki" ["e"=1]
"uptrace/uptrace" -> "quickwit-oss/quickwit" ["e"=1]
"uptrace/uptrace" -> "uptrace/bunrouter" ["e"=1]
"uptrace/uptrace" -> "ariga/atlas" ["e"=1]
"open-telemetry/opentelemetry-js" -> "open-telemetry/opentelemetry-js-contrib"
"open-telemetry/opentelemetry-js" -> "open-telemetry/opentelemetry-collector"
"open-telemetry/opentelemetry-js" -> "open-telemetry/opentelemetry-specification"
"open-telemetry/opentelemetry-js" -> "siimon/prom-client" ["e"=1]
"open-telemetry/opentelemetry-js" -> "opentracing/opentracing-javascript"
"open-telemetry/opentelemetry-js" -> "open-telemetry/opentelemetry-collector-contrib"
"open-telemetry/opentelemetry-js" -> "open-telemetry/opentelemetry-python"
"open-telemetry/opentelemetry-js" -> "open-telemetry/opentelemetry-operator"
"open-telemetry/opentelemetry-js" -> "open-telemetry/opentelemetry-go" ["e"=1]
"open-telemetry/opentelemetry-js" -> "open-telemetry/opentelemetry-js-api"
"open-telemetry/opentelemetry-js" -> "open-telemetry/community"
"open-telemetry/opentelemetry-js" -> "mnadeem/nodejs-opentelemetry-tempo"
"open-telemetry/opentelemetry-js" -> "jaegertracing/jaeger-client-node"
"open-telemetry/opentelemetry-js" -> "aspecto-io/opentelemetry-ext-js"
"open-telemetry/opentelemetry-js" -> "open-telemetry/opentelemetry-java"
"jupp0r/prometheus-cpp" -> "open-telemetry/opentelemetry-cpp"
"jupp0r/prometheus-cpp" -> "opentracing/opentracing-cpp"
"jupp0r/prometheus-cpp" -> "civetweb/civetweb" ["e"=1]
"jupp0r/prometheus-cpp" -> "sewenew/redis-plus-plus" ["e"=1]
"jupp0r/prometheus-cpp" -> "census-instrumentation/opencensus-cpp"
"jupp0r/prometheus-cpp" -> "oliora/ppconsul"
"jupp0r/prometheus-cpp" -> "lewissbaker/cppcoro" ["e"=1]
"jupp0r/prometheus-cpp" -> "ultradns/cppmetrics"
"jupp0r/prometheus-cpp" -> "zeromq/azmq" ["e"=1]
"jupp0r/prometheus-cpp" -> "nacos-group/nacos-sdk-cpp"
"jupp0r/prometheus-cpp" -> "weaveworks/prom-aggregation-gateway" ["e"=1]
"jupp0r/prometheus-cpp" -> "etcd-cpp-apiv3/etcd-cpp-apiv3" ["e"=1]
"jupp0r/prometheus-cpp" -> "eBay/NuRaft" ["e"=1]
"jupp0r/prometheus-cpp" -> "facebookexperimental/libunifex" ["e"=1]
"jupp0r/prometheus-cpp" -> "RoaringBitmap/CRoaring" ["e"=1]
"qmlbook/qt6book" -> "jcelerier/qml-creative-controls" ["e"=1]
"opentracing-contrib/opentracing-specification-zh" -> "SkyAPM/document-cn-translation-of-skywalking"
"opentracing-contrib/opentracing-specification-zh" -> "opentracing/opentracing-java"
"opentracing-contrib/opentracing-specification-zh" -> "wu-sheng/sky-walking" ["e"=1]
"opentracing-contrib/opentracing-specification-zh" -> "bigbully/Dapper-translation" ["e"=1]
"opentracing-contrib/opentracing-specification-zh" -> "opentracing/specification"
"opentracing-contrib/opentracing-specification-zh" -> "open-telemetry/docs-cn"
"opentracing-contrib/opentracing-specification-zh" -> "yurishkuro/opentracing-tutorial"
"opentracing-contrib/opentracing-specification-zh" -> "apache/incubator-skywalking-ui"
"opentracing-contrib/opentracing-specification-zh" -> "openzipkin/brave" ["e"=1]
"opentracing-contrib/opentracing-specification-zh" -> "alipay/sofa-tracer" ["e"=1]
"opentracing-contrib/opentracing-specification-zh" -> "aliyun/aliyun-log-jaeger"
"opentracing-contrib/opentracing-specification-zh" -> "opentracing/opentracing-go" ["e"=1]
"opentracing-contrib/opentracing-specification-zh" -> "apache/incubator-skywalking" ["e"=1]
"opentracing-contrib/opentracing-specification-zh" -> "jaegertracing/jaeger-client-java"
"opentracing-contrib/opentracing-specification-zh" -> "TinyAllen/rocketbot"
"open-telemetry/community" -> "open-telemetry/oteps"
"open-telemetry/community" -> "open-telemetry/opentelemetry-proto"
"open-telemetry/community" -> "open-telemetry/opentelemetry-specification"
"open-telemetry/community" -> "open-telemetry/opentelemetry.io"
"open-telemetry/community" -> "open-telemetry/opentelemetry-collector"
"open-telemetry/community" -> "open-telemetry/opentelemetry-collector-contrib"
"open-telemetry/community" -> "open-telemetry/opentelemetry-operator"
"open-telemetry/community" -> "open-telemetry/opentelemetry-java"
"open-telemetry/community" -> "w3c/trace-context"
"open-telemetry/community" -> "open-telemetry/opentelemetry-python"
"open-telemetry/community" -> "open-telemetry/opentelemetry-log-collection"
"open-telemetry/community" -> "open-telemetry/opentelemetry-java-instrumentation"
"open-telemetry/community" -> "open-telemetry/opentelemetry-cpp"
"open-telemetry/community" -> "OpenObservability/OpenMetrics"
"open-telemetry/community" -> "open-telemetry/opentelemetry-dotnet-instrumentation" ["e"=1]
"open-telemetry/opentelemetry-cpp" -> "opentracing/opentracing-cpp"
"open-telemetry/opentelemetry-cpp" -> "jaegertracing/jaeger-client-cpp"
"open-telemetry/opentelemetry-cpp" -> "open-telemetry/opentelemetry-proto"
"open-telemetry/opentelemetry-cpp" -> "census-instrumentation/opencensus-cpp"
"open-telemetry/opentelemetry-cpp" -> "jupp0r/prometheus-cpp"
"open-telemetry/opentelemetry-cpp" -> "open-telemetry/community"
"open-telemetry/opentelemetry-cpp" -> "open-telemetry/opentelemetry-cpp-contrib"
"open-telemetry/opentelemetry-cpp" -> "open-telemetry/opentelemetry-operator"
"aws-samples/amazon-ecs-firelens-examples" -> "aws/aws-for-fluent-bit"
"aws-samples/amazon-ecs-firelens-examples" -> "aws/amazon-kinesis-firehose-for-fluent-bit"
"aws-samples/amazon-ecs-firelens-examples" -> "aws-samples/amazon-ecs-firelens-under-the-hood"
"opentracing/specification" -> "opentracing/opentracing-java"
"opentracing/specification" -> "yurishkuro/opentracing-tutorial"
"opentracing/specification" -> "opentracing/opentracing-javascript"
"opentracing/specification" -> "opentracing/opentracing-go" ["e"=1]
"opentracing/specification" -> "opentracing/opentracing-python"
"opentracing/specification" -> "opentracing-contrib/opentracing-specification-zh"
"opentracing/specification" -> "open-telemetry/opentelemetry-specification"
"opentracing/specification" -> "jaegertracing/jaeger-client-go" ["e"=1]
"opentracing/specification" -> "opentracing/opentracing-csharp" ["e"=1]
"opentracing/specification" -> "openzipkin/b3-propagation" ["e"=1]
"opentracing/specification" -> "opentracing-contrib/go-stdlib" ["e"=1]
"opentracing/specification" -> "uber/jaeger" ["e"=1]
"opentracing/specification" -> "opentracing/opentracing-php" ["e"=1]
"opentracing/specification" -> "openzipkin/brave" ["e"=1]
"opentracing/specification" -> "jaegertracing/jaeger-kubernetes"
"graphql/libgraphqlparser" -> "microsoft/cppgraphqlgen"
"graphql/libgraphqlparser" -> "Microsoft/cppgraphqlgen"
"graphql/libgraphqlparser" -> "stlab/libraries" ["e"=1]
"graphql/libgraphqlparser" -> "dosten/graphql-parser-php"
"graphql/libgraphqlparser" -> "matt-42/silicon" ["e"=1]
"graphql/libgraphqlparser" -> "vinniefalco/Beast" ["e"=1]
"graphql/libgraphqlparser" -> "qmlbook/qt6book"
"graphql/libgraphqlparser" -> "opentracing/opentracing-cpp"
"graphql/libgraphqlparser" -> "treefrogframework/treefrog-framework" ["e"=1]
"graphql/libgraphqlparser" -> "graphql-python/graphql-core" ["e"=1]
"DataDog/datadog-serverless-functions" -> "DataDog/serverless-plugin-datadog"
"jukylin/blog" -> "jukylin/jaeger-php" ["e"=1]
"jukylin/blog" -> "aliyun/aliyun-log-jaeger"
"DataDog/datadog-operator" -> "DataDog/extendeddaemonset"
"DataDog/datadogpy" -> "DataDog/dd-trace-py"
"DataDog/datadogpy" -> "DataDog/dd-agent"
"DataDog/datadogpy" -> "DataDog/datadog-api-client-python"
"DataDog/datadogpy" -> "terraform-providers/terraform-provider-datadog"
"DataDog/datadogpy" -> "trueaccord/DogPush"
"DataDog/datadogpy" -> "zorkian/go-datadog-api"
"DataDog/datadogpy" -> "DataDog/integrations-core"
"DataDog/datadogpy" -> "DataDog/datadog-go"
"DataDog/datadogpy" -> "DataDog/datadog-agent"
"DataDog/datadogpy" -> "DataDog/chef-datadog"
"DataDog/datadogpy" -> "DataDog/documentation"
"DataDog/datadogpy" -> "DataDog/Miscellany"
"DataDog/datadogpy" -> "jsocol/pystatsd" ["e"=1]
"DataDog/datadogpy" -> "brightcove/dog-watcher"
"DataDog/datadogpy" -> "DataDog/ansible-datadog"
"DataDog/dd-agent" -> "DataDog/integrations-core"
"DataDog/dd-agent" -> "DataDog/datadog-agent"
"DataDog/dd-agent" -> "DataDog/docker-dd-agent"
"DataDog/dd-agent" -> "DataDog/datadogpy"
"DataDog/dd-agent" -> "DataDog/datadog-go"
"DataDog/dd-agent" -> "DataDog/the-monitor"
"DataDog/dd-agent" -> "cloudinsight/cloudinsight-agent" ["e"=1]
"DataDog/dd-agent" -> "DataDog/datadog-trace-agent"
"DataDog/dd-agent" -> "stripe/veneur" ["e"=1]
"DataDog/dd-agent" -> "collectd/collectd" ["e"=1]
"DataDog/dd-agent" -> "DataDog/ansible-datadog"
"DataDog/dd-agent" -> "terraform-providers/terraform-provider-datadog"
"DataDog/dd-agent" -> "etsy/statsd" ["e"=1]
"DataDog/dd-agent" -> "DataDog/integrations-extras"
"DataDog/dd-agent" -> "DataDog/documentation"
"DataDog/integrations-core" -> "DataDog/integrations-extras"
"DataDog/integrations-core" -> "DataDog/datadog-agent"
"DataDog/integrations-core" -> "DataDog/dd-agent"
"DataDog/integrations-core" -> "DataDog/documentation"
"DataDog/integrations-core" -> "DataDog/helm-charts"
"DataDog/integrations-core" -> "DataDog/ansible-datadog"
"DataDog/integrations-core" -> "DataDog/jmxfetch"
"DataDog/integrations-core" -> "DataDog/pupernetes"
"DataDog/integrations-core" -> "DataDog/datadog-operator"
"DataDog/integrations-core" -> "DataDog/Miscellany"
"DataDog/integrations-core" -> "DataDog/datadogpy"
"DataDog/integrations-core" -> "terraform-providers/terraform-provider-datadog"
"DataDog/integrations-core" -> "DataDog/datadog-serverless-functions"
"DataDog/integrations-core" -> "DataDog/java-dogstatsd-client"
"DataDog/integrations-core" -> "DataDog/dd-trace-java"
"magsther/awesome-opentelemetry" -> "open-telemetry/oteps"
"openzipkin/zipkin-js" -> "openzipkin/zipkin-js-example"
"openzipkin/zipkin-js" -> "CloudNativeJS/appmetrics-zipkin"
"openzipkin/zipkin-js" -> "jaegertracing/jaeger-client-node"
"openzipkin/zipkin-js" -> "opentracing/opentracing-javascript"
"openzipkin/zipkin-js" -> "openzipkin/zipkin-reporter-java" ["e"=1]
"openzipkin/zipkin-js" -> "openzipkin/zipkin-ruby"
"getporter/porter" -> "cnabio/cnab-spec"
"getporter/porter" -> "in-toto/in-toto" ["e"=1]
"getporter/porter" -> "cnabio/duffle"
"blueswen/fastapi-observability" -> "softwarebloat/python-tracing-demo"
"blueswen/fastapi-observability" -> "Kludex/fastapi-prometheus-grafana" ["e"=1]
"jaegertracing/jaeger-ui" -> "jaegertracing/jaeger-operator"
"jaegertracing/jaeger-ui" -> "jaegertracing/jaeger-client-go" ["e"=1]
"jaegertracing/jaeger-ui" -> "jaegertracing/jaeger" ["e"=1]
"jaegertracing/jaeger-ui" -> "yurishkuro/opentracing-tutorial"
"jaegertracing/jaeger-ui" -> "jaegertracing/jaeger-client-node"
"jaegertracing/jaeger-ui" -> "GoogleCloudPlatform/google-cloud-ruby"
"jaegertracing/jaeger-ui" -> "jaegertracing/jaeger-kubernetes"
"jaegertracing/jaeger-ui" -> "jaegertracing/jaeger-client-csharp" ["e"=1]
"jaegertracing/jaeger-ui" -> "jaegertracing/documentation"
"jaegertracing/jaeger-ui" -> "PacktPublishing/Mastering-Distributed-Tracing"
"jaegertracing/jaeger-ui" -> "openshift/installer" ["e"=1]
"jaegertracing/jaeger-ui" -> "jaegertracing/jaeger-client-java"
"jaegertracing/jaeger-ui" -> "opentracing/opentracing-javascript"
"philchia/agollo" -> "zouyx/agollo"
"philchia/agollo" -> "shima-park/agollo"
"apache/skywalking-java" -> "apache/skywalking-data-collect-protocol"
"apache/skywalking-java" -> "apache/skywalking-banyandb"
"apache/skywalking-java" -> "SkyAPM/document-cn-translation-of-skywalking"
"apache/skywalking-java" -> "open-telemetry/opentelemetry-java-instrumentation"
"apache/skywalking-java" -> "alibaba/one-java-agent" ["e"=1]
"apache/skywalking-java" -> "apache/skywalking-satellite"
"apache/skywalking-java" -> "apache/skywalking-booster-ui"
"apache/skywalking-java" -> "apache/skywalking-kubernetes"
"apache/skywalking-java" -> "alibaba/metrics" ["e"=1]
"apache/skywalking-java" -> "shulieTech/Takin" ["e"=1]
"apache/skywalking-java" -> "apache/skywalking-rover"
"apache/skywalking-java" -> "apache/skywalking-client-js"
"apache/skywalking-java" -> "SkyAPM/java-plugin-extensions"
"apache/skywalking-java" -> "open-telemetry/opentelemetry-java"
"apache/skywalking-java" -> "zifeihan/friday"
"opentracing/opentracing-java" -> "jaegertracing/jaeger-client-java"
"opentracing/opentracing-java" -> "openzipkin/brave" ["e"=1]
"opentracing/opentracing-java" -> "opentracing/specification"
"opentracing/opentracing-java" -> "opentracing-contrib/java-spring-cloud"
"opentracing/opentracing-java" -> "micrometer-metrics/micrometer" ["e"=1]
"opentracing/opentracing-java" -> "spring-cloud/spring-cloud-sleuth" ["e"=1]
"opentracing/opentracing-java" -> "opentracing-contrib/opentracing-specification-zh"
"opentracing/opentracing-java" -> "open-telemetry/opentelemetry-java"
"opentracing/opentracing-java" -> "openzipkin/zipkin" ["e"=1]
"opentracing/opentracing-java" -> "raphw/byte-buddy" ["e"=1]
"opentracing/opentracing-java" -> "JCTools/JCTools" ["e"=1]
"opentracing/opentracing-java" -> "census-instrumentation/opencensus-java" ["e"=1]
"opentracing/opentracing-java" -> "prometheus/client_java" ["e"=1]
"opentracing/opentracing-java" -> "sofastack/sofa-tracer" ["e"=1]
"opentracing/opentracing-java" -> "alibaba/transmittable-thread-local" ["e"=1]
"opentracing/opentracing-python" -> "jaegertracing/jaeger-client-python"
"opentracing/opentracing-python" -> "uber-common/opentracing-python-instrumentation"
"opentracing/opentracing-python" -> "opentracing-contrib/python-flask"
"opentracing/opentracing-python" -> "opentracing-contrib/python-django"
"opentracing/opentracing-python" -> "opentracing/opentracing-cpp"
"opentracing/opentracing-python" -> "opentracing/specification"
"opentracing/opentracing-python" -> "Yelp/py_zipkin"
"opentracing/opentracing-python" -> "open-telemetry/opentelemetry-python"
"opentracing/opentracing-python" -> "aio-libs/aiojobs" ["e"=1]
"opentracing/opentracing-python" -> "tomwojcik/starlette-context" ["e"=1]
"opentracing/opentracing-python" -> "opentracing/opentracing-go" ["e"=1]
"opentracing/opentracing-python" -> "yurishkuro/opentracing-tutorial"
"opentracing/opentracing-python" -> "aio-libs/aiozipkin" ["e"=1]
"SkyAPM/go2sky" -> "SkyAPM/go2sky-plugins"
"SkyAPM/go2sky" -> "apache/skywalking-cli"
"SkyAPM/go2sky" -> "apache/skywalking-banyandb"
"SkyAPM/go2sky" -> "alibaba/sentinel-golang" ["e"=1]
"SkyAPM/go2sky" -> "apache/skywalking-satellite"
"SkyAPM/go2sky" -> "SkyAPM/java-plugin-extensions"
"SkyAPM/go2sky" -> "apache/skywalking-kubernetes"
"SkyAPM/go2sky" -> "nacos-group/nacos-sdk-go" ["e"=1]
"SkyAPM/go2sky" -> "apache/skywalking-goapi"
"apache/skywalking-banyandb" -> "apache/skywalking-satellite"
"apache/skywalking-banyandb" -> "apache/skywalking-cli"
"apache/skywalking-banyandb" -> "apache/skywalking-infra-e2e"
"kr1sp1n/node-vault" -> "chiefy/vaulted"
"kr1sp1n/node-vault" -> "silas/node-consul"
"kr1sp1n/node-vault" -> "x-cubed/event-store-client" ["e"=1]
"apolloconfig/agollo" -> "shima-park/agollo"
"apolloconfig/agollo" -> "withlin/canal-go" ["e"=1]
"apolloconfig/agollo" -> "sentinel-group/sentinel-go-adapters"
"apolloconfig/agollo" -> "zouyx/agollo_demo"
"apache/skywalking-data-collect-protocol" -> "apache/skywalking-query-protocol"
"apache/skywalking-data-collect-protocol" -> "apache/skywalking-agent-test-tool"
"TinyAllen/rocketbot" -> "tetratelabs/go2sky"
"TinyAllen/rocketbot" -> "JaredTan95/skywalking-tutorials"
"TinyAllen/rocketbot" -> "apache/incubator-skywalking-ui"
"TinyAllen/rocketbot" -> "code-robins/foodie-hacker"
"apache/skywalking-client-js" -> "apache/skywalking-nodejs"
"apache/skywalking-client-js" -> "apache/skywalking-nginx-lua"
"apache/skywalking-client-js" -> "apache/skywalking-query-protocol"
"apache/skywalking-client-js" -> "SkyAPM/SkyAPM-nodejs"
"apache/skywalking-rocketbot-ui" -> "apache/skywalking-client-js"
"apache/skywalking-rocketbot-ui" -> "SkyAPM/document-cn-translation-of-skywalking"
"apache/skywalking-rocketbot-ui" -> "apache/skywalking-ui"
"apache/skywalking-rocketbot-ui" -> "apache/skywalking-booster-ui"
"apache/skywalking-rocketbot-ui" -> "JaredTan95/skywalking-docker"
"apache/skywalking-rocketbot-ui" -> "apache/skywalking-satellite"
"apache/skywalking-rocketbot-ui" -> "apache/skywalking-kubernetes"
"apache/skywalking-rocketbot-ui" -> "apache/skywalking-data-collect-protocol"
"apache/skywalking-rocketbot-ui" -> "SkyAPM/go2sky"
"apache/skywalking-rocketbot-ui" -> "apache/skywalking-website"
"apache/skywalking-rocketbot-ui" -> "apache/skywalking-docker"
"apache/skywalking-rocketbot-ui" -> "apache/skywalking-query-protocol"
"apache/skywalking-rocketbot-ui" -> "alibaba/metrics" ["e"=1]
"apache/skywalking-rocketbot-ui" -> "apache/skywalking-java"
"apache/skywalking-rocketbot-ui" -> "SkyAPM/SkyAPM-nodejs"
"SkyAPM/SkyAPM-php-sdk" -> "chuan-yun/Molten" ["e"=1]
"SkyAPM/SkyAPM-php-sdk" -> "owenliang/go-raft"
"SkyAPM/SkyAPM-php-sdk" -> "apache/skywalking-php"
"SkyAPM/SkyAPM-php-sdk" -> "laynefyc/xhgui-branch" ["e"=1]
"SkyAPM/SkyAPM-php-sdk" -> "mabu233/sdebug" ["e"=1]
"SkyAPM/SkyAPM-php-sdk" -> "apache/skywalking-docker"
"SkyAPM/SkyAPM-php-sdk" -> "longyan/phpkafka" ["e"=1]
"SkyAPM/SkyAPM-php-sdk" -> "naver/pinpoint-c-agent"
"SkyAPM/SkyAPM-php-sdk" -> "SkyAPM/go2sky"
"SkyAPM/SkyAPM-php-sdk" -> "apache/skywalking-cli"
"SkyAPM/SkyAPM-php-sdk" -> "openzipkin/zipkin-php" ["e"=1]
"SkyAPM/SkyAPM-php-sdk" -> "seata/seata-php" ["e"=1]
"SkyAPM/SkyAPM-php-sdk" -> "swoole/yasd" ["e"=1]
"SkyAPM/SkyAPM-php-sdk" -> "multilinguals/apollo-php-client"
"SkyAPM/SkyAPM-php-sdk" -> "SkyAPM/SkyAPM-nodejs"
"apache/skywalking-python" -> "apache/skywalking-showcase"
"apache/skywalking-python" -> "apache/skywalking-goapi"
"apache/skywalking-python" -> "SkyAPM/aiops-engine-for-skywalking"
"apache/skywalking-python" -> "apache/skywalking-satellite"
"apache/skywalking-python" -> "apache/skywalking-infra-e2e"
"tim-group/java-statsd-client" -> "DataDog/java-dogstatsd-client"
"open-telemetry/opentelemetry-java-instrumentation" -> "open-telemetry/opentelemetry-java"
"open-telemetry/opentelemetry-java-instrumentation" -> "open-telemetry/opentelemetry-collector"
"open-telemetry/opentelemetry-java-instrumentation" -> "open-telemetry/opentelemetry-collector-contrib"
"open-telemetry/opentelemetry-java-instrumentation" -> "open-telemetry/opentelemetry-specification"
"open-telemetry/opentelemetry-java-instrumentation" -> "apache/skywalking-java"
"open-telemetry/opentelemetry-java-instrumentation" -> "open-telemetry/opentelemetry-operator"
"open-telemetry/opentelemetry-java-instrumentation" -> "open-telemetry/opentelemetry-java-contrib"
"open-telemetry/opentelemetry-java-instrumentation" -> "open-telemetry/opentelemetry-java-docs"
"open-telemetry/opentelemetry-java-instrumentation" -> "open-telemetry/opentelemetry-proto"
"open-telemetry/opentelemetry-java-instrumentation" -> "micrometer-metrics/micrometer" ["e"=1]
"open-telemetry/opentelemetry-java-instrumentation" -> "open-telemetry/docs-cn"
"open-telemetry/opentelemetry-java-instrumentation" -> "open-telemetry/community"
"open-telemetry/opentelemetry-java-instrumentation" -> "mnadeem/boot-opentelemetry-tempo"
"open-telemetry/opentelemetry-java-instrumentation" -> "opentracing/opentracing-java"
"open-telemetry/opentelemetry-java-instrumentation" -> "grafana/tempo" ["e"=1]
"rabbitmq/amqp091-go" -> "wagslane/go-rabbitmq"
"rabbitmq/amqp091-go" -> "streadway/amqp" ["e"=1]
"rabbitmq/amqp091-go" -> "rabbitmq/rabbitmq-stream-go-client"
"rabbitmq/amqp091-go" -> "open-telemetry/opentelemetry-go-contrib"
"rabbitmq/amqp091-go" -> "golang-jwt/jwt" ["e"=1]
"rabbitmq/amqp091-go" -> "michaelklishin/rabbit-hole"
"rabbitmq/amqp091-go" -> "open-telemetry/opentelemetry-go" ["e"=1]
"rabbitmq/amqp091-go" -> "isayme/go-amqp-reconnect"
"rabbitmq/amqp091-go" -> "go-gorm/gen" ["e"=1]
"rabbitmq/amqp091-go" -> "protocolbuffers/protobuf-go" ["e"=1]
"rabbitmq/amqp091-go" -> "testcontainers/testcontainers-go" ["e"=1]
"rabbitmq/amqp091-go" -> "AleksK1NG/Go-gRPC-RabbitMQ-microservice" ["e"=1]
"rabbitmq/amqp091-go" -> "go-redsync/redsync" ["e"=1]
"rabbitmq/amqp091-go" -> "bwmarrin/snowflake" ["e"=1]
"rabbitmq/amqp091-go" -> "go-co-op/gocron" ["e"=1]
"apache/skywalking-docker" -> "apache/skywalking-kubernetes"
"apache/skywalking-docker" -> "JaredTan95/skywalking-docker"
"apache/skywalking-docker" -> "apache/skywalking-data-collect-protocol"
"apache/skywalking-docker" -> "naver/pinpoint-docker"
"naver/pinpoint-docker" -> "apache/skywalking-docker"
"naver/pinpoint-docker" -> "skyao/learning-pinpoint"
"SkyAPM/SkyAPM-nodejs" -> "apache/skywalking-nodejs"
"SkyAPM/go2sky-plugins" -> "SkyAPM/go2sky"
"DataDog/dd-trace-go" -> "DataDog/datadog-go"
"DataDog/dd-trace-go" -> "WebDollar/Node-WebDollar"
"DataDog/dd-trace-go" -> "getsentry/sentry-go"
"DataDog/dd-trace-go" -> "DataDog/datadog-agent"
"DataDog/dd-trace-go" -> "openebs/litmus" ["e"=1]
"WebDollar/Node-WebDollar" -> "WebDollar/vue-Frontend"
"WebDollar/Node-WebDollar" -> "WebDollar/User-Interface-WebDollar"
"SkyAPM/java-plugin-extensions" -> "apache/skywalking-satellite"
"opentracing-contrib/java-spring-cloud" -> "opentracing-contrib/java-spring-web"
"opentracing-contrib/java-spring-cloud" -> "opentracing-contrib/java-spring-jaeger"
"opentracing-contrib/java-spring-cloud" -> "jaegertracing/jaeger-client-java"
"opentracing-contrib/java-spring-cloud" -> "opentracing/opentracing-java"
"opentracing-contrib/java-spring-cloud" -> "opentracing-contrib/java-kafka-client" ["e"=1]
"opentracing-contrib/java-spring-cloud" -> "opentracing-contrib/java-jdbc"
"zouyx/agollo" -> "philchia/agollo"
"zouyx/agollo" -> "shima-park/agollo"
"zouyx/agollo" -> "zouyx/agollo_demo"
"zouyx/agollo" -> "multilinguals/apollo-php-client"
"zouyx/agollo" -> "filamoon/pyapollo"
"zouyx/agollo" -> "zouyx/tug"
"zouyx/agollo" -> "zouyx/gopt"
"deislabs/porter" -> "cnabio/duffle"
"deislabs/porter" -> "Azure/azure-cnab-quickstarts"
"deislabs/porter" -> "deislabs/oras" ["e"=1]
"open-telemetry/opentelemetry-specification" -> "open-telemetry/opentelemetry-collector"
"open-telemetry/opentelemetry-specification" -> "open-telemetry/opentelemetry-collector-contrib"
"open-telemetry/opentelemetry-specification" -> "open-telemetry/opentelemetry-go" ["e"=1]
"open-telemetry/opentelemetry-specification" -> "open-telemetry/community"
"open-telemetry/opentelemetry-specification" -> "open-telemetry/opentelemetry-java"
"open-telemetry/opentelemetry-specification" -> "open-telemetry/opentelemetry-proto"
"open-telemetry/opentelemetry-specification" -> "open-telemetry/opentelemetry-java-instrumentation"
"open-telemetry/opentelemetry-specification" -> "open-telemetry/opentelemetry-python"
"open-telemetry/opentelemetry-specification" -> "open-telemetry/opentelemetry-dotnet" ["e"=1]
"open-telemetry/opentelemetry-specification" -> "open-telemetry/oteps"
"open-telemetry/opentelemetry-specification" -> "OpenObservability/OpenMetrics"
"open-telemetry/opentelemetry-specification" -> "open-telemetry/opentelemetry-go-contrib"
"open-telemetry/opentelemetry-specification" -> "open-telemetry/opentelemetry-js"
"open-telemetry/opentelemetry-specification" -> "open-telemetry/opentelemetry-operator"
"open-telemetry/opentelemetry-specification" -> "cloudevents/spec" ["e"=1]
"michaelklishin/rabbit-hole" -> "gocardless/amqpc"
"jaegertracing/jaeger-client-node" -> "opentracing/opentracing-javascript"
"jaegertracing/jaeger-client-node" -> "opentracing-contrib/javascript-express"
"jaegertracing/jaeger-client-node" -> "RisingStack/jaeger-node"
"jaegertracing/jaeger-client-node" -> "openzipkin/zipkin-js"
"jaegertracing/jaeger-client-node" -> "yurishkuro/opentracing-tutorial"
"wagslane/go-rabbitmq" -> "rabbitmq/amqp091-go"
"wagslane/go-rabbitmq" -> "houseofcat/turbocookedrabbit"
"wagslane/go-rabbitmq" -> "furdarius/rabbitroutine"
"wagslane/go-rabbitmq" -> "rabbitmq/rabbitmq-stream-go-client"
"wagslane/go-rabbitmq" -> "NeowayLabs/wabbit"
"wagslane/go-rabbitmq" -> "rueian/rueidis" ["e"=1]
"wagslane/go-rabbitmq" -> "isayme/go-amqp-reconnect"
"open-telemetry/opentelemetry-js-contrib" -> "open-telemetry/opentelemetry-js"
"open-telemetry/opentelemetry-js-contrib" -> "aspecto-io/opentelemetry-ext-js"
"open-telemetry/opentelemetry-js-contrib" -> "open-telemetry/opentelemetry-js-api"
"open-telemetry/opentelemetry-js-contrib" -> "open-telemetry/opentelemetry-helm-charts"
"open-telemetry/opentelemetry-js-contrib" -> "pragmaticivan/nestjs-otel" ["e"=1]
"open-telemetry/opentelemetry-js-contrib" -> "aws-observability/aws-otel-js"
"open-telemetry/opentelemetry-js-contrib" -> "aspecto-io/malabi"
"open-telemetry/opentelemetry-js-contrib" -> "open-telemetry/opentelemetry-collector-contrib"
"opentracing-contrib/python-flask" -> "jaegertracing/jaeger-client-python"
"opentracing-contrib/python-flask" -> "uber-common/opentracing-python-instrumentation"
"jaegertracing/jaeger-operator" -> "jaegertracing/helm-charts"
"jaegertracing/jaeger-operator" -> "jaegertracing/jaeger-kubernetes"
"jaegertracing/jaeger-operator" -> "open-telemetry/opentelemetry-operator"
"jaegertracing/jaeger-operator" -> "yurishkuro/opentracing-tutorial"
"jaegertracing/jaeger-operator" -> "jaegertracing/jaeger-ui"
"jaegertracing/jaeger-operator" -> "elastic/helm-charts" ["e"=1]
"jaegertracing/jaeger-operator" -> "jaegertracing/jaeger-client-python"
"jaegertracing/jaeger-operator" -> "kiali/kiali" ["e"=1]
"jaegertracing/jaeger-operator" -> "deislabs/duffle"
"jaegertracing/jaeger-operator" -> "kubernetes-monitoring/kubernetes-mixin" ["e"=1]
"jaegertracing/jaeger-operator" -> "elastic/cloud-on-k8s" ["e"=1]
"jaegertracing/jaeger-operator" -> "integr8ly/grafana-operator"
"jaegertracing/jaeger-operator" -> "bitnami-labs/kubewatch" ["e"=1]
"jaegertracing/jaeger-operator" -> "spotahome/redis-operator" ["e"=1]
"jaegertracing/jaeger-operator" -> "kubernetes-sigs/kubebuilder" ["e"=1]
"open-telemetry/opentelemetry.io" -> "open-telemetry/community"
"open-telemetry/opentelemetry.io" -> "open-telemetry/oteps"
"open-telemetry/opentelemetry.io" -> "open-telemetry/opentelemetry-proto"
"open-telemetry/opentelemetry.io" -> "open-telemetry/opentelemetry-specification"
"signalfx/observability-workshop" -> "signalfx/signalfx-jumpstart"
"OpenObservability/OpenMetrics" -> "cortexproject/cortex" ["e"=1]
"OpenObservability/OpenMetrics" -> "open-telemetry/opentelemetry-specification"
"OpenObservability/OpenMetrics" -> "open-telemetry/opentelemetry-collector"
"OpenObservability/OpenMetrics" -> "kubernetes/kube-state-metrics" ["e"=1]
"OpenObservability/OpenMetrics" -> "improbable-eng/thanos" ["e"=1]
"OpenObservability/OpenMetrics" -> "thanos-io/thanos" ["e"=1]
"OpenObservability/OpenMetrics" -> "grafana/tempo" ["e"=1]
"OpenObservability/OpenMetrics" -> "open-telemetry/opentelemetry-operator"
"OpenObservability/OpenMetrics" -> "kubernetes-monitoring/kubernetes-mixin" ["e"=1]
"OpenObservability/OpenMetrics" -> "open-telemetry/opentelemetry-go" ["e"=1]
"OpenObservability/OpenMetrics" -> "m3db/m3" ["e"=1]
"OpenObservability/OpenMetrics" -> "open-telemetry/community"
"OpenObservability/OpenMetrics" -> "open-telemetry/opentelemetry-collector-contrib"
"OpenObservability/OpenMetrics" -> "coreos/prometheus-operator" ["e"=1]
"OpenObservability/OpenMetrics" -> "google/mtail" ["e"=1]
"shima-park/agollo" -> "apolloconfig/agollo"
"shima-park/agollo" -> "philchia/agollo"
"shima-park/agollo" -> "zouyx/agollo"
"open-telemetry/opentelemetry-python" -> "open-telemetry/opentelemetry-python-contrib"
"open-telemetry/opentelemetry-python" -> "open-telemetry/opentelemetry-specification"
"open-telemetry/opentelemetry-python" -> "open-telemetry/opentelemetry-collector-contrib"
"open-telemetry/opentelemetry-python" -> "open-telemetry/opentelemetry-collector"
"open-telemetry/opentelemetry-python" -> "open-telemetry/opentelemetry-operator"
"open-telemetry/opentelemetry-python" -> "open-telemetry/community"
"open-telemetry/opentelemetry-python" -> "open-telemetry/opentelemetry-js"
"open-telemetry/opentelemetry-python" -> "opentracing/opentracing-python"
"open-telemetry/opentelemetry-python" -> "open-telemetry/opentelemetry-proto"
"open-telemetry/opentelemetry-python" -> "open-telemetry/opentelemetry-go" ["e"=1]
"open-telemetry/opentelemetry-python" -> "census-instrumentation/opencensus-python" ["e"=1]
"open-telemetry/opentelemetry-python" -> "open-telemetry/oteps"
"open-telemetry/opentelemetry-python" -> "open-telemetry/opentelemetry-helm-charts"
"open-telemetry/opentelemetry-python" -> "open-telemetry/opentelemetry-java"
"open-telemetry/opentelemetry-python" -> "hynek/structlog" ["e"=1]
"silas/node-consul" -> "kr1sp1n/node-vault"
"opentracing/opentracing-cpp" -> "jaegertracing/jaeger-client-cpp"
"opentracing/opentracing-cpp" -> "lightstep/lightstep-tracer-cpp"
"opentracing/opentracing-cpp" -> "rnburn/zipkin-cpp-opentracing"
"opentracing/opentracing-cpp" -> "flier/zipkin-cpp"
"opentracing/opentracing-cpp" -> "open-telemetry/opentelemetry-cpp"
"aws-observability/aws-otel-collector" -> "aws-observability/aws-otel-lambda"
"aws-observability/aws-otel-collector" -> "aws/amazon-cloudwatch-agent"
"aws-observability/aws-otel-collector" -> "aws-observability/aws-otel-community"
"aws-observability/aws-otel-collector" -> "open-telemetry/opentelemetry-collector-contrib"
"aws-observability/aws-otel-collector" -> "aws/aws-for-fluent-bit"
"aws-observability/aws-otel-collector" -> "aws-observability/aws-otel-python"
"aws-observability/aws-otel-collector" -> "aws-observability/aws-otel-playground"
"aws-observability/aws-otel-collector" -> "open-telemetry/opentelemetry-collector"
"aws-observability/aws-otel-collector" -> "aws-observability/aws-otel-java-instrumentation"
"aws-observability/aws-otel-collector" -> "open-telemetry/opentelemetry-lambda"
"jaegertracing/jaeger-kubernetes" -> "jaegertracing/jaeger-operator"
"jaegertracing/jaeger-kubernetes" -> "yurishkuro/opentracing-tutorial"
"jaegertracing/jaeger-kubernetes" -> "opentracing-contrib/go-stdlib" ["e"=1]
"open-telemetry/opentelemetry-demo" -> "open-telemetry/opentelemetry-helm-charts"
"open-telemetry/opentelemetry-demo" -> "open-telemetry/opentelemetry-operator"
"open-telemetry/opentelemetry-demo" -> "open-telemetry/opentelemetry-collector-contrib"
"open-telemetry/opentelemetry-demo" -> "magsther/awesome-opentelemetry"
"open-telemetry/opentelemetry-demo" -> "kubeshop/tracetest" ["e"=1]
"open-telemetry/opentelemetry-demo" -> "keyval-dev/odigos" ["e"=1]
"open-telemetry/opentelemetry-demo" -> "open-telemetry/opentelemetry-specification"
"open-telemetry/opentelemetry-demo" -> "open-telemetry/opentelemetry-collector"
"open-telemetry/opentelemetry-demo" -> "open-telemetry/community"
"open-telemetry/opentelemetry-demo" -> "grafana/tns"
"open-telemetry/opentelemetry-demo" -> "open-telemetry/opentelemetry-go-contrib"
"open-telemetry/opentelemetry-demo" -> "observIQ/bindplane-op"
"open-telemetry/opentelemetry-demo" -> "CtrlSpice/otel-desktop-viewer"
"open-telemetry/opentelemetry-demo" -> "open-telemetry/opentelemetry-python"
"open-telemetry/opentelemetry-demo" -> "grafana/tempo" ["e"=1]
"open-telemetry/opentelemetry-helm-charts" -> "open-telemetry/opentelemetry-operator"
"open-telemetry/opentelemetry-helm-charts" -> "jaegertracing/helm-charts"
"open-telemetry/opentelemetry-helm-charts" -> "open-telemetry/opentelemetry-collector-contrib"
"open-telemetry/opentelemetry-helm-charts" -> "open-telemetry/opentelemetry-log-collection"
"open-telemetry/opentelemetry-python-contrib" -> "open-telemetry/opentelemetry-python"
"open-telemetry/opentelemetry-python-contrib" -> "open-telemetry/opentelemetry-operator"
"open-telemetry/opentelemetry-python-contrib" -> "open-telemetry/opentelemetry-lambda"
"open-telemetry/opentelemetry-python-contrib" -> "GoogleCloudPlatform/opentelemetry-operations-python"
"open-telemetry/opentelemetry-python-contrib" -> "blueswen/fastapi-observability"
"apache/skywalking-swck" -> "apache/skywalking-cli"
"apache/skywalking-swck" -> "apache/skywalking-infra-e2e"
"reactjs/uk.reactjs.org" -> "adobe/helix-pipeline"
"reactjs/uk.reactjs.org" -> "NativeScript/nativescript-facebook" ["e"=1]
"cactus/go-statsd-client" -> "peterbourgon/g2s"
"cactus/go-statsd-client" -> "quipo/statsd"
"jaegertracing/jaeger-client-cpp" -> "opentracing/opentracing-cpp"
"aws/amazon-cloudwatch-logs-for-fluent-bit" -> "aws/amazon-kinesis-firehose-for-fluent-bit"
"aws/amazon-cloudwatch-logs-for-fluent-bit" -> "aws/aws-for-fluent-bit"
"deislabs/duffle" -> "deislabs/cnab-spec"
"deislabs/duffle" -> "deislabs/bundles"
"open-telemetry/opentelemetry-operator" -> "open-telemetry/opentelemetry-helm-charts"
"open-telemetry/opentelemetry-operator" -> "open-telemetry/opentelemetry-collector"
"open-telemetry/opentelemetry-operator" -> "open-telemetry/opentelemetry-collector-contrib"
"open-telemetry/opentelemetry-operator" -> "open-telemetry/opentelemetry-proto"
"open-telemetry/opentelemetry-operator" -> "open-telemetry/opentelemetry-go-contrib"
"open-telemetry/opentelemetry-operator" -> "open-telemetry/opentelemetry-log-collection"
"open-telemetry/opentelemetry-operator" -> "open-telemetry/community"
"open-telemetry/opentelemetry-operator" -> "jaegertracing/jaeger-operator"
"open-telemetry/opentelemetry-operator" -> "open-telemetry/opentelemetry-specification"
"open-telemetry/opentelemetry-operator" -> "open-telemetry/opentelemetry-python-contrib"
"open-telemetry/opentelemetry-operator" -> "open-telemetry/oteps"
"open-telemetry/opentelemetry-operator" -> "open-telemetry/opentelemetry-demo"
"open-telemetry/opentelemetry-operator" -> "weaveworks-experiments/kspan" ["e"=1]
"open-telemetry/opentelemetry-operator" -> "keyval-dev/opentelemetry-go-instrumentation"
"open-telemetry/opentelemetry-operator" -> "kubernetes-sigs/gateway-api" ["e"=1]
"apache/skywalking-showcase" -> "apache/skywalking-infra-e2e"
"apache/skywalking-showcase" -> "apache/skywalking-satellite"
"JaredTan95/skywalking-docker" -> "apache/skywalking-docker"
"JaredTan95/skywalking-docker" -> "tetratelabs/go2sky"
"opentracing/opentracing-javascript" -> "jaegertracing/jaeger-client-node"
"opentracing/opentracing-javascript" -> "opentracing/specification"
"opentracing/opentracing-javascript" -> "open-telemetry/opentelemetry-js"
"opentracing/opentracing-javascript" -> "yurishkuro/opentracing-tutorial"
"opentracing/opentracing-javascript" -> "lightstep/lightstep-tracer-javascript"
"opentracing/opentracing-javascript" -> "openzipkin/zipkin-js"
"opentracing/opentracing-javascript" -> "census-instrumentation/opencensus-node"
"opentracing/opentracing-javascript" -> "opentracing-contrib/javascript-express"
"opentracing/opentracing-javascript" -> "opentracing/opentracing-csharp" ["e"=1]
"opentracing/opentracing-javascript" -> "RisingStack/jaeger-node"
"opentracing/opentracing-javascript" -> "opentracing/opentracing-java"
"opentracing/opentracing-javascript" -> "jaegertracing/jaeger-kubernetes"
"opentracing/opentracing-javascript" -> "silas/node-consul"
"opentracing/opentracing-javascript" -> "rochdev/datadog-tracer-js"
"opentracing/opentracing-javascript" -> "RisingStack/trace-nodejs" ["e"=1]
"microsoft/cppgraphqlgen" -> "graphql/libgraphqlparser"
"jaegertracing/jaeger-client-python" -> "opentracing-contrib/python-flask"
"jaegertracing/jaeger-client-python" -> "opentracing/opentracing-python"
"jaegertracing/jaeger-client-python" -> "uber-common/opentracing-python-instrumentation"
"jaegertracing/jaeger-client-python" -> "opentracing-contrib/python-django"
"jaegertracing/jaeger-client-python" -> "jaegertracing/jaeger-operator"
"jaegertracing/jaeger-client-python" -> "opentracing-contrib/python-grpc"
"deislabs/cnab-spec" -> "deislabs/duffle"
"deislabs/cnab-spec" -> "adobe/helix-pipeline"
"deislabs/cnab-spec" -> "reactjs/uk.reactjs.org"
"deislabs/cnab-spec" -> "cncf/sig-app-delivery" ["e"=1]
"deislabs/cnab-spec" -> "deislabs/porter"
"deislabs/cnab-spec" -> "deislabs/example-bundles"
"Kindling-project/kindling" -> "Kindling-project/space-capsule"
"Kindling-project/kindling" -> "apache/skywalking-rover"
"jaegertracing/helm-charts" -> "open-telemetry/opentelemetry-helm-charts"
"jaegertracing/helm-charts" -> "jaegertracing/jaeger-operator"
"opentracing-contrib/java-spring-jaeger" -> "opentracing-contrib/java-spring-web"
"opentracing-contrib/java-spring-jaeger" -> "opentracing-contrib/java-spring-cloud"
"opentracing-contrib/java-spring-jaeger" -> "jaegertracing/jaeger-client-java"
"apache/skywalking-nodejs" -> "SkyAPM/SkyAPM-nodejs"
"apache/skywalking-nodejs" -> "apache/skywalking-client-js"
"DataDog/datadog-go" -> "zorkian/go-datadog-api"
"DataDog/datadog-go" -> "DataDog/dd-trace-go"
"DataDog/datadog-go" -> "alexcesaro/statsd"
"zifeihan/friday" -> "zifeihan/eprofiler-idea"
"evalphobia/logrus_sentry" -> "makasim/sentryhook"
"evalphobia/logrus_sentry" -> "getsentry/raven-go"
"filamoon/pyapollo" -> "BruceWW/pyapollo"
"aws-observability/aws-otel-lambda" -> "open-telemetry/opentelemetry-lambda"
"rabbitmq/rabbitmq-stream-go-client" -> "rabbitmq/rabbitmq-stream-java-client"
"DataDog/Miscellany" -> "DataDog/ecommerce-workshop"
"DataDog/Miscellany" -> "DataDog/integrations-extras"
"uber-common/opentracing-python-instrumentation" -> "jaegertracing/jaeger-client-python"
"uber-common/opentracing-python-instrumentation" -> "opentracing-contrib/python-flask"
"uber-common/opentracing-python-instrumentation" -> "signalfx/signalfx-python-tracing"
"opentracing-contrib/java-specialagent" -> "opentracing-contrib/java-agent"
"opentracing-contrib/java-specialagent" -> "opentracing-contrib/java-specialagent-demo"
"aspecto-io/opentelemetry-ext-js" -> "aspecto-io/malabi"
"aspecto-io/opentelemetry-ext-js" -> "aspecto-io/sns-sqs-big-payload"
"NeowayLabs/wabbit" -> "NeowayLabs/klb"
"signalfx/splunk-otel-collector" -> "signalfx/splunk-otel-java"
"signalfx/splunk-otel-collector" -> "signalfx/splunk-otel-python"
"signalfx/splunk-otel-collector" -> "signalfx/signalfx-agent"
"signalfx/splunk-otel-collector" -> "signalfx/observability-workshop"
"signalfx/splunk-otel-collector" -> "signalfx/splunk-otel-collector-chart"
"getsentry/raven-go" -> "evalphobia/logrus_sentry"
"jiaqi/jmxterm" -> "DataDog/jmxfetch"
"jiaqi/jmxterm" -> "vladimirvivien/jmx-cli"
"jiaqi/jmxterm" -> "cjmx/cjmx"
"Yelp/py_zipkin" -> "qiajigou/flask-zipkin"
"Yelp/py_zipkin" -> "aio-libs/aiozipkin" ["e"=1]
"javascript-tutorial/uk.javascript.info" -> "reactjs/uk.reactjs.org"
"jaegertracing/jaeger-client-java" -> "opentracing-contrib/java-spring-cloud"
"jaegertracing/jaeger-client-java" -> "opentracing/opentracing-java"
"jaegertracing/jaeger-client-java" -> "opentracing-contrib/java-spring-jaeger"
"jaegertracing/jaeger-client-java" -> "opentracing-contrib/java-spring-web"
"jaegertracing/jaeger-client-java" -> "opentracing-contrib/java-specialagent"
"jaegertracing/jaeger-client-java" -> "opentracing-contrib/java-grpc"
"jaegertracing/jaeger-client-java" -> "yurishkuro/opentracing-tutorial"
"jaegertracing/jaeger-client-java" -> "TinyAllen/rocketbot"
"CloudNativeJS/appmetrics-prometheus" -> "CloudNativeJS/appmetrics-zipkin"
"equinix-labs/otel-cli" -> "CtrlSpice/otel-desktop-viewer"
"zouyx/agollo_demo" -> "zouyx/gopt"
"zouyx/agollo_demo" -> "zouyx/zouyx.github.io"
"zouyx/agollo_demo" -> "zouyx/agollo-agent"
"terraform-providers/terraform-provider-datadog" -> "terraform-providers/terraform-provider-pagerduty"
"terraform-providers/terraform-provider-datadog" -> "zorkian/go-datadog-api"
"open-telemetry/oteps" -> "open-telemetry/opentelemetry-log-collection"
"open-telemetry/oteps" -> "open-telemetry/community"
"open-telemetry/oteps" -> "open-telemetry/opentelemetry-proto"
"open-telemetry/oteps" -> "open-telemetry/build-tools"
"open-telemetry/oteps" -> "open-telemetry/opentelemetry-collector-builder"
"open-telemetry/oteps" -> "open-telemetry/opentelemetry-demo-webstore"
"aws/amazon-cloudwatch-agent" -> "aws-observability/aws-otel-collector"
"aws/amazon-cloudwatch-agent" -> "aws-samples/amazon-cloudwatch-container-insights"
"aws/amazon-cloudwatch-agent" -> "aws/amazon-cloudwatch-agent-test"
"aws/amazon-cloudwatch-agent" -> "aws/amazon-cloudwatch-logs-for-fluent-bit"
"aws/amazon-cloudwatch-agent" -> "aws/amazon-ssm-agent" ["e"=1]
"CloudNativeJS/appmetrics-zipkin" -> "CloudNativeJS/appmetrics-prometheus"
"vladimirvivien/clamshell-cli" -> "vladimirvivien/jmx-cli"
"cnabio/cnab-spec" -> "cnabio/duffle"
"cnabio/cnab-spec" -> "cnabio/cnab-go"
"cnabio/cnab-spec" -> "getporter/porter"
"cnabio/cnab-spec" -> "deislabs/porter"
"alexcesaro/statsd" -> "quipo/statsd"
"alexcesaro/statsd" -> "cactus/go-statsd-client"
"aspecto-io/malabi" -> "aspecto-io/sns-sqs-big-payload"
"aspecto-io/malabi" -> "aspecto-io/opentelemetry-ext-js"
"CtrlSpice/otel-desktop-viewer" -> "equinix-labs/otel-cli"
"ricardolonga/jsongo" -> "NeowayLabs/klb"
"apache/skywalking-eyes" -> "apache/skywalking-infra-e2e"
"apache/skywalking-eyes" -> "apache/skywalking-cli"
"XSAM/otelsql" -> "nhatthm/otelsql"
"aws/amazon-kinesis-firehose-for-fluent-bit" -> "aws/amazon-kinesis-streams-for-fluent-bit"
"apache/skywalking-rover" -> "apache/skywalking-satellite"
"apache/skywalking-rover" -> "SkyAPM/aiops-engine-for-skywalking"
"apache/skywalking-rover" -> "apache/skywalking-infra-e2e"
"apache/skywalking-rover" -> "apache/skywalking-query-protocol"
"signalfx/splunk-otel-java" -> "signalfx/splunk-otel-python"
"signalfx/splunk-otel-java" -> "signalfx/splunk-otel-collector"
"peterbourgon/g2s" -> "peterbourgon/g2g"
"peterbourgon/g2s" -> "cactus/go-statsd-client"
"laurmurclar/datadog-to-terraform" -> "DataDog/terraform-provider-datadog"
"quipo/statsd" -> "cactus/go-statsd-client"
"quipo/statsd" -> "alexcesaro/statsd"
"opentracing-contrib/java-spring-web" -> "opentracing-contrib/java-spring-jaeger"
"opentracing-contrib/java-spring-web" -> "opentracing-contrib/java-spring-cloud"
"open-telemetry/opentelemetry-collector-builder" -> "open-telemetry/build-tools"
"zorkian/go-datadog-api" -> "terraform-providers/terraform-provider-datadog"
"signalfx/signalfx-agent" -> "signalfx/splunk-otel-collector"
"signalfx/signalfx-agent" -> "signalfx/signalfx-jumpstart"
"signalfx/signalfx-agent" -> "signalfx/tracing-examples"
"CloudNativeJS/cloud-health" -> "CloudNativeJS/cloud-health-connect"
"CloudNativeJS/helm" -> "CloudNativeJS/docker"
"flier/zipkin-cpp" -> "rnburn/zipkin-cpp-opentracing"
"DataDog/pupernetes" -> "JulienBalestra/kube-csr"
"DataDog/pupernetes" -> "JulienBalestra/enjoliver"
"CloudNativeJS/docker" -> "CloudNativeJS/helm"
"CloudNativeJS/docker" -> "CloudNativeJS/cloud-health-connect"
"open-telemetry/opentelemetry-lambda" -> "aws-observability/aws-otel-lambda"
"open-telemetry/opamp-spec" -> "open-telemetry/opamp-go"
"aws/amazon-kinesis-streams-for-fluent-bit" -> "aws/amazon-kinesis-firehose-for-fluent-bit"
"observIQ/bindplane-op" -> "open-telemetry/opamp-go"
"RisingStack/opentracing-auto" -> "RisingStack/jaeger-node"
"apache/skywalking-satellite" -> "apache/skywalking-banyandb"
"apache/skywalking-satellite" -> "apache/skywalking-showcase"
"apache/skywalking-satellite" -> "apache/skywalking-cli"
"apache/skywalking-satellite" -> "apache/skywalking-infra-e2e"
"apache/skywalking-satellite" -> "apache/skywalking-rover"
"keyval-dev/opentelemetry-go-instrumentation" -> "open-telemetry/opentelemetry-go-instrumentation"
"keyval-dev/opentelemetry-go-instrumentation" -> "open-telemetry/opentelemetry-ebpf"
"keyval-dev/opentelemetry-go-instrumentation" -> "keyval-dev/offsets-tracker"
"keyval-dev/opentelemetry-go-instrumentation" -> "keyval-dev/odigos" ["e"=1]
"keyval-dev/opentelemetry-go-instrumentation" -> "open-telemetry/opentelemetry-demo-webstore"
"NeowayLabs/nash" -> "NeowayLabs/klb"
"NeowayLabs/nash" -> "NeowayLabs/neosearch"
"NeowayLabs/nash" -> "NeowayLabs/nashcomplete"
"NeowayLabs/nash" -> "NeowayLabs/cloud-machine"
"NeowayLabs/nash" -> "tiago4orion/enzo"
"open-telemetry/opamp-go" -> "open-telemetry/opamp-spec"
"CloudNativeJS/cloud-health-connect" -> "CloudNativeJS/cloud-health"
"CloudNativeJS/cloud-health-connect" -> "CloudNativeJS/appmetrics-prometheus"
"CloudNativeJS/cloud-health-connect" -> "CloudNativeJS/docker"
"CloudNativeJS/cloud-health-connect" -> "CloudNativeJS/helm"
"CloudNativeJS/cloud-health-connect" -> "CloudNativeJS/appmetrics-zipkin"
"rnburn/zipkin-cpp-opentracing" -> "flier/zipkin-cpp"
"signalfx/splunk-otel-python" -> "signalfx/splunk-otel-java"
"sentinel-group/sentinel-go-adapters" -> "sentinel-group/sentinel-go-datasources"
"DataDog/dd-trace-java" ["l"="-16.125,2.403"]
"DataDog/java-dogstatsd-client" ["l"="-16.092,2.386"]
"DataDog/datadog-agent" ["l"="-16.165,2.48"]
"newrelic/newrelic-java-agent" ["l"="-16.114,2.356"]
"DataDog/dd-trace-js" ["l"="-16.098,2.316"]
"raphw/concurrent-trees" ["l"="-16.116,2.378"]
"tim-group/java-statsd-client" ["l"="-16.061,2.37"]
"DataDog/jmxfetch" ["l"="-16.082,2.354"]
"SkyAPM/document-cn-translation-of-skywalking" ["l"="-16.567,3.021"]
"opentracing-contrib/opentracing-specification-zh" ["l"="-16.419,3.071"]
"apache/skywalking-kubernetes" ["l"="-16.596,3.023"]
"apache/skywalking-java" ["l"="-16.525,2.999"]
"apache/skywalking-rocketbot-ui" ["l"="-16.603,2.989"]
"SkyAPM/java-plugin-extensions" ["l"="-16.571,3.041"]
"apache/skywalking-cli" ["l"="-16.625,3.041"]
"apache/skywalking-docker" ["l"="-16.631,3.001"]
"apache/skywalking-banyandb" ["l"="-16.591,3.043"]
"SkyAPM/go2sky" ["l"="-16.627,3.024"]
"SkyAPM/SkyAPM-php-sdk" ["l"="-16.683,2.993"]
"apache/skywalking" ["l"="9.827,21.5"]
"JaredTan95/skywalking-docker" ["l"="-16.585,3.008"]
"apache/skywalking-client-js" ["l"="-16.581,2.987"]
"apache/skywalking-satellite" ["l"="-16.604,3.041"]
"SkyAPMTest/skywalking-live-demo" ["l"="-16.551,3"]
"DataDog/ansible-datadog" ["l"="-16.189,2.455"]
"DataDog/ansible-datadog-callback" ["l"="-16.211,2.497"]
"DataDog/integrations-extras" ["l"="-16.176,2.432"]
"terraform-providers/terraform-provider-datadog" ["l"="-16.196,2.397"]
"DataDog/integrations-core" ["l"="-16.152,2.429"]
"DataDog/dd-agent" ["l"="-16.208,2.444"]
"DataDog/helm-charts" ["l"="-16.108,2.477"]
"DataDog/documentation" ["l"="-16.167,2.451"]
"DataDog/dd-trace-go" ["l"="-16.097,2.424"]
"DataDog/datadog-operator" ["l"="-16.126,2.489"]
"open-telemetry/opentelemetry-collector" ["l"="-16.307,2.905"]
"kubernetes/kube-state-metrics" ["l"="-10.777,0.135"]
"cilium/ebpf" ["l"="-11.585,1.723"]
"DataDog/datadogpy" ["l"="-16.199,2.417"]
"DataDog/dd-trace-py" ["l"="-16.233,2.433"]
"aquasecurity/tracee" ["l"="-11.62,1.759"]
"DataDog/browser-sdk" ["l"="-16.09,2.272"]
"DataDog/datadog-trace-agent" ["l"="-16.254,2.445"]
"DataDog/terraform-provider-datadog" ["l"="-16.057,2.495"]
"laurmurclar/datadog-to-terraform" ["l"="-16.03,2.489"]
"claranet/terraform-datadog-monitors" ["l"="-16.037,2.524"]
"DataDog/datadog-api-client-go" ["l"="-16.014,2.509"]
"DataDog/watermarkpodautoscaler" ["l"="-16.069,2.559"]
"DataDog/extendeddaemonset" ["l"="-16.093,2.53"]
"open-telemetry/opentelemetry-collector-contrib" ["l"="-16.302,2.93"]
"open-telemetry/opentelemetry-specification" ["l"="-16.327,2.954"]
"open-telemetry/opentelemetry-go" ["l"="-13.212,1.235"]
"open-telemetry/opentelemetry-operator" ["l"="-16.302,2.953"]
"open-telemetry/opentelemetry-java-instrumentation" ["l"="-16.377,2.957"]
"open-telemetry/opentelemetry-proto" ["l"="-16.322,2.925"]
"grafana/tempo" ["l"="-10.355,0.137"]
"open-telemetry/opentelemetry-java" ["l"="-16.362,2.982"]
"open-telemetry/community" ["l"="-16.339,2.934"]
"open-telemetry/opentelemetry-go-contrib" ["l"="-16.248,2.91"]
"open-telemetry/opentelemetry-python" ["l"="-16.318,2.98"]
"open-telemetry/opentelemetry-js" ["l"="-16.283,3.004"]
"open-telemetry/opentelemetry-helm-charts" ["l"="-16.28,2.969"]
"grafana/mimir" ["l"="-10.399,0.093"]
"OpenObservability/OpenMetrics" ["l"="-16.35,2.897"]
"open-telemetry/docs-cn" ["l"="-16.378,2.999"]
"chenmudu/open-telemetry-java-guides" ["l"="-16.411,3.016"]
"opensergo/opensergo-specification" ["l"="-9.64,2.379"]
"DataDog/the-monitor" ["l"="-16.251,2.477"]
"GoogleCloudPlatform/google-cloud-ruby" ["l"="-16.13,3.21"]
"GoogleCloudPlatform/ruby-docs-samples" ["l"="-16.085,3.216"]
"slack-ruby/slack-ruby-bot" ["l"="8.421,-30.835"]
"ontio/ontology" ["l"="46.08,-28.144"]
"somaticio/tensorflow.rb" ["l"="8.965,-29.541"]
"google/google-api-ruby-client" ["l"="8.864,-30.806"]
"GoogleCloudPlatform/getting-started-ruby" ["l"="-16.093,3.239"]
"GoogleCloudPlatform/appengine-ruby" ["l"="-16.117,3.239"]
"owenliang/go-raft" ["l"="-16.757,3.011"]
"owenliang/k8s-jumpserver" ["l"="-16.777,3.033"]
"owenliang/nacos-forward-proxy" ["l"="-16.775,2.999"]
"owenliang/mit-6.824" ["l"="-16.797,3.016"]
"opentracing/opentracing-java" ["l"="-16.373,3.063"]
"micrometer-metrics/micrometer" ["l"="9.307,21.338"]
"prometheus/client_java" ["l"="-11.643,-5.056"]
"jaegertracing/jaeger-client-java" ["l"="-16.383,3.115"]
"open-telemetry/opentelemetry-java-docs" ["l"="-16.401,2.98"]
"census-instrumentation/opencensus-java" ["l"="27.163,18.322"]
"open-telemetry/oteps" ["l"="-16.288,2.912"]
"open-telemetry/opentelemetry-cpp" ["l"="-16.407,2.946"]
"open-telemetry/opentelemetry-log-collection" ["l"="-16.282,2.94"]
"open-telemetry/opentelemetry.io" ["l"="-16.327,2.89"]
"open-telemetry/build-tools" ["l"="-16.294,2.885"]
"open-telemetry/opentelemetry-collector-releases" ["l"="-16.324,2.856"]
"aws/aws-for-fluent-bit" ["l"="-16.391,2.737"]
"aws-samples/amazon-ecs-firelens-examples" ["l"="-16.409,2.693"]
"aws/amazon-cloudwatch-logs-for-fluent-bit" ["l"="-16.371,2.719"]
"aws/amazon-kinesis-streams-for-fluent-bit" ["l"="-16.411,2.717"]
"aws/amazon-kinesis-firehose-for-fluent-bit" ["l"="-16.394,2.707"]
"aws/eks-charts" ["l"="-10.841,0.588"]
"aws-samples/amazon-eks-custom-amis" ["l"="-16.439,2.717"]
"aws-observability/aws-otel-collector" ["l"="-16.346,2.81"]
"aliyun/aliyun-log-jaeger" ["l"="-16.473,3.162"]
"jukylin/blog" ["l"="-16.489,3.195"]
"aliyun/aliyun-log-cli" ["l"="-9.617,1.939"]
"apache/skywalking-infra-e2e" ["l"="-16.631,3.06"]
"apache/skywalking-swck" ["l"="-16.644,3.043"]
"apache/skywalking-showcase" ["l"="-16.617,3.061"]
"evanxuhe/skywalking-kubernetes" ["l"="-16.576,3.067"]
"hepyu/k8s-app-config" ["l"="-16.597,3.088"]
"AliyunContainerService/kube-eventer" ["l"="-9.399,2.38"]
"apache/skywalking-booster-ui" ["l"="-16.563,2.985"]
"signalfx/splunk-otel-collector" ["l"="-16.242,2.787"]
"googleapis/google-cloud-ruby" ["l"="8.562,-30.903"]
"GoogleCloudPlatform/ruby-docker" ["l"="-16.046,3.23"]
"uptrace/opentelemetry-go-extra" ["l"="-16.215,2.854"]
"go-logr/logr" ["l"="-10.977,0.133"]
"XSAM/otelsql" ["l"="-16.187,2.854"]
"GoogleCloudPlatform/opentelemetry-operations-go" ["l"="-16.219,2.876"]
"uptrace/uptrace" ["l"="-16.203,2.902"]
"rabbitmq/amqp091-go" ["l"="-16.1,2.888"]
"protocolbuffers/protobuf-go" ["l"="-13.183,1.192"]
"keyval-dev/opentelemetry-go-instrumentation" ["l"="-16.254,2.857"]
"grpc-ecosystem/go-grpc-middleware" ["l"="-13.139,1.208"]
"getsentry/sentry-go" ["l"="-16.022,2.4"]
"evalphobia/logrus_sentry" ["l"="-15.967,2.397"]
"getsentry/raven-go" ["l"="-15.971,2.37"]
"uber-go/multierr" ["l"="-13.312,1.507"]
"ztrue/tracerr" ["l"="-13.437,1.65"]
"yurishkuro/opentracing-tutorial" ["l"="-16.328,3.115"]
"jaegertracing/jaeger-client-go" ["l"="-12.868,1.275"]
"opentracing/opentracing-go" ["l"="-12.962,1.354"]
"opentracing/specification" ["l"="-16.335,3.076"]
"jaegertracing/jaeger" ["l"="-10.596,-0.369"]
"jaegertracing/jaeger-operator" ["l"="-16.294,3.097"]
"PacktPublishing/Mastering-Distributed-Tracing" ["l"="-16.307,3.182"]
"opentracing/opentracing-javascript" ["l"="-16.263,3.109"]
"jaegertracing/jaeger-client-node" ["l"="-16.259,3.135"]
"jaegertracing/jaeger-kubernetes" ["l"="-16.299,3.125"]
"jaegertracing/jaeger-client-python" ["l"="-16.339,3.143"]
"opentracing-contrib/java-spring-cloud" ["l"="-16.405,3.113"]
"w3c/trace-context" ["l"="-16.398,2.858"]
"w3c/distributed-tracing-wg" ["l"="-16.423,2.829"]
"uptrace/bun" ["l"="-13.405,1.271"]
"uptrace/go-clickhouse" ["l"="-16.148,2.909"]
"SigNoz/signoz" ["l"="32.261,-26.364"]
"jaegertracing/jaeger-clickhouse" ["l"="-16.153,2.868"]
"uptrace/uptrace-go" ["l"="-16.167,2.89"]
"parca-dev/parca" ["l"="-11.681,1.772"]
"lmangani/cLoki" ["l"="-13.358,-4.182"]
"quickwit-oss/quickwit" ["l"="-10.895,5.508"]
"uptrace/bunrouter" ["l"="-13.597,1.178"]
"ariga/atlas" ["l"="-13.452,1.227"]
"open-telemetry/opentelemetry-js-contrib" ["l"="-16.24,2.992"]
"siimon/prom-client" ["l"="22.365,-36.205"]
"open-telemetry/opentelemetry-js-api" ["l"="-16.246,3.016"]
"mnadeem/nodejs-opentelemetry-tempo" ["l"="-16.24,3.039"]
"aspecto-io/opentelemetry-ext-js" ["l"="-16.212,3.008"]
"jupp0r/prometheus-cpp" ["l"="-16.476,2.929"]
"opentracing/opentracing-cpp" ["l"="-16.454,3.017"]
"civetweb/civetweb" ["l"="-11.738,22.247"]
"sewenew/redis-plus-plus" ["l"="-11.921,22.026"]
"census-instrumentation/opencensus-cpp" ["l"="-16.449,2.933"]
"oliora/ppconsul" ["l"="-16.496,2.881"]
"lewissbaker/cppcoro" ["l"="-11.661,21.93"]
"ultradns/cppmetrics" ["l"="-16.509,2.917"]
"zeromq/azmq" ["l"="-11.576,22.148"]
"nacos-group/nacos-sdk-cpp" ["l"="-16.514,2.896"]
"weaveworks/prom-aggregation-gateway" ["l"="-11.437,-4.846"]
"etcd-cpp-apiv3/etcd-cpp-apiv3" ["l"="-11.981,21.881"]
"eBay/NuRaft" ["l"="-11.124,4.994"]
"facebookexperimental/libunifex" ["l"="-11.596,21.885"]
"RoaringBitmap/CRoaring" ["l"="-14.706,21.971"]
"qmlbook/qt6book" ["l"="-16.592,3.216"]
"jcelerier/qml-creative-controls" ["l"="-10.335,22.184"]
"wu-sheng/sky-walking" ["l"="9.702,21.177"]
"bigbully/Dapper-translation" ["l"="9.634,21.159"]
"apache/incubator-skywalking-ui" ["l"="-16.462,3.079"]
"openzipkin/brave" ["l"="9.497,21.277"]
"alipay/sofa-tracer" ["l"="9.637,21.089"]
"apache/incubator-skywalking" ["l"="8.66,17.079"]
"TinyAllen/rocketbot" ["l"="-16.47,3.101"]
"open-telemetry/opentelemetry-dotnet-instrumentation" ["l"="25.13,17.802"]
"jaegertracing/jaeger-client-cpp" ["l"="-16.449,2.987"]
"open-telemetry/opentelemetry-cpp-contrib" ["l"="-16.439,2.909"]
"aws-samples/amazon-ecs-firelens-under-the-hood" ["l"="-16.421,2.667"]
"opentracing/opentracing-python" ["l"="-16.359,3.1"]
"opentracing/opentracing-csharp" ["l"="23.601,12.94"]
"openzipkin/b3-propagation" ["l"="11.844,25.063"]
"opentracing-contrib/go-stdlib" ["l"="-15.186,0.538"]
"uber/jaeger" ["l"="-12.765,1.751"]
"opentracing/opentracing-php" ["l"="-27.206,-40.589"]
"graphql/libgraphqlparser" ["l"="-16.555,3.164"]
"microsoft/cppgraphqlgen" ["l"="-16.557,3.203"]
"Microsoft/cppgraphqlgen" ["l"="-16.592,3.174"]
"stlab/libraries" ["l"="-11.47,21.826"]
"dosten/graphql-parser-php" ["l"="-16.579,3.187"]
"matt-42/silicon" ["l"="-11.643,22.051"]
"vinniefalco/Beast" ["l"="-11.51,21.876"]
"treefrogframework/treefrog-framework" ["l"="-11.676,22.112"]
"graphql-python/graphql-core" ["l"="22.758,3.313"]
"DataDog/datadog-serverless-functions" ["l"="-16.151,2.345"]
"DataDog/serverless-plugin-datadog" ["l"="-16.153,2.31"]
"jukylin/jaeger-php" ["l"="-27.207,-40.569"]
"DataDog/datadog-api-client-python" ["l"="-16.223,2.381"]
"trueaccord/DogPush" ["l"="-16.244,2.372"]
"zorkian/go-datadog-api" ["l"="-16.195,2.374"]
"DataDog/datadog-go" ["l"="-16.157,2.38"]
"DataDog/chef-datadog" ["l"="-16.255,2.395"]
"DataDog/Miscellany" ["l"="-16.175,2.393"]
"jsocol/pystatsd" ["l"="25.825,0.695"]
"brightcove/dog-watcher" ["l"="-16.232,2.401"]
"DataDog/docker-dd-agent" ["l"="-16.284,2.428"]
"cloudinsight/cloudinsight-agent" ["l"="-12.244,-5.87"]
"stripe/veneur" ["l"="-11.911,-4.96"]
"collectd/collectd" ["l"="-10.746,-0.911"]
"etsy/statsd" ["l"="-14.078,-6.847"]
"DataDog/pupernetes" ["l"="-16.141,2.515"]
"magsther/awesome-opentelemetry" ["l"="-16.248,2.884"]
"openzipkin/zipkin-js" ["l"="-16.237,3.183"]
"openzipkin/zipkin-js-example" ["l"="-16.244,3.223"]
"CloudNativeJS/appmetrics-zipkin" ["l"="-16.201,3.271"]
"openzipkin/zipkin-reporter-java" ["l"="11.825,25.04"]
"openzipkin/zipkin-ruby" ["l"="-16.221,3.222"]
"getporter/porter" ["l"="-16.292,3.572"]
"cnabio/cnab-spec" ["l"="-16.311,3.543"]
"in-toto/in-toto" ["l"="-9.374,0.459"]
"cnabio/duffle" ["l"="-16.29,3.53"]
"blueswen/fastapi-observability" ["l"="-16.423,2.874"]
"softwarebloat/python-tracing-demo" ["l"="-16.446,2.853"]
"Kludex/fastapi-prometheus-grafana" ["l"="22.975,3.162"]
"jaegertracing/jaeger-ui" ["l"="-16.279,3.156"]
"jaegertracing/jaeger-client-csharp" ["l"="23.577,12.905"]
"jaegertracing/documentation" ["l"="-16.276,3.2"]
"openshift/installer" ["l"="-13.172,-3.609"]
"philchia/agollo" ["l"="-16.929,2.953"]
"zouyx/agollo" ["l"="-16.905,2.965"]
"shima-park/agollo" ["l"="-16.944,2.97"]
"apache/skywalking-data-collect-protocol" ["l"="-16.589,2.97"]
"alibaba/one-java-agent" ["l"="-9.687,2.404"]
"alibaba/metrics" ["l"="9.58,21.009"]
"shulieTech/Takin" ["l"="9.837,21.168"]
"apache/skywalking-rover" ["l"="-16.6,3.063"]
"zifeihan/friday" ["l"="-16.548,2.942"]
"spring-cloud/spring-cloud-sleuth" ["l"="9.417,21.084"]
"openzipkin/zipkin" ["l"="9.611,21.465"]
"raphw/byte-buddy" ["l"="9.27,21.429"]
"JCTools/JCTools" ["l"="9.144,21.443"]
"sofastack/sofa-tracer" ["l"="-11.488,5.015"]
"alibaba/transmittable-thread-local" ["l"="9.77,21.291"]
"uber-common/opentracing-python-instrumentation" ["l"="-16.362,3.167"]
"opentracing-contrib/python-flask" ["l"="-16.365,3.147"]
"opentracing-contrib/python-django" ["l"="-16.342,3.164"]
"Yelp/py_zipkin" ["l"="-16.406,3.182"]
"aio-libs/aiojobs" ["l"="22.757,3.506"]
"tomwojcik/starlette-context" ["l"="23.003,3.249"]
"aio-libs/aiozipkin" ["l"="22.687,3.431"]
"SkyAPM/go2sky-plugins" ["l"="-16.656,3.017"]
"alibaba/sentinel-golang" ["l"="-12.839,1.203"]
"nacos-group/nacos-sdk-go" ["l"="-12.792,1.223"]
"apache/skywalking-goapi" ["l"="-16.656,3.056"]
"kr1sp1n/node-vault" ["l"="-16.165,3.242"]
"chiefy/vaulted" ["l"="-16.147,3.27"]
"silas/node-consul" ["l"="-16.188,3.203"]
"x-cubed/event-store-client" ["l"="28.111,-35.076"]
"apolloconfig/agollo" ["l"="-16.971,2.985"]
"withlin/canal-go" ["l"="-13.07,3.378"]
"sentinel-group/sentinel-go-adapters" ["l"="-17.001,2.991"]
"zouyx/agollo_demo" ["l"="-16.936,2.992"]
"apache/skywalking-query-protocol" ["l"="-16.607,3.007"]
"apache/skywalking-agent-test-tool" ["l"="-16.596,2.936"]
"tetratelabs/go2sky" ["l"="-16.529,3.061"]
"JaredTan95/skywalking-tutorials" ["l"="-16.501,3.125"]
"code-robins/foodie-hacker" ["l"="-16.492,3.107"]
"apache/skywalking-nodejs" ["l"="-16.611,2.96"]
"apache/skywalking-nginx-lua" ["l"="-16.541,3.021"]
"SkyAPM/SkyAPM-nodejs" ["l"="-16.633,2.972"]
"apache/skywalking-ui" ["l"="-16.623,2.942"]
"apache/skywalking-website" ["l"="-16.644,2.95"]
"chuan-yun/Molten" ["l"="-26.814,-43.055"]
"apache/skywalking-php" ["l"="-16.706,2.962"]
"laynefyc/xhgui-branch" ["l"="-26.894,-43"]
"mabu233/sdebug" ["l"="-26.992,-42.985"]
"longyan/phpkafka" ["l"="-26.661,-43.905"]
"naver/pinpoint-c-agent" ["l"="-16.73,2.976"]
"openzipkin/zipkin-php" ["l"="-27.14,-40.549"]
"seata/seata-php" ["l"="-26.702,-43.936"]
"swoole/yasd" ["l"="-26.666,-43.917"]
"multilinguals/apollo-php-client" ["l"="-16.803,2.973"]
"apache/skywalking-python" ["l"="-16.639,3.077"]
"SkyAPM/aiops-engine-for-skywalking" ["l"="-16.621,3.093"]
"open-telemetry/opentelemetry-java-contrib" ["l"="-16.427,2.962"]
"mnadeem/boot-opentelemetry-tempo" ["l"="-16.415,2.914"]
"wagslane/go-rabbitmq" ["l"="-16.026,2.897"]
"streadway/amqp" ["l"="-12.916,1.314"]
"rabbitmq/rabbitmq-stream-go-client" ["l"="-16.049,2.874"]
"golang-jwt/jwt" ["l"="-13.193,1.216"]
"michaelklishin/rabbit-hole" ["l"="-16.054,2.833"]
"isayme/go-amqp-reconnect" ["l"="-16.058,2.902"]
"go-gorm/gen" ["l"="-12.941,1.134"]
"testcontainers/testcontainers-go" ["l"="-13.426,1.372"]
"AleksK1NG/Go-gRPC-RabbitMQ-microservice" ["l"="-16.091,-0.389"]
"go-redsync/redsync" ["l"="-12.978,1.301"]
"bwmarrin/snowflake" ["l"="-12.88,1.341"]
"go-co-op/gocron" ["l"="-13.195,1.341"]
"naver/pinpoint-docker" ["l"="-16.687,3.021"]
"skyao/learning-pinpoint" ["l"="-16.724,3.04"]
"WebDollar/Node-WebDollar" ["l"="-16.05,2.436"]
"openebs/litmus" ["l"="-15.232,-1.569"]
"WebDollar/vue-Frontend" ["l"="-16.03,2.451"]
"WebDollar/User-Interface-WebDollar" ["l"="-16.023,2.437"]
"opentracing-contrib/java-spring-web" ["l"="-16.425,3.127"]
"opentracing-contrib/java-spring-jaeger" ["l"="-16.409,3.14"]
"opentracing-contrib/java-kafka-client" ["l"="10.006,22.343"]
"opentracing-contrib/java-jdbc" ["l"="-16.438,3.152"]
"filamoon/pyapollo" ["l"="-16.925,2.92"]
"zouyx/tug" ["l"="-16.892,2.985"]
"zouyx/gopt" ["l"="-16.917,2.987"]
"deislabs/porter" ["l"="-16.296,3.485"]
"Azure/azure-cnab-quickstarts" ["l"="-16.275,3.499"]
"deislabs/oras" ["l"="-11.171,0.01"]
"open-telemetry/opentelemetry-dotnet" ["l"="25.397,17.863"]
"cloudevents/spec" ["l"="-11.008,0.012"]
"gocardless/amqpc" ["l"="-16.023,2.807"]
"opentracing-contrib/javascript-express" ["l"="-16.236,3.133"]
"RisingStack/jaeger-node" ["l"="-16.216,3.144"]
"houseofcat/turbocookedrabbit" ["l"="-15.989,2.886"]
"furdarius/rabbitroutine" ["l"="-15.995,2.918"]
"NeowayLabs/wabbit" ["l"="-15.946,2.898"]
"rueian/rueidis" ["l"="-13.367,1.394"]
"pragmaticivan/nestjs-otel" ["l"="27.097,-34.885"]
"aws-observability/aws-otel-js" ["l"="-16.212,3.025"]
"aspecto-io/malabi" ["l"="-16.189,3.008"]
"jaegertracing/helm-charts" ["l"="-16.282,3.041"]
"elastic/helm-charts" ["l"="-10.67,0.139"]
"kiali/kiali" ["l"="-10.785,0.075"]
"deislabs/duffle" ["l"="-16.292,3.295"]
"kubernetes-monitoring/kubernetes-mixin" ["l"="-11.867,-4.998"]
"elastic/cloud-on-k8s" ["l"="-10.838,0.2"]
"integr8ly/grafana-operator" ["l"="-16.229,3.083"]
"bitnami-labs/kubewatch" ["l"="-10.718,0.328"]
"spotahome/redis-operator" ["l"="-13.249,3.427"]
"kubernetes-sigs/kubebuilder" ["l"="-10.786,0.105"]
"signalfx/observability-workshop" ["l"="-16.237,2.746"]
"signalfx/signalfx-jumpstart" ["l"="-16.223,2.73"]
"cortexproject/cortex" ["l"="-10.516,0.044"]
"improbable-eng/thanos" ["l"="-11.788,-4.888"]
"thanos-io/thanos" ["l"="-10.585,-0.008"]
"m3db/m3" ["l"="-10.6,-0.068"]
"coreos/prometheus-operator" ["l"="-10.886,0.169"]
"google/mtail" ["l"="-11.752,-4.93"]
"open-telemetry/opentelemetry-python-contrib" ["l"="-16.367,2.92"]
"census-instrumentation/opencensus-python" ["l"="27.149,18.382"]
"hynek/structlog" ["l"="22.96,3.751"]
"lightstep/lightstep-tracer-cpp" ["l"="-16.481,3.005"]
"rnburn/zipkin-cpp-opentracing" ["l"="-16.484,3.027"]
"flier/zipkin-cpp" ["l"="-16.476,3.04"]
"aws-observability/aws-otel-lambda" ["l"="-16.379,2.81"]
"aws/amazon-cloudwatch-agent" ["l"="-16.345,2.749"]
"aws-observability/aws-otel-community" ["l"="-16.373,2.782"]
"aws-observability/aws-otel-python" ["l"="-16.339,2.783"]
"aws-observability/aws-otel-playground" ["l"="-16.355,2.783"]
"aws-observability/aws-otel-java-instrumentation" ["l"="-16.322,2.783"]
"open-telemetry/opentelemetry-lambda" ["l"="-16.373,2.837"]
"open-telemetry/opentelemetry-demo" ["l"="-16.256,2.945"]
"kubeshop/tracetest" ["l"="-10.341,0.517"]
"keyval-dev/odigos" ["l"="34.71,-28.352"]
"grafana/tns" ["l"="-16.204,2.953"]
"observIQ/bindplane-op" ["l"="-16.175,2.976"]
"CtrlSpice/otel-desktop-viewer" ["l"="-16.171,2.95"]
"GoogleCloudPlatform/opentelemetry-operations-python" ["l"="-16.394,2.892"]
"reactjs/uk.reactjs.org" ["l"="-16.266,3.422"]
"adobe/helix-pipeline" ["l"="-16.283,3.409"]
"NativeScript/nativescript-facebook" ["l"="17.174,36.648"]
"cactus/go-statsd-client" ["l"="-16.193,2.215"]
"peterbourgon/g2s" ["l"="-16.199,2.183"]
"quipo/statsd" ["l"="-16.189,2.241"]
"deislabs/cnab-spec" ["l"="-16.291,3.382"]
"deislabs/bundles" ["l"="-16.296,3.324"]
"weaveworks-experiments/kspan" ["l"="-10.494,0.448"]
"kubernetes-sigs/gateway-api" ["l"="-10.631,0.113"]
"lightstep/lightstep-tracer-javascript" ["l"="-16.213,3.121"]
"census-instrumentation/opencensus-node" ["l"="-16.187,3.109"]
"rochdev/datadog-tracer-js" ["l"="-16.228,3.109"]
"RisingStack/trace-nodejs" ["l"="12.184,-32.405"]
"opentracing-contrib/python-grpc" ["l"="-16.338,3.194"]
"cncf/sig-app-delivery" ["l"="-10.789,0.335"]
"deislabs/example-bundles" ["l"="-16.311,3.402"]
"Kindling-project/kindling" ["l"="-16.643,3.116"]
"Kindling-project/space-capsule" ["l"="-16.663,3.136"]
"alexcesaro/statsd" ["l"="-16.183,2.272"]
"zifeihan/eprofiler-idea" ["l"="-16.561,2.917"]
"makasim/sentryhook" ["l"="-15.936,2.399"]
"BruceWW/pyapollo" ["l"="-16.945,2.897"]
"rabbitmq/rabbitmq-stream-java-client" ["l"="-16.021,2.858"]
"DataDog/ecommerce-workshop" ["l"="-16.187,2.348"]
"signalfx/signalfx-python-tracing" ["l"="-16.365,3.2"]
"opentracing-contrib/java-specialagent" ["l"="-16.398,3.214"]
"opentracing-contrib/java-agent" ["l"="-16.402,3.251"]
"opentracing-contrib/java-specialagent-demo" ["l"="-16.411,3.236"]
"aspecto-io/sns-sqs-big-payload" ["l"="-16.175,3.024"]
"NeowayLabs/klb" ["l"="-15.887,2.9"]
"signalfx/splunk-otel-java" ["l"="-16.228,2.771"]
"signalfx/splunk-otel-python" ["l"="-16.213,2.778"]
"signalfx/signalfx-agent" ["l"="-16.216,2.753"]
"signalfx/splunk-otel-collector-chart" ["l"="-16.255,2.758"]
"jiaqi/jmxterm" ["l"="-16.027,2.286"]
"vladimirvivien/jmx-cli" ["l"="-15.991,2.254"]
"cjmx/cjmx" ["l"="-16.022,2.253"]
"qiajigou/flask-zipkin" ["l"="-16.429,3.212"]
"javascript-tutorial/uk.javascript.info" ["l"="-16.242,3.449"]
"opentracing-contrib/java-grpc" ["l"="-16.393,3.156"]
"CloudNativeJS/appmetrics-prometheus" ["l"="-16.191,3.295"]
"equinix-labs/otel-cli" ["l"="-16.137,2.956"]
"zouyx/zouyx.github.io" ["l"="-16.934,3.011"]
"zouyx/agollo-agent" ["l"="-16.948,3.009"]
"terraform-providers/terraform-provider-pagerduty" ["l"="-16.22,2.352"]
"open-telemetry/opentelemetry-collector-builder" ["l"="-16.28,2.873"]
"open-telemetry/opentelemetry-demo-webstore" ["l"="-16.278,2.853"]
"aws-samples/amazon-cloudwatch-container-insights" ["l"="-16.331,2.705"]
"aws/amazon-cloudwatch-agent-test" ["l"="-16.331,2.73"]
"aws/amazon-ssm-agent" ["l"="-9.12,-1.273"]
"vladimirvivien/clamshell-cli" ["l"="-15.967,2.227"]
"cnabio/cnab-go" ["l"="-16.335,3.563"]
"ricardolonga/jsongo" ["l"="-15.868,2.881"]
"apache/skywalking-eyes" ["l"="-16.668,3.073"]
"nhatthm/otelsql" ["l"="-16.16,2.828"]
"peterbourgon/g2g" ["l"="-16.204,2.153"]
"signalfx/tracing-examples" ["l"="-16.195,2.727"]
"CloudNativeJS/cloud-health" ["l"="-16.18,3.344"]
"CloudNativeJS/cloud-health-connect" ["l"="-16.175,3.322"]
"CloudNativeJS/helm" ["l"="-16.155,3.35"]
"CloudNativeJS/docker" ["l"="-16.153,3.332"]
"JulienBalestra/kube-csr" ["l"="-16.151,2.544"]
"JulienBalestra/enjoliver" ["l"="-16.129,2.542"]
"open-telemetry/opamp-spec" ["l"="-16.1,3.003"]
"open-telemetry/opamp-go" ["l"="-16.124,2.995"]
"RisingStack/opentracing-auto" ["l"="-16.171,3.155"]
"open-telemetry/opentelemetry-go-instrumentation" ["l"="-16.255,2.817"]
"open-telemetry/opentelemetry-ebpf" ["l"="-16.223,2.819"]
"keyval-dev/offsets-tracker" ["l"="-16.243,2.833"]
"NeowayLabs/nash" ["l"="-15.839,2.908"]
"NeowayLabs/neosearch" ["l"="-15.809,2.904"]
"NeowayLabs/nashcomplete" ["l"="-15.825,2.89"]
"NeowayLabs/cloud-machine" ["l"="-15.828,2.93"]
"tiago4orion/enzo" ["l"="-15.819,2.917"]
"sentinel-group/sentinel-go-datasources" ["l"="-17.021,2.993"]
}