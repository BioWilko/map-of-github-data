digraph G {
"biolab/orange3" -> "biolab/orange"
"biolab/orange3" -> "altair-viz/altair" ["e"=1]
"biolab/orange3" -> "statsmodels/statsmodels" ["e"=1]
"biolab/orange3" -> "biolab/orange3-text"
"biolab/orange3" -> "automl/auto-sklearn"
"biolab/orange3" -> "dask/dask" ["e"=1]
"biolab/orange3" -> "mlflow/mlflow"
"biolab/orange3" -> "mwaskom/seaborn" ["e"=1]
"biolab/orange3" -> "plotly/dash" ["e"=1]
"biolab/orange3" -> "bokeh/bokeh" ["e"=1]
"biolab/orange3" -> "PAIR-code/facets"
"biolab/orange3" -> "DistrictDataLabs/yellowbrick"
"biolab/orange3" -> "man-group/dtale"
"biolab/orange3" -> "h2oai/h2o-3"
"biolab/orange3" -> "modin-project/modin"
"shankarpandala/lazypredict" -> "sfu-db/dataprep"
"shankarpandala/lazypredict" -> "oegedijk/explainerdashboard"
"shankarpandala/lazypredict" -> "lux-org/lux"
"shankarpandala/lazypredict" -> "AutoViML/AutoViz"
"shankarpandala/lazypredict" -> "pycaret/pycaret"
"shankarpandala/lazypredict" -> "MAIF/shapash"
"shankarpandala/lazypredict" -> "fbdesignpro/sweetviz"
"shankarpandala/lazypredict" -> "NannyML/nannyml"
"shankarpandala/lazypredict" -> "Nixtla/statsforecast" ["e"=1]
"shankarpandala/lazypredict" -> "unit8co/darts" ["e"=1]
"shankarpandala/lazypredict" -> "optuna/optuna"
"shankarpandala/lazypredict" -> "online-ml/river"
"shankarpandala/lazypredict" -> "deepchecks/deepchecks"
"shankarpandala/lazypredict" -> "evidentlyai/evidently"
"shankarpandala/lazypredict" -> "mljar/mljar-supervised"
"dmlc/xgboost" -> "Microsoft/LightGBM"
"dmlc/xgboost" -> "scikit-learn/scikit-learn" ["e"=1]
"dmlc/xgboost" -> "fchollet/keras" ["e"=1]
"dmlc/xgboost" -> "facebookresearch/fastText" ["e"=1]
"dmlc/xgboost" -> "microsoft/LightGBM"
"dmlc/xgboost" -> "dmlc/mxnet" ["e"=1]
"dmlc/xgboost" -> "slundberg/shap"
"dmlc/xgboost" -> "google-research/bert" ["e"=1]
"dmlc/xgboost" -> "catboost/catboost"
"dmlc/xgboost" -> "facebookresearch/faiss" ["e"=1]
"dmlc/xgboost" -> "tensorflow/models" ["e"=1]
"dmlc/xgboost" -> "pytorch/pytorch" ["e"=1]
"dmlc/xgboost" -> "aymericdamien/TensorFlow-Examples" ["e"=1]
"dmlc/xgboost" -> "BVLC/caffe" ["e"=1]
"dmlc/xgboost" -> "fastai/fastai" ["e"=1]
"iterative/cml" -> "iterative/dvc"
"iterative/cml" -> "visenger/awesome-mlops" ["e"=1]
"iterative/cml" -> "bentoml/BentoML"
"iterative/cml" -> "evidentlyai/evidently"
"iterative/cml" -> "quantumblacklabs/kedro"
"iterative/cml" -> "EthicalML/awesome-production-machine-learning" ["e"=1]
"iterative/cml" -> "iterative/mlem"
"iterative/cml" -> "feast-dev/feast"
"iterative/cml" -> "deepchecks/deepchecks"
"iterative/cml" -> "cortexlabs/cortex"
"iterative/cml" -> "great-expectations/great_expectations" ["e"=1]
"iterative/cml" -> "mlflow/mlflow"
"iterative/cml" -> "Netflix/metaflow"
"iterative/cml" -> "SeldonIO/seldon-core"
"iterative/cml" -> "kelvins/awesome-mlops"
"epfml/ML_course" -> "epfml/OptML_course"
"epfml/ML_course" -> "zifeo/EPFL"
"epfml/ML_course" -> "sweng-epfl/public"
"epfml/ML_course" -> "epfl-ada/2020"
"epfml/ML_course" -> "epfl-ada/2021"
"epfml/ML_course" -> "LSIR/DIS"
"epfml/ML_course" -> "epfl-ada/ADA2017-Tutorials"
"epfml/ML_course" -> "HexHive/thesis_template"
"epfml/ML_course" -> "epfl-ada/ADA2017-Homeworks"
"epfml/ML_course" -> "epfl-ada/2019"
"epfml/ML_course" -> "epfl-ada/2022"
"epfml/ML_course" -> "ADAEPFL/Homework"
"epfml/ML_course" -> "mdeff/ntds_2017"
"epfml/ML_course" -> "epfml/opt-shortcourse"
"epfml/ML_course" -> "epfml/autoTrain"
"epfml/OptML_course" -> "epfml/ML_course"
"epfml/OptML_course" -> "ermongroup/cs228-notes"
"epfml/OptML_course" -> "epfml/autoTrain"
"epfml/OptML_course" -> "zifeo/EPFL"
"epfml/OptML_course" -> "janosh/awesome-normalizing-flows" ["e"=1]
"epfml/OptML_course" -> "vahidk/EffectivePyTorch" ["e"=1]
"epfml/OptML_course" -> "epfml/opt-shortcourse"
"epfml/OptML_course" -> "cvxgrp/cvx_short_course" ["e"=1]
"epfml/OptML_course" -> "percyliang/cs229t" ["e"=1]
"epfml/OptML_course" -> "LSIR/DIS"
"tensorflow/tflite-support" -> "tensorflow/runtime" ["e"=1]
"tensorflow/tflite-support" -> "tensorflow/profiler"
"marcotcr/lime" -> "slundberg/shap"
"marcotcr/lime" -> "TeamHG-Memex/eli5"
"marcotcr/lime" -> "scikit-learn-contrib/imbalanced-learn"
"marcotcr/lime" -> "hyperopt/hyperopt"
"marcotcr/lime" -> "automl/auto-sklearn"
"marcotcr/lime" -> "interpretml/interpret"
"marcotcr/lime" -> "blue-yonder/tsfresh"
"marcotcr/lime" -> "dmlc/xgboost"
"marcotcr/lime" -> "rasbt/mlxtend"
"marcotcr/lime" -> "facebookresearch/fastText" ["e"=1]
"marcotcr/lime" -> "PAIR-code/facets"
"marcotcr/lime" -> "mlflow/mlflow"
"marcotcr/lime" -> "DistrictDataLabs/yellowbrick"
"marcotcr/lime" -> "pandas-profiling/pandas-profiling"
"marcotcr/lime" -> "lmcinnes/umap"
"christophM/interpretable-ml-book" -> "MingchaoZhu/InterpretableMLBook" ["e"=1]
"christophM/interpretable-ml-book" -> "jphall663/awesome-machine-learning-interpretability"
"christophM/interpretable-ml-book" -> "marcotcr/lime"
"christophM/interpretable-ml-book" -> "slundberg/shap"
"christophM/interpretable-ml-book" -> "interpretml/interpret"
"christophM/interpretable-ml-book" -> "uber/causalml" ["e"=1]
"christophM/interpretable-ml-book" -> "lopusz/awesome-interpretable-machine-learning"
"christophM/interpretable-ml-book" -> "christophM/iml"
"christophM/interpretable-ml-book" -> "rasbt/mlxtend"
"christophM/interpretable-ml-book" -> "SeldonIO/alibi"
"christophM/interpretable-ml-book" -> "TeamHG-Memex/eli5"
"christophM/interpretable-ml-book" -> "ctgk/PRML" ["e"=1]
"christophM/interpretable-ml-book" -> "scikit-learn-contrib/imbalanced-learn"
"christophM/interpretable-ml-book" -> "pytorch/captum" ["e"=1]
"christophM/interpretable-ml-book" -> "microsoft/interpret"
"tensorflow/docs" -> "tensorflow/community"
"tensorflow/docs" -> "tensorflow/datasets"
"tensorflow/docs" -> "tensorflow/examples"
"tensorflow/docs" -> "tensorflow/tensorboard"
"tensorflow/docs" -> "zalandoresearch/fashion-mnist"
"tensorflow/docs" -> "tensorflow/hub"
"tensorflow/docs" -> "keras-team/keras" ["e"=1]
"tensorflow/docs" -> "tensorflow/tensor2tensor" ["e"=1]
"tensorflow/docs" -> "google-research/bert" ["e"=1]
"tensorflow/docs" -> "lmoroney/dlaicourse"
"tensorflow/docs" -> "czy36mengfei/tensorflow2_tutorials_chinese" ["e"=1]
"tensorflow/docs" -> "tensorflow/serving"
"tensorflow/docs" -> "tensorflow/models" ["e"=1]
"tensorflow/docs" -> "pytorch/tutorials" ["e"=1]
"tensorflow/docs" -> "fchollet/deep-learning-with-python-notebooks" ["e"=1]
"tensorflow/examples" -> "tensorflow/docs"
"tensorflow/examples" -> "tensorflow/datasets"
"tensorflow/examples" -> "tensorflow/tfjs-models" ["e"=1]
"tensorflow/examples" -> "google/mediapipe" ["e"=1]
"tensorflow/examples" -> "android/camera-samples" ["e"=1]
"tensorflow/examples" -> "googlesamples/mlkit" ["e"=1]
"tensorflow/examples" -> "lutzroeder/netron" ["e"=1]
"tensorflow/examples" -> "Tencent/ncnn" ["e"=1]
"tensorflow/examples" -> "tensorflow/models" ["e"=1]
"tensorflow/examples" -> "alibaba/MNN" ["e"=1]
"tensorflow/examples" -> "tensorflow/hub"
"tensorflow/examples" -> "EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi" ["e"=1]
"tensorflow/examples" -> "tzutalin/labelImg" ["e"=1]
"tensorflow/examples" -> "lmoroney/dlaicourse"
"tensorflow/examples" -> "tensorflow/tensorboard"
"awslabs/autogluon" -> "microsoft/nni"
"awslabs/autogluon" -> "keras-team/autokeras"
"awslabs/autogluon" -> "automl/auto-sklearn"
"awslabs/autogluon" -> "EpistasisLab/tpot"
"awslabs/autogluon" -> "optuna/optuna"
"awslabs/autogluon" -> "hibayesian/awesome-automl-papers" ["e"=1]
"awslabs/autogluon" -> "awslabs/gluon-ts" ["e"=1]
"awslabs/autogluon" -> "automl/Auto-PyTorch" ["e"=1]
"awslabs/autogluon" -> "mljar/mljar-supervised"
"awslabs/autogluon" -> "dmlc/gluon-cv" ["e"=1]
"awslabs/autogluon" -> "pycaret/pycaret"
"awslabs/autogluon" -> "microsoft/FLAML"
"awslabs/autogluon" -> "google/automl" ["e"=1]
"awslabs/autogluon" -> "dreamquark-ai/tabnet" ["e"=1]
"awslabs/autogluon" -> "hyperopt/hyperopt"
"FeatureLabs/featuretools" -> "EpistasisLab/tpot"
"FeatureLabs/featuretools" -> "FeatureLabs/compose"
"FeatureLabs/featuretools" -> "automl/auto-sklearn"
"FeatureLabs/featuretools" -> "alteryx/evalml"
"FeatureLabs/featuretools" -> "keras-team/autokeras"
"FeatureLabs/featuretools" -> "solegalli/feature_engine"
"FeatureLabs/featuretools" -> "AxeldeRomblay/MLBox"
"FeatureLabs/featuretools" -> "ClimbsRocks/auto_ml"
"FeatureLabs/featuretools" -> "scikit-learn-contrib/category_encoders"
"FeatureLabs/featuretools" -> "Featuretools/predict-next-purchase" ["e"=1]
"FeatureLabs/featuretools" -> "hyperopt/hyperopt-sklearn"
"FeatureLabs/featuretools" -> "blue-yonder/tsfresh"
"FeatureLabs/featuretools" -> "scikit-learn-contrib/boruta_py"
"FeatureLabs/featuretools" -> "TeamHG-Memex/eli5"
"FeatureLabs/featuretools" -> "pandas-profiling/pandas-profiling"
"airbnb/knowledge-repo" -> "apache/incubator-airflow" ["e"=1]
"airbnb/knowledge-repo" -> "nteract/papermill" ["e"=1]
"airbnb/knowledge-repo" -> "airbnb/superset"
"airbnb/knowledge-repo" -> "great-expectations/great_expectations" ["e"=1]
"airbnb/knowledge-repo" -> "rhiever/tpot"
"airbnb/knowledge-repo" -> "airbnb/aerosolve" ["e"=1]
"airbnb/knowledge-repo" -> "facebookincubator/prophet"
"airbnb/knowledge-repo" -> "drivendata/cookiecutter-data-science"
"airbnb/knowledge-repo" -> "PAIR-code/facets"
"airbnb/knowledge-repo" -> "nteract/nteract" ["e"=1]
"airbnb/knowledge-repo" -> "Featuretools/featuretools"
"airbnb/knowledge-repo" -> "fishtown-analytics/dbt" ["e"=1]
"airbnb/knowledge-repo" -> "airbnb/caravel" ["e"=1]
"airbnb/knowledge-repo" -> "quantumblacklabs/kedro"
"airbnb/knowledge-repo" -> "pandas-profiling/pandas-profiling"
"ray-project/ray" -> "google/jax" ["e"=1]
"ray-project/ray" -> "openai/baselines" ["e"=1]
"ray-project/ray" -> "modin-project/modin"
"ray-project/ray" -> "dask/dask" ["e"=1]
"ray-project/ray" -> "mlflow/mlflow"
"ray-project/ray" -> "openai/gym" ["e"=1]
"ray-project/ray" -> "slundberg/shap"
"ray-project/ray" -> "horovod/horovod" ["e"=1]
"ray-project/ray" -> "PyTorchLightning/pytorch-lightning" ["e"=1]
"ray-project/ray" -> "facebookresearch/faiss" ["e"=1]
"ray-project/ray" -> "pytorch/pytorch" ["e"=1]
"ray-project/ray" -> "dennybritz/reinforcement-learning" ["e"=1]
"ray-project/ray" -> "streamlit/streamlit" ["e"=1]
"ray-project/ray" -> "dmlc/xgboost"
"ray-project/ray" -> "openai/spinningup" ["e"=1]
"h2oai/h2o-3" -> "h2oai/h2o-tutorials" ["e"=1]
"h2oai/h2o-3" -> "automl/auto-sklearn"
"h2oai/h2o-3" -> "h2oai/sparkling-water" ["e"=1]
"h2oai/h2o-3" -> "dmlc/xgboost"
"h2oai/h2o-3" -> "EpistasisLab/tpot"
"h2oai/h2o-3" -> "mlflow/mlflow"
"h2oai/h2o-3" -> "catboost/catboost"
"h2oai/h2o-3" -> "Microsoft/LightGBM"
"h2oai/h2o-3" -> "hyperopt/hyperopt"
"h2oai/h2o-3" -> "szilard/benchm-ml" ["e"=1]
"h2oai/h2o-3" -> "Featuretools/featuretools"
"h2oai/h2o-3" -> "qinwf/awesome-R" ["e"=1]
"h2oai/h2o-3" -> "keras-team/autokeras"
"h2oai/h2o-3" -> "rasbt/mlxtend"
"h2oai/h2o-3" -> "slundberg/shap"
"ClimbsRocks/auto_ml" -> "automl/auto-sklearn"
"ClimbsRocks/auto_ml" -> "reiinakano/xcessiv"
"ClimbsRocks/auto_ml" -> "AxeldeRomblay/MLBox"
"ClimbsRocks/auto_ml" -> "rhiever/tpot"
"ClimbsRocks/auto_ml" -> "EpistasisLab/tpot"
"ClimbsRocks/auto_ml" -> "Featuretools/featuretools"
"ClimbsRocks/auto_ml" -> "ClimbsRocks/machineJS"
"ClimbsRocks/auto_ml" -> "hyperopt/hyperopt-sklearn"
"ClimbsRocks/auto_ml" -> "TeamHG-Memex/eli5"
"ClimbsRocks/auto_ml" -> "reiinakano/scikit-plot"
"ClimbsRocks/auto_ml" -> "keras-team/autokeras"
"ClimbsRocks/auto_ml" -> "HDI-Project/ATM"
"ClimbsRocks/auto_ml" -> "scikit-learn-contrib/categorical-encoding"
"ClimbsRocks/auto_ml" -> "salesforce/TransmogrifAI"
"ClimbsRocks/auto_ml" -> "scikit-optimize/scikit-optimize"
"StatMixedML/XGBoostLSS" -> "StatMixedML/LightGBMLSS"
"StatMixedML/XGBoostLSS" -> "StatMixedML/CatBoostLSS"
"StatMixedML/XGBoostLSS" -> "stanfordmlgroup/ngboost"
"StatMixedML/XGBoostLSS" -> "fabsig/GPBoost"
"StatMixedML/XGBoostLSS" -> "CDonnerer/xgboost-distribution"
"StatMixedML/XGBoostLSS" -> "scikit-learn-contrib/MAPIE"
"StatMixedML/XGBoostLSS" -> "cerlymarco/linear-tree"
"StatMixedML/XGBoostLSS" -> "Ekeany/Boruta-Shap"
"StatMixedML/XGBoostLSS" -> "henrikbostrom/crepes"
"StatMixedML/XGBoostLSS" -> "elephaint/pgbm"
"StatMixedML/XGBoostLSS" -> "cerlymarco/shap-hypetune"
"StatMixedML/XGBoostLSS" -> "StatMixedML/Py-BoostLSS"
"StatMixedML/XGBoostLSS" -> "carlomazzaferro/scikit-hts" ["e"=1]
"StatMixedML/XGBoostLSS" -> "cod3licious/autofeat"
"mlflow/mlflow" -> "iterative/dvc"
"mlflow/mlflow" -> "kubeflow/kubeflow"
"mlflow/mlflow" -> "slundberg/shap"
"mlflow/mlflow" -> "ray-project/ray"
"mlflow/mlflow" -> "EthicalML/awesome-production-machine-learning" ["e"=1]
"mlflow/mlflow" -> "streamlit/streamlit" ["e"=1]
"mlflow/mlflow" -> "Netflix/metaflow"
"mlflow/mlflow" -> "bentoml/BentoML"
"mlflow/mlflow" -> "visenger/awesome-mlops" ["e"=1]
"mlflow/mlflow" -> "great-expectations/great_expectations" ["e"=1]
"mlflow/mlflow" -> "optuna/optuna"
"mlflow/mlflow" -> "SeldonIO/seldon-core"
"mlflow/mlflow" -> "feast-dev/feast"
"mlflow/mlflow" -> "google/jax" ["e"=1]
"mlflow/mlflow" -> "dask/dask" ["e"=1]
"ludwig-ai/ludwig" -> "feast-dev/feast"
"ludwig-ai/ludwig" -> "evidentlyai/evidently"
"ludwig-ai/ludwig" -> "microsoft/FLAML"
"ludwig-ai/ludwig" -> "pycaret/pycaret"
"ludwig-ai/ludwig" -> "bentoml/BentoML"
"ludwig-ai/ludwig" -> "fugue-project/fugue"
"ludwig-ai/ludwig" -> "deepchecks/deepchecks"
"ludwig-ai/ludwig" -> "uber/orbit" ["e"=1]
"ludwig-ai/ludwig" -> "flyteorg/flyte"
"ludwig-ai/ludwig" -> "whylabs/whylogs"
"ludwig-ai/ludwig" -> "Nixtla/statsforecast" ["e"=1]
"ludwig-ai/ludwig" -> "PyTorchLightning/lightning-flash" ["e"=1]
"ludwig-ai/ludwig" -> "snorkel-team/snorkel" ["e"=1]
"ludwig-ai/ludwig" -> "SeldonIO/alibi-detect"
"ludwig-ai/ludwig" -> "mljar/mljar-supervised"
"replicate/cog-stable-diffusion" -> "replicate/dreambooth"
"replicate/cog-stable-diffusion" -> "replicate/cog"
"tensorflow/io" -> "tensorflow/custom-op"
"tensorflow/io" -> "tensorflow/runtime" ["e"=1]
"tensorflow/io" -> "tensorflow/profiler"
"tensorflow/io" -> "tensorflow/tfx"
"tensorflow/io" -> "tensorflow/estimator"
"tensorflow/io" -> "tensorflow/mesh" ["e"=1]
"tensorflow/io" -> "tensorflow/addons"
"tensorflow/io" -> "tensorflow/transform"
"tensorflow/io" -> "tensorflow/community"
"tensorflow/io" -> "tensorflow/ecosystem" ["e"=1]
"tensorflow/io" -> "tensorflow/networking"
"tensorflow/io" -> "tensorflow/text"
"tensorflow/io" -> "NVIDIA/HugeCTR" ["e"=1]
"tensorflow/io" -> "tensorflow/data-validation"
"tensorflow/io" -> "tensorflow/build"
"Netflix/metaflow" -> "mlflow/mlflow"
"Netflix/metaflow" -> "iterative/dvc"
"Netflix/metaflow" -> "great-expectations/great_expectations" ["e"=1]
"Netflix/metaflow" -> "bentoml/BentoML"
"Netflix/metaflow" -> "feast-dev/feast"
"Netflix/metaflow" -> "modin-project/modin"
"Netflix/metaflow" -> "quantumblacklabs/kedro"
"Netflix/metaflow" -> "PrefectHQ/prefect" ["e"=1]
"Netflix/metaflow" -> "nteract/papermill" ["e"=1]
"Netflix/metaflow" -> "vaexio/vaex"
"Netflix/metaflow" -> "dagster-io/dagster" ["e"=1]
"Netflix/metaflow" -> "kubeflow/kubeflow"
"Netflix/metaflow" -> "cortexlabs/cortex"
"Netflix/metaflow" -> "SeldonIO/seldon-core"
"Netflix/metaflow" -> "streamlit/streamlit" ["e"=1]
"jphall663/awesome-machine-learning-interpretability" -> "lopusz/awesome-interpretable-machine-learning"
"jphall663/awesome-machine-learning-interpretability" -> "jphall663/interpretable_machine_learning_with_python"
"jphall663/awesome-machine-learning-interpretability" -> "pbiecek/xai_resources"
"jphall663/awesome-machine-learning-interpretability" -> "h2oai/mli-resources"
"jphall663/awesome-machine-learning-interpretability" -> "interpretml/interpret"
"jphall663/awesome-machine-learning-interpretability" -> "wangyongjie-ntu/Awesome-explainable-AI"
"jphall663/awesome-machine-learning-interpretability" -> "EthicalML/xai"
"jphall663/awesome-machine-learning-interpretability" -> "pytorch/captum" ["e"=1]
"jphall663/awesome-machine-learning-interpretability" -> "microsoft/interpret"
"jphall663/awesome-machine-learning-interpretability" -> "marcotcr/lime"
"jphall663/awesome-machine-learning-interpretability" -> "christophM/interpretable-ml-book"
"jphall663/awesome-machine-learning-interpretability" -> "SeldonIO/alibi"
"jphall663/awesome-machine-learning-interpretability" -> "slundberg/shap"
"jphall663/awesome-machine-learning-interpretability" -> "TeamHG-Memex/eli5"
"jphall663/awesome-machine-learning-interpretability" -> "tensorflow/lucid" ["e"=1]
"Featuretools/featuretools" -> "automl/auto-sklearn"
"Featuretools/featuretools" -> "EpistasisLab/tpot"
"Featuretools/featuretools" -> "scikit-learn-contrib/imbalanced-learn"
"Featuretools/featuretools" -> "TeamHG-Memex/eli5"
"Featuretools/featuretools" -> "jhfjhfj1/autokeras"
"Featuretools/featuretools" -> "blue-yonder/tsfresh"
"Featuretools/featuretools" -> "rasbt/mlxtend"
"Featuretools/featuretools" -> "hyperopt/hyperopt"
"Featuretools/featuretools" -> "Microsoft/LightGBM"
"Featuretools/featuretools" -> "DistrictDataLabs/yellowbrick"
"Featuretools/featuretools" -> "WillKoehrsen/feature-selector"
"Featuretools/featuretools" -> "marcotcr/lime"
"Featuretools/featuretools" -> "ClimbsRocks/auto_ml"
"Featuretools/featuretools" -> "PAIR-code/facets"
"Featuretools/featuretools" -> "tensorflow/adanet"
"probml/pml-book" -> "probml/pyprobml"
"probml/pml-book" -> "probml/pml2-book"
"probml/pml-book" -> "mml-book/mml-book.github.io" ["e"=1]
"probml/pml-book" -> "google/jax" ["e"=1]
"probml/pml-book" -> "pyro-ppl/pyro"
"probml/pml-book" -> "ctgk/PRML" ["e"=1]
"probml/pml-book" -> "d2l-ai/d2l-en" ["e"=1]
"probml/pml-book" -> "arogozhnikov/einops" ["e"=1]
"probml/pml-book" -> "pyro-ppl/numpyro" ["e"=1]
"probml/pml-book" -> "avehtari/BDA_course_Aalto" ["e"=1]
"probml/pml-book" -> "janosh/awesome-normalizing-flows" ["e"=1]
"probml/pml-book" -> "rmcelreath/stat_rethinking_2022" ["e"=1]
"probml/pml-book" -> "Atcold/pytorch-Deep-Learning" ["e"=1]
"probml/pml-book" -> "rougier/scientific-visualization-book" ["e"=1]
"probml/pml-book" -> "cornellius-gp/gpytorch"
"evidentlyai/evidently" -> "SeldonIO/alibi-detect"
"evidentlyai/evidently" -> "deepchecks/deepchecks"
"evidentlyai/evidently" -> "whylabs/whylogs"
"evidentlyai/evidently" -> "NannyML/nannyml"
"evidentlyai/evidently" -> "bentoml/BentoML"
"evidentlyai/evidently" -> "visenger/awesome-mlops" ["e"=1]
"evidentlyai/evidently" -> "feast-dev/feast"
"evidentlyai/evidently" -> "online-ml/river"
"evidentlyai/evidently" -> "great-expectations/great_expectations" ["e"=1]
"evidentlyai/evidently" -> "iterative/cml"
"evidentlyai/evidently" -> "oegedijk/explainerdashboard"
"evidentlyai/evidently" -> "SeldonIO/alibi"
"evidentlyai/evidently" -> "MAIF/shapash"
"evidentlyai/evidently" -> "zenml-io/zenml"
"evidentlyai/evidently" -> "mlflow/mlflow"
"TurnerSoftware/MongoFramework" -> "dj-nitehawk/MongoDB.Entities"
"TurnerSoftware/MongoFramework" -> "alexandre-spieser/mongodb-generic-repository"
"TurnerSoftware/MongoFramework" -> "FluentDateTime/FluentDateTime" ["e"=1]
"TurnerSoftware/MongoFramework" -> "TanvirArjel/EFCore.GenericRepository" ["e"=1]
"TurnerSoftware/MongoFramework" -> "TurnerSoftware/CacheTower" ["e"=1]
"TurnerSoftware/MongoFramework" -> "matteofabbri/AspNetCore.Identity.Mongo"
"TurnerSoftware/MongoFramework" -> "enisn/AutoFilterer"
"pgmpy/pgmpy" -> "pgmpy/pgmpy_notebook"
"pgmpy/pgmpy" -> "jmschrei/pomegranate"
"pgmpy/pgmpy" -> "eBay/bayesian-belief-networks"
"pgmpy/pgmpy" -> "quantumblacklabs/causalnex" ["e"=1]
"pgmpy/pgmpy" -> "blei-lab/edward"
"pgmpy/pgmpy" -> "pymc-devs/pymc3"
"pgmpy/pgmpy" -> "microsoft/dowhy" ["e"=1]
"pgmpy/pgmpy" -> "bayespy/bayespy"
"pgmpy/pgmpy" -> "rguo12/awesome-causality-algorithms" ["e"=1]
"pgmpy/pgmpy" -> "uber/causalml" ["e"=1]
"pgmpy/pgmpy" -> "pyro-ppl/pyro"
"pgmpy/pgmpy" -> "pymc-devs/pymc"
"pgmpy/pgmpy" -> "erdogant/bnlearn" ["e"=1]
"pgmpy/pgmpy" -> "FenTechSolutions/CausalDiscoveryToolbox" ["e"=1]
"pgmpy/pgmpy" -> "tensorflow/probability"
"vaexio/vaex" -> "modin-project/modin"
"vaexio/vaex" -> "dask/dask" ["e"=1]
"vaexio/vaex" -> "pandas-profiling/pandas-profiling"
"vaexio/vaex" -> "rapidsai/cudf"
"vaexio/vaex" -> "altair-viz/altair" ["e"=1]
"vaexio/vaex" -> "streamlit/streamlit" ["e"=1]
"vaexio/vaex" -> "databricks/koalas"
"vaexio/vaex" -> "slundberg/shap"
"vaexio/vaex" -> "jmcarpenter2/swifter"
"vaexio/vaex" -> "pola-rs/polars" ["e"=1]
"vaexio/vaex" -> "great-expectations/great_expectations" ["e"=1]
"vaexio/vaex" -> "pycaret/pycaret"
"vaexio/vaex" -> "alan-turing-institute/sktime" ["e"=1]
"vaexio/vaex" -> "ray-project/ray"
"vaexio/vaex" -> "iterative/dvc"
"BayesWitnesses/m2cgen" -> "nok/sklearn-porter"
"BayesWitnesses/m2cgen" -> "Wookai/paper-tips-and-tricks" ["e"=1]
"BayesWitnesses/m2cgen" -> "Featuretools/featuretools"
"BayesWitnesses/m2cgen" -> "microsoft/interpret"
"BayesWitnesses/m2cgen" -> "microsoft/hummingbird"
"BayesWitnesses/m2cgen" -> "reiinakano/scikit-plot"
"BayesWitnesses/m2cgen" -> "Luolc/AdaBound" ["e"=1]
"BayesWitnesses/m2cgen" -> "dmlc/treelite" ["e"=1]
"BayesWitnesses/m2cgen" -> "minimaxir/automl-gs"
"BayesWitnesses/m2cgen" -> "cortexlabs/cortex"
"BayesWitnesses/m2cgen" -> "rasbt/mlxtend"
"BayesWitnesses/m2cgen" -> "scikit-learn-contrib/boruta_py"
"BayesWitnesses/m2cgen" -> "Azure/mmlspark" ["e"=1]
"BayesWitnesses/m2cgen" -> "slundberg/shap"
"BayesWitnesses/m2cgen" -> "DistrictDataLabs/yellowbrick"
"lmcinnes/umap" -> "scikit-learn-contrib/hdbscan"
"lmcinnes/umap" -> "slundberg/shap"
"lmcinnes/umap" -> "marcotcr/lime"
"lmcinnes/umap" -> "DistrictDataLabs/yellowbrick"
"lmcinnes/umap" -> "DmitryUlyanov/Multicore-TSNE" ["e"=1]
"lmcinnes/umap" -> "hyperopt/hyperopt"
"lmcinnes/umap" -> "scikit-learn-contrib/imbalanced-learn"
"lmcinnes/umap" -> "blue-yonder/tsfresh"
"lmcinnes/umap" -> "rapidsai/cuml"
"lmcinnes/umap" -> "google/jax" ["e"=1]
"lmcinnes/umap" -> "scikit-optimize/scikit-optimize"
"lmcinnes/umap" -> "spotify/annoy" ["e"=1]
"lmcinnes/umap" -> "modin-project/modin"
"lmcinnes/umap" -> "rasbt/mlxtend"
"lmcinnes/umap" -> "HIPS/autograd"
"aFelipeSP/pdfme" -> "koaning/bulk"
"koaning/drawdata" -> "koaning/human-learn"
"koaning/drawdata" -> "koaning/doubtlab"
"koaning/drawdata" -> "koaning/scikit-lego"
"koaning/drawdata" -> "jtpio/jupyterlite" ["e"=1]
"sfu-db/dataprep" -> "fbdesignpro/sweetviz"
"sfu-db/dataprep" -> "AutoViML/AutoViz"
"sfu-db/dataprep" -> "lux-org/lux"
"sfu-db/dataprep" -> "sfu-db/connector-x" ["e"=1]
"sfu-db/dataprep" -> "shankarpandala/lazypredict"
"sfu-db/dataprep" -> "pandas-profiling/pandas-profiling"
"sfu-db/dataprep" -> "oegedijk/explainerdashboard"
"sfu-db/dataprep" -> "jbesomi/texthero" ["e"=1]
"sfu-db/dataprep" -> "man-group/dtale"
"sfu-db/dataprep" -> "h2oai/datatable"
"sfu-db/dataprep" -> "microsoft/FLAML"
"sfu-db/dataprep" -> "MAIF/shapash"
"sfu-db/dataprep" -> "alteryx/featuretools"
"sfu-db/dataprep" -> "SeldonIO/alibi-detect"
"sfu-db/dataprep" -> "evidentlyai/evidently"
"airbnb/superset" -> "druid-io/druid" ["e"=1]
"airbnb/superset" -> "apache/incubator-airflow" ["e"=1]
"airbnb/superset" -> "getredash/redash" ["e"=1]
"airbnb/superset" -> "facebookincubator/prophet"
"airbnb/superset" -> "airbnb/knowledge-repo"
"airbnb/superset" -> "spotify/luigi" ["e"=1]
"airbnb/superset" -> "channelcat/sanic" ["e"=1]
"airbnb/superset" -> "metabase/metabase" ["e"=1]
"airbnb/superset" -> "rushter/MLAlgorithms" ["e"=1]
"airbnb/superset" -> "kennethreitz/pipenv" ["e"=1]
"airbnb/superset" -> "onurakpolat/awesome-bigdata" ["e"=1]
"airbnb/superset" -> "airbnb/aerosolve" ["e"=1]
"airbnb/superset" -> "atlassian/localstack" ["e"=1]
"airbnb/superset" -> "fchollet/keras" ["e"=1]
"airbnb/superset" -> "caesar0301/awesome-public-datasets" ["e"=1]
"probml/pmtk3" -> "probml/pyprobml"
"probml/pmtk3" -> "bayesnet/bnt"
"probml/pmtk3" -> "rasmusbergpalm/DeepLearnToolbox" ["e"=1]
"probml/pmtk3" -> "PRML/PRMLT" ["e"=1]
"probml/pmtk3" -> "probml/pmtkdata"
"probml/pmtk3" -> "blei-lab/edward"
"probml/pmtk3" -> "ArthurZC23/Machine-Learning-A-Probabilistic-Perspective-Solutions" ["e"=1]
"probml/pmtk3" -> "SheffieldML/GPy"
"probml/pmtk3" -> "PRML/PRML" ["e"=1]
"probml/pmtk3" -> "GPflow/GPflow"
"probml/pmtk3" -> "vlfeat/vlfeat" ["e"=1]
"probml/pmtk3" -> "probml/pmtksupport"
"probml/pmtk3" -> "lisa-lab/pylearn2" ["e"=1]
"probml/pmtk3" -> "lisa-lab/DeepLearningTutorials" ["e"=1]
"probml/pmtk3" -> "pgmpy/pgmpy"
"minimaxir/person-blocker" -> "Prodicode/ann-visualizer"
"minimaxir/person-blocker" -> "mm-mansour/Fast-Pandas"
"minimaxir/person-blocker" -> "dfouhey/caffe64"
"minimaxir/person-blocker" -> "luanfujun/deep-painterly-harmonization" ["e"=1]
"minimaxir/person-blocker" -> "claudiodangelis/qr-filetransfer" ["e"=1]
"minimaxir/person-blocker" -> "NVlabs/MUNIT" ["e"=1]
"minimaxir/person-blocker" -> "yunjey/StarGAN" ["e"=1]
"minimaxir/person-blocker" -> "yogaboll/react-kanban" ["e"=1]
"minimaxir/person-blocker" -> "kaishengtai/neuralart" ["e"=1]
"minimaxir/person-blocker" -> "NervanaSystems/nlp-architect" ["e"=1]
"minimaxir/person-blocker" -> "kennethreitz/twitter-scraper" ["e"=1]
"minimaxir/person-blocker" -> "NVIDIA/FastPhotoStyle" ["e"=1]
"minimaxir/person-blocker" -> "mdbloice/Augmentor" ["e"=1]
"minimaxir/person-blocker" -> "SummitKwan/transparent_latent_gan" ["e"=1]
"minimaxir/person-blocker" -> "meetmangukiya/instagram-scraper" ["e"=1]
"tensorflow/model-optimization" -> "Tencent/PocketFlow" ["e"=1]
"tensorflow/model-optimization" -> "NervanaSystems/distiller" ["e"=1]
"tensorflow/model-optimization" -> "tensorflow/addons"
"tensorflow/model-optimization" -> "tensorflow/tensorrt" ["e"=1]
"tensorflow/model-optimization" -> "pytorch/QNNPACK" ["e"=1]
"tensorflow/model-optimization" -> "google/qkeras" ["e"=1]
"tensorflow/model-optimization" -> "tensorflow/model-analysis"
"tensorflow/model-optimization" -> "google/gemmlowp" ["e"=1]
"tensorflow/model-optimization" -> "tensorflow/profiler"
"tensorflow/model-optimization" -> "he-y/Awesome-Pruning" ["e"=1]
"tensorflow/model-optimization" -> "onnx/tensorflow-onnx" ["e"=1]
"tensorflow/model-optimization" -> "Eric-mingjie/rethinking-network-pruning" ["e"=1]
"tensorflow/model-optimization" -> "keras-team/keras-tuner"
"tensorflow/model-optimization" -> "daquexian/onnx-simplifier" ["e"=1]
"tensorflow/model-optimization" -> "tensorflow/runtime" ["e"=1]
"spotify/chartify" -> "santinic/pampy" ["e"=1]
"spotify/chartify" -> "mwouts/jupytext" ["e"=1]
"spotify/chartify" -> "modin-project/modin"
"spotify/chartify" -> "altair-viz/altair" ["e"=1]
"spotify/chartify" -> "pandas-profiling/pandas-profiling"
"spotify/chartify" -> "TeamHG-Memex/eli5"
"spotify/chartify" -> "ResidentMario/missingno"
"spotify/chartify" -> "DistrictDataLabs/yellowbrick"
"spotify/chartify" -> "quantopian/qgrid" ["e"=1]
"spotify/chartify" -> "bokeh/bokeh" ["e"=1]
"spotify/chartify" -> "vaexio/vaex"
"spotify/chartify" -> "Featuretools/featuretools"
"spotify/chartify" -> "spotify/luigi" ["e"=1]
"spotify/chartify" -> "nteract/papermill" ["e"=1]
"spotify/chartify" -> "tensorflow/adanet"
"Prodicode/ann-visualizer" -> "mm-mansour/Fast-Pandas"
"Prodicode/ann-visualizer" -> "minimaxir/person-blocker"
"Prodicode/ann-visualizer" -> "dfouhey/caffe64"
"Prodicode/ann-visualizer" -> "GauravBh1010tt/DeepLearn" ["e"=1]
"Prodicode/ann-visualizer" -> "lutzroeder/Netron" ["e"=1]
"Prodicode/ann-visualizer" -> "mdbloice/Augmentor" ["e"=1]
"Prodicode/ann-visualizer" -> "dmlc/gluon-nlp" ["e"=1]
"Prodicode/ann-visualizer" -> "jhfjhfj1/autokeras"
"Prodicode/ann-visualizer" -> "stared/livelossplot"
"Prodicode/ann-visualizer" -> "Featuretools/featuretools"
"Prodicode/ann-visualizer" -> "tensorflow/hub"
"Prodicode/ann-visualizer" -> "NervanaSystems/nlp-architect" ["e"=1]
"Prodicode/ann-visualizer" -> "farizrahman4u/recurrentshop" ["e"=1]
"Prodicode/ann-visualizer" -> "raghakot/keras-vis"
"Prodicode/ann-visualizer" -> "databricks/mlflow" ["e"=1]
"facebookincubator/prophet" -> "rhiever/tpot"
"facebookincubator/prophet" -> "twitter/AnomalyDetection" ["e"=1]
"facebookincubator/prophet" -> "airbnb/superset"
"facebookincubator/prophet" -> "blue-yonder/tsfresh"
"facebookincubator/prophet" -> "blei-lab/edward"
"facebookincubator/prophet" -> "PAIR-code/facets"
"facebookincubator/prophet" -> "google/CausalImpact" ["e"=1]
"facebookincubator/prophet" -> "RJT1990/pyflux" ["e"=1]
"facebookincubator/prophet" -> "airbnb/knowledge-repo"
"facebookincubator/prophet" -> "wesm/feather" ["e"=1]
"facebookincubator/prophet" -> "Microsoft/LightGBM"
"facebookincubator/prophet" -> "JohnLangford/vowpal_wabbit" ["e"=1]
"facebookincubator/prophet" -> "reiinakano/scikit-plot"
"facebookincubator/prophet" -> "uber/pyro"
"facebookincubator/prophet" -> "yhat/rodeo" ["e"=1]
"WillKoehrsen/hyperparameter-optimization" -> "WillKoehrsen/automated-feature-engineering"
"WillKoehrsen/hyperparameter-optimization" -> "WillKoehrsen/feature-selector"
"WillKoehrsen/hyperparameter-optimization" -> "hyperopt/hyperopt"
"WillKoehrsen/hyperparameter-optimization" -> "abhayspawar/featexp"
"WillKoehrsen/hyperparameter-optimization" -> "HunterMcGushion/hyperparameter_hunter"
"WillKoehrsen/hyperparameter-optimization" -> "hyperopt/hyperopt-sklearn"
"WillKoehrsen/hyperparameter-optimization" -> "thuijskens/bayesian-optimization"
"WillKoehrsen/hyperparameter-optimization" -> "WillKoehrsen/machine-learning-project-walkthrough" ["e"=1]
"WillKoehrsen/hyperparameter-optimization" -> "fmfn/BayesianOptimization"
"WillKoehrsen/hyperparameter-optimization" -> "FontTian/hyperopt-doc-zh" ["e"=1]
"WillKoehrsen/hyperparameter-optimization" -> "automl/HpBandSter"
"WillKoehrsen/hyperparameter-optimization" -> "WillKoehrsen/recurrent-neural-networks" ["e"=1]
"WillKoehrsen/hyperparameter-optimization" -> "scikit-optimize/scikit-optimize"
"WillKoehrsen/hyperparameter-optimization" -> "Vooban/Hyperopt-Keras-CNN-CIFAR-100"
"WillKoehrsen/hyperparameter-optimization" -> "WillKoehrsen/wikipedia-data-science" ["e"=1]
"hyperopt/hyperopt-sklearn" -> "hyperopt/hyperopt"
"hyperopt/hyperopt-sklearn" -> "scikit-optimize/scikit-optimize"
"hyperopt/hyperopt-sklearn" -> "automl/auto-sklearn"
"hyperopt/hyperopt-sklearn" -> "scikit-learn-contrib/boruta_py"
"hyperopt/hyperopt-sklearn" -> "paulgb/sklearn-pandas" ["e"=1]
"hyperopt/hyperopt-sklearn" -> "TeamHG-Memex/eli5"
"hyperopt/hyperopt-sklearn" -> "AxeldeRomblay/MLBox"
"hyperopt/hyperopt-sklearn" -> "scikit-learn-contrib/sklearn-pandas"
"hyperopt/hyperopt-sklearn" -> "reiinakano/scikit-plot"
"hyperopt/hyperopt-sklearn" -> "maxpumperla/hyperas"
"hyperopt/hyperopt-sklearn" -> "rasbt/mlxtend"
"hyperopt/hyperopt-sklearn" -> "HIPS/Spearmint"
"hyperopt/hyperopt-sklearn" -> "ClimbsRocks/auto_ml"
"hyperopt/hyperopt-sklearn" -> "reiinakano/xcessiv"
"hyperopt/hyperopt-sklearn" -> "scikit-learn-contrib/imbalanced-learn"
"Microsoft/nni" -> "Microsoft/pai"
"Microsoft/nni" -> "jhfjhfj1/autokeras"
"Microsoft/nni" -> "melodyguan/enas" ["e"=1]
"Microsoft/nni" -> "tensorflow/adanet"
"Microsoft/nni" -> "Tencent/PocketFlow" ["e"=1]
"Microsoft/nni" -> "Microsoft/MMdnn" ["e"=1]
"Microsoft/nni" -> "Featuretools/featuretools"
"Microsoft/nni" -> "markdtw/awesome-architecture-search" ["e"=1]
"Microsoft/nni" -> "carpedm20/ENAS-pytorch" ["e"=1]
"Microsoft/nni" -> "quark0/darts" ["e"=1]
"Microsoft/nni" -> "tobegit3hub/advisor"
"Microsoft/nni" -> "uber/horovod" ["e"=1]
"Microsoft/nni" -> "dmlc/tvm" ["e"=1]
"Microsoft/nni" -> "NervanaSystems/distiller" ["e"=1]
"Microsoft/nni" -> "facebookresearch/nevergrad"
"man-group/dtale" -> "pandas-profiling/pandas-profiling"
"man-group/dtale" -> "man-group/arctic" ["e"=1]
"man-group/dtale" -> "fbdesignpro/sweetviz"
"man-group/dtale" -> "lux-org/lux"
"man-group/dtale" -> "modin-project/modin"
"man-group/dtale" -> "adamerose/PandasGUI"
"man-group/dtale" -> "vaexio/vaex"
"man-group/dtale" -> "adamerose/pandasgui"
"man-group/dtale" -> "pycaret/pycaret"
"man-group/dtale" -> "hudson-and-thames/mlfinlab" ["e"=1]
"man-group/dtale" -> "man-group/notebooker" ["e"=1]
"man-group/dtale" -> "ranaroussi/quantstats" ["e"=1]
"man-group/dtale" -> "quantopian/qgrid" ["e"=1]
"man-group/dtale" -> "robertmartin8/PyPortfolioOpt" ["e"=1]
"man-group/dtale" -> "polakowo/vectorbt" ["e"=1]
"DAGsHub/fds" -> "jenkinsci/dagshub-branch-source-plugin"
"DAGsHub/fds" -> "DAGsHub/client"
"DAGsHub/fds" -> "permitio/OPToggles" ["e"=1]
"DAGsHub/fds" -> "zincware/ZnTrack"
"DAGsHub/fds" -> "DagsHub/client"
"rapidsai/cudf" -> "rapidsai/cuml"
"rapidsai/cudf" -> "rapidsai/cugraph"
"rapidsai/cudf" -> "modin-project/modin"
"rapidsai/cudf" -> "dask/dask" ["e"=1]
"rapidsai/cudf" -> "cupy/cupy" ["e"=1]
"rapidsai/cudf" -> "vaexio/vaex"
"rapidsai/cudf" -> "apache/arrow" ["e"=1]
"rapidsai/cudf" -> "BlazingDB/blazingsql"
"rapidsai/cudf" -> "mlflow/mlflow"
"rapidsai/cudf" -> "google/jax" ["e"=1]
"rapidsai/cudf" -> "optuna/optuna"
"rapidsai/cudf" -> "jmcarpenter2/swifter"
"rapidsai/cudf" -> "numba/numba" ["e"=1]
"rapidsai/cudf" -> "rapidsai/notebooks"
"rapidsai/cudf" -> "horovod/horovod" ["e"=1]
"rapidsai/cugraph" -> "rapidsai/cuml"
"rapidsai/cugraph" -> "rapidsai/cudf"
"rapidsai/cugraph" -> "rapidsai/cuspatial"
"rapidsai/cugraph" -> "gunrock/gunrock" ["e"=1]
"rapidsai/cugraph" -> "rapidsai/notebooks"
"rapidsai/cugraph" -> "rapidsai/rmm" ["e"=1]
"rapidsai/cugraph" -> "rapidsai/cuxfilter"
"rapidsai/cugraph" -> "rapidsai/cusignal" ["e"=1]
"rapidsai/cugraph" -> "gunrock/graphblast" ["e"=1]
"rapidsai/cugraph" -> "rapidsai/raft" ["e"=1]
"rapidsai/cugraph" -> "snap-stanford/ogb" ["e"=1]
"rapidsai/cugraph" -> "deepmind/jraph" ["e"=1]
"rapidsai/cugraph" -> "GraphIt-DSL/graphit" ["e"=1]
"rapidsai/cugraph" -> "NVIDIA/cub" ["e"=1]
"rapidsai/cugraph" -> "stellargraph/stellargraph" ["e"=1]
"scikit-learn-contrib/imbalanced-learn" -> "rasbt/mlxtend"
"scikit-learn-contrib/imbalanced-learn" -> "hyperopt/hyperopt"
"scikit-learn-contrib/imbalanced-learn" -> "slundberg/shap"
"scikit-learn-contrib/imbalanced-learn" -> "automl/auto-sklearn"
"scikit-learn-contrib/imbalanced-learn" -> "marcotcr/lime"
"scikit-learn-contrib/imbalanced-learn" -> "blue-yonder/tsfresh"
"scikit-learn-contrib/imbalanced-learn" -> "scikit-optimize/scikit-optimize"
"scikit-learn-contrib/imbalanced-learn" -> "Featuretools/featuretools"
"scikit-learn-contrib/imbalanced-learn" -> "DistrictDataLabs/yellowbrick"
"scikit-learn-contrib/imbalanced-learn" -> "TeamHG-Memex/eli5"
"scikit-learn-contrib/imbalanced-learn" -> "reiinakano/scikit-plot"
"scikit-learn-contrib/imbalanced-learn" -> "scikit-learn-contrib/categorical-encoding"
"scikit-learn-contrib/imbalanced-learn" -> "catboost/catboost"
"scikit-learn-contrib/imbalanced-learn" -> "Microsoft/LightGBM"
"scikit-learn-contrib/imbalanced-learn" -> "yzhao062/pyod" ["e"=1]
"kubeflow/kubeflow" -> "kubeflow/pipelines"
"kubeflow/kubeflow" -> "mlflow/mlflow"
"kubeflow/kubeflow" -> "SeldonIO/seldon-core"
"kubeflow/kubeflow" -> "argoproj/argo" ["e"=1]
"kubeflow/kubeflow" -> "horovod/horovod" ["e"=1]
"kubeflow/kubeflow" -> "ray-project/ray"
"kubeflow/kubeflow" -> "kubeflow/katib"
"kubeflow/kubeflow" -> "iterative/dvc"
"kubeflow/kubeflow" -> "kubernetes-sigs/kustomize" ["e"=1]
"kubeflow/kubeflow" -> "volcano-sh/volcano" ["e"=1]
"kubeflow/kubeflow" -> "pachyderm/pachyderm"
"kubeflow/kubeflow" -> "tensorflow/serving"
"kubeflow/kubeflow" -> "bentoml/BentoML"
"kubeflow/kubeflow" -> "kubernetes-sigs/kubebuilder" ["e"=1]
"kubeflow/kubeflow" -> "Netflix/metaflow"
"ml-tooling/opyrator" -> "evidentlyai/evidently"
"ml-tooling/opyrator" -> "maiot-io/zenml"
"ml-tooling/opyrator" -> "ebhy/budgetml"
"ml-tooling/opyrator" -> "lux-org/lux"
"ml-tooling/opyrator" -> "salesforce/Merlion" ["e"=1]
"ml-tooling/opyrator" -> "deepset-ai/haystack" ["e"=1]
"ml-tooling/opyrator" -> "MAIF/shapash"
"ml-tooling/opyrator" -> "facebookresearch/Kats" ["e"=1]
"ml-tooling/opyrator" -> "facebookresearch/AugLy" ["e"=1]
"ml-tooling/opyrator" -> "bentoml/BentoML"
"ml-tooling/opyrator" -> "ml-tooling/ml-workspace"
"ml-tooling/opyrator" -> "orchest/orchest"
"ml-tooling/opyrator" -> "ourownstory/neural_prophet" ["e"=1]
"ml-tooling/opyrator" -> "online-ml/river"
"ml-tooling/opyrator" -> "mljar/mljar-supervised"
"Kaggle/kaggle-api" -> "Kaggle/docker-python"
"Kaggle/kaggle-api" -> "fastai/fastai" ["e"=1]
"Kaggle/kaggle-api" -> "dmlc/xgboost"
"Kaggle/kaggle-api" -> "hyperopt/hyperopt"
"Kaggle/kaggle-api" -> "Microsoft/LightGBM"
"Kaggle/kaggle-api" -> "catboost/catboost"
"Kaggle/kaggle-api" -> "microsoft/LightGBM"
"Kaggle/kaggle-api" -> "slundberg/shap"
"Kaggle/kaggle-api" -> "mlflow/mlflow"
"Kaggle/kaggle-api" -> "pandas-profiling/pandas-profiling"
"Kaggle/kaggle-api" -> "dunovank/jupyter-themes" ["e"=1]
"Kaggle/kaggle-api" -> "scikit-learn-contrib/imbalanced-learn"
"Kaggle/kaggle-api" -> "jupyterlab/jupyterlab" ["e"=1]
"Kaggle/kaggle-api" -> "ipython-contrib/jupyter_contrib_nbextensions" ["e"=1]
"Kaggle/kaggle-api" -> "statsmodels/statsmodels" ["e"=1]
"autonomio/talos" -> "maxpumperla/hyperas"
"autonomio/talos" -> "keras-team/keras-tuner"
"autonomio/talos" -> "scikit-optimize/scikit-optimize"
"autonomio/talos" -> "jhfjhfj1/autokeras"
"autonomio/talos" -> "raghakot/keras-vis"
"autonomio/talos" -> "hyperopt/hyperopt"
"autonomio/talos" -> "hyperopt/hyperopt-sklearn"
"autonomio/talos" -> "tensorflow/adanet"
"autonomio/talos" -> "rasbt/mlxtend"
"autonomio/talos" -> "dvgodoy/deepreplay"
"autonomio/talos" -> "philipperemy/keract"
"autonomio/talos" -> "keras-team/autokeras"
"autonomio/talos" -> "salesforce/TransmogrifAI"
"autonomio/talos" -> "pfnet/optuna" ["e"=1]
"autonomio/talos" -> "EpistasisLab/tpot"
"adafruit/Adafruit-Fingerprint-Sensor-Library" -> "brianrho/FPM"
"adafruit/Adafruit-Fingerprint-Sensor-Library" -> "bastianraschke/pyfingerprint"
"adafruit/Adafruit-Fingerprint-Sensor-Library" -> "sparkfun/Fingerprint_Scanner-TTL"
"adafruit/Adafruit-Fingerprint-Sensor-Library" -> "hanifizzudinrahman/Module-Fingerprint-DY50-FPM10A"
"adafruit/Adafruit-Fingerprint-Sensor-Library" -> "adafruit/Adafruit_CircuitPython_Fingerprint"
"adafruit/Adafruit-Fingerprint-Sensor-Library" -> "adafruit/Adafruit-PN532" ["e"=1]
"fmfn/BayesianOptimization" -> "hyperopt/hyperopt"
"fmfn/BayesianOptimization" -> "scikit-optimize/scikit-optimize"
"fmfn/BayesianOptimization" -> "pytorch/botorch"
"fmfn/BayesianOptimization" -> "slundberg/shap"
"fmfn/BayesianOptimization" -> "optuna/optuna"
"fmfn/BayesianOptimization" -> "scikit-learn-contrib/imbalanced-learn"
"fmfn/BayesianOptimization" -> "automl/auto-sklearn"
"fmfn/BayesianOptimization" -> "Microsoft/LightGBM"
"fmfn/BayesianOptimization" -> "HIPS/Spearmint"
"fmfn/BayesianOptimization" -> "SheffieldML/GPyOpt"
"fmfn/BayesianOptimization" -> "cornellius-gp/gpytorch"
"fmfn/BayesianOptimization" -> "blue-yonder/tsfresh"
"fmfn/BayesianOptimization" -> "dmlc/xgboost"
"fmfn/BayesianOptimization" -> "SheffieldML/GPy"
"fmfn/BayesianOptimization" -> "EpistasisLab/tpot"
"raghakot/keras-vis" -> "keplr-io/quiver"
"raghakot/keras-vis" -> "maxpumperla/hyperas"
"raghakot/keras-vis" -> "yosinski/deep-visualization-toolbox" ["e"=1]
"raghakot/keras-vis" -> "fchollet/keras-resources" ["e"=1]
"raghakot/keras-vis" -> "jacobgil/keras-grad-cam" ["e"=1]
"raghakot/keras-vis" -> "XifengGuo/CapsNet-Keras" ["e"=1]
"raghakot/keras-vis" -> "fchollet/deep-learning-models" ["e"=1]
"raghakot/keras-vis" -> "tensorflow/lucid" ["e"=1]
"raghakot/keras-vis" -> "tdeboissiere/DeepLearningImplementations" ["e"=1]
"raghakot/keras-vis" -> "InFoCusp/tf_cnnvis" ["e"=1]
"raghakot/keras-vis" -> "eriklindernoren/Keras-GAN" ["e"=1]
"raghakot/keras-vis" -> "yhenon/keras-frcnn" ["e"=1]
"raghakot/keras-vis" -> "jhfjhfj1/autokeras"
"raghakot/keras-vis" -> "sicara/tf-explain" ["e"=1]
"raghakot/keras-vis" -> "leriomaggio/deep-learning-keras-tensorflow" ["e"=1]
"scikit-learn-contrib/categorical-encoding" -> "TeamHG-Memex/eli5"
"scikit-learn-contrib/categorical-encoding" -> "scikit-learn-contrib/imbalanced-learn"
"scikit-learn-contrib/categorical-encoding" -> "scikit-learn-contrib/boruta_py"
"scikit-learn-contrib/categorical-encoding" -> "rushter/heamy" ["e"=1]
"scikit-learn-contrib/categorical-encoding" -> "reiinakano/scikit-plot"
"scikit-learn-contrib/categorical-encoding" -> "scikit-learn-contrib/scikit-learn-contrib"
"scikit-learn-contrib/categorical-encoding" -> "rasbt/mlxtend"
"scikit-learn-contrib/categorical-encoding" -> "Featuretools/featuretools"
"scikit-learn-contrib/categorical-encoding" -> "aksnzhy/xlearn" ["e"=1]
"scikit-learn-contrib/categorical-encoding" -> "scikit-optimize/scikit-optimize"
"scikit-learn-contrib/categorical-encoding" -> "scikit-learn-contrib/sklearn-pandas"
"scikit-learn-contrib/categorical-encoding" -> "kaz-Anova/StackNet" ["e"=1]
"scikit-learn-contrib/categorical-encoding" -> "geffy/tffm" ["e"=1]
"scikit-learn-contrib/categorical-encoding" -> "flennerhag/mlens"
"scikit-learn-contrib/categorical-encoding" -> "reiinakano/xcessiv"
"Deci-AI/super-gradients" -> "I-H8-YOU/ABAP-Basic"
"Deci-AI/super-gradients" -> "beeyev/thumbor-s3-docker"
"Deci-AI/super-gradients" -> "drewlong/gophish-ruby"
"Deci-AI/super-gradients" -> "dvemon/data-ptr-comm"
"Deci-AI/super-gradients" -> "DecentraWorldDEWO/Documentation"
"Deci-AI/super-gradients" -> "Etelis/Fortuna-FUD-Crypter"
"Deci-AI/super-gradients" -> "devforth/hothost"
"Deci-AI/super-gradients" -> "bloodbath-io/bloodbath-ruby"
"Deci-AI/super-gradients" -> "xMythic/Rust-recoil-macro-AK-"
"Deci-AI/super-gradients" -> "DecentraWorldDEWO/DeMix_Subgraph"
"Deci-AI/super-gradients" -> "Infinity-Tech-inc/nifi-json-processor-bundle"
"Deci-AI/super-gradients" -> "ForetagInc/alchemy"
"Deci-AI/super-gradients" -> "coderitual/xna.js"
"Deci-AI/super-gradients" -> "helloh2o/lucky"
"Deci-AI/super-gradients" -> "newlc/SwiftKeychainWrapper"
"deepchecks/deepchecks" -> "evidentlyai/evidently"
"deepchecks/deepchecks" -> "NannyML/nannyml"
"deepchecks/deepchecks" -> "SeldonIO/alibi-detect"
"deepchecks/deepchecks" -> "zenml-io/zenml"
"deepchecks/deepchecks" -> "microsoft/FLAML"
"deepchecks/deepchecks" -> "whylabs/whylogs"
"deepchecks/deepchecks" -> "online-ml/river"
"deepchecks/deepchecks" -> "oegedijk/explainerdashboard"
"deepchecks/deepchecks" -> "ploomber/ploomber"
"deepchecks/deepchecks" -> "bentoml/BentoML"
"deepchecks/deepchecks" -> "MAIF/shapash"
"deepchecks/deepchecks" -> "SeldonIO/alibi"
"deepchecks/deepchecks" -> "cleanlab/cleanlab"
"deepchecks/deepchecks" -> "Nixtla/statsforecast" ["e"=1]
"deepchecks/deepchecks" -> "iterative/cml"
"jrieke/traingenerator" -> "jrieke/best-of-streamlit" ["e"=1]
"jrieke/traingenerator" -> "MarcSkovMadsen/awesome-streamlit" ["e"=1]
"jrieke/traingenerator" -> "maiot-io/zenml"
"jrieke/traingenerator" -> "MAIF/shapash"
"jrieke/traingenerator" -> "lux-org/lux"
"jrieke/traingenerator" -> "mrdbourke/cs329s-ml-deployment-tutorial" ["e"=1]
"jrieke/traingenerator" -> "ml-tooling/opyrator"
"jrieke/traingenerator" -> "microsoft/FLAML"
"jrieke/traingenerator" -> "oegedijk/explainerdashboard"
"jrieke/traingenerator" -> "abhishekkrthakur/colabcode" ["e"=1]
"jrieke/traingenerator" -> "koaning/human-learn"
"jrieke/traingenerator" -> "jrieke/awesome-machine-learning-startups-berlin"
"jrieke/traingenerator" -> "activeloopai/Hub"
"jrieke/traingenerator" -> "facebookresearch/svoice" ["e"=1]
"jrieke/traingenerator" -> "ddangelov/Top2Vec" ["e"=1]
"tensorflow/adanet" -> "jhfjhfj1/autokeras"
"tensorflow/adanet" -> "keras-team/autokeras"
"tensorflow/adanet" -> "deepmind/trfl" ["e"=1]
"tensorflow/adanet" -> "Tencent/PocketFlow" ["e"=1]
"tensorflow/adanet" -> "melodyguan/enas" ["e"=1]
"tensorflow/adanet" -> "google/dopamine" ["e"=1]
"tensorflow/adanet" -> "hibayesian/awesome-automl-papers" ["e"=1]
"tensorflow/adanet" -> "EpistasisLab/tpot"
"tensorflow/adanet" -> "automl/auto-sklearn"
"tensorflow/adanet" -> "Featuretools/featuretools"
"tensorflow/adanet" -> "facebookresearch/Horizon" ["e"=1]
"tensorflow/adanet" -> "deepmind/graph_nets" ["e"=1]
"tensorflow/adanet" -> "carpedm20/ENAS-pytorch" ["e"=1]
"tensorflow/adanet" -> "Microsoft/nni"
"tensorflow/adanet" -> "quark0/darts" ["e"=1]
"annoviko/pyclustering" -> "scikit-learn-contrib/hdbscan"
"annoviko/pyclustering" -> "mynameisfiber/pyxmeans"
"annoviko/pyclustering" -> "jundongl/scikit-feature"
"annoviko/pyclustering" -> "nicodv/kmodes"
"annoviko/pyclustering" -> "elki-project/elki" ["e"=1]
"annoviko/pyclustering" -> "MaxHalford/prince"
"annoviko/pyclustering" -> "rtavenar/tslearn" ["e"=1]
"annoviko/pyclustering" -> "wannesm/dtaidistance" ["e"=1]
"annoviko/pyclustering" -> "GiulioRossetti/cdlib" ["e"=1]
"annoviko/pyclustering" -> "hyperopt/hyperopt-sklearn"
"annoviko/pyclustering" -> "pierre-rouanet/dtw" ["e"=1]
"annoviko/pyclustering" -> "scikit-learn-contrib/imbalanced-learn"
"annoviko/pyclustering" -> "scikit-learn-contrib/metric-learn"
"annoviko/pyclustering" -> "jmschrei/pomegranate"
"annoviko/pyclustering" -> "deepcharles/ruptures" ["e"=1]
"cortexlabs/cortex" -> "bentoml/BentoML"
"cortexlabs/cortex" -> "mlflow/mlflow"
"cortexlabs/cortex" -> "iterative/dvc"
"cortexlabs/cortex" -> "EthicalML/awesome-production-machine-learning" ["e"=1]
"cortexlabs/cortex" -> "Netflix/metaflow"
"cortexlabs/cortex" -> "kubeflow/kubeflow"
"cortexlabs/cortex" -> "streamlit/streamlit" ["e"=1]
"cortexlabs/cortex" -> "google/trax" ["e"=1]
"cortexlabs/cortex" -> "chiphuyen/machine-learning-systems-design" ["e"=1]
"cortexlabs/cortex" -> "iterative/cml"
"cortexlabs/cortex" -> "SeldonIO/seldon-core"
"cortexlabs/cortex" -> "visenger/awesome-mlops" ["e"=1]
"cortexlabs/cortex" -> "uber/ludwig"
"cortexlabs/cortex" -> "alirezadir/Production-Level-Deep-Learning" ["e"=1]
"cortexlabs/cortex" -> "horovod/horovod" ["e"=1]
"ermongroup/cs228-notes" -> "pgmpy/pgmpy"
"ermongroup/cs228-notes" -> "blei-lab/edward"
"ermongroup/cs228-notes" -> "deepgenerativemodels/notes" ["e"=1]
"ermongroup/cs228-notes" -> "krasserm/bayesian-machine-learning"
"ermongroup/cs228-notes" -> "tensorflow/probability"
"ermongroup/cs228-notes" -> "probml/pyprobml"
"ermongroup/cs228-notes" -> "pyro-ppl/pyro"
"ermongroup/cs228-notes" -> "williamFalcon/DeepRLHacks" ["e"=1]
"ermongroup/cs228-notes" -> "mila-udem/welcome_tutorials" ["e"=1]
"ermongroup/cs228-notes" -> "rguo12/awesome-causality-algorithms" ["e"=1]
"ermongroup/cs228-notes" -> "pymc-devs/pymc3"
"ermongroup/cs228-notes" -> "dustinvtran/ml-videos"
"ermongroup/cs228-notes" -> "altosaar/variational-autoencoder" ["e"=1]
"ermongroup/cs228-notes" -> "cornellius-gp/gpytorch"
"ermongroup/cs228-notes" -> "thu-ml/zhusuan"
"lux-org/lux" -> "modin-project/modin"
"lux-org/lux" -> "fbdesignpro/sweetviz"
"lux-org/lux" -> "sfu-db/dataprep"
"lux-org/lux" -> "vaexio/vaex"
"lux-org/lux" -> "man-group/dtale"
"lux-org/lux" -> "pycaret/pycaret"
"lux-org/lux" -> "facebookresearch/Kats" ["e"=1]
"lux-org/lux" -> "AutoViML/AutoViz"
"lux-org/lux" -> "unit8co/darts" ["e"=1]
"lux-org/lux" -> "MAIF/shapash"
"lux-org/lux" -> "pandas-profiling/pandas-profiling"
"lux-org/lux" -> "evidentlyai/evidently"
"lux-org/lux" -> "shankarpandala/lazypredict"
"lux-org/lux" -> "great-expectations/great_expectations" ["e"=1]
"lux-org/lux" -> "oegedijk/explainerdashboard"
"microsoft/LightGBM" -> "dmlc/xgboost"
"microsoft/LightGBM" -> "catboost/catboost"
"microsoft/LightGBM" -> "slundberg/shap"
"microsoft/LightGBM" -> "optuna/optuna"
"microsoft/LightGBM" -> "shenweichen/DeepCTR" ["e"=1]
"microsoft/LightGBM" -> "hyperopt/hyperopt"
"microsoft/LightGBM" -> "facebookresearch/faiss" ["e"=1]
"microsoft/LightGBM" -> "facebook/prophet"
"microsoft/LightGBM" -> "microsoft/nni"
"microsoft/LightGBM" -> "mlflow/mlflow"
"microsoft/LightGBM" -> "microsoft/recommenders" ["e"=1]
"microsoft/LightGBM" -> "automl/auto-sklearn"
"microsoft/LightGBM" -> "scikit-learn-contrib/imbalanced-learn"
"microsoft/LightGBM" -> "yzhao062/pyod" ["e"=1]
"microsoft/LightGBM" -> "google/jax" ["e"=1]
"tensorflow/tensorboard" -> "lanpa/tensorboardX" ["e"=1]
"tensorflow/tensorboard" -> "tensorflow/serving"
"tensorflow/tensorboard" -> "tensorflow/datasets"
"tensorflow/tensorboard" -> "tensorflow/tensor2tensor" ["e"=1]
"tensorflow/tensorboard" -> "tensorflow/probability"
"tensorflow/tensorboard" -> "PAIR-code/facets"
"tensorflow/tensorboard" -> "tensorflow/hub"
"tensorflow/tensorboard" -> "tensorflow/lucid" ["e"=1]
"tensorflow/tensorboard" -> "onnx/onnx" ["e"=1]
"tensorflow/tensorboard" -> "tensorflow/docs"
"tensorflow/tensorboard" -> "facebookresearch/visdom" ["e"=1]
"tensorflow/tensorboard" -> "mlflow/mlflow"
"tensorflow/tensorboard" -> "kubeflow/kubeflow"
"tensorflow/tensorboard" -> "google/dopamine" ["e"=1]
"tensorflow/tensorboard" -> "hyperopt/hyperopt"
"EpistasisLab/tpot" -> "automl/auto-sklearn"
"EpistasisLab/tpot" -> "keras-team/autokeras"
"EpistasisLab/tpot" -> "Featuretools/featuretools"
"EpistasisLab/tpot" -> "slundberg/shap"
"EpistasisLab/tpot" -> "hyperopt/hyperopt"
"EpistasisLab/tpot" -> "blue-yonder/tsfresh"
"EpistasisLab/tpot" -> "pandas-profiling/pandas-profiling"
"EpistasisLab/tpot" -> "scikit-learn-contrib/imbalanced-learn"
"EpistasisLab/tpot" -> "AxeldeRomblay/MLBox"
"EpistasisLab/tpot" -> "rasbt/mlxtend"
"EpistasisLab/tpot" -> "ClimbsRocks/auto_ml"
"EpistasisLab/tpot" -> "microsoft/nni"
"EpistasisLab/tpot" -> "pycaret/pycaret"
"EpistasisLab/tpot" -> "modin-project/modin"
"EpistasisLab/tpot" -> "mlflow/mlflow"
"MAIF/shapash" -> "oegedijk/explainerdashboard"
"MAIF/shapash" -> "online-ml/river"
"MAIF/shapash" -> "interpretml/interpret"
"MAIF/shapash" -> "SeldonIO/alibi-detect"
"MAIF/shapash" -> "evidentlyai/evidently"
"MAIF/shapash" -> "pycaret/pycaret"
"MAIF/shapash" -> "deepchecks/deepchecks"
"MAIF/shapash" -> "SeldonIO/alibi"
"MAIF/shapash" -> "facebookresearch/Kats" ["e"=1]
"MAIF/shapash" -> "microsoft/FLAML"
"MAIF/shapash" -> "scikit-learn-contrib/MAPIE"
"MAIF/shapash" -> "parrt/dtreeviz"
"MAIF/shapash" -> "mljar/mljar-supervised"
"MAIF/shapash" -> "csinva/imodels"
"MAIF/shapash" -> "lux-org/lux"
"adamerose/PandasGUI" -> "man-group/dtale"
"adamerose/PandasGUI" -> "fbdesignpro/sweetviz"
"adamerose/PandasGUI" -> "lux-org/lux"
"adamerose/PandasGUI" -> "quantopian/qgrid" ["e"=1]
"adamerose/PandasGUI" -> "tkrabel/bamboolib"
"adamerose/PandasGUI" -> "ydataai/pandas-profiling"
"adamerose/PandasGUI" -> "bluenote10/tabloo" ["e"=1]
"adamerose/PandasGUI" -> "MAIF/shapash"
"adamerose/PandasGUI" -> "mito-ds/monorepo" ["e"=1]
"adamerose/PandasGUI" -> "AutoViML/AutoViz"
"adamerose/PandasGUI" -> "holoviz/panel" ["e"=1]
"adamerose/PandasGUI" -> "akanz1/klib"
"adamerose/PandasGUI" -> "voila-dashboards/voila" ["e"=1]
"adamerose/PandasGUI" -> "nicolaskruchten/jupyter_pivottablejs" ["e"=1]
"adamerose/PandasGUI" -> "holoviz/holoviews" ["e"=1]
"automl/auto-sklearn" -> "EpistasisLab/tpot"
"automl/auto-sklearn" -> "keras-team/autokeras"
"automl/auto-sklearn" -> "hyperopt/hyperopt"
"automl/auto-sklearn" -> "ClimbsRocks/auto_ml"
"automl/auto-sklearn" -> "rhiever/tpot"
"automl/auto-sklearn" -> "Featuretools/featuretools"
"automl/auto-sklearn" -> "scikit-learn-contrib/imbalanced-learn"
"automl/auto-sklearn" -> "scikit-optimize/scikit-optimize"
"automl/auto-sklearn" -> "rasbt/mlxtend"
"automl/auto-sklearn" -> "hyperopt/hyperopt-sklearn"
"automl/auto-sklearn" -> "blue-yonder/tsfresh"
"automl/auto-sklearn" -> "h2oai/h2o-3"
"automl/auto-sklearn" -> "slundberg/shap"
"automl/auto-sklearn" -> "marcotcr/lime"
"automl/auto-sklearn" -> "AxeldeRomblay/MLBox"
"gojek/feast" -> "spotify/featran" ["e"=1]
"gojek/feast" -> "logicalclocks/hopsworks"
"gojek/feast" -> "mitdbg/modeldb"
"gojek/feast" -> "kubeflow/kfserving"
"gojek/feast" -> "tensorflow/tfx"
"gojek/feast" -> "lyft/flyte"
"gojek/feast" -> "uber/manifold"
"gojek/feast" -> "SeldonIO/seldon-core"
"gojek/feast" -> "kubeflow/fairing"
"gojek/feast" -> "polyaxon/polyaxon"
"gojek/feast" -> "ucbrise/clipper"
"gojek/feast" -> "scikit-learn-contrib/categorical-encoding"
"gojek/feast" -> "combust/mleap" ["e"=1]
"gojek/feast" -> "kubeflow/katib"
"gojek/feast" -> "Featuretools/featuretools"
"pandas-profiling/pandas-profiling" -> "modin-project/modin"
"pandas-profiling/pandas-profiling" -> "slundberg/shap"
"pandas-profiling/pandas-profiling" -> "great-expectations/great_expectations" ["e"=1]
"pandas-profiling/pandas-profiling" -> "vaexio/vaex"
"pandas-profiling/pandas-profiling" -> "ResidentMario/missingno"
"pandas-profiling/pandas-profiling" -> "pycaret/pycaret"
"pandas-profiling/pandas-profiling" -> "streamlit/streamlit" ["e"=1]
"pandas-profiling/pandas-profiling" -> "EpistasisLab/tpot"
"pandas-profiling/pandas-profiling" -> "fbdesignpro/sweetviz"
"pandas-profiling/pandas-profiling" -> "mlflow/mlflow"
"pandas-profiling/pandas-profiling" -> "DistrictDataLabs/yellowbrick"
"pandas-profiling/pandas-profiling" -> "drivendata/cookiecutter-data-science"
"pandas-profiling/pandas-profiling" -> "quantumblacklabs/kedro"
"pandas-profiling/pandas-profiling" -> "marcotcr/lime"
"pandas-profiling/pandas-profiling" -> "scikit-learn-contrib/imbalanced-learn"
"iterative/dvc" -> "iterative/cml"
"iterative/dvc" -> "mlflow/mlflow"
"iterative/dvc" -> "great-expectations/great_expectations" ["e"=1]
"iterative/dvc" -> "streamlit/streamlit" ["e"=1]
"iterative/dvc" -> "Netflix/metaflow"
"iterative/dvc" -> "slundberg/shap"
"iterative/dvc" -> "EthicalML/awesome-production-machine-learning" ["e"=1]
"iterative/dvc" -> "modin-project/modin"
"iterative/dvc" -> "drivendata/cookiecutter-data-science"
"iterative/dvc" -> "bentoml/BentoML"
"iterative/dvc" -> "kubeflow/kubeflow"
"iterative/dvc" -> "visenger/awesome-mlops" ["e"=1]
"iterative/dvc" -> "ray-project/ray"
"iterative/dvc" -> "dask/dask" ["e"=1]
"iterative/dvc" -> "quantumblacklabs/kedro"
"AnthonyBradford/optionmatrix" -> "yzoz/python-option-calculator"
"AnthonyBradford/optionmatrix" -> "ChiragJhawar/ProjectReward"
"ChiragJhawar/ProjectReward" -> "yzoz/python-option-calculator"
"ChiragJhawar/ProjectReward" -> "Options-Visualizer/Options-Visualizer.github.io"
"ChiragJhawar/ProjectReward" -> "ApurvShah007/portfolio-optimizer"
"ChiragJhawar/ProjectReward" -> "ApurvShah007/Tilt-Bot-RC-Car"
"ChiragJhawar/ProjectReward" -> "ApurvShah007/Algorithmic_trading"
"bentoml/BentoML" -> "SeldonIO/seldon-core"
"bentoml/BentoML" -> "mlflow/mlflow"
"bentoml/BentoML" -> "cortexlabs/cortex"
"bentoml/BentoML" -> "evidentlyai/evidently"
"bentoml/BentoML" -> "feast-dev/feast"
"bentoml/BentoML" -> "Netflix/metaflow"
"bentoml/BentoML" -> "iterative/dvc"
"bentoml/BentoML" -> "iterative/cml"
"bentoml/BentoML" -> "EthicalML/awesome-production-machine-learning" ["e"=1]
"bentoml/BentoML" -> "visenger/awesome-mlops" ["e"=1]
"bentoml/BentoML" -> "bentoml/Yatai"
"bentoml/BentoML" -> "kubeflow/kubeflow"
"bentoml/BentoML" -> "deepchecks/deepchecks"
"bentoml/BentoML" -> "pytorch/serve"
"bentoml/BentoML" -> "zenml-io/zenml"
"catboost/catboost" -> "Microsoft/LightGBM"
"catboost/catboost" -> "dmlc/xgboost"
"catboost/catboost" -> "microsoft/LightGBM"
"catboost/catboost" -> "hyperopt/hyperopt"
"catboost/catboost" -> "slundberg/shap"
"catboost/catboost" -> "scikit-learn-contrib/imbalanced-learn"
"catboost/catboost" -> "catboost/tutorials"
"catboost/catboost" -> "rasbt/mlxtend"
"catboost/catboost" -> "TeamHG-Memex/eli5"
"catboost/catboost" -> "automl/auto-sklearn"
"catboost/catboost" -> "marcotcr/lime"
"catboost/catboost" -> "blue-yonder/tsfresh"
"catboost/catboost" -> "Featuretools/featuretools"
"catboost/catboost" -> "fmfn/BayesianOptimization"
"catboost/catboost" -> "kaz-Anova/StackNet" ["e"=1]
"microsoft/SynapseML" -> "microsoft/FLAML"
"microsoft/SynapseML" -> "linkedin/feathr" ["e"=1]
"microsoft/SynapseML" -> "deepchecks/deepchecks"
"microsoft/SynapseML" -> "JohnSnowLabs/spark-nlp" ["e"=1]
"microsoft/SynapseML" -> "oegedijk/explainerdashboard"
"microsoft/SynapseML" -> "alteryx/featuretools"
"microsoft/SynapseML" -> "microsoft/hummingbird"
"microsoft/SynapseML" -> "Azure/azureml-examples" ["e"=1]
"microsoft/SynapseML" -> "csinva/imodels"
"microsoft/SynapseML" -> "interpretml/interpret"
"microsoft/SynapseML" -> "Azure/mlops-v2" ["e"=1]
"microsoft/SynapseML" -> "evidentlyai/evidently"
"microsoft/SynapseML" -> "SeldonIO/alibi-detect"
"microsoft/SynapseML" -> "Azure-Samples/Synapse" ["e"=1]
"microsoft/SynapseML" -> "databricks/koalas"
"mljar/mljar-supervised" -> "microsoft/FLAML"
"mljar/mljar-supervised" -> "pycaret/pycaret"
"mljar/mljar-supervised" -> "oegedijk/explainerdashboard"
"mljar/mljar-supervised" -> "awslabs/autogluon"
"mljar/mljar-supervised" -> "MAIF/shapash"
"mljar/mljar-supervised" -> "interpretml/interpret"
"mljar/mljar-supervised" -> "automl/auto-sklearn"
"mljar/mljar-supervised" -> "alteryx/featuretools"
"mljar/mljar-supervised" -> "alteryx/evalml"
"mljar/mljar-supervised" -> "EpistasisLab/tpot"
"mljar/mljar-supervised" -> "unit8co/darts" ["e"=1]
"mljar/mljar-supervised" -> "evidentlyai/evidently"
"mljar/mljar-supervised" -> "parrt/dtreeviz"
"mljar/mljar-supervised" -> "dreamquark-ai/tabnet" ["e"=1]
"mljar/mljar-supervised" -> "salesforce/Merlion" ["e"=1]
"pycaret/pycaret" -> "unit8co/darts" ["e"=1]
"pycaret/pycaret" -> "alan-turing-institute/sktime" ["e"=1]
"pycaret/pycaret" -> "pandas-profiling/pandas-profiling"
"pycaret/pycaret" -> "mlflow/mlflow"
"pycaret/pycaret" -> "optuna/optuna"
"pycaret/pycaret" -> "slundberg/shap"
"pycaret/pycaret" -> "automl/auto-sklearn"
"pycaret/pycaret" -> "blue-yonder/tsfresh"
"pycaret/pycaret" -> "yzhao062/pyod" ["e"=1]
"pycaret/pycaret" -> "modin-project/modin"
"pycaret/pycaret" -> "streamlit/streamlit" ["e"=1]
"pycaret/pycaret" -> "vaexio/vaex"
"pycaret/pycaret" -> "microsoft/FLAML"
"pycaret/pycaret" -> "EpistasisLab/tpot"
"pycaret/pycaret" -> "facebookresearch/Kats" ["e"=1]
"slundberg/shap" -> "marcotcr/lime"
"slundberg/shap" -> "dmlc/xgboost"
"slundberg/shap" -> "mlflow/mlflow"
"slundberg/shap" -> "pandas-profiling/pandas-profiling"
"slundberg/shap" -> "hyperopt/hyperopt"
"slundberg/shap" -> "scikit-learn-contrib/imbalanced-learn"
"slundberg/shap" -> "ray-project/ray"
"slundberg/shap" -> "streamlit/streamlit" ["e"=1]
"slundberg/shap" -> "google/jax" ["e"=1]
"slundberg/shap" -> "blue-yonder/tsfresh"
"slundberg/shap" -> "modin-project/modin"
"slundberg/shap" -> "interpretml/interpret"
"slundberg/shap" -> "optuna/optuna"
"slundberg/shap" -> "catboost/catboost"
"slundberg/shap" -> "fastai/fastai" ["e"=1]
"yzoz/python-option-calculator" -> "ChiragJhawar/ProjectReward"
"zenml-io/zenml" -> "deepchecks/deepchecks"
"zenml-io/zenml" -> "evidentlyai/evidently"
"zenml-io/zenml" -> "zenml-io/zenbytes"
"zenml-io/zenml" -> "NannyML/nannyml"
"zenml-io/zenml" -> "kelvins/awesome-mlops"
"zenml-io/zenml" -> "bentoml/BentoML"
"zenml-io/zenml" -> "whylabs/whylogs"
"zenml-io/zenml" -> "feast-dev/feast"
"zenml-io/zenml" -> "flyteorg/flyte"
"zenml-io/zenml" -> "allegroai/clearml"
"zenml-io/zenml" -> "dstackai/dstack"
"zenml-io/zenml" -> "ploomber/ploomber"
"zenml-io/zenml" -> "iterative/cml"
"zenml-io/zenml" -> "aimhubio/aim"
"zenml-io/zenml" -> "mlrun/mlrun"
"uber/manifold" -> "microsoft/interpret"
"uber/manifold" -> "uber/causalml" ["e"=1]
"uber/manifold" -> "microsoft/hummingbird"
"uber/manifold" -> "facebookresearch/hiplot"
"uber/manifold" -> "lyft/flyte"
"uber/manifold" -> "uber/orbit" ["e"=1]
"uber/manifold" -> "SeldonIO/alibi"
"uber/manifold" -> "uber/ludwig"
"uber/manifold" -> "interpretml/interpret"
"uber/manifold" -> "TeamHG-Memex/eli5"
"uber/manifold" -> "quantumblacklabs/kedro"
"uber/manifold" -> "cortexlabs/cortex"
"uber/manifold" -> "parrt/dtreeviz"
"uber/manifold" -> "quantumblacklabs/causalnex" ["e"=1]
"uber/manifold" -> "PAIR-code/what-if-tool"
"cleanlab/cleanlab" -> "deepchecks/deepchecks"
"cleanlab/cleanlab" -> "mosaicml/composer" ["e"=1]
"cleanlab/cleanlab" -> "evidentlyai/evidently"
"cleanlab/cleanlab" -> "SeldonIO/alibi-detect"
"cleanlab/cleanlab" -> "online-ml/river"
"cleanlab/cleanlab" -> "MaartenGr/BERTopic" ["e"=1]
"cleanlab/cleanlab" -> "NielsRogge/Transformers-Tutorials" ["e"=1]
"cleanlab/cleanlab" -> "Nixtla/statsforecast" ["e"=1]
"cleanlab/cleanlab" -> "interpretml/interpret"
"cleanlab/cleanlab" -> "google-research/tuning_playbook" ["e"=1]
"cleanlab/cleanlab" -> "gradio-app/gradio" ["e"=1]
"cleanlab/cleanlab" -> "optuna/optuna"
"cleanlab/cleanlab" -> "heartexlabs/label-studio" ["e"=1]
"cleanlab/cleanlab" -> "nebuly-ai/nebullvm" ["e"=1]
"cleanlab/cleanlab" -> "NannyML/nannyml"
"samus/mongodb-csharp" -> "atheken/NoRM"
"samus/mongodb-csharp" -> "mongodb/mongo-csharp-driver" ["e"=1]
"samus/mongodb-csharp" -> "freshlogic/MongoDB.Web"
"samus/mongodb-csharp" -> "enyim/EnyimMemcached" ["e"=1]
"samus/mongodb-csharp" -> "appharbor/AppHarbor.Web.Security" ["e"=1]
"samus/mongodb-csharp" -> "craiggwilson/fluent-mongo"
"samus/mongodb-csharp" -> "geffzhang/opendotnet" ["e"=1]
"jphall663/interpretable_machine_learning_with_python" -> "h2oai/mli-resources"
"jphall663/interpretable_machine_learning_with_python" -> "jphall663/awesome-machine-learning-interpretability"
"jphall663/interpretable_machine_learning_with_python" -> "lopusz/awesome-interpretable-machine-learning"
"jphall663/interpretable_machine_learning_with_python" -> "jphall663/GWU_data_mining"
"jphall663/interpretable_machine_learning_with_python" -> "EthicalML/xai"
"jphall663/interpretable_machine_learning_with_python" -> "oracle/Skater"
"jphall663/interpretable_machine_learning_with_python" -> "christophM/iml"
"jphall663/interpretable_machine_learning_with_python" -> "interpretml/interpret-community"
"jphall663/interpretable_machine_learning_with_python" -> "SauceCat/PDPbox"
"jphall663/interpretable_machine_learning_with_python" -> "pbiecek/xai_resources"
"jphall663/interpretable_machine_learning_with_python" -> "h2oai/h2o-meetups" ["e"=1]
"jphall663/interpretable_machine_learning_with_python" -> "interpretml/DiCE"
"jphall663/interpretable_machine_learning_with_python" -> "h2oai/awesome-h2o" ["e"=1]
"jphall663/interpretable_machine_learning_with_python" -> "andosa/treeinterpreter"
"jphall663/interpretable_machine_learning_with_python" -> "TeamHG-Memex/eli5"
"salesforce/TransmogrifAI" -> "Featuretools/featuretools"
"salesforce/TransmogrifAI" -> "combust/mleap" ["e"=1]
"salesforce/TransmogrifAI" -> "Azure/mmlspark" ["e"=1]
"salesforce/TransmogrifAI" -> "tensorflow/adanet"
"salesforce/TransmogrifAI" -> "tensorflow/model-analysis"
"salesforce/TransmogrifAI" -> "databricks/mlflow" ["e"=1]
"salesforce/TransmogrifAI" -> "oracle/graphpipe"
"salesforce/TransmogrifAI" -> "AxeldeRomblay/MLBox"
"salesforce/TransmogrifAI" -> "yahoo/TensorFlowOnSpark" ["e"=1]
"salesforce/TransmogrifAI" -> "h2oai/h2o-3"
"salesforce/TransmogrifAI" -> "ClimbsRocks/auto_ml"
"salesforce/TransmogrifAI" -> "EpistasisLab/tpot"
"salesforce/TransmogrifAI" -> "jhfjhfj1/autokeras"
"salesforce/TransmogrifAI" -> "JohnSnowLabs/spark-nlp" ["e"=1]
"salesforce/TransmogrifAI" -> "automl/auto-sklearn"
"dstackai/dstack" -> "iterative/terraform-provider-iterative"
"dstackai/dstack" -> "zenml-io/zenml"
"dstackai/dstack" -> "iterative/mlem"
"dstackai/dstack" -> "evidentlyai/evidently"
"dstackai/dstack" -> "unionai-oss/pandera"
"dstackai/dstack" -> "LineaLabs/lineapy"
"dstackai/dstack" -> "NannyML/nannyml"
"dstackai/dstack" -> "fugue-project/fugue"
"dstackai/dstack" -> "DataTalksClub/project-of-the-week" ["e"=1]
"dstackai/dstack" -> "flyteorg/flyte"
"dstackai/dstack" -> "deepchecks/deepchecks"
"dstackai/dstack" -> "fuzzylabs/awesome-open-mlops"
"dstackai/dstack" -> "skops-dev/skops"
"dstackai/dstack" -> "ploomber/ploomber"
"dstackai/dstack" -> "operatorai/modelstore"
"microsoft/nni" -> "awslabs/autogluon"
"microsoft/nni" -> "keras-team/autokeras"
"microsoft/nni" -> "rwightman/pytorch-image-models" ["e"=1]
"microsoft/nni" -> "lutzroeder/netron" ["e"=1]
"microsoft/nni" -> "hibayesian/awesome-automl-papers" ["e"=1]
"microsoft/nni" -> "horovod/horovod" ["e"=1]
"microsoft/nni" -> "PyTorchLightning/pytorch-lightning" ["e"=1]
"microsoft/nni" -> "open-mmlab/mmdetection" ["e"=1]
"microsoft/nni" -> "NVIDIA/apex" ["e"=1]
"microsoft/nni" -> "ray-project/ray"
"microsoft/nni" -> "facebookresearch/detectron2" ["e"=1]
"microsoft/nni" -> "automl/auto-sklearn"
"microsoft/nni" -> "optuna/optuna"
"microsoft/nni" -> "EpistasisLab/tpot"
"microsoft/nni" -> "NVIDIA/TensorRT" ["e"=1]
"zalandoresearch/fashion-mnist" -> "lmoroney/dlaicourse"
"zalandoresearch/fashion-mnist" -> "facebookresearch/Detectron" ["e"=1]
"zalandoresearch/fashion-mnist" -> "facebookresearch/fastText" ["e"=1]
"zalandoresearch/fashion-mnist" -> "deepmind/sonnet" ["e"=1]
"zalandoresearch/fashion-mnist" -> "pytorch/examples" ["e"=1]
"zalandoresearch/fashion-mnist" -> "PAIR-code/facets"
"zalandoresearch/fashion-mnist" -> "fastai/fastai" ["e"=1]
"zalandoresearch/fashion-mnist" -> "lengstrom/fast-style-transfer" ["e"=1]
"zalandoresearch/fashion-mnist" -> "junyanz/pytorch-CycleGAN-and-pix2pix" ["e"=1]
"zalandoresearch/fashion-mnist" -> "tensorflow/models" ["e"=1]
"zalandoresearch/fashion-mnist" -> "tensorflow/tensor2tensor" ["e"=1]
"zalandoresearch/fashion-mnist" -> "tensorflow/magenta" ["e"=1]
"zalandoresearch/fashion-mnist" -> "dmlc/xgboost"
"zalandoresearch/fashion-mnist" -> "matterport/Mask_RCNN" ["e"=1]
"zalandoresearch/fashion-mnist" -> "fchollet/keras" ["e"=1]
"google/model_search" -> "microsoft/nni"
"google/model_search" -> "awslabs/autogluon"
"google/model_search" -> "microsoft/FLAML"
"google/model_search" -> "MAIF/shapash"
"google/model_search" -> "keras-team/autokeras"
"google/model_search" -> "google/automl" ["e"=1]
"google/model_search" -> "ourownstory/neural_prophet" ["e"=1]
"google/model_search" -> "mlflow/mlflow"
"google/model_search" -> "PAIR-code/lit" ["e"=1]
"google/model_search" -> "activeloopai/Hub"
"google/model_search" -> "evidentlyai/evidently"
"google/model_search" -> "facebookresearch/AugLy" ["e"=1]
"google/model_search" -> "pycaret/pycaret"
"google/model_search" -> "SeldonIO/alibi-detect"
"google/model_search" -> "online-ml/river"
"Microsoft/LightGBM" -> "dmlc/xgboost"
"Microsoft/LightGBM" -> "catboost/catboost"
"Microsoft/LightGBM" -> "dmlc/mxnet" ["e"=1]
"Microsoft/LightGBM" -> "aksnzhy/xlearn" ["e"=1]
"Microsoft/LightGBM" -> "Microsoft/DMTK" ["e"=1]
"Microsoft/LightGBM" -> "facebookresearch/fastText" ["e"=1]
"Microsoft/LightGBM" -> "JohnLangford/vowpal_wabbit" ["e"=1]
"Microsoft/LightGBM" -> "guestwalk/libffm" ["e"=1]
"Microsoft/LightGBM" -> "fchollet/keras" ["e"=1]
"Microsoft/LightGBM" -> "hyperopt/hyperopt"
"Microsoft/LightGBM" -> "scikit-learn-contrib/imbalanced-learn"
"Microsoft/LightGBM" -> "ChenglongChen/Kaggle_CrowdFlower" ["e"=1]
"Microsoft/LightGBM" -> "songrotek/Deep-Learning-Papers-Reading-Roadmap" ["e"=1]
"Microsoft/LightGBM" -> "srendle/libfm" ["e"=1]
"Microsoft/LightGBM" -> "facebookresearch/faiss" ["e"=1]
"WillKoehrsen/feature-selector" -> "Featuretools/featuretools"
"WillKoehrsen/feature-selector" -> "WillKoehrsen/automated-feature-engineering"
"WillKoehrsen/feature-selector" -> "scikit-learn-contrib/boruta_py"
"WillKoehrsen/feature-selector" -> "scikit-learn-contrib/imbalanced-learn"
"WillKoehrsen/feature-selector" -> "duxuhao/Feature-Selection"
"WillKoehrsen/feature-selector" -> "rasbt/mlxtend"
"WillKoehrsen/feature-selector" -> "Yimeng-Zhang/feature-engineering-and-feature-selection"
"WillKoehrsen/feature-selector" -> "ShichenXie/scorecardpy" ["e"=1]
"WillKoehrsen/feature-selector" -> "jundongl/scikit-feature"
"WillKoehrsen/feature-selector" -> "abhayspawar/featexp"
"WillKoehrsen/feature-selector" -> "hyperopt/hyperopt"
"WillKoehrsen/feature-selector" -> "yzhao062/pyod" ["e"=1]
"WillKoehrsen/feature-selector" -> "scikit-learn-contrib/categorical-encoding"
"WillKoehrsen/feature-selector" -> "WillKoehrsen/hyperparameter-optimization"
"WillKoehrsen/feature-selector" -> "WillKoehrsen/machine-learning-project-walkthrough" ["e"=1]
"unionai-oss/pandera" -> "unionai-oss/unionml"
"unionai-oss/pandera" -> "DAGWorks-Inc/hamilton" ["e"=1]
"unionai-oss/pandera" -> "ipyflow/ipyflow" ["e"=1]
"unionai-oss/pandera" -> "dstackai/dstack"
"unionai-oss/pandera" -> "flyteorg/flyte"
"unionai-oss/pandera" -> "pydantic/pydantic-core" ["e"=1]
"unionai-oss/pandera" -> "LineaLabs/lineapy"
"unionai-oss/pandera" -> "pydantic/pydantic" ["e"=1]
"unionai-oss/pandera" -> "NannyML/nannyml"
"unionai-oss/pandera" -> "fugue-project/fugue"
"unionai-oss/pandera" -> "vizzuhq/ipyvizzu"
"unionai-oss/pandera" -> "humblepenguinn/envio" ["e"=1]
"unionai-oss/pandera" -> "dosisod/refurb" ["e"=1]
"unionai-oss/pandera" -> "comet-ml/kangas" ["e"=1]
"unionai-oss/pandera" -> "feature-engine/feature_engine"
"irmen/Pyro4" -> "irmen/Pyro5"
"irmen/Pyro4" -> "tomerfiliba/rpyc"
"irmen/Pyro4" -> "studio-ousia/mprpc"
"irmen/Pyro4" -> "cloudpipe/cloudpickle"
"irmen/Pyro4" -> "irmen/Pyrolite"
"irmen/Pyro4" -> "irmen/Serpent"
"quantumblacklabs/kedro" -> "quantumblacklabs/causalnex" ["e"=1]
"quantumblacklabs/kedro" -> "great-expectations/great_expectations" ["e"=1]
"quantumblacklabs/kedro" -> "drivendata/cookiecutter-data-science"
"quantumblacklabs/kedro" -> "pandas-profiling/pandas-profiling"
"quantumblacklabs/kedro" -> "iterative/dvc"
"quantumblacklabs/kedro" -> "mlflow/mlflow"
"quantumblacklabs/kedro" -> "dagster-io/dagster" ["e"=1]
"quantumblacklabs/kedro" -> "Netflix/metaflow"
"quantumblacklabs/kedro" -> "vaexio/vaex"
"quantumblacklabs/kedro" -> "quantumblacklabs/kedro-viz"
"quantumblacklabs/kedro" -> "modin-project/modin"
"quantumblacklabs/kedro" -> "bentoml/BentoML"
"quantumblacklabs/kedro" -> "iterative/cml"
"quantumblacklabs/kedro" -> "PrefectHQ/prefect" ["e"=1]
"quantumblacklabs/kedro" -> "databricks/koalas"
"dnouri/skorch" -> "lanpa/tensorboard-pytorch" ["e"=1]
"dnouri/skorch" -> "uber/pyro"
"dnouri/skorch" -> "pytorch/ignite" ["e"=1]
"dnouri/skorch" -> "pytorch/tnt" ["e"=1]
"dnouri/skorch" -> "mila-udem/welcome_tutorials" ["e"=1]
"dnouri/skorch" -> "ncullen93/torchsample" ["e"=1]
"dnouri/skorch" -> "spro/practical-pytorch" ["e"=1]
"dnouri/skorch" -> "reiinakano/xcessiv"
"dnouri/skorch" -> "probtorch/probtorch"
"dnouri/skorch" -> "facebookresearch/visdom" ["e"=1]
"dnouri/skorch" -> "PetrochukM/PyTorch-NLP" ["e"=1]
"dnouri/skorch" -> "timomernick/pytorch-capsule" ["e"=1]
"dnouri/skorch" -> "salesforce/matchbox" ["e"=1]
"dnouri/skorch" -> "salesforce/pytorch-qrnn" ["e"=1]
"dnouri/skorch" -> "zeyiwen/thundersvm"
"uber/pyro" -> "blei-lab/edward"
"uber/pyro" -> "uber/horovod" ["e"=1]
"uber/pyro" -> "lanpa/tensorboard-pytorch" ["e"=1]
"uber/pyro" -> "tensorflow/probability"
"uber/pyro" -> "deepmind/sonnet" ["e"=1]
"uber/pyro" -> "google/tangent"
"uber/pyro" -> "facebookresearch/visdom" ["e"=1]
"uber/pyro" -> "dnouri/skorch"
"uber/pyro" -> "pymc-devs/pymc3"
"uber/pyro" -> "probtorch/probtorch"
"uber/pyro" -> "yunjey/StarGAN" ["e"=1]
"uber/pyro" -> "PAIR-code/facets"
"uber/pyro" -> "facebookresearch/ParlAI" ["e"=1]
"uber/pyro" -> "HIPS/autograd"
"uber/pyro" -> "cornellius-gp/gpytorch"
"uqfoundation/pathos" -> "uqfoundation/multiprocess"
"uqfoundation/pathos" -> "uqfoundation/dill"
"uqfoundation/pathos" -> "uqfoundation/mystic"
"uqfoundation/pathos" -> "swansonk14/p_tqdm"
"uqfoundation/pathos" -> "soravux/scoop"
"uqfoundation/pathos" -> "joblib/joblib" ["e"=1]
"uqfoundation/pathos" -> "uqfoundation/pyina"
"uqfoundation/pathos" -> "ipython-contrib/IPython-notebook-extensions" ["e"=1]
"uqfoundation/pathos" -> "pydata/sparse" ["e"=1]
"uqfoundation/pathos" -> "scikit-optimize/scikit-optimize"
"uqfoundation/pathos" -> "uqfoundation/ppft"
"uqfoundation/pathos" -> "pydata/numexpr" ["e"=1]
"uqfoundation/pathos" -> "stan-dev/pystan" ["e"=1]
"uqfoundation/pathos" -> "dfm/george" ["e"=1]
"uqfoundation/pathos" -> "Blosc/bcolz" ["e"=1]
"optuna/optuna" -> "hyperopt/hyperopt"
"optuna/optuna" -> "slundberg/shap"
"optuna/optuna" -> "mlflow/mlflow"
"optuna/optuna" -> "PyTorchLightning/pytorch-lightning" ["e"=1]
"optuna/optuna" -> "pycaret/pycaret"
"optuna/optuna" -> "facebookresearch/hydra" ["e"=1]
"optuna/optuna" -> "google/jax" ["e"=1]
"optuna/optuna" -> "fmfn/BayesianOptimization"
"optuna/optuna" -> "microsoft/nni"
"optuna/optuna" -> "microsoft/LightGBM"
"optuna/optuna" -> "ray-project/ray"
"optuna/optuna" -> "unit8co/darts" ["e"=1]
"optuna/optuna" -> "iterative/dvc"
"optuna/optuna" -> "EpistasisLab/tpot"
"optuna/optuna" -> "automl/auto-sklearn"
"facebook/prophet" -> "blue-yonder/tsfresh"
"facebook/prophet" -> "slundberg/shap"
"facebook/prophet" -> "ourownstory/neural_prophet" ["e"=1]
"facebook/prophet" -> "statsmodels/statsmodels" ["e"=1]
"facebook/prophet" -> "dmlc/xgboost"
"facebook/prophet" -> "alan-turing-institute/sktime" ["e"=1]
"facebook/prophet" -> "plotly/dash" ["e"=1]
"facebook/prophet" -> "facebookresearch/Kats" ["e"=1]
"facebook/prophet" -> "modin-project/modin"
"facebook/prophet" -> "mlflow/mlflow"
"facebook/prophet" -> "unit8co/darts" ["e"=1]
"facebook/prophet" -> "yzhao062/pyod" ["e"=1]
"facebook/prophet" -> "pandas-profiling/pandas-profiling"
"facebook/prophet" -> "explosion/spaCy" ["e"=1]
"facebook/prophet" -> "streamlit/streamlit" ["e"=1]
"feast-dev/feast" -> "SeldonIO/seldon-core"
"feast-dev/feast" -> "mlflow/mlflow"
"feast-dev/feast" -> "bentoml/BentoML"
"feast-dev/feast" -> "logicalclocks/hopsworks"
"feast-dev/feast" -> "evidentlyai/evidently"
"feast-dev/feast" -> "Netflix/metaflow"
"feast-dev/feast" -> "flyteorg/flyte"
"feast-dev/feast" -> "great-expectations/great_expectations" ["e"=1]
"feast-dev/feast" -> "linkedin/feathr" ["e"=1]
"feast-dev/feast" -> "kubeflow/kubeflow"
"feast-dev/feast" -> "visenger/awesome-mlops" ["e"=1]
"feast-dev/feast" -> "alteryx/featuretools"
"feast-dev/feast" -> "iterative/dvc"
"feast-dev/feast" -> "iterative/cml"
"feast-dev/feast" -> "zenml-io/zenml"
"SeldonIO/alibi-detect" -> "SeldonIO/alibi"
"SeldonIO/alibi-detect" -> "evidentlyai/evidently"
"SeldonIO/alibi-detect" -> "whylabs/whylogs"
"SeldonIO/alibi-detect" -> "online-ml/river"
"SeldonIO/alibi-detect" -> "deepchecks/deepchecks"
"SeldonIO/alibi-detect" -> "SeldonIO/seldon-core"
"SeldonIO/alibi-detect" -> "MAIF/shapash"
"SeldonIO/alibi-detect" -> "oegedijk/explainerdashboard"
"SeldonIO/alibi-detect" -> "NannyML/nannyml"
"SeldonIO/alibi-detect" -> "salesforce/Merlion" ["e"=1]
"SeldonIO/alibi-detect" -> "facebookresearch/Kats" ["e"=1]
"SeldonIO/alibi-detect" -> "zillow/luminaire" ["e"=1]
"SeldonIO/alibi-detect" -> "microsoft/FLAML"
"SeldonIO/alibi-detect" -> "alan-turing-institute/sktime" ["e"=1]
"SeldonIO/alibi-detect" -> "microsoft/hummingbird"
"cornellius-gp/gpytorch" -> "pytorch/botorch"
"cornellius-gp/gpytorch" -> "GPflow/GPflow"
"cornellius-gp/gpytorch" -> "SheffieldML/GPy"
"cornellius-gp/gpytorch" -> "pyro-ppl/pyro"
"cornellius-gp/gpytorch" -> "pyro-ppl/numpyro" ["e"=1]
"cornellius-gp/gpytorch" -> "rtqichen/torchdiffeq" ["e"=1]
"cornellius-gp/gpytorch" -> "facebook/Ax"
"cornellius-gp/gpytorch" -> "google/neural-tangents" ["e"=1]
"cornellius-gp/gpytorch" -> "krasserm/bayesian-machine-learning"
"cornellius-gp/gpytorch" -> "fmfn/BayesianOptimization"
"cornellius-gp/gpytorch" -> "JavierAntoran/Bayesian-Neural-Networks" ["e"=1]
"cornellius-gp/gpytorch" -> "tensorflow/probability"
"cornellius-gp/gpytorch" -> "facebookresearch/nevergrad"
"cornellius-gp/gpytorch" -> "blei-lab/edward"
"cornellius-gp/gpytorch" -> "uber/pyro"
"SeldonIO/alibi" -> "SeldonIO/alibi-detect"
"SeldonIO/alibi" -> "interpretml/interpret"
"SeldonIO/alibi" -> "interpretml/DiCE"
"SeldonIO/alibi" -> "EthicalML/xai"
"SeldonIO/alibi" -> "SeldonIO/seldon-core"
"SeldonIO/alibi" -> "Trusted-AI/AIX360"
"SeldonIO/alibi" -> "marcotcr/anchor"
"SeldonIO/alibi" -> "evidentlyai/evidently"
"SeldonIO/alibi" -> "pytorch/captum" ["e"=1]
"SeldonIO/alibi" -> "ModelOriented/DALEX"
"SeldonIO/alibi" -> "MAIF/shapash"
"SeldonIO/alibi" -> "jphall663/awesome-machine-learning-interpretability"
"SeldonIO/alibi" -> "TeamHG-Memex/eli5"
"SeldonIO/alibi" -> "deepchecks/deepchecks"
"SeldonIO/alibi" -> "oegedijk/explainerdashboard"
"kubeflow/katib" -> "kubeflow/tf-operator" ["e"=1]
"kubeflow/katib" -> "kubeflow/pipelines"
"kubeflow/katib" -> "kubeflow/kfserving"
"kubeflow/katib" -> "kubeflow/kubeflow"
"kubeflow/katib" -> "kubeflow-kale/kale"
"kubeflow/katib" -> "kubeflow/mpi-operator" ["e"=1]
"kubeflow/katib" -> "kubeflow/examples" ["e"=1]
"kubeflow/katib" -> "kubeflow/fairing"
"kubeflow/katib" -> "SeldonIO/seldon-core"
"kubeflow/katib" -> "tobegit3hub/advisor"
"kubeflow/katib" -> "kubeflow/manifests"
"kubeflow/katib" -> "sql-machine-learning/elasticdl" ["e"=1]
"kubeflow/katib" -> "kubernetes-sigs/kube-batch" ["e"=1]
"kubeflow/katib" -> "kubeflow/pytorch-operator" ["e"=1]
"kubeflow/katib" -> "tensorflow/tfx"
"nalepae/pandarallel" -> "jmcarpenter2/swifter"
"nalepae/pandarallel" -> "modin-project/modin"
"nalepae/pandarallel" -> "vaexio/vaex"
"nalepae/pandarallel" -> "pandas-profiling/pandas-profiling"
"nalepae/pandarallel" -> "blue-yonder/tsfresh"
"nalepae/pandarallel" -> "rapidsai/cudf"
"nalepae/pandarallel" -> "TeamHG-Memex/eli5"
"nalepae/pandarallel" -> "slundberg/shap"
"nalepae/pandarallel" -> "databricks/koalas"
"nalepae/pandarallel" -> "pycaret/pycaret"
"nalepae/pandarallel" -> "rasbt/mlxtend"
"nalepae/pandarallel" -> "pandera-dev/pandera"
"nalepae/pandarallel" -> "EpistasisLab/tpot"
"nalepae/pandarallel" -> "optuna/optuna"
"nalepae/pandarallel" -> "hyperopt/hyperopt"
"polyaxon/polyaxon" -> "pachyderm/pachyderm"
"polyaxon/polyaxon" -> "SeldonIO/seldon-core"
"polyaxon/polyaxon" -> "kubeflow/kubeflow"
"polyaxon/polyaxon" -> "IDSIA/sacred"
"polyaxon/polyaxon" -> "mlflow/mlflow"
"polyaxon/polyaxon" -> "iterative/dvc"
"polyaxon/polyaxon" -> "bentoml/BentoML"
"polyaxon/polyaxon" -> "allegroai/clearml"
"polyaxon/polyaxon" -> "Netflix/metaflow"
"polyaxon/polyaxon" -> "iterative/cml"
"polyaxon/polyaxon" -> "uber/horovod" ["e"=1]
"polyaxon/polyaxon" -> "ucbrise/clipper"
"polyaxon/polyaxon" -> "kubeflow/kfserving"
"polyaxon/polyaxon" -> "PAIR-code/facets"
"polyaxon/polyaxon" -> "kubeflow/katib"
"kedro-org/kedro-viz" -> "kedro-org/kedro"
"kedro-org/kedro-viz" -> "tokern/data-lineage" ["e"=1]
"kedro-org/kedro-viz" -> "kedro-org/kedro-community"
"kedro-org/kedro-viz" -> "kedro-org/kedro-plugins"
"kubeflow/pipelines" -> "kubeflow/kubeflow"
"kubeflow/pipelines" -> "kubeflow/katib"
"kubeflow/pipelines" -> "kubeflow/examples" ["e"=1]
"kubeflow/pipelines" -> "kubeflow/kfserving"
"kubeflow/pipelines" -> "tensorflow/tfx"
"kubeflow/pipelines" -> "kubeflow-kale/kale"
"kubeflow/pipelines" -> "SeldonIO/seldon-core"
"kubeflow/pipelines" -> "kubeflow/manifests"
"kubeflow/pipelines" -> "argoproj/argo" ["e"=1]
"kubeflow/pipelines" -> "mlflow/mlflow"
"kubeflow/pipelines" -> "feast-dev/feast"
"kubeflow/pipelines" -> "kubeflow/tf-operator" ["e"=1]
"kubeflow/pipelines" -> "kserve/kserve"
"kubeflow/pipelines" -> "google/ml-metadata"
"kubeflow/pipelines" -> "bentoml/BentoML"
"eBay/bayesian-belief-networks" -> "bayespy/bayespy"
"eBay/bayesian-belief-networks" -> "pgmpy/pgmpy"
"eBay/bayesian-belief-networks" -> "ncullen93/pyBN"
"eBay/bayesian-belief-networks" -> "hannes-brt/hebel" ["e"=1]
"eBay/bayesian-belief-networks" -> "bayesnet/bnt"
"eBay/bayesian-belief-networks" -> "jmschrei/pomegranate"
"eBay/bayesian-belief-networks" -> "pymc-devs/pymc"
"eBay/bayesian-belief-networks" -> "yhat/ggplot" ["e"=1]
"eBay/bayesian-belief-networks" -> "danielkorzekwa/bayes-scala" ["e"=1]
"eBay/bayesian-belief-networks" -> "piskvorky/gensim" ["e"=1]
"eBay/bayesian-belief-networks" -> "mit-probabilistic-computing-project/BayesDB" ["e"=1]
"eBay/bayesian-belief-networks" -> "blei-lab/edward"
"eBay/bayesian-belief-networks" -> "ogrisel/parallel_ml_tutorial" ["e"=1]
"eBay/bayesian-belief-networks" -> "jakevdp/mpld3" ["e"=1]
"eBay/bayesian-belief-networks" -> "larsmans/seqlearn"
"drivendata/cookiecutter-data-science" -> "quantumblacklabs/kedro"
"drivendata/cookiecutter-data-science" -> "iterative/dvc"
"drivendata/cookiecutter-data-science" -> "pandas-profiling/pandas-profiling"
"drivendata/cookiecutter-data-science" -> "great-expectations/great_expectations" ["e"=1]
"drivendata/cookiecutter-data-science" -> "mlflow/mlflow"
"drivendata/cookiecutter-data-science" -> "slundberg/shap"
"drivendata/cookiecutter-data-science" -> "cookiecutter/cookiecutter" ["e"=1]
"drivendata/cookiecutter-data-science" -> "EthicalML/awesome-production-machine-learning" ["e"=1]
"drivendata/cookiecutter-data-science" -> "visenger/awesome-mlops" ["e"=1]
"drivendata/cookiecutter-data-science" -> "marcotcr/lime"
"drivendata/cookiecutter-data-science" -> "modin-project/modin"
"drivendata/cookiecutter-data-science" -> "mwouts/jupytext" ["e"=1]
"drivendata/cookiecutter-data-science" -> "nteract/papermill" ["e"=1]
"drivendata/cookiecutter-data-science" -> "DistrictDataLabs/yellowbrick"
"drivendata/cookiecutter-data-science" -> "blue-yonder/tsfresh"
"tensorflow/tfx" -> "google/ml-metadata"
"tensorflow/tfx" -> "kubeflow/pipelines"
"tensorflow/tfx" -> "tensorflow/model-analysis"
"tensorflow/tfx" -> "tensorflow/transform"
"tensorflow/tfx" -> "tensorflow/data-validation"
"tensorflow/tfx" -> "tensorflow/serving"
"tensorflow/tfx" -> "kubeflow/kubeflow"
"tensorflow/tfx" -> "tensorflow/io"
"tensorflow/tfx" -> "tensorflow/addons"
"tensorflow/tfx" -> "SeldonIO/seldon-core"
"tensorflow/tfx" -> "tensorflow/tfx-addons"
"tensorflow/tfx" -> "kubeflow/katib"
"tensorflow/tfx" -> "feast-dev/feast"
"tensorflow/tfx" -> "tensorflow/community"
"tensorflow/tfx" -> "mlflow/mlflow"
"VowpalWabbit/vowpal_wabbit" -> "david-cortes/contextualbandits" ["e"=1]
"VowpalWabbit/vowpal_wabbit" -> "TeamHG-Memex/eli5"
"VowpalWabbit/vowpal_wabbit" -> "online-ml/river"
"VowpalWabbit/vowpal_wabbit" -> "geffy/tffm" ["e"=1]
"VowpalWabbit/vowpal_wabbit" -> "srendle/libfm" ["e"=1]
"VowpalWabbit/vowpal_wabbit" -> "lyst/lightfm" ["e"=1]
"VowpalWabbit/vowpal_wabbit" -> "hyperopt/hyperopt"
"VowpalWabbit/vowpal_wabbit" -> "microsoft/dowhy" ["e"=1]
"VowpalWabbit/vowpal_wabbit" -> "microsoft/LightGBM"
"VowpalWabbit/vowpal_wabbit" -> "catboost/catboost"
"VowpalWabbit/vowpal_wabbit" -> "uber/causalml" ["e"=1]
"VowpalWabbit/vowpal_wabbit" -> "slundberg/shap"
"VowpalWabbit/vowpal_wabbit" -> "blue-yonder/tsfresh"
"VowpalWabbit/vowpal_wabbit" -> "mlflow/mlflow"
"VowpalWabbit/vowpal_wabbit" -> "modAL-python/modAL" ["e"=1]
"jbrownlee/Datasets" -> "tensorflow/datasets"
"jbrownlee/Datasets" -> "lmoroney/dlaicourse"
"jbrownlee/Datasets" -> "keras-team/keras-preprocessing"
"jbrownlee/Datasets" -> "justmarkham/scikit-learn-tips" ["e"=1]
"jbrownlee/Datasets" -> "tirthajyoti/Deep-learning-with-Python" ["e"=1]
"jbrownlee/Datasets" -> "tirthajyoti/Machine-Learning-with-Python" ["e"=1]
"jbrownlee/Datasets" -> "INRIA/scikit-learn-mooc" ["e"=1]
"jbrownlee/Datasets" -> "PacktPublishing/Practical-Time-Series-Analysis" ["e"=1]
"jbrownlee/Datasets" -> "amanjeetsahu/Natural-Language-Processing-Specialization" ["e"=1]
"jbrownlee/Datasets" -> "PracticalTimeSeriesAnalysis/BookRepo" ["e"=1]
"jbrownlee/Datasets" -> "enggen/Deep-Learning-Coursera" ["e"=1]
"jbrownlee/Datasets" -> "https-deeplearning-ai/tensorflow-1-public" ["e"=1]
"jbrownlee/Datasets" -> "ijelliti/Deeplearning.ai-Natural-Language-Processing-Specialization" ["e"=1]
"jbrownlee/Datasets" -> "PacktPublishing/Hands-on-Exploratory-Data-Analysis-with-Python" ["e"=1]
"jbrownlee/Datasets" -> "https-deeplearning-ai/tensorflow-2-public" ["e"=1]
"datamllab/awesome-fairness-in-ai" -> "yongkaiwu/FairAI"
"datamllab/awesome-fairness-in-ai" -> "uclanlp/awesome-fairness-papers"
"datamllab/awesome-fairness-in-ai" -> "mbilalzafar/fair-classification"
"datamllab/awesome-fairness-in-ai" -> "Trusted-AI/AIF360"
"datamllab/awesome-fairness-in-ai" -> "princetonvisualai/DomainBiasMitigation" ["e"=1]
"cod3licious/autofeat" -> "solegalli/feature_engine"
"cod3licious/autofeat" -> "Ekeany/Boruta-Shap"
"cod3licious/autofeat" -> "AutoViML/featurewiz"
"cod3licious/autofeat" -> "AutoViML/Auto_ViML"
"cod3licious/autofeat" -> "cerlymarco/linear-tree"
"cod3licious/autofeat" -> "scikit-learn-contrib/boruta_py"
"cod3licious/autofeat" -> "christophM/rulefit"
"cod3licious/autofeat" -> "predict-idlab/tsflex" ["e"=1]
"cod3licious/autofeat" -> "kearnz/autoimpute"
"cod3licious/autofeat" -> "alteryx/evalml"
"cod3licious/autofeat" -> "aerdem4/lofo-importance"
"cod3licious/autofeat" -> "cerlymarco/shap-hypetune"
"cod3licious/autofeat" -> "alteryx/featuretools"
"cod3licious/autofeat" -> "StatMixedML/XGBoostLSS"
"cod3licious/autofeat" -> "tr8dr/tseries-patterns" ["e"=1]
"MaxHalford/xam" -> "MaxHalford/kaggle-recruit-restaurant" ["e"=1]
"MaxHalford/xam" -> "Laurae2/Laurae"
"MaxHalford/xam" -> "xiaozhouwang/kaggle-porto-seguro" ["e"=1]
"MaxHalford/xam" -> "solegalli/feature_engine"
"MaxHalford/xam" -> "aerdem4/lofo-importance"
"MaxHalford/xam" -> "scikit-learn-contrib/boruta_py"
"MaxHalford/xam" -> "jfpuget/LibFM_in_Keras" ["e"=1]
"MaxHalford/xam" -> "sjvasquez/web-traffic-forecasting" ["e"=1]
"MaxHalford/xam" -> "scikit-learn-contrib/stability-selection"
"trevismd/statannotations" -> "webermarcolivier/statannot"
"trevismd/statannotations" -> "jnothman/UpSetPlot" ["e"=1]
"trevismd/statannotations" -> "DingWB/PyComplexHeatmap"
"trevismd/statannotations" -> "pog87/PtitPrince" ["e"=1]
"trevismd/statannotations" -> "raphaelvallat/pingouin"
"flyteorg/flyte" -> "feast-dev/feast"
"flyteorg/flyte" -> "unionai-oss/unionml"
"flyteorg/flyte" -> "ploomber/ploomber"
"flyteorg/flyte" -> "dagster-io/dagster" ["e"=1]
"flyteorg/flyte" -> "SeldonIO/seldon-core"
"flyteorg/flyte" -> "zenml-io/zenml"
"flyteorg/flyte" -> "fugue-project/fugue"
"flyteorg/flyte" -> "Netflix/metaflow"
"flyteorg/flyte" -> "bentoml/BentoML"
"flyteorg/flyte" -> "evidentlyai/evidently"
"flyteorg/flyte" -> "mlrun/mlrun"
"flyteorg/flyte" -> "whylabs/whylogs"
"flyteorg/flyte" -> "great-expectations/great_expectations" ["e"=1]
"flyteorg/flyte" -> "pandera-dev/pandera"
"flyteorg/flyte" -> "aimhubio/aim"
"tensorflow/datasets" -> "lmoroney/dlaicourse"
"tensorflow/datasets" -> "tensorflow/docs"
"tensorflow/datasets" -> "tensorflow/hub"
"tensorflow/datasets" -> "tensorflow/tensorboard"
"tensorflow/datasets" -> "tensorflow/addons"
"tensorflow/datasets" -> "keras-team/keras-preprocessing"
"tensorflow/datasets" -> "tensorflow/probability"
"tensorflow/datasets" -> "zalandoresearch/fashion-mnist"
"tensorflow/datasets" -> "tensorflow/examples"
"tensorflow/datasets" -> "tensorflow/tfx"
"tensorflow/datasets" -> "tensorflow/model-optimization"
"tensorflow/datasets" -> "tensorflow/tensor2tensor" ["e"=1]
"tensorflow/datasets" -> "keras-team/keras-tuner"
"tensorflow/datasets" -> "tensorflow/agents" ["e"=1]
"tensorflow/datasets" -> "tensorflow/text"
"modin-project/modin" -> "vaexio/vaex"
"modin-project/modin" -> "ray-project/ray"
"modin-project/modin" -> "dask/dask" ["e"=1]
"modin-project/modin" -> "pandas-profiling/pandas-profiling"
"modin-project/modin" -> "slundberg/shap"
"modin-project/modin" -> "streamlit/streamlit" ["e"=1]
"modin-project/modin" -> "great-expectations/great_expectations" ["e"=1]
"modin-project/modin" -> "nalepae/pandarallel"
"modin-project/modin" -> "rapidsai/cudf"
"modin-project/modin" -> "jmcarpenter2/swifter"
"modin-project/modin" -> "iterative/dvc"
"modin-project/modin" -> "pola-rs/polars" ["e"=1]
"modin-project/modin" -> "altair-viz/altair" ["e"=1]
"modin-project/modin" -> "blue-yonder/tsfresh"
"modin-project/modin" -> "mlflow/mlflow"
"activeloopai/Hub" -> "PyTorchLightning/pytorch-lightning" ["e"=1]
"activeloopai/Hub" -> "evidentlyai/evidently"
"activeloopai/Hub" -> "facebookresearch/AugLy" ["e"=1]
"activeloopai/Hub" -> "aimhubio/aim"
"activeloopai/Hub" -> "arogozhnikov/einops" ["e"=1]
"activeloopai/Hub" -> "facebookresearch/hydra" ["e"=1]
"activeloopai/Hub" -> "iterative/dvc"
"activeloopai/Hub" -> "iterative/cml"
"activeloopai/Hub" -> "surfcodes/surf"
"activeloopai/Hub" -> "bentoml/BentoML"
"activeloopai/Hub" -> "visenger/awesome-mlops" ["e"=1]
"activeloopai/Hub" -> "facebookresearch/vissl" ["e"=1]
"activeloopai/Hub" -> "google/jax" ["e"=1]
"activeloopai/Hub" -> "kornia/kornia" ["e"=1]
"activeloopai/Hub" -> "maiot-io/zenml"
"thu-ml/zhusuan" -> "blei-lab/edward"
"thu-ml/zhusuan" -> "robi56/awesome-bayesian-deep-learning" ["e"=1]
"thu-ml/zhusuan" -> "uber/pyro"
"thu-ml/zhusuan" -> "tensorflow/probability"
"thu-ml/zhusuan" -> "pymc-devs/pymc3"
"thu-ml/zhusuan" -> "JavierAntoran/Bayesian-Neural-Networks" ["e"=1]
"thu-ml/zhusuan" -> "thu-ml/tianshou" ["e"=1]
"thu-ml/zhusuan" -> "andrewgordonwilson/bayesgan"
"thu-ml/zhusuan" -> "martinarjovsky/WassersteinGAN" ["e"=1]
"thu-ml/zhusuan" -> "pgmpy/pgmpy"
"thu-ml/zhusuan" -> "GPflow/GPflow"
"thu-ml/zhusuan" -> "cornellius-gp/gpytorch"
"thu-ml/zhusuan" -> "kumar-shridhar/PyTorch-BayesianCNN" ["e"=1]
"thu-ml/zhusuan" -> "igul222/improved_wgan_training" ["e"=1]
"thu-ml/zhusuan" -> "kyle-dorman/bayesian-neural-network-blogpost" ["e"=1]
"dennisbakhuis/pigeonXT" -> "agermanidis/pigeon"
"dennisbakhuis/pigeonXT" -> "ideonate/jupyter-innotater"
"IBM/lale" -> "IBM/AIX360"
"IBM/lale" -> "IBM/yaps"
"IBM/lale" -> "ealcobaca/pymfe"
"lmoroney/dlaicourse" -> "zalandoresearch/fashion-mnist"
"lmoroney/dlaicourse" -> "tensorflow/datasets"
"lmoroney/dlaicourse" -> "keras-team/keras-preprocessing"
"lmoroney/dlaicourse" -> "Kulbear/deep-learning-coursera" ["e"=1]
"lmoroney/dlaicourse" -> "mbadry1/DeepLearning.ai-Summary" ["e"=1]
"lmoroney/dlaicourse" -> "ageron/handson-ml2" ["e"=1]
"lmoroney/dlaicourse" -> "https-deeplearning-ai/tensorflow-1-public" ["e"=1]
"lmoroney/dlaicourse" -> "udacity/deep-learning-v2-pytorch" ["e"=1]
"lmoroney/dlaicourse" -> "fastai/course-v3" ["e"=1]
"lmoroney/dlaicourse" -> "fchollet/deep-learning-with-python-notebooks" ["e"=1]
"lmoroney/dlaicourse" -> "GoogleCloudPlatform/training-data-analyst" ["e"=1]
"lmoroney/dlaicourse" -> "tensorflow/docs"
"lmoroney/dlaicourse" -> "aamini/introtodeeplearning" ["e"=1]
"lmoroney/dlaicourse" -> "fastai/fastbook" ["e"=1]
"lmoroney/dlaicourse" -> "jbrownlee/Datasets"
"openml/OpenML" -> "openml/openml-python"
"openml/OpenML" -> "openml/automlbenchmark"
"openml/OpenML" -> "openml/r"
"openml/OpenML" -> "openml/openml-r"
"openml/OpenML" -> "automl/RoBO"
"openml/OpenML" -> "openml/openml.org"
"openml/OpenML" -> "automl/ConfigSpace"
"ucbrise/clipper" -> "mitdbg/modeldb"
"ucbrise/clipper" -> "combust/mleap" ["e"=1]
"ucbrise/clipper" -> "oracle/graphpipe"
"ucbrise/clipper" -> "SeldonIO/seldon-core"
"ucbrise/clipper" -> "databricks/mlflow" ["e"=1]
"ucbrise/clipper" -> "polyaxon/polyaxon"
"ucbrise/clipper" -> "kubeflow/kfserving"
"ucbrise/clipper" -> "awslabs/mxnet-model-server" ["e"=1]
"ucbrise/clipper" -> "tensorflow/serving"
"ucbrise/clipper" -> "HazyResearch/snorkel" ["e"=1]
"ucbrise/clipper" -> "pachyderm/pachyderm"
"ucbrise/clipper" -> "datascienceinc/Skater"
"ucbrise/clipper" -> "amplab/keystone" ["e"=1]
"ucbrise/clipper" -> "uber/horovod" ["e"=1]
"ucbrise/clipper" -> "uber/petastorm"
"allegroai/clearml" -> "aimhubio/aim"
"allegroai/clearml" -> "bentoml/BentoML"
"allegroai/clearml" -> "evidentlyai/evidently"
"allegroai/clearml" -> "zenml-io/zenml"
"allegroai/clearml" -> "feast-dev/feast"
"allegroai/clearml" -> "mlflow/mlflow"
"allegroai/clearml" -> "allegroai/clearml-server"
"allegroai/clearml" -> "polyaxon/polyaxon"
"allegroai/clearml" -> "SeldonIO/seldon-core"
"allegroai/clearml" -> "iterative/cml"
"allegroai/clearml" -> "kelvins/awesome-mlops"
"allegroai/clearml" -> "deepchecks/deepchecks"
"allegroai/clearml" -> "flyteorg/flyte"
"allegroai/clearml" -> "guildai/guildai"
"allegroai/clearml" -> "iterative/dvc"
"pandera-dev/pandera" -> "fugue-project/fugue"
"pandera-dev/pandera" -> "uber/orbit" ["e"=1]
"pandera-dev/pandera" -> "great-expectations/great_expectations" ["e"=1]
"pandera-dev/pandera" -> "ibis-project/ibis" ["e"=1]
"pandera-dev/pandera" -> "ploomber/ploomber"
"pandera-dev/pandera" -> "koaning/scikit-lego"
"pandera-dev/pandera" -> "quantumblacklabs/kedro"
"pandera-dev/pandera" -> "nbQA-dev/nbQA" ["e"=1]
"pandera-dev/pandera" -> "nteract/papermill" ["e"=1]
"pandera-dev/pandera" -> "scikit-learn-contrib/MAPIE"
"pandera-dev/pandera" -> "oegedijk/explainerdashboard"
"pandera-dev/pandera" -> "modin-project/modin"
"pandera-dev/pandera" -> "ericmjl/pyjanitor" ["e"=1]
"pandera-dev/pandera" -> "HypothesisWorks/hypothesis" ["e"=1]
"pandera-dev/pandera" -> "Nixtla/statsforecast" ["e"=1]
"surfcodes/surf" -> "rahuljoshi44/GraphVega"
"surfcodes/surf" -> "nodejs/undici" ["e"=1]
"surfcodes/surf" -> "Bugswriter/tuxi" ["e"=1]
"surfcodes/surf" -> "activeloopai/Hub"
"surfcodes/surf" -> "mitmath/18S191" ["e"=1]
"surfcodes/surf" -> "globalaihub/introduction-to-python" ["e"=1]
"surfcodes/surf" -> "pavlobu/deskreen" ["e"=1]
"surfcodes/surf" -> "conwnet/github1s" ["e"=1]
"surfcodes/surf" -> "Snowtrack/SnowFS" ["e"=1]
"surfcodes/surf" -> "stypr/clubhouse-py" ["e"=1]
"surfcodes/surf" -> "deepfence/SecretScanner"
"surfcodes/surf" -> "elixir-nx/nx" ["e"=1]
"surfcodes/surf" -> "JonnyBurger/remotion" ["e"=1]
"surfcodes/surf" -> "BlackOtton/RedStar-Media"
"surfcodes/surf" -> "sickcodes/osx-serial-generator" ["e"=1]
"scikit-multiflow/scikit-multiflow" -> "Waikato/moa"
"scikit-multiflow/scikit-multiflow" -> "online-ml/river"
"scikit-multiflow/scikit-multiflow" -> "alipsgh/tornado"
"scikit-multiflow/scikit-multiflow" -> "hmgomes/AdaptiveRandomForest"
"scikit-multiflow/scikit-multiflow" -> "online-ml/awesome-online-machine-learning"
"scikit-multiflow/scikit-multiflow" -> "SeldonIO/alibi-detect"
"scikit-multiflow/scikit-multiflow" -> "creme-ml/creme"
"scikit-multiflow/scikit-multiflow" -> "vitords/HoeffdingTree"
"scikit-multiflow/scikit-multiflow" -> "doubleplusplus/incremental_decision_tree-CART-Random_Forest_python"
"scikit-multiflow/scikit-multiflow" -> "python-streamz/streamz"
"scikit-multiflow/scikit-multiflow" -> "rtavenar/tslearn" ["e"=1]
"scikit-multiflow/scikit-multiflow" -> "sebp/scikit-survival" ["e"=1]
"scikit-multiflow/scikit-multiflow" -> "selimfirat/pysad" ["e"=1]
"scikit-multiflow/scikit-multiflow" -> "sknetwork-team/scikit-network" ["e"=1]
"scikit-multiflow/scikit-multiflow" -> "koaning/scikit-lego"
"kedro-org/kedro" -> "kedro-org/kedro-viz"
"kedro-org/kedro" -> "ploomber/ploomber"
"kedro-org/kedro" -> "deepchecks/deepchecks"
"kedro-org/kedro" -> "orchest/orchest"
"kedro-org/kedro" -> "mljar/mercury"
"kedro-org/kedro" -> "great-expectations/great_expectations" ["e"=1]
"kedro-org/kedro" -> "evidentlyai/evidently"
"kedro-org/kedro" -> "pola-rs/polars" ["e"=1]
"kedro-org/kedro" -> "feast-dev/feast"
"kedro-org/kedro" -> "mlflow/mlflow"
"kedro-org/kedro" -> "bentoml/BentoML"
"kedro-org/kedro" -> "PrefectHQ/prefect" ["e"=1]
"kedro-org/kedro" -> "Netflix/metaflow"
"kedro-org/kedro" -> "whylabs/whylogs"
"kedro-org/kedro" -> "Nixtla/statsforecast" ["e"=1]
"aporia-ai/kubesurvival" -> "aporia-ai/dmatrix2np"
"aporia-ai/kubesurvival" -> "igaloly/vue-preloaders"
"aporia-ai/kubesurvival" -> "aporia-ai/aporia-importer"
"aporia-ai/kubesurvival" -> "aporia-ai/mlops.toys"
"facebook/Ax" -> "pytorch/botorch"
"facebook/Ax" -> "cornellius-gp/gpytorch"
"facebook/Ax" -> "facebookresearch/nevergrad"
"facebook/Ax" -> "pyro-ppl/pyro"
"facebook/Ax" -> "hyperopt/hyperopt"
"facebook/Ax" -> "facebookresearch/higher" ["e"=1]
"facebook/Ax" -> "pyro-ppl/numpyro" ["e"=1]
"facebook/Ax" -> "pytorch/ignite" ["e"=1]
"facebook/Ax" -> "optuna/optuna"
"facebook/Ax" -> "scikit-optimize/scikit-optimize"
"facebook/Ax" -> "skorch-dev/skorch" ["e"=1]
"facebook/Ax" -> "facebookresearch/pythia" ["e"=1]
"facebook/Ax" -> "facebookresearch/hydra" ["e"=1]
"facebook/Ax" -> "IDSIA/sacred"
"facebook/Ax" -> "williamFalcon/pytorch-lightning" ["e"=1]
"PAIR-code/facets" -> "deepmind/sonnet" ["e"=1]
"PAIR-code/facets" -> "marcotcr/lime"
"PAIR-code/facets" -> "facebookresearch/fastText" ["e"=1]
"PAIR-code/facets" -> "uber/pyro"
"PAIR-code/facets" -> "Featuretools/featuretools"
"PAIR-code/facets" -> "tensorflow/magenta" ["e"=1]
"PAIR-code/facets" -> "tensorflow/tensor2tensor" ["e"=1]
"PAIR-code/facets" -> "uber/horovod" ["e"=1]
"PAIR-code/facets" -> "pandas-profiling/pandas-profiling"
"PAIR-code/facets" -> "MrNothing/AI-Blocks" ["e"=1]
"PAIR-code/facets" -> "slundberg/shap"
"PAIR-code/facets" -> "oarriaga/face_classification" ["e"=1]
"PAIR-code/facets" -> "Microsoft/LightGBM"
"PAIR-code/facets" -> "facebookresearch/ParlAI" ["e"=1]
"PAIR-code/facets" -> "hyperopt/hyperopt"
"TeamHG-Memex/eli5" -> "DistrictDataLabs/yellowbrick"
"TeamHG-Memex/eli5" -> "marcotcr/lime"
"TeamHG-Memex/eli5" -> "SauceCat/PDPbox"
"TeamHG-Memex/eli5" -> "rasbt/mlxtend"
"TeamHG-Memex/eli5" -> "scikit-learn-contrib/categorical-encoding"
"TeamHG-Memex/eli5" -> "slundberg/shap"
"TeamHG-Memex/eli5" -> "reiinakano/scikit-plot"
"TeamHG-Memex/eli5" -> "scikit-optimize/scikit-optimize"
"TeamHG-Memex/eli5" -> "Featuretools/featuretools"
"TeamHG-Memex/eli5" -> "scikit-learn-contrib/imbalanced-learn"
"TeamHG-Memex/eli5" -> "hyperopt/hyperopt"
"TeamHG-Memex/eli5" -> "andosa/treeinterpreter"
"TeamHG-Memex/eli5" -> "catboost/catboost"
"TeamHG-Memex/eli5" -> "automl/auto-sklearn"
"TeamHG-Memex/eli5" -> "blue-yonder/tsfresh"
"hyperopt/hyperopt" -> "maxpumperla/hyperas"
"hyperopt/hyperopt" -> "fmfn/BayesianOptimization"
"hyperopt/hyperopt" -> "hyperopt/hyperopt-sklearn"
"hyperopt/hyperopt" -> "scikit-optimize/scikit-optimize"
"hyperopt/hyperopt" -> "optuna/optuna"
"hyperopt/hyperopt" -> "automl/auto-sklearn"
"hyperopt/hyperopt" -> "scikit-learn-contrib/imbalanced-learn"
"hyperopt/hyperopt" -> "slundberg/shap"
"hyperopt/hyperopt" -> "catboost/catboost"
"hyperopt/hyperopt" -> "rasbt/mlxtend"
"hyperopt/hyperopt" -> "marcotcr/lime"
"hyperopt/hyperopt" -> "HIPS/Spearmint"
"hyperopt/hyperopt" -> "dmlc/xgboost"
"hyperopt/hyperopt" -> "Microsoft/LightGBM"
"hyperopt/hyperopt" -> "EpistasisLab/tpot"
"jmschrei/pomegranate" -> "pgmpy/pgmpy"
"jmschrei/pomegranate" -> "hmmlearn/hmmlearn"
"jmschrei/pomegranate" -> "blei-lab/edward"
"jmschrei/pomegranate" -> "pymc-devs/pymc3"
"jmschrei/pomegranate" -> "markdregan/Bayesian-Modelling-in-Python" ["e"=1]
"jmschrei/pomegranate" -> "rhiever/tpot"
"jmschrei/pomegranate" -> "bayespy/bayespy"
"jmschrei/pomegranate" -> "pymc-devs/pymc"
"jmschrei/pomegranate" -> "RJT1990/pyflux" ["e"=1]
"jmschrei/pomegranate" -> "eBay/bayesian-belief-networks"
"jmschrei/pomegranate" -> "DistrictDataLabs/yellowbrick"
"jmschrei/pomegranate" -> "tensorflow/probability"
"jmschrei/pomegranate" -> "scikit-optimize/scikit-optimize"
"jmschrei/pomegranate" -> "uber/pyro"
"jmschrei/pomegranate" -> "pyro-ppl/pyro"
"IBM/claimed" -> "wchill/HMP_Dataset"
"keras-team/autokeras" -> "automl/auto-sklearn"
"keras-team/autokeras" -> "EpistasisLab/tpot"
"keras-team/autokeras" -> "keras-team/keras-tuner"
"keras-team/autokeras" -> "tensorflow/adanet"
"keras-team/autokeras" -> "hibayesian/awesome-automl-papers" ["e"=1]
"keras-team/autokeras" -> "microsoft/nni"
"keras-team/autokeras" -> "awslabs/autogluon"
"keras-team/autokeras" -> "automl/Auto-PyTorch" ["e"=1]
"keras-team/autokeras" -> "pycaret/pycaret"
"keras-team/autokeras" -> "google/automl" ["e"=1]
"keras-team/autokeras" -> "mlflow/mlflow"
"keras-team/autokeras" -> "AxeldeRomblay/MLBox"
"keras-team/autokeras" -> "optuna/optuna"
"keras-team/autokeras" -> "horovod/horovod" ["e"=1]
"keras-team/autokeras" -> "h2oai/h2o-3"
"tensorflow/hub" -> "tensorflow/datasets"
"tensorflow/hub" -> "tensorflow/serving"
"tensorflow/hub" -> "tensorflow/tensorboard"
"tensorflow/hub" -> "tensorflow/docs"
"tensorflow/hub" -> "tensorflow/tpu" ["e"=1]
"tensorflow/hub" -> "tensorflow/addons"
"tensorflow/hub" -> "tensorflow/transform"
"tensorflow/hub" -> "tensorflow/model-analysis"
"tensorflow/hub" -> "tensorflow/tensor2tensor" ["e"=1]
"tensorflow/hub" -> "tensorflow/probability"
"tensorflow/hub" -> "tensorflow/tfx"
"tensorflow/hub" -> "zihangdai/xlnet" ["e"=1]
"tensorflow/hub" -> "tensorflow/examples"
"tensorflow/hub" -> "tensorflow/text"
"tensorflow/hub" -> "tensorflow/adanet"
"uber/ludwig" -> "zalandoresearch/flair" ["e"=1]
"uber/ludwig" -> "cortexlabs/cortex"
"uber/ludwig" -> "facebookresearch/pytext" ["e"=1]
"uber/ludwig" -> "Featuretools/featuretools"
"uber/ludwig" -> "jhfjhfj1/autokeras"
"uber/ludwig" -> "tensorflow/adanet"
"uber/ludwig" -> "EpistasisLab/tpot"
"uber/ludwig" -> "minimaxir/automl-gs"
"uber/ludwig" -> "marcotcr/lime"
"uber/ludwig" -> "automl/auto-sklearn"
"uber/ludwig" -> "mlflow/mlflow"
"uber/ludwig" -> "google/dopamine" ["e"=1]
"uber/ludwig" -> "slundberg/shap"
"uber/ludwig" -> "kubeflow/kubeflow"
"uber/ludwig" -> "fastai/fastai" ["e"=1]
"DistrictDataLabs/yellowbrick" -> "rasbt/mlxtend"
"DistrictDataLabs/yellowbrick" -> "TeamHG-Memex/eli5"
"DistrictDataLabs/yellowbrick" -> "reiinakano/scikit-plot"
"DistrictDataLabs/yellowbrick" -> "ResidentMario/missingno"
"DistrictDataLabs/yellowbrick" -> "scikit-learn-contrib/imbalanced-learn"
"DistrictDataLabs/yellowbrick" -> "blue-yonder/tsfresh"
"DistrictDataLabs/yellowbrick" -> "scikit-optimize/scikit-optimize"
"DistrictDataLabs/yellowbrick" -> "pandas-profiling/pandas-profiling"
"DistrictDataLabs/yellowbrick" -> "slundberg/shap"
"DistrictDataLabs/yellowbrick" -> "automl/auto-sklearn"
"DistrictDataLabs/yellowbrick" -> "marcotcr/lime"
"DistrictDataLabs/yellowbrick" -> "modin-project/modin"
"DistrictDataLabs/yellowbrick" -> "Featuretools/featuretools"
"DistrictDataLabs/yellowbrick" -> "lmcinnes/umap"
"DistrictDataLabs/yellowbrick" -> "altair-viz/altair" ["e"=1]
"pavlov99/json-rpc" -> "joshmarshall/jsonrpclib"
"pavlov99/json-rpc" -> "cenobites/flask-jsonrpc"
"pavlov99/json-rpc" -> "bcb/jsonrpcserver"
"pavlov99/json-rpc" -> "bcb/jsonrpcclient"
"pavlov99/json-rpc" -> "mbr/tinyrpc"
"pavlov99/json-rpc" -> "niligulmohar/python-symmetric-jsonrpc"
"HIPS/autograd" -> "google/jax" ["e"=1]
"HIPS/autograd" -> "blei-lab/edward"
"HIPS/autograd" -> "mattjj/autodidact" ["e"=1]
"HIPS/autograd" -> "rtqichen/torchdiffeq" ["e"=1]
"HIPS/autograd" -> "pymc-devs/pymc3"
"HIPS/autograd" -> "cupy/cupy" ["e"=1]
"HIPS/autograd" -> "hyperopt/hyperopt"
"HIPS/autograd" -> "uber/pyro"
"HIPS/autograd" -> "google/tangent"
"HIPS/autograd" -> "facebookresearch/visdom" ["e"=1]
"HIPS/autograd" -> "fchollet/keras" ["e"=1]
"HIPS/autograd" -> "google/flax" ["e"=1]
"HIPS/autograd" -> "tensorflow/probability"
"HIPS/autograd" -> "cvxgrp/cvxpy" ["e"=1]
"HIPS/autograd" -> "cornellius-gp/gpytorch"
"anguyen8/XAI-papers" -> "pbiecek/xai_resources"
"anguyen8/XAI-papers" -> "srebuffi/revisiting_saliency" ["e"=1]
"anguyen8/XAI-papers" -> "facebookresearch/TorchRay" ["e"=1]
"anguyen8/XAI-papers" -> "anguyen8/sam" ["e"=1]
"anguyen8/XAI-papers" -> "samzabdiel/XAI"
"anguyen8/XAI-papers" -> "cfchen-duke/ProtoPNet" ["e"=1]
"anguyen8/XAI-papers" -> "marcoancona/DeepExplain" ["e"=1]
"anguyen8/XAI-papers" -> "lopusz/awesome-interpretable-machine-learning"
"anguyen8/XAI-papers" -> "zqs1022/interpretableCNN" ["e"=1]
"anguyen8/XAI-papers" -> "davidbau/dissect" ["e"=1]
"anguyen8/XAI-papers" -> "wangyongjie-ntu/Awesome-explainable-AI"
"anguyen8/XAI-papers" -> "EthicalML/xai"
"anguyen8/XAI-papers" -> "MadryLab/cox" ["e"=1]
"anguyen8/XAI-papers" -> "btgraham/Batchwise-Dropout" ["e"=1]
"anguyen8/XAI-papers" -> "tensorflow/tcav" ["e"=1]
"arvkevi/kneed" -> "lmcinnes/pynndescent" ["e"=1]
"arvkevi/kneed" -> "Ekeany/Boruta-Shap"
"arvkevi/kneed" -> "scikit-learn-contrib/hdbscan"
"arvkevi/kneed" -> "theislab/anndata" ["e"=1]
"arvkevi/kneed" -> "Marcnuth/AnomalyDetection" ["e"=1]
"arvkevi/kneed" -> "scikit-learn-contrib/boruta_py"
"arvkevi/kneed" -> "scikit-learn-contrib/MAPIE"
"arvkevi/kneed" -> "theislab/scanpy" ["e"=1]
"arvkevi/kneed" -> "scverse/muon"
"mljar/mercury" -> "holoviz/panel" ["e"=1]
"mljar/mercury" -> "voila-dashboards/voila" ["e"=1]
"mljar/mercury" -> "kedro-org/kedro"
"mljar/mercury" -> "mito-ds/monorepo" ["e"=1]
"mljar/mercury" -> "vizzuhq/ipyvizzu"
"mljar/mercury" -> "ploomber/ploomber"
"mljar/mercury" -> "orchest/orchest"
"mljar/mercury" -> "Nixtla/statsforecast" ["e"=1]
"mljar/mercury" -> "jupyter-naas/awesome-notebooks" ["e"=1]
"mljar/mercury" -> "mljar/mljar-supervised"
"mljar/mercury" -> "lux-org/lux"
"mljar/mercury" -> "online-ml/river"
"mljar/mercury" -> "mljar/bloxs" ["e"=1]
"mljar/mercury" -> "evidentlyai/evidently"
"mljar/mercury" -> "fastai/nbdev" ["e"=1]
"IDSIA/sacred" -> "vivekratnavel/omniboard"
"IDSIA/sacred" -> "hyperopt/hyperopt"
"IDSIA/sacred" -> "chovanecm/sacredboard"
"IDSIA/sacred" -> "facebookresearch/visdom" ["e"=1]
"IDSIA/sacred" -> "mlflow/mlflow"
"IDSIA/sacred" -> "pytorch/ignite" ["e"=1]
"IDSIA/sacred" -> "iterative/dvc"
"IDSIA/sacred" -> "allegroai/trains" ["e"=1]
"IDSIA/sacred" -> "facebookresearch/hydra" ["e"=1]
"IDSIA/sacred" -> "HIPS/autograd"
"IDSIA/sacred" -> "williamFalcon/pytorch-lightning" ["e"=1]
"IDSIA/sacred" -> "google/gin-config" ["e"=1]
"IDSIA/sacred" -> "polyaxon/polyaxon"
"IDSIA/sacred" -> "lmcinnes/umap"
"IDSIA/sacred" -> "blei-lab/edward"
"tensorflow/probability" -> "blei-lab/edward"
"tensorflow/probability" -> "pymc-devs/pymc3"
"tensorflow/probability" -> "pymc-devs/pymc4" ["e"=1]
"tensorflow/probability" -> "pyro-ppl/pyro"
"tensorflow/probability" -> "pyro-ppl/numpyro" ["e"=1]
"tensorflow/probability" -> "uber/pyro"
"tensorflow/probability" -> "GPflow/GPflow"
"tensorflow/probability" -> "arviz-devs/arviz" ["e"=1]
"tensorflow/probability" -> "cornellius-gp/gpytorch"
"tensorflow/probability" -> "tensorflow/agents" ["e"=1]
"tensorflow/probability" -> "HIPS/autograd"
"tensorflow/probability" -> "stan-dev/stan" ["e"=1]
"tensorflow/probability" -> "google/jax" ["e"=1]
"tensorflow/probability" -> "krasserm/bayesian-machine-learning"
"tensorflow/probability" -> "deepmind/sonnet" ["e"=1]
"lopusz/awesome-interpretable-machine-learning" -> "jphall663/awesome-machine-learning-interpretability"
"lopusz/awesome-interpretable-machine-learning" -> "pbiecek/xai_resources"
"lopusz/awesome-interpretable-machine-learning" -> "h2oai/mli-resources"
"lopusz/awesome-interpretable-machine-learning" -> "jphall663/interpretable_machine_learning_with_python"
"lopusz/awesome-interpretable-machine-learning" -> "EthicalML/xai"
"lopusz/awesome-interpretable-machine-learning" -> "marcoancona/DeepExplain" ["e"=1]
"lopusz/awesome-interpretable-machine-learning" -> "anguyen8/XAI-papers"
"lopusz/awesome-interpretable-machine-learning" -> "wangyongjie-ntu/Awesome-explainable-AI"
"lopusz/awesome-interpretable-machine-learning" -> "andreysharapov/xaience"
"lopusz/awesome-interpretable-machine-learning" -> "hbaniecki/adversarial-explainable-ai"
"lopusz/awesome-interpretable-machine-learning" -> "SauceCat/PDPbox"
"lopusz/awesome-interpretable-machine-learning" -> "microsoft/interpret"
"lopusz/awesome-interpretable-machine-learning" -> "IBM/AIX360"
"lopusz/awesome-interpretable-machine-learning" -> "albermax/innvestigate" ["e"=1]
"lopusz/awesome-interpretable-machine-learning" -> "interpretml/DiCE"
"chrispaulca/waterfall" -> "jmcarpenter2/parfit"
"santosjorge/cufflinks" -> "plotly/plotly.py" ["e"=1]
"santosjorge/cufflinks" -> "pandas-profiling/pandas-profiling"
"santosjorge/cufflinks" -> "modin-project/modin"
"santosjorge/cufflinks" -> "vaexio/vaex"
"santosjorge/cufflinks" -> "quantopian/qgrid" ["e"=1]
"santosjorge/cufflinks" -> "altair-viz/altair" ["e"=1]
"santosjorge/cufflinks" -> "quantopian/pyfolio" ["e"=1]
"santosjorge/cufflinks" -> "plotly/plotly_express" ["e"=1]
"santosjorge/cufflinks" -> "plotly/dash" ["e"=1]
"santosjorge/cufflinks" -> "mwaskom/seaborn" ["e"=1]
"santosjorge/cufflinks" -> "TeamHG-Memex/eli5"
"santosjorge/cufflinks" -> "scikit-learn-contrib/sklearn-pandas"
"santosjorge/cufflinks" -> "DistrictDataLabs/yellowbrick"
"santosjorge/cufflinks" -> "bukosabino/ta" ["e"=1]
"santosjorge/cufflinks" -> "quantopian/alphalens" ["e"=1]
"alegonz/baikal" -> "dabl/dabl"
"alegonz/baikal" -> "sepandhaghighi/pycm" ["e"=1]
"alegonz/baikal" -> "dovpanda-dev/dovpanda" ["e"=1]
"alegonz/baikal" -> "koaning/scikit-lego"
"alegonz/baikal" -> "TDAmeritrade/stumpy" ["e"=1]
"alegonz/baikal" -> "jmschrei/apricot"
"deepfence/ThreatMapper" -> "deepfence/YaraHunter"
"deepfence/ThreatMapper" -> "deepfence/PacketStreamer"
"deepfence/ThreatMapper" -> "deepfence/SecretScanner"
"deepfence/ThreatMapper" -> "deepfence/FlowMeter"
"deepfence/ThreatMapper" -> "aquasecurity/cloudsploit" ["e"=1]
"deepfence/ThreatMapper" -> "anchore/grype" ["e"=1]
"deepfence/ThreatMapper" -> "bridgecrewio/checkov" ["e"=1]
"deepfence/ThreatMapper" -> "aquasecurity/trivy" ["e"=1]
"raphaelvallat/pingouin" -> "koaning/scikit-lego"
"raphaelvallat/pingouin" -> "bambinos/bambi" ["e"=1]
"raphaelvallat/pingouin" -> "maximtrp/scikit-posthocs"
"raphaelvallat/pingouin" -> "scikit-learn-contrib/MAPIE"
"raphaelvallat/pingouin" -> "raphaelvallat/yasa" ["e"=1]
"raphaelvallat/pingouin" -> "DistrictDataLabs/yellowbrick"
"raphaelvallat/pingouin" -> "bashtage/linearmodels" ["e"=1]
"raphaelvallat/pingouin" -> "lukelbd/proplot" ["e"=1]
"raphaelvallat/pingouin" -> "ejolly/pymer4"
"raphaelvallat/pingouin" -> "sbebo/joypy" ["e"=1]
"raphaelvallat/pingouin" -> "alkaline-ml/pmdarima" ["e"=1]
"raphaelvallat/pingouin" -> "MaxHalford/prince"
"raphaelvallat/pingouin" -> "arviz-devs/arviz" ["e"=1]
"raphaelvallat/pingouin" -> "oegedijk/explainerdashboard"
"raphaelvallat/pingouin" -> "webermarcolivier/statannot"
"pgiri/dispy" -> "pgiri/asyncoro"
"pgiri/dispy" -> "pgiri/pycos"
"bastianraschke/pyfingerprint" -> "brianrho/FPM"
"bastianraschke/pyfingerprint" -> "adafruit/Adafruit-Fingerprint-Sensor-Library"
"bastianraschke/pyfingerprint" -> "adafruit/Adafruit_CircuitPython_Fingerprint"
"dustinvtran/ml-videos" -> "dustinvtran/latex-templates" ["e"=1]
"dustinvtran/ml-videos" -> "mila-udem/welcome_tutorials" ["e"=1]
"dustinvtran/ml-videos" -> "blei-lab/edward"
"dustinvtran/ml-videos" -> "uber/pyro"
"dustinvtran/ml-videos" -> "sshkhr/awesome-mlss" ["e"=1]
"dustinvtran/ml-videos" -> "yandexdataschool/Practical_RL" ["e"=1]
"dustinvtran/ml-videos" -> "dennybritz/deeplearning-papernotes" ["e"=1]
"dustinvtran/ml-videos" -> "ermongroup/cs228-notes"
"dustinvtran/ml-videos" -> "sbrugman/deep-learning-papers" ["e"=1]
"dustinvtran/ml-videos" -> "joanbruna/stat212b" ["e"=1]
"dustinvtran/ml-videos" -> "aleju/papers" ["e"=1]
"dustinvtran/ml-videos" -> "mattjj/autodidact" ["e"=1]
"dustinvtran/ml-videos" -> "spro/practical-pytorch" ["e"=1]
"dustinvtran/ml-videos" -> "zackchase/mxnet-the-straight-dope" ["e"=1]
"dustinvtran/ml-videos" -> "reiinakano/xcessiv"
"jhfjhfj1/autokeras" -> "tensorflow/adanet"
"jhfjhfj1/autokeras" -> "melodyguan/enas" ["e"=1]
"jhfjhfj1/autokeras" -> "Featuretools/featuretools"
"jhfjhfj1/autokeras" -> "carpedm20/ENAS-pytorch" ["e"=1]
"jhfjhfj1/autokeras" -> "google/dopamine" ["e"=1]
"jhfjhfj1/autokeras" -> "automl/auto-sklearn"
"jhfjhfj1/autokeras" -> "Microsoft/nni"
"jhfjhfj1/autokeras" -> "EpistasisLab/tpot"
"jhfjhfj1/autokeras" -> "uber/horovod" ["e"=1]
"jhfjhfj1/autokeras" -> "hyperopt/hyperopt"
"jhfjhfj1/autokeras" -> "NVIDIA/vid2vid" ["e"=1]
"jhfjhfj1/autokeras" -> "facebookresearch/pytext" ["e"=1]
"jhfjhfj1/autokeras" -> "zalandoresearch/flair" ["e"=1]
"jhfjhfj1/autokeras" -> "raghakot/keras-vis"
"jhfjhfj1/autokeras" -> "deepmind/trfl" ["e"=1]
"studio-ousia/mprpc" -> "msgpack-rpc/msgpack-rpc-python"
"studio-ousia/mprpc" -> "studio-ousia/gsocketpool"
"replicate/cog" -> "gradio-app/gradio" ["e"=1]
"replicate/cog" -> "huggingface/diffusers" ["e"=1]
"replicate/cog" -> "deepset-ai/haystack" ["e"=1]
"replicate/cog" -> "ploomber/ploomber"
"replicate/cog" -> "neuml/txtai" ["e"=1]
"replicate/cog" -> "deepchecks/deepchecks"
"replicate/cog" -> "mosaicml/composer" ["e"=1]
"replicate/cog" -> "bentoml/BentoML"
"replicate/cog" -> "cleanlab/cleanlab"
"replicate/cog" -> "evidentlyai/evidently"
"replicate/cog" -> "bloomberg/memray" ["e"=1]
"replicate/cog" -> "online-ml/river"
"replicate/cog" -> "nebuly-ai/nebullvm" ["e"=1]
"replicate/cog" -> "kedro-org/kedro"
"replicate/cog" -> "lucidrains/imagen-pytorch" ["e"=1]
"awslabs/adatune" -> "lucfra/FAR-HO"
"awslabs/adatune" -> "gbaydin/hypergradient-descent"
"awslabs/adatune" -> "lucfra/RFHO"
"lucfra/FAR-HO" -> "lucfra/RFHO"
"lucfra/FAR-HO" -> "prolearner/hyper-representation"
"lucfra/FAR-HO" -> "awslabs/adatune"
"lucfra/FAR-HO" -> "fabianp/hoag"
"lucfra/FAR-HO" -> "automl/BOAH"
"EthicalML/awesome-machine-learning-operations" -> "EthicalML/xai"
"EthicalML/awesome-machine-learning-operations" -> "pbiecek/DALEX"
"EthicalML/awesome-machine-learning-operations" -> "h2oai/mli-resources"
"EthicalML/awesome-machine-learning-operations" -> "d6t/d6tflow"
"EthicalML/awesome-machine-learning-operations" -> "Hydrospheredata/hydro-serving" ["e"=1]
"EthicalML/awesome-machine-learning-operations" -> "EthicalML/explainability-and-bias"
"EthicalML/awesome-machine-learning-operations" -> "khaxis/plynx" ["e"=1]
"EthicalML/awesome-machine-learning-operations" -> "jphall663/awesome-machine-learning-interpretability"
"EthicalML/awesome-machine-learning-operations" -> "datmo/datmo"
"EthicalML/awesome-machine-learning-operations" -> "visenger/mlops-references"
"BinChengZhao/delicate" -> "bloodbath-io/bloodbath-ruby"
"BinChengZhao/delicate" -> "xMythic/Rust-recoil-macro-AK-"
"BinChengZhao/delicate" -> "BinChengZhao/delay-timer"
"BinChengZhao/delicate" -> "ForetagInc/alchemy"
"BinChengZhao/delicate" -> "Infinity-Tech-inc/nifi-json-processor-bundle"
"BinChengZhao/delicate" -> "helloh2o/lucky"
"BinChengZhao/delicate" -> "coderitual/xna.js"
"BinChengZhao/delicate" -> "NasirMalik/Eris"
"BinChengZhao/delicate" -> "vahid-sohrabloo/chconn"
"BinChengZhao/delicate" -> "oslabs-beta/Kompass"
"BinChengZhao/delicate" -> "dmamontov/hass-miwifi"
"BinChengZhao/delicate" -> "Princeton-SysML/GradAttack"
"BinChengZhao/delicate" -> "anonrig/url-js"
"BinChengZhao/delicate" -> "Groestlcoin/electrum-grs"
"BinChengZhao/delicate" -> "GoMinerProxy/GoMinerProxy"
"trevorstephens/gplearn" -> "DEAP/deap"
"trevorstephens/gplearn" -> "rsteca/sklearn-deap"
"trevorstephens/gplearn" -> "MilesCranmer/PySR" ["e"=1]
"trevorstephens/gplearn" -> "ShuhuaGao/geppy"
"trevorstephens/gplearn" -> "EpistasisLab/tpot"
"trevorstephens/gplearn" -> "rhiever/tpot"
"trevorstephens/gplearn" -> "scikit-optimize/scikit-optimize"
"trevorstephens/gplearn" -> "msu-coinlab/pymoo" ["e"=1]
"trevorstephens/gplearn" -> "kstaats/karoo_gp"
"trevorstephens/gplearn" -> "aigamedev/scikit-neuralnetwork" ["e"=1]
"trevorstephens/gplearn" -> "quantopian/alphalens" ["e"=1]
"trevorstephens/gplearn" -> "jundongl/scikit-feature"
"trevorstephens/gplearn" -> "SJ001/AI-Feynman" ["e"=1]
"trevorstephens/gplearn" -> "blue-yonder/tsfresh"
"trevorstephens/gplearn" -> "RJT1990/pyflux" ["e"=1]
"uqfoundation/dill" -> "uqfoundation/pathos"
"uqfoundation/dill" -> "cloudpipe/cloudpickle"
"uqfoundation/dill" -> "uqfoundation/multiprocess"
"uqfoundation/dill" -> "joblib/joblib" ["e"=1]
"uqfoundation/dill" -> "uqfoundation/klepto"
"uqfoundation/dill" -> "uqfoundation/mystic"
"uqfoundation/dill" -> "pydata/numexpr" ["e"=1]
"uqfoundation/dill" -> "jsonpickle/jsonpickle" ["e"=1]
"uqfoundation/dill" -> "scikit-optimize/scikit-optimize"
"uqfoundation/dill" -> "pythonprofilers/memory_profiler" ["e"=1]
"uqfoundation/dill" -> "numba/numba" ["e"=1]
"uqfoundation/dill" -> "mrocklin/multipledispatch" ["e"=1]
"uqfoundation/dill" -> "pytoolz/toolz" ["e"=1]
"uqfoundation/dill" -> "tkem/cachetools" ["e"=1]
"uqfoundation/dill" -> "dask/dask" ["e"=1]
"facebookresearch/hiplot" -> "microsoft/hummingbird"
"facebookresearch/hiplot" -> "onelivesleft/PrettyErrors" ["e"=1]
"facebookresearch/hiplot" -> "emeryberger/scalene" ["e"=1]
"facebookresearch/hiplot" -> "facebookresearch/hydra" ["e"=1]
"facebookresearch/hiplot" -> "omry/omegaconf" ["e"=1]
"facebookresearch/hiplot" -> "SeldonIO/alibi-detect"
"facebookresearch/hiplot" -> "alan-turing-institute/sktime" ["e"=1]
"facebookresearch/hiplot" -> "pytorch/captum" ["e"=1]
"facebookresearch/hiplot" -> "parrt/dtreeviz"
"facebookresearch/hiplot" -> "aimhubio/aim"
"facebookresearch/hiplot" -> "TDAmeritrade/stumpy" ["e"=1]
"facebookresearch/hiplot" -> "microsoft/tensorwatch" ["e"=1]
"facebookresearch/hiplot" -> "DistrictDataLabs/yellowbrick"
"facebookresearch/hiplot" -> "facebookresearch/nevergrad"
"facebookresearch/hiplot" -> "uber/manifold"
"keras-team/keras-tuner" -> "keras-team/autokeras"
"keras-team/keras-tuner" -> "autonomio/talos"
"keras-team/keras-tuner" -> "maxpumperla/hyperas"
"keras-team/keras-tuner" -> "hyperopt/hyperopt"
"keras-team/keras-tuner" -> "sicara/tf-explain" ["e"=1]
"keras-team/keras-tuner" -> "tensorflow/addons"
"keras-team/keras-tuner" -> "scikit-optimize/scikit-optimize"
"keras-team/keras-tuner" -> "optuna/optuna"
"keras-team/keras-tuner" -> "keras-team/keras-applications" ["e"=1]
"keras-team/keras-tuner" -> "qubvel/efficientnet" ["e"=1]
"keras-team/keras-tuner" -> "williamFalcon/pytorch-lightning" ["e"=1]
"keras-team/keras-tuner" -> "raghakot/keras-vis"
"keras-team/keras-tuner" -> "microsoft/hummingbird"
"keras-team/keras-tuner" -> "automl/auto-sklearn"
"keras-team/keras-tuner" -> "tensorflow/lucid" ["e"=1]
"oracle/graphpipe" -> "csxeba/evolute"
"oracle/graphpipe" -> "oracle/graphpipe-go"
"oracle/graphpipe" -> "MagNet-DL/magnet"
"oracle/graphpipe" -> "tensorflow/model-analysis"
"oracle/graphpipe" -> "oracle/graphpipe-py"
"oracle/graphpipe" -> "ucbrise/clipper"
"oracle/graphpipe" -> "salesforce/TransmogrifAI"
"oracle/graphpipe" -> "oracle/graphpipe-tf-py"
"oracle/graphpipe" -> "mlperf/reference" ["e"=1]
"oracle/graphpipe" -> "tobegit3hub/simple_tensorflow_serving" ["e"=1]
"oracle/graphpipe" -> "awslabs/mxnet-model-server" ["e"=1]
"oracle/graphpipe" -> "NVIDIA/tensorrt-inference-server" ["e"=1]
"pymc-devs/pymc3" -> "blei-lab/edward"
"pymc-devs/pymc3" -> "pymc-devs/pymc4" ["e"=1]
"pymc-devs/pymc3" -> "tensorflow/probability"
"pymc-devs/pymc3" -> "statsmodels/statsmodels" ["e"=1]
"pymc-devs/pymc3" -> "pyro-ppl/pyro"
"pymc-devs/pymc3" -> "arviz-devs/arviz" ["e"=1]
"pymc-devs/pymc3" -> "pymc-devs/resources" ["e"=1]
"pymc-devs/pymc3" -> "pgmpy/pgmpy"
"pymc-devs/pymc3" -> "markdregan/Bayesian-Modelling-in-Python" ["e"=1]
"pymc-devs/pymc3" -> "stan-dev/stan" ["e"=1]
"pymc-devs/pymc3" -> "uber/pyro"
"pymc-devs/pymc3" -> "CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers" ["e"=1]
"pymc-devs/pymc3" -> "jmschrei/pomegranate"
"pymc-devs/pymc3" -> "pymc-devs/pymc"
"pymc-devs/pymc3" -> "stan-dev/pystan" ["e"=1]
"tensorflow/serving" -> "alibaba/x-deeplearning" ["e"=1]
"tensorflow/serving" -> "tensorflow/tfx"
"tensorflow/serving" -> "tensorflow/ecosystem" ["e"=1]
"tensorflow/serving" -> "kubeflow/kubeflow"
"tensorflow/serving" -> "yahoo/TensorFlowOnSpark" ["e"=1]
"tensorflow/serving" -> "tensorflow/tensor2tensor" ["e"=1]
"tensorflow/serving" -> "pytorch/serve"
"tensorflow/serving" -> "triton-inference-server/server" ["e"=1]
"tensorflow/serving" -> "facebookresearch/faiss" ["e"=1]
"tensorflow/serving" -> "horovod/horovod" ["e"=1]
"tensorflow/serving" -> "shenweichen/DeepCTR" ["e"=1]
"tensorflow/serving" -> "bytedance/byteps" ["e"=1]
"tensorflow/serving" -> "tensorflow/tensorboard"
"tensorflow/serving" -> "hanxiao/bert-as-service" ["e"=1]
"tensorflow/serving" -> "uber/horovod" ["e"=1]
"probml/pyprobml" -> "probml/pml-book"
"probml/pyprobml" -> "probml/pmtk3"
"probml/pyprobml" -> "ctgk/PRML" ["e"=1]
"probml/pyprobml" -> "probml/pml2-book"
"probml/pyprobml" -> "google/jax" ["e"=1]
"probml/pyprobml" -> "d2l-ai/d2l-en" ["e"=1]
"probml/pyprobml" -> "mml-book/mml-book.github.io" ["e"=1]
"probml/pyprobml" -> "Atcold/pytorch-Deep-Learning" ["e"=1]
"probml/pyprobml" -> "avehtari/BDA_course_Aalto" ["e"=1]
"probml/pyprobml" -> "cornellius-gp/gpytorch"
"probml/pyprobml" -> "pyro-ppl/numpyro" ["e"=1]
"probml/pyprobml" -> "ShangtongZhang/reinforcement-learning-an-introduction" ["e"=1]
"probml/pyprobml" -> "tensorflow/probability"
"probml/pyprobml" -> "rougier/scientific-visualization-book" ["e"=1]
"probml/pyprobml" -> "arogozhnikov/einops" ["e"=1]
"NethermindEth/warp" -> "cniperbot/sniperbot"
"NethermindEth/warp" -> "Infinity-Tech-inc/nifi-json-processor-bundle"
"NethermindEth/warp" -> "coderitual/xna.js"
"NethermindEth/warp" -> "artdothaus/wordpress-nft-plugin" ["e"=1]
"NethermindEth/warp" -> "bloodbath-io/bloodbath-ruby"
"NethermindEth/warp" -> "xMythic/Rust-recoil-macro-AK-"
"NethermindEth/warp" -> "ForetagInc/alchemy"
"NethermindEth/warp" -> "helloh2o/lucky"
"NethermindEth/warp" -> "FaceOnLive/Mask-Aware-Face-Recognition-SDK-iOS" ["e"=1]
"NethermindEth/warp" -> "NasirMalik/Eris"
"NethermindEth/warp" -> "vahid-sohrabloo/chconn"
"NethermindEth/warp" -> "mattmattox/Kubernetes-Master-Class" ["e"=1]
"NethermindEth/warp" -> "dmamontov/hass-miwifi"
"NethermindEth/warp" -> "oslabs-beta/Kompass"
"NethermindEth/warp" -> "Princeton-SysML/GradAttack"
"dask/fastparquet" -> "jcrobak/parquet-python"
"dask/fastparquet" -> "d6t/d6tflow"
"dask/fastparquet" -> "d6t/d6tpipe"
"dask/fastparquet" -> "apache/parquet-cpp" ["e"=1]
"dask/fastparquet" -> "blue-yonder/turbodbc"
"dask/fastparquet" -> "dask/s3fs"
"dask/fastparquet" -> "dask/distributed"
"dask/fastparquet" -> "d6t/d6t-python"
"dask/fastparquet" -> "wesm/feather" ["e"=1]
"dask/fastparquet" -> "toyama0919/ej"
"dask/fastparquet" -> "dask/dask-ml"
"dask/fastparquet" -> "gpuopenanalytics/pygdf" ["e"=1]
"dask/fastparquet" -> "martindurant/fastparquet"
"dask/fastparquet" -> "jakevdp/altair-transform"
"elyra-ai/elyra" -> "kubeflow-kale/kale"
"elyra-ai/elyra" -> "jupyter/enterprise_gateway" ["e"=1]
"elyra-ai/elyra" -> "nteract/papermill" ["e"=1]
"elyra-ai/elyra" -> "elyra-ai/examples"
"elyra-ai/elyra" -> "ploomber/ploomber"
"elyra-ai/elyra" -> "jupyterlab/jupyterlab-git" ["e"=1]
"elyra-ai/elyra" -> "kubeflow/manifests"
"elyra-ai/elyra" -> "kubeflow/pipelines"
"elyra-ai/elyra" -> "mauhai/awesome-jupyterlab" ["e"=1]
"elyra-ai/elyra" -> "flyteorg/flyte"
"elyra-ai/elyra" -> "kubeflow/kfserving"
"elyra-ai/elyra" -> "feast-dev/feast"
"elyra-ai/elyra" -> "krassowski/jupyterlab-lsp" ["e"=1]
"elyra-ai/elyra" -> "ml-tooling/ml-workspace"
"elyra-ai/elyra" -> "jupyterlab/extension-examples" ["e"=1]
"scikit-learn-contrib/sklearn-pandas" -> "hyperopt/hyperopt-sklearn"
"scikit-learn-contrib/sklearn-pandas" -> "koaning/scikit-lego"
"scikit-learn-contrib/sklearn-pandas" -> "scikit-learn-contrib/imbalanced-learn"
"scikit-learn-contrib/sklearn-pandas" -> "scikit-learn-contrib/boruta_py"
"scikit-learn-contrib/sklearn-pandas" -> "scikit-learn-contrib/categorical-encoding"
"scikit-learn-contrib/sklearn-pandas" -> "rasbt/mlxtend"
"scikit-learn-contrib/sklearn-pandas" -> "scikit-learn-contrib/category_encoders"
"scikit-learn-contrib/sklearn-pandas" -> "TeamHG-Memex/eli5"
"scikit-learn-contrib/sklearn-pandas" -> "automl/auto-sklearn"
"scikit-learn-contrib/sklearn-pandas" -> "reiinakano/scikit-plot"
"scikit-learn-contrib/sklearn-pandas" -> "DistrictDataLabs/yellowbrick"
"scikit-learn-contrib/sklearn-pandas" -> "scikit-optimize/scikit-optimize"
"scikit-learn-contrib/sklearn-pandas" -> "parrt/dtreeviz"
"scikit-learn-contrib/sklearn-pandas" -> "alteryx/featuretools"
"scikit-learn-contrib/sklearn-pandas" -> "scikit-learn-contrib/scikit-learn-contrib"
"bnjmn/weka" -> "Waikato/weka-trunk"
"ResidentMario/missingno" -> "pandas-profiling/pandas-profiling"
"ResidentMario/missingno" -> "DistrictDataLabs/yellowbrick"
"ResidentMario/missingno" -> "scikit-learn-contrib/imbalanced-learn"
"ResidentMario/missingno" -> "rasbt/mlxtend"
"ResidentMario/missingno" -> "TeamHG-Memex/eli5"
"ResidentMario/missingno" -> "blue-yonder/tsfresh"
"ResidentMario/missingno" -> "modin-project/modin"
"ResidentMario/missingno" -> "iskandr/fancyimpute"
"ResidentMario/missingno" -> "reiinakano/scikit-plot"
"ResidentMario/missingno" -> "altair-viz/altair" ["e"=1]
"ResidentMario/missingno" -> "slundberg/shap"
"ResidentMario/missingno" -> "Featuretools/featuretools"
"ResidentMario/missingno" -> "EpistasisLab/tpot"
"ResidentMario/missingno" -> "JosPolfliet/pandas-profiling" ["e"=1]
"ResidentMario/missingno" -> "fbdesignpro/sweetviz"
"BlackOtton/RedStar-Media" -> "takeshixx/redstar-tools"
"DEAP/deap" -> "trevorstephens/gplearn"
"DEAP/deap" -> "EpistasisLab/tpot"
"DEAP/deap" -> "hyperopt/hyperopt"
"DEAP/deap" -> "soravux/scoop"
"DEAP/deap" -> "rsteca/sklearn-deap"
"DEAP/deap" -> "fmfn/BayesianOptimization"
"DEAP/deap" -> "geatpy-dev/geatpy" ["e"=1]
"DEAP/deap" -> "scikit-optimize/scikit-optimize"
"DEAP/deap" -> "automl/auto-sklearn"
"DEAP/deap" -> "ahmedfgad/GeneticAlgorithmPython" ["e"=1]
"DEAP/deap" -> "rhiever/tpot"
"DEAP/deap" -> "pymc-devs/pymc3"
"DEAP/deap" -> "scikit-learn-contrib/imbalanced-learn"
"DEAP/deap" -> "blue-yonder/tsfresh"
"DEAP/deap" -> "facebookresearch/nevergrad"
"PipelineAI/pipeline" -> "kubeflow/kubeflow"
"PipelineAI/pipeline" -> "SeldonIO/seldon-core"
"PipelineAI/pipeline" -> "uber/horovod" ["e"=1]
"PipelineAI/pipeline" -> "kubeflow/pipelines"
"PipelineAI/pipeline" -> "combust/mleap" ["e"=1]
"PipelineAI/pipeline" -> "kubeflow/katib"
"PipelineAI/pipeline" -> "yahoo/TensorFlowOnSpark" ["e"=1]
"PipelineAI/pipeline" -> "polyaxon/polyaxon"
"PipelineAI/pipeline" -> "databricks/spark-deep-learning" ["e"=1]
"PipelineAI/pipeline" -> "tensorflow/serving"
"PipelineAI/pipeline" -> "tensorflow/ecosystem" ["e"=1]
"PipelineAI/pipeline" -> "data-science-on-aws/workshop" ["e"=1]
"PipelineAI/pipeline" -> "kubeflow/kfserving"
"PipelineAI/pipeline" -> "pachyderm/pachyderm"
"PipelineAI/pipeline" -> "mlflow/mlflow"
"SimonBlanke/Gradient-Free-Optimizers" -> "SimonBlanke/Hyperactive"
"SimonBlanke/Gradient-Free-Optimizers" -> "gugarosa/opytimizer" ["e"=1]
"SimonBlanke/Gradient-Free-Optimizers" -> "brendanartley/Regressio"
"SimonBlanke/Gradient-Free-Optimizers" -> "zillow/luminaire" ["e"=1]
"SimonBlanke/Gradient-Free-Optimizers" -> "pyro-ppl/numpyro" ["e"=1]
"SimonBlanke/Gradient-Free-Optimizers" -> "facebookresearch/nevergrad"
"SimonBlanke/Gradient-Free-Optimizers" -> "AnotherSamWilson/miceforest"
"SimonBlanke/Gradient-Free-Optimizers" -> "andy-landy/traceback_with_variables" ["e"=1]
"SimonBlanke/Gradient-Free-Optimizers" -> "deepmind/tree" ["e"=1]
"SimonBlanke/Gradient-Free-Optimizers" -> "google/evojax" ["e"=1]
"SimonBlanke/Gradient-Free-Optimizers" -> "scikit-optimize/scikit-optimize"
"SimonBlanke/Gradient-Free-Optimizers" -> "thoughtspile/grafar"
"hmmlearn/hmmlearn" -> "larsmans/seqlearn"
"hmmlearn/hmmlearn" -> "jmschrei/pomegranate"
"hmmlearn/hmmlearn" -> "pymc-devs/pymc3"
"hmmlearn/hmmlearn" -> "mattjj/pyhsmm"
"hmmlearn/hmmlearn" -> "tostq/Easy_HMM"
"hmmlearn/hmmlearn" -> "pgmpy/pgmpy"
"hmmlearn/hmmlearn" -> "blue-yonder/tsfresh"
"hmmlearn/hmmlearn" -> "rasbt/mlxtend"
"hmmlearn/hmmlearn" -> "statsmodels/statsmodels" ["e"=1]
"hmmlearn/hmmlearn" -> "hyperopt/hyperopt"
"hmmlearn/hmmlearn" -> "scikit-learn-contrib/imbalanced-learn"
"hmmlearn/hmmlearn" -> "guyz/HMM"
"hmmlearn/hmmlearn" -> "RJT1990/pyflux" ["e"=1]
"hmmlearn/hmmlearn" -> "blei-lab/edward"
"hmmlearn/hmmlearn" -> "pyro-ppl/pyro"
"reiinakano/scikit-plot" -> "DistrictDataLabs/yellowbrick"
"reiinakano/scikit-plot" -> "rasbt/mlxtend"
"reiinakano/scikit-plot" -> "TeamHG-Memex/eli5"
"reiinakano/scikit-plot" -> "scikit-learn-contrib/imbalanced-learn"
"reiinakano/scikit-plot" -> "scikit-optimize/scikit-optimize"
"reiinakano/scikit-plot" -> "rhiever/tpot"
"reiinakano/scikit-plot" -> "reiinakano/xcessiv"
"reiinakano/scikit-plot" -> "hyperopt/hyperopt-sklearn"
"reiinakano/scikit-plot" -> "scikit-learn-contrib/categorical-encoding"
"reiinakano/scikit-plot" -> "jundongl/scikit-feature"
"reiinakano/scikit-plot" -> "datascienceinc/Skater"
"reiinakano/scikit-plot" -> "automl/auto-sklearn"
"reiinakano/scikit-plot" -> "ResidentMario/missingno"
"reiinakano/scikit-plot" -> "blue-yonder/tsfresh"
"reiinakano/scikit-plot" -> "scikit-learn-contrib/sklearn-pandas"
"scikit-learn-contrib/scikit-learn-contrib" -> "scikit-learn-contrib/scikit-learn-extra"
"scikit-learn-contrib/scikit-learn-contrib" -> "scikit-learn-contrib/project-template"
"scikit-learn-contrib/scikit-learn-contrib" -> "scikit-learn-contrib/categorical-encoding"
"scikit-learn-contrib/scikit-learn-contrib" -> "scikit-learn-contrib/boruta_py"
"scikit-learn-contrib/scikit-learn-contrib" -> "scikit-learn-contrib/DESlib"
"scikit-learn-contrib/scikit-learn-contrib" -> "scikit-learn-contrib/polylearn"
"scikit-learn-contrib/scikit-learn-contrib" -> "scikit-learn-contrib/py-earth"
"scikit-learn-contrib/scikit-learn-contrib" -> "scikit-learn-contrib/sklearn-pandas"
"scikit-learn-contrib/scikit-learn-contrib" -> "hyperopt/hyperopt-sklearn"
"scikit-learn-contrib/scikit-learn-contrib" -> "scikit-learn-contrib/forest-confidence-interval"
"scikit-learn-contrib/scikit-learn-contrib" -> "scikit-learn-contrib/stability-selection"
"scikit-learn-contrib/scikit-learn-contrib" -> "EpistasisLab/scikit-rebate"
"shakedzy/dython" -> "MaxHalford/prince"
"shakedzy/dython" -> "akanz1/klib"
"shakedzy/dython" -> "scikit-learn-contrib/MAPIE"
"shakedzy/dython" -> "raphaelvallat/pingouin"
"shakedzy/dython" -> "solegalli/feature_engine"
"shakedzy/dython" -> "alkaline-ml/pmdarima" ["e"=1]
"shakedzy/dython" -> "Ekeany/Boruta-Shap"
"shakedzy/dython" -> "pyjanitor-devs/pyjanitor" ["e"=1]
"shakedzy/dython" -> "pdpipe/pdpipe" ["e"=1]
"shakedzy/dython" -> "manuel-calzolari/sklearn-genetic"
"romeokienzler/TensorFlow" -> "IBM/skillsnetwork"
"romeokienzler/TensorFlow" -> "jupyter/jupyter" ["e"=1]
"romeokienzler/TensorFlow" -> "romeokienzler/coursera"
"romeokienzler/TensorFlow" -> "IBM/MAX-Object-Detector"
"romeokienzler/TensorFlow" -> "IBM/claimed"
"romeokienzler/TensorFlow" -> "Tanu-N-Prabhu/Python" ["e"=1]
"pymc-devs/pymc" -> "pymc-devs/pymc3"
"pymc-devs/pymc" -> "statsmodels/statsmodels" ["e"=1]
"pymc-devs/pymc" -> "yhat/ggplot" ["e"=1]
"pymc-devs/pymc" -> "pyro-ppl/numpyro" ["e"=1]
"pymc-devs/pymc" -> "jmschrei/pomegranate"
"pymc-devs/pymc" -> "pydata/pandas" ["e"=1]
"pymc-devs/pymc" -> "pgmpy/pgmpy"
"pymc-devs/pymc" -> "blei-lab/edward"
"pymc-devs/pymc" -> "dfm/emcee" ["e"=1]
"pymc-devs/pymc" -> "arviz-devs/arviz" ["e"=1]
"pymc-devs/pymc" -> "pyro-ppl/pyro"
"pymc-devs/pymc" -> "bayespy/bayespy"
"pymc-devs/pymc" -> "lisa-lab/pylearn2" ["e"=1]
"pymc-devs/pymc" -> "CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers" ["e"=1]
"pymc-devs/pymc" -> "JohnLangford/vowpal_wabbit" ["e"=1]
"msgpack-rpc/msgpack-rpc" -> "jubatus/jubatus-msgpack-rpc"
"msgpack-rpc/msgpack-rpc" -> "msgpack-rpc/msgpack-rpc-python"
"msgpack-rpc/msgpack-rpc" -> "msgpack-rpc/msgpack-rpc-cpp"
"AxeldeRomblay/MLBox" -> "ClimbsRocks/auto_ml"
"AxeldeRomblay/MLBox" -> "automl/auto-sklearn"
"AxeldeRomblay/MLBox" -> "EpistasisLab/tpot"
"AxeldeRomblay/MLBox" -> "hyperopt/hyperopt-sklearn"
"AxeldeRomblay/MLBox" -> "reiinakano/xcessiv"
"AxeldeRomblay/MLBox" -> "Featuretools/featuretools"
"AxeldeRomblay/MLBox" -> "TeamHG-Memex/eli5"
"AxeldeRomblay/MLBox" -> "rhiever/tpot"
"AxeldeRomblay/MLBox" -> "keras-team/autokeras"
"AxeldeRomblay/MLBox" -> "scikit-learn-contrib/boruta_py"
"AxeldeRomblay/MLBox" -> "rasbt/mlxtend"
"AxeldeRomblay/MLBox" -> "scikit-optimize/scikit-optimize"
"AxeldeRomblay/MLBox" -> "salesforce/TransmogrifAI"
"AxeldeRomblay/MLBox" -> "scikit-learn-contrib/categorical-encoding"
"AxeldeRomblay/MLBox" -> "hyperopt/hyperopt"
"rsteca/sklearn-deap" -> "manuel-calzolari/sklearn-genetic"
"rsteca/sklearn-deap" -> "trevorstephens/gplearn"
"rsteca/sklearn-deap" -> "hyperopt/hyperopt-sklearn"
"rsteca/sklearn-deap" -> "DEAP/deap"
"rsteca/sklearn-deap" -> "zygmuntz/hyperband"
"rsteca/sklearn-deap" -> "aigamedev/scikit-neuralnetwork" ["e"=1]
"rsteca/sklearn-deap" -> "reiinakano/xcessiv"
"rsteca/sklearn-deap" -> "tmadl/sklearn-expertsys"
"rsteca/sklearn-deap" -> "reiinakano/scikit-plot"
"rsteca/sklearn-deap" -> "EpistasisLab/scikit-rebate"
"rsteca/sklearn-deap" -> "scikit-optimize/scikit-optimize"
"rsteca/sklearn-deap" -> "jundongl/scikit-feature"
"rsteca/sklearn-deap" -> "claesenm/optunity"
"rsteca/sklearn-deap" -> "google/skflow" ["e"=1]
"rsteca/sklearn-deap" -> "automl/SMAC3"
"bayesnet/bnt" -> "probml/pmtk3"
"bayesnet/bnt" -> "eBay/bayesian-belief-networks"
"bayesnet/bnt" -> "gpstuff-dev/gpstuff"
"bayesnet/bnt" -> "bayespy/bayespy"
"bayesnet/bnt" -> "pgmpy/pgmpy"
"bayesnet/bnt" -> "kyunghyuncho/deepmat" ["e"=1]
"bayesnet/bnt" -> "wengjn/MatlabDBN"
"bayesnet/bnt" -> "michaelchughes/NPBayesHMM"
"bayesnet/bnt" -> "cmu-phil/tetrad" ["e"=1]
"bayesnet/bnt" -> "sisl/BayesNets.jl"
"bayesnet/bnt" -> "mattjj/pyhsmm"
"bayesnet/bnt" -> "jluttine/tikz-bayesnet"
"bayesnet/bnt" -> "crishoj/OpenPNL"
"bayesnet/bnt" -> "amidst/toolbox"
"fbdesignpro/sweetviz" -> "AutoViML/AutoViz"
"fbdesignpro/sweetviz" -> "sfu-db/dataprep"
"fbdesignpro/sweetviz" -> "pandas-profiling/pandas-profiling"
"fbdesignpro/sweetviz" -> "lux-org/lux"
"fbdesignpro/sweetviz" -> "jbesomi/texthero" ["e"=1]
"fbdesignpro/sweetviz" -> "man-group/dtale"
"fbdesignpro/sweetviz" -> "pycaret/pycaret"
"fbdesignpro/sweetviz" -> "MAIF/shapash"
"fbdesignpro/sweetviz" -> "DistrictDataLabs/yellowbrick"
"fbdesignpro/sweetviz" -> "ResidentMario/missingno"
"fbdesignpro/sweetviz" -> "shankarpandala/lazypredict"
"fbdesignpro/sweetviz" -> "oegedijk/explainerdashboard"
"fbdesignpro/sweetviz" -> "ydataai/pandas-profiling"
"fbdesignpro/sweetviz" -> "evidentlyai/evidently"
"fbdesignpro/sweetviz" -> "microsoft/FLAML"
"devforth/hothost" -> "I-H8-YOU/ABAP-Basic"
"devforth/hothost" -> "drewlong/gophish-ruby"
"devforth/hothost" -> "beeyev/thumbor-s3-docker"
"devforth/hothost" -> "DecentraWorldDEWO/Documentation"
"devforth/hothost" -> "dvemon/data-ptr-comm"
"devforth/hothost" -> "DecentraWorldDEWO/DeMix_Subgraph"
"devforth/hothost" -> "Etelis/Fortuna-FUD-Crypter"
"devforth/hothost" -> "bloodbath-io/bloodbath-ruby"
"devforth/hothost" -> "xMythic/Rust-recoil-macro-AK-"
"devforth/hothost" -> "ForetagInc/alchemy"
"devforth/hothost" -> "Groestlcoin/electrum-grs"
"devforth/hothost" -> "Infinity-Tech-inc/nifi-json-processor-bundle"
"devforth/hothost" -> "helloh2o/lucky"
"devforth/hothost" -> "coderitual/xna.js"
"devforth/hothost" -> "newlc/SwiftKeychainWrapper"
"IBM/MAX-Object-Detector-Web-App" -> "IBM/MAX-Object-Detector"
"pbiecek/DALEX" -> "christophM/iml"
"pbiecek/DALEX" -> "thomasp85/lime" ["e"=1]
"pbiecek/DALEX" -> "ModelOriented/DrWhy"
"pbiecek/DALEX" -> "MI2DataLab/modelDown"
"pbiecek/DALEX" -> "WinVector/vtreat"
"pbiecek/DALEX" -> "h2oai/mli-resources"
"pbiecek/DALEX" -> "ModelOriented/shapper"
"pbiecek/DALEX" -> "pbiecek/breakDown"
"pbiecek/DALEX" -> "mkearney/textfeatures"
"pbiecek/DALEX" -> "alastairrushworth/inspectdf" ["e"=1]
"pbiecek/DALEX" -> "ropensci/drake" ["e"=1]
"pbiecek/DALEX" -> "boxuancui/DataExplorer" ["e"=1]
"pbiecek/DALEX" -> "koalaverse/vip"
"pbiecek/DALEX" -> "mlr-org/mlr" ["e"=1]
"pbiecek/DALEX" -> "clauswilke/ggridges" ["e"=1]
"uber/petastorm" -> "databricks/koalas"
"uber/petastorm" -> "webdataset/webdataset" ["e"=1]
"uber/petastorm" -> "uber/horovod" ["e"=1]
"uber/petastorm" -> "databricks/spark-deep-learning" ["e"=1]
"uber/petastorm" -> "horovod/horovod" ["e"=1]
"uber/petastorm" -> "uber/fiber"
"uber/petastorm" -> "SeldonIO/seldon-core"
"uber/petastorm" -> "facebookresearch/fairscale" ["e"=1]
"uber/petastorm" -> "feast-dev/feast"
"uber/petastorm" -> "polyaxon/polyaxon"
"uber/petastorm" -> "tensorflow/mesh" ["e"=1]
"uber/petastorm" -> "combust/mleap" ["e"=1]
"uber/petastorm" -> "tensorflow/ecosystem" ["e"=1]
"uber/petastorm" -> "Netflix/metaflow"
"uber/petastorm" -> "yahoo/TensorFlowOnSpark" ["e"=1]
"adamerose/pandasgui" -> "man-group/dtale"
"adamerose/pandasgui" -> "fbdesignpro/sweetviz"
"adamerose/pandasgui" -> "oegedijk/explainerdashboard"
"adamerose/pandasgui" -> "MAIF/shapash"
"adamerose/pandasgui" -> "lux-org/lux"
"adamerose/pandasgui" -> "jbesomi/texthero" ["e"=1]
"adamerose/pandasgui" -> "pandas-profiling/pandas-profiling"
"adamerose/pandasgui" -> "tkrabel/bamboolib"
"adamerose/pandasgui" -> "modin-project/modin"
"adamerose/pandasgui" -> "voila-dashboards/voila" ["e"=1]
"adamerose/pandasgui" -> "quantopian/qgrid" ["e"=1]
"adamerose/pandasgui" -> "vaexio/vaex"
"adamerose/pandasgui" -> "orchest/orchest"
"adamerose/pandasgui" -> "justmarkham/scikit-learn-tips" ["e"=1]
"adamerose/pandasgui" -> "alfiopuglisi/guietta" ["e"=1]
"blei-lab/edward" -> "uber/pyro"
"blei-lab/edward" -> "pymc-devs/pymc3"
"blei-lab/edward" -> "tensorflow/probability"
"blei-lab/edward" -> "HIPS/autograd"
"blei-lab/edward" -> "GPflow/GPflow"
"blei-lab/edward" -> "stan-dev/stan" ["e"=1]
"blei-lab/edward" -> "thu-ml/zhusuan"
"blei-lab/edward" -> "pgmpy/pgmpy"
"blei-lab/edward" -> "jmschrei/pomegranate"
"blei-lab/edward" -> "SheffieldML/GPy"
"blei-lab/edward" -> "deepmind/sonnet" ["e"=1]
"blei-lab/edward" -> "pyro-ppl/pyro"
"blei-lab/edward" -> "fchollet/keras" ["e"=1]
"blei-lab/edward" -> "markdregan/Bayesian-Modelling-in-Python" ["e"=1]
"blei-lab/edward" -> "hyperopt/hyperopt"
"microsoft/pai" -> "microsoft/hivedscheduler" ["e"=1]
"microsoft/pai" -> "microsoft/nni"
"microsoft/pai" -> "AliyunContainerService/gpushare-scheduler-extender" ["e"=1]
"microsoft/pai" -> "sql-machine-learning/elasticdl" ["e"=1]
"microsoft/pai" -> "determined-ai/determined"
"microsoft/pai" -> "volcano-sh/volcano" ["e"=1]
"microsoft/pai" -> "microsoft/MMdnn" ["e"=1]
"microsoft/pai" -> "bytedance/byteps" ["e"=1]
"microsoft/pai" -> "kubeflow/katib"
"microsoft/pai" -> "tkestack/gpu-manager" ["e"=1]
"microsoft/pai" -> "NVIDIA/k8s-device-plugin" ["e"=1]
"microsoft/pai" -> "horovod/horovod" ["e"=1]
"microsoft/pai" -> "kubeflow/kubeflow"
"microsoft/pai" -> "polyaxon/polyaxon"
"microsoft/pai" -> "microsoft/frameworkcontroller"
"pyro-ppl/pyro" -> "pyro-ppl/numpyro" ["e"=1]
"pyro-ppl/pyro" -> "cornellius-gp/gpytorch"
"pyro-ppl/pyro" -> "pytorch/botorch"
"pyro-ppl/pyro" -> "tensorflow/probability"
"pyro-ppl/pyro" -> "pymc-devs/pymc3"
"pyro-ppl/pyro" -> "blei-lab/edward"
"pyro-ppl/pyro" -> "rtqichen/torchdiffeq" ["e"=1]
"pyro-ppl/pyro" -> "uber/causalml" ["e"=1]
"pyro-ppl/pyro" -> "GPflow/GPflow"
"pyro-ppl/pyro" -> "janosh/awesome-normalizing-flows" ["e"=1]
"pyro-ppl/pyro" -> "google/jax" ["e"=1]
"pyro-ppl/pyro" -> "pymc-devs/pymc4" ["e"=1]
"pyro-ppl/pyro" -> "microsoft/dowhy" ["e"=1]
"pyro-ppl/pyro" -> "google/neural-tangents" ["e"=1]
"pyro-ppl/pyro" -> "arviz-devs/arviz" ["e"=1]
"pytorch/elastic" -> "kubeflow/mpi-operator" ["e"=1]
"pytorch/elastic" -> "facebookresearch/fairscale" ["e"=1]
"pytorch/elastic" -> "pytorch/torchx" ["e"=1]
"pytorch/elastic" -> "pytorch/tensorpipe" ["e"=1]
"pytorch/elastic" -> "facebookincubator/gloo" ["e"=1]
"pytorch/elastic" -> "pytorch/serve"
"pytorch/elastic" -> "sql-machine-learning/elasticdl" ["e"=1]
"pytorch/elastic" -> "kubeflow/arena" ["e"=1]
"pytorch/elastic" -> "kubeflow/kfserving"
"pytorch/elastic" -> "facebookresearch/ClassyVision" ["e"=1]
"pytorch/elastic" -> "NVIDIA/aistore" ["e"=1]
"pytorch/elastic" -> "petuum/adaptdl" ["e"=1]
"pytorch/elastic" -> "NVIDIA/TRTorch" ["e"=1]
"pytorch/elastic" -> "tensorflow/runtime" ["e"=1]
"pytorch/elastic" -> "tensorflow/mesh" ["e"=1]
"kelvins/awesome-mlops" -> "visenger/awesome-mlops" ["e"=1]
"kelvins/awesome-mlops" -> "EthicalML/awesome-production-machine-learning" ["e"=1]
"kelvins/awesome-mlops" -> "evidentlyai/evidently"
"kelvins/awesome-mlops" -> "zenml-io/zenml"
"kelvins/awesome-mlops" -> "bentoml/BentoML"
"kelvins/awesome-mlops" -> "iterative/cml"
"kelvins/awesome-mlops" -> "graviraja/MLOps-Basics" ["e"=1]
"kelvins/awesome-mlops" -> "deepchecks/deepchecks"
"kelvins/awesome-mlops" -> "feast-dev/feast"
"kelvins/awesome-mlops" -> "NannyML/nannyml"
"kelvins/awesome-mlops" -> "microsoft/MLOps" ["e"=1]
"kelvins/awesome-mlops" -> "SeldonIO/alibi-detect"
"kelvins/awesome-mlops" -> "allegroai/clearml"
"kelvins/awesome-mlops" -> "SeldonIO/seldon-core"
"kelvins/awesome-mlops" -> "DataTalksClub/mlops-zoomcamp" ["e"=1]
"LineaLabs/lineapy" -> "fugue-project/fugue"
"LineaLabs/lineapy" -> "fabiocaccamo/python-benedict" ["e"=1]
"LineaLabs/lineapy" -> "whylabs/whylogs"
"LineaLabs/lineapy" -> "mito-ds/monorepo" ["e"=1]
"LineaLabs/lineapy" -> "facebookresearch/balance"
"LineaLabs/lineapy" -> "dstackai/dstack"
"LineaLabs/lineapy" -> "sematic-ai/sematic" ["e"=1]
"LineaLabs/lineapy" -> "unionai-oss/pandera"
"LineaLabs/lineapy" -> "ploomber/ploomber"
"LineaLabs/lineapy" -> "NannyML/nannyml"
"LineaLabs/lineapy" -> "pandera-dev/pandera"
"LineaLabs/lineapy" -> "mljar/mercury"
"LineaLabs/lineapy" -> "featureform/featureform"
"LineaLabs/lineapy" -> "Nixtla/statsforecast" ["e"=1]
"LineaLabs/lineapy" -> "zenml-io/zenml"
"datarevenue-berlin/OpenMLOps" -> "jacopotagliabue/you-dont-need-a-bigger-boat"
"datarevenue-berlin/OpenMLOps" -> "fuzzylabs/awesome-open-mlops"
"datarevenue-berlin/OpenMLOps" -> "mlrun/mlrun"
"datarevenue-berlin/OpenMLOps" -> "aporia-ai/mlplatform-workshop"
"datarevenue-berlin/OpenMLOps" -> "iterative/mlem"
"datarevenue-berlin/OpenMLOps" -> "kelvins/awesome-mlops"
"datarevenue-berlin/OpenMLOps" -> "cdfoundation/sig-mlops"
"datarevenue-berlin/OpenMLOps" -> "thoughtworks/mlops-platforms"
"datarevenue-berlin/OpenMLOps" -> "bodywork-ml/bodywork-core"
"datarevenue-berlin/OpenMLOps" -> "fugue-project/fugue"
"datarevenue-berlin/OpenMLOps" -> "SeldonIO/seldon-core"
"datarevenue-berlin/OpenMLOps" -> "jmeisele/ml-ops"
"datarevenue-berlin/OpenMLOps" -> "featureform/featureform"
"datarevenue-berlin/OpenMLOps" -> "graviraja/MLOps-Basics" ["e"=1]
"datarevenue-berlin/OpenMLOps" -> "linkedin/feathr" ["e"=1]
"parrt/dtreeviz" -> "DistrictDataLabs/yellowbrick"
"parrt/dtreeviz" -> "TeamHG-Memex/eli5"
"parrt/dtreeviz" -> "parrt/random-forest-importances"
"parrt/dtreeviz" -> "MAIF/shapash"
"parrt/dtreeviz" -> "interpretml/interpret"
"parrt/dtreeviz" -> "SauceCat/PDPbox"
"parrt/dtreeviz" -> "dreamquark-ai/tabnet" ["e"=1]
"parrt/dtreeviz" -> "scikit-learn-contrib/boruta_py"
"parrt/dtreeviz" -> "rasbt/mlxtend"
"parrt/dtreeviz" -> "slundberg/shap"
"parrt/dtreeviz" -> "blue-yonder/tsfresh"
"parrt/dtreeviz" -> "scikit-learn-contrib/sklearn-pandas"
"parrt/dtreeviz" -> "koaning/scikit-lego"
"parrt/dtreeviz" -> "stanfordmlgroup/ngboost"
"parrt/dtreeviz" -> "facebookresearch/hiplot"
"deel-ai/xplique" -> "deel-ai/deel-lip"
"deel-ai/xplique" -> "deel-ai/influenciae"
"deel-ai/xplique" -> "fel-thomas/Sobol-Attribution-Method"
"deel-ai/xplique" -> "deel-ai/deel-torchlip"
"deel-ai/xplique" -> "salesforce/OmniXAI"
"deel-ai/xplique" -> "SelfExplainML/PiML-Toolbox"
"deel-ai/xplique" -> "deel-ai/oodeel"
"deel-ai/xplique" -> "deel-ai/FairSense"
"deel-ai/xplique" -> "understandable-machine-intelligence-lab/Quantus" ["e"=1]
"deel-ai/xplique" -> "serre-lab/Harmonization"
"deel-ai/xplique" -> "deel-ai/LARD"
"deel-ai/xplique" -> "deel-ai/puncc"
"deel-ai/xplique" -> "paulnovello/HSIC-Attribution-Method"
"microsoft/responsible-ai-toolbox" -> "interpretml/interpret-community"
"microsoft/responsible-ai-toolbox" -> "interpretml/DiCE"
"microsoft/responsible-ai-toolbox" -> "fairlearn/fairlearn"
"microsoft/responsible-ai-toolbox" -> "facebookresearch/balance"
"microsoft/responsible-ai-toolbox" -> "Azure/mlops-v2" ["e"=1]
"microsoft/responsible-ai-toolbox" -> "ModelOriented/DALEX"
"microsoft/responsible-ai-toolbox" -> "interpretml/interpret"
"microsoft/responsible-ai-toolbox" -> "koaning/doubtlab"
"thesharp/daemonize" -> "serverdensity/python-daemon"
"ContextLab/hypertools" -> "reiinakano/scikit-plot"
"ContextLab/hypertools" -> "DistrictDataLabs/yellowbrick"
"ContextLab/hypertools" -> "RJT1990/pyflux" ["e"=1]
"ContextLab/hypertools" -> "ContextLab/hypertools-paper-notebooks"
"ContextLab/hypertools" -> "TeamHG-Memex/eli5"
"ContextLab/hypertools" -> "tyarkoni/pliers" ["e"=1]
"ContextLab/hypertools" -> "mm-mansour/Fast-Pandas"
"ContextLab/hypertools" -> "dnouri/skorch"
"ContextLab/hypertools" -> "dmlc/gluon-nlp" ["e"=1]
"ContextLab/hypertools" -> "kkyon/botflow" ["e"=1]
"ContextLab/hypertools" -> "lmcinnes/umap"
"ContextLab/hypertools" -> "bambinos/bambi" ["e"=1]
"ContextLab/hypertools" -> "gallantlab/pycortex" ["e"=1]
"ContextLab/hypertools" -> "rasbt/mlxtend"
"ContextLab/hypertools" -> "jmschrei/pomegranate"
"tensorflow/community" -> "tensorflow/docs"
"tensorflow/community" -> "tensorflow/addons"
"tensorflow/community" -> "tensorflow/runtime" ["e"=1]
"tensorflow/community" -> "tensorflow/io"
"tensorflow/community" -> "tensorflow/tfx"
"tensorflow/community" -> "tensorflow/custom-op"
"tensorflow/community" -> "tensorflow/mlir" ["e"=1]
"tensorflow/community" -> "NVIDIA/HugeCTR" ["e"=1]
"tensorflow/community" -> "tensorflow/recommenders-addons" ["e"=1]
"tensorflow/community" -> "tensorflow/benchmarks" ["e"=1]
"tensorflow/community" -> "tensorflow/transform"
"tensorflow/community" -> "tensorflow/text"
"tensorflow/community" -> "tensorflow/profiler"
"tensorflow/community" -> "tensorflow/ecosystem" ["e"=1]
"tensorflow/community" -> "tensorflow/serving"
"bayespy/bayespy" -> "eBay/bayesian-belief-networks"
"bayespy/bayespy" -> "pgmpy/pgmpy"
"bayespy/bayespy" -> "jmschrei/pomegranate"
"bayespy/bayespy" -> "pymc-devs/pymc"
"bayespy/bayespy" -> "bayesnet/bnt"
"bayespy/bayespy" -> "mattjj/pyhsmm"
"bayespy/bayespy" -> "pymc-devs/pymc3"
"bayespy/bayespy" -> "CyberPoint/libpgm"
"bayespy/bayespy" -> "jluttine/tikz-bayesnet"
"bayespy/bayespy" -> "mblondel/lightning" ["e"=1]
"bayespy/bayespy" -> "blei-lab/edward"
"bayespy/bayespy" -> "clinicalml/structuredinference" ["e"=1]
"bayespy/bayespy" -> "avehtari/BDA_py_demos" ["e"=1]
"bayespy/bayespy" -> "stan-dev/pystan" ["e"=1]
"bayespy/bayespy" -> "pystruct/pystruct" ["e"=1]
"RasaHQ/whatlies" -> "koaning/human-learn"
"RasaHQ/whatlies" -> "RasaHQ/rasalit" ["e"=1]
"RasaHQ/whatlies" -> "kevinlu1248/pyate" ["e"=1]
"RasaHQ/whatlies" -> "koaning/tokenwiser"
"RasaHQ/whatlies" -> "koaning/doubtlab"
"RasaHQ/whatlies" -> "uber-research/parallax"
"RasaHQ/whatlies" -> "neomatrix369/nlp_profiler" ["e"=1]
"maxpumperla/hyperas" -> "hyperopt/hyperopt"
"maxpumperla/hyperas" -> "autonomio/talos"
"maxpumperla/hyperas" -> "maxpumperla/elephas" ["e"=1]
"maxpumperla/hyperas" -> "raghakot/keras-vis"
"maxpumperla/hyperas" -> "keras-team/keras-tuner"
"maxpumperla/hyperas" -> "hyperopt/hyperopt-sklearn"
"maxpumperla/hyperas" -> "fchollet/keras-resources" ["e"=1]
"maxpumperla/hyperas" -> "scikit-optimize/scikit-optimize"
"maxpumperla/hyperas" -> "farizrahman4u/seq2seq" ["e"=1]
"maxpumperla/hyperas" -> "matthiasplappert/keras-rl" ["e"=1]
"maxpumperla/hyperas" -> "jhfjhfj1/autokeras"
"maxpumperla/hyperas" -> "philipperemy/keras-attention-mechanism" ["e"=1]
"maxpumperla/hyperas" -> "rhiever/tpot"
"maxpumperla/hyperas" -> "automl/auto-sklearn"
"maxpumperla/hyperas" -> "bstriner/keras-adversarial" ["e"=1]
"cerlymarco/shap-hypetune" -> "Ekeany/Boruta-Shap"
"cerlymarco/shap-hypetune" -> "AutoViML/featurewiz"
"cerlymarco/shap-hypetune" -> "scikit-learn-contrib/MAPIE"
"cerlymarco/shap-hypetune" -> "linkedin/FastTreeSHAP"
"cerlymarco/shap-hypetune" -> "cerlymarco/tspiral" ["e"=1]
"cerlymarco/shap-hypetune" -> "csinva/imodels"
"cerlymarco/shap-hypetune" -> "feature-engine/feature_engine"
"cerlymarco/shap-hypetune" -> "carlomazzaferro/scikit-hts" ["e"=1]
"cerlymarco/shap-hypetune" -> "loft-br/xgboost-survival-embeddings" ["e"=1]
"cerlymarco/shap-hypetune" -> "StatMixedML/XGBoostLSS"
"cerlymarco/shap-hypetune" -> "cerlymarco/linear-tree"
"cerlymarco/shap-hypetune" -> "scikit-learn-contrib/boruta_py"
"cerlymarco/shap-hypetune" -> "tblume1992/ThymeBoost"
"cerlymarco/shap-hypetune" -> "cod3licious/autofeat"
"cerlymarco/shap-hypetune" -> "uber/orbit" ["e"=1]
"scikit-learn-contrib/forest-confidence-interval" -> "ogrisel/pygbm"
"scikit-learn-contrib/forest-confidence-interval" -> "swager/randomForestCI"
"scikit-learn-contrib/forest-confidence-interval" -> "scikit-learn-contrib/stability-selection"
"scikit-learn-contrib/forest-confidence-interval" -> "EpistasisLab/scikit-rebate"
"Microsoft/samples-for-ai" -> "Microsoft/vs-tools-for-ai"
"Microsoft/samples-for-ai" -> "Somedaywilldo/Keras-progressive_growing_of_gans"
"Microsoft/samples-for-ai" -> "Microsoft/vscode-tools-for-ai"
"Microsoft/samples-for-ai" -> "Microsoft/Windows-Machine-Learning" ["e"=1]
"orioledb/orioledb" -> "I-H8-YOU/ABAP-Basic"
"orioledb/orioledb" -> "beeyev/thumbor-s3-docker"
"orioledb/orioledb" -> "drewlong/gophish-ruby"
"orioledb/orioledb" -> "dvemon/data-ptr-comm"
"orioledb/orioledb" -> "DecentraWorldDEWO/Documentation"
"orioledb/orioledb" -> "Etelis/Fortuna-FUD-Crypter"
"orioledb/orioledb" -> "devforth/hothost"
"orioledb/orioledb" -> "bloodbath-io/bloodbath-ruby"
"orioledb/orioledb" -> "xMythic/Rust-recoil-macro-AK-"
"orioledb/orioledb" -> "Infinity-Tech-inc/nifi-json-processor-bundle"
"orioledb/orioledb" -> "DecentraWorldDEWO/DeMix_Subgraph"
"orioledb/orioledb" -> "ForetagInc/alchemy"
"orioledb/orioledb" -> "helloh2o/lucky"
"orioledb/orioledb" -> "coderitual/xna.js"
"orioledb/orioledb" -> "newlc/SwiftKeychainWrapper"
"determined-ai/determined" -> "microsoft/pai"
"determined-ai/determined" -> "allegroai/clearml"
"determined-ai/determined" -> "bentoml/BentoML"
"determined-ai/determined" -> "horovod/horovod" ["e"=1]
"determined-ai/determined" -> "feast-dev/feast"
"determined-ai/determined" -> "polyaxon/polyaxon"
"determined-ai/determined" -> "Netflix/metaflow"
"determined-ai/determined" -> "snorkel-team/snorkel" ["e"=1]
"determined-ai/determined" -> "aimhubio/aim"
"determined-ai/determined" -> "pytorch/elastic"
"determined-ai/determined" -> "pytorch/serve"
"determined-ai/determined" -> "uber/petastorm"
"determined-ai/determined" -> "iterative/cml"
"determined-ai/determined" -> "facebookresearch/hydra" ["e"=1]
"determined-ai/determined" -> "mlflow/mlflow"
"ml-tooling/ml-workspace" -> "ml-tooling/ml-hub"
"ml-tooling/ml-workspace" -> "mauhai/awesome-jupyterlab" ["e"=1]
"ml-tooling/ml-workspace" -> "nteract/papermill" ["e"=1]
"ml-tooling/ml-workspace" -> "EthicalML/awesome-production-machine-learning" ["e"=1]
"ml-tooling/ml-workspace" -> "bentoml/BentoML"
"ml-tooling/ml-workspace" -> "markusschanta/awesome-jupyter" ["e"=1]
"ml-tooling/ml-workspace" -> "ml-tooling/opyrator"
"ml-tooling/ml-workspace" -> "mwouts/jupytext" ["e"=1]
"ml-tooling/ml-workspace" -> "elyra-ai/elyra"
"ml-tooling/ml-workspace" -> "iterative/dvc"
"ml-tooling/ml-workspace" -> "mlflow/mlflow"
"ml-tooling/ml-workspace" -> "fastai/nbdev" ["e"=1]
"ml-tooling/ml-workspace" -> "pycaret/pycaret"
"ml-tooling/ml-workspace" -> "quantumblacklabs/kedro"
"ml-tooling/ml-workspace" -> "SeldonIO/alibi"
"blue-yonder/tsfresh" -> "alan-turing-institute/sktime" ["e"=1]
"blue-yonder/tsfresh" -> "unit8co/darts" ["e"=1]
"blue-yonder/tsfresh" -> "slundberg/shap"
"blue-yonder/tsfresh" -> "TDAmeritrade/stumpy" ["e"=1]
"blue-yonder/tsfresh" -> "MaxBenChrist/awesome_time_series_in_python" ["e"=1]
"blue-yonder/tsfresh" -> "facebook/prophet"
"blue-yonder/tsfresh" -> "tslearn-team/tslearn" ["e"=1]
"blue-yonder/tsfresh" -> "RJT1990/pyflux" ["e"=1]
"blue-yonder/tsfresh" -> "facebookresearch/Kats" ["e"=1]
"blue-yonder/tsfresh" -> "scikit-learn-contrib/imbalanced-learn"
"blue-yonder/tsfresh" -> "rasbt/mlxtend"
"blue-yonder/tsfresh" -> "automl/auto-sklearn"
"blue-yonder/tsfresh" -> "yzhao062/pyod" ["e"=1]
"blue-yonder/tsfresh" -> "awslabs/gluon-ts" ["e"=1]
"blue-yonder/tsfresh" -> "Featuretools/featuretools"
"catboost/tutorials" -> "catboost/catboost"
"catboost/tutorials" -> "catboost/benchmarks"
"catboost/tutorials" -> "scikit-learn-contrib/boruta_py"
"catboost/tutorials" -> "catboost/catboost-viewer"
"catboost/tutorials" -> "sberbank-ai-lab/LightAutoML" ["e"=1]
"catboost/tutorials" -> "stanfordmlgroup/ngboost"
"catboost/tutorials" -> "yandexdataschool/Practical_DL" ["e"=1]
"catboost/tutorials" -> "TeamHG-Memex/eli5"
"catboost/tutorials" -> "maks-sh/scikit-uplift" ["e"=1]
"catboost/tutorials" -> "rasbt/mlxtend"
"catboost/tutorials" -> "KwokHing/YandexCatBoost-Python-Demo"
"catboost/tutorials" -> "dreamquark-ai/tabnet" ["e"=1]
"catboost/tutorials" -> "WillKoehrsen/hyperparameter-optimization"
"catboost/tutorials" -> "AutoViML/featurewiz"
"catboost/tutorials" -> "RGF-team/rgf"
"joblib/joblib-spark" -> "databricks/spark-pandas"
"tostq/Easy_HMM" -> "guyz/HMM"
"tostq/Easy_HMM" -> "hmmlearn/hmmlearn"
"tostq/Easy_HMM" -> "Eilene/HMM-python"
"tostq/Easy_HMM" -> "ldanduo/HMM"
"tostq/Easy_HMM" -> "aehuynh/hidden-markov-model"
"sferes2/sferes2" -> "sferes2/nn2"
"sferes2/sferes2" -> "sferes2/map_elites"
"sferes2/sferes2" -> "sferes2/modular_QD"
"dssg/hitchhikers-guide" -> "dssg/triage"
"dssg/hitchhikers-guide" -> "dssg/MLforPublicPolicy"
"dssg/hitchhikers-guide" -> "dssg/aequitas"
"dssg/hitchhikers-guide" -> "dssg/mlforpublicpolicylab"
"dssg/hitchhikers-guide" -> "dssg/data-science-101"
"dssg/hitchhikers-guide" -> "dssg/police-eis"
"dssg/hitchhikers-guide" -> "dssg/dirtyduck"
"dssg/hitchhikers-guide" -> "dssg/dsapp-reading-group"
"dssg/hitchhikers-guide" -> "hadley/stats337" ["e"=1]
"dssg/hitchhikers-guide" -> "drivendataorg/competition-winners"
"dssg/hitchhikers-guide" -> "rayidghani/magicloops"
"dssg/hitchhikers-guide" -> "DeltaAnalytics/machine_learning_for_good"
"dssg/hitchhikers-guide" -> "gboeing/urban-data-science" ["e"=1]
"dssg/hitchhikers-guide" -> "jphall663/interpretable_machine_learning_with_python"
"dssg/hitchhikers-guide" -> "drivendata/cookiecutter-data-science"
"fugue-project/fugue" -> "ibis-project/ibis" ["e"=1]
"fugue-project/fugue" -> "whylabs/whylogs"
"fugue-project/fugue" -> "pandera-dev/pandera"
"fugue-project/fugue" -> "LineaLabs/lineapy"
"fugue-project/fugue" -> "ploomber/ploomber"
"fugue-project/fugue" -> "Nixtla/statsforecast" ["e"=1]
"fugue-project/fugue" -> "eto-ai/lance" ["e"=1]
"fugue-project/fugue" -> "flyteorg/flyte"
"fugue-project/fugue" -> "tobymao/sqlglot" ["e"=1]
"fugue-project/fugue" -> "deepchecks/deepchecks"
"fugue-project/fugue" -> "online-ml/river"
"fugue-project/fugue" -> "marsupialtail/quokka" ["e"=1]
"fugue-project/fugue" -> "scikit-learn-contrib/MAPIE"
"fugue-project/fugue" -> "fal-ai/fal" ["e"=1]
"fugue-project/fugue" -> "uber/orbit" ["e"=1]
"deepfence/FlowMeter" -> "deepfence/YaraHunter"
"deepfence/FlowMeter" -> "deepfence/PacketStreamer"
"deepfence/FlowMeter" -> "deepfence/SecretScanner"
"deepfence/FlowMeter" -> "deepfence/ThreatMapper"
"deepfence/PacketStreamer" -> "deepfence/YaraHunter"
"deepfence/PacketStreamer" -> "deepfence/FlowMeter"
"deepfence/PacketStreamer" -> "deepfence/SecretScanner"
"deepfence/PacketStreamer" -> "deepfence/ThreatMapper"
"deepfence/SecretScanner" -> "deepfence/YaraHunter"
"deepfence/SecretScanner" -> "deepfence/PacketStreamer"
"deepfence/SecretScanner" -> "deepfence/FlowMeter"
"deepfence/SecretScanner" -> "deepfence/ThreatMapper"
"deepfence/YaraHunter" -> "deepfence/PacketStreamer"
"deepfence/YaraHunter" -> "deepfence/FlowMeter"
"deepfence/YaraHunter" -> "deepfence/SecretScanner"
"deepfence/YaraHunter" -> "deepfence/ThreatMapper"
"dj-nitehawk/MongoDB.Entities" -> "dj-nitehawk/MongoWebApiStarter"
"dj-nitehawk/MongoDB.Entities" -> "TurnerSoftware/MongoFramework"
"dj-nitehawk/MongoDB.Entities" -> "alexandre-spieser/mongodb-generic-repository"
"dj-nitehawk/MongoDB.Entities" -> "alexandre-spieser/AspNetCore.Identity.MongoDbCore"
"dj-nitehawk/MongoDB.Entities" -> "matteofabbri/AspNetCore.Identity.Mongo"
"dj-nitehawk/MongoDB.Entities" -> "koenbeuk/EntityFrameworkCore.Triggered" ["e"=1]
"dj-nitehawk/MongoDB.Entities" -> "TanvirArjel/EFCore.GenericRepository" ["e"=1]
"automl/TabPFN" -> "csinva/imodels"
"automl/TabPFN" -> "automl/TransformersCanDoBayesianInference"
"automl/TabPFN" -> "manujosephv/pytorch_tabular" ["e"=1]
"automl/TabPFN" -> "facebookresearch/balance"
"automl/TabPFN" -> "scikit-learn-contrib/MAPIE"
"automl/TabPFN" -> "Ekeany/Boruta-Shap"
"automl/TabPFN" -> "Nixtla/statsforecast" ["e"=1]
"automl/TabPFN" -> "cerlymarco/shap-hypetune"
"automl/TabPFN" -> "koaning/scikit-lego"
"automl/TabPFN" -> "nnaisense/evotorch" ["e"=1]
"automl/TabPFN" -> "Nixtla/mlforecast" ["e"=1]
"automl/TabPFN" -> "valeman/awesome-conformal-prediction"
"automl/TabPFN" -> "stanfordmlgroup/ngboost"
"automl/TabPFN" -> "huggingface/setfit" ["e"=1]
"automl/TabPFN" -> "linkedin/FastTreeSHAP"
"cda-group/arcon" -> "kompics/kompact"
"cda-group/arcon" -> "cda-group/arc"
"jmcarpenter2/swifter" -> "nalepae/pandarallel"
"jmcarpenter2/swifter" -> "modin-project/modin"
"jmcarpenter2/swifter" -> "vaexio/vaex"
"jmcarpenter2/swifter" -> "TeamHG-Memex/eli5"
"jmcarpenter2/swifter" -> "h2oai/datatable"
"jmcarpenter2/swifter" -> "rapidsai/cudf"
"jmcarpenter2/swifter" -> "pandas-profiling/pandas-profiling"
"jmcarpenter2/swifter" -> "databricks/koalas"
"jmcarpenter2/swifter" -> "rasbt/mlxtend"
"jmcarpenter2/swifter" -> "ResidentMario/missingno"
"jmcarpenter2/swifter" -> "quantopian/qgrid" ["e"=1]
"jmcarpenter2/swifter" -> "pandera-dev/pandera"
"jmcarpenter2/swifter" -> "microsoft/hummingbird"
"jmcarpenter2/swifter" -> "dask/dask" ["e"=1]
"jmcarpenter2/swifter" -> "DistrictDataLabs/yellowbrick"
"100/Solid" -> "ljvmiranda921/pyswarms" ["e"=1]
"100/Solid" -> "csurfer/pyheatmagic" ["e"=1]
"100/Solid" -> "facebookresearch/nevergrad"
"100/Solid" -> "reiinakano/xcessiv"
"100/Solid" -> "paulknysh/blackbox" ["e"=1]
"100/Solid" -> "mehrdadn/SOTA-Py"
"100/Solid" -> "joeddav/devol"
"100/Solid" -> "uqfoundation/mystic"
"100/Solid" -> "scikit-optimize/scikit-optimize"
"100/Solid" -> "wwrechard/pydlm" ["e"=1]
"100/Solid" -> "RJT1990/pyflux" ["e"=1]
"100/Solid" -> "narimiran/tably"
"100/Solid" -> "reiinakano/scikit-plot"
"facebookresearch/nevergrad" -> "pytorch/botorch"
"facebookresearch/nevergrad" -> "facebookresearch/pytext" ["e"=1]
"facebookresearch/nevergrad" -> "facebook/Ax"
"facebookresearch/nevergrad" -> "cornellius-gp/gpytorch"
"facebookresearch/nevergrad" -> "deepmind/trfl" ["e"=1]
"facebookresearch/nevergrad" -> "williamFalcon/pytorch-lightning" ["e"=1]
"facebookresearch/nevergrad" -> "scikit-optimize/scikit-optimize"
"facebookresearch/nevergrad" -> "facebookresearch/higher" ["e"=1]
"facebookresearch/nevergrad" -> "rtqichen/torchdiffeq" ["e"=1]
"facebookresearch/nevergrad" -> "facebookresearch/Horizon" ["e"=1]
"facebookresearch/nevergrad" -> "pyro-ppl/pyro"
"facebookresearch/nevergrad" -> "HIPS/autograd"
"facebookresearch/nevergrad" -> "arogozhnikov/einops" ["e"=1]
"facebookresearch/nevergrad" -> "pytorch/ignite" ["e"=1]
"facebookresearch/nevergrad" -> "google/jax" ["e"=1]
"zygmuntz/hyperband" -> "automl/HpBandSter"
"zygmuntz/hyperband" -> "thuijskens/scikit-hyperband"
"zygmuntz/hyperband" -> "automl/SMAC3"
"zygmuntz/hyperband" -> "kevinzakka/hyperband"
"zygmuntz/hyperband" -> "kevinzakka/hypersearch"
"zygmuntz/hyperband" -> "scikit-optimize/scikit-optimize"
"zygmuntz/hyperband" -> "rsteca/sklearn-deap"
"zygmuntz/hyperband" -> "scikit-learn-contrib/polylearn"
"zygmuntz/hyperband" -> "automl/RoBO"
"zygmuntz/hyperband" -> "JasperSnoek/spearmint"
"zygmuntz/hyperband" -> "hyperopt/hyperopt-sklearn"
"zygmuntz/hyperband" -> "hyperopt/hyperopt"
"zygmuntz/hyperband" -> "reiinakano/xcessiv"
"zygmuntz/hyperband" -> "automl/HPOlib"
"zygmuntz/hyperband" -> "Far0n/xgbfi" ["e"=1]
"orchest/orchest" -> "ploomber/ploomber"
"orchest/orchest" -> "kestra-io/kestra" ["e"=1]
"orchest/orchest" -> "evidentlyai/evidently"
"orchest/orchest" -> "kedro-org/kedro"
"orchest/orchest" -> "lux-org/lux"
"orchest/orchest" -> "PrefectHQ/prefect" ["e"=1]
"orchest/orchest" -> "MAIF/shapash"
"orchest/orchest" -> "dagster-io/dagster" ["e"=1]
"orchest/orchest" -> "mljar/mercury"
"orchest/orchest" -> "holoviz/panel" ["e"=1]
"orchest/orchest" -> "online-ml/river"
"orchest/orchest" -> "fugue-project/fugue"
"orchest/orchest" -> "flyteorg/flyte"
"orchest/orchest" -> "bentoml/BentoML"
"orchest/orchest" -> "deepchecks/deepchecks"
"IBM/MAX-Object-Detector" -> "IBM/MAX-Object-Detector-Web-App"
"IBM/MAX-Object-Detector" -> "CODAIT/max-central-repo"
"IBM/MAX-Object-Detector" -> "IBM/MAX-Weather-Forecaster"
"IBM/MAX-Object-Detector" -> "IBM/skillsnetwork"
"microsoft/hummingbird" -> "facebookresearch/hiplot"
"microsoft/hummingbird" -> "emeryberger/scalene" ["e"=1]
"microsoft/hummingbird" -> "bentoml/BentoML"
"microsoft/hummingbird" -> "vaexio/vaex"
"microsoft/hummingbird" -> "SeldonIO/alibi-detect"
"microsoft/hummingbird" -> "SeldonIO/alibi"
"microsoft/hummingbird" -> "rapidsai/cuml"
"microsoft/hummingbird" -> "pytorch/captum" ["e"=1]
"microsoft/hummingbird" -> "arogozhnikov/einops" ["e"=1]
"microsoft/hummingbird" -> "skorch-dev/skorch" ["e"=1]
"microsoft/hummingbird" -> "evidentlyai/evidently"
"microsoft/hummingbird" -> "onelivesleft/PrettyErrors" ["e"=1]
"microsoft/hummingbird" -> "alan-turing-institute/sktime" ["e"=1]
"microsoft/hummingbird" -> "dreamquark-ai/tabnet" ["e"=1]
"microsoft/hummingbird" -> "deepchecks/deepchecks"
"abhayspawar/featexp" -> "WillKoehrsen/feature-selector"
"abhayspawar/featexp" -> "flennerhag/mlens"
"abhayspawar/featexp" -> "scikit-learn-contrib/categorical-encoding"
"abhayspawar/featexp" -> "Featuretools/featuretools"
"abhayspawar/featexp" -> "motefly/DeepGBM" ["e"=1]
"abhayspawar/featexp" -> "HunterMcGushion/hyperparameter_hunter"
"abhayspawar/featexp" -> "WillKoehrsen/hyperparameter-optimization"
"abhayspawar/featexp" -> "TeamHG-Memex/eli5"
"abhayspawar/featexp" -> "rushter/heamy" ["e"=1]
"abhayspawar/featexp" -> "dayeren/Kaggle_Competition_Treasure" ["e"=1]
"abhayspawar/featexp" -> "chenkkkk/User-loan-risk-prediction" ["e"=1]
"abhayspawar/featexp" -> "amueller/dabl"
"abhayspawar/featexp" -> "scikit-learn-contrib/boruta_py"
"abhayspawar/featexp" -> "guoday/ctrNet-tool" ["e"=1]
"abhayspawar/featexp" -> "MaxHalford/xam"
"aimhubio/aim" -> "allegroai/clearml"
"aimhubio/aim" -> "evidentlyai/evidently"
"aimhubio/aim" -> "mosaicml/composer" ["e"=1]
"aimhubio/aim" -> "bentoml/BentoML"
"aimhubio/aim" -> "arogozhnikov/einops" ["e"=1]
"aimhubio/aim" -> "facebookresearch/hydra" ["e"=1]
"aimhubio/aim" -> "ashleve/lightning-hydra-template" ["e"=1]
"aimhubio/aim" -> "deepchecks/deepchecks"
"aimhubio/aim" -> "optuna/optuna"
"aimhubio/aim" -> "mlflow/mlflow"
"aimhubio/aim" -> "facebookresearch/AugLy" ["e"=1]
"aimhubio/aim" -> "activeloopai/Hub"
"aimhubio/aim" -> "zenml-io/zenml"
"aimhubio/aim" -> "facebookresearch/vissl" ["e"=1]
"aimhubio/aim" -> "flyteorg/flyte"
"facebookresearch/balance" -> "pymc-labs/CausalPy" ["e"=1]
"facebookresearch/balance" -> "SelfExplainML/PiML-Toolbox"
"facebookresearch/balance" -> "automl/TabPFN"
"facebookresearch/balance" -> "awslabs/fortuna"
"facebookresearch/balance" -> "koaning/embetter"
"facebookresearch/balance" -> "csinva/imodels"
"facebookresearch/balance" -> "LineaLabs/lineapy"
"facebookresearch/balance" -> "WillianFuks/tfcausalimpact" ["e"=1]
"facebookresearch/balance" -> "microsoft/causica" ["e"=1]
"facebookresearch/balance" -> "huggingface/setfit" ["e"=1]
"facebookresearch/balance" -> "scikit-learn-contrib/MAPIE"
"facebookresearch/balance" -> "kennethleungty/Failed-ML"
"facebookresearch/balance" -> "microsoft/responsible-ai-toolbox"
"facebookresearch/balance" -> "salesforce/causalai"
"facebookresearch/balance" -> "uber/orbit" ["e"=1]
"wangyongjie-ntu/Awesome-explainable-AI" -> "Trusted-AI/AIX360"
"wangyongjie-ntu/Awesome-explainable-AI" -> "pbiecek/xai_resources"
"wangyongjie-ntu/Awesome-explainable-AI" -> "jphall663/awesome-machine-learning-interpretability"
"wangyongjie-ntu/Awesome-explainable-AI" -> "EthicalML/xai"
"wangyongjie-ntu/Awesome-explainable-AI" -> "explainX/explainx"
"wangyongjie-ntu/Awesome-explainable-AI" -> "SeldonIO/alibi"
"wangyongjie-ntu/Awesome-explainable-AI" -> "hbaniecki/adversarial-explainable-ai"
"wangyongjie-ntu/Awesome-explainable-AI" -> "lopusz/awesome-interpretable-machine-learning"
"wangyongjie-ntu/Awesome-explainable-AI" -> "anguyen8/XAI-papers"
"wangyongjie-ntu/Awesome-explainable-AI" -> "oneTaken/awesome_deep_learning_interpretability"
"wangyongjie-ntu/Awesome-explainable-AI" -> "interpretml/interpret"
"wangyongjie-ntu/Awesome-explainable-AI" -> "interpretml/DiCE"
"wangyongjie-ntu/Awesome-explainable-AI" -> "salesforce/OmniXAI"
"wangyongjie-ntu/Awesome-explainable-AI" -> "pytorch/captum" ["e"=1]
"wangyongjie-ntu/Awesome-explainable-AI" -> "ModelOriented/DALEX"
"mrocklin/streamz" -> "dask/dask-ml"
"serverdensity/python-daemon" -> "thesharp/daemonize"
"serverdensity/python-daemon" -> "martinrusev/python-daemon"
"serverdensity/python-daemon" -> "arnaudsj/python-daemon"
"serverdensity/python-daemon" -> "leporo/tornado-redis" ["e"=1]
"serverdensity/python-daemon" -> "serverdensity/sd-agent"
"serverdensity/python-daemon" -> "bdarnell/torndb" ["e"=1]
"serverdensity/python-daemon" -> "tomerfiliba/rpyc"
"serverdensity/python-daemon" -> "drkjam/netaddr" ["e"=1]
"serverdensity/python-daemon" -> "aio-libs/aioredis" ["e"=1]
"serverdensity/python-daemon" -> "gak/pycallgraph" ["e"=1]
"serverdensity/python-daemon" -> "jsmarkus/the-little-mongodb-book" ["e"=1]
"serverdensity/python-daemon" -> "gorakhargosh/watchdog" ["e"=1]
"Kaggle/docker-python" -> "Kaggle/kaggle-api"
"Kaggle/docker-python" -> "MLWave/Kaggle-Ensemble-Guide" ["e"=1]
"Kaggle/docker-python" -> "kaz-Anova/StackNet" ["e"=1]
"Kaggle/docker-python" -> "Kaggle/docker-rstats"
"Kaggle/docker-python" -> "trent-b/iterative-stratification" ["e"=1]
"Kaggle/docker-python" -> "nyanp/nyaggle" ["e"=1]
"Kaggle/docker-python" -> "jupyter/docker-stacks" ["e"=1]
"Kaggle/docker-python" -> "TeamHG-Memex/eli5"
"Kaggle/docker-python" -> "pfnet/optuna" ["e"=1]
"Kaggle/docker-python" -> "Microsoft/LightGBM"
"Kaggle/docker-python" -> "nejumi/kaggle_memo" ["e"=1]
"Kaggle/docker-python" -> "albu/albumentations" ["e"=1]
"Kaggle/docker-python" -> "jeongyoonlee/Kaggler" ["e"=1]
"Kaggle/docker-python" -> "ChenglongChen/Kaggle_CrowdFlower" ["e"=1]
"Kaggle/docker-python" -> "pfnet-research/xfeat" ["e"=1]
"google/tangent" -> "uber/pyro"
"google/tangent" -> "HIPS/autograd"
"google/tangent" -> "facebookresearch/TensorComprehensions" ["e"=1]
"google/tangent" -> "tensorflow/fold" ["e"=1]
"google/tangent" -> "lanpa/tensorboard-pytorch" ["e"=1]
"google/tangent" -> "uber/horovod" ["e"=1]
"google/tangent" -> "facebookresearch/fairseq-py" ["e"=1]
"google/tangent" -> "openai/gradient-checkpointing" ["e"=1]
"google/tangent" -> "blei-lab/edward"
"google/tangent" -> "bioinf-jku/SNNs" ["e"=1]
"google/tangent" -> "cupy/cupy" ["e"=1]
"google/tangent" -> "agermanidis/livepython" ["e"=1]
"google/tangent" -> "salesforce/matchbox" ["e"=1]
"google/tangent" -> "gaojiuli/gain" ["e"=1]
"google/tangent" -> "dnouri/skorch"
"tomerfiliba/rpyc" -> "irmen/Pyro4"
"tomerfiliba/rpyc" -> "tomerfiliba/plumbum" ["e"=1]
"tomerfiliba/rpyc" -> "joshmarshall/jsonrpclib"
"tomerfiliba/rpyc" -> "dotcloud/zerorpc-python" ["e"=1]
"tomerfiliba/rpyc" -> "quantmind/pulsar" ["e"=1]
"tomerfiliba/rpyc" -> "serverdensity/python-daemon"
"tomerfiliba/rpyc" -> "mozilla-services/circus" ["e"=1]
"bentoml/Yatai" -> "bentoml/bentoctl"
"bentoml/Yatai" -> "bentoml/BentoML"
"bentoml/Yatai" -> "bentoml/gallery"
"christophM/iml" -> "pbiecek/DALEX"
"christophM/iml" -> "mlr-org/mlr3" ["e"=1]
"christophM/iml" -> "h2oai/mli-resources"
"christophM/iml" -> "thomasp85/lime" ["e"=1]
"christophM/iml" -> "ModelOriented/DrWhy"
"christophM/iml" -> "koalaverse/vip"
"christophM/iml" -> "bgreenwell/pdp"
"christophM/iml" -> "ModelOriented/modelStudio"
"christophM/iml" -> "mlr-org/mlr" ["e"=1]
"christophM/iml" -> "AppliedDataSciencePartners/xgboostExplainer"
"christophM/iml" -> "tidymodels/recipes" ["e"=1]
"christophM/iml" -> "tidymodels/tune" ["e"=1]
"christophM/iml" -> "strengejacke/ggeffects" ["e"=1]
"christophM/iml" -> "holub008/xrf"
"christophM/iml" -> "tidymodels/TMwR" ["e"=1]
"krasserm/bayesian-machine-learning" -> "cornellius-gp/gpytorch"
"krasserm/bayesian-machine-learning" -> "pytorch/botorch"
"krasserm/bayesian-machine-learning" -> "kumar-shridhar/PyTorch-BayesianCNN" ["e"=1]
"krasserm/bayesian-machine-learning" -> "fmfn/BayesianOptimization"
"krasserm/bayesian-machine-learning" -> "JavierAntoran/Bayesian-Neural-Networks" ["e"=1]
"krasserm/bayesian-machine-learning" -> "tensorflow/probability"
"krasserm/bayesian-machine-learning" -> "SheffieldML/GPy"
"krasserm/bayesian-machine-learning" -> "SheffieldML/GPyOpt"
"krasserm/bayesian-machine-learning" -> "GPflow/GPflow"
"krasserm/bayesian-machine-learning" -> "pyro-ppl/numpyro" ["e"=1]
"krasserm/bayesian-machine-learning" -> "probml/pyprobml"
"krasserm/bayesian-machine-learning" -> "pymc-devs/resources" ["e"=1]
"krasserm/bayesian-machine-learning" -> "pyro-ppl/pyro"
"krasserm/bayesian-machine-learning" -> "bayesgroup/deepbayes-2019" ["e"=1]
"krasserm/bayesian-machine-learning" -> "piEsposito/blitz-bayesian-deep-learning" ["e"=1]
"joshmarshall/jsonrpclib" -> "pavlov99/json-rpc"
"joshmarshall/jsonrpclib" -> "joshmarshall/tornadorpc"
"joshmarshall/jsonrpclib" -> "tcalmant/jsonrpclib"
"joshmarshall/jsonrpclib" -> "niligulmohar/python-symmetric-jsonrpc"
"joshmarshall/jsonrpclib" -> "datagraph/jquery-jsonrpc"
"joshmarshall/jsonrpclib" -> "gerold-penz/python-jsonrpc"
"joshmarshall/jsonrpclib" -> "oubiwann/txjsonrpc"
"joshmarshall/jsonrpclib" -> "cenobites/flask-jsonrpc"
"joshmarshall/jsonrpclib" -> "NCMI/jsonrpc"
"Yelp/MOE" -> "JasperSnoek/spearmint"
"Yelp/MOE" -> "HIPS/Spearmint"
"Yelp/MOE" -> "scikit-optimize/scikit-optimize"
"Yelp/MOE" -> "automl/SMAC3"
"Yelp/MOE" -> "hyperopt/hyperopt"
"Yelp/MOE" -> "SheffieldML/GPyOpt"
"Yelp/MOE" -> "claesenm/optunity"
"Yelp/MOE" -> "JohnLangford/vowpal_wabbit" ["e"=1]
"Yelp/MOE" -> "jaberg/hyperopt"
"Yelp/MOE" -> "rmcantin/bayesopt"
"Yelp/MOE" -> "wujian16/Cornell-MOE"
"Yelp/MOE" -> "hyperopt/hyperopt-sklearn"
"Yelp/MOE" -> "automl/RoBO"
"Yelp/MOE" -> "rhiever/tpot"
"Yelp/MOE" -> "BIDData/BIDMach" ["e"=1]
"bcb/jsonrpcclient" -> "bcb/jsonrpcserver"
"takeshixx/redstar-tools" -> "BlackOtton/RedStar-Media"
"ypeleg/HungaBunga" -> "8080labs/pyforest"
"ypeleg/HungaBunga" -> "clauswilke/ggtext" ["e"=1]
"ypeleg/HungaBunga" -> "DAGsHub/fds"
"ypeleg/HungaBunga" -> "deepmind/bsuite" ["e"=1]
"ypeleg/HungaBunga" -> "facebookresearch/hiplot"
"ypeleg/HungaBunga" -> "keras-team/keras-tuner"
"ypeleg/HungaBunga" -> "DenisVorotyntsev/CategoricalEncodingBenchmark" ["e"=1]
"ypeleg/HungaBunga" -> "uber/manifold"
"ypeleg/HungaBunga" -> "sepandhaghighi/pycm" ["e"=1]
"ypeleg/HungaBunga" -> "megvii-model/ShuffleNet-Series" ["e"=1]
"ypeleg/HungaBunga" -> "microsoft/interpret"
"scikit-optimize/scikit-optimize" -> "hyperopt/hyperopt"
"scikit-optimize/scikit-optimize" -> "hyperopt/hyperopt-sklearn"
"scikit-optimize/scikit-optimize" -> "fmfn/BayesianOptimization"
"scikit-optimize/scikit-optimize" -> "automl/auto-sklearn"
"scikit-optimize/scikit-optimize" -> "scikit-learn-contrib/imbalanced-learn"
"scikit-optimize/scikit-optimize" -> "TeamHG-Memex/eli5"
"scikit-optimize/scikit-optimize" -> "reiinakano/scikit-plot"
"scikit-optimize/scikit-optimize" -> "rasbt/mlxtend"
"scikit-optimize/scikit-optimize" -> "DistrictDataLabs/yellowbrick"
"scikit-optimize/scikit-optimize" -> "rhiever/tpot"
"scikit-optimize/scikit-optimize" -> "SheffieldML/GPyOpt"
"scikit-optimize/scikit-optimize" -> "HIPS/Spearmint"
"scikit-optimize/scikit-optimize" -> "automl/SMAC3"
"scikit-optimize/scikit-optimize" -> "pymc-devs/pymc3"
"scikit-optimize/scikit-optimize" -> "pytorch/botorch"
"diffgram/diffgram" -> "recognai/rubrix" ["e"=1]
"diffgram/diffgram" -> "heartexlabs/label-studio" ["e"=1]
"diffgram/diffgram" -> "heartexlabs/awesome-data-labeling" ["e"=1]
"diffgram/diffgram" -> "airctic/icevision" ["e"=1]
"diffgram/diffgram" -> "deepchecks/deepchecks"
"diffgram/diffgram" -> "aimhubio/aim"
"diffgram/diffgram" -> "openvinotoolkit/cvat" ["e"=1]
"diffgram/diffgram" -> "voxel51/fiftyone" ["e"=1]
"diffgram/diffgram" -> "manujosephv/pytorch_tabular" ["e"=1]
"diffgram/diffgram" -> "facebookresearch/vissl" ["e"=1]
"diffgram/diffgram" -> "cleanlab/cleanlab"
"diffgram/diffgram" -> "NorskRegnesentral/skweak" ["e"=1]
"diffgram/diffgram" -> "huggingface/accelerate" ["e"=1]
"diffgram/diffgram" -> "maiot-io/zenml"
"diffgram/diffgram" -> "code-kern-ai/refinery" ["e"=1]
"henripal/labnotebook" -> "bbli/ml_board"
"henripal/labnotebook" -> "mm-mansour/Fast-Pandas"
"henripal/labnotebook" -> "dataversioncontrol/dvc"
"henripal/labnotebook" -> "williamFalcon/test-tube" ["e"=1]
"henripal/labnotebook" -> "jgreenemi/Parris"
"rapidsai/cuml" -> "rapidsai/cudf"
"rapidsai/cuml" -> "rapidsai/cugraph"
"rapidsai/cuml" -> "rapidsai/notebooks"
"rapidsai/cuml" -> "cupy/cupy" ["e"=1]
"rapidsai/cuml" -> "lmcinnes/umap"
"rapidsai/cuml" -> "microsoft/hummingbird"
"rapidsai/cuml" -> "optuna/optuna"
"rapidsai/cuml" -> "rapidsai/cuspatial"
"rapidsai/cuml" -> "modin-project/modin"
"rapidsai/cuml" -> "DistrictDataLabs/yellowbrick"
"rapidsai/cuml" -> "vaexio/vaex"
"rapidsai/cuml" -> "rasbt/mlxtend"
"rapidsai/cuml" -> "skorch-dev/skorch" ["e"=1]
"rapidsai/cuml" -> "scikit-learn-contrib/imbalanced-learn"
"rapidsai/cuml" -> "EpistasisLab/tpot"
"ModelOriented/DALEX" -> "ModelOriented/DrWhy"
"ModelOriented/DALEX" -> "ModelOriented/modelStudio"
"ModelOriented/DALEX" -> "interpretml/DiCE"
"ModelOriented/DALEX" -> "pbiecek/ema"
"ModelOriented/DALEX" -> "Trusted-AI/AIX360"
"ModelOriented/DALEX" -> "ModelOriented/DALEXtra"
"ModelOriented/DALEX" -> "EthicalML/xai"
"ModelOriented/DALEX" -> "SeldonIO/alibi"
"ModelOriented/DALEX" -> "oracle/Skater"
"ModelOriented/DALEX" -> "oegedijk/explainerdashboard"
"ModelOriented/DALEX" -> "interpretml/interpret"
"ModelOriented/DALEX" -> "Ekeany/Boruta-Shap"
"ModelOriented/DALEX" -> "christophM/iml"
"ModelOriented/DALEX" -> "csinva/imodels"
"ModelOriented/DALEX" -> "MAIF/shapash"
"daft-dev/daft" -> "jeremiecoullon/SGMCMCJax" ["e"=1]
"rhiever/tpot" -> "automl/auto-sklearn"
"rhiever/tpot" -> "facebookincubator/prophet"
"rhiever/tpot" -> "reiinakano/xcessiv"
"rhiever/tpot" -> "reiinakano/scikit-plot"
"rhiever/tpot" -> "ClimbsRocks/auto_ml"
"rhiever/tpot" -> "scikit-optimize/scikit-optimize"
"rhiever/tpot" -> "rasbt/mlxtend"
"rhiever/tpot" -> "JohnLangford/vowpal_wabbit" ["e"=1]
"rhiever/tpot" -> "blei-lab/edward"
"rhiever/tpot" -> "blue-yonder/tsfresh"
"rhiever/tpot" -> "rhiever/datacleaner" ["e"=1]
"rhiever/tpot" -> "TeamHG-Memex/eli5"
"rhiever/tpot" -> "google/skflow" ["e"=1]
"rhiever/tpot" -> "ellisonbg/altair" ["e"=1]
"rhiever/tpot" -> "Featuretools/featuretools"
"vizzuhq/ipyvizzu" -> "vizzuhq/ipyvizzu-story"
"vizzuhq/ipyvizzu" -> "mljar/mercury"
"vizzuhq/ipyvizzu" -> "man-group/notebooker" ["e"=1]
"vizzuhq/ipyvizzu" -> "holoviz/panel" ["e"=1]
"vizzuhq/ipyvizzu" -> "vizzuhq/vizzu-lib" ["e"=1]
"vizzuhq/ipyvizzu" -> "ploomber/ploomber"
"vizzuhq/ipyvizzu" -> "Nixtla/statsforecast" ["e"=1]
"vizzuhq/ipyvizzu" -> "unionai-oss/pandera"
"vizzuhq/ipyvizzu" -> "feature-engine/feature_engine"
"vizzuhq/ipyvizzu" -> "dirty-cat/dirty_cat"
"vizzuhq/ipyvizzu" -> "jina-ai/docarray" ["e"=1]
"vizzuhq/ipyvizzu" -> "lux-org/lux"
"vizzuhq/ipyvizzu" -> "iterative/mlem"
"vizzuhq/ipyvizzu" -> "jupyter-naas/awesome-notebooks" ["e"=1]
"vizzuhq/ipyvizzu" -> "oegedijk/explainerdashboard"
"tensorflow/text" -> "tensorflow/transform"
"tensorflow/text" -> "tensorflow/addons"
"tensorflow/text" -> "tensorflow/runtime" ["e"=1]
"tensorflow/text" -> "tensorflow/profiler"
"tensorflow/text" -> "tensorflow/tfx"
"tensorflow/text" -> "tensorflow/io"
"tensorflow/text" -> "tensorflow/model-optimization"
"tensorflow/text" -> "keras-team/keras-tuner"
"tensorflow/text" -> "tensorflow/recommenders" ["e"=1]
"tensorflow/text" -> "tensorflow/datasets"
"tensorflow/text" -> "tensorflow/estimator"
"tensorflow/text" -> "tensorflow/data-validation"
"tensorflow/text" -> "tensorflow/ranking" ["e"=1]
"tensorflow/text" -> "tensorflow/community"
"tensorflow/text" -> "tensorflow/hub"
"cniperbot/sniperbot" -> "Infinity-Tech-inc/nifi-json-processor-bundle"
"cniperbot/sniperbot" -> "coderitual/xna.js"
"cniperbot/sniperbot" -> "bloodbath-io/bloodbath-ruby"
"cniperbot/sniperbot" -> "xMythic/Rust-recoil-macro-AK-"
"cniperbot/sniperbot" -> "ForetagInc/alchemy"
"cniperbot/sniperbot" -> "helloh2o/lucky"
"cniperbot/sniperbot" -> "DecentraWorldDEWO/DeMix_Subgraph"
"cniperbot/sniperbot" -> "NethermindEth/warp"
"cniperbot/sniperbot" -> "vahid-sohrabloo/chconn"
"cniperbot/sniperbot" -> "oslabs-beta/Kompass"
"cniperbot/sniperbot" -> "NasirMalik/Eris"
"cniperbot/sniperbot" -> "Groestlcoin/electrum-grs"
"cniperbot/sniperbot" -> "dmamontov/hass-miwifi"
"cniperbot/sniperbot" -> "Princeton-SysML/GradAttack"
"cniperbot/sniperbot" -> "anonrig/url-js"
"guildai/guildai" -> "VertaAI/modeldb"
"guildai/guildai" -> "allegroai/clearml"
"guildai/guildai" -> "IDSIA/sacred"
"guildai/guildai" -> "vivekratnavel/omniboard"
"guildai/guildai" -> "facebookresearch/hiplot"
"guildai/guildai" -> "vpj/lab"
"guildai/guildai" -> "polyaxon/polyaxon"
"guildai/guildai" -> "allegroai/trains" ["e"=1]
"guildai/guildai" -> "aimhubio/aim"
"guildai/guildai" -> "whylabs/whylogs"
"guildai/guildai" -> "DAGsHub/fds"
"guildai/guildai" -> "iterative/cml"
"guildai/guildai" -> "zenml-io/zenml"
"guildai/guildai" -> "determined-ai/determined"
"guildai/guildai" -> "replicate/replicate"
"NasirMalik/Eris" -> "bloodbath-io/bloodbath-ruby"
"NasirMalik/Eris" -> "xMythic/Rust-recoil-macro-AK-"
"NasirMalik/Eris" -> "ForetagInc/alchemy"
"NasirMalik/Eris" -> "Infinity-Tech-inc/nifi-json-processor-bundle"
"NasirMalik/Eris" -> "helloh2o/lucky"
"NasirMalik/Eris" -> "coderitual/xna.js"
"NasirMalik/Eris" -> "Groestlcoin/electrum-grs"
"NasirMalik/Eris" -> "vahid-sohrabloo/chconn"
"NasirMalik/Eris" -> "oslabs-beta/Kompass"
"NasirMalik/Eris" -> "dmamontov/hass-miwifi"
"NasirMalik/Eris" -> "Princeton-SysML/GradAttack"
"NasirMalik/Eris" -> "anonrig/url-js"
"tensorflow/transform" -> "tensorflow/model-analysis"
"tensorflow/transform" -> "tensorflow/data-validation"
"tensorflow/transform" -> "tensorflow/tfx"
"tensorflow/transform" -> "tensorflow/benchmarks" ["e"=1]
"tensorflow/transform" -> "tensorflow/ecosystem" ["e"=1]
"tensorflow/transform" -> "tensorflow/fold" ["e"=1]
"tensorflow/transform" -> "tensorflow/estimator"
"tensorflow/transform" -> "tensorflow/io"
"tensorflow/transform" -> "tensorflow/metadata"
"tensorflow/transform" -> "tensorflow/profiler"
"tensorflow/transform" -> "tensorflow/text"
"tensorflow/transform" -> "tensorflow/serving"
"tensorflow/transform" -> "GoogleCloudPlatform/cloudml-samples" ["e"=1]
"tensorflow/transform" -> "GoogleCloudPlatform/tf-estimator-tutorials" ["e"=1]
"tensorflow/transform" -> "tensorflow/probability"
"SimonBlanke/Hyperactive" -> "SimonBlanke/Gradient-Free-Optimizers"
"SimonBlanke/Hyperactive" -> "microprediction/timemachines" ["e"=1]
"SimonBlanke/Hyperactive" -> "cod3licious/autofeat"
"SimonBlanke/Hyperactive" -> "EpistasisLab/scikit-rebate"
"SimonBlanke/Hyperactive" -> "Ekeany/Boruta-Shap"
"SimonBlanke/Hyperactive" -> "AutoViML/featurewiz"
"SimonBlanke/Hyperactive" -> "carlomazzaferro/scikit-hts" ["e"=1]
"SimonBlanke/Hyperactive" -> "cerlymarco/linear-tree"
"SimonBlanke/Hyperactive" -> "antoinecarme/pyaf" ["e"=1]
"nlarusstone/corels" -> "Hongyuy/sbrlmod"
"nlarusstone/corels" -> "fingoldin/pycorels"
"nlarusstone/corels" -> "ustunb/risk-slim"
"scikit-learn-contrib/boruta_py" -> "Ekeany/Boruta-Shap"
"scikit-learn-contrib/boruta_py" -> "jundongl/scikit-feature"
"scikit-learn-contrib/boruta_py" -> "EpistasisLab/scikit-rebate"
"scikit-learn-contrib/boruta_py" -> "hyperopt/hyperopt-sklearn"
"scikit-learn-contrib/boruta_py" -> "danielhomola/mifs"
"scikit-learn-contrib/boruta_py" -> "scikit-learn-contrib/stability-selection"
"scikit-learn-contrib/boruta_py" -> "stanfordmlgroup/ngboost"
"scikit-learn-contrib/boruta_py" -> "aerdem4/lofo-importance"
"scikit-learn-contrib/boruta_py" -> "scikit-learn-contrib/categorical-encoding"
"scikit-learn-contrib/boruta_py" -> "TeamHG-Memex/eli5"
"scikit-learn-contrib/boruta_py" -> "scikit-learn-contrib/category_encoders"
"scikit-learn-contrib/boruta_py" -> "scikit-learn-contrib/skope-rules"
"scikit-learn-contrib/boruta_py" -> "duxuhao/Feature-Selection"
"scikit-learn-contrib/boruta_py" -> "scikit-learn-contrib/DESlib"
"scikit-learn-contrib/boruta_py" -> "solegalli/feature_engine"
"scikit-learn-contrib/hdbscan" -> "lmcinnes/umap"
"scikit-learn-contrib/hdbscan" -> "scikit-learn-contrib/imbalanced-learn"
"scikit-learn-contrib/hdbscan" -> "DistrictDataLabs/yellowbrick"
"scikit-learn-contrib/hdbscan" -> "scikit-learn-contrib/categorical-encoding"
"scikit-learn-contrib/hdbscan" -> "ddangelov/Top2Vec" ["e"=1]
"scikit-learn-contrib/hdbscan" -> "annoviko/pyclustering"
"scikit-learn-contrib/hdbscan" -> "lmcinnes/pynndescent" ["e"=1]
"scikit-learn-contrib/hdbscan" -> "reiinakano/scikit-plot"
"scikit-learn-contrib/hdbscan" -> "hyperopt/hyperopt-sklearn"
"scikit-learn-contrib/hdbscan" -> "rasbt/mlxtend"
"scikit-learn-contrib/hdbscan" -> "scikit-learn-contrib/boruta_py"
"scikit-learn-contrib/hdbscan" -> "scikit-learn-contrib/sklearn-pandas"
"scikit-learn-contrib/hdbscan" -> "DmitryUlyanov/Multicore-TSNE" ["e"=1]
"scikit-learn-contrib/hdbscan" -> "rapidsai/cuml"
"scikit-learn-contrib/hdbscan" -> "nicodv/kmodes"
"AutoViML/AutoViz" -> "AutoViML/Auto_ViML"
"AutoViML/AutoViz" -> "fbdesignpro/sweetviz"
"AutoViML/AutoViz" -> "sfu-db/dataprep"
"AutoViML/AutoViz" -> "lux-org/lux"
"AutoViML/AutoViz" -> "AutoViML/featurewiz"
"AutoViML/AutoViz" -> "shankarpandala/lazypredict"
"AutoViML/AutoViz" -> "AutoViML/Auto_TS" ["e"=1]
"AutoViML/AutoViz" -> "pycaret/pycaret"
"AutoViML/AutoViz" -> "microsoft/FLAML"
"AutoViML/AutoViz" -> "man-group/dtale"
"AutoViML/AutoViz" -> "vaexio/vaex"
"AutoViML/AutoViz" -> "oegedijk/explainerdashboard"
"AutoViML/AutoViz" -> "scikit-learn-contrib/category_encoders"
"AutoViML/AutoViz" -> "alteryx/featuretools"
"AutoViML/AutoViz" -> "h2oai/datatable"
"aangelopoulos/conformal-prediction" -> "aangelopoulos/conformal_classification"
"aangelopoulos/conformal-prediction" -> "valeman/awesome-conformal-prediction"
"aangelopoulos/conformal-prediction" -> "dobriban/Topics-In-Modern-Statistical-Learning"
"aangelopoulos/conformal-prediction" -> "henrikbostrom/crepes"
"aangelopoulos/conformal-prediction" -> "yromano/cqr"
"aangelopoulos/conformal-prediction" -> "awslabs/fortuna"
"aangelopoulos/conformal-prediction" -> "scikit-learn-contrib/MAPIE"
"aangelopoulos/conformal-prediction" -> "aangelopoulos/ltt"
"aangelopoulos/conformal-prediction" -> "donlnz/nonconformist"
"aangelopoulos/conformal-prediction" -> "aangelopoulos/conformal-risk"
"aangelopoulos/conformal-prediction" -> "TorchUQ/torchuq"
"aangelopoulos/conformal-prediction" -> "FilippoMB/Ensemble-Conformalized-Quantile-Regression"
"aangelopoulos/conformal-prediction" -> "aangelopoulos/im2im-uq"
"aangelopoulos/conformal-prediction" -> "kamilest/conformal-rnn"
"aangelopoulos/conformal-prediction" -> "ryantibs/conformal"
"awslabs/fortuna" -> "awslabs/Renate"
"awslabs/fortuna" -> "scikit-learn-contrib/MAPIE"
"awslabs/fortuna" -> "awslabs/syne-tune"
"awslabs/fortuna" -> "valeman/awesome-conformal-prediction"
"awslabs/fortuna" -> "aangelopoulos/conformal-prediction"
"awslabs/fortuna" -> "henrikbostrom/crepes"
"awslabs/fortuna" -> "uncertainty-toolbox/uncertainty-toolbox" ["e"=1]
"awslabs/fortuna" -> "TorchUQ/torchuq"
"awslabs/fortuna" -> "google/uncertainty-baselines" ["e"=1]
"awslabs/fortuna" -> "facebookresearch/balance"
"awslabs/fortuna" -> "yromano/cqr"
"awslabs/fortuna" -> "StatMixedML/XGBoostLSS"
"awslabs/fortuna" -> "Nixtla/hierarchicalforecast" ["e"=1]
"awslabs/fortuna" -> "Nixtla/neuralforecast" ["e"=1]
"awslabs/fortuna" -> "google/vizier" ["e"=1]
"rasbt/mlxtend" -> "DistrictDataLabs/yellowbrick"
"rasbt/mlxtend" -> "scikit-learn-contrib/imbalanced-learn"
"rasbt/mlxtend" -> "automl/auto-sklearn"
"rasbt/mlxtend" -> "TeamHG-Memex/eli5"
"rasbt/mlxtend" -> "hyperopt/hyperopt"
"rasbt/mlxtend" -> "reiinakano/scikit-plot"
"rasbt/mlxtend" -> "blue-yonder/tsfresh"
"rasbt/mlxtend" -> "scikit-optimize/scikit-optimize"
"rasbt/mlxtend" -> "Featuretools/featuretools"
"rasbt/mlxtend" -> "slundberg/shap"
"rasbt/mlxtend" -> "catboost/catboost"
"rasbt/mlxtend" -> "marcotcr/lime"
"rasbt/mlxtend" -> "EpistasisLab/tpot"
"rasbt/mlxtend" -> "pandas-profiling/pandas-profiling"
"rasbt/mlxtend" -> "rhiever/tpot"
"valeman/awesome-conformal-prediction" -> "scikit-learn-contrib/MAPIE"
"valeman/awesome-conformal-prediction" -> "aangelopoulos/conformal-prediction"
"valeman/awesome-conformal-prediction" -> "Nixtla/statsforecast" ["e"=1]
"valeman/awesome-conformal-prediction" -> "awslabs/fortuna"
"valeman/awesome-conformal-prediction" -> "SelfExplainML/PiML-Toolbox"
"valeman/awesome-conformal-prediction" -> "Nixtla/neuralforecast" ["e"=1]
"valeman/awesome-conformal-prediction" -> "donlnz/nonconformist"
"valeman/awesome-conformal-prediction" -> "yromano/cqr"
"valeman/awesome-conformal-prediction" -> "NannyML/nannyml"
"valeman/awesome-conformal-prediction" -> "uncertainty-toolbox/uncertainty-toolbox" ["e"=1]
"valeman/awesome-conformal-prediction" -> "unit8co/darts" ["e"=1]
"valeman/awesome-conformal-prediction" -> "henrikbostrom/crepes"
"valeman/awesome-conformal-prediction" -> "Nixtla/hierarchicalforecast" ["e"=1]
"valeman/awesome-conformal-prediction" -> "Nixtla/mlforecast" ["e"=1]
"valeman/awesome-conformal-prediction" -> "ryantibs/conformal"
"h2oai/datatable" -> "Rdatatable/data.table" ["e"=1]
"h2oai/datatable" -> "vaexio/vaex"
"h2oai/datatable" -> "fstpackage/fst" ["e"=1]
"h2oai/datatable" -> "jmcarpenter2/swifter"
"h2oai/datatable" -> "modin-project/modin"
"h2oai/datatable" -> "has2k1/plotnine" ["e"=1]
"h2oai/datatable" -> "sfu-db/dataprep"
"h2oai/datatable" -> "rapidsai/cudf"
"h2oai/datatable" -> "rstudio/reticulate" ["e"=1]
"h2oai/datatable" -> "h2oai/db-benchmark"
"h2oai/datatable" -> "machow/siuba" ["e"=1]
"h2oai/datatable" -> "pandera-dev/pandera"
"h2oai/datatable" -> "databricks/koalas"
"h2oai/datatable" -> "wesm/feather" ["e"=1]
"h2oai/datatable" -> "TeamHG-Memex/eli5"
"BCG-Gamma/facet" -> "BCG-Gamma/sklearndf"
"BCG-Gamma/facet" -> "BCG-Gamma/pytools"
"BCG-Gamma/facet" -> "Trusted-AI/AIX360"
"BCG-Gamma/facet" -> "Ekeany/Boruta-Shap"
"BCG-Gamma/facet" -> "dirty-cat/dirty_cat"
"BCG-Gamma/facet" -> "SelfExplainML/PiML-Toolbox"
"BCG-Gamma/facet" -> "cerlymarco/shap-hypetune"
"BCG-Gamma/facet" -> "interpretml/gam-changer"
"BCG-Gamma/facet" -> "koaning/scikit-lego"
"BCG-Gamma/facet" -> "ModelOriented/DALEX"
"BCG-Gamma/facet" -> "scikit-learn-contrib/MAPIE"
"BCG-Gamma/facet" -> "uber/orbit" ["e"=1]
"BCG-Gamma/facet" -> "Nixtla/hierarchicalforecast" ["e"=1]
"BCG-Gamma/facet" -> "pandera-dev/pandera"
"BCG-Gamma/facet" -> "explainX/explainx"
"automl/SMAC3" -> "automl/HpBandSter"
"automl/SMAC3" -> "automl/RoBO"
"automl/SMAC3" -> "automl/ConfigSpace"
"automl/SMAC3" -> "HIPS/Spearmint"
"automl/SMAC3" -> "automl/Auto-PyTorch" ["e"=1]
"automl/SMAC3" -> "scikit-optimize/scikit-optimize"
"automl/SMAC3" -> "JasperSnoek/spearmint"
"automl/SMAC3" -> "SheffieldML/GPyOpt"
"automl/SMAC3" -> "zygmuntz/hyperband"
"automl/SMAC3" -> "automl/auto-sklearn"
"automl/SMAC3" -> "automl/HPOlib2"
"automl/SMAC3" -> "hyperopt/hyperopt-sklearn"
"automl/SMAC3" -> "automl/HPOBench"
"automl/SMAC3" -> "Yelp/MOE"
"automl/SMAC3" -> "hyperopt/hyperopt"
"soravux/scoop" -> "DEAP/deap"
"soravux/scoop" -> "DEAP/notebooks" ["e"=1]
"soravux/scoop" -> "SmokinCaterpillar/pypet"
"soravux/scoop" -> "uqfoundation/pathos"
"soravux/scoop" -> "pgiri/dispy"
"soravux/scoop" -> "msmbuilder/osprey"
"soravux/scoop" -> "aarongarrett/inspyred" ["e"=1]
"ebhy/budgetml" -> "maiot-io/zenml"
"ebhy/budgetml" -> "globalaihub/python-education-v2" ["e"=1]
"ebhy/budgetml" -> "ml-tooling/opyrator"
"ebhy/budgetml" -> "therealsreehari/Learn-Datascience-For-Free" ["e"=1]
"ebhy/budgetml" -> "jalammar/ecco" ["e"=1]
"ebhy/budgetml" -> "codeedu/imersao-fullstack-fullcycle" ["e"=1]
"ebhy/budgetml" -> "NVlabs/stylegan2-ada-pytorch" ["e"=1]
"ebhy/budgetml" -> "allanf181/FuiVazado" ["e"=1]
"ebhy/budgetml" -> "Serial-Studio/Serial-Studio" ["e"=1]
"ebhy/budgetml" -> "cortexlabs/cortex"
"ebhy/budgetml" -> "microsoft/hummingbird"
"ebhy/budgetml" -> "ploomber/ploomber"
"ebhy/budgetml" -> "iterative/cml"
"ebhy/budgetml" -> "bentoml/BentoML"
"ebhy/budgetml" -> "replicate/replicate"
"Microsoft/vscode-arduino" -> "Microsoft/pai"
"Microsoft/vscode-arduino" -> "GenericMappingTools/gmt" ["e"=1]
"kserve/website" -> "kserve/modelmesh-serving"
"IBM/FfDL" -> "IBM/AIF360"
"IBM/FfDL" -> "mitdbg/modeldb"
"IBM/FfDL" -> "machine-learning-exchange/mlx"
"IBM/FfDL" -> "polyaxon/polyaxon"
"IBM/FfDL" -> "SeldonIO/seldon-core"
"IBM/FfDL" -> "IBM/microservices-traffic-management-using-istio" ["e"=1]
"IBM/FfDL" -> "databricks/mlflow" ["e"=1]
"IBM/FfDL" -> "kubeflow/kfp-tekton"
"IBM/FfDL" -> "kubeflow/arena" ["e"=1]
"IBM/FfDL" -> "IBM/adversarial-robustness-toolbox" ["e"=1]
"IBM/FfDL" -> "kubeflow/example-seldon"
"IBM/FfDL" -> "IBM/Fashion-MNIST-using-FfDL"
"IBM/FfDL" -> "PipelineAI/pipeline"
"IBM/FfDL" -> "IBM/KubeflowDojo"
"aporia-ai/mlnotify" -> "aporia-ai/dmatrix2np"
"aporia-ai/mlnotify" -> "aporia-ai/mlops.toys"
"aporia-ai/mlnotify" -> "igaloly/vue-preloaders"
"aporia-ai/mlnotify" -> "aporia-ai/kubesurvival"
"zifeo/EPFL" -> "HexHive/thesis_template"
"zifeo/EPFL" -> "LSIR/DIS"
"logicalclocks/maggy" -> "logicalclocks/hopsworks-iot"
"koaning/bulk" -> "koaning/embetter"
"koaning/bulk" -> "TutteInstitute/thisnotthat"
"koaning/bulk" -> "koaning/doubtlab"
"koaning/bulk" -> "koaning/human-learn"
"koaning/bulk" -> "Pandora-Intelligence/concise-concepts" ["e"=1]
"koaning/bulk" -> "koaning/whatlies"
"koaning/bulk" -> "HLasse/TextDescriptives" ["e"=1]
"koaning/bulk" -> "Lucaterre/spacyfishing" ["e"=1]
"koaning/bulk" -> "MaartenGr/PolyFuzz" ["e"=1]
"koaning/bulk" -> "ljvmiranda921/prodigy-pdf-custom-recipe"
"koaning/bulk" -> "koaning/cluestar"
"koaning/bulk" -> "recognai/rubrix" ["e"=1]
"MarvinBertin/HiddenMarkovModel_TensorFlow" -> "dwiel/tensorflow_hmm"
"nok/sklearn-porter" -> "BayesWitnesses/m2cgen"
"nok/sklearn-porter" -> "emlearn/emlearn"
"nok/sklearn-porter" -> "jpmml/sklearn2pmml" ["e"=1]
"nok/sklearn-porter" -> "jpmml/jpmml-sklearn" ["e"=1]
"nok/sklearn-porter" -> "konstantint/SKompiler"
"nok/sklearn-porter" -> "ajtulloch/sklearn-compiledtrees"
"nok/sklearn-porter" -> "scikit-learn-contrib/skope-rules"
"nok/sklearn-porter" -> "onnx/sklearn-onnx" ["e"=1]
"nok/sklearn-porter" -> "jpmml/jpmml-evaluator" ["e"=1]
"nok/sklearn-porter" -> "eloquentarduino/micromlgen"
"nok/sklearn-porter" -> "DistrictDataLabs/yellowbrick"
"nok/sklearn-porter" -> "pplonski/keras2cpp" ["e"=1]
"nok/sklearn-porter" -> "rhiever/tpot"
"nok/sklearn-porter" -> "databricks/spark-sklearn" ["e"=1]
"nok/sklearn-porter" -> "scikit-optimize/scikit-optimize"
"jermwatt/machine_learning_refined" -> "mattjj/autodidact" ["e"=1]
"jermwatt/machine_learning_refined" -> "probml/pyprobml"
"jermwatt/machine_learning_refined" -> "the-deep-learners/deep-learning-illustrated" ["e"=1]
"jermwatt/machine_learning_refined" -> "ermongroup/cs228-notes"
"jermwatt/machine_learning_refined" -> "hundredblocks/ml-powered-applications" ["e"=1]
"jermwatt/machine_learning_refined" -> "JWarmenhoven/ISLR-python" ["e"=1]
"jermwatt/machine_learning_refined" -> "krasserm/bayesian-machine-learning"
"jermwatt/machine_learning_refined" -> "probml/pml2-book"
"jermwatt/machine_learning_refined" -> "pymc-devs/resources" ["e"=1]
"jermwatt/machine_learning_refined" -> "probml/pml-book"
"jermwatt/machine_learning_refined" -> "Atcold/pytorch-Deep-Learning" ["e"=1]
"jermwatt/machine_learning_refined" -> "aditya1702/Machine-Learning-and-Data-Science"
"jermwatt/machine_learning_refined" -> "gerdm/prml" ["e"=1]
"jermwatt/machine_learning_refined" -> "cornellius-gp/gpytorch"
"Trusted-AI/AIX360" -> "Trusted-AI/AIF360"
"Trusted-AI/AIX360" -> "wangyongjie-ntu/Awesome-explainable-AI"
"Trusted-AI/AIX360" -> "EthicalML/xai"
"Trusted-AI/AIX360" -> "interpretml/DiCE"
"Trusted-AI/AIX360" -> "ModelOriented/DALEX"
"Trusted-AI/AIX360" -> "SeldonIO/alibi"
"Trusted-AI/AIX360" -> "interpretml/interpret"
"Trusted-AI/AIX360" -> "kundajelab/deeplift" ["e"=1]
"Trusted-AI/AIX360" -> "oracle/Skater"
"Trusted-AI/AIX360" -> "pbiecek/xai_resources"
"Trusted-AI/AIX360" -> "interpretml/interpret-community"
"Trusted-AI/AIX360" -> "Trusted-AI/adversarial-robustness-toolbox" ["e"=1]
"Trusted-AI/AIX360" -> "salesforce/OmniXAI"
"Trusted-AI/AIX360" -> "marcotcr/anchor"
"Trusted-AI/AIX360" -> "tensorflow/tcav" ["e"=1]
"keplr-io/quiver" -> "keplr-io/hera"
"keplr-io/quiver" -> "raghakot/keras-vis"
"keplr-io/quiver" -> "jakebian/quiver" ["e"=1]
"keplr-io/quiver" -> "stratospark/keras-multiprocess-image-data-generator" ["e"=1]
"keplr-io/quiver" -> "yhenon/keras-frcnn" ["e"=1]
"keplr-io/quiver" -> "bstriner/keras-adversarial" ["e"=1]
"keplr-io/quiver" -> "InFoCusp/tf_cnnvis" ["e"=1]
"keplr-io/quiver" -> "titu1994/Keras-Classification-Models" ["e"=1]
"keplr-io/quiver" -> "maxpumperla/hyperas"
"keplr-io/quiver" -> "jacobgil/keras-grad-cam" ["e"=1]
"keplr-io/quiver" -> "bckenstler/CLR" ["e"=1]
"keplr-io/quiver" -> "yosinski/deep-visualization-toolbox" ["e"=1]
"keplr-io/quiver" -> "merantix/picasso" ["e"=1]
"keplr-io/quiver" -> "philipperemy/keract"
"keplr-io/quiver" -> "fchollet/hualos" ["e"=1]
"uclanlp/awesome-fairness-papers" -> "McGill-NLP/bias-bench"
"uclanlp/awesome-fairness-papers" -> "datamllab/awesome-fairness-in-ai"
"uclanlp/awesome-fairness-papers" -> "zhijing-jin/NLP4SocialGood_Papers" ["e"=1]
"uclanlp/awesome-fairness-papers" -> "pliang279/sent_debias"
"uclanlp/awesome-fairness-papers" -> "moinnadeem/StereoSet" ["e"=1]
"uclanlp/awesome-fairness-papers" -> "yanaiela/demog-text-removal"
"uclanlp/awesome-fairness-papers" -> "tolga-b/debiaswe"
"uclanlp/awesome-fairness-papers" -> "causaltext/causal-text-papers" ["e"=1]
"uclanlp/awesome-fairness-papers" -> "zhijing-jin/nlp-phd-global-equality" ["e"=1]
"uclanlp/awesome-fairness-papers" -> "ewsheng/nlg-bias"
"uclanlp/awesome-fairness-papers" -> "W4ngatang/sent-bias"
"uclanlp/awesome-fairness-papers" -> "timoschick/self-debiasing"
"uclanlp/awesome-fairness-papers" -> "acl-org/aclpubcheck" ["e"=1]
"uclanlp/awesome-fairness-papers" -> "yongkaiwu/FairAI"
"AlexIoannides/kubernetes-mlops" -> "AlexIoannides/ml-workflow-automation"
"ewsheng/nlg-bias" -> "amazon-research/bold"
"pytorch/serve" -> "triton-inference-server/server" ["e"=1]
"pytorch/serve" -> "bentoml/BentoML"
"pytorch/serve" -> "tensorflow/serving"
"pytorch/serve" -> "NVIDIA-AI-IOT/torch2trt" ["e"=1]
"pytorch/serve" -> "ShannonAI/service-streamer" ["e"=1]
"pytorch/serve" -> "SeldonIO/seldon-core"
"pytorch/serve" -> "huggingface/accelerate" ["e"=1]
"pytorch/serve" -> "microsoft/onnxruntime" ["e"=1]
"pytorch/serve" -> "pytorch/elastic"
"pytorch/serve" -> "NVIDIA/TensorRT" ["e"=1]
"pytorch/serve" -> "facebookresearch/fairscale" ["e"=1]
"pytorch/serve" -> "mlflow/mlflow"
"pytorch/serve" -> "kserve/kserve"
"pytorch/serve" -> "cortexlabs/cortex"
"pytorch/serve" -> "onnx/onnx-tensorrt" ["e"=1]
"iskandr/fancyimpute" -> "eltonlaw/impyute"
"iskandr/fancyimpute" -> "jsyoon0823/GAIN" ["e"=1]
"iskandr/fancyimpute" -> "caow13/BRITS" ["e"=1]
"iskandr/fancyimpute" -> "ResidentMario/missingno"
"iskandr/fancyimpute" -> "epsilon-machine/missingpy"
"iskandr/fancyimpute" -> "TeamHG-Memex/eli5"
"iskandr/fancyimpute" -> "scikit-learn-contrib/categorical-encoding"
"iskandr/fancyimpute" -> "tonyduan/matrix-completion"
"iskandr/fancyimpute" -> "MaxHalford/prince"
"iskandr/fancyimpute" -> "solegalli/feature_engine"
"iskandr/fancyimpute" -> "scikit-learn-contrib/boruta_py"
"iskandr/fancyimpute" -> "xinychen/transdim" ["e"=1]
"iskandr/fancyimpute" -> "awslabs/datawig"
"iskandr/fancyimpute" -> "SauceCat/PDPbox"
"iskandr/fancyimpute" -> "AnotherSamWilson/miceforest"
"Kaggle/docker-rstats" -> "Kaggle/docker-rcran"
"AustinRochford/PyCEbox" -> "cosmicBboy/themis-ml"
"AustinRochford/PyCEbox" -> "SauceCat/PDPbox"
"SauceCat/PDPbox" -> "AustinRochford/PyCEbox"
"SauceCat/PDPbox" -> "TeamHG-Memex/eli5"
"SauceCat/PDPbox" -> "parrt/random-forest-importances"
"SauceCat/PDPbox" -> "andosa/treeinterpreter"
"SauceCat/PDPbox" -> "cosmicBboy/themis-ml"
"SauceCat/PDPbox" -> "blent-ai/ALEPython"
"SauceCat/PDPbox" -> "scikit-learn-contrib/boruta_py"
"SauceCat/PDPbox" -> "h2oai/mli-resources"
"SauceCat/PDPbox" -> "datascienceinc/Skater"
"SauceCat/PDPbox" -> "SeldonIO/alibi"
"SauceCat/PDPbox" -> "oracle/Skater"
"SauceCat/PDPbox" -> "parrt/dtreeviz"
"SauceCat/PDPbox" -> "csinva/imodels"
"SauceCat/PDPbox" -> "lopusz/awesome-interpretable-machine-learning"
"SauceCat/PDPbox" -> "jphall663/interpretable_machine_learning_with_python"
"cosmicBboy/themis-ml" -> "AustinRochford/PyCEbox"
"google/ml-metadata" -> "tensorflow/tfx"
"google/ml-metadata" -> "tensorflow/data-validation"
"google/ml-metadata" -> "kubeflow/metadata"
"google/ml-metadata" -> "tensorflow/model-card-toolkit"
"google/ml-metadata" -> "kubeflow/pipelines"
"google/ml-metadata" -> "tensorflow/tfx-addons"
"google/ml-metadata" -> "VertaAI/modeldb"
"google/ml-metadata" -> "tensorflow/metadata"
"google/ml-metadata" -> "kubeflow/katib"
"google/ml-metadata" -> "tensorflow/transform"
"google/ml-metadata" -> "tensorflow/model-analysis"
"google/ml-metadata" -> "kubeflow-kale/kale"
"google/ml-metadata" -> "googleapis/python-aiplatform" ["e"=1]
"google/ml-metadata" -> "logicalclocks/hopsworks"
"google/ml-metadata" -> "kubeflow/manifests"
"pytorch/botorch" -> "facebook/Ax"
"pytorch/botorch" -> "cornellius-gp/gpytorch"
"pytorch/botorch" -> "pyro-ppl/pyro"
"pytorch/botorch" -> "fmfn/BayesianOptimization"
"pytorch/botorch" -> "facebookresearch/nevergrad"
"pytorch/botorch" -> "SheffieldML/GPy"
"pytorch/botorch" -> "SheffieldML/GPyOpt"
"pytorch/botorch" -> "krasserm/bayesian-machine-learning"
"pytorch/botorch" -> "pyro-ppl/numpyro" ["e"=1]
"pytorch/botorch" -> "skorch-dev/skorch" ["e"=1]
"pytorch/botorch" -> "scikit-optimize/scikit-optimize"
"pytorch/botorch" -> "facebookresearch/higher" ["e"=1]
"pytorch/botorch" -> "pytorch/captum" ["e"=1]
"pytorch/botorch" -> "pytorch/ignite" ["e"=1]
"pytorch/botorch" -> "rtqichen/torchdiffeq" ["e"=1]
"JasperSnoek/spearmint" -> "HIPS/Spearmint"
"JasperSnoek/spearmint" -> "jaberg/hyperopt"
"JasperSnoek/spearmint" -> "Yelp/MOE"
"JasperSnoek/spearmint" -> "hyperopt/hyperopt"
"JasperSnoek/spearmint" -> "automl/SMAC3"
"JasperSnoek/spearmint" -> "lisa-lab/pylearn2" ["e"=1]
"JasperSnoek/spearmint" -> "nitishsrivastava/deepnet" ["e"=1]
"JasperSnoek/spearmint" -> "scikit-optimize/scikit-optimize"
"JasperSnoek/spearmint" -> "hyperopt/hyperopt-sklearn"
"JasperSnoek/spearmint" -> "automl/RoBO"
"JasperSnoek/spearmint" -> "dnouri/nolearn" ["e"=1]
"JasperSnoek/spearmint" -> "SheffieldML/GPyOpt"
"JasperSnoek/spearmint" -> "joschu/cgt" ["e"=1]
"JasperSnoek/spearmint" -> "JohnLangford/vowpal_wabbit" ["e"=1]
"JasperSnoek/spearmint" -> "blei-lab/edward"
"IBM/skillsnetwork" -> "IBM/MAX-Object-Detector"
"IBM/skillsnetwork" -> "romeokienzler/TensorFlow"
"IBM/skillsnetwork" -> "salimt/Courses-" ["e"=1]
"IBM/skillsnetwork" -> "wchill/HMP_Dataset"
"IBM/skillsnetwork" -> "jupyter/jupyter" ["e"=1]
"IBM/skillsnetwork" -> "lmoroney/dlaicourse"
"danielhanchen/hyperlearn" -> "dnouri/skorch"
"danielhanchen/hyperlearn" -> "pavlin-policar/fastTSNE" ["e"=1]
"danielhanchen/hyperlearn" -> "facebookresearch/nevergrad"
"danielhanchen/hyperlearn" -> "rapidsai/cuml"
"danielhanchen/hyperlearn" -> "albu/albumentations" ["e"=1]
"danielhanchen/hyperlearn" -> "MagNet-DL/magnet"
"danielhanchen/hyperlearn" -> "williamFalcon/pytorch-lightning" ["e"=1]
"danielhanchen/hyperlearn" -> "uber/pyro"
"danielhanchen/hyperlearn" -> "kmkolasinski/deep-learning-notes" ["e"=1]
"danielhanchen/hyperlearn" -> "cornellius-gp/gpytorch"
"danielhanchen/hyperlearn" -> "IDSIA/sacred"
"danielhanchen/hyperlearn" -> "alegonz/baikal"
"danielhanchen/hyperlearn" -> "tensorflow/adanet"
"danielhanchen/hyperlearn" -> "jhfjhfj1/autokeras"
"danielhanchen/hyperlearn" -> "lancifollia/tinygbt"
"scikit-multilearn/scikit-multilearn" -> "Waikato/meka"
"scikit-multilearn/scikit-multilearn" -> "scikit-optimize/scikit-optimize"
"scikit-multilearn/scikit-multilearn" -> "trent-b/iterative-stratification" ["e"=1]
"scikit-multilearn/scikit-multilearn" -> "RandolphVI/Multi-Label-Text-Classification" ["e"=1]
"scikit-multilearn/scikit-multilearn" -> "hyperopt/hyperopt-sklearn"
"scikit-multilearn/scikit-multilearn" -> "scikit-learn-contrib/sklearn-pandas"
"scikit-multilearn/scikit-multilearn" -> "TeamHG-Memex/eli5"
"scikit-multilearn/scikit-multilearn" -> "lancopku/SGM" ["e"=1]
"scikit-multilearn/scikit-multilearn" -> "dhruvramani/C2AE-Multilabel-Classification" ["e"=1]
"scikit-multilearn/scikit-multilearn" -> "inspirehep/magpie" ["e"=1]
"scikit-multilearn/scikit-multilearn" -> "scikit-multiflow/scikit-multiflow"
"scikit-multilearn/scikit-multilearn" -> "tsoumakas/mulan"
"scikit-multilearn/scikit-multilearn" -> "Refefer/fastxml" ["e"=1]
"scikit-multilearn/scikit-multilearn" -> "jundongl/scikit-feature"
"scikit-multilearn/scikit-multilearn" -> "reiinakano/scikit-plot"
"tensorflow/addons" -> "tensorflow/community"
"tensorflow/addons" -> "tensorflow/tfx"
"tensorflow/addons" -> "tensorflow/model-optimization"
"tensorflow/addons" -> "tensorflow/io"
"tensorflow/addons" -> "keras-team/keras-tuner"
"tensorflow/addons" -> "kpe/bert-for-tf2" ["e"=1]
"tensorflow/addons" -> "tensorflow/datasets"
"tensorflow/addons" -> "tensorflow/mesh" ["e"=1]
"tensorflow/addons" -> "tensorflow/text"
"tensorflow/addons" -> "keras-team/keras-contrib" ["e"=1]
"tensorflow/addons" -> "tensorflow/probability"
"tensorflow/addons" -> "tensorflow/hub"
"tensorflow/addons" -> "tensorflow/runtime" ["e"=1]
"tensorflow/addons" -> "tensorflow/transform"
"tensorflow/addons" -> "tensorflow/profiler"
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "duxuhao/Feature-Selection"
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "anujdutt9/Feature-Selection-for-Machine-Learning"
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "jundongl/scikit-feature"
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "alicezheng/feature-engineering-book"
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "kaushalshetty/FeatureSelectionGA"
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "aikho/awesome-feature-engineering"
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "scikit-learn-contrib/boruta_py"
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "WillKoehrsen/feature-selector"
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "ashishpatel26/Amazing-Feature-Engineering" ["e"=1]
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "feature-engine/feature_engine"
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "topepo/FES" ["e"=1]
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "alteryx/featuretools"
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "solegalli/feature-selection-for-machine-learning" ["e"=1]
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "solegalli/feature_engine"
"Yimeng-Zhang/feature-engineering-and-feature-selection" -> "EpistasisLab/scikit-rebate"
"online-ml/river" -> "scikit-multiflow/scikit-multiflow"
"online-ml/river" -> "SeldonIO/alibi-detect"
"online-ml/river" -> "evidentlyai/evidently"
"online-ml/river" -> "MAIF/shapash"
"online-ml/river" -> "microsoft/FLAML"
"online-ml/river" -> "salesforce/Merlion" ["e"=1]
"online-ml/river" -> "deepchecks/deepchecks"
"online-ml/river" -> "unit8co/darts" ["e"=1]
"online-ml/river" -> "facebookresearch/Kats" ["e"=1]
"online-ml/river" -> "Nixtla/statsforecast" ["e"=1]
"online-ml/river" -> "uber/orbit" ["e"=1]
"online-ml/river" -> "oegedijk/explainerdashboard"
"online-ml/river" -> "bentoml/BentoML"
"online-ml/river" -> "alan-turing-institute/sktime" ["e"=1]
"online-ml/river" -> "pycaret/pycaret"
"duxuhao/Feature-Selection" -> "plantsgo/ijcai-2018" ["e"=1]
"duxuhao/Feature-Selection" -> "YouChouNoBB/ijcai-18-top2-single-mole-solution" ["e"=1]
"duxuhao/Feature-Selection" -> "jundongl/scikit-feature"
"duxuhao/Feature-Selection" -> "Yimeng-Zhang/feature-engineering-and-feature-selection"
"duxuhao/Feature-Selection" -> "luoda888/2018-IJCAI-top3" ["e"=1]
"duxuhao/Feature-Selection" -> "kaushalshetty/FeatureSelectionGA"
"duxuhao/Feature-Selection" -> "nzc/dnn_ctr" ["e"=1]
"duxuhao/Feature-Selection" -> "duxuhao/JData-2018"
"duxuhao/Feature-Selection" -> "luoda888/tianchi-diabetes-top12" ["e"=1]
"duxuhao/Feature-Selection" -> "scikit-learn-contrib/boruta_py"
"duxuhao/Feature-Selection" -> "duxuhao/rong360-season2"
"duxuhao/Feature-Selection" -> "dayeren/Kaggle_Competition_Treasure" ["e"=1]
"duxuhao/Feature-Selection" -> "lytforgood/MachineLearningTrick" ["e"=1]
"duxuhao/Feature-Selection" -> "anujdutt9/Feature-Selection-for-Machine-Learning"
"duxuhao/Feature-Selection" -> "nzc/tencent-contest" ["e"=1]
"oracle/Skater" -> "marcotcr/anchor"
"oracle/Skater" -> "ModelOriented/DALEX"
"oracle/Skater" -> "Trusted-AI/AIX360"
"oracle/Skater" -> "EthicalML/xai"
"oracle/Skater" -> "christophM/rulefit"
"oracle/Skater" -> "TeamHG-Memex/eli5"
"oracle/Skater" -> "SauceCat/PDPbox"
"oracle/Skater" -> "blent-ai/ALEPython"
"oracle/Skater" -> "jphall663/interpretable_machine_learning_with_python"
"oracle/Skater" -> "MI2DataLab/pyBreakDown"
"oracle/Skater" -> "SeldonIO/alibi"
"oracle/Skater" -> "h2oai/mli-resources"
"oracle/Skater" -> "andosa/treeinterpreter"
"tobegit3hub/advisor" -> "kubeflow/katib"
"tobegit3hub/advisor" -> "melodyguan/enas" ["e"=1]
"tobegit3hub/advisor" -> "fmfn/BayesianOptimization"
"tobegit3hub/advisor" -> "hyperopt/hyperopt"
"tobegit3hub/advisor" -> "hibayesian/awesome-automl-papers" ["e"=1]
"tobegit3hub/advisor" -> "automl/SMAC3"
"tobegit3hub/advisor" -> "Microsoft/nni"
"tobegit3hub/advisor" -> "carpedm20/ENAS-pytorch" ["e"=1]
"tobegit3hub/advisor" -> "automl/HpBandSter"
"tobegit3hub/advisor" -> "tensorflow/adanet"
"tobegit3hub/advisor" -> "microsoft/nni"
"tobegit3hub/advisor" -> "bytedance/byteps" ["e"=1]
"tobegit3hub/advisor" -> "quark0/darts" ["e"=1]
"tobegit3hub/advisor" -> "Tencent/PocketFlow" ["e"=1]
"tobegit3hub/advisor" -> "hyperopt/hyperopt-sklearn"
"HDI-Project/ATMSeer" -> "HDI-Project/ATM"
"IBM/AIF360" -> "IBM/AIX360"
"IBM/AIF360" -> "IBM/adversarial-robustness-toolbox" ["e"=1]
"IBM/AIF360" -> "dssg/aequitas"
"IBM/AIF360" -> "adebayoj/fairml"
"IBM/AIF360" -> "mbilalzafar/fair-classification"
"IBM/AIF360" -> "algofairness/fairness-comparison"
"IBM/AIF360" -> "propublica/compas-analysis"
"IBM/AIF360" -> "IBM/FfDL"
"IBM/AIF360" -> "IBM/UQ360"
"IBM/AIF360" -> "pymetrics/audit-ai"
"IBM/AIF360" -> "fairlearn/fairlearn"
"IBM/AIF360" -> "jphall663/awesome-machine-learning-interpretability"
"IBM/AIF360" -> "microsoft/interpret"
"IBM/AIF360" -> "jphall663/interpretable_machine_learning_with_python"
"IBM/AIF360" -> "uber/manifold"
"ModelOriented/DrWhy" -> "ModelOriented/DALEX"
"ModelOriented/DrWhy" -> "pbiecek/DALEX"
"ModelOriented/DrWhy" -> "ModelOriented/modelStudio"
"ModelOriented/DrWhy" -> "christophM/iml"
"ModelOriented/DrWhy" -> "ModelOriented/iBreakDown"
"ModelOriented/DrWhy" -> "pbiecek/ema"
"ModelOriented/DrWhy" -> "pbiecek/xai_resources"
"ModelOriented/DrWhy" -> "ModelOriented/DALEXtra"
"ModelOriented/DrWhy" -> "mlr-org/mlr3" ["e"=1]
"ModelOriented/DrWhy" -> "ModelOriented/shapper"
"ModelOriented/DrWhy" -> "easystats/performance" ["e"=1]
"ModelOriented/DrWhy" -> "EthicalML/xai"
"ModelOriented/DrWhy" -> "ModelOriented/randomForestExplainer"
"ModelOriented/DrWhy" -> "pbiecek/PM_VEE"
"ModelOriented/DrWhy" -> "oracle/Skater"
"dataversioncontrol/dvc" -> "TomAugspurger/engarde" ["e"=1]
"dataversioncontrol/dvc" -> "henripal/labnotebook"
"dataversioncontrol/dvc" -> "mitdbg/modeldb"
"dataversioncontrol/dvc" -> "datascienceinc/Skater"
"dataversioncontrol/dvc" -> "plasticityai/magnitude" ["e"=1]
"dataversioncontrol/dvc" -> "dask/dask-ml"
"dataversioncontrol/dvc" -> "reiinakano/scikit-plot"
"dataversioncontrol/dvc" -> "rhiever/tpot"
"dataversioncontrol/dvc" -> "databricks/mlflow" ["e"=1]
"dataversioncontrol/dvc" -> "reiinakano/xcessiv"
"dataversioncontrol/dvc" -> "tdda/tdda"
"dataversioncontrol/dvc" -> "mm-mansour/Fast-Pandas"
"dataversioncontrol/dvc" -> "instacart/lore"
"dataversioncontrol/dvc" -> "ragulpr/wtte-rnn" ["e"=1]
"dataversioncontrol/dvc" -> "rstojnic/lazydata" ["e"=1]
"interpretml/interpret-community" -> "interpretml/DiCE"
"interpretml/interpret-community" -> "microsoft/responsible-ai-widgets"
"interpretml/interpret-community" -> "fairlearn/fairlearn"
"interpretml/interpret-community" -> "interpretml/interpret-text"
"interpretml/interpret-community" -> "interpretml/interpret"
"interpretml/interpret-community" -> "microsoft/solution-accelerator-many-models" ["e"=1]
"interpretml/interpret-community" -> "Trusted-AI/AIX360"
"interpretml/interpret-community" -> "microsoft/responsible-ai-toolbox"
"interpretml/interpret-community" -> "microsoft/ml-wrappers"
"interpretml/interpret-community" -> "interpretml/interpret-text-contrib"
"interpretml/interpret-community" -> "jphall663/interpretable_machine_learning_with_python"
"interpretml/interpret-community" -> "christophM/iml"
"interpretml/interpret-community" -> "h2oai/mli-resources"
"interpretml/interpret-community" -> "Azure/azureml-previews" ["e"=1]
"interpretml/interpret-community" -> "microsoft/DiCE"
"maximtrp/scikit-posthocs" -> "raphaelvallat/pingouin"
"maximtrp/scikit-posthocs" -> "puolival/multipy"
"mlr-org/mlrMBO" -> "mlr-org/mlrCPO"
"mlr-org/mlrMBO" -> "berndbischl/ParamHelpers"
"mlr-org/mlrMBO" -> "berndbischl/parallelMap"
"mlr-org/mlrMBO" -> "jakob-r/mlrHyperopt"
"mstaniak/autoEDA-resources" -> "pbiecek/DALEX"
"mstaniak/autoEDA-resources" -> "ModelOriented/DALEXtra"
"mstaniak/autoEDA-resources" -> "boxuancui/DataExplorer" ["e"=1]
"mstaniak/autoEDA-resources" -> "XanderHorn/autoEDA"
"mstaniak/autoEDA-resources" -> "ModelOriented/modelStudio"
"mstaniak/autoEDA-resources" -> "ekstroem/dataMaid"
"mstaniak/autoEDA-resources" -> "ropensci/visdat" ["e"=1]
"optuna/optuna-dashboard" -> "optuna/optuna-examples"
"optuna/optuna-dashboard" -> "optuna/kurobako"
"reiinakano/xcessiv" -> "ClimbsRocks/auto_ml"
"reiinakano/xcessiv" -> "kaz-Anova/StackNet" ["e"=1]
"reiinakano/xcessiv" -> "rhiever/tpot"
"reiinakano/xcessiv" -> "reiinakano/scikit-plot"
"reiinakano/xcessiv" -> "joeddav/devol"
"reiinakano/xcessiv" -> "AxeldeRomblay/MLBox"
"reiinakano/xcessiv" -> "rushter/heamy" ["e"=1]
"reiinakano/xcessiv" -> "hyperopt/hyperopt-sklearn"
"reiinakano/xcessiv" -> "flennerhag/mlens"
"reiinakano/xcessiv" -> "Far0n/kaggletils" ["e"=1]
"reiinakano/xcessiv" -> "Featuretools/featuretools"
"reiinakano/xcessiv" -> "TeamHG-Memex/eli5"
"reiinakano/xcessiv" -> "dnouri/skorch"
"reiinakano/xcessiv" -> "scikit-optimize/scikit-optimize"
"reiinakano/xcessiv" -> "scikit-learn-contrib/categorical-encoding"
"SeldonIO/MLServer" -> "SeldonIO/tempo"
"SeldonIO/MLServer" -> "SeldonIO/seldon-core"
"SeldonIO/MLServer" -> "kserve/kserve"
"SeldonIO/MLServer" -> "adriangonz/mlflow-talk"
"SeldonIO/MLServer" -> "jmeisele/ml-ops"
"SeldonIO/MLServer" -> "kubeflow/kfserving"
"SeldonIO/MLServer" -> "jeremyjordan/ml-monitoring" ["e"=1]
"SeldonIO/MLServer" -> "SeldonIO/goven"
"microsoft/interpret" -> "microsoft/tensorwatch" ["e"=1]
"microsoft/interpret" -> "TeamHG-Memex/eli5"
"microsoft/interpret" -> "jphall663/awesome-machine-learning-interpretability"
"microsoft/interpret" -> "TDAmeritrade/stumpy" ["e"=1]
"microsoft/interpret" -> "Featuretools/featuretools"
"microsoft/interpret" -> "SeldonIO/alibi"
"microsoft/interpret" -> "HazyResearch/snorkel" ["e"=1]
"microsoft/interpret" -> "benedekrozemberczki/awesome-decision-tree-papers" ["e"=1]
"microsoft/interpret" -> "uber/manifold"
"microsoft/interpret" -> "lopusz/awesome-interpretable-machine-learning"
"microsoft/interpret" -> "timsainb/tensorflow2-generative-models" ["e"=1]
"microsoft/interpret" -> "marcotcr/lime"
"microsoft/interpret" -> "slundberg/shap"
"microsoft/interpret" -> "tensorflow/lucid" ["e"=1]
"microsoft/interpret" -> "facebookresearch/pythia" ["e"=1]
"VertaAI/modeldb" -> "mlrun/mlrun"
"VertaAI/modeldb" -> "guildai/guildai"
"VertaAI/modeldb" -> "google/ml-metadata"
"VertaAI/modeldb" -> "feast-dev/feast"
"VertaAI/modeldb" -> "kleveross/ormb" ["e"=1]
"VertaAI/modeldb" -> "polyaxon/polyaxon"
"VertaAI/modeldb" -> "kubeflow/arena" ["e"=1]
"VertaAI/modeldb" -> "logicalclocks/hopsworks"
"VertaAI/modeldb" -> "SeldonIO/seldon-core"
"VertaAI/modeldb" -> "zenml-io/zenml"
"VertaAI/modeldb" -> "whylabs/whylogs"
"VertaAI/modeldb" -> "kubeflow/katib"
"VertaAI/modeldb" -> "flyteorg/flyte"
"VertaAI/modeldb" -> "SeldonIO/MLServer"
"VertaAI/modeldb" -> "bentoml/BentoML"
"databricks/koalas" -> "delta-io/delta" ["e"=1]
"databricks/koalas" -> "mlflow/mlflow"
"databricks/koalas" -> "vaexio/vaex"
"databricks/koalas" -> "modin-project/modin"
"databricks/koalas" -> "databricks/spark-deep-learning" ["e"=1]
"databricks/koalas" -> "great-expectations/great_expectations" ["e"=1]
"databricks/koalas" -> "awslabs/deequ" ["e"=1]
"databricks/koalas" -> "dask/dask" ["e"=1]
"databricks/koalas" -> "Netflix/metaflow"
"databricks/koalas" -> "quantumblacklabs/kedro"
"databricks/koalas" -> "nteract/papermill" ["e"=1]
"databricks/koalas" -> "Azure/mmlspark" ["e"=1]
"databricks/koalas" -> "pandas-profiling/pandas-profiling"
"databricks/koalas" -> "jmcarpenter2/swifter"
"databricks/koalas" -> "jupyter-incubator/sparkmagic" ["e"=1]
"instacart/lore" -> "ClimbsRocks/auto_ml"
"instacart/lore" -> "henripal/labnotebook"
"instacart/lore" -> "databricks/mlflow" ["e"=1]
"instacart/lore" -> "Featuretools/featuretools"
"instacart/lore" -> "dataversioncontrol/dvc"
"instacart/lore" -> "polyaxon/polyaxon"
"instacart/lore" -> "mm-mansour/Fast-Pandas"
"instacart/lore" -> "reiinakano/scikit-plot"
"instacart/lore" -> "reiinakano/xcessiv"
"instacart/lore" -> "machinalis/featureforge" ["e"=1]
"instacart/lore" -> "jhfjhfj1/autokeras"
"instacart/lore" -> "TeamHG-Memex/eli5"
"instacart/lore" -> "datascienceinc/Skater"
"instacart/lore" -> "uber/pyro"
"instacart/lore" -> "marcotcr/anchor"
"philipperemy/keract" -> "raghakot/keras-vis"
"philipperemy/keract" -> "philipperemy/keras-attention-mechanism" ["e"=1]
"philipperemy/keract" -> "sicara/tf-explain" ["e"=1]
"philipperemy/keract" -> "keisen/tf-keras-vis" ["e"=1]
"philipperemy/keract" -> "philipperemy/keras-tcn" ["e"=1]
"philipperemy/keract" -> "OverLordGoldDragon/see-rnn"
"philipperemy/keract" -> "keras-team/keras-tuner"
"philipperemy/keract" -> "autonomio/talos"
"philipperemy/keract" -> "titu1994/keras-squeeze-excite-network" ["e"=1]
"philipperemy/keract" -> "keplr-io/quiver"
"philipperemy/keract" -> "CyberZHG/keras-self-attention" ["e"=1]
"philipperemy/keract" -> "CyberZHG/keras-radam" ["e"=1]
"philipperemy/keract" -> "BenWhetton/keras-surgeon" ["e"=1]
"philipperemy/keract" -> "thushv89/attention_keras" ["e"=1]
"philipperemy/keract" -> "bckenstler/CLR" ["e"=1]
"PAIR-code/what-if-tool" -> "interpretml/DiCE"
"PAIR-code/what-if-tool" -> "SeldonIO/alibi"
"PAIR-code/what-if-tool" -> "fairlearn/fairlearn"
"PAIR-code/what-if-tool" -> "PAIR-code/lit" ["e"=1]
"PAIR-code/what-if-tool" -> "Trusted-AI/AIF360"
"PAIR-code/what-if-tool" -> "tensorflow/tcav" ["e"=1]
"PAIR-code/what-if-tool" -> "PAIR-code/facets"
"PAIR-code/what-if-tool" -> "uber/manifold"
"PAIR-code/what-if-tool" -> "oegedijk/explainerdashboard"
"PAIR-code/what-if-tool" -> "Trusted-AI/AIX360"
"PAIR-code/what-if-tool" -> "tensorflow/fairness-indicators"
"PAIR-code/what-if-tool" -> "EthicalML/xai"
"PAIR-code/what-if-tool" -> "SeldonIO/alibi-detect"
"PAIR-code/what-if-tool" -> "pbiecek/xai_resources"
"PAIR-code/what-if-tool" -> "PAIR-code/saliency" ["e"=1]
"SeldonIO/seldon-core" -> "kubeflow/kubeflow"
"SeldonIO/seldon-core" -> "bentoml/BentoML"
"SeldonIO/seldon-core" -> "kubeflow/kfserving"
"SeldonIO/seldon-core" -> "mlflow/mlflow"
"SeldonIO/seldon-core" -> "feast-dev/feast"
"SeldonIO/seldon-core" -> "SeldonIO/alibi"
"SeldonIO/seldon-core" -> "SeldonIO/alibi-detect"
"SeldonIO/seldon-core" -> "pachyderm/pachyderm"
"SeldonIO/seldon-core" -> "kubeflow/pipelines"
"SeldonIO/seldon-core" -> "polyaxon/polyaxon"
"SeldonIO/seldon-core" -> "kubeflow/katib"
"SeldonIO/seldon-core" -> "kserve/kserve"
"SeldonIO/seldon-core" -> "Netflix/metaflow"
"SeldonIO/seldon-core" -> "iterative/dvc"
"SeldonIO/seldon-core" -> "evidentlyai/evidently"
"pachyderm/pachyderm" -> "SeldonIO/seldon-core"
"pachyderm/pachyderm" -> "polyaxon/polyaxon"
"pachyderm/pachyderm" -> "iterative/dvc"
"pachyderm/pachyderm" -> "kubeflow/kubeflow"
"pachyderm/pachyderm" -> "Netflix/metaflow"
"pachyderm/pachyderm" -> "mlflow/mlflow"
"pachyderm/pachyderm" -> "nteract/papermill" ["e"=1]
"pachyderm/pachyderm" -> "argoproj/argo" ["e"=1]
"pachyderm/pachyderm" -> "bentoml/BentoML"
"pachyderm/pachyderm" -> "great-expectations/great_expectations" ["e"=1]
"pachyderm/pachyderm" -> "quantumblacklabs/kedro"
"pachyderm/pachyderm" -> "spotify/luigi" ["e"=1]
"pachyderm/pachyderm" -> "dask/dask" ["e"=1]
"pachyderm/pachyderm" -> "cortexlabs/cortex"
"pachyderm/pachyderm" -> "dagster-io/dagster" ["e"=1]
"mutantturkey/PyFeast" -> "nlhepler/mrmr"
"Waikato/moa" -> "scikit-multiflow/scikit-multiflow"
"Waikato/moa" -> "huawei-noah/streamDM"
"Waikato/moa" -> "apache/incubator-samoa"
"Waikato/moa" -> "Waikato/meka"
"Waikato/moa" -> "Waikato/weka-3.8"
"Waikato/moa" -> "alipsgh/tornado"
"Waikato/moa" -> "hmgomes/AdaptiveRandomForest"
"Waikato/moa" -> "online-ml/awesome-online-machine-learning"
"Waikato/moa" -> "Waikato/wekaDeeplearning4j"
"Waikato/moa" -> "online-ml/river-torch"
"Waikato/moa" -> "richard-moulton/D-Stream"
"Waikato/moa" -> "sohutv/hotcaffeine" ["e"=1]
"Waikato/moa" -> "mhahsler/stream"
"Waikato/moa" -> "elki-project/elki" ["e"=1]
"Waikato/moa" -> "baimingxuan/vue3-admin-design" ["e"=1]
"HunterMcGushion/hyperparameter_hunter" -> "RGF-team/rgf"
"HunterMcGushion/hyperparameter_hunter" -> "scikit-learn-contrib/categorical-encoding"
"HunterMcGushion/hyperparameter_hunter" -> "scikit-learn-contrib/boruta_py"
"HunterMcGushion/hyperparameter_hunter" -> "abhayspawar/featexp"
"HunterMcGushion/hyperparameter_hunter" -> "scikit-optimize/scikit-optimize"
"HunterMcGushion/hyperparameter_hunter" -> "stanfordmlgroup/ngboost"
"HunterMcGushion/hyperparameter_hunter" -> "TeamHG-Memex/eli5"
"HunterMcGushion/hyperparameter_hunter" -> "vecxoz/vecstack" ["e"=1]
"HunterMcGushion/hyperparameter_hunter" -> "Featuretools/featuretools"
"HunterMcGushion/hyperparameter_hunter" -> "WillKoehrsen/hyperparameter-optimization"
"HunterMcGushion/hyperparameter_hunter" -> "solegalli/feature_engine"
"HunterMcGushion/hyperparameter_hunter" -> "h2oai/mli-resources"
"HunterMcGushion/hyperparameter_hunter" -> "reiinakano/xcessiv"
"HunterMcGushion/hyperparameter_hunter" -> "yzhao062/combo" ["e"=1]
"HunterMcGushion/hyperparameter_hunter" -> "Ibotta/sk-dist"
"jmcarpenter2/parfit" -> "chrispaulca/waterfall"
"alicezheng/feature-engineering-book" -> "Yimeng-Zhang/feature-engineering-and-feature-selection"
"alicezheng/feature-engineering-book" -> "aikho/awesome-feature-engineering"
"alicezheng/feature-engineering-book" -> "apachecn/feature-engineering-for-ml-zh" ["e"=1]
"alicezheng/feature-engineering-book" -> "PacktPublishing/Feature-Engineering-Made-Easy"
"alicezheng/feature-engineering-book" -> "Pysamlam/Tips-of-Feature-engineering" ["e"=1]
"alicezheng/feature-engineering-book" -> "scikit-learn-contrib/boruta_py"
"alicezheng/feature-engineering-book" -> "WillKoehrsen/feature-selector"
"alicezheng/feature-engineering-book" -> "apachecn/fe4ml-zh" ["e"=1]
"alicezheng/feature-engineering-book" -> "duxuhao/Feature-Selection"
"alicezheng/feature-engineering-book" -> "dipanjanS/practical-machine-learning-with-python" ["e"=1]
"alicezheng/feature-engineering-book" -> "Featuretools/featuretools"
"alicezheng/feature-engineering-book" -> "MLWave/Kaggle-Ensemble-Guide" ["e"=1]
"alicezheng/feature-engineering-book" -> "Smilexuhc/Data-Competition-TopSolution" ["e"=1]
"alicezheng/feature-engineering-book" -> "PacktPublishing/Python-Feature-Engineering-Cookbook" ["e"=1]
"alicezheng/feature-engineering-book" -> "aapatel09/handson-unsupervised-learning" ["e"=1]
"claesenm/optunity" -> "automl/HPOlib"
"claesenm/optunity" -> "HIPS/Spearmint"
"claesenm/optunity" -> "rmcantin/bayesopt"
"claesenm/optunity" -> "hyperopt/hyperopt-sklearn"
"claesenm/optunity" -> "Yelp/MOE"
"claesenm/optunity" -> "automl/SMAC3"
"claesenm/optunity" -> "tomMoral/loky"
"SheffieldML/PyDeepGP" -> "ICL-SML/Doubly-Stochastic-DGP"
"SheffieldML/PyDeepGP" -> "SheffieldML/deepGP"
"SheffieldML/PyDeepGP" -> "thangbui/deepGP_approxEP"
"SheffieldML/PyDeepGP" -> "brain-research/nngp"
"SheffieldML/PyDeepGP" -> "jameshensman/VFF"
"SheffieldML/PyDeepGP" -> "maka89/Deep-Kernel-GP"
"SheffieldML/PyDeepGP" -> "alshedivat/keras-gp"
"SheffieldML/PyDeepGP" -> "FelixOpolka/Deep-Gaussian-Process"
"SheffieldML/PyDeepGP" -> "cambridge-mlg/sghmc_dgp"
"SheffieldML/PyDeepGP" -> "hughsalimbeni/DGPs_with_IWVI"
"SheffieldML/PyDeepGP" -> "markvdw/convgp"
"SheffieldML/PyDeepGP" -> "duvenaud/deep-limits"
"SheffieldML/deepGP" -> "SheffieldML/GPmat"
"optuna/optuna-examples" -> "optuna/optuna-dashboard"
"optuna/optuna-examples" -> "optuna/optuna"
"dask/distributed" -> "dask/dask-ml"
"dask/distributed" -> "dask/dask" ["e"=1]
"dask/distributed" -> "dask/dask-kubernetes"
"dask/distributed" -> "dask/dask-jobqueue"
"dask/distributed" -> "dask/dask-tutorial"
"dask/distributed" -> "dask/dask-examples"
"dask/distributed" -> "dask/dask-labextension"
"dask/distributed" -> "pydata/xarray" ["e"=1]
"dask/distributed" -> "dask/dask-docker"
"dask/distributed" -> "cloudpipe/cloudpickle"
"dask/distributed" -> "dask/dask-cloudprovider"
"dask/distributed" -> "pangeo-data/pangeo" ["e"=1]
"dask/distributed" -> "dask/s3fs"
"dask/distributed" -> "dask/dask-gateway"
"dask/distributed" -> "dask/fastparquet"
"tensorflow/estimator" -> "tensorflow/profiler"
"tensorflow/estimator" -> "tensorflow/io"
"tensorflow/estimator" -> "tensorflow/data-validation"
"tensorflow/estimator" -> "tensorflow/metadata"
"tensorflow/estimator" -> "tensorflow/transform"
"tensorflow/estimator" -> "tensorflow/build"
"tensorflow/estimator" -> "tensorflow/autograph"
"ShuhuaGao/geppy" -> "jeff-dale/Gene-Expression-Programming"
"ShuhuaGao/geppy" -> "kstaats/karoo_gp"
"parrt/random-forest-importances" -> "SauceCat/PDPbox"
"parrt/random-forest-importances" -> "parrt/dtreeviz"
"parrt/random-forest-importances" -> "andosa/treeinterpreter"
"parrt/random-forest-importances" -> "scikit-learn-contrib/boruta_py"
"parrt/random-forest-importances" -> "parrt/stratx"
"parrt/random-forest-importances" -> "scikit-learn-contrib/forest-confidence-interval"
"parrt/random-forest-importances" -> "Ekeany/Boruta-Shap"
"parrt/random-forest-importances" -> "ModelOriented/DALEX"
"parrt/random-forest-importances" -> "manuel-calzolari/sklearn-genetic"
"parrt/random-forest-importances" -> "christophM/rulefit"
"parrt/random-forest-importances" -> "cod3licious/autofeat"
"parrt/random-forest-importances" -> "scikit-learn-contrib/DESlib"
"parrt/random-forest-importances" -> "TeamHG-Memex/eli5"
"parrt/random-forest-importances" -> "parrt/lolviz" ["e"=1]
"parrt/random-forest-importances" -> "koaning/scikit-lego"
"interpretml/interpret" -> "SeldonIO/alibi"
"interpretml/interpret" -> "fairlearn/fairlearn"
"interpretml/interpret" -> "interpretml/DiCE"
"interpretml/interpret" -> "slundberg/shap"
"interpretml/interpret" -> "jphall663/awesome-machine-learning-interpretability"
"interpretml/interpret" -> "marcotcr/lime"
"interpretml/interpret" -> "uber/causalml" ["e"=1]
"interpretml/interpret" -> "MAIF/shapash"
"interpretml/interpret" -> "Trusted-AI/AIX360"
"interpretml/interpret" -> "microsoft/EconML" ["e"=1]
"interpretml/interpret" -> "interpretml/interpret-community"
"interpretml/interpret" -> "pytorch/captum" ["e"=1]
"interpretml/interpret" -> "microsoft/dowhy" ["e"=1]
"interpretml/interpret" -> "oegedijk/explainerdashboard"
"interpretml/interpret" -> "TeamHG-Memex/eli5"
"kennethleungty/Failed-ML" -> "facebookresearch/balance"
"kennethleungty/Failed-ML" -> "valeman/awesome-conformal-prediction"
"kennethleungty/Failed-ML" -> "awslabs/fortuna"
"kennethleungty/Failed-ML" -> "SelfExplainML/PiML-Toolbox"
"kennethleungty/Failed-ML" -> "intel/scikit-learn-intelex"
"kennethleungty/Failed-ML" -> "neubig/nlp-from-scratch-assignment-2022"
"kennethleungty/Failed-ML" -> "scikit-learn-contrib/MAPIE"
"kennethleungty/Failed-ML" -> "eugeneyan/ml-surveys" ["e"=1]
"kennethleungty/Failed-ML" -> "poloclub/timbertrek"
"kennethleungty/Failed-ML" -> "youssefHosni/Practical-Machine-Learning" ["e"=1]
"Featuretools/Automated-Manual-Comparison" -> "WillKoehrsen/automated-feature-engineering"
"Featuretools/Automated-Manual-Comparison" -> "Featuretools/predict-next-purchase" ["e"=1]
"HIPS/Spearmint" -> "JasperSnoek/spearmint"
"HIPS/Spearmint" -> "Yelp/MOE"
"HIPS/Spearmint" -> "SheffieldML/GPyOpt"
"HIPS/Spearmint" -> "hyperopt/hyperopt"
"HIPS/Spearmint" -> "automl/SMAC3"
"HIPS/Spearmint" -> "automl/RoBO"
"HIPS/Spearmint" -> "fmfn/BayesianOptimization"
"HIPS/Spearmint" -> "scikit-optimize/scikit-optimize"
"HIPS/Spearmint" -> "hyperopt/hyperopt-sklearn"
"HIPS/Spearmint" -> "SheffieldML/GPy"
"HIPS/Spearmint" -> "mila-udem/blocks" ["e"=1]
"HIPS/Spearmint" -> "blei-lab/edward"
"HIPS/Spearmint" -> "jaberg/hyperopt"
"HIPS/Spearmint" -> "claesenm/optunity"
"HIPS/Spearmint" -> "HIPS/autograd"
"smazzanti/mrmr" -> "danielhomola/mifs"
"smazzanti/mrmr" -> "fbrundu/pymrmr"
"smazzanti/mrmr" -> "Ekeany/Boruta-Shap"
"smazzanti/mrmr" -> "scikit-learn-contrib/MAPIE"
"smazzanti/mrmr" -> "upgini/upgini"
"smazzanti/mrmr" -> "AutoViML/featurewiz"
"cenobites/flask-jsonrpc" -> "pavlov99/json-rpc"
"cenobites/flask-jsonrpc" -> "explodinglabs/jsonrpcserver"
"BayesWatch/deep-kernel-transfer" -> "maka89/Deep-Kernel-GP"
"BayesWatch/deep-kernel-transfer" -> "cnguyen10/few_shot_meta_learning" ["e"=1]
"SheffieldML/GPy" -> "GPflow/GPflow"
"SheffieldML/GPy" -> "SheffieldML/GPyOpt"
"SheffieldML/GPy" -> "cornellius-gp/gpytorch"
"SheffieldML/GPy" -> "blei-lab/edward"
"SheffieldML/GPy" -> "pytorch/botorch"
"SheffieldML/GPy" -> "fmfn/BayesianOptimization"
"SheffieldML/GPy" -> "dfm/george" ["e"=1]
"SheffieldML/GPy" -> "HIPS/Spearmint"
"SheffieldML/GPy" -> "scikit-optimize/scikit-optimize"
"SheffieldML/GPy" -> "jamesrobertlloyd/gp-structure-search"
"SheffieldML/GPy" -> "pymc-devs/pymc3"
"SheffieldML/GPy" -> "HIPS/autograd"
"SheffieldML/GPy" -> "SheffieldML/PyDeepGP"
"SheffieldML/GPy" -> "krasserm/bayesian-machine-learning"
"SheffieldML/GPy" -> "marionmari/pyGPs" ["e"=1]
"maka89/Deep-Kernel-GP" -> "BayesWatch/deep-kernel-transfer"
"andrewgordonwilson/bayesgan" -> "uber/pyro"
"andrewgordonwilson/bayesgan" -> "openai/improved-gan" ["e"=1]
"andrewgordonwilson/bayesgan" -> "monsta-hd/boltzmann-machines" ["e"=1]
"andrewgordonwilson/bayesgan" -> "yunjey/StarGAN" ["e"=1]
"andrewgordonwilson/bayesgan" -> "mila-udem/welcome_tutorials" ["e"=1]
"andrewgordonwilson/bayesgan" -> "facebookresearch/clevr-iep" ["e"=1]
"andrewgordonwilson/bayesgan" -> "khanrc/tf.gans-comparison" ["e"=1]
"andrewgordonwilson/bayesgan" -> "probtorch/probtorch"
"andrewgordonwilson/bayesgan" -> "thu-ml/zhusuan"
"andrewgordonwilson/bayesgan" -> "vasiloglou/mltrain-nips-2017"
"andrewgordonwilson/bayesgan" -> "renmengye/revnet-public" ["e"=1]
"andrewgordonwilson/bayesgan" -> "blei-lab/edward"
"andrewgordonwilson/bayesgan" -> "znxlwm/pytorch-generative-model-collections" ["e"=1]
"andrewgordonwilson/bayesgan" -> "robi56/awesome-bayesian-deep-learning" ["e"=1]
"andrewgordonwilson/bayesgan" -> "jonas-koehler/s2cnn" ["e"=1]
"stared/livelossplot" -> "dnouri/skorch"
"stared/livelossplot" -> "raghakot/keras-vis"
"stared/livelossplot" -> "henripal/labnotebook"
"stared/livelossplot" -> "stared/thinking-in-tensors-writing-in-pytorch" ["e"=1]
"stared/livelossplot" -> "jmcarpenter2/swifter"
"stared/livelossplot" -> "ncullen93/torchsample" ["e"=1]
"stared/livelossplot" -> "Prodicode/ann-visualizer"
"stared/livelossplot" -> "jwkvam/celluloid" ["e"=1]
"stared/livelossplot" -> "microsoft/tensorwatch" ["e"=1]
"stared/livelossplot" -> "reiinakano/scikit-plot"
"stared/livelossplot" -> "tomgoldstein/loss-landscape" ["e"=1]
"stared/livelossplot" -> "DistrictDataLabs/yellowbrick"
"stared/livelossplot" -> "unit8co/vegans" ["e"=1]
"stared/livelossplot" -> "autonomio/talos"
"stared/livelossplot" -> "plasticityai/magnitude" ["e"=1]
"wandb/wandb" -> "Lightning-AI/lightning" ["e"=1]
"wandb/wandb" -> "adap/flower" ["e"=1]
"wandb/wandb" -> "Nixtla/statsforecast" ["e"=1]
"wandb/wandb" -> "optuna/optuna"
"wandb/wandb" -> "bentoml/BentoML"
"wandb/wandb" -> "cleanlab/cleanlab"
"wandb/wandb" -> "wandb/examples" ["e"=1]
"wandb/wandb" -> "sematic-ai/sematic" ["e"=1]
"wandb/wandb" -> "Miksus/rocketry" ["e"=1]
"wandb/wandb" -> "nearform/lyra" ["e"=1]
"wandb/wandb" -> "replicate/cog"
"wandb/wandb" -> "kedro-org/kedro"
"wandb/wandb" -> "gradio-app/gradio" ["e"=1]
"wandb/wandb" -> "Farama-Foundation/Gymnasium" ["e"=1]
"wandb/wandb" -> "srush/GPU-Puzzles" ["e"=1]
"ray-project/tune-sklearn" -> "Ekeany/Boruta-Shap"
"ray-project/tune-sklearn" -> "ray-project/xgboost_ray"
"ray-project/tune-sklearn" -> "loft-br/xgboost-survival-embeddings" ["e"=1]
"ray-project/tune-sklearn" -> "scikit-learn-contrib/DESlib"
"ray-project/tune-sklearn" -> "koaning/scikit-lego"
"ray-project/tune-sklearn" -> "scikit-learn-contrib/boruta_py"
"ray-project/tune-sklearn" -> "scikit-learn-contrib/category_encoders"
"ray-project/tune-sklearn" -> "scikit-learn-contrib/scikit-learn-extra"
"ray-project/tune-sklearn" -> "solegalli/feature_engine"
"ray-project/tune-sklearn" -> "Neuraxio/Neuraxle"
"ray-project/tune-sklearn" -> "cerlymarco/shap-hypetune"
"ray-project/tune-sklearn" -> "koaning/human-learn"
"ray-project/tune-sklearn" -> "ray-project/lightgbm_ray"
"ray-project/tune-sklearn" -> "data-describe/data-describe"
"ray-project/tune-sklearn" -> "ing-bank/probatus" ["e"=1]
"scikit-learn-contrib/DESlib" -> "Menelau/DESlib" ["e"=1]
"scikit-learn-contrib/DESlib" -> "Ekeany/Boruta-Shap"
"scikit-learn-contrib/DESlib" -> "scikit-learn-contrib/skope-rules"
"scikit-learn-contrib/DESlib" -> "scikit-learn-contrib/stability-selection"
"scikit-learn-contrib/DESlib" -> "ealcobaca/pymfe"
"scikit-learn-contrib/DESlib" -> "EpistasisLab/scikit-rebate"
"scikit-learn-contrib/DESlib" -> "flennerhag/mlens"
"scikit-learn-contrib/DESlib" -> "scikit-learn-contrib/boruta_py"
"scikit-learn-contrib/DESlib" -> "scikit-learn-contrib/metric-learn"
"scikit-learn-contrib/DESlib" -> "christophM/rulefit"
"scikit-learn-contrib/DESlib" -> "scikit-learn-contrib/scikit-learn-contrib"
"scikit-learn-contrib/DESlib" -> "ray-project/tune-sklearn"
"scikit-learn-contrib/DESlib" -> "eltonlaw/impyute"
"scikit-learn-contrib/DESlib" -> "yzhao062/combo" ["e"=1]
"scikit-learn-contrib/DESlib" -> "scikit-learn-contrib/scikit-learn-extra"
"automl/RoBO" -> "automl/SMAC3"
"automl/RoBO" -> "automl/HpBandSter"
"automl/RoBO" -> "automl/pybnn"
"automl/RoBO" -> "automl/HPOlib2"
"automl/RoBO" -> "automl/fanova"
"automl/RoBO" -> "automl/HPOlib"
"automl/RoBO" -> "automl/pylearningcurvepredictor"
"automl/RoBO" -> "HIPS/Spearmint"
"automl/RoBO" -> "wujian16/Cornell-MOE"
"automl/RoBO" -> "SheffieldML/GPyOpt"
"automl/RoBO" -> "automl/ConfigSpace"
"automl/RoBO" -> "automl/autoweka"
"automl/RoBO" -> "uber-research/TuRBO"
"automl/RoBO" -> "JasperSnoek/spearmint"
"automl/RoBO" -> "automl/BOAH"
"tensorflow/model-card-toolkit" -> "google/ml-metadata"
"tensorflow/model-card-toolkit" -> "ivylee/model-cards-and-datasheets"
"tensorflow/model-card-toolkit" -> "tensorflow/fairness-indicators"
"equialgo/fairness-in-ml" -> "mbilalzafar/fair-classification"
"anujdutt9/Feature-Selection-for-Machine-Learning" -> "aikho/awesome-feature-engineering"
"anujdutt9/Feature-Selection-for-Machine-Learning" -> "Yimeng-Zhang/feature-engineering-and-feature-selection"
"anujdutt9/Feature-Selection-for-Machine-Learning" -> "kaushalshetty/FeatureSelectionGA"
"anujdutt9/Feature-Selection-for-Machine-Learning" -> "duxuhao/Feature-Selection"
"kaushalshetty/FeatureSelectionGA" -> "renatoosousa/GeneticAlgorithmForFeatureSelection"
"kaushalshetty/FeatureSelectionGA" -> "manuel-calzolari/sklearn-genetic"
"kaushalshetty/FeatureSelectionGA" -> "danielhomola/mifs"
"kaushalshetty/FeatureSelectionGA" -> "duxuhao/Feature-Selection"
"kaushalshetty/FeatureSelectionGA" -> "Ekeany/Boruta-Shap"
"kaushalshetty/FeatureSelectionGA" -> "ahcantao/PSOFeatureSelection"
"kaushalshetty/FeatureSelectionGA" -> "rogeroyer/feature_selection_GAAlgorithm"
"kaushalshetty/FeatureSelectionGA" -> "scoliann/GeneticAlgorithmFeatureSelection"
"kaushalshetty/FeatureSelectionGA" -> "jundongl/scikit-feature"
"kaushalshetty/FeatureSelectionGA" -> "JingweiToo/Wrapper-Feature-Selection-Toolbox-Python" ["e"=1]
"kaushalshetty/FeatureSelectionGA" -> "EpistasisLab/scikit-rebate"
"kaushalshetty/FeatureSelectionGA" -> "solegalli/feature-selection-for-machine-learning" ["e"=1]
"kaushalshetty/FeatureSelectionGA" -> "anujdutt9/Feature-Selection-for-Machine-Learning"
"kaushalshetty/FeatureSelectionGA" -> "ctlab/ITMO_FS"
"kaushalshetty/FeatureSelectionGA" -> "Yimeng-Zhang/feature-engineering-and-feature-selection"
"uqfoundation/multiprocess" -> "uqfoundation/pathos"
"uqfoundation/multiprocess" -> "uqfoundation/dill"
"uqfoundation/multiprocess" -> "uqfoundation/klepto"
"uqfoundation/multiprocess" -> "noxdafox/pebble"
"GPflow/GPflow" -> "SheffieldML/GPy"
"GPflow/GPflow" -> "cornellius-gp/gpytorch"
"GPflow/GPflow" -> "blei-lab/edward"
"GPflow/GPflow" -> "GPflow/GPflowOpt"
"GPflow/GPflow" -> "tensorflow/probability"
"GPflow/GPflow" -> "SheffieldML/GPyOpt"
"GPflow/GPflow" -> "dfm/george" ["e"=1]
"GPflow/GPflow" -> "pymc-devs/pymc3"
"GPflow/GPflow" -> "pyro-ppl/pyro"
"GPflow/GPflow" -> "pytorch/botorch"
"GPflow/GPflow" -> "fmfn/BayesianOptimization"
"GPflow/GPflow" -> "pyro-ppl/numpyro" ["e"=1]
"GPflow/GPflow" -> "HIPS/autograd"
"GPflow/GPflow" -> "SheffieldML/PyDeepGP"
"GPflow/GPflow" -> "secondmind-labs/GPflux"
"craiggwilson/fluent-mongo" -> "atheken/NoRM"
"craiggwilson/fluent-mongo" -> "freshlogic/MongoDB.Web"
"craiggwilson/fluent-mongo" -> "craiggwilson/Simple.Data.MongoDB"
"aikho/awesome-feature-engineering" -> "anujdutt9/Feature-Selection-for-Machine-Learning"
"aikho/awesome-feature-engineering" -> "Yimeng-Zhang/feature-engineering-and-feature-selection"
"aikho/awesome-feature-engineering" -> "alicezheng/feature-engineering-book"
"aikho/awesome-feature-engineering" -> "solegalli/feature_engine"
"solegalli/feature_engine" -> "cod3licious/autofeat"
"solegalli/feature_engine" -> "koaning/scikit-lego"
"solegalli/feature_engine" -> "Ekeany/Boruta-Shap"
"solegalli/feature_engine" -> "scikit-learn-contrib/boruta_py"
"solegalli/feature_engine" -> "akanz1/klib"
"solegalli/feature_engine" -> "alteryx/evalml"
"solegalli/feature_engine" -> "trainindata/deploying-machine-learning-models" ["e"=1]
"solegalli/feature_engine" -> "scikit-learn-contrib/category_encoders"
"solegalli/feature_engine" -> "Neuraxio/Neuraxle"
"solegalli/feature_engine" -> "alteryx/featuretools"
"solegalli/feature_engine" -> "scikit-learn-contrib/skope-rules"
"solegalli/feature_engine" -> "ray-project/tune-sklearn"
"solegalli/feature_engine" -> "iskandr/fancyimpute"
"solegalli/feature_engine" -> "stanfordmlgroup/ngboost"
"solegalli/feature_engine" -> "Minyus/causallift" ["e"=1]
"christophM/rulefit" -> "scikit-learn-contrib/skope-rules"
"christophM/rulefit" -> "csinva/imodels"
"christophM/rulefit" -> "holub008/xrf"
"christophM/rulefit" -> "cod3licious/autofeat"
"christophM/rulefit" -> "h2oai/mli-resources"
"christophM/rulefit" -> "oracle/Skater"
"christophM/rulefit" -> "scikit-learn-contrib/DESlib"
"christophM/rulefit" -> "scikit-learn-contrib/forest-confidence-interval"
"christophM/rulefit" -> "tmadl/sklearn-expertsys"
"christophM/rulefit" -> "marcotcr/anchor"
"marcotcr/lime-experiments" -> "marcotcr/anchor"
"pbiecek/xai_resources" -> "lopusz/awesome-interpretable-machine-learning"
"pbiecek/xai_resources" -> "anguyen8/XAI-papers"
"pbiecek/xai_resources" -> "EthicalML/xai"
"pbiecek/xai_resources" -> "jphall663/awesome-machine-learning-interpretability"
"pbiecek/xai_resources" -> "wangyongjie-ntu/Awesome-explainable-AI"
"pbiecek/xai_resources" -> "h2oai/mli-resources"
"pbiecek/xai_resources" -> "Trusted-AI/AIX360"
"pbiecek/xai_resources" -> "ModelOriented/DrWhy"
"pbiecek/xai_resources" -> "albermax/innvestigate" ["e"=1]
"pbiecek/xai_resources" -> "SeldonIO/alibi"
"pbiecek/xai_resources" -> "oneTaken/awesome_deep_learning_interpretability"
"pbiecek/xai_resources" -> "jphall663/interpretable_machine_learning_with_python"
"pbiecek/xai_resources" -> "marcoancona/DeepExplain" ["e"=1]
"pbiecek/xai_resources" -> "explainX/explainx"
"pbiecek/xai_resources" -> "oracle/Skater"
"creme-ml/creme" -> "creme-ml/chantilly"
"creme-ml/creme" -> "koaning/scikit-lego"
"creme-ml/creme" -> "scikit-multiflow/scikit-multiflow"
"creme-ml/creme" -> "MaxHalford/prince"
"creme-ml/creme" -> "HunterMcGushion/hyperparameter_hunter"
"creme-ml/creme" -> "MaxHalford/xam"
"creme-ml/creme" -> "VowpalWabbit/vowpal_wabbit"
"creme-ml/creme" -> "uber/manifold"
"creme-ml/creme" -> "jmschrei/apricot"
"creme-ml/creme" -> "SeldonIO/alibi"
"creme-ml/creme" -> "alegonz/baikal"
"creme-ml/creme" -> "quantumblacklabs/causalnex" ["e"=1]
"creme-ml/creme" -> "plasticityai/magnitude" ["e"=1]
"creme-ml/creme" -> "bentoml/BentoML"
"creme-ml/creme" -> "jmcarpenter2/swifter"
"alteryx/featuretools" -> "alteryx/evalml"
"alteryx/featuretools" -> "alteryx/compose"
"alteryx/featuretools" -> "feature-engine/feature_engine"
"alteryx/featuretools" -> "scikit-learn-contrib/category_encoders"
"alteryx/featuretools" -> "feast-dev/feast"
"alteryx/featuretools" -> "microsoft/FLAML"
"alteryx/featuretools" -> "blue-yonder/tsfresh"
"alteryx/featuretools" -> "MAIF/shapash"
"alteryx/featuretools" -> "cod3licious/autofeat"
"alteryx/featuretools" -> "mljar/mljar-supervised"
"alteryx/featuretools" -> "EpistasisLab/tpot"
"alteryx/featuretools" -> "unit8co/darts" ["e"=1]
"alteryx/featuretools" -> "solegalli/feature_engine"
"alteryx/featuretools" -> "tslearn-team/tslearn" ["e"=1]
"alteryx/featuretools" -> "pycaret/pycaret"
"hyperopt/hyperopt-convnet" -> "hyperopt/hyperopt-nnet"
"probml/pml2-book" -> "probml/pml-book"
"probml/pml2-book" -> "probml/pyprobml"
"probml/pml2-book" -> "jmtomczak/intro_dgm" ["e"=1]
"probml/pml2-book" -> "valeman/awesome-conformal-prediction"
"probml/pml2-book" -> "michaelgutmann/ml-pen-and-paper-exercises" ["e"=1]
"probml/pml2-book" -> "probml/dynamax" ["e"=1]
"probml/pml2-book" -> "clementchadebec/benchmark_VAE" ["e"=1]
"probml/pml2-book" -> "bayesoptbook/bayesoptbook.github.io"
"probml/pml2-book" -> "patrick-kidger/diffrax" ["e"=1]
"probml/pml2-book" -> "patrick-kidger/equinox" ["e"=1]
"probml/pml2-book" -> "pyro-ppl/numpyro" ["e"=1]
"probml/pml2-book" -> "facebookincubator/flowtorch" ["e"=1]
"probml/pml2-book" -> "deepmind/optax" ["e"=1]
"probml/pml2-book" -> "n2cholas/awesome-jax" ["e"=1]
"probml/pml2-book" -> "cornellius-gp/gpytorch"
"joblib/threadpoolctl" -> "tomMoral/loky"
"scikit-learn-contrib/skope-rules" -> "christophM/rulefit"
"scikit-learn-contrib/skope-rules" -> "csinva/imodels"
"scikit-learn-contrib/skope-rules" -> "scikit-learn-contrib/DESlib"
"scikit-learn-contrib/skope-rules" -> "tmadl/sklearn-expertsys"
"scikit-learn-contrib/skope-rules" -> "scikit-learn-contrib/boruta_py"
"scikit-learn-contrib/skope-rules" -> "scikit-learn-contrib/stability-selection"
"scikit-learn-contrib/skope-rules" -> "EpistasisLab/scikit-rebate"
"scikit-learn-contrib/skope-rules" -> "Ekeany/Boruta-Shap"
"scikit-learn-contrib/skope-rules" -> "scikit-learn-contrib/categorical-encoding"
"scikit-learn-contrib/skope-rules" -> "cod3licious/autofeat"
"scikit-learn-contrib/skope-rules" -> "koaning/scikit-lego"
"scikit-learn-contrib/skope-rules" -> "solegalli/feature_engine"
"scikit-learn-contrib/skope-rules" -> "MAIF/melusine"
"scikit-learn-contrib/skope-rules" -> "interpretml/DiCE"
"scikit-learn-contrib/skope-rules" -> "scikit-learn-contrib/polylearn"
"IBM/AIX360" -> "IBM/AIF360"
"IBM/AIX360" -> "IBM/UQ360"
"IBM/AIX360" -> "lopusz/awesome-interpretable-machine-learning"
"IBM/AIX360" -> "IBM/lale"
"IBM/AIX360" -> "microsoft/interpret"
"IBM/AIX360" -> "IBM/adversarial-robustness-toolbox" ["e"=1]
"IBM/AIX360" -> "SeldonIO/alibi"
"IBM/AIX360" -> "marcotcr/anchor"
"IBM/AIX360" -> "jphall663/awesome-machine-learning-interpretability"
"IBM/AIX360" -> "anguyen8/XAI-papers"
"IBM/AIX360" -> "jphall663/interpretable_machine_learning_with_python"
"IBM/AIX360" -> "dssg/aequitas"
"IBM/AIX360" -> "interpretml/DiCE"
"IBM/AIX360" -> "EthicalML/xai"
"IBM/AIX360" -> "TeamHG-Memex/eli5"
"dirty-cat/dirty_cat" -> "koaning/scikit-lego"
"dirty-cat/dirty_cat" -> "csinva/imodels"
"dirty-cat/dirty_cat" -> "scikit-learn-contrib/category_encoders"
"dirty-cat/dirty_cat" -> "koaning/doubtlab"
"dirty-cat/dirty_cat" -> "pandera-dev/pandera"
"dirty-cat/dirty_cat" -> "cod3licious/autofeat"
"dirty-cat/dirty_cat" -> "koaning/human-learn"
"dirty-cat/dirty_cat" -> "scikit-learn-contrib/MAPIE"
"dirty-cat/dirty_cat" -> "AutoViML/featurewiz"
"dirty-cat/dirty_cat" -> "AnotherSamWilson/miceforest"
"dirty-cat/dirty_cat" -> "WillianFuks/tfcausalimpact" ["e"=1]
"dirty-cat/dirty_cat" -> "Nixtla/statsforecast" ["e"=1]
"dirty-cat/dirty_cat" -> "cerlymarco/linear-tree"
"dirty-cat/dirty_cat" -> "cerlymarco/shap-hypetune"
"dirty-cat/dirty_cat" -> "tmadl/sklearn-expertsys"
"drivendataorg/competition-winners" -> "drivendataorg/power-laws-forecasting"
"drivendataorg/competition-winners" -> "drivendataorg/open-cities-ai-challenge"
"oneTaken/awesome_deep_learning_interpretability" -> "cfchen-duke/ProtoPNet" ["e"=1]
"oneTaken/awesome_deep_learning_interpretability" -> "wangyongjie-ntu/Awesome-explainable-AI"
"oneTaken/awesome_deep_learning_interpretability" -> "pbiecek/xai_resources"
"oneTaken/awesome_deep_learning_interpretability" -> "haofanwang/Score-CAM" ["e"=1]
"oneTaken/awesome_deep_learning_interpretability" -> "lopusz/awesome-interpretable-machine-learning"
"oneTaken/awesome_deep_learning_interpretability" -> "pytorch/captum" ["e"=1]
"oneTaken/awesome_deep_learning_interpretability" -> "zqs1022/interpretableCNN" ["e"=1]
"oneTaken/awesome_deep_learning_interpretability" -> "anguyen8/XAI-papers"
"oneTaken/awesome_deep_learning_interpretability" -> "jphall663/awesome-machine-learning-interpretability"
"oneTaken/awesome_deep_learning_interpretability" -> "marcoancona/DeepExplain" ["e"=1]
"oneTaken/awesome_deep_learning_interpretability" -> "facebookresearch/TorchRay" ["e"=1]
"oneTaken/awesome_deep_learning_interpretability" -> "MisaOgura/flashtorch" ["e"=1]
"oneTaken/awesome_deep_learning_interpretability" -> "Harry24k/adversarial-attacks-pytorch" ["e"=1]
"oneTaken/awesome_deep_learning_interpretability" -> "ankurtaly/Integrated-Gradients" ["e"=1]
"oneTaken/awesome_deep_learning_interpretability" -> "kundajelab/deeplift" ["e"=1]
"8080labs/pyforest" -> "ypeleg/HungaBunga"
"8080labs/pyforest" -> "tkrabel/bamboolib"
"8080labs/pyforest" -> "danijar/handout" ["e"=1]
"8080labs/pyforest" -> "8080labs/ppscore"
"8080labs/pyforest" -> "deepmind/bsuite" ["e"=1]
"8080labs/pyforest" -> "microsoft/hummingbird"
"8080labs/pyforest" -> "pandas-profiling/pandas-profiling"
"8080labs/pyforest" -> "nteract/papermill" ["e"=1]
"8080labs/pyforest" -> "TeamHG-Memex/eli5"
"8080labs/pyforest" -> "solegalli/feature_engine"
"8080labs/pyforest" -> "voila-dashboards/voila" ["e"=1]
"8080labs/pyforest" -> "modin-project/modin"
"8080labs/pyforest" -> "facebookresearch/hiplot"
"8080labs/pyforest" -> "quantopian/qgrid" ["e"=1]
"8080labs/pyforest" -> "jmcarpenter2/swifter"
"mitdbg/modeldb" -> "ucbrise/clipper"
"mitdbg/modeldb" -> "combust/mleap" ["e"=1]
"mitdbg/modeldb" -> "gojek/feast"
"mitdbg/modeldb" -> "dataversioncontrol/dvc"
"mitdbg/modeldb" -> "datmo/datmo"
"mitdbg/modeldb" -> "databricks/mlflow" ["e"=1]
"mitdbg/modeldb" -> "polyaxon/polyaxon"
"mitdbg/modeldb" -> "datascienceinc/Skater"
"mitdbg/modeldb" -> "studioml/studio"
"mitdbg/modeldb" -> "tensorflow/transform"
"mitdbg/modeldb" -> "TomAugspurger/engarde" ["e"=1]
"mitdbg/modeldb" -> "scikit-learn-contrib/categorical-encoding"
"mitdbg/modeldb" -> "mldbai/mldb"
"mitdbg/modeldb" -> "IBM/FfDL"
"mitdbg/modeldb" -> "SeldonIO/seldon-core"
"BinChengZhao/delay-timer" -> "bloodbath-io/bloodbath-ruby"
"BinChengZhao/delay-timer" -> "xMythic/Rust-recoil-macro-AK-"
"BinChengZhao/delay-timer" -> "ForetagInc/alchemy"
"BinChengZhao/delay-timer" -> "Infinity-Tech-inc/nifi-json-processor-bundle"
"BinChengZhao/delay-timer" -> "helloh2o/lucky"
"BinChengZhao/delay-timer" -> "coderitual/xna.js"
"BinChengZhao/delay-timer" -> "vahid-sohrabloo/chconn"
"BinChengZhao/delay-timer" -> "NasirMalik/Eris"
"BinChengZhao/delay-timer" -> "oslabs-beta/Kompass"
"BinChengZhao/delay-timer" -> "dmamontov/hass-miwifi"
"BinChengZhao/delay-timer" -> "Groestlcoin/electrum-grs"
"BinChengZhao/delay-timer" -> "Princeton-SysML/GradAttack"
"BinChengZhao/delay-timer" -> "anonrig/url-js"
"BinChengZhao/delay-timer" -> "GoMinerProxy/GoMinerProxy"
"BinChengZhao/delay-timer" -> "cniperbot/sniperbot"
"ForetagInc/alchemy" -> "bloodbath-io/bloodbath-ruby"
"GoMinerProxy/GoMinerProxy" -> "bloodbath-io/bloodbath-ruby"
"GoMinerProxy/GoMinerProxy" -> "xMythic/Rust-recoil-macro-AK-"
"GoMinerProxy/GoMinerProxy" -> "ForetagInc/alchemy"
"GoMinerProxy/GoMinerProxy" -> "Infinity-Tech-inc/nifi-json-processor-bundle"
"GoMinerProxy/GoMinerProxy" -> "helloh2o/lucky"
"GoMinerProxy/GoMinerProxy" -> "coderitual/xna.js"
"GoMinerProxy/GoMinerProxy" -> "vahid-sohrabloo/chconn"
"GoMinerProxy/GoMinerProxy" -> "oslabs-beta/Kompass"
"GoMinerProxy/GoMinerProxy" -> "NasirMalik/Eris"
"GoMinerProxy/GoMinerProxy" -> "Groestlcoin/electrum-grs"
"GoMinerProxy/GoMinerProxy" -> "dmamontov/hass-miwifi"
"GoMinerProxy/GoMinerProxy" -> "Princeton-SysML/GradAttack"
"GoMinerProxy/GoMinerProxy" -> "anonrig/url-js"
"GoMinerProxy/GoMinerProxy" -> "cniperbot/sniperbot"
"GoMinerProxy/GoMinerProxy" -> "BinChengZhao/delay-timer"
"Princeton-SysML/GradAttack" -> "bloodbath-io/bloodbath-ruby"
"Princeton-SysML/GradAttack" -> "xMythic/Rust-recoil-macro-AK-"
"Princeton-SysML/GradAttack" -> "ForetagInc/alchemy"
"Princeton-SysML/GradAttack" -> "Infinity-Tech-inc/nifi-json-processor-bundle"
"Princeton-SysML/GradAttack" -> "helloh2o/lucky"
"Princeton-SysML/GradAttack" -> "coderitual/xna.js"
"Princeton-SysML/GradAttack" -> "Groestlcoin/electrum-grs"
"Princeton-SysML/GradAttack" -> "vahid-sohrabloo/chconn"
"Princeton-SysML/GradAttack" -> "oslabs-beta/Kompass"
"Princeton-SysML/GradAttack" -> "NasirMalik/Eris"
"Princeton-SysML/GradAttack" -> "dmamontov/hass-miwifi"
"Princeton-SysML/GradAttack" -> "anonrig/url-js"
"Princeton-SysML/GradAttack" -> "GoMinerProxy/GoMinerProxy"
"Princeton-SysML/GradAttack" -> "cniperbot/sniperbot"
"Princeton-SysML/GradAttack" -> "BinChengZhao/delay-timer"
"anonrig/url-js" -> "bloodbath-io/bloodbath-ruby"
"anonrig/url-js" -> "xMythic/Rust-recoil-macro-AK-"
"anonrig/url-js" -> "ForetagInc/alchemy"
"anonrig/url-js" -> "Infinity-Tech-inc/nifi-json-processor-bundle"
"anonrig/url-js" -> "helloh2o/lucky"
"anonrig/url-js" -> "Etelis/Fortuna-FUD-Crypter"
"anonrig/url-js" -> "coderitual/xna.js"
"anonrig/url-js" -> "Groestlcoin/electrum-grs"
"anonrig/url-js" -> "vahid-sohrabloo/chconn"
"anonrig/url-js" -> "oslabs-beta/Kompass"
"anonrig/url-js" -> "NasirMalik/Eris"
"anonrig/url-js" -> "dmamontov/hass-miwifi"
"anonrig/url-js" -> "SolanaNFTCollector/Solana-Minting-Bot" ["e"=1]
"anonrig/url-js" -> "FaceOnLive/Pet-Recognition-Android-iOS" ["e"=1]
"anonrig/url-js" -> "Princeton-SysML/GradAttack"
"coderitual/xna.js" -> "bloodbath-io/bloodbath-ruby"
"coderitual/xna.js" -> "xMythic/Rust-recoil-macro-AK-"
"coderitual/xna.js" -> "ForetagInc/alchemy"
"coderitual/xna.js" -> "Infinity-Tech-inc/nifi-json-processor-bundle"
"coderitual/xna.js" -> "helloh2o/lucky"
"coderitual/xna.js" -> "Groestlcoin/electrum-grs"
"coderitual/xna.js" -> "oslabs-beta/Kompass"
"coderitual/xna.js" -> "vahid-sohrabloo/chconn"
"coderitual/xna.js" -> "NasirMalik/Eris"
"coderitual/xna.js" -> "dmamontov/hass-miwifi"
"coderitual/xna.js" -> "Princeton-SysML/GradAttack"
"coderitual/xna.js" -> "cniperbot/sniperbot"
"coderitual/xna.js" -> "anonrig/url-js"
"coderitual/xna.js" -> "I-H8-YOU/ABAP-Basic"
"coderitual/xna.js" -> "drewlong/gophish-ruby"
"dmamontov/hass-miwifi" -> "bloodbath-io/bloodbath-ruby"
"dmamontov/hass-miwifi" -> "xMythic/Rust-recoil-macro-AK-"
"dmamontov/hass-miwifi" -> "ForetagInc/alchemy"
"dmamontov/hass-miwifi" -> "Infinity-Tech-inc/nifi-json-processor-bundle"
"dmamontov/hass-miwifi" -> "helloh2o/lucky"
"dmamontov/hass-miwifi" -> "coderitual/xna.js"
"dmamontov/hass-miwifi" -> "Groestlcoin/electrum-grs"
"dmamontov/hass-miwifi" -> "oslabs-beta/Kompass"
"dmamontov/hass-miwifi" -> "vahid-sohrabloo/chconn"
"dmamontov/hass-miwifi" -> "NasirMalik/Eris"
"dmamontov/hass-miwifi" -> "Princeton-SysML/GradAttack"
"dmamontov/hass-miwifi" -> "anonrig/url-js"
"dmamontov/hass-miwifi" -> "GoMinerProxy/GoMinerProxy"
"dmamontov/hass-miwifi" -> "I-H8-YOU/ABAP-Basic"
"dmamontov/hass-miwifi" -> "cniperbot/sniperbot"
"enisn/AutoFilterer" -> "bloodbath-io/bloodbath-ruby"
"enisn/AutoFilterer" -> "xMythic/Rust-recoil-macro-AK-"
"enisn/AutoFilterer" -> "ForetagInc/alchemy"
"enisn/AutoFilterer" -> "Infinity-Tech-inc/nifi-json-processor-bundle"
"enisn/AutoFilterer" -> "helloh2o/lucky"
"enisn/AutoFilterer" -> "coderitual/xna.js"
"enisn/AutoFilterer" -> "oslabs-beta/Kompass"
"enisn/AutoFilterer" -> "vahid-sohrabloo/chconn"
"enisn/AutoFilterer" -> "NasirMalik/Eris"
"enisn/AutoFilterer" -> "dmamontov/hass-miwifi"
"enisn/AutoFilterer" -> "Groestlcoin/electrum-grs"
"enisn/AutoFilterer" -> "Princeton-SysML/GradAttack"
"enisn/AutoFilterer" -> "anonrig/url-js"
"enisn/AutoFilterer" -> "GoMinerProxy/GoMinerProxy"
"enisn/AutoFilterer" -> "cniperbot/sniperbot"
"helloh2o/lucky" -> "bloodbath-io/bloodbath-ruby"
"helloh2o/lucky" -> "xMythic/Rust-recoil-macro-AK-"
"helloh2o/lucky" -> "ForetagInc/alchemy"
"helloh2o/lucky" -> "Infinity-Tech-inc/nifi-json-processor-bundle"
"helloh2o/lucky" -> "Groestlcoin/electrum-grs"
"helloh2o/lucky" -> "coderitual/xna.js"
"helloh2o/lucky" -> "oslabs-beta/Kompass"
"helloh2o/lucky" -> "vahid-sohrabloo/chconn"
"helloh2o/lucky" -> "NasirMalik/Eris"
"helloh2o/lucky" -> "dmamontov/hass-miwifi"
"helloh2o/lucky" -> "Princeton-SysML/GradAttack"
"oslabs-beta/Kompass" -> "bloodbath-io/bloodbath-ruby"
"oslabs-beta/Kompass" -> "xMythic/Rust-recoil-macro-AK-"
"oslabs-beta/Kompass" -> "ForetagInc/alchemy"
"vahid-sohrabloo/chconn" -> "bloodbath-io/bloodbath-ruby"
"vahid-sohrabloo/chconn" -> "xMythic/Rust-recoil-macro-AK-"
"vahid-sohrabloo/chconn" -> "ForetagInc/alchemy"
"vahid-sohrabloo/chconn" -> "Infinity-Tech-inc/nifi-json-processor-bundle"
"vahid-sohrabloo/chconn" -> "helloh2o/lucky"
"vahid-sohrabloo/chconn" -> "Groestlcoin/electrum-grs"
"vahid-sohrabloo/chconn" -> "coderitual/xna.js"
"vahid-sohrabloo/chconn" -> "oslabs-beta/Kompass"
"vahid-sohrabloo/chconn" -> "NasirMalik/Eris"
"vahid-sohrabloo/chconn" -> "dmamontov/hass-miwifi"
"vahid-sohrabloo/chconn" -> "Princeton-SysML/GradAttack"
"vahid-sohrabloo/chconn" -> "anonrig/url-js"
"vahid-sohrabloo/chconn" -> "I-H8-YOU/ABAP-Basic"
"vahid-sohrabloo/chconn" -> "GoMinerProxy/GoMinerProxy"
"vahid-sohrabloo/chconn" -> "drewlong/gophish-ruby"
"whylabs/whylogs" -> "bloodbath-io/bloodbath-ruby"
"whylabs/whylogs" -> "xMythic/Rust-recoil-macro-AK-"
"whylabs/whylogs" -> "ForetagInc/alchemy"
"whylabs/whylogs" -> "Infinity-Tech-inc/nifi-json-processor-bundle"
"whylabs/whylogs" -> "helloh2o/lucky"
"whylabs/whylogs" -> "coderitual/xna.js"
"whylabs/whylogs" -> "NasirMalik/Eris"
"whylabs/whylogs" -> "vahid-sohrabloo/chconn"
"whylabs/whylogs" -> "dmamontov/hass-miwifi"
"whylabs/whylogs" -> "Princeton-SysML/GradAttack"
"whylabs/whylogs" -> "oslabs-beta/Kompass"
"whylabs/whylogs" -> "anonrig/url-js"
"whylabs/whylogs" -> "GoMinerProxy/GoMinerProxy"
"whylabs/whylogs" -> "cniperbot/sniperbot"
"whylabs/whylogs" -> "BinChengZhao/delay-timer"
"tensorflow/model-analysis" -> "tensorflow/data-validation"
"tensorflow/model-analysis" -> "tensorflow/transform"
"tensorflow/model-analysis" -> "tensorflow/tfx"
"tensorflow/model-analysis" -> "oracle/graphpipe"
"tensorflow/model-analysis" -> "MagNet-DL/magnet"
"tensorflow/model-analysis" -> "csxeba/evolute"
"tensorflow/model-analysis" -> "salesforce/TransmogrifAI"
"tensorflow/model-analysis" -> "tensorflow/model-optimization"
"tensorflow/model-analysis" -> "tensorflow/metadata"
"tensorflow/model-analysis" -> "tensorflow/estimator"
"tensorflow/model-analysis" -> "tensorflow/fairness-indicators"
"tensorflow/model-analysis" -> "tensorflow/serving"
"tensorflow/model-analysis" -> "tensorflow/adanet"
"tensorflow/model-analysis" -> "tensorflow/hub"
"tensorflow/model-analysis" -> "tensorflow/probability"
"Ekeany/Boruta-Shap" -> "scikit-learn-contrib/boruta_py"
"Ekeany/Boruta-Shap" -> "cerlymarco/shap-hypetune"
"Ekeany/Boruta-Shap" -> "EpistasisLab/scikit-rebate"
"Ekeany/Boruta-Shap" -> "aerdem4/lofo-importance"
"Ekeany/Boruta-Shap" -> "AutoViML/featurewiz"
"Ekeany/Boruta-Shap" -> "cod3licious/autofeat"
"Ekeany/Boruta-Shap" -> "scikit-learn-contrib/MAPIE"
"Ekeany/Boruta-Shap" -> "kaushalshetty/FeatureSelectionGA"
"Ekeany/Boruta-Shap" -> "scikit-learn-contrib/DESlib"
"Ekeany/Boruta-Shap" -> "manuel-calzolari/sklearn-genetic"
"Ekeany/Boruta-Shap" -> "ctlab/ITMO_FS"
"Ekeany/Boruta-Shap" -> "feature-engine/feature_engine"
"Ekeany/Boruta-Shap" -> "tblume1992/ThymeBoost"
"Ekeany/Boruta-Shap" -> "solegalli/feature_engine"
"Ekeany/Boruta-Shap" -> "WenjieZ/TSCV" ["e"=1]
"EthicalML/xai" -> "pbiecek/xai_resources"
"EthicalML/xai" -> "Trusted-AI/AIX360"
"EthicalML/xai" -> "jphall663/awesome-machine-learning-interpretability"
"EthicalML/xai" -> "SeldonIO/alibi"
"EthicalML/xai" -> "lopusz/awesome-interpretable-machine-learning"
"EthicalML/xai" -> "wangyongjie-ntu/Awesome-explainable-AI"
"EthicalML/xai" -> "EthicalML/awesome-artificial-intelligence-guidelines"
"EthicalML/xai" -> "h2oai/mli-resources"
"EthicalML/xai" -> "explainX/explainx"
"EthicalML/xai" -> "ModelOriented/DALEX"
"EthicalML/xai" -> "oracle/Skater"
"EthicalML/xai" -> "jphall663/interpretable_machine_learning_with_python"
"EthicalML/xai" -> "interpretml/DiCE"
"EthicalML/xai" -> "interpretml/interpret"
"EthicalML/xai" -> "dssg/aequitas"
"vivekratnavel/omniboard" -> "IDSIA/sacred"
"vivekratnavel/omniboard" -> "chovanecm/sacredboard"
"vivekratnavel/omniboard" -> "JarnoRFB/incense"
"vivekratnavel/omniboard" -> "yuvalatzmon/SACRED_HyperOpt_v2"
"vivekratnavel/omniboard" -> "guildai/guildai"
"kubeflow/kfserving" -> "kubeflow/katib"
"kubeflow/kfserving" -> "kubeflow/pipelines"
"kubeflow/kfserving" -> "SeldonIO/seldon-core"
"kubeflow/kfserving" -> "kubeflow-kale/kale"
"kubeflow/kfserving" -> "kubeflow/tf-operator" ["e"=1]
"kubeflow/kfserving" -> "kubeflow/examples" ["e"=1]
"kubeflow/kfserving" -> "kubeflow/fairing"
"kubeflow/kfserving" -> "kubeflow/manifests"
"kubeflow/kfserving" -> "kubeflow/kubeflow"
"kubeflow/kfserving" -> "NVIDIA/k8s-device-plugin" ["e"=1]
"kubeflow/kfserving" -> "kubernetes-sigs/kube-batch" ["e"=1]
"kubeflow/kfserving" -> "kubeflow/arena" ["e"=1]
"kubeflow/kfserving" -> "pytorch/elastic"
"kubeflow/kfserving" -> "feast-dev/feast"
"kubeflow/kfserving" -> "triton-inference-server/server" ["e"=1]
"jundongl/scikit-feature" -> "duxuhao/Feature-Selection"
"jundongl/scikit-feature" -> "scikit-learn-contrib/boruta_py"
"jundongl/scikit-feature" -> "danielhomola/mifs"
"jundongl/scikit-feature" -> "EpistasisLab/scikit-rebate"
"jundongl/scikit-feature" -> "kaushalshetty/FeatureSelectionGA"
"jundongl/scikit-feature" -> "reiinakano/scikit-plot"
"jundongl/scikit-feature" -> "Yimeng-Zhang/feature-engineering-and-feature-selection"
"jundongl/scikit-feature" -> "hyperopt/hyperopt-sklearn"
"jundongl/scikit-feature" -> "rasbt/mlxtend"
"jundongl/scikit-feature" -> "rhiever/tpot"
"jundongl/scikit-feature" -> "scikit-optimize/scikit-optimize"
"jundongl/scikit-feature" -> "manuel-calzolari/sklearn-genetic"
"jundongl/scikit-feature" -> "TeamHG-Memex/eli5"
"jundongl/scikit-feature" -> "WillKoehrsen/feature-selector"
"jundongl/scikit-feature" -> "scikit-learn-contrib/categorical-encoding"
"ironmussa/Optimus" -> "MrPowers/quinn" ["e"=1]
"ironmussa/Optimus" -> "databricks/koalas"
"ironmussa/Optimus" -> "lensacom/sparkit-learn" ["e"=1]
"ironmussa/Optimus" -> "Featuretools/featuretools"
"ironmussa/Optimus" -> "databricks/spark-deep-learning" ["e"=1]
"ironmussa/Optimus" -> "julioasotodv/spark-df-profiling"
"ironmussa/Optimus" -> "datascienceinc/Skater"
"ironmussa/Optimus" -> "ironmussa/Bumblebee"
"ironmussa/Optimus" -> "maxpumperla/elephas" ["e"=1]
"ironmussa/Optimus" -> "FavioVazquez/kaggle-learning"
"ironmussa/Optimus" -> "spotify/chartify"
"ironmussa/Optimus" -> "awesome-spark/awesome-spark" ["e"=1]
"ironmussa/Optimus" -> "ericmjl/pyjanitor" ["e"=1]
"ironmussa/Optimus" -> "scikit-learn-contrib/boruta_py"
"ironmussa/Optimus" -> "Azure/mmlspark" ["e"=1]
"uber/fiber" -> "uber/neuropod"
"uber/fiber" -> "uber/petastorm"
"uber/fiber" -> "deepmind/reverb" ["e"=1]
"uber/fiber" -> "lyft/flyte"
"uber/fiber" -> "uber/manifold"
"uber/fiber" -> "google/ml-metadata"
"uber/fiber" -> "SeldonIO/seldon-core"
"uber/fiber" -> "uber-research/poet" ["e"=1]
"uber/fiber" -> "uber/bayesmark"
"uber/fiber" -> "microsoft/hummingbird"
"uber/fiber" -> "kubeflow/katib"
"uber/fiber" -> "awslabs/multi-model-server" ["e"=1]
"uber/fiber" -> "deepmind/bsuite" ["e"=1]
"uber/fiber" -> "kubeflow/mpi-operator" ["e"=1]
"uber/fiber" -> "tensorflow/model-card-toolkit"
"stanfordmlgroup/ngboost" -> "StatMixedML/XGBoostLSS"
"stanfordmlgroup/ngboost" -> "scikit-learn-contrib/boruta_py"
"stanfordmlgroup/ngboost" -> "fabsig/GPBoost"
"stanfordmlgroup/ngboost" -> "scikit-learn-contrib/category_encoders"
"stanfordmlgroup/ngboost" -> "scikit-learn-contrib/MAPIE"
"stanfordmlgroup/ngboost" -> "uber/orbit" ["e"=1]
"stanfordmlgroup/ngboost" -> "quantumblacklabs/causalnex" ["e"=1]
"stanfordmlgroup/ngboost" -> "Ekeany/Boruta-Shap"
"stanfordmlgroup/ngboost" -> "dreamquark-ai/tabnet" ["e"=1]
"stanfordmlgroup/ngboost" -> "uber/causalml" ["e"=1]
"stanfordmlgroup/ngboost" -> "csinva/imodels"
"stanfordmlgroup/ngboost" -> "aerdem4/lofo-importance"
"stanfordmlgroup/ngboost" -> "manujosephv/pytorch_tabular" ["e"=1]
"stanfordmlgroup/ngboost" -> "koaning/scikit-lego"
"stanfordmlgroup/ngboost" -> "MAIF/shapash"
"HDI-Project/ATM" -> "HDI-Project/BTB"
"HDI-Project/ATM" -> "HDI-Project/ATMSeer"
"HDI-Project/ATM" -> "HDI-Project/FeatureHub"
"HDI-Project/ATM" -> "HDI-Project/MLBlocks"
"HDI-Project/ATM" -> "ClimbsRocks/auto_ml"
"HDI-Project/ATM" -> "Featuretools/featuretools"
"HDI-Project/ATM" -> "HDI-Project/MLPrimitives"
"HDI-Project/ATM" -> "AxeldeRomblay/MLBox"
"HDI-Project/ATM" -> "HDI-Project/SDV"
"HDI-Project/ATM" -> "h2oai/mli-resources"
"HDI-Project/ATM" -> "automl/HpBandSter"
"HDI-Project/ATM" -> "openml/automlbenchmark"
"HDI-Project/ATM" -> "HDI-Project/RDT"
"salesforce/OmniXAI" -> "interpretml/DiCE"
"salesforce/OmniXAI" -> "Trusted-AI/AIX360"
"salesforce/OmniXAI" -> "deel-ai/xplique"
"salesforce/OmniXAI" -> "carla-recourse/CARLA"
"salesforce/OmniXAI" -> "SeldonIO/alibi"
"salesforce/OmniXAI" -> "csinva/imodels"
"salesforce/OmniXAI" -> "SelfExplainML/PiML-Toolbox"
"salesforce/OmniXAI" -> "salesforce/Merlion" ["e"=1]
"salesforce/OmniXAI" -> "wangyongjie-ntu/Awesome-explainable-AI"
"salesforce/OmniXAI" -> "scikit-learn-contrib/MAPIE"
"salesforce/OmniXAI" -> "linkedin/FastTreeSHAP"
"salesforce/OmniXAI" -> "interpretml/interpret"
"salesforce/OmniXAI" -> "salesforce/botsim"
"salesforce/OmniXAI" -> "facebookresearch/balance"
"salesforce/OmniXAI" -> "interpretml/interpret-text"
"ydataai/awesome-data-centric-ai" -> "ydataai/academy"
"nicodv/kmodes" -> "MaxHalford/prince"
"nicodv/kmodes" -> "scikit-learn-contrib/hdbscan"
"nicodv/kmodes" -> "rasbt/mlxtend"
"nicodv/kmodes" -> "scikit-learn-contrib/boruta_py"
"nicodv/kmodes" -> "DistrictDataLabs/yellowbrick"
"nicodv/kmodes" -> "reiinakano/scikit-plot"
"nicodv/kmodes" -> "scikit-optimize/scikit-optimize"
"nicodv/kmodes" -> "scikit-learn-contrib/sklearn-pandas"
"nicodv/kmodes" -> "TeamHG-Memex/eli5"
"nicodv/kmodes" -> "scikit-learn-contrib/category_encoders"
"nicodv/kmodes" -> "jmcarpenter2/swifter"
"nicodv/kmodes" -> "scikit-learn-contrib/imbalanced-learn"
"nicodv/kmodes" -> "annoviko/pyclustering"
"nicodv/kmodes" -> "bmabey/pyLDAvis" ["e"=1]
"nicodv/kmodes" -> "scikit-learn-contrib/categorical-encoding"
"jaberg/hyperopt" -> "JasperSnoek/spearmint"
"jaberg/hyperopt" -> "HIPS/Spearmint"
"jaberg/hyperopt" -> "uoguelph-mlrg/theano_alexnet" ["e"=1]
"jaberg/hyperopt" -> "hyperopt/hyperopt"
"jaberg/hyperopt" -> "Yelp/MOE"
"jaberg/hyperopt" -> "claesenm/optunity"
"jaberg/hyperopt" -> "automl/RoBO"
"jaberg/hyperopt" -> "dnouri/nolearn" ["e"=1]
"jaberg/hyperopt" -> "benanne/morb" ["e"=1]
"jaberg/hyperopt" -> "hyperopt/hyperopt-sklearn"
"jaberg/hyperopt" -> "automl/SMAC3"
"jaberg/hyperopt" -> "mwhoffman/pybo"
"jaberg/hyperopt" -> "zygmuntz/hyperband"
"jaberg/hyperopt" -> "tobegit3hub/advisor"
"jaberg/hyperopt" -> "lisa-lab/pylearn2" ["e"=1]
"rapidsai/notebooks" -> "rapidsai-community/notebooks-contrib"
"rapidsai/notebooks" -> "rapidsai/notebooks-extended"
"rapidsai/notebooks" -> "rapidsai/notebooks-contrib"
"rapidsai/notebooks" -> "rapidsai/dask-cudf"
"rapidsai/notebooks" -> "rapidsai/cuxfilter"
"rapidsai/notebooks" -> "rapidsai/cuml"
"rapidsai/notebooks" -> "rapidsai/cugraph"
"rapidsai/notebooks" -> "rapidsai/cudf"
"rapidsai/notebooks" -> "rapidsai/gQuant"
"rapidsai/notebooks" -> "rapidsai/cuspatial"
"rapidsai/notebooks" -> "rapidsai/rmm" ["e"=1]
"rapidsai/notebooks" -> "rapidsai/dask-cuda"
"rapidsai/notebooks" -> "BlazingDB/blazingsql"
"rapidsai/notebooks" -> "rapidsai/cloud-ml-examples"
"Trusted-AI/AIF360" -> "Trusted-AI/AIX360"
"Trusted-AI/AIF360" -> "fairlearn/fairlearn"
"Trusted-AI/AIF360" -> "dssg/aequitas"
"Trusted-AI/AIF360" -> "Trusted-AI/adversarial-robustness-toolbox" ["e"=1]
"Trusted-AI/AIF360" -> "datamllab/awesome-fairness-in-ai"
"Trusted-AI/AIF360" -> "interpretml/DiCE"
"Trusted-AI/AIF360" -> "mbilalzafar/fair-classification"
"Trusted-AI/AIF360" -> "SeldonIO/alibi"
"Trusted-AI/AIF360" -> "PAIR-code/what-if-tool"
"Trusted-AI/AIF360" -> "interpretml/interpret"
"Trusted-AI/AIF360" -> "google/ml-fairness-gym"
"Trusted-AI/AIF360" -> "algofairness/fairness-comparison"
"Trusted-AI/AIF360" -> "csinva/imodels"
"Trusted-AI/AIF360" -> "EthicalML/awesome-artificial-intelligence-guidelines"
"Trusted-AI/AIF360" -> "uclanlp/awesome-fairness-papers"
"fairlearn/fairlearn" -> "Trusted-AI/AIF360"
"fairlearn/fairlearn" -> "interpretml/interpret"
"fairlearn/fairlearn" -> "interpretml/interpret-community"
"fairlearn/fairlearn" -> "dssg/aequitas"
"fairlearn/fairlearn" -> "microsoft/responsible-ai-widgets"
"fairlearn/fairlearn" -> "interpretml/DiCE"
"fairlearn/fairlearn" -> "mbilalzafar/fair-classification"
"fairlearn/fairlearn" -> "SeldonIO/alibi"
"fairlearn/fairlearn" -> "EthicalML/xai"
"fairlearn/fairlearn" -> "PAIR-code/what-if-tool"
"fairlearn/fairlearn" -> "SeldonIO/alibi-detect"
"fairlearn/fairlearn" -> "microsoft/MLOpsPython" ["e"=1]
"fairlearn/fairlearn" -> "microsoft/responsible-ai-toolbox"
"fairlearn/fairlearn" -> "propublica/compas-analysis"
"fairlearn/fairlearn" -> "Trusted-AI/AIX360"
"google/ml-fairness-gym" -> "algofairness/fairness-comparison"
"google/ml-fairness-gym" -> "mbilalzafar/fair-classification"
"google/ml-fairness-gym" -> "tensorflow/fairness-indicators"
"google/ml-fairness-gym" -> "dssg/aequitas"
"google/ml-fairness-gym" -> "zykls/folktables"
"alipsgh/tornado" -> "ogozuacik/d3-discriminative-drift-detector-concept-drift"
"alipsgh/tornado" -> "denismr/incremental-ks"
"alipsgh/tornado" -> "alipsgh/data_streams"
"alipsgh/tornado" -> "blablahaha/concept-drift"
"alipsgh/tornado" -> "vlosing/driftDatasets"
"alipsgh/tornado" -> "alipsgh/data-streams"
"MaxHalford/prince" -> "esafak/mca"
"MaxHalford/prince" -> "Ekeany/Boruta-Shap"
"MaxHalford/prince" -> "nicodv/kmodes"
"MaxHalford/prince" -> "shakedzy/dython"
"MaxHalford/prince" -> "scikit-learn-contrib/boruta_py"
"MaxHalford/prince" -> "iskandr/fancyimpute"
"MaxHalford/prince" -> "raphaelvallat/pingouin"
"MaxHalford/prince" -> "scikit-learn-contrib/category_encoders"
"MaxHalford/prince" -> "koaning/scikit-lego"
"MaxHalford/prince" -> "scikit-learn-contrib/skope-rules"
"MaxHalford/prince" -> "EducationalTestingService/factor_analyzer"
"MaxHalford/prince" -> "DistrictDataLabs/yellowbrick"
"MaxHalford/prince" -> "MaxHalford/xam"
"MaxHalford/prince" -> "alkaline-ml/pmdarima" ["e"=1]
"MaxHalford/prince" -> "feature-engine/feature_engine"
"bayesoptbook/bayesoptbook.github.io" -> "krasserm/bayesian-machine-learning"
"bayesoptbook/bayesoptbook.github.io" -> "pytorch/botorch"
"bayesoptbook/bayesoptbook.github.io" -> "probml/pml2-book"
"bayesoptbook/bayesoptbook.github.io" -> "janosh/awesome-normalizing-flows" ["e"=1]
"bayesoptbook/bayesoptbook.github.io" -> "storopoli/Bayesian-Statistics"
"bayesoptbook/bayesoptbook.github.io" -> "nnaisense/evotorch" ["e"=1]
"bayesoptbook/bayesoptbook.github.io" -> "GPflow/GPflow"
"bayesoptbook/bayesoptbook.github.io" -> "bayesiains/nflows" ["e"=1]
"bayesoptbook/bayesoptbook.github.io" -> "pnkraemer/tueplots" ["e"=1]
"gpstuff-dev/gpstuff" -> "SheffieldML/multigp"
"gpstuff-dev/gpstuff" -> "SheffieldML/deepGP"
"gpstuff-dev/gpstuff" -> "Magica-Chen/gptp_multi_output"
"BlazingDB/blazingsql" -> "nils-braun/dask-sql"
"BlazingDB/blazingsql" -> "rapidsai/cudf"
"BlazingDB/blazingsql" -> "omnisci/omniscidb" ["e"=1]
"BlazingDB/blazingsql" -> "NVIDIA/spark-rapids" ["e"=1]
"BlazingDB/blazingsql" -> "rapidsai/cuspatial"
"BlazingDB/blazingsql" -> "rapidsai/notebooks"
"BlazingDB/blazingsql" -> "rapidsai/cugraph"
"BlazingDB/blazingsql" -> "rapidsai/rmm" ["e"=1]
"BlazingDB/blazingsql" -> "apache/arrow-datafusion" ["e"=1]
"BlazingDB/blazingsql" -> "NVIDIA/NVTabular" ["e"=1]
"BlazingDB/blazingsql" -> "apache/arrow-rs" ["e"=1]
"BlazingDB/blazingsql" -> "heterodb/pg-strom" ["e"=1]
"BlazingDB/blazingsql" -> "ibis-project/ibis" ["e"=1]
"BlazingDB/blazingsql" -> "rapidsai/ucx-py" ["e"=1]
"BlazingDB/blazingsql" -> "fugue-project/fugue"
"rapidsai/cuxfilter" -> "rapidsai/cuDataShader"
"rapidsai/cuxfilter" -> "rapidsai/tpcx-bb"
"rapidsai/cuxfilter" -> "trxcllnt/ubuntu-setup" ["e"=1]
"Microsoft/pai" -> "Microsoft/nni"
"Microsoft/pai" -> "Microsoft/vs-tools-for-ai"
"Microsoft/pai" -> "Microsoft/frameworkcontroller"
"Microsoft/pai" -> "medic/medic-webapp" ["e"=1]
"Microsoft/pai" -> "Microsoft/MMdnn" ["e"=1]
"Microsoft/pai" -> "GenericMappingTools/gmt" ["e"=1]
"Microsoft/pai" -> "Microsoft/vscode-arduino"
"Microsoft/pai" -> "Microsoft/vscode-tools-for-ai"
"Microsoft/pai" -> "bytedance/byteps" ["e"=1]
"Microsoft/pai" -> "NVIDIA/k8s-device-plugin" ["e"=1]
"Microsoft/pai" -> "microsoft/nnfusion" ["e"=1]
"Microsoft/pai" -> "performous/performous" ["e"=1]
"Microsoft/pai" -> "facelessuser/soupsieve" ["e"=1]
"Microsoft/pai" -> "Qihoo360/XLearning" ["e"=1]
"Microsoft/pai" -> "NVIDIA/gdrcopy" ["e"=1]
"microsoft/DiCE" -> "amirhk/mace"
"microsoft/DiCE" -> "h2oai/mli-resources"
"microsoft/FLAML" -> "mljar/mljar-supervised"
"microsoft/FLAML" -> "online-ml/river"
"microsoft/FLAML" -> "deepchecks/deepchecks"
"microsoft/FLAML" -> "pycaret/pycaret"
"microsoft/FLAML" -> "salesforce/Merlion" ["e"=1]
"microsoft/FLAML" -> "facebookresearch/Kats" ["e"=1]
"microsoft/FLAML" -> "optuna/optuna"
"microsoft/FLAML" -> "MAIF/shapash"
"microsoft/FLAML" -> "alteryx/featuretools"
"microsoft/FLAML" -> "evidentlyai/evidently"
"microsoft/FLAML" -> "interpretml/interpret"
"microsoft/FLAML" -> "timeseriesAI/tsai" ["e"=1]
"microsoft/FLAML" -> "unit8co/darts" ["e"=1]
"microsoft/FLAML" -> "SeldonIO/alibi-detect"
"microsoft/FLAML" -> "uber/orbit" ["e"=1]
"fbrundu/pymrmr" -> "danielhomola/mifs"
"flennerhag/mlens" -> "vecxoz/vecstack" ["e"=1]
"flennerhag/mlens" -> "scikit-learn-contrib/DESlib"
"flennerhag/mlens" -> "reiinakano/xcessiv"
"flennerhag/mlens" -> "rasbt/mlxtend"
"flennerhag/mlens" -> "scikit-learn-contrib/forest-confidence-interval"
"flennerhag/mlens" -> "scikit-learn-contrib/categorical-encoding"
"flennerhag/mlens" -> "rushter/heamy" ["e"=1]
"flennerhag/mlens" -> "scikit-learn-contrib/boruta_py"
"flennerhag/mlens" -> "TeamHG-Memex/eli5"
"flennerhag/mlens" -> "reiinakano/scikit-plot"
"flennerhag/mlens" -> "scikit-optimize/scikit-optimize"
"flennerhag/mlens" -> "kaz-Anova/StackNet" ["e"=1]
"flennerhag/mlens" -> "EpistasisLab/scikit-rebate"
"flennerhag/mlens" -> "scikit-learn-contrib/skope-rules"
"flennerhag/mlens" -> "dmbee/seglearn" ["e"=1]
"joeddav/devol" -> "reiinakano/xcessiv"
"joeddav/devol" -> "ClimbsRocks/auto_ml"
"joeddav/devol" -> "uber-common/deep-neuroevolution" ["e"=1]
"joeddav/devol" -> "harvitronix/neural-network-genetic-algorithm" ["e"=1]
"joeddav/devol" -> "rhiever/tpot"
"joeddav/devol" -> "bstriner/keras-adversarial" ["e"=1]
"joeddav/devol" -> "jliphard/DeepEvolve" ["e"=1]
"joeddav/devol" -> "maxpumperla/hyperas"
"joeddav/devol" -> "ianwhale/nsga-net" ["e"=1]
"joeddav/devol" -> "bioinf-jku/SNNs" ["e"=1]
"joeddav/devol" -> "aqibsaeed/Genetic-CNN" ["e"=1]
"joeddav/devol" -> "matthiasplappert/keras-rl" ["e"=1]
"joeddav/devol" -> "guybedo/minos"
"joeddav/devol" -> "trevorstephens/gplearn"
"joeddav/devol" -> "EpistasisLab/scikit-rebate"
"mm-mansour/Fast-Pandas" -> "Prodicode/ann-visualizer"
"mm-mansour/Fast-Pandas" -> "dfouhey/caffe64"
"mm-mansour/Fast-Pandas" -> "henripal/labnotebook"
"mm-mansour/Fast-Pandas" -> "kennethreitz/twitter-scraper" ["e"=1]
"mm-mansour/Fast-Pandas" -> "alexmojaki/birdseye" ["e"=1]
"mm-mansour/Fast-Pandas" -> "minimaxir/person-blocker"
"mm-mansour/Fast-Pandas" -> "kkyon/botflow" ["e"=1]
"mm-mansour/Fast-Pandas" -> "ContextLab/hypertools"
"mm-mansour/Fast-Pandas" -> "orsinium/textdistance" ["e"=1]
"mm-mansour/Fast-Pandas" -> "dataversioncontrol/dvc"
"mm-mansour/Fast-Pandas" -> "instacart/lore"
"mm-mansour/Fast-Pandas" -> "spotify/chartify"
"mm-mansour/Fast-Pandas" -> "Squarespace/datasheets" ["e"=1]
"mm-mansour/Fast-Pandas" -> "Featuretools/featuretools"
"mm-mansour/Fast-Pandas" -> "reiinakano/scikit-plot"
"automl/HpBandSter" -> "automl/SMAC3"
"automl/HpBandSter" -> "automl/ConfigSpace"
"automl/HpBandSter" -> "automl/RoBO"
"automl/HpBandSter" -> "zygmuntz/hyperband"
"automl/HpBandSter" -> "automl/BOAH"
"automl/HpBandSter" -> "automl/nas_benchmarks" ["e"=1]
"automl/HpBandSter" -> "google-research/nasbench" ["e"=1]
"automl/HpBandSter" -> "automl/CAVE"
"automl/HpBandSter" -> "dragonfly/dragonfly"
"automl/HpBandSter" -> "automl/NASLib" ["e"=1]
"automl/HpBandSter" -> "SheffieldML/GPyOpt"
"automl/HpBandSter" -> "automl/HPOBench"
"automl/HpBandSter" -> "automl/Auto-PyTorch" ["e"=1]
"automl/HpBandSter" -> "automl/HPOlib2"
"automl/HpBandSter" -> "automl/pybnn"
"glederrey/EPFL_thesis_template" -> "HexHive/thesis_template"
"dask/dask-docker" -> "dask/helm-chart"
"dask/dask-docker" -> "dask/dask-cloudprovider"
"dask/dask-docker" -> "dask/dask-kubernetes"
"zi-w/Max-value-Entropy-Search" -> "zi-w/Structural-Kernel-Learning-for-HDBBO"
"zi-w/Max-value-Entropy-Search" -> "ProbabilisticNumerics/entropy-search"
"ziyuw/rembo" -> "facebookresearch/alebo"
"ziyuw/rembo" -> "aminnayebi/HesBO"
"ziyuw/rembo" -> "zi-w/Structural-Kernel-Learning-for-HDBBO"
"WillKoehrsen/automated-feature-engineering" -> "WillKoehrsen/feature-selector"
"WillKoehrsen/automated-feature-engineering" -> "Featuretools/Automated-Manual-Comparison"
"WillKoehrsen/automated-feature-engineering" -> "WillKoehrsen/hyperparameter-optimization"
"WillKoehrsen/automated-feature-engineering" -> "WillKoehrsen/machine-learning-project-walkthrough" ["e"=1]
"WillKoehrsen/automated-feature-engineering" -> "boredbird/woe" ["e"=1]
"WillKoehrsen/automated-feature-engineering" -> "Featuretools/featuretools"
"WillKoehrsen/automated-feature-engineering" -> "apachecn/feature-engineering-for-ml-zh" ["e"=1]
"WillKoehrsen/automated-feature-engineering" -> "dayeren/Kaggle_Competition_Treasure" ["e"=1]
"WillKoehrsen/automated-feature-engineering" -> "wepe/PPD_RiskControlCompetition" ["e"=1]
"WillKoehrsen/automated-feature-engineering" -> "PacktPublishing/Feature-Engineering-Made-Easy"
"WillKoehrsen/automated-feature-engineering" -> "FeatureLabs/featuretools"
"rmcantin/bayesopt" -> "resibots/limbo"
"rmcantin/bayesopt" -> "wujian16/Cornell-MOE"
"rmcantin/bayesopt" -> "claesenm/optunity"
"rmcantin/bayesopt" -> "jbrea/BayesianOptimization.jl" ["e"=1]
"rmcantin/bayesopt" -> "SheffieldML/GPyOpt"
"rmcantin/bayesopt" -> "aminnayebi/HesBO"
"algofairness/BlackBoxAuditing" -> "algofairness/fairness-comparison"
"algofairness/BlackBoxAuditing" -> "adebayoj/fairml"
"algofairness/BlackBoxAuditing" -> "geomblog/fairness"
"scikit-learn-contrib/stability-selection" -> "EpistasisLab/scikit-rebate"
"scikit-learn-contrib/stability-selection" -> "scikit-learn-contrib/polylearn"
"scikit-learn-contrib/stability-selection" -> "scikit-learn-contrib/boruta_py"
"scikit-learn-contrib/stability-selection" -> "scikit-learn-contrib/DESlib"
"scikit-learn-contrib/stability-selection" -> "scikit-learn-contrib/forest-confidence-interval"
"tensorflow/cloud" -> "tensorflow/tfx"
"tensorflow/cloud" -> "google/tensorflow-recorder"
"uber/neuropod" -> "uber/fiber"
"uber/neuropod" -> "microsoft/hummingbird"
"uber/neuropod" -> "pytorch/elastic"
"uber/neuropod" -> "NVIDIA/triton-inference-server"
"uber/neuropod" -> "uber/petastorm"
"uber/neuropod" -> "tensorflow/runtime" ["e"=1]
"uber/neuropod" -> "NVIDIA/TRTorch" ["e"=1]
"uber/neuropod" -> "neo-ai/neo-ai-dlr" ["e"=1]
"uber/neuropod" -> "pytorch/tvm" ["e"=1]
"uber/neuropod" -> "lyft/flyte"
"uber/neuropod" -> "iterative/cml"
"Ibotta/sk-dist" -> "joblib/joblib-spark"
"uber-research/TuRBO" -> "zi-w/Ensemble-Bayesian-Optimization"
"uber-research/TuRBO" -> "facebookresearch/alebo"
"uber-research/TuRBO" -> "uber/bayesmark"
"uber-research/TuRBO" -> "daxiongshu/rapids-ai-BBO-2nd-place-solution"
"uber-research/TuRBO" -> "aminnayebi/HesBO"
"uber-research/TuRBO" -> "rdturnermtl/bbo_challenge_starter_kit"
"uber-research/TuRBO" -> "ChangYong-Oh/HyperSphere"
"lyft/flyte" -> "lyft/amundsen" ["e"=1]
"lyft/flyte" -> "uber/manifold"
"lyft/flyte" -> "gojek/feast"
"lyft/flyte" -> "Netflix/iceberg" ["e"=1]
"lyft/flyte" -> "uber/fiber"
"lyft/flyte" -> "lyft/flytekit"
"lyft/flyte" -> "Netflix/metaflow"
"lyft/flyte" -> "astronomer/astronomer" ["e"=1]
"lyft/flyte" -> "uber/petastorm"
"lyft/flyte" -> "google/ml-metadata"
"lyft/flyte" -> "lyft/flinkk8soperator" ["e"=1]
"lyft/flyte" -> "lyft/flytesnacks"
"lyft/flyte" -> "lyft/flytestdlib"
"lyft/flyte" -> "grailbio/reflow" ["e"=1]
"lyft/flyte" -> "SeldonIO/seldon-core"
"nicklashansen/rnn_lstm_from_scratch" -> "DeepLearningDTU/02456-deep-learning-with-PyTorch"
"nicklashansen/rnn_lstm_from_scratch" -> "nicklashansen/neural-net-optimization"
"ekstroem/dataMaid" -> "ekstroem/dataReporter"
"cdfoundation/sig-mlops" -> "datarevenue-berlin/OpenMLOps"
"cdfoundation/sig-mlops" -> "microsoft/MLOps" ["e"=1]
"cdfoundation/sig-mlops" -> "jacopotagliabue/you-dont-need-a-bigger-boat"
"cdfoundation/sig-mlops" -> "GoogleCloudPlatform/ml-design-patterns" ["e"=1]
"cdfoundation/sig-mlops" -> "fuzzylabs/awesome-open-mlops"
"cdfoundation/sig-mlops" -> "kelvins/awesome-mlops"
"cdfoundation/sig-mlops" -> "https-deeplearning-ai/machine-learning-engineering-for-production-public" ["e"=1]
"cdfoundation/sig-mlops" -> "visenger/awesome-mlops" ["e"=1]
"cdfoundation/sig-mlops" -> "microsoft/MLOpsPython" ["e"=1]
"cdfoundation/sig-mlops" -> "thoughtworks/mlops-platforms"
"cdfoundation/sig-mlops" -> "EthicalML/awesome-artificial-intelligence-guidelines"
"cdfoundation/sig-mlops" -> "mlrun/mlrun"
"cdfoundation/sig-mlops" -> "GokuMohandas/MLOps" ["e"=1]
"cdfoundation/sig-mlops" -> "visenger/mlops-references"
"cdfoundation/sig-mlops" -> "feast-dev/feast"
"epsilon-machine/missingpy" -> "eltonlaw/impyute"
"epsilon-machine/missingpy" -> "IvanBongiorni/GAN-RNN_Timeseries-imputation" ["e"=1]
"epsilon-machine/missingpy" -> "OpenIDEA-YunanUniversity/ycimpute"
"epsilon-machine/missingpy" -> "spindro/GINN" ["e"=1]
"DeepLearningDTU/02456-deep-learning-with-PyTorch" -> "nicklashansen/rnn_lstm_from_scratch"
"DeepLearningDTU/02456-deep-learning-with-PyTorch" -> "SkafteNicki/dtu_mlops"
"DeepLearningDTU/02456-deep-learning-with-PyTorch" -> "DeepLearningDTU/02456-deep-learning"
"DeepLearningDTU/02456-deep-learning-with-PyTorch" -> "suneman/socialdataanalysis2020"
"DeepLearningDTU/02456-deep-learning-with-PyTorch" -> "nicklashansen/neural-net-optimization"
"DeepLearningDTU/02456-deep-learning-with-PyTorch" -> "SocialComplexityLab/socialgraphs2020"
"ydataai/pandas-profiling" -> "ing-bank/popmon"
"ydataai/pandas-profiling" -> "fbdesignpro/sweetviz"
"ydataai/pandas-profiling" -> "lux-org/lux"
"ydataai/pandas-profiling" -> "ydataai/awesome-data-centric-ai"
"ydataai/pandas-profiling" -> "ydataai/ydata-synthetic" ["e"=1]
"ydataai/pandas-profiling" -> "feature-engine/feature_engine"
"ydataai/pandas-profiling" -> "sfu-db/dataprep"
"ydataai/pandas-profiling" -> "pycaret/pycaret"
"ydataai/pandas-profiling" -> "man-group/dtale"
"ydataai/pandas-profiling" -> "alteryx/featuretools"
"ydataai/pandas-profiling" -> "deepchecks/deepchecks"
"ydataai/pandas-profiling" -> "kedro-org/kedro"
"ydataai/pandas-profiling" -> "modin-project/modin"
"ydataai/pandas-profiling" -> "AutoViML/AutoViz"
"ydataai/pandas-profiling" -> "Nixtla/statsforecast" ["e"=1]
"kubeflow/manifests" -> "kubeflow/kfctl"
"kubeflow/manifests" -> "kubeflow-kale/kale"
"kubeflow/manifests" -> "shikanon/kubeflow-manifests" ["e"=1]
"kubeflow/manifests" -> "kubeflow/pipelines"
"kubeflow/manifests" -> "kubeflow/training-operator" ["e"=1]
"kubeflow/manifests" -> "kubeflow/fairing"
"kubeflow/manifests" -> "kubeflow/kfserving"
"kubeflow/manifests" -> "kubeflow/katib"
"kubeflow/manifests" -> "kubeflow/website" ["e"=1]
"kubeflow/manifests" -> "kubeflow/examples" ["e"=1]
"kubeflow/manifests" -> "argoflow/argoflow"
"kubeflow/manifests" -> "kubeflow/arena" ["e"=1]
"kubeflow/manifests" -> "kserve/kserve"
"kubeflow/manifests" -> "kubeflow/kfp-tekton"
"kubeflow/manifests" -> "NVIDIA/gpu-operator" ["e"=1]
"Waikato/weka-3.8" -> "Waikato/weka-trunk"
"Waikato/weka-3.8" -> "Waikato/wekaDeeplearning4j"
"GPflow/GPflowOpt" -> "secondmind-labs/trieste"
"GPflow/GPflowOpt" -> "GPflow/GPflow"
"GPflow/GPflowOpt" -> "wujian16/Cornell-MOE"
"GPflow/GPflowOpt" -> "SheffieldML/GPyOpt"
"GPflow/GPflowOpt" -> "uber-research/TuRBO"
"GPflow/GPflowOpt" -> "markvdw/gpflow-monitor"
"SheffieldML/GPyOpt" -> "SheffieldML/GPy"
"SheffieldML/GPyOpt" -> "HIPS/Spearmint"
"SheffieldML/GPyOpt" -> "GPflow/GPflowOpt"
"SheffieldML/GPyOpt" -> "GPflow/GPflow"
"SheffieldML/GPyOpt" -> "scikit-optimize/scikit-optimize"
"SheffieldML/GPyOpt" -> "pytorch/botorch"
"SheffieldML/GPyOpt" -> "fmfn/BayesianOptimization"
"SheffieldML/GPyOpt" -> "automl/RoBO"
"SheffieldML/GPyOpt" -> "automl/SMAC3"
"SheffieldML/GPyOpt" -> "JasperSnoek/spearmint"
"SheffieldML/GPyOpt" -> "amzn/emukit"
"SheffieldML/GPyOpt" -> "wujian16/Cornell-MOE"
"SheffieldML/GPyOpt" -> "cornellius-gp/gpytorch"
"SheffieldML/GPyOpt" -> "automl/HpBandSter"
"SheffieldML/GPyOpt" -> "krasserm/bayesian-machine-learning"
"alshedivat/keras-gp" -> "maka89/Deep-Kernel-GP"
"minimaxir/automl-gs" -> "d6t/d6tflow"
"minimaxir/automl-gs" -> "uber/ludwig"
"minimaxir/automl-gs" -> "Featuretools/featuretools"
"minimaxir/automl-gs" -> "EpistasisLab/tpot"
"minimaxir/automl-gs" -> "ClimbsRocks/auto_ml"
"minimaxir/automl-gs" -> "microsoft/interpret"
"minimaxir/automl-gs" -> "tensorflow/adanet"
"minimaxir/automl-gs" -> "mljar/mljar-supervised"
"minimaxir/automl-gs" -> "TeamHG-Memex/eli5"
"minimaxir/automl-gs" -> "AxeldeRomblay/MLBox"
"minimaxir/automl-gs" -> "automl/auto-sklearn"
"minimaxir/automl-gs" -> "Microsoft/nni"
"minimaxir/automl-gs" -> "keras-team/keras-tuner"
"minimaxir/automl-gs" -> "firmai/industry-machine-learning" ["e"=1]
"minimaxir/automl-gs" -> "reiinakano/xcessiv"
"ryantibs/conformal" -> "yromano/cqr"
"SelfExplainML/PiML-Toolbox" -> "valeman/awesome-conformal-prediction"
"SelfExplainML/PiML-Toolbox" -> "microprediction/microprediction" ["e"=1]
"SelfExplainML/PiML-Toolbox" -> "csinva/imodels"
"SelfExplainML/PiML-Toolbox" -> "deel-ai/xplique"
"SelfExplainML/PiML-Toolbox" -> "NannyML/nannyml"
"SelfExplainML/PiML-Toolbox" -> "facebookresearch/balance"
"SelfExplainML/PiML-Toolbox" -> "Nixtla/statsforecast" ["e"=1]
"SelfExplainML/PiML-Toolbox" -> "oegedijk/explainerdashboard"
"SelfExplainML/PiML-Toolbox" -> "MAIF/shapash"
"SelfExplainML/PiML-Toolbox" -> "salesforce/OmniXAI"
"SelfExplainML/PiML-Toolbox" -> "feature-engine/feature_engine"
"SelfExplainML/PiML-Toolbox" -> "koaning/doubtlab"
"SelfExplainML/PiML-Toolbox" -> "scikit-learn-contrib/MAPIE"
"SelfExplainML/PiML-Toolbox" -> "cerlymarco/shap-hypetune"
"SelfExplainML/PiML-Toolbox" -> "deepchecks/deepchecks"
"blablahaha/concept-drift" -> "ogozuacik/concept-drift-datasets-scikit-multiflow"
"blablahaha/concept-drift" -> "gditzler/ConceptDriftResources"
"henrikbostrom/crepes" -> "msesia/chr"
"d6t/d6tflow" -> "d6t/d6tpipe"
"d6t/d6tflow" -> "d6t/d6t-python"
"d6t/d6tflow" -> "minimaxir/automl-gs"
"d6t/d6tflow" -> "dask/fastparquet"
"d6t/d6tflow" -> "microsoft/interpret"
"d6t/d6tflow" -> "shawnbrown/datatest" ["e"=1]
"d6t/d6tflow" -> "quantumblacklabs/kedro"
"d6t/d6tflow" -> "Featuretools/featuretools"
"d6t/d6tflow" -> "pandera-dev/pandera"
"d6t/d6tflow" -> "jupyter/repo2docker" ["e"=1]
"d6t/d6tflow" -> "SeldonIO/alibi-detect"
"d6t/d6tflow" -> "d6t/d6tflow-template"
"d6t/d6tflow" -> "intake/intake" ["e"=1]
"d6t/d6tflow" -> "EthicalML/awesome-machine-learning-operations"
"d6t/d6tflow" -> "ReviewNB/treon"
"NannyML/nannyml" -> "deepchecks/deepchecks"
"NannyML/nannyml" -> "evidentlyai/evidently"
"NannyML/nannyml" -> "scikit-learn-contrib/MAPIE"
"NannyML/nannyml" -> "zenml-io/zenml"
"NannyML/nannyml" -> "SeldonIO/alibi-detect"
"NannyML/nannyml" -> "whylabs/whylogs"
"NannyML/nannyml" -> "online-ml/river"
"NannyML/nannyml" -> "bentoml/BentoML"
"NannyML/nannyml" -> "cerlymarco/shap-hypetune"
"NannyML/nannyml" -> "Nixtla/statsforecast" ["e"=1]
"NannyML/nannyml" -> "valeman/awesome-conformal-prediction"
"NannyML/nannyml" -> "SelfExplainML/PiML-Toolbox"
"NannyML/nannyml" -> "kelvins/awesome-mlops"
"NannyML/nannyml" -> "ploomber/ploomber"
"NannyML/nannyml" -> "feature-engine/feature_engine"
"dswah/pyGAM" -> "bambinos/bambi" ["e"=1]
"dswah/pyGAM" -> "scikit-learn-contrib/py-earth"
"dswah/pyGAM" -> "civisanalytics/python-glmnet" ["e"=1]
"dswah/pyGAM" -> "pymc-devs/pymc4" ["e"=1]
"dswah/pyGAM" -> "malmgrek/gammy"
"dswah/pyGAM" -> "pydata/patsy" ["e"=1]
"dswah/pyGAM" -> "koaning/scikit-lego"
"dswah/pyGAM" -> "scikit-learn-contrib/MAPIE"
"dswah/pyGAM" -> "luke14free/pm-prophet" ["e"=1]
"dswah/pyGAM" -> "scikit-learn-contrib/skope-rules"
"dswah/pyGAM" -> "stanfordmlgroup/ngboost"
"dswah/pyGAM" -> "scikit-learn-contrib/forest-confidence-interval"
"dswah/pyGAM" -> "laurencium/Causalinference" ["e"=1]
"dswah/pyGAM" -> "arviz-devs/arviz" ["e"=1]
"dswah/pyGAM" -> "pyro-ppl/numpyro" ["e"=1]
"NVIDIA/triton-inference-server" -> "NVIDIA/HugeCTR" ["e"=1]
"NVIDIA/triton-inference-server" -> "layerism/TensorRT-Inference-Server-Tutorial" ["e"=1]
"NVIDIA/triton-inference-server" -> "kubeflow/kfserving"
"NVIDIA/triton-inference-server" -> "NVIDIA/TRTorch" ["e"=1]
"NVIDIA/triton-inference-server" -> "rmccorm4/tensorrt-utils" ["e"=1]
"wujian16/Cornell-MOE" -> "aminnayebi/HesBO"
"wujian16/Cornell-MOE" -> "GPflow/GPflowOpt"
"wujian16/Cornell-MOE" -> "uber-research/TuRBO"
"wujian16/Cornell-MOE" -> "ziyuw/rembo"
"wujian16/Cornell-MOE" -> "facebookresearch/alebo"
"wujian16/Cornell-MOE" -> "automl/RoBO"
"amzn/emukit" -> "aws/aws-vsts-tools"
"amzn/emukit" -> "amzn/emukit-playground"
"amzn/emukit" -> "SheffieldML/GPyOpt"
"amzn/emukit" -> "GPflow/GPflowOpt"
"amzn/emukit" -> "automl/RoBO"
"amzn/emukit" -> "ICL-SML/Doubly-Stochastic-DGP"
"aws/aws-vsts-tools" -> "amzn/emukit"
"dask/dask-tutorial" -> "dask/dask-examples"
"dask/dask-tutorial" -> "dask/dask" ["e"=1]
"dask/dask-tutorial" -> "dask/dask-ml"
"dask/dask-tutorial" -> "dask/distributed"
"dask/dask-tutorial" -> "ericmjl/bayesian-stats-modelling-tutorial" ["e"=1]
"dask/dask-tutorial" -> "vaexio/vaex"
"dask/dask-tutorial" -> "hugobowne/deep-learning-from-scratch-pytorch" ["e"=1]
"dask/dask-tutorial" -> "pydata/xarray" ["e"=1]
"dask/dask-tutorial" -> "rapidsai/cudf"
"dask/dask-tutorial" -> "modin-project/modin"
"dask/dask-tutorial" -> "dask/dask-kubernetes"
"dask/dask-tutorial" -> "dask/dask-labextension"
"dask/dask-tutorial" -> "Featuretools/featuretools"
"dask/dask-tutorial" -> "TeamHG-Memex/eli5"
"dask/dask-tutorial" -> "rapidsai/cuml"
"Renumics/awesome-open-data-centric-ai" -> "Renumics/spotlight"
"Renumics/awesome-open-data-centric-ai" -> "Renumics/awesome-anything2vec"
"Renumics/awesome-open-data-centric-ai" -> "zenml-io/awesome-open-data-annotation"
"Renumics/awesome-open-data-centric-ai" -> "cleanlab/cleanvision"
"Renumics/awesome-open-data-centric-ai" -> "dcai-course/dcai-lab"
"Renumics/awesome-open-data-centric-ai" -> "Renumics/mesh2vec"
"EthicalML/awesome-artificial-intelligence-guidelines" -> "EthicalML/xai"
"EthicalML/awesome-artificial-intelligence-guidelines" -> "EthicalML/awesome-production-machine-learning" ["e"=1]
"EthicalML/awesome-artificial-intelligence-guidelines" -> "visenger/awesome-mlops" ["e"=1]
"EthicalML/awesome-artificial-intelligence-guidelines" -> "fairlearn/fairlearn"
"EthicalML/awesome-artificial-intelligence-guidelines" -> "maiot-io/zenml"
"EthicalML/awesome-artificial-intelligence-guidelines" -> "Trusted-AI/AIF360"
"EthicalML/awesome-artificial-intelligence-guidelines" -> "GoogleCloudPlatform/ml-design-patterns" ["e"=1]
"EthicalML/awesome-artificial-intelligence-guidelines" -> "iterative/cml"
"EthicalML/awesome-artificial-intelligence-guidelines" -> "datarevenue-berlin/OpenMLOps"
"EthicalML/awesome-artificial-intelligence-guidelines" -> "evidentlyai/evidently"
"EthicalML/awesome-artificial-intelligence-guidelines" -> "eugeneyan/ml-design-docs" ["e"=1]
"EthicalML/awesome-artificial-intelligence-guidelines" -> "deepchecks/deepchecks"
"EthicalML/awesome-artificial-intelligence-guidelines" -> "SeldonIO/seldon-core"
"EthicalML/awesome-artificial-intelligence-guidelines" -> "ivan-bilan/The-NLP-Pandect" ["e"=1]
"EthicalML/awesome-artificial-intelligence-guidelines" -> "tensorflow/model-card-toolkit"
"SkafteNicki/dtu_mlops" -> "DeepLearningDTU/02456-deep-learning-with-PyTorch"
"SkafteNicki/dtu_mlops" -> "zenml-io/mlops-stacks"
"SkafteNicki/dtu_mlops" -> "suneman/socialdata2022"
"danielhomola/mifs" -> "fbrundu/pymrmr"
"danielhomola/mifs" -> "kaushalshetty/FeatureSelectionGA"
"danielhomola/mifs" -> "EpistasisLab/scikit-rebate"
"danielhomola/mifs" -> "scikit-learn-contrib/boruta_py"
"danielhomola/mifs" -> "jundongl/scikit-feature"
"danielhomola/mifs" -> "smazzanti/mrmr"
"danielhomola/mifs" -> "jupiters1117/mico"
"danielhomola/mifs" -> "mutantturkey/PyFeast"
"danielhomola/mifs" -> "duxuhao/Feature-Selection"
"danielhomola/mifs" -> "scikit-learn-contrib/stability-selection"
"danielhomola/mifs" -> "dit/dit" ["e"=1]
"danielhomola/mifs" -> "Ekeany/Boruta-Shap"
"pymetrics/audit-ai" -> "dssg/aequitas"
"pymetrics/audit-ai" -> "algofairness/fairness-comparison"
"pymetrics/audit-ai" -> "adebayoj/fairml"
"pymetrics/audit-ai" -> "columbia/fairtest"
"pymetrics/audit-ai" -> "cosmicBboy/themis-ml"
"stanford-crfm/mistral" -> "eric-mitchell/mend" ["e"=1]
"stanford-crfm/mistral" -> "HazyResearch/bootleg" ["e"=1]
"huawei-noah/streamDM" -> "huawei-noah/streamDM-Cpp"
"huawei-noah/streamDM" -> "apache/incubator-samoa"
"huawei-noah/streamDM" -> "Waikato/moa"
"huawei-noah/streamDM" -> "databricks/tensorframes" ["e"=1]
"huawei-noah/streamDM" -> "cloudml/zen" ["e"=1]
"huawei-noah/streamDM" -> "amplab/SparkNet" ["e"=1]
"huawei-noah/streamDM" -> "irvingc/dbscan-on-spark" ["e"=1]
"huawei-noah/streamDM" -> "apache/bahir" ["e"=1]
"huawei-noah/streamDM" -> "proflin/CoolplaySpark" ["e"=1]
"huawei-noah/streamDM" -> "LIBBLE/LIBBLE-Spark" ["e"=1]
"huawei-noah/streamDM" -> "caroljmcdonald/SparkStreamingHBaseExample" ["e"=1]
"huawei-noah/streamDM" -> "sryza/spark-timeseries" ["e"=1]
"huawei-noah/streamDM" -> "intel-machine-learning/DistML" ["e"=1]
"huawei-noah/streamDM" -> "jaceklaskowski/spark-structured-streaming-book" ["e"=1]
"huawei-noah/streamDM" -> "linkedin/photon-ml" ["e"=1]
"Waikato/meka" -> "Waikato/moa"
"cloudpipe/cloudpickle" -> "uqfoundation/dill"
"cloudpipe/cloudpickle" -> "dask/distributed"
"cloudpipe/cloudpickle" -> "joblib/joblib" ["e"=1]
"cloudpipe/cloudpickle" -> "pydata/numexpr" ["e"=1]
"cloudpipe/cloudpickle" -> "joblib/loky"
"cloudpipe/cloudpickle" -> "dask/dask" ["e"=1]
"cloudpipe/cloudpickle" -> "ucbrise/clipper"
"cloudpipe/cloudpickle" -> "tomMoral/loky"
"cloudpipe/cloudpickle" -> "pywren/pywren" ["e"=1]
"cloudpipe/cloudpickle" -> "jsonpickle/jsonpickle" ["e"=1]
"cloudpipe/cloudpickle" -> "dask/dask-kubernetes"
"cloudpipe/cloudpickle" -> "irmen/Pyro4"
"cloudpipe/cloudpickle" -> "ibis-project/ibis" ["e"=1]
"cloudpipe/cloudpickle" -> "python-trio/trio" ["e"=1]
"cloudpipe/cloudpickle" -> "xhochy/fletcher"
"ml-tooling/ml-hub" -> "ml-tooling/ml-workspace"
"ml-tooling/ml-hub" -> "ml-tooling/lazycluster"
"aangelopoulos/conformal_classification" -> "aangelopoulos/rcps"
"aangelopoulos/conformal_classification" -> "aangelopoulos/conformal-prediction"
"aangelopoulos/conformal_classification" -> "yromano/cqr"
"aangelopoulos/conformal_classification" -> "aangelopoulos/ltt"
"aangelopoulos/conformal_classification" -> "donlnz/nonconformist"
"aangelopoulos/conformal_classification" -> "msesia/arc"
"aangelopoulos/conformal_classification" -> "MadryLab/cox" ["e"=1]
"aangelopoulos/conformal_classification" -> "btgraham/Batchwise-Dropout" ["e"=1]
"aangelopoulos/conformal_classification" -> "anguyen8/sam" ["e"=1]
"aangelopoulos/conformal_classification" -> "aangelopoulos/conformal-risk"
"rogeroyer/feature_selection_GAAlgorithm" -> "cainsmile/GA_for_Feature_Selection"
"rogeroyer/feature_selection_GAAlgorithm" -> "weepon/feature_selection"
"rogeroyer/feature_selection_GAAlgorithm" -> "luckyerdog/feature_select"
"dask/s3fs" -> "intake/filesystem_spec"
"dask/s3fs" -> "dask/gcsfs"
"dask/s3fs" -> "dask/dask-kubernetes"
"dask/s3fs" -> "danielfrg/s3contents"
"dask/s3fs" -> "dask/distributed"
"dask/s3fs" -> "dask/fastparquet"
"dask/s3fs" -> "PyFilesystem/s3fs" ["e"=1]
"dask/s3fs" -> "nils-braun/dask-sql"
"datapane/datapane" -> "holoviz/panel" ["e"=1]
"datapane/datapane" -> "datapane/gallery"
"datapane/datapane" -> "evidence-dev/evidence" ["e"=1]
"datapane/datapane" -> "orchest/orchest"
"datapane/datapane" -> "mito-ds/monorepo" ["e"=1]
"datapane/datapane" -> "mljar/mercury"
"datapane/datapane" -> "Kanaries/graphic-walker" ["e"=1]
"datapane/datapane" -> "alkaline-ml/pmdarima" ["e"=1]
"datapane/datapane" -> "man-group/dtale"
"datapane/datapane" -> "simonw/sqlite-utils" ["e"=1]
"datapane/datapane" -> "fbdesignpro/sweetviz"
"datapane/datapane" -> "fugue-project/fugue"
"datapane/datapane" -> "ing-bank/popmon"
"datapane/datapane" -> "pandera-dev/pandera"
"datapane/datapane" -> "man-group/notebooker" ["e"=1]
"tkrabel/bamboolib" -> "tkrabel/edaviz"
"tkrabel/bamboolib" -> "8080labs/pyforest"
"tkrabel/bamboolib" -> "fbdesignpro/sweetviz"
"tkrabel/bamboolib" -> "lux-org/lux"
"tkrabel/bamboolib" -> "adamerose/pandasgui"
"tkrabel/bamboolib" -> "sfu-db/dataprep"
"tkrabel/bamboolib" -> "chris1610/sidetable" ["e"=1]
"tkrabel/bamboolib" -> "AutoViML/AutoViz"
"tkrabel/bamboolib" -> "quantopian/qgrid" ["e"=1]
"tkrabel/bamboolib" -> "adamerose/PandasGUI"
"tkrabel/bamboolib" -> "man-group/dtale"
"tkrabel/bamboolib" -> "mito-ds/monorepo" ["e"=1]
"tkrabel/bamboolib" -> "holoviz/panel" ["e"=1]
"tkrabel/bamboolib" -> "h2oai/datatable"
"tkrabel/bamboolib" -> "TeamHG-Memex/eli5"
"iterative/dvc.org" -> "iterative/terraform-provider-iterative"
"iterative/dvc.org" -> "iterative/dvclive"
"iterative/dvc.org" -> "iterative/blog"
"iterative/dvc.org" -> "iterative/gto"
"hughsalimbeni/bayesian_benchmarks" -> "hughsalimbeni/DGPs_with_IWVI"
"hughsalimbeni/bayesian_benchmarks" -> "thjashin/gp-infer-net" ["e"=1]
"hughsalimbeni/bayesian_benchmarks" -> "thjashin/spectral-stein-grad" ["e"=1]
"quantumblacklabs/kedro-viz" -> "quantumblacklabs/kedro-docker"
"quantumblacklabs/kedro-viz" -> "quantumblacklabs/kedro-examples"
"quantumblacklabs/kedro-viz" -> "quantumblacklabs/kedro-airflow"
"quantumblacklabs/kedro-viz" -> "quantumblacklabs/kedro-ui"
"quantumblacklabs/kedro-viz" -> "Galileo-Galilei/kedro-mlflow"
"quantumblacklabs/kedro-viz" -> "quantumblacklabs/kedro"
"quantumblacklabs/kedro-viz" -> "quantumblacklabs/qb-styles"
"kserve/kserve" -> "kserve/website"
"kserve/kserve" -> "triton-inference-server/server" ["e"=1]
"kserve/kserve" -> "SeldonIO/seldon-core"
"kserve/kserve" -> "kserve/modelmesh-serving"
"kserve/kserve" -> "kubeflow/manifests"
"kserve/kserve" -> "kserve/modelmesh"
"kserve/kserve" -> "kubeflow/training-operator" ["e"=1]
"kserve/kserve" -> "SeldonIO/MLServer"
"kserve/kserve" -> "kubeflow/pipelines"
"kserve/kserve" -> "feast-dev/feast"
"kserve/kserve" -> "pytorch/serve"
"kserve/kserve" -> "bentoml/BentoML"
"kserve/kserve" -> "kubeflow/katib"
"kserve/kserve" -> "evidentlyai/evidently"
"kserve/kserve" -> "flyteorg/flyte"
"ydataai/ydata-profiling" -> "sfu-db/dataprep"
"ydataai/ydata-profiling" -> "ydataai/ydata-quality"
"dask/dask-ml" -> "dask/distributed"
"dask/dask-ml" -> "dask/dask-examples"
"dask/dask-ml" -> "dask/dask-kubernetes"
"dask/dask-ml" -> "dask/dask-searchcv"
"dask/dask-ml" -> "dask/dask-tutorial"
"dask/dask-ml" -> "dask/dask" ["e"=1]
"dask/dask-ml" -> "mrocklin/streamz"
"dask/dask-ml" -> "scikit-learn-contrib/categorical-encoding"
"dask/dask-ml" -> "amueller/dabl"
"dask/dask-ml" -> "dask/dask-labextension"
"dask/dask-ml" -> "hyperopt/hyperopt-sklearn"
"dask/dask-ml" -> "dask/dask-xgboost"
"dask/dask-ml" -> "ericmjl/pyjanitor" ["e"=1]
"dask/dask-ml" -> "TomAugspurger/engarde" ["e"=1]
"dask/dask-ml" -> "scikit-optimize/scikit-optimize"
"propublica/compas-analysis" -> "mbilalzafar/fair-classification"
"propublica/compas-analysis" -> "zykls/folktables"
"propublica/compas-analysis" -> "adebayoj/fairml"
"propublica/compas-analysis" -> "dssg/aequitas"
"propublica/compas-analysis" -> "algofairness/fairness-comparison"
"propublica/compas-analysis" -> "fairlearn/fairlearn"
"propublica/compas-analysis" -> "IBM/AIF360"
"propublica/compas-analysis" -> "google/ml-fairness-gym"
"propublica/compas-analysis" -> "algofairness/BlackBoxAuditing"
"propublica/compas-analysis" -> "Trusted-AI/AIF360"
"propublica/compas-analysis" -> "datamllab/awesome-fairness-in-ai"
"propublica/compas-analysis" -> "tolga-b/debiaswe"
"propublica/compas-analysis" -> "megantosh/fairness_measures_code"
"propublica/compas-analysis" -> "invinst/chicago-police-data" ["e"=1]
"propublica/compas-analysis" -> "themarshallproject/COVID_prison_data"
"Thenerdstation/mltest" -> "suriyadeepan/torchtest"
"Thenerdstation/mltest" -> "studioml/studio"
"ClimbsRocks/machineJS" -> "ClimbsRocks/auto_ml"
"ClimbsRocks/machineJS" -> "ChristianSch/numerflow" ["e"=1]
"ClimbsRocks/machineJS" -> "automl/autoweka"
"RobThree/MongoRepository" -> "alexandre-spieser/mongodb-generic-repository"
"RobThree/MongoRepository" -> "g0t4/aspnet-identity-mongo"
"RobThree/MongoRepository" -> "primaryobjects/MongoDragons"
"RobThree/MongoRepository" -> "esendir/MongoRepository"
"RobThree/MongoRepository" -> "g0t4/aspnet-identity-mongo-sample"
"RobThree/MongoRepository" -> "freshlogic/MongoDB.Web"
"RobThree/MongoRepository" -> "loresoft/MongoDB.Messaging"
"RobThree/MongoRepository" -> "InspectorIT/MongoDB.AspNet.Identity"
"keras-team/keras-preprocessing" -> "keras-team/keras-applications" ["e"=1]
"keras-team/keras-preprocessing" -> "lmoroney/dlaicourse"
"keras-team/keras-preprocessing" -> "tensorflow/datasets"
"keras-team/keras-preprocessing" -> "keras-team/keras-contrib" ["e"=1]
"keras-team/keras-preprocessing" -> "keras-team/keras-tuner"
"keras-team/keras-preprocessing" -> "Yoast/YoastSEO.js"
"keras-team/keras-preprocessing" -> "keras-team/autokeras"
"keras-team/keras-preprocessing" -> "keras-team/governance"
"keras-team/keras-preprocessing" -> "autonomio/talos"
"keras-team/keras-preprocessing" -> "jbrownlee/Datasets"
"keras-team/keras-preprocessing" -> "zalandoresearch/fashion-mnist"
"keras-team/keras-preprocessing" -> "netrack/keras-metrics"
"keras-team/keras-preprocessing" -> "tensorflow/hub"
"keras-team/keras-preprocessing" -> "keras-team/keras-nlp" ["e"=1]
"keras-team/keras-preprocessing" -> "keras-team/keras-docs-zh" ["e"=1]
"tmadl/highdimensional-decision-boundary-plot" -> "wdm0006/categorical_encoding"
"maiot-io/zenml" -> "ebhy/budgetml"
"maiot-io/zenml" -> "PyTorchLightning/lightning-flash" ["e"=1]
"maiot-io/zenml" -> "ml-tooling/opyrator"
"maiot-io/zenml" -> "evidentlyai/evidently"
"maiot-io/zenml" -> "SeldonIO/alibi-detect"
"maiot-io/zenml" -> "whylabs/whylogs"
"maiot-io/zenml" -> "bentoml/BentoML"
"maiot-io/zenml" -> "iterative/cml"
"maiot-io/zenml" -> "jalammar/ecco" ["e"=1]
"maiot-io/zenml" -> "MAIF/shapash"
"maiot-io/zenml" -> "oegedijk/explainerdashboard"
"maiot-io/zenml" -> "tensorflow/tfx"
"maiot-io/zenml" -> "activeloopai/Hub"
"maiot-io/zenml" -> "ploomber/ploomber"
"maiot-io/zenml" -> "jrieke/traingenerator"
"IBM/UQ360" -> "IBM/AIX360"
"aerdem4/lofo-importance" -> "Ekeany/Boruta-Shap"
"aerdem4/lofo-importance" -> "scikit-learn-contrib/boruta_py"
"aerdem4/lofo-importance" -> "cod3licious/autofeat"
"aerdem4/lofo-importance" -> "stanfordmlgroup/ngboost"
"aerdem4/lofo-importance" -> "koaning/scikit-lego"
"aerdem4/lofo-importance" -> "scikit-learn-contrib/MAPIE"
"aerdem4/lofo-importance" -> "ModelOriented/DALEX"
"aerdem4/lofo-importance" -> "AutoViML/featurewiz"
"aerdem4/lofo-importance" -> "feature-engine/feature_engine"
"aerdem4/lofo-importance" -> "EthicalML/xai"
"aerdem4/lofo-importance" -> "scikit-learn-contrib/DESlib"
"aerdem4/lofo-importance" -> "SauceCat/PDPbox"
"aerdem4/lofo-importance" -> "koaning/human-learn"
"aerdem4/lofo-importance" -> "dreamquark-ai/tabnet" ["e"=1]
"aerdem4/lofo-importance" -> "vecxoz/vecstack" ["e"=1]
"jcrobak/parquet-python" -> "dask/fastparquet"
"automl/fanova" -> "automl/BOAH"
"automl/fanova" -> "automl/ParameterImportance"
"automl/fanova" -> "automl/CAVE"
"HazyResearch/data-centric-ai" -> "data-centric-ai/dcbench"
"HazyResearch/data-centric-ai" -> "snorkel-team/snorkel" ["e"=1]
"HazyResearch/data-centric-ai" -> "ydataai/awesome-data-centric-ai"
"HazyResearch/data-centric-ai" -> "recognai/rubrix" ["e"=1]
"HazyResearch/data-centric-ai" -> "cleanlab/cleanlab"
"HazyResearch/data-centric-ai" -> "robustness-gym/robustness-gym" ["e"=1]
"HazyResearch/data-centric-ai" -> "NorskRegnesentral/skweak" ["e"=1]
"HazyResearch/data-centric-ai" -> "daochenzha/data-centric-AI" ["e"=1]
"HazyResearch/data-centric-ai" -> "jacopotagliabue/you-dont-need-a-bigger-boat"
"HazyResearch/data-centric-ai" -> "GEM-benchmark/NL-Augmenter" ["e"=1]
"HazyResearch/data-centric-ai" -> "ludwig-ai/ludwig"
"HazyResearch/data-centric-ai" -> "cgnorthcutt/cleanlab" ["e"=1]
"HazyResearch/data-centric-ai" -> "subeeshvasu/Awesome-Learning-with-Label-Noise" ["e"=1]
"HazyResearch/data-centric-ai" -> "jacopotagliabue/reclist"
"HazyResearch/data-centric-ai" -> "stanford-crfm/mistral"
"ploomber/ploomber" -> "orchest/orchest"
"ploomber/ploomber" -> "deepchecks/deepchecks"
"ploomber/ploomber" -> "fugue-project/fugue"
"ploomber/ploomber" -> "evidentlyai/evidently"
"ploomber/ploomber" -> "flyteorg/flyte"
"ploomber/ploomber" -> "pandera-dev/pandera"
"ploomber/ploomber" -> "dagster-io/dagster" ["e"=1]
"ploomber/ploomber" -> "great-expectations/great_expectations" ["e"=1]
"ploomber/ploomber" -> "whylabs/whylogs"
"ploomber/ploomber" -> "Nixtla/statsforecast" ["e"=1]
"ploomber/ploomber" -> "online-ml/river"
"ploomber/ploomber" -> "kedro-org/kedro"
"ploomber/ploomber" -> "feast-dev/feast"
"ploomber/ploomber" -> "quantumblacklabs/kedro"
"ploomber/ploomber" -> "bentoml/BentoML"
"zenml-io/awesome-open-data-annotation" -> "zzsza/Boostcamp-AI-Tech-Product-Serving" ["e"=1]
"zenml-io/awesome-open-data-annotation" -> "tunib-ai/large-scale-lm-tutorials" ["e"=1]
"zenml-io/awesome-open-data-annotation" -> "zenml-io/zenfiles"
"zenml-io/awesome-open-data-annotation" -> "zenml-io/mlops-stacks"
"andosa/treeinterpreter" -> "gregtam/interpreting-decision-trees-and-random-forests"
"andosa/treeinterpreter" -> "TeamHG-Memex/eli5"
"andosa/treeinterpreter" -> "SauceCat/PDPbox"
"andosa/treeinterpreter" -> "parrt/random-forest-importances"
"andosa/treeinterpreter" -> "datascienceinc/Skater"
"andosa/treeinterpreter" -> "tmadl/sklearn-expertsys"
"andosa/treeinterpreter" -> "h2oai/mli-resources"
"andosa/treeinterpreter" -> "chrispaulca/waterfall"
"andosa/treeinterpreter" -> "scikit-learn-contrib/categorical-encoding"
"andosa/treeinterpreter" -> "AustinRochford/PyCEbox"
"andosa/treeinterpreter" -> "limexp/xgbfir" ["e"=1]
"andosa/treeinterpreter" -> "oracle/Skater"
"andosa/treeinterpreter" -> "jphall663/interpretable_machine_learning_with_python"
"andosa/treeinterpreter" -> "marcotcr/anchor"
"andosa/treeinterpreter" -> "scikit-learn-contrib/forest-confidence-interval"
"eloquentarduino/micromlgen" -> "emlearn/emlearn"
"yromano/cqr" -> "msesia/chr"
"yromano/cqr" -> "hamrel-cxu/EnbPI"
"yromano/cqr" -> "henrikbostrom/crepes"
"yromano/cqr" -> "aangelopoulos/rcps"
"yromano/cqr" -> "aangelopoulos/conformal_classification"
"yromano/cqr" -> "FilippoMB/Ensemble-Conformalized-Quantile-Regression"
"yromano/cqr" -> "ryantibs/conformal"
"yromano/cqr" -> "aangelopoulos/ltt"
"yromano/cqr" -> "donlnz/nonconformist"
"zeyiwen/thundersvm" -> "dnouri/skorch"
"zeyiwen/thundersvm" -> "zeyiwen/thundergbm"
"zeyiwen/thundersvm" -> "datascienceinc/Skater"
"zeyiwen/thundersvm" -> "thomaskeck/FastBDT" ["e"=1]
"zeyiwen/thundersvm" -> "dask/dask-searchcv"
"zeyiwen/thundersvm" -> "reiinakano/xcessiv"
"zeyiwen/thundersvm" -> "mirceamironenco/BayesianRecurrentNN" ["e"=1]
"kubeflow/fairing" -> "kubeflow/katib"
"kubeflow/fairing" -> "kubeflow/kfserving"
"kubeflow/fairing" -> "kubeflow/manifests"
"kubeflow/fairing" -> "kubeflow-kale/kale"
"kubeflow/fairing" -> "kubeflow/community" ["e"=1]
"kubeflow/fairing" -> "kubeflow/example-seldon"
"Evolving-AI-Lab/fooling" -> "tabacof/adversarial"
"Evolving-AI-Lab/fooling" -> "Evolving-AI-Lab/innovation-engine"
"Evolving-AI-Lab/fooling" -> "sferes2/sferes2"
"jluttine/tikz-bayesnet" -> "dfm/daft"
"jluttine/tikz-bayesnet" -> "blei-lab/edward"
"jluttine/tikz-bayesnet" -> "probtorch/probtorch"
"jluttine/tikz-bayesnet" -> "GPflow/GPflow"
"jluttine/tikz-bayesnet" -> "SheffieldML/GPy"
"jluttine/tikz-bayesnet" -> "DartML/Stein-Variational-Gradient-Descent" ["e"=1]
"jluttine/tikz-bayesnet" -> "dpkingma/nips14-ssl" ["e"=1]
"jluttine/tikz-bayesnet" -> "bayespy/bayespy"
"jluttine/tikz-bayesnet" -> "PetarV-/TikZ" ["e"=1]
"jluttine/tikz-bayesnet" -> "pyro-ppl/numpyro" ["e"=1]
"jluttine/tikz-bayesnet" -> "daft-dev/daft"
"jluttine/tikz-bayesnet" -> "rlouf/mcx" ["e"=1]
"jluttine/tikz-bayesnet" -> "bayesiains/nflows" ["e"=1]
"jluttine/tikz-bayesnet" -> "stan-dev/stan" ["e"=1]
"jluttine/tikz-bayesnet" -> "enalisnick/stick-breaking_dgms"
"jvkersch/hsmmlearn" -> "albietz/online_hmm"
"logicalclocks/hopsworks" -> "hopshadoop/hops"
"logicalclocks/hopsworks" -> "logicalclocks/rondb"
"logicalclocks/hopsworks" -> "feast-dev/feast"
"logicalclocks/hopsworks" -> "logicalclocks/feature-store-api"
"logicalclocks/hopsworks" -> "linkedin/feathr" ["e"=1]
"logicalclocks/hopsworks" -> "featurestoreorg/serverless-ml-course"
"logicalclocks/hopsworks" -> "logicalclocks/hops-examples"
"logicalclocks/hopsworks" -> "gojek/feast"
"logicalclocks/hopsworks" -> "logicalclocks/maggy"
"logicalclocks/hopsworks" -> "SeldonIO/seldon-core"
"logicalclocks/hopsworks" -> "featureform/featureform"
"logicalclocks/hopsworks" -> "hopshadoop/hopsworks"
"logicalclocks/hopsworks" -> "awslabs/deequ" ["e"=1]
"logicalclocks/hopsworks" -> "google/ml-metadata"
"logicalclocks/hopsworks" -> "combust/mleap" ["e"=1]
"csinva/imodels" -> "christophM/rulefit"
"csinva/imodels" -> "scikit-learn-contrib/skope-rules"
"csinva/imodels" -> "scikit-learn-contrib/MAPIE"
"csinva/imodels" -> "oegedijk/explainerdashboard"
"csinva/imodels" -> "feature-engine/feature_engine"
"csinva/imodels" -> "koaning/scikit-lego"
"csinva/imodels" -> "interpretml/DiCE"
"csinva/imodels" -> "koaning/doubtlab"
"csinva/imodels" -> "Ekeany/Boruta-Shap"
"csinva/imodels" -> "cerlymarco/shap-hypetune"
"csinva/imodels" -> "interpretml/interpret"
"csinva/imodels" -> "scikit-learn-contrib/category_encoders"
"csinva/imodels" -> "MAIF/shapash"
"csinva/imodels" -> "dirty-cat/dirty_cat"
"csinva/imodels" -> "SelfExplainML/PiML-Toolbox"
"StatMixedML/LightGBMLSS" -> "StatMixedML/XGBoostLSS"
"StatMixedML/LightGBMLSS" -> "CDonnerer/xgboost-distribution"
"StatMixedML/LightGBMLSS" -> "elephaint/pgbm"
"StatMixedML/LightGBMLSS" -> "StatMixedML/DGBM"
"StatMixedML/LightGBMLSS" -> "cerlymarco/tspiral" ["e"=1]
"StatMixedML/LightGBMLSS" -> "tblume1992/LazyProphet"
"amogorkon/fuzzylogic" -> "aresio/simpful"
"cerlymarco/linear-tree" -> "StatMixedML/LightGBMLSS"
"cerlymarco/linear-tree" -> "carlomazzaferro/scikit-hts" ["e"=1]
"cerlymarco/linear-tree" -> "scikit-learn-contrib/MAPIE"
"cerlymarco/linear-tree" -> "tblume1992/ThymeBoost"
"cerlymarco/linear-tree" -> "StatMixedML/XGBoostLSS"
"cerlymarco/linear-tree" -> "cod3licious/autofeat"
"cerlymarco/linear-tree" -> "tblume1992/LazyProphet"
"cerlymarco/linear-tree" -> "Ekeany/Boruta-Shap"
"cerlymarco/linear-tree" -> "AutoViML/featurewiz"
"cerlymarco/linear-tree" -> "GBDT-PL/GBDT-PL"
"cerlymarco/linear-tree" -> "cerlymarco/shap-hypetune"
"cerlymarco/linear-tree" -> "erdogant/hgboost"
"fabsig/GPBoost" -> "StatMixedML/XGBoostLSS"
"fabsig/GPBoost" -> "StatMixedML/LightGBMLSS"
"fabsig/GPBoost" -> "stanfordmlgroup/ngboost"
"fabsig/GPBoost" -> "CDonnerer/xgboost-distribution"
"fabsig/GPBoost" -> "cerlymarco/linear-tree"
"fabsig/GPBoost" -> "carlomazzaferro/scikit-hts" ["e"=1]
"fabsig/GPBoost" -> "elephaint/pgbm"
"fabsig/GPBoost" -> "Ekeany/Boruta-Shap"
"fabsig/GPBoost" -> "sebp/scikit-survival" ["e"=1]
"fabsig/GPBoost" -> "tblume1992/LazyProphet"
"fabsig/GPBoost" -> "AutoViML/featurewiz"
"fabsig/GPBoost" -> "StatMixedML/CatBoostLSS"
"fabsig/GPBoost" -> "scikit-learn-contrib/MAPIE"
"fabsig/GPBoost" -> "RGF-team/rgf"
"fabsig/GPBoost" -> "cerlymarco/shap-hypetune"
"feature-engine/feature_engine" -> "koaning/scikit-lego"
"feature-engine/feature_engine" -> "alteryx/featuretools"
"feature-engine/feature_engine" -> "scikit-learn-contrib/MAPIE"
"feature-engine/feature_engine" -> "csinva/imodels"
"feature-engine/feature_engine" -> "scikit-learn-contrib/category_encoders"
"feature-engine/feature_engine" -> "Ekeany/Boruta-Shap"
"feature-engine/feature_engine" -> "AutoViML/featurewiz"
"feature-engine/feature_engine" -> "cerlymarco/shap-hypetune"
"feature-engine/feature_engine" -> "Nixtla/statsforecast" ["e"=1]
"feature-engine/feature_engine" -> "winedarksea/AutoTS" ["e"=1]
"feature-engine/feature_engine" -> "Nixtla/mlforecast" ["e"=1]
"feature-engine/feature_engine" -> "scikit-learn-contrib/boruta_py"
"feature-engine/feature_engine" -> "sktime/sktime" ["e"=1]
"feature-engine/feature_engine" -> "deepchecks/deepchecks"
"feature-engine/feature_engine" -> "oegedijk/explainerdashboard"
"oegedijk/explainerdashboard" -> "MAIF/shapash"
"oegedijk/explainerdashboard" -> "csinva/imodels"
"oegedijk/explainerdashboard" -> "evidentlyai/evidently"
"oegedijk/explainerdashboard" -> "deepchecks/deepchecks"
"oegedijk/explainerdashboard" -> "interpretml/interpret"
"oegedijk/explainerdashboard" -> "koaning/scikit-lego"
"oegedijk/explainerdashboard" -> "online-ml/river"
"oegedijk/explainerdashboard" -> "ModelOriented/DALEX"
"oegedijk/explainerdashboard" -> "SeldonIO/alibi-detect"
"oegedijk/explainerdashboard" -> "Nixtla/statsforecast" ["e"=1]
"oegedijk/explainerdashboard" -> "SeldonIO/alibi"
"oegedijk/explainerdashboard" -> "mljar/mljar-supervised"
"oegedijk/explainerdashboard" -> "uber/orbit" ["e"=1]
"oegedijk/explainerdashboard" -> "shankarpandala/lazypredict"
"oegedijk/explainerdashboard" -> "scikit-learn-contrib/MAPIE"
"ray-project/xgboost_ray" -> "ray-project/lightgbm_ray"
"scikit-fuzzy/scikit-fuzzy" -> "twmeggs/anfis"
"scikit-fuzzy/scikit-fuzzy" -> "amogorkon/fuzzylogic"
"scikit-fuzzy/scikit-fuzzy" -> "aresio/simpful"
"scikit-fuzzy/scikit-fuzzy" -> "tiagoCuervo/TensorANFIS"
"scikit-fuzzy/scikit-fuzzy" -> "fuzzylite/fuzzylite"
"scikit-fuzzy/scikit-fuzzy" -> "jfpower/anfis-pytorch"
"scikit-fuzzy/scikit-fuzzy" -> "omadson/fuzzy-c-means"
"scikit-fuzzy/scikit-fuzzy" -> "fuzzylite/pyfuzzylite"
"scikit-fuzzy/scikit-fuzzy" -> "scikit-learn-contrib/skope-rules"
"scikit-fuzzy/scikit-fuzzy" -> "rsteca/sklearn-deap"
"scikit-fuzzy/scikit-fuzzy" -> "bayespy/bayespy"
"scikit-fuzzy/scikit-fuzzy" -> "scipy-conference/scipy2013_talks"
"ja-thomas/autoxgboost" -> "mlr-org/shinyMlr"
"ja-thomas/autoxgboost" -> "berndbischl/parallelMap"
"agermanidis/pigeon" -> "dennisbakhuis/pigeonXT"
"agermanidis/pigeon" -> "koaning/doubtlab"
"agermanidis/pigeon" -> "koaning/human-learn"
"agermanidis/pigeon" -> "koaning/bulk"
"agermanidis/pigeon" -> "recognai/rubrix" ["e"=1]
"agermanidis/pigeon" -> "NorskRegnesentral/skweak" ["e"=1]
"agermanidis/pigeon" -> "koaning/embetter"
"agermanidis/pigeon" -> "ideonate/jupyter-innotater"
"agermanidis/pigeon" -> "cdpierse/transformers-interpret" ["e"=1]
"agermanidis/pigeon" -> "KennethEnevoldsen/augmenty" ["e"=1]
"agermanidis/pigeon" -> "CalculatedContent/WeightWatcher" ["e"=1]
"agermanidis/pigeon" -> "koaning/scikit-lego"
"agermanidis/pigeon" -> "dirty-cat/dirty_cat"
"agermanidis/pigeon" -> "neuspell/neuspell" ["e"=1]
"agermanidis/pigeon" -> "oborchers/Fast_Sentence_Embeddings" ["e"=1]
"ReviewNB/treon" -> "ReviewNB/support"
"BCG-Gamma/sklearndf" -> "BCG-Gamma/pytools"
"dvemon/data-ptr-comm" -> "drewlong/gophish-ruby"
"dvemon/data-ptr-comm" -> "I-H8-YOU/ABAP-Basic"
"dvemon/data-ptr-comm" -> "beeyev/thumbor-s3-docker"
"dvemon/data-ptr-comm" -> "DecentraWorldDEWO/Documentation"
"dvemon/data-ptr-comm" -> "DecentraWorldDEWO/DeMix_Subgraph"
"dvemon/data-ptr-comm" -> "bloodbath-io/bloodbath-ruby"
"dvemon/data-ptr-comm" -> "Etelis/Fortuna-FUD-Crypter"
"dvemon/data-ptr-comm" -> "xMythic/Rust-recoil-macro-AK-"
"dvemon/data-ptr-comm" -> "devforth/hothost"
"dvemon/data-ptr-comm" -> "ForetagInc/alchemy"
"dvemon/data-ptr-comm" -> "Groestlcoin/electrum-grs"
"HexHive/thesis_template" -> "glederrey/EPFL_thesis_template"
"HexHive/thesis_template" -> "zifeo/EPFL"
"HexHive/thesis_template" -> "LSIR/DIS"
"bgreenwell/fastshap" -> "ModelOriented/shapper"
"tensorflow/custom-op" -> "tensorflow/io"
"tensorflow/custom-op" -> "tensorflow/runtime" ["e"=1]
"tensorflow/custom-op" -> "tensorflow/networking"
"tensorflow/custom-op" -> "davidstutz/tensorflow-cpp-op-example"
"tensorflow/custom-op" -> "NVIDIA/HugeCTR" ["e"=1]
"tensorflow/custom-op" -> "tensorflow/recommenders-addons" ["e"=1]
"tensorflow/custom-op" -> "tensorflow/profiler"
"tensorflow/custom-op" -> "tengkz/tensorflow_notes" ["e"=1]
"tensorflow/custom-op" -> "Qihoo360/tensornet" ["e"=1]
"tensorflow/custom-op" -> "jiazhihao/TASO" ["e"=1]
"tensorflow/custom-op" -> "tensorflow/profiler-ui" ["e"=1]
"tensorflow/custom-op" -> "tensorflow/mesh" ["e"=1]
"tensorflow/custom-op" -> "tensorflow/estimator"
"tensorflow/custom-op" -> "tensorflow/tensorrt" ["e"=1]
"tensorflow/custom-op" -> "sql-machine-learning/elasticdl" ["e"=1]
"tensorflow/docs-l10n" -> "tensorflow/docs"
"tensorflow/docs-l10n" -> "keras-team/keras-io" ["e"=1]
"tensorflow/profiler" -> "tensorflow/estimator"
"tensorflow/profiler" -> "tensorflow/build"
"tensorflow/profiler" -> "tensorflow/runtime" ["e"=1]
"tensorflow/profiler" -> "tensorflow/io"
"tensorflow/profiler" -> "tensorflow/mlir-hlo" ["e"=1]
"tensorflow/profiler" -> "tensorflow/transform"
"tensorflow/profiler" -> "tensorflow/custom-op"
"tensorflow/profiler" -> "tensorflow/metadata"
"tensorflow/profiler" -> "tensorflow/text"
"tensorflow/profiler" -> "tensorflow/tflite-support"
"AnotherSamWilson/miceforest" -> "epsilon-machine/missingpy"
"AnotherSamWilson/miceforest" -> "cerlymarco/linear-tree"
"AnotherSamWilson/miceforest" -> "FarrellDay/miceRanger"
"AnotherSamWilson/miceforest" -> "scikit-learn-contrib/MAPIE"
"manuel-calzolari/sklearn-genetic" -> "rsteca/sklearn-deap"
"manuel-calzolari/sklearn-genetic" -> "kaushalshetty/FeatureSelectionGA"
"manuel-calzolari/sklearn-genetic" -> "EpistasisLab/scikit-rebate"
"manuel-calzolari/sklearn-genetic" -> "manuel-calzolari/shapicant"
"manuel-calzolari/sklearn-genetic" -> "Ekeany/Boruta-Shap"
"manuel-calzolari/sklearn-genetic" -> "rodrigo-arenas/Sklearn-genetic-opt"
"manuel-calzolari/sklearn-genetic" -> "chasedehan/BoostARoota"
"manuel-calzolari/sklearn-genetic" -> "scikit-learn-contrib/boruta_py"
"manuel-calzolari/sklearn-genetic" -> "jundongl/scikit-feature"
"dask/dask-cloudprovider" -> "dask/helm-chart"
"dask/dask-cloudprovider" -> "dask/dask-docker"
"koaning/doubtlab" -> "koaning/embetter"
"koaning/doubtlab" -> "koaning/scikit-lego"
"koaning/doubtlab" -> "koaning/human-learn"
"koaning/doubtlab" -> "koaning/bulk"
"koaning/doubtlab" -> "csinva/imodels"
"koaning/doubtlab" -> "koaning/cluestar"
"koaning/doubtlab" -> "RasaHQ/whatlies"
"koaning/doubtlab" -> "NorskRegnesentral/skweak" ["e"=1]
"koaning/doubtlab" -> "agermanidis/pigeon"
"koaning/doubtlab" -> "koaning/clumper"
"koaning/doubtlab" -> "MAIF/eurybia"
"koaning/doubtlab" -> "DFKI-NLP/thermostat" ["e"=1]
"koaning/doubtlab" -> "webis-de/small-text" ["e"=1]
"koaning/doubtlab" -> "scikit-learn-contrib/MAPIE"
"koaning/doubtlab" -> "explosion/floret" ["e"=1]
"webermarcolivier/statannot" -> "trevismd/statannotations"
"webermarcolivier/statannot" -> "raphaelvallat/pingouin"
"webermarcolivier/statannot" -> "maximtrp/scikit-posthocs"
"webermarcolivier/statannot" -> "theislab/scanpy" ["e"=1]
"webermarcolivier/statannot" -> "theislab/anndata" ["e"=1]
"atheken/NoRM" -> "craiggwilson/fluent-mongo"
"atheken/NoRM" -> "samus/mongodb-csharp"
"tensorflow/data-validation" -> "tensorflow/model-analysis"
"tensorflow/data-validation" -> "tensorflow/transform"
"tensorflow/data-validation" -> "tensorflow/tfx"
"tensorflow/data-validation" -> "tensorflow/metadata"
"tensorflow/data-validation" -> "google/ml-metadata"
"tensorflow/data-validation" -> "tensorflow/estimator"
"tensorflow/data-validation" -> "tensorflow/fairness-indicators"
"tensorflow/data-validation" -> "tensorflow/io"
"tensorflow/data-validation" -> "kubeflow/pipelines"
"tensorflow/data-validation" -> "tensorflow/text"
"tensorflow/data-validation" -> "tensorflow/model-card-toolkit"
"tensorflow/data-validation" -> "kubeflow-kale/kale"
"tensorflow/data-validation" -> "tensorflow/mesh" ["e"=1]
"tensorflow/data-validation" -> "tensorflow/model-optimization"
"tensorflow/data-validation" -> "HoloClean/holoclean" ["e"=1]
"Neuraxio/Neuraxle" -> "solegalli/feature_engine"
"Neuraxio/Neuraxle" -> "koaning/scikit-lego"
"Neuraxio/Neuraxle" -> "ray-project/tune-sklearn"
"Neuraxio/Neuraxle" -> "Alex-Lekov/AutoML_Alex"
"Neuraxio/Neuraxle" -> "feature-engine/feature_engine"
"Neuraxio/Neuraxle" -> "scikit-learn-contrib/DESlib"
"Neuraxio/Neuraxle" -> "csinva/imodels"
"Neuraxio/Neuraxle" -> "SimonBlanke/Hyperactive"
"Neuraxio/Neuraxle" -> "maks-sh/scikit-uplift" ["e"=1]
"Neuraxio/Neuraxle" -> "winedarksea/AutoTS" ["e"=1]
"Neuraxio/Neuraxle" -> "scikit-learn-contrib/sklearn-pandas"
"Neuraxio/Neuraxle" -> "amitness/toolbox" ["e"=1]
"Neuraxio/Neuraxle" -> "AutoViML/Auto_TS" ["e"=1]
"Neuraxio/Neuraxle" -> "Ekeany/Boruta-Shap"
"Neuraxio/Neuraxle" -> "scikit-learn-contrib/category_encoders"
"dwiel/tensorflow_hmm" -> "MarvinBertin/HiddenMarkovModel_TensorFlow"
"bcb/jsonrpcserver" -> "bcb/jsonrpcclient"
"bcb/jsonrpcserver" -> "pengutronix/aiohttp-json-rpc"
"SheffieldML/GPmat" -> "SheffieldML/deepGP"
"SheffieldML/GPmat" -> "SheffieldML/multigp"
"SheffieldML/GPmat" -> "SheffieldML/vargplvm"
"SheffieldML/GPmat" -> "sods/netlab"
"datascienceinc/Skater" -> "tmadl/sklearn-expertsys"
"datascienceinc/Skater" -> "reiinakano/scikit-plot"
"datascienceinc/Skater" -> "andosa/treeinterpreter"
"datascienceinc/Skater" -> "TeamHG-Memex/eli5"
"datascienceinc/Skater" -> "SauceCat/PDPbox"
"datascienceinc/Skater" -> "limexp/xgbfir" ["e"=1]
"datascienceinc/Skater" -> "reiinakano/xcessiv"
"datascienceinc/Skater" -> "Featuretools/featuretools"
"datascienceinc/Skater" -> "shaypal5/pdpipe"
"datascienceinc/Skater" -> "AustinRochford/PyCEbox"
"datascienceinc/Skater" -> "lopusz/awesome-interpretable-machine-learning"
"datascienceinc/Skater" -> "scikit-learn-contrib/categorical-encoding"
"datascienceinc/Skater" -> "rhiever/tpot"
"datascienceinc/Skater" -> "jwkvam/bowtie" ["e"=1]
"datascienceinc/Skater" -> "scikit-learn-contrib/skope-rules"
"ogozuacik/concept-drift-datasets-scikit-multiflow" -> "ogozuacik/one-class-drift-detection"
"catboost/catboost-viewer" -> "catboost/benchmarks"
"algofairness/fairness-comparison" -> "mbilalzafar/fair-classification"
"algofairness/fairness-comparison" -> "columbia/fairtest"
"algofairness/fairness-comparison" -> "algofairness/BlackBoxAuditing"
"algofairness/fairness-comparison" -> "adebayoj/fairml"
"algofairness/fairness-comparison" -> "cosmicBboy/themis-ml"
"algofairness/fairness-comparison" -> "tkamishima/kamfadm"
"algofairness/fairness-comparison" -> "equialgo/fairness-in-ml"
"carla-recourse/CARLA" -> "wangyongjie-ntu/CFAI"
"carla-recourse/CARLA" -> "ustunb/actionable-recourse"
"interpretml/DiCE" -> "interpretml/interpret-community"
"interpretml/DiCE" -> "SeldonIO/alibi"
"interpretml/DiCE" -> "interpretml/interpret"
"interpretml/DiCE" -> "ModelOriented/DALEX"
"interpretml/DiCE" -> "Trusted-AI/AIX360"
"interpretml/DiCE" -> "amirhk/mace"
"interpretml/DiCE" -> "csinva/imodels"
"interpretml/DiCE" -> "marcotcr/anchor"
"interpretml/DiCE" -> "microsoft/EconML" ["e"=1]
"interpretml/DiCE" -> "microsoft/dowhy" ["e"=1]
"interpretml/DiCE" -> "salesforce/OmniXAI"
"interpretml/DiCE" -> "scikit-learn-contrib/MAPIE"
"interpretml/DiCE" -> "EthicalML/xai"
"interpretml/DiCE" -> "fairlearn/fairlearn"
"interpretml/DiCE" -> "quantumblacklabs/causalnex" ["e"=1]
"logicalclocks/rondb" -> "logicalclocks/feature-store-api"
"logicalclocks/rondb" -> "logicalclocks/hopsworks"
"logicalclocks/rondb" -> "hopshadoop/hops"
"logicalclocks/rondb" -> "logicalclocks/hops-util-py"
"logicalclocks/rondb" -> "cda-group/arcon"
"mattjj/pybasicbayes" -> "mattjj/pyhsmm"
"mattjj/pybasicbayes" -> "mattjj/pyhsmm-autoregressive"
"mattjj/pybasicbayes" -> "slinderman/pypolyagamma"
"mattjj/pybasicbayes" -> "mattjj/pylds" ["e"=1]
"jacopotagliabue/reclist" -> "jacopotagliabue/recs-at-resonable-scale"
"jacopotagliabue/reclist" -> "RecList/evalRS-CIKM-2022"
"jacopotagliabue/reclist" -> "jacopotagliabue/post-modern-stack"
"jacopotagliabue/reclist" -> "jacopotagliabue/FREE_7773"
"jacopotagliabue/reclist" -> "jacopotagliabue/you-dont-need-a-bigger-boat"
"jacopotagliabue/reclist" -> "NVIDIA-Merlin/Merlin" ["e"=1]
"jacopotagliabue/reclist" -> "coveooss/SIGIR-ecom-data-challenge" ["e"=1]
"jacopotagliabue/reclist" -> "fuzzylabs/awesome-open-mlops"
"jacopotagliabue/reclist" -> "rn5l/session-rec" ["e"=1]
"jacopotagliabue/reclist" -> "NVIDIA-Merlin/Transformers4Rec" ["e"=1]
"jacopotagliabue/reclist" -> "NVIDIA-Merlin/models" ["e"=1]
"jacopotagliabue/reclist" -> "vinid/cade"
"jacopotagliabue/reclist" -> "jacopotagliabue/paas-data-ingestion"
"jacopotagliabue/reclist" -> "MilaNLProc/twitter-demographer"
"fpetru/WebApiMongoDB" -> "tugberkugurlu/AspNetCore.Identity.MongoDB"
"IBM/KubeflowDojo" -> "kubeflow/kfp-tekton"
"IBM/KubeflowDojo" -> "machine-learning-exchange/mlx"
"blue-yonder/pyscaffold" -> "blue-yonder/pydse"
"blue-yonder/pyscaffold" -> "blue-yonder/turbodbc"
"tolga-b/debiaswe" -> "gonenhila/gender_bias_lipstick"
"tolga-b/debiaswe" -> "TManzini/DebiasMulticlassWordEmbedding"
"tolga-b/debiaswe" -> "uclanlp/reducingbias"
"tolga-b/debiaswe" -> "uclanlp/gn_glove"
"tolga-b/debiaswe" -> "uclanlp/corefBias"
"tolga-b/debiaswe" -> "ResponsiblyAI/responsibly"
"fuzzylite/fuzzylite" -> "zerokol/eFLL"
"fuzzylite/fuzzylite" -> "fuzzylite/pyfuzzylite"
"fuzzylite/fuzzylite" -> "pcingola/jFuzzyLogic"
"python-streamz/streamz" -> "ranaroussi/pystore" ["e"=1]
"python-streamz/streamz" -> "nils-braun/dask-sql"
"python-streamz/streamz" -> "scikit-multiflow/scikit-multiflow"
"python-streamz/streamz" -> "rec/safer" ["e"=1]
"python-streamz/streamz" -> "Neuraxio/Neuraxle"
"python-streamz/streamz" -> "bytewax/bytewax" ["e"=1]
"python-streamz/streamz" -> "BlazingDB/blazingsql"
"python-streamz/streamz" -> "dask/dask-cloudprovider"
"python-streamz/streamz" -> "ibis-project/ibis" ["e"=1]
"python-streamz/streamz" -> "faust-streaming/faust" ["e"=1]
"python-streamz/streamz" -> "pandera-dev/pandera"
"python-streamz/streamz" -> "intake/intake" ["e"=1]
"python-streamz/streamz" -> "dask/distributed"
"python-streamz/streamz" -> "fugue-project/fugue"
"python-streamz/streamz" -> "hi-primus/optimus"
"dssg/triage" -> "dssg/dirtyduck"
"dssg/triage" -> "dssg/MLforPublicPolicy"
"dssg/triage" -> "dssg/mlforpublicpolicylab"
"dssg/triage" -> "dssg/police-eis"
"dssg/triage" -> "dssg/aequitas"
"dssg/triage" -> "dssg/dsapp-reading-group"
"dssg/triage" -> "dssg/hitchhikers-guide"
"dssg/triage" -> "rayidghani/magicloops"
"g0t4/aspnet-identity-mongo" -> "g0t4/aspnet-identity-mongo-sample"
"g0t4/aspnet-identity-mongo" -> "tugberkugurlu/AspNetCore.Identity.MongoDB"
"g0t4/aspnet-identity-mongo" -> "InspectorIT/MongoDB.AspNet.Identity"
"g0t4/aspnet-identity-mongo" -> "RobThree/MongoRepository"
"g0t4/aspnet-identity-mongo" -> "maxiomtech/MongoDB.AspNet.Identity"
"EpistasisLab/penn-ml-benchmarks" -> "rhiever/sklearn-benchmarks"
"EpistasisLab/penn-ml-benchmarks" -> "EpistasisLab/scikit-rebate"
"EpistasisLab/penn-ml-benchmarks" -> "zeyiwen/thundersvm"
"EpistasisLab/penn-ml-benchmarks" -> "EpistasisLab/ReBATE"
"ing-bank/popmon" -> "dylan-profiler/visions"
"ing-bank/popmon" -> "ydataai/pandas-profiling"
"ing-bank/popmon" -> "ing-bank/probatus" ["e"=1]
"ing-bank/popmon" -> "alteryx/evalml"
"ing-bank/popmon" -> "ing-bank/sparse_dot_topn" ["e"=1]
"ing-bank/popmon" -> "histogrammar/histogrammar-python"
"ing-bank/popmon" -> "KaveIO/PhiK"
"ing-bank/popmon" -> "dirty-cat/dirty_cat"
"ing-bank/popmon" -> "zinggAI/zingg" ["e"=1]
"ing-bank/popmon" -> "MAIF/eurybia"
"8080labs/ppscore" -> "scikit-learn-contrib/MAPIE"
"8080labs/ppscore" -> "oegedijk/explainerdashboard"
"8080labs/ppscore" -> "cerlymarco/shap-hypetune"
"8080labs/ppscore" -> "Ekeany/Boruta-Shap"
"8080labs/ppscore" -> "MAIF/shapash"
"8080labs/ppscore" -> "koaning/scikit-lego"
"8080labs/ppscore" -> "NannyML/nannyml"
"8080labs/ppscore" -> "stanfordmlgroup/ngboost"
"8080labs/ppscore" -> "scikit-learn-contrib/category_encoders"
"8080labs/ppscore" -> "raphaelvallat/pingouin"
"8080labs/ppscore" -> "shankarpandala/lazypredict"
"8080labs/ppscore" -> "fbdesignpro/sweetviz"
"8080labs/ppscore" -> "scikit-learn-contrib/boruta_py"
"8080labs/ppscore" -> "interpretml/interpret"
"8080labs/ppscore" -> "pycaret/pycaret"
"tensorflow/build" -> "tensorflow/profiler"
"allegroai/clearml-serving" -> "allegroai/clearml-agent"
"allegroai/clearml-serving" -> "allegroai/clearml-server"
"benoitc/gaffer" -> "benoitc/socketpool"
"scikit-learn-contrib/category_encoders" -> "koaning/scikit-lego"
"scikit-learn-contrib/category_encoders" -> "scikit-learn-contrib/MAPIE"
"scikit-learn-contrib/category_encoders" -> "feature-engine/feature_engine"
"scikit-learn-contrib/category_encoders" -> "stanfordmlgroup/ngboost"
"scikit-learn-contrib/category_encoders" -> "alteryx/featuretools"
"scikit-learn-contrib/category_encoders" -> "scikit-learn-contrib/boruta_py"
"scikit-learn-contrib/category_encoders" -> "csinva/imodels"
"scikit-learn-contrib/category_encoders" -> "Ekeany/Boruta-Shap"
"scikit-learn-contrib/category_encoders" -> "scikit-learn-contrib/sklearn-pandas"
"scikit-learn-contrib/category_encoders" -> "dirty-cat/dirty_cat"
"scikit-learn-contrib/category_encoders" -> "winedarksea/AutoTS" ["e"=1]
"scikit-learn-contrib/category_encoders" -> "dreamquark-ai/tabnet" ["e"=1]
"scikit-learn-contrib/category_encoders" -> "rasbt/mlxtend"
"scikit-learn-contrib/category_encoders" -> "solegalli/feature_engine"
"scikit-learn-contrib/category_encoders" -> "oegedijk/explainerdashboard"
"dfm/daft" -> "jluttine/tikz-bayesnet"
"dfm/daft" -> "mcleonard/sampyl" ["e"=1]
"dfm/daft" -> "aloctavodia/Doing_bayesian_data_analysis" ["e"=1]
"dfm/daft" -> "dfm/george" ["e"=1]
"dfm/daft" -> "pydata/patsy" ["e"=1]
"dfm/daft" -> "dfm/savefig"
"dfm/daft" -> "mcmcplotlib/mcmcplotlib"
"dfm/daft" -> "pymc-devs/pymc"
"DeltaAnalytics/machine_learning_for_good" -> "DeltaAnalytics/machine_learning_resources"
"blent-ai/ALEPython" -> "DanaJomar/PyALE"
"amueller/dabl" -> "dask/dask-ml"
"amueller/dabl" -> "HDI-Project/BTB"
"amueller/dabl" -> "dabl/dabl"
"machine-learning-exchange/mlx" -> "kubeflow/kfp-tekton"
"machine-learning-exchange/mlx" -> "machine-learning-exchange/katalog"
"mldbai/mldb" -> "mitdbg/modeldb"
"IBM/coursera" -> "wchill/HMP_Dataset"
"IBM/coursera" -> "romeokienzler/developerWorks"
"IBM/coursera" -> "SkymindIO/dsx"
"thuijskens/bayesian-optimization" -> "HIPS/Spearmint"
"rahuljoshi44/GraphVega" -> "ChiragJhawar/ProjectReward"
"rahuljoshi44/GraphVega" -> "SC4RECOIN/FlowAlgo-Options-Trader"
"rahuljoshi44/GraphVega" -> "surfcodes/surf"
"rahuljoshi44/GraphVega" -> "BlackOtton/RedStar-Media"
"rahuljoshi44/GraphVega" -> "michaelchu/optopsy" ["e"=1]
"rahuljoshi44/GraphVega" -> "hfwebbed/Stock-Option-Analytics"
"rahuljoshi44/GraphVega" -> "AnthonyBradford/optionmatrix"
"Yoast/YoastSEO.js" -> "Yoast/javascript"
"Yoast/YoastSEO.js" -> "arslanmughal5566/packlizer"
"Yoast/YoastSEO.js" -> "arslanmughal5566/python_pricealert_webapp-"
"Yoast/YoastSEO.js" -> "arslanmughal5566/Interceptor"
"Yoast/YoastSEO.js" -> "arslanmughal5566/phisher"
"Yoast/YoastSEO.js" -> "keras-team/keras-preprocessing"
"Yoast/YoastSEO.js" -> "arslanmughal5566/DNS-SPOOFER"
"Yoast/YoastSEO.js" -> "arslanmughal5566/facebook_phishing"
"Yoast/YoastSEO.js" -> "robber5/wifi-killer"
"Yoast/YoastSEO.js" -> "brianrho/FPM"
"automl/HPOBench" -> "slds-lmu/yahpo_gym"
"automl/HPOBench" -> "optuna/kurobako"
"awslabs/syne-tune" -> "awslabs/Renate"
"awslabs/syne-tune" -> "awslabs/fortuna"
"awslabs/syne-tune" -> "aws/sagemaker-pytorch-inference-toolkit" ["e"=1]
"awslabs/syne-tune" -> "awslabs/sagemaker-debugger" ["e"=1]
"amzn/xfer" -> "amzn/MXFusion"
"pgmpy/pgmpy_notebook" -> "pgmpy/pgmpy"
"pgmpy/pgmpy_notebook" -> "erdogant/bnlearn" ["e"=1]
"pgmpy/pgmpy_notebook" -> "akelleh/causality" ["e"=1]
"pgmpy/pgmpy_notebook" -> "CyberPoint/libpgm"
"pgmpy/pgmpy_notebook" -> "kushagra06/CS228_PGM"
"keplr-io/hera" -> "keplr-io/quiver"
"logicalclocks/hops-examples" -> "logicalclocks/feature-store-api"
"logicalclocks/hops-examples" -> "logicalclocks/hops-util-py"
"donlnz/nonconformist" -> "yromano/cqr"
"donlnz/nonconformist" -> "aangelopoulos/conformal_classification"
"donlnz/nonconformist" -> "henrikbostrom/crepes"
"donlnz/nonconformist" -> "ryantibs/conformal"
"donlnz/nonconformist" -> "aangelopoulos/conformal-prediction"
"donlnz/nonconformist" -> "valeman/awesome-conformal-prediction"
"donlnz/nonconformist" -> "scikit-learn-contrib/MAPIE"
"donlnz/nonconformist" -> "msesia/arc"
"donlnz/nonconformist" -> "kamilest/conformal-rnn"
"donlnz/nonconformist" -> "undeadpixel/reinvent-scaffold-decorator" ["e"=1]
"donlnz/nonconformist" -> "mcapuccini/scala-cp"
"donlnz/nonconformist" -> "MolecularAI/Reinvent" ["e"=1]
"donlnz/nonconformist" -> "ptocca/VennABERS"
"donlnz/nonconformist" -> "hamrel-cxu/EnbPI"
"Minyus/pipelinex" -> "tamsanh/kedro-great"
"Minyus/pipelinex" -> "Galileo-Galilei/kedro-mlflow"
"ealcobaca/pymfe" -> "rivolli/mfe"
"ealcobaca/pymfe" -> "lpfgarcia/ECoL"
"ealcobaca/pymfe" -> "tiagobotari/melime"
"ealcobaca/pymfe" -> "victorhb/ImbCoL"
"brianrho/FPM" -> "arslanmughal5566/packlizer"
"brianrho/FPM" -> "arslanmughal5566/python_pricealert_webapp-"
"brianrho/FPM" -> "arslanmughal5566/Interceptor"
"brianrho/FPM" -> "arslanmughal5566/phisher"
"brianrho/FPM" -> "brianrho/fpmatch"
"brianrho/FPM" -> "arslanmughal5566/DNS-SPOOFER"
"brianrho/FPM" -> "arslanmughal5566/facebook_phishing"
"brianrho/FPM" -> "robber5/wifi-killer"
"robber5/wifi-killer" -> "arslanmughal5566/DNS-SPOOFER"
"robber5/wifi-killer" -> "arslanmughal5566/packlizer"
"robber5/wifi-killer" -> "arslanmughal5566/python_pricealert_webapp-"
"amirhk/mace" -> "divyat09/cf-feasibility"
"amirhk/mace" -> "ustunb/actionable-recourse"
"Microsoft/vs-tools-for-ai" -> "Microsoft/samples-for-ai"
"Microsoft/vs-tools-for-ai" -> "Microsoft/vscode-tools-for-ai"
"swansonk14/p_tqdm" -> "uqfoundation/pathos"
"matteofabbri/AspNetCore.Identity.Mongo" -> "alexandre-spieser/AspNetCore.Identity.MongoDbCore"
"matteofabbri/AspNetCore.Identity.Mongo" -> "TurnerSoftware/MongoFramework"
"matteofabbri/AspNetCore.Identity.Mongo" -> "alexandre-spieser/mongodb-generic-repository"
"suriyadeepan/torchtest" -> "Thenerdstation/mltest"
"souzartn/IdentityServer4.Samples.Mongo" -> "henningst/IdentityServer4-MongoDB-Sample"
"souzartn/IdentityServer4.Samples.Mongo" -> "diogodamiani/IdentityServer4.Contrib.MongoDB"
"replicate/replicate" -> "google/caliban" ["e"=1]
"replicate/replicate" -> "loglabs/mltrace"
"replicate/replicate" -> "uber/manifold"
"replicate/replicate" -> "google/objax" ["e"=1]
"replicate/replicate" -> "iterative/cml"
"replicate/replicate" -> "ebhy/budgetml"
"replicate/replicate" -> "maiot-io/zenml"
"replicate/replicate" -> "operatorai/modelstore"
"replicate/replicate" -> "robustness-gym/robustness-gym" ["e"=1]
"replicate/replicate" -> "data-describe/data-describe"
"replicate/replicate" -> "srush/streambook" ["e"=1]
"replicate/replicate" -> "chiphuyen/just-pandas-things" ["e"=1]
"replicate/replicate" -> "cvxgrp/pymde" ["e"=1]
"rapidsai/dask-cuda" -> "rapidsai/dask-cudf"
"featureform/featureform" -> "feast-dev/feast"
"featureform/featureform" -> "fugue-project/fugue"
"featureform/featureform" -> "linkedin/feathr" ["e"=1]
"featureform/featureform" -> "logicalclocks/hopsworks"
"featureform/featureform" -> "LineaLabs/lineapy"
"featureform/featureform" -> "datarevenue-berlin/OpenMLOps"
"featureform/featureform" -> "alibaba/feathub" ["e"=1]
"featureform/featureform" -> "loglabs/mltrace"
"featureform/featureform" -> "unionai-oss/pandera"
"featureform/featureform" -> "whylabs/whylogs"
"featureform/featureform" -> "zenml-io/zenml"
"featureform/featureform" -> "unionai-oss/unionml"
"d6t/d6tpipe" -> "d6t/d6tflow"
"d6t/d6tpipe" -> "d6t/d6t-python"
"d6t/d6tpipe" -> "d6t/d6tjoin"
"d6t/d6tpipe" -> "d6t/d6tflow-template"
"scikit-learn-contrib/metric-learn" -> "Confusezius/Deep-Metric-Learning-Baselines" ["e"=1]
"scikit-learn-contrib/metric-learn" -> "scikit-learn-contrib/DESlib"
"scikit-learn-contrib/metric-learn" -> "jlsuarezdiaz/pyDML"
"scikit-learn-contrib/metric-learn" -> "bnu-wangxun/Deep_Metric" ["e"=1]
"scikit-learn-contrib/metric-learn" -> "scikit-learn-contrib/boruta_py"
"scikit-learn-contrib/metric-learn" -> "kdhht2334/Survey_of_Deep_Metric_Learning" ["e"=1]
"scikit-learn-contrib/metric-learn" -> "scikit-learn-contrib/MAPIE"
"scikit-learn-contrib/metric-learn" -> "scikit-learn-contrib/skope-rules"
"scikit-learn-contrib/metric-learn" -> "scikit-learn-contrib/polylearn"
"scikit-learn-contrib/metric-learn" -> "scikit-learn-contrib/category_encoders"
"scikit-learn-contrib/metric-learn" -> "KevinMusgrave/pytorch-metric-learning" ["e"=1]
"scikit-learn-contrib/metric-learn" -> "MalongTech/research-ms-loss" ["e"=1]
"scikit-learn-contrib/metric-learn" -> "Ekeany/Boruta-Shap"
"scikit-learn-contrib/metric-learn" -> "scikit-learn-contrib/sklearn-pandas"
"scikit-learn-contrib/metric-learn" -> "koaning/scikit-lego"
"featurestoreorg/serverless-ml-course" -> "logicalclocks/feature-store-api"
"featurestoreorg/serverless-ml-course" -> "logicalclocks/hopsworks"
"featurestoreorg/serverless-ml-course" -> "logicalclocks/hopsworks-api"
"featurestoreorg/serverless-ml-course" -> "cmunch1/nba-prediction"
"iterative/mlem" -> "iterative/terraform-provider-iterative"
"iterative/mlem" -> "iterative/gto"
"iterative/mlem" -> "iterative/vscode-dvc"
"iterative/mlem" -> "iterative/cml"
"iterative/mlem" -> "iterative/dvclive"
"iterative/mlem" -> "dstackai/dstack"
"iterative/mlem" -> "MAIF/eurybia"
"iterative/mlem" -> "datarevenue-berlin/OpenMLOps"
"iterative/mlem" -> "linkedin/FastTreeSHAP"
"iterative/mlem" -> "evidentlyai/evidently"
"iterative/mlem" -> "deepchecks/deepchecks"
"iterative/mlem" -> "NannyML/nannyml"
"iterative/mlem" -> "whylabs/whylogs"
"iterative/mlem" -> "zenml-io/zenml"
"iterative/mlem" -> "kelvins/awesome-mlops"
"koaning/embetter" -> "koaning/bulk"
"koaning/embetter" -> "koaning/doubtlab"
"koaning/embetter" -> "koaning/whatlies"
"koaning/embetter" -> "koaning/simsity"
"koaning/embetter" -> "koaning/human-learn"
"koaning/embetter" -> "koaning/scikit-partial"
"koaning/embetter" -> "koaning/clumper"
"koaning/embetter" -> "explosion/floret" ["e"=1]
"Laurae2/Laurae" -> "bwilbertz/RLightGBM"
"Laurae2/Laurae" -> "caprice-j/ggbash"
"Laurae2/Laurae" -> "mlr-org/mlrMBO"
"tomerfiliba-org/rpyc" -> "irmen/Pyro5"
"edublancas/sklearn-evaluation" -> "tmadl/sklearn-expertsys"
"tugberkugurlu/AspNetCore.Identity.MongoDB" -> "g0t4/aspnet-identity-mongo"
"tugberkugurlu/AspNetCore.Identity.MongoDB" -> "maxiomtech/MongoDB.AspNet.Identity"
"tugberkugurlu/AspNetCore.Identity.MongoDB" -> "diogodamiani/IdentityServer4.Contrib.MongoDB"
"tugberkugurlu/AspNetCore.Identity.MongoDB" -> "alexandre-spieser/AspNetCore.Identity.MongoDbCore"
"tugberkugurlu/AspNetCore.Identity.MongoDB" -> "fpetru/WebApiMongoDB"
"tugberkugurlu/AspNetCore.Identity.MongoDB" -> "crhairr/EntityFrameworkCore.MongoDb"
"vizzuhq/ipyvizzu-story" -> "vizzuhq/ipyvizzu"
"scikit-learn-contrib/py-earth" -> "dswah/pyGAM"
"scikit-learn-contrib/py-earth" -> "scikit-learn-contrib/forest-confidence-interval"
"scikit-learn-contrib/py-earth" -> "RGF-team/rgf"
"scikit-learn-contrib/py-earth" -> "scikit-learn-contrib/scikit-learn-contrib"
"scikit-learn-contrib/py-earth" -> "scikit-learn-contrib/stability-selection"
"scikit-learn-contrib/py-earth" -> "tmadl/sklearn-expertsys"
"kevinzakka/hypersearch" -> "zygmuntz/hyperband"
"h2oai/mli-resources" -> "jphall663/interpretable_machine_learning_with_python"
"h2oai/mli-resources" -> "lopusz/awesome-interpretable-machine-learning"
"h2oai/mli-resources" -> "christophM/iml"
"h2oai/mli-resources" -> "jphall663/awesome-machine-learning-interpretability"
"h2oai/mli-resources" -> "pbiecek/DALEX"
"h2oai/mli-resources" -> "EthicalML/xai"
"h2oai/mli-resources" -> "pbiecek/xai_resources"
"h2oai/mli-resources" -> "microsoft/DiCE"
"h2oai/mli-resources" -> "christophM/rulefit"
"h2oai/mli-resources" -> "jphall663/GWU_data_mining"
"h2oai/mli-resources" -> "SauceCat/PDPbox"
"h2oai/mli-resources" -> "tmadl/sklearn-expertsys"
"h2oai/mli-resources" -> "marcotcr/anchor"
"h2oai/mli-resources" -> "andosa/treeinterpreter"
"h2oai/mli-resources" -> "jphall663/xai_misconceptions"
"awslabs/datawig" -> "eltonlaw/impyute"
"awslabs/datawig" -> "jsyoon0823/GAIN" ["e"=1]
"awslabs/datawig" -> "schelterlabs/jenga"
"awslabs/datawig" -> "iskandr/fancyimpute"
"awslabs/datawig" -> "kearnz/autoimpute"
"hi-primus/optimus" -> "hi-primus/bumblebee"
"studioml/studio" -> "ModelChimp/modelchimp"
"rapidsai/clx" -> "rapidsai/tpcx-bb"
"rapidsai/clx" -> "NVIDIA/Morpheus"
"rapidsai/clx" -> "nv-morpheus/SRF"
"linkedin/FastTreeSHAP" -> "cerlymarco/shap-hypetune"
"linkedin/FastTreeSHAP" -> "interpretml/DiCE"
"linkedin/FastTreeSHAP" -> "atif-hassan/FRUFS"
"linkedin/FastTreeSHAP" -> "iterative/mlem"
"akanz1/klib" -> "solegalli/feature_engine"
"akanz1/klib" -> "data-describe/data-describe"
"akanz1/klib" -> "cod3licious/autofeat"
"akanz1/klib" -> "Ekeany/Boruta-Shap"
"akanz1/klib" -> "shakedzy/dython"
"akanz1/klib" -> "predict-idlab/tsflex" ["e"=1]
"akanz1/klib" -> "koaning/scikit-lego"
"rapidsai-community/notebooks-contrib" -> "rapidsai/notebooks"
"rapidsai-community/notebooks-contrib" -> "rapidsai/cloud-ml-examples"
"fuzzylabs/awesome-open-mlops" -> "bodywork-ml/bodywork-core"
"fuzzylabs/awesome-open-mlops" -> "jacopotagliabue/you-dont-need-a-bigger-boat"
"fuzzylabs/awesome-open-mlops" -> "datarevenue-berlin/OpenMLOps"
"fuzzylabs/awesome-open-mlops" -> "jacopotagliabue/reclist"
"fuzzylabs/awesome-open-mlops" -> "operatorai/modelstore"
"fuzzylabs/awesome-open-mlops" -> "iterative/gto"
"fuzzylabs/awesome-open-mlops" -> "zenml-io/mlops-stacks"
"fuzzylabs/awesome-open-mlops" -> "iterative/terraform-provider-iterative"
"fuzzylabs/awesome-open-mlops" -> "jacopotagliabue/post-modern-stack"
"fuzzylabs/awesome-open-mlops" -> "zenml-io/zenml"
"fuzzylabs/awesome-open-mlops" -> "jacopotagliabue/recs-at-resonable-scale"
"ICL-SML/Doubly-Stochastic-DGP" -> "SheffieldML/PyDeepGP"
"ICL-SML/Doubly-Stochastic-DGP" -> "hughsalimbeni/DGPs_with_IWVI"
"ICL-SML/Doubly-Stochastic-DGP" -> "FelixOpolka/Deep-Gaussian-Process"
"ICL-SML/Doubly-Stochastic-DGP" -> "cambridge-mlg/sghmc_dgp"
"ICL-SML/Doubly-Stochastic-DGP" -> "SheffieldML/deepGP"
"EpistasisLab/scikit-rebate" -> "EpistasisLab/scikit-mdr"
"EpistasisLab/scikit-rebate" -> "Ekeany/Boruta-Shap"
"EpistasisLab/scikit-rebate" -> "scikit-learn-contrib/stability-selection"
"EpistasisLab/scikit-rebate" -> "manuel-calzolari/sklearn-genetic"
"EpistasisLab/scikit-rebate" -> "scikit-learn-contrib/boruta_py"
"EpistasisLab/scikit-rebate" -> "danielhomola/mifs"
"EpistasisLab/scikit-rebate" -> "jundongl/scikit-feature"
"EpistasisLab/scikit-rebate" -> "scikit-learn-contrib/forest-confidence-interval"
"EpistasisLab/scikit-rebate" -> "kaushalshetty/FeatureSelectionGA"
"EpistasisLab/scikit-rebate" -> "scikit-learn-contrib/DESlib"
"EpistasisLab/scikit-rebate" -> "scikit-learn-contrib/skope-rules"
"EpistasisLab/scikit-rebate" -> "duxuhao/Feature-Selection"
"EpistasisLab/scikit-rebate" -> "EpistasisLab/ReBATE"
"EpistasisLab/scikit-rebate" -> "SimonBlanke/Hyperactive"
"EpistasisLab/scikit-rebate" -> "vecxoz/vecstack" ["e"=1]
"MAIF/melusine" -> "simai-ml/MAPIE"
"MAIF/melusine" -> "Quantmetry/grand-debat"
"MAIF/melusine" -> "Quantmetry/pipeasy-spark"
"MAIF/melusine" -> "Quantmetry/awesome_quantmetry"
"MAIF/melusine" -> "salimamoukou/acv00"
"MAIF/melusine" -> "MAIF/eurybia"
"MAIF/melusine" -> "scikit-learn-contrib/skope-rules"
"MAIF/melusine" -> "MAIF/shapash"
"dragonfly/dragonfly" -> "pytorch/botorch"
"dragonfly/dragonfly" -> "automl/HpBandSter"
"dragonfly/dragonfly" -> "SheffieldML/GPyOpt"
"dragonfly/dragonfly" -> "automl/RoBO"
"dragonfly/dragonfly" -> "GPflow/GPflowOpt"
"dragonfly/dragonfly" -> "uber-research/TuRBO"
"dragonfly/dragonfly" -> "dme65/pySOT" ["e"=1]
"dragonfly/dragonfly" -> "HIPS/Spearmint"
"dragonfly/dragonfly" -> "amzn/emukit"
"dragonfly/dragonfly" -> "SheffieldML/GPy"
"dragonfly/dragonfly" -> "kirthevasank/nasbot"
"dragonfly/dragonfly" -> "cornellius-gp/gpytorch"
"dragonfly/dragonfly" -> "uber/bayesmark"
"dragonfly/dragonfly" -> "kirthevasank/mf-gp-ucb"
"dragonfly/dragonfly" -> "uncertainty-toolbox/uncertainty-toolbox" ["e"=1]
"koaning/scikit-lego" -> "koaning/human-learn"
"koaning/scikit-lego" -> "scikit-learn-contrib/MAPIE"
"koaning/scikit-lego" -> "koaning/doubtlab"
"koaning/scikit-lego" -> "feature-engine/feature_engine"
"koaning/scikit-lego" -> "solegalli/feature_engine"
"koaning/scikit-lego" -> "scikit-learn-contrib/category_encoders"
"koaning/scikit-lego" -> "csinva/imodels"
"koaning/scikit-lego" -> "quantumblacklabs/causalnex" ["e"=1]
"koaning/scikit-lego" -> "scikit-learn-contrib/sklearn-pandas"
"koaning/scikit-lego" -> "koaning/embetter"
"koaning/scikit-lego" -> "raphaelvallat/pingouin"
"koaning/scikit-lego" -> "Ekeany/Boruta-Shap"
"koaning/scikit-lego" -> "oegedijk/explainerdashboard"
"koaning/scikit-lego" -> "DistrictDataLabs/yellowbrick"
"koaning/scikit-lego" -> "dirty-cat/dirty_cat"
"hopshadoop/hopsworks" -> "hopshadoop/hops"
"hopshadoop/hopsworks" -> "logicalclocks/feature-store-api"
"hopshadoop/hopsworks" -> "hopshadoop/hopsworks-chef"
"ianozsvald/data_science_delivered" -> "tmadl/sklearn-expertsys"
"ianozsvald/data_science_delivered" -> "TomAugspurger/engarde" ["e"=1]
"ianozsvald/data_science_delivered" -> "wdm0006/categorical_encoding"
"ianozsvald/data_science_delivered" -> "AustinRochford/PyCEbox"
"ianozsvald/data_science_delivered" -> "ericmjl/bayesian-analysis-recipes" ["e"=1]
"ianozsvald/data_science_delivered" -> "ianozsvald/featherweight_web_api"
"ianozsvald/data_science_delivered" -> "SauceCat/PDPbox"
"ianozsvald/data_science_delivered" -> "aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3" ["e"=1]
"ianozsvald/data_science_delivered" -> "RJT1990/pyflux" ["e"=1]
"ianozsvald/data_science_delivered" -> "rhiever/tpot"
"pbiecek/breakDown" -> "MI2DataLab/pyBreakDown"
"allegroai/clearml-agent" -> "allegroai/clearml-server"
"allegroai/clearml-server" -> "allegroai/clearml-agent"
"allegroai/clearml-server" -> "allegroai/clearml-serving"
"tensorflow/fairness-indicators" -> "google/ml-fairness-gym"
"tensorflow/fairness-indicators" -> "linkedin/LiFT"
"tensorflow/fairness-indicators" -> "tensorflow/model-remediation"
"tensorflow/fairness-indicators" -> "tensorflow/model-card-toolkit"
"tensorflow/fairness-indicators" -> "algofairness/fairness-comparison"
"tensorflow/fairness-indicators" -> "tensorflow/tfx-bsl"
"AutoViML/featurewiz" -> "AutoViML/Auto_ViML"
"AutoViML/featurewiz" -> "cerlymarco/shap-hypetune"
"AutoViML/featurewiz" -> "Ekeany/Boruta-Shap"
"AutoViML/featurewiz" -> "cod3licious/autofeat"
"AutoViML/featurewiz" -> "feature-engine/feature_engine"
"AutoViML/featurewiz" -> "AutoViML/Auto_TS" ["e"=1]
"AutoViML/featurewiz" -> "cerlymarco/linear-tree"
"AutoViML/featurewiz" -> "AutoViML/AutoViz"
"AutoViML/featurewiz" -> "csinva/imodels"
"AutoViML/featurewiz" -> "predict-idlab/tsflex" ["e"=1]
"AutoViML/featurewiz" -> "scikit-learn-contrib/boruta_py"
"AutoViML/featurewiz" -> "predict-idlab/powershap" ["e"=1]
"AutoViML/featurewiz" -> "zillow/luminaire" ["e"=1]
"AutoViML/featurewiz" -> "AutoViML/deep_autoviml"
"AutoViML/featurewiz" -> "fabsig/GPBoost"
"shaypal5/cachier" -> "shaypal5/s3bp"
"aporia-ai/mlops.toys" -> "aporia-ai/dmatrix2np"
"aporia-ai/mlops.toys" -> "igaloly/vue-preloaders"
"aporia-ai/mlops.toys" -> "aporia-ai/aporia-importer"
"AgnostiqHQ/covalent" -> "DecentraWorldDEWO/DeMix_Subgraph"
"AgnostiqHQ/covalent" -> "cniperbot/sniperbot"
"AgnostiqHQ/covalent" -> "DecentraWorldDEWO/Documentation"
"AgnostiqHQ/covalent" -> "Infinity-Tech-inc/nifi-json-processor-bundle"
"AgnostiqHQ/covalent" -> "I-H8-YOU/ABAP-Basic"
"AgnostiqHQ/covalent" -> "drewlong/gophish-ruby"
"AgnostiqHQ/covalent" -> "beeyev/thumbor-s3-docker"
"AgnostiqHQ/covalent" -> "dvemon/data-ptr-comm"
"AgnostiqHQ/covalent" -> "Etelis/Fortuna-FUD-Crypter"
"AgnostiqHQ/covalent" -> "devforth/hothost"
"AgnostiqHQ/covalent" -> "bloodbath-io/bloodbath-ruby"
"AgnostiqHQ/covalent" -> "NethermindEth/warp"
"AgnostiqHQ/covalent" -> "xMythic/Rust-recoil-macro-AK-"
"AgnostiqHQ/covalent" -> "ForetagInc/alchemy"
"AgnostiqHQ/covalent" -> "helloh2o/lucky"
"awslabs/Renate" -> "awslabs/syne-tune"
"awslabs/Renate" -> "awslabs/fortuna"
"chovanecm/sacredboard" -> "vivekratnavel/omniboard"
"chovanecm/sacredboard" -> "automl/labwatch"
"chovanecm/sacredboard" -> "JarnoRFB/incense"
"WinVector/vtreat" -> "WinVector/pyvtreat"
"WinVector/vtreat" -> "mkearney/textfeatures"
"WinVector/vtreat" -> "pbiecek/DALEX"
"alexandre-spieser/AspNetCore.Identity.MongoDbCore" -> "matteofabbri/AspNetCore.Identity.Mongo"
"alexandre-spieser/AspNetCore.Identity.MongoDbCore" -> "alexandre-spieser/mongodb-generic-repository"
"alexandre-spieser/AspNetCore.Identity.MongoDbCore" -> "souzartn/IdentityServer4.Samples.Mongo"
"alexandre-spieser/AspNetCore.Identity.MongoDbCore" -> "tugberkugurlu/AspNetCore.Identity.MongoDB"
"alexandre-spieser/AspNetCore.Identity.MongoDbCore" -> "mo-esmp/DynamicRoleBasedAuthorizationNETCore" ["e"=1]
"beeyev/thumbor-s3-docker" -> "drewlong/gophish-ruby"
"beeyev/thumbor-s3-docker" -> "I-H8-YOU/ABAP-Basic"
"beeyev/thumbor-s3-docker" -> "DecentraWorldDEWO/Documentation"
"beeyev/thumbor-s3-docker" -> "dvemon/data-ptr-comm"
"beeyev/thumbor-s3-docker" -> "DecentraWorldDEWO/DeMix_Subgraph"
"freshlogic/MongoDB.Web" -> "AdaTheDev/MongoDB-ASP.NET-Session-State-Store"
"freshlogic/MongoDB.Web" -> "marcosb/MongoDB.Web"
"freshlogic/MongoDB.Web" -> "alanning/MongoProviders"
"freshlogic/MongoDB.Web" -> "craiggwilson/fluent-mongo"
"mlrun/demos" -> "mlrun/functions"
"mlrun/mlrun" -> "nuclio/nuclio" ["e"=1]
"mlrun/mlrun" -> "mlrun/demos"
"mlrun/mlrun" -> "kubeflow-kale/kale"
"mlrun/mlrun" -> "datarevenue-berlin/OpenMLOps"
"mlrun/mlrun" -> "SeldonIO/seldon-core"
"mlrun/mlrun" -> "flyteorg/flyte"
"mlrun/mlrun" -> "mlrun/functions"
"mlrun/mlrun" -> "VertaAI/modeldb"
"mlrun/mlrun" -> "thoughtworks/mlops-platforms"
"mlrun/mlrun" -> "zenml-io/zenml"
"mlrun/mlrun" -> "evidentlyai/evidently"
"mlrun/mlrun" -> "allegroai/clearml"
"mlrun/mlrun" -> "bentoml/BentoML"
"mlrun/mlrun" -> "kserve/kserve"
"mlrun/mlrun" -> "whylabs/whylogs"
"dask/dask-jobqueue" -> "pangeo-data/rechunker" ["e"=1]
"dask/dask-jobqueue" -> "dask/dask-drmaa" ["e"=1]
"dylan-profiler/visions" -> "dylan-profiler/compressio"
"eltonlaw/impyute" -> "epsilon-machine/missingpy"
"eltonlaw/impyute" -> "iskandr/fancyimpute"
"eltonlaw/impyute" -> "awslabs/datawig"
"eltonlaw/impyute" -> "scikit-learn-contrib/stability-selection"
"eltonlaw/impyute" -> "Oracen/MIDAS"
"eltonlaw/impyute" -> "kearnz/autoimpute"
"eltonlaw/impyute" -> "OpenIDEA-YunanUniversity/ycimpute"
"eltonlaw/impyute" -> "scikit-learn-contrib/DESlib"
"eltonlaw/impyute" -> "scikit-learn-contrib/forest-confidence-interval"
"eltonlaw/impyute" -> "jsyoon0823/GAIN" ["e"=1]
"intel/scikit-learn-intelex" -> "oneapi-src/oneDAL" ["e"=1]
"intel/scikit-learn-intelex" -> "feature-engine/feature_engine"
"intel/scikit-learn-intelex" -> "IntelPython/scikit-learn_bench" ["e"=1]
"intel/scikit-learn-intelex" -> "scikit-learn-contrib/MAPIE"
"intel/scikit-learn-intelex" -> "csinva/imodels"
"intel/scikit-learn-intelex" -> "SelfExplainML/PiML-Toolbox"
"intel/scikit-learn-intelex" -> "koaning/doubtlab"
"intel/scikit-learn-intelex" -> "stanfordmlgroup/ngboost"
"intel/scikit-learn-intelex" -> "NannyML/nannyml"
"intel/scikit-learn-intelex" -> "deepchecks/deepchecks"
"intel/scikit-learn-intelex" -> "Nixtla/statsforecast" ["e"=1]
"intel/scikit-learn-intelex" -> "alteryx/featuretools"
"intel/scikit-learn-intelex" -> "automl/TabPFN"
"intel/scikit-learn-intelex" -> "koaning/scikit-lego"
"intel/scikit-learn-intelex" -> "kennethleungty/Failed-ML"
"duvenaud/phd-thesis" -> "jamesrobertlloyd/gpss-research"
"duvenaud/phd-thesis" -> "jamesrobertlloyd/gp-structure-search"
"gditzler/ConceptDriftResources" -> "gditzler/ConceptDriftData"
"gditzler/ConceptDriftResources" -> "ogozuacik/concept-drift-datasets-scikit-multiflow"
"gditzler/ConceptDriftResources" -> "mcguires5/AttackingLearnPP.NSE"
"FeatureLabs/categorical_encoding" -> "FeatureLabs/compose-ml"
"FeatureLabs/categorical_encoding" -> "FeatureLabs/nlp_primitives"
"FeatureLabs/categorical_encoding" -> "FeatureLabs/autonormalize"
"catboost/benchmarks" -> "catboost/catboost-viewer"
"larsmans/seqlearn" -> "hmmlearn/hmmlearn"
"larsmans/seqlearn" -> "pystruct/pystruct" ["e"=1]
"larsmans/seqlearn" -> "jmschrei/yahmm"
"larsmans/seqlearn" -> "TeamHG-Memex/sklearn-crfsuite" ["e"=1]
"larsmans/seqlearn" -> "scrapinghub/python-crfsuite" ["e"=1]
"larsmans/seqlearn" -> "jmschrei/pomegranate"
"larsmans/seqlearn" -> "dwiel/tensorflow_hmm"
"larsmans/seqlearn" -> "sklearn-theano/sklearn-theano" ["e"=1]
"larsmans/seqlearn" -> "aloctavodia/Doing_bayesian_data_analysis" ["e"=1]
"larsmans/seqlearn" -> "eBay/bayesian-belief-networks"
"larsmans/seqlearn" -> "aigamedev/scikit-neuralnetwork" ["e"=1]
"larsmans/seqlearn" -> "guyz/HMM"
"larsmans/seqlearn" -> "dnouri/nolearn" ["e"=1]
"larsmans/seqlearn" -> "Mendeley/mrec" ["e"=1]
"larsmans/seqlearn" -> "honnibal/spaCy" ["e"=1]
"diogodamiani/IdentityServer4.Contrib.MongoDB" -> "souzartn/IdentityServer4.Samples.Mongo"
"dask/dask-labextension" -> "dask/dask-jobqueue"
"dask/dask-labextension" -> "jupyterhub/jupyter-server-proxy" ["e"=1]
"dask/dask-labextension" -> "fcollonval/jupyter_conda" ["e"=1]
"dask/dask-labextension" -> "dask/dask-kubernetes"
"esafak/mca" -> "TomAugspurger/skmca"
"esafak/mca" -> "MaxHalford/prince"
"mllg/batchtools" -> "HenrikBengtsson/future.batchtools"
"mllg/batchtools" -> "rdatsci/rt"
"mllg/batchtools" -> "tudo-r/BatchJobs"
"msgpack-rpc/msgpack-rpc-python" -> "studio-ousia/mprpc"
"dssg/aequitas" -> "dssg/triage"
"dssg/aequitas" -> "adebayoj/fairml"
"dssg/aequitas" -> "Trusted-AI/AIF360"
"dssg/aequitas" -> "pymetrics/audit-ai"
"dssg/aequitas" -> "fairlearn/fairlearn"
"dssg/aequitas" -> "algofairness/fairness-comparison"
"dssg/aequitas" -> "dssg/fairness_tutorial"
"dssg/aequitas" -> "mbilalzafar/fair-classification"
"dssg/aequitas" -> "IBM/AIF360"
"dssg/aequitas" -> "EthicalML/xai"
"dssg/aequitas" -> "google/ml-fairness-gym"
"dssg/aequitas" -> "dssg/hitchhikers-guide"
"dssg/aequitas" -> "SeldonIO/alibi"
"dssg/aequitas" -> "propublica/compas-analysis"
"dssg/aequitas" -> "interpretml/DiCE"
"alexandre-spieser/mongodb-generic-repository" -> "alexandre-spieser/AspNetCore.Identity.MongoDbCore"
"alexandre-spieser/mongodb-generic-repository" -> "RobThree/MongoRepository"
"alexandre-spieser/mongodb-generic-repository" -> "dj-nitehawk/MongoDB.Entities"
"alexandre-spieser/mongodb-generic-repository" -> "brunohbrito/MongoDB-RepositoryUoWPatterns"
"alexandre-spieser/mongodb-generic-repository" -> "TurnerSoftware/MongoFramework"
"alexandre-spieser/mongodb-generic-repository" -> "matteofabbri/AspNetCore.Identity.Mongo"
"GBDT-PL/GBDT-PL" -> "ldv1/LinXGBoost"
"Quantmetry/pipeasy-spark" -> "Quantmetry/awesome_quantmetry"
"Quantmetry/pipeasy-spark" -> "remiadon/streamz-ml"
"Quantmetry/pipeasy-spark" -> "DataExMachina/micro-immo"
"storopoli/Bayesian-Statistics" -> "TuringLang/TuringGLM.jl" ["e"=1]
"storopoli/Bayesian-Statistics" -> "andrewheiss/heiss-causal-inference"
"Alex-Lekov/AutoML_Alex" -> "Alex-Lekov/AutoML-Benchmark"
"DeepLearningDTU/02456-deep-learning" -> "DeepLearningDTU/Summerschool_2015"
"scikit-learn-contrib/polylearn" -> "scikit-learn-contrib/stability-selection"
"databricks/spark-pandas" -> "hortonworks-spark/spark-schema-registry"
"koaning/human-learn" -> "koaning/scikit-lego"
"koaning/human-learn" -> "koaning/doubtlab"
"koaning/human-learn" -> "koaning/embetter"
"koaning/human-learn" -> "RasaHQ/whatlies"
"koaning/human-learn" -> "koaning/bulk"
"koaning/human-learn" -> "agermanidis/pigeon"
"koaning/human-learn" -> "koaning/clumper"
"koaning/human-learn" -> "csinva/imodels"
"koaning/human-learn" -> "dirty-cat/dirty_cat"
"koaning/human-learn" -> "scikit-learn-contrib/MAPIE"
"koaning/human-learn" -> "skops-dev/skops"
"koaning/human-learn" -> "oegedijk/explainerdashboard"
"koaning/human-learn" -> "koaning/drawdata"
"koaning/human-learn" -> "RasaHQ/rasalit" ["e"=1]
"koaning/human-learn" -> "ray-project/tune-sklearn"
"iterative/terraform-provider-iterative" -> "iterative/mlem"
"iterative/terraform-provider-iterative" -> "iterative/gto"
"iterative/terraform-provider-iterative" -> "iterative/dvclive"
"iterative/terraform-provider-iterative" -> "iterative/vscode-dvc"
"iterative/terraform-provider-iterative" -> "iterative/dvc.org"
"irmen/Pyro5" -> "irmen/Pyro4"
"emlearn/emlearn" -> "eloquentarduino/micromlgen"
"emlearn/emlearn" -> "jonnor/embeddedml"
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "jacopotagliabue/post-modern-stack"
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "jacopotagliabue/recs-at-resonable-scale"
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "jacopotagliabue/reclist"
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "fuzzylabs/awesome-open-mlops"
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "jacopotagliabue/FREE_7773"
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "datarevenue-berlin/OpenMLOps"
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "jacopotagliabue/paas-data-ingestion"
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "fugue-project/fugue"
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "aporia-ai/mlplatform-workshop"
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "eugeneyan/ml-design-docs" ["e"=1]
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "GokuMohandas/MLOps" ["e"=1]
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "kelvins/awesome-mlops"
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "cdfoundation/sig-mlops"
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "evidentlyai/evidently"
"jacopotagliabue/you-dont-need-a-bigger-boat" -> "operatorai/modelstore"
"unionai-oss/unionml" -> "flyteorg/flytekit"
"unionai-oss/unionml" -> "flyteorg/flyte"
"blue-yonder/turbodbc" -> "xhochy/fletcher"
"blue-yonder/turbodbc" -> "JDASoftwareGroup/kartothek"
"blue-yonder/turbodbc" -> "blue-yonder/sqlalchemy_exasol"
"blue-yonder/turbodbc" -> "blue-yonder/pyscaffold"
"blue-yonder/turbodbc" -> "ellisonbg/altair" ["e"=1]
"blue-yonder/turbodbc" -> "nils-braun/dask-sql"
"blue-yonder/turbodbc" -> "dask/fastparquet"
"blue-yonder/turbodbc" -> "chmp/framequery"
"blue-yonder/turbodbc" -> "wesm/feather" ["e"=1]
"blue-yonder/turbodbc" -> "apache/parquet-cpp" ["e"=1]
"blue-yonder/turbodbc" -> "mrocklin/streamz"
"blue-yonder/turbodbc" -> "ibis-project/ibis" ["e"=1]
"blue-yonder/turbodbc" -> "JosPolfliet/pandas-profiling" ["e"=1]
"blue-yonder/turbodbc" -> "gpuopenanalytics/pygdf" ["e"=1]
"blue-yonder/turbodbc" -> "maartenbreddels/vaex" ["e"=1]
"cleanlab/cleanvision" -> "dcai-course/dcai-lab"
"cleanlab/cleanvision" -> "dcai-course/dcai-course"
"MagNet-DL/magnet" -> "csxeba/evolute"
"MagNet-DL/magnet" -> "oracle/graphpipe"
"MagNet-DL/magnet" -> "outcastofmusic/quick-nlp" ["e"=1]
"jphall663/GWU_data_mining" -> "szilard/teach-data-science-UCLA-master-appl-stats"
"jphall663/GWU_data_mining" -> "jphall663/interpretable_machine_learning_with_python"
"jphall663/GWU_data_mining" -> "h2oai/mli-resources"
"szilard/teach-data-science-UCLA-master-appl-stats" -> "jphall663/GWU_data_mining"
"quantumblacklabs/kedro-airflow" -> "quantumblacklabs/kedro-docker"
"quantumblacklabs/kedro-airflow" -> "quantumblacklabs/kedro-ui"
"dj-nitehawk/MongoWebApiStarter" -> "dj-nitehawk/MongoDB.Entities"
"alteryx/compose" -> "alteryx/evalml"
"alteryx/compose" -> "alteryx/woodwork"
"alteryx/compose" -> "alteryx/featuretools"
"thuijskens/production-tools" -> "scikit-learn-contrib/project-template"
"thuijskens/production-tools" -> "FilippoBovo/production-data-science"
"thuijskens/production-tools" -> "tonybaloney/wily" ["e"=1]
"jubatus/jubatus-msgpack-rpc" -> "msgpack-rpc/msgpack-rpc-cpp"
"jubatus/jubatus-msgpack-rpc" -> "msgpack-rpc/msgpack-rpc"
"rodrigo-arenas/Sklearn-genetic-opt" -> "manuel-calzolari/sklearn-genetic"
"rodrigo-arenas/Sklearn-genetic-opt" -> "manuel-calzolari/shapicant"
"mattjj/pyhsmm" -> "mattjj/pybasicbayes"
"mattjj/pyhsmm" -> "jvkersch/hsmmlearn"
"mattjj/pyhsmm" -> "mattjj/pyslds" ["e"=1]
"mattjj/pyhsmm" -> "bnpy/bnpy" ["e"=1]
"mattjj/pyhsmm" -> "jmschrei/yahmm"
"mattjj/pyhsmm" -> "dillonalaird/pysvihmm"
"mattjj/pyhsmm" -> "mattjj/svae" ["e"=1]
"mattjj/pyhsmm" -> "slinderman/ssm" ["e"=1]
"mattjj/pyhsmm" -> "mattjj/pyhsmm-autoregressive"
"mattjj/pyhsmm" -> "kzhai/PyNPB" ["e"=1]
"mattjj/pyhsmm" -> "hmmlearn/hmmlearn"
"mattjj/pyhsmm" -> "clinicalml/structuredinference" ["e"=1]
"mattjj/pyhsmm" -> "slinderman/pypolyagamma"
"mattjj/pyhsmm" -> "GPflow/GPflow"
"mattjj/pyhsmm" -> "bayespy/bayespy"
"openml/openml-python" -> "openml/OpenML"
"openml/openml-python" -> "openml/automlbenchmark"
"scikit-learn-contrib/MAPIE" -> "valeman/awesome-conformal-prediction"
"scikit-learn-contrib/MAPIE" -> "awslabs/fortuna"
"scikit-learn-contrib/MAPIE" -> "koaning/scikit-lego"
"scikit-learn-contrib/MAPIE" -> "Ekeany/Boruta-Shap"
"scikit-learn-contrib/MAPIE" -> "Nixtla/hierarchicalforecast" ["e"=1]
"scikit-learn-contrib/MAPIE" -> "Nixtla/mlforecast" ["e"=1]
"scikit-learn-contrib/MAPIE" -> "csinva/imodels"
"scikit-learn-contrib/MAPIE" -> "yromano/cqr"
"scikit-learn-contrib/MAPIE" -> "feature-engine/feature_engine"
"scikit-learn-contrib/MAPIE" -> "aangelopoulos/conformal-prediction"
"scikit-learn-contrib/MAPIE" -> "scikit-learn-contrib/category_encoders"
"scikit-learn-contrib/MAPIE" -> "Nixtla/statsforecast" ["e"=1]
"scikit-learn-contrib/MAPIE" -> "cerlymarco/shap-hypetune"
"scikit-learn-contrib/MAPIE" -> "StatMixedML/XGBoostLSS"
"scikit-learn-contrib/MAPIE" -> "cerlymarco/linear-tree"
"scikit-learn-contrib/project-template" -> "scikit-learn-contrib/scikit-learn-contrib"
"skops-dev/skops" -> "koaning/embetter"
"skops-dev/skops" -> "huggingface/speechbox" ["e"=1]
"skops-dev/skops" -> "huggingface/hub.js"
"apache/incubator-samoa" -> "yahoo/samoa" ["e"=1]
"apache/incubator-samoa" -> "huawei-noah/streamDM"
"apache/incubator-samoa" -> "Waikato/moa"
"MAIF/eurybia" -> "salimamoukou/acv00"
"iterative/vscode-dvc" -> "iterative/gto"
"iterative/vscode-dvc" -> "dacbd/create-issue-action"
"ydataai/ydata-quality" -> "ydataai/academy"
"ydataai/ydata-quality" -> "ydataai/awesome-data-centric-ai"
"ydataai/ydata-quality" -> "ydataai/ydata-synthetic" ["e"=1]
"ydataai/ydata-quality" -> "ELS-RD/triton_transformers"
"microsoft/responsible-ai-widgets" -> "microsoft/BackwardCompatibilityML"
"microsoft/responsible-ai-widgets" -> "interpretml/interpret-community"
"microsoft/responsible-ai-widgets" -> "Azure/azureml-previews" ["e"=1]
"microsoft/responsible-ai-widgets" -> "fairlearn/fairlearn"
"microsoft/responsible-ai-widgets" -> "Azure/medical-imaging"
"microsoft/responsible-ai-widgets" -> "microsoft/solution-accelerator-many-models" ["e"=1]
"microsoft/responsible-ai-widgets" -> "interpretml/DiCE"
"rdturnermtl/bbo_challenge_starter_kit" -> "uber/bayesmark"
"adebayoj/fairml" -> "algofairness/fairness-comparison"
"adebayoj/fairml" -> "algofairness/BlackBoxAuditing"
"adebayoj/fairml" -> "cosmicBboy/themis-ml"
"adebayoj/fairml" -> "dssg/aequitas"
"adebayoj/fairml" -> "columbia/fairtest"
"adebayoj/fairml" -> "mbilalzafar/fair-classification"
"adebayoj/fairml" -> "tmadl/sklearn-expertsys"
"adebayoj/fairml" -> "pymetrics/audit-ai"
"adebayoj/fairml" -> "propublica/compas-analysis"
"adebayoj/fairml" -> "IBM/AIF360"
"dask/dask-examples" -> "dask/dask-ml"
"dask/dask-examples" -> "dask/dask-tutorial"
"dask/dask-examples" -> "dask/dask-docker"
"dask/dask-examples" -> "dask/dask-kubernetes"
"dask/dask-examples" -> "dask/distributed"
"dask/dask-examples" -> "dask/dask-cloudprovider"
"dask/dask-examples" -> "jrbourbeau/hacking-dask"
"dask/dask-examples" -> "dask/dask-stories"
"dask/dask-examples" -> "dask/dask-jobqueue"
"intake/filesystem_spec" -> "dask/gcsfs"
"intake/filesystem_spec" -> "Quansight/universal_pathlib"
"explainX/explainx" -> "EthicalML/xai"
"explainX/explainx" -> "wangyongjie-ntu/Awesome-explainable-AI"
"explainX/explainx" -> "Trusted-AI/AIX360"
"explainX/explainx" -> "interpretml/DiCE"
"explainX/explainx" -> "ModelOriented/DALEX"
"explainX/explainx" -> "oracle/Skater"
"explainX/explainx" -> "pbiecek/xai_resources"
"explainX/explainx" -> "samzabdiel/XAI"
"explainX/explainx" -> "ModelOriented/modelStudio"
"explainX/explainx" -> "christophM/rulefit"
"tiagoCuervo/TensorANFIS" -> "twmeggs/anfis"
"tiagoCuervo/TensorANFIS" -> "jfpower/anfis-pytorch"
"tiagoCuervo/TensorANFIS" -> "gregorLen/AnfisTensorflow2.0"
"datmo/datmo" -> "mitdbg/modeldb"
"datmo/datmo" -> "akosiorek/forge"
"marcotcr/anchor" -> "marcotcr/anchor-experiments"
"marcotcr/anchor" -> "SeldonIO/alibi"
"marcotcr/anchor" -> "interpretml/DiCE"
"marcotcr/anchor" -> "oracle/Skater"
"marcotcr/anchor" -> "marcotcr/lime"
"marcotcr/anchor" -> "Trusted-AI/AIX360"
"marcotcr/anchor" -> "h2oai/mli-resources"
"marcotcr/anchor" -> "marcoancona/DeepExplain" ["e"=1]
"marcotcr/anchor" -> "christophM/rulefit"
"marcotcr/anchor" -> "marcotcr/lime-experiments"
"marcotcr/anchor" -> "tmadl/sklearn-expertsys"
"marcotcr/anchor" -> "riccotti/LORE"
"marcotcr/anchor" -> "lopusz/awesome-interpretable-machine-learning"
"marcotcr/anchor" -> "EthicalML/xai"
"marcotcr/anchor" -> "TeamHG-Memex/eli5"
"vinid/cade" -> "vinid/quica"
"vinid/quica" -> "vinid/cade"
"jamesrobertlloyd/gpss-research" -> "jamesrobertlloyd/gp-structure-search"
"jamesrobertlloyd/gpss-research" -> "duvenaud/phd-thesis"
"mbilalzafar/fair-classification" -> "algofairness/fairness-comparison"
"mbilalzafar/fair-classification" -> "jmikko/fair_ERM"
"mbilalzafar/fair-classification" -> "VectorInstitute/laftr"
"mbilalzafar/fair-classification" -> "equialgo/fairness-in-ml"
"mbilalzafar/fair-classification" -> "zykls/folktables"
"mbilalzafar/fair-classification" -> "propublica/compas-analysis"
"mbilalzafar/fair-classification" -> "cosmicBboy/themis-ml"
"zykls/folktables" -> "mbilalzafar/fair-classification"
"ACCLAB/dabestr" -> "ACCLAB/DABEST-python"
"ACCLAB/dabestr" -> "jacob-long/interactions"
"logicalclocks/feature-store-api" -> "muneebsmh/hopsworks-integrations"
"logicalclocks/feature-store-api" -> "logicalclocks/hopsworks-api"
"logicalclocks/feature-store-api" -> "logicalclocks/hopsworks-tutorials"
"HIPS/hypergrad" -> "fabianp/hoag"
"automl/HPOlib" -> "automl/HPOlib2"
"automl/HPOlib" -> "hyperopt/hyperopt-nnet"
"benoitc/socketpool" -> "studio-ousia/gsocketpool"
"benoitc/socketpool" -> "rasky/geventconnpool"
"AppliedDataSciencePartners/xgboostExplainer" -> "lantanacamara/lightgbmExplainer"
"AppliedDataSciencePartners/xgboostExplainer" -> "christophM/iml"
"AppliedDataSciencePartners/xgboostExplainer" -> "thomasp85/lime" ["e"=1]
"AppliedDataSciencePartners/xgboostExplainer" -> "pbiecek/breakDown"
"ACCLAB/DABEST-python" -> "ACCLAB/dabestr"
"ACCLAB/DABEST-python" -> "ejolly/pymer4"
"ACCLAB/DABEST-python" -> "RainCloudPlots/RainCloudPlots" ["e"=1]
"ACCLAB/DABEST-python" -> "raphaelvallat/pingouin"
"ACCLAB/DABEST-python" -> "ACCLAB/DABEST-Matlab"
"ACCLAB/DABEST-python" -> "maximtrp/scikit-posthocs"
"brunohbrito/MongoDB-RepositoryUoWPatterns" -> "alexandre-spieser/mongodb-generic-repository"
"probtorch/probtorch" -> "probprog/pyprob"
"probtorch/probtorch" -> "wohlert/semi-supervised-pytorch" ["e"=1]
"probtorch/probtorch" -> "uber/pyro"
"probtorch/probtorch" -> "dpkingma/nips14-ssl" ["e"=1]
"probtorch/probtorch" -> "ctallec/pyvarinf" ["e"=1]
"probtorch/probtorch" -> "ikostrikov/pytorch-flows" ["e"=1]
"probtorch/probtorch" -> "google-research/disentanglement_lib" ["e"=1]
"probtorch/probtorch" -> "jmtomczak/vae_vampprior" ["e"=1]
"probtorch/probtorch" -> "lanpa/tensorboard-pytorch" ["e"=1]
"probtorch/probtorch" -> "dnouri/skorch"
"probtorch/probtorch" -> "blei-lab/edward"
"probtorch/probtorch" -> "cornellius-gp/gpytorch"
"probtorch/probtorch" -> "sootlasten/disentangled-representation-papers" ["e"=1]
"probtorch/probtorch" -> "rtqichen/beta-tcvae" ["e"=1]
"probtorch/probtorch" -> "riannevdberg/sylvester-flows" ["e"=1]
"mmckerns/tutmom" -> "uqfoundation/mystic"
"mmckerns/tutmom" -> "mmckerns/tuthpc"
"uqfoundation/mystic" -> "mmckerns/tutmom"
"uqfoundation/mystic" -> "uqfoundation/klepto"
"uqfoundation/mystic" -> "mechmotum/cyipopt"
"uqfoundation/mystic" -> "Pyomo/pyomo" ["e"=1]
"uqfoundation/mystic" -> "jonathf/chaospy" ["e"=1]
"uqfoundation/mystic" -> "esa/pygmo2" ["e"=1]
"uqfoundation/mystic" -> "xuy/pyipopt" ["e"=1]
"uqfoundation/mystic" -> "uqfoundation/pathos"
"uqfoundation/mystic" -> "uqfoundation/dill"
"renatoosousa/GeneticAlgorithmForFeatureSelection" -> "kaushalshetty/FeatureSelectionGA"
"hopshadoop/hops-metadata-dal-impl-ndb" -> "hopshadoop/hops-metadata-dal"
"kserve/modelmesh-serving" -> "kserve/modelmesh"
"kserve/modelmesh-serving" -> "kserve/website"
"flyteorg/flytekit" -> "flyteorg/flytesnacks"
"flyteorg/flytekit" -> "flyteorg/flytepropeller"
"InspectorIT/MongoDB.AspNet.Identity" -> "g0t4/aspnet-identity-mongo"
"InspectorIT/MongoDB.AspNet.Identity" -> "ILMServices/RavenDB.AspNet.Identity"
"InspectorIT/MongoDB.AspNet.Identity" -> "g0t4/aspnet-identity-mongo-sample"
"InspectorIT/MongoDB.AspNet.Identity" -> "freshlogic/MongoDB.Web"
"automl/autoweka" -> "automl/RoBO"
"automl/autoweka" -> "ClimbsRocks/machineJS"
"automl/autoweka" -> "automl/SMAC3"
"automl/autoweka" -> "automl/HPOlib2"
"deel-ai/puncc" -> "deel-ai/influenciae"
"probprog/pyprob" -> "probprog/ppx"
"probprog/pyprob" -> "probtorch/probtorch"
"probprog/pyprob" -> "amzn/MXFusion"
"zenml-io/zenbytes" -> "zenml-io/zenfiles"
"zenml-io/zenbytes" -> "zenml-io/mlops-stacks"
"zenml-io/zenbytes" -> "zenml-io/zenml-gitflow"
"zenml-io/zenbytes" -> "zenml-io/zenml-projects"
"zenml-io/zenbytes" -> "zenml-io/zenml-dashboard"
"zenml-io/mlops-stacks" -> "zenml-io/zenbytes"
"zenml-io/mlops-stacks" -> "zenml-io/zenfiles"
"zenml-io/mlops-stacks" -> "zenml-io/zenml-dashboard"
"daxiongshu/rapids-ai-BBO-2nd-place-solution" -> "automl/Squirrel-Optimizer-BBO-NeurIPS20-automlorg"
"zi-w/Ensemble-Bayesian-Optimization" -> "facebookresearch/alebo"
"zi-w/Ensemble-Bayesian-Optimization" -> "aminnayebi/HesBO"
"lancifollia/tinygbt" -> "ogrisel/pygbm"
"AutoViML/Auto_ViML" -> "AutoViML/AutoViz"
"AutoViML/Auto_ViML" -> "AutoViML/featurewiz"
"AutoViML/Auto_ViML" -> "AutoViML/Auto_TS" ["e"=1]
"AutoViML/Auto_ViML" -> "AutoViML/deep_autoviml"
"AutoViML/Auto_ViML" -> "alteryx/evalml"
"AutoViML/Auto_ViML" -> "cod3licious/autofeat"
"AutoViML/Auto_ViML" -> "Ekeany/Boruta-Shap"
"AutoViML/Auto_ViML" -> "mljar/mljar-supervised"
"AutoViML/Auto_ViML" -> "kearnz/autoimpute"
"AutoViML/Auto_ViML" -> "solegalli/feature_engine"
"AutoViML/Auto_ViML" -> "rafiqhasan/auto-tensorflow"
"AutoViML/Auto_ViML" -> "microsoft/FLAML"
"AutoViML/Auto_ViML" -> "winedarksea/AutoTS" ["e"=1]
"rapidsai/dask-cudf" -> "rapidsai/dask-cuml"
"amidst/toolbox" -> "enriquegrodrigo/spark-crowd"
"amidst/toolbox" -> "PGM-Lab/InferPy"
"kubeflow-kale/kale" -> "kubeflow/kfserving"
"kubeflow-kale/kale" -> "kubeflow/manifests"
"kubeflow-kale/kale" -> "kubeflow/katib"
"kubeflow-kale/kale" -> "kubeflow/pipelines"
"kubeflow-kale/kale" -> "elyra-ai/elyra"
"kubeflow-kale/kale" -> "kubeflow/fairing"
"kubeflow-kale/kale" -> "kubeflow/kfp-tekton"
"kubeflow-kale/kale" -> "mlrun/mlrun"
"kubeflow-kale/kale" -> "intro-to-ml-with-kubeflow/intro-to-ml-with-kubeflow-examples" ["e"=1]
"kubeflow-kale/kale" -> "IBM/KubeflowDojo"
"kubeflow-kale/kale" -> "kubeflow/examples" ["e"=1]
"kubeflow-kale/kale" -> "spotify/terraform-gke-kubeflow-cluster"
"kubeflow-kale/kale" -> "kubeflow-kale/examples"
"kubeflow-kale/kale" -> "SeldonIO/seldon-core"
"kubeflow-kale/kale" -> "provectus/sak-kubeflow" ["e"=1]
"simai-ml/MAPIE" -> "Quantmetry/pipeasy-spark"
"simai-ml/MAPIE" -> "MAIF/melusine"
"simai-ml/MAPIE" -> "Quantmetry/qolmat"
"simai-ml/MAPIE" -> "Quantmetry/grand-debat"
"Renumics/awesome-anything2vec" -> "Renumics/mesh2vec"
"jamesrobertlloyd/gp-structure-search" -> "jamesrobertlloyd/gpss-research"
"jamesrobertlloyd/gp-structure-search" -> "duvenaud/phd-thesis"
"jamesrobertlloyd/gp-structure-search" -> "rmgarnett/gpml_extensions"
"lpfgarcia/ECoL" -> "victorhb/ImbCoL"
"lpfgarcia/ECoL" -> "rivolli/mfe"
"lpfgarcia/ECoL" -> "tiagobotari/melime"
"lpfgarcia/ECoL" -> "automated-data-science/curumim-automl-sandbox"
"ModelOriented/modelStudio" -> "ModelOriented/DALEX"
"ModelOriented/modelStudio" -> "tidymodels/usemodels" ["e"=1]
"ModelOriented/modelStudio" -> "ModelOriented/DrWhy"
"ModelOriented/modelStudio" -> "koalaverse/vip"
"ModelOriented/modelStudio" -> "tidymodels/themis" ["e"=1]
"ModelOriented/modelStudio" -> "tidymodels/tidypredict" ["e"=1]
"ModelOriented/modelStudio" -> "ModelOriented/iBreakDown"
"ModelOriented/modelStudio" -> "tidymodels/stacks" ["e"=1]
"ModelOriented/modelStudio" -> "tidymodels/embed" ["e"=1]
"ModelOriented/modelStudio" -> "christophM/iml"
"secondmind-labs/trieste" -> "secondmind-labs/GPflux"
"secondmind-labs/trieste" -> "GPflow/GPflowOpt"
"secondmind-labs/trieste" -> "secondmind-labs/markovflow"
"openml/automlbenchmark" -> "openml/openml-python"
"openml/automlbenchmark" -> "automl/HPOBench"
"openml/automlbenchmark" -> "automl/ConfigSpace"
"openml/automlbenchmark" -> "ealcobaca/pymfe"
"openml/automlbenchmark" -> "openml/OpenML"
"openml/automlbenchmark" -> "cod3licious/autofeat"
"HenrikBengtsson/future.batchtools" -> "mllg/batchtools"
"bodywork-ml/bodywork-core" -> "fuzzylabs/awesome-open-mlops"
"bodywork-ml/bodywork-core" -> "dataqa/dataqa"
"bodywork-ml/bodywork-core" -> "jeremyjordan/ml-monitoring" ["e"=1]
"bodywork-ml/bodywork-core" -> "AlexIoannides/ml-workflow-automation"
"bodywork-ml/bodywork-core" -> "operatorai/modelstore"
"jmschrei/apricot" -> "koaning/embetter"
"loglabs/mltrace" -> "shreyashankar/toy-ml-pipeline" ["e"=1]
"tblume1992/ThymeBoost" -> "tblume1992/LazyProphet"
"tblume1992/ThymeBoost" -> "carlomazzaferro/scikit-hts" ["e"=1]
"JDASoftwareGroup/kartothek" -> "xhochy/fletcher"
"JDASoftwareGroup/kartothek" -> "data-engineering-collective/minimalkv"
"JDASoftwareGroup/kartothek" -> "blue-yonder/storefact"
"Waikato/weka-trunk" -> "Waikato/waikato-repositories"
"Waikato/weka-trunk" -> "Waikato/weka-3.8"
"kserve/modelmesh" -> "kserve/modelmesh-serving"
"AlexIoannides/kubernetes-ml-ops" -> "AlexIoannides/ml-workflow-automation"
"berndbischl/mlr" -> "berndbischl/parallelMap"
"berndbischl/mlr" -> "tudo-r/BatchJobs"
"berndbischl/mlr" -> "berndbischl/mlrMBO"
"berndbischl/mlr" -> "berndbischl/ParamHelpers"
"berndbischl/mlr" -> "tudo-r/BatchExperiments"
"berndbischl/mlr" -> "berndbischl/BBmisc"
"berndbischl/mlr" -> "openml/r"
"secondmind-labs/GPflux" -> "secondmind-labs/trieste"
"secondmind-labs/GPflux" -> "secondmind-labs/markovflow"
"HDI-Project/MLPrimitives" -> "HDI-Project/MLBlocks"
"HDI-Project/MLPrimitives" -> "HDI-Project/RDT"
"HDI-Project/MLPrimitives" -> "HDI-Project/mit-d3m"
"terrytangyuan/awesome-kubeflow" -> "deployKF/deployKF"
"jacob-long/panelr" -> "jacob-long/interactions"
"tblume1992/LazyProphet" -> "tblume1992/ThymeBoost"
"twmeggs/anfis" -> "tiagoCuervo/TensorANFIS"
"twmeggs/anfis" -> "jfpower/anfis-pytorch"
"twmeggs/anfis" -> "gregorLen/AnfisTensorflow2.0"
"twmeggs/anfis" -> "ameybarapatre/ANFIS"
"twmeggs/anfis" -> "balcilar/Anfis-from-scratch"
"deel-ai/deel-lip" -> "deel-ai/influenciae"
"deel-ai/deel-lip" -> "airbus/decomon"
"deel-ai/influenciae" -> "deel-ai/deel-lip"
"koaning/whatlies" -> "koaning/embetter"
"ustunb/risk-slim" -> "nlarusstone/corels"
"ustunb/risk-slim" -> "ustunb/slim-python"
"ustunb/risk-slim" -> "ustunb/actionable-recourse"
"tmadl/sklearn-expertsys" -> "edublancas/sklearn-evaluation"
"tmadl/sklearn-expertsys" -> "scikit-learn-contrib/skope-rules"
"tmadl/sklearn-expertsys" -> "datascienceinc/Skater"
"tmadl/sklearn-expertsys" -> "wdm0006/categorical_encoding"
"tmadl/sklearn-expertsys" -> "adebayoj/fairml"
"tmadl/sklearn-expertsys" -> "tmadl/sklearn-random-rotation-ensembles"
"tmadl/sklearn-expertsys" -> "tmadl/highdimensional-decision-boundary-plot"
"tmadl/sklearn-expertsys" -> "andosa/treeinterpreter"
"tmadl/sklearn-expertsys" -> "h2oai/mli-resources"
"tmadl/sklearn-expertsys" -> "ianozsvald/data_science_delivered"
"tmadl/sklearn-expertsys" -> "christophM/rulefit"
"tmadl/sklearn-expertsys" -> "AustinRochford/PyCEbox"
"tmadl/sklearn-expertsys" -> "scikit-learn-contrib/forest-confidence-interval"
"tmadl/sklearn-expertsys" -> "fmfn/UnbalancedDataset" ["e"=1]
"tmadl/sklearn-expertsys" -> "rsteca/sklearn-deap"
"rapidsai/cuspatial" -> "rapidsai/cugraph"
"rapidsai/cuspatial" -> "makepath/xarray-spatial" ["e"=1]
"rapidsai/cuspatial" -> "rapidsai/cuxfilter"
"rapidsai/cuspatial" -> "holoviz/spatialpandas" ["e"=1]
"rapidsai/cuspatial" -> "rapidsai/tpcx-bb"
"rapidsai/cuspatial" -> "gjoseph92/stackstac" ["e"=1]
"rapidsai/cuspatial" -> "corteva/geocube" ["e"=1]
"rapidsai/cuspatial" -> "rapidsai/rmm" ["e"=1]
"rapidsai/cuspatial" -> "anitagraser/movingpandas" ["e"=1]
"rapidsai/cuspatial" -> "dymaxionlabs/dask-rasterio"
"rapidsai/cuspatial" -> "locationtech/rasterframes" ["e"=1]
"rapidsai/cuspatial" -> "geopandas/dask-geopandas" ["e"=1]
"rapidsai/cuspatial" -> "stac-utils/pystac" ["e"=1]
"rapidsai/cuspatial" -> "rapidsai/cuml"
"rapidsai/cuspatial" -> "HTenkanen/pyrosm" ["e"=1]
"FeatureLabs/compose" -> "alteryx/woodwork"
"HDI-Project/BTB" -> "HDI-Project/MLBlocks"
"HDI-Project/BTB" -> "HDI-Project/MLPrimitives"
"HDI-Project/BTB" -> "HDI-Project/AutoBazaar"
"HDI-Project/BTB" -> "HDI-Project/mit-d3m"
"HDI-Project/BTB" -> "HDI-Project/RDT"
"HDI-Project/BTB" -> "HDI-Project/ATM"
"HDI-Project/BTB" -> "HDI-Project/ballet"
"drivendataorg/power-laws-forecasting" -> "drivendataorg/power-laws-cold-start"
"Microsoft/vscode-tools-for-ai" -> "Microsoft/vs-tools-for-ai"
"franckverrot/holycorn" -> "toyama0919/ej"
"d6t/d6tstack" -> "d6t/d6tjoin"
"kekeblom/DeepCGP" -> "markvdw/convgp"
"alteryx/evalml" -> "alteryx/compose"
"alteryx/evalml" -> "alteryx/woodwork"
"alteryx/evalml" -> "alteryx/featuretools"
"alteryx/evalml" -> "FeatureLabs/compose"
"alteryx/evalml" -> "AutoViML/Auto_ViML"
"alteryx/evalml" -> "cod3licious/autofeat"
"alteryx/evalml" -> "solegalli/feature_engine"
"alteryx/evalml" -> "mljar/mljar-supervised"
"alteryx/evalml" -> "feature-engine/feature_engine"
"alteryx/evalml" -> "csinva/imodels"
"alteryx/evalml" -> "microsoft/FLAML"
"alteryx/evalml" -> "winedarksea/AutoTS" ["e"=1]
"alteryx/evalml" -> "cerlymarco/shap-hypetune"
"alteryx/evalml" -> "kearnz/autoimpute"
"alteryx/evalml" -> "FeatureLabs/featuretools"
"argoflow/argoflow" -> "argoflow/argoflow-aws" ["e"=1]
"argoflow/argoflow" -> "deployKF/deployKF"
"alanning/MongoProviders" -> "alanning/MongoWSAT"
"Galileo-Galilei/kedro-mlflow" -> "getindata/kedro-kubeflow"
"Galileo-Galilei/kedro-mlflow" -> "Galileo-Galilei/kedro-mlflow-tutorial"
"Galileo-Galilei/kedro-mlflow" -> "quantumblacklabs/kedro-docker"
"Galileo-Galilei/kedro-mlflow" -> "tamsanh/kedro-great"
"Galileo-Galilei/kedro-mlflow" -> "quantumblacklabs/kedro-viz"
"Galileo-Galilei/kedro-mlflow" -> "kedro-org/kedro-plugins"
"Galileo-Galilei/kedro-mlflow" -> "datajoely/kedro-rich"
"dssg/mlforpublicpolicylab" -> "dssg/triage"
"ILMServices/RavenDB.AspNet.Identity" -> "tugberkugurlu/AspNet.Identity.RavenDB"
"quantumblacklabs/kedro-docker" -> "quantumblacklabs/kedro-airflow"
"quantumblacklabs/kedro-docker" -> "quantumblacklabs/kedro-viz"
"quantumblacklabs/kedro-docker" -> "quantumblacklabs/kedro-ui"
"quantumblacklabs/kedro-docker" -> "getindata/kedro-kubeflow"
"quantumblacklabs/kedro-docker" -> "quantumblacklabs/kedro-examples"
"danielfrg/s3contents" -> "IBM/jupyterlab-s3-browser"
"danielfrg/s3contents" -> "quantopian/pgcontents"
"danielfrg/s3contents" -> "jupyterlab/jupyterlab-commenting" ["e"=1]
"interpretml/interpret-text" -> "ShilinHe/interpretableNLP"
"interpretml/interpret-text" -> "interpretml/interpret-community"
"thoughtworks/mlops-platforms" -> "mlrun/mlrun"
"thoughtworks/mlops-platforms" -> "Cornerstone-OnDemand/modelkit"
"alipsgh/data_streams" -> "alipsgh/codes_for_moa"
"probml/pmtkdata" -> "probml/pmtksupport"
"resibots/limbo" -> "mblum/libgp"
"resibots/limbo" -> "rmcantin/bayesopt"
"resibots/limbo" -> "jonfink/GP"
"resibots/limbo" -> "sferes2/sferes2"
"resibots/limbo" -> "resibots/blackdrops"
"dcai-course/dcai-lab" -> "dcai-course/dcai-course"
"dcai-course/dcai-lab" -> "cleanlab/cleanvision"
"dssg/MLforPublicPolicy" -> "dssg/triage"
"aporia-ai/mlplatform-workshop" -> "aporia-ai/mlops.toys"
"aporia-ai/mlplatform-workshop" -> "aporia-ai/inferencedb"
"aporia-ai/mlplatform-workshop" -> "aporia-ai/dmatrix2np"
"aporia-ai/mlplatform-workshop" -> "aporia-ai/kubesurvival"
"aporia-ai/mlplatform-workshop" -> "datarevenue-berlin/OpenMLOps"
"aporia-ai/mlplatform-workshop" -> "jacopotagliabue/you-dont-need-a-bigger-boat"
"aporia-ai/mlplatform-workshop" -> "aporia-ai/mlnotify"
"aporia-ai/mlplatform-workshop" -> "jeremyjordan/ml-monitoring" ["e"=1]
"aporia-ai/mlplatform-workshop" -> "aniruddhachoudhury/mlopsworld"
"aporia-ai/mlplatform-workshop" -> "dmatrix/tmls-workshop"
"HIPS/pgmult" -> "slinderman/pypolyagamma"
"shaypal5/pdpipe" -> "shaypal5/s3bp"
"shaypal5/pdpipe" -> "shaypal5/skift" ["e"=1]
"Renumics/spotlight" -> "Renumics/awesome-anything2vec"
"Renumics/spotlight" -> "Renumics/mesh2vec"
"HDI-Project/MLBlocks" -> "HDI-Project/MLPrimitives"
"HDI-Project/MLBlocks" -> "HDI-Project/RDT"
"HDI-Project/MLBlocks" -> "HDI-Project/mit-d3m"
"HDI-Project/MLBlocks" -> "HDI-Project/AutoBazaar"
"HDI-Project/MLBlocks" -> "HDI-Project/BTB"
"HDI-Project/MLBlocks" -> "HDI-Project/ballet"
"iterative/dvclive" -> "iterative/gto"
"ApurvShah007/Algorithmic_trading" -> "ApurvShah007/Tilt-Bot-RC-Car"
"ApurvShah007/portfolio-optimizer" -> "ApurvShah007/Tilt-Bot-RC-Car"
"ApurvShah007/portfolio-optimizer" -> "ApurvShah007/Algorithmic_trading"
"zerokol/eFLL" -> "fuzzylite/fuzzylite"
"zerokol/eFLL" -> "Beta-10/embedded-fuzzy-logic"
"SheffieldML/GPc" -> "mblum/libgp"
"SheffieldML/GPc" -> "jonfink/GP"
"jfpower/anfis-pytorch" -> "twmeggs/anfis"
"jfpower/anfis-pytorch" -> "tiagoCuervo/TensorANFIS"
"dask/gcsfs" -> "intake/filesystem_spec"
"kubeflow/kfp-tekton" -> "IBM/KubeflowDojo"
"hopshadoop/hops" -> "hopshadoop/hopsworks"
"hopshadoop/hops" -> "logicalclocks/feature-store-api"
"hopshadoop/hops" -> "logicalclocks/hopsworks"
"hopshadoop/hops" -> "hopshadoop/hops-metadata-dal-impl-ndb"
"hopshadoop/hops" -> "logicalclocks/rondb"
"hopshadoop/hops" -> "karamelchef/karamel"
"hopshadoop/hops" -> "linkedin/dynamometer" ["e"=1]
"hopshadoop/hops" -> "logicalclocks/hops-examples"
"hopshadoop/hops" -> "hopshadoop/hops-metadata-dal"
"d6t/d6t-python" -> "d6t/d6tpipe"
"Waikato/wekaDeeplearning4j" -> "Waikato/weka-3.8"
"kedro-org/kedro-community" -> "kedro-org/kedro-starters"
"jacob-long/jtools" -> "jacob-long/interactions"
"jacob-long/jtools" -> "jacob-long/panelr"
"brain-research/nngp" -> "maka89/Deep-Kernel-GP"
"brain-research/nngp" -> "SheffieldML/PyDeepGP"
"brain-research/nngp" -> "hughsalimbeni/DGPs_with_IWVI"
"brain-research/nngp" -> "hughsalimbeni/bayesian_benchmarks"
"explodinglabs/jsonrpcserver" -> "explodinglabs/jsonrpcclient"
"msgpack/msgpack-rpc" -> "msgpack/msgpack-idl"
"msgpack/msgpack-rpc" -> "frsyuki/mpio"
"msgpack/msgpack-rpc" -> "msgpack/msgpack-rpc-python"
"mblum/libgp" -> "jonfink/GP"
"mblum/libgp" -> "SheffieldML/GPc"
"mblum/libgp" -> "resibots/limbo"
"epfl-ada/ADA2017-Tutorials" -> "epfl-ada/ADA2017-Homeworks"
"StatMixedML/CatBoostLSS" -> "StatMixedML/XGBoostLSS"
"StatMixedML/CatBoostLSS" -> "StatMixedML/LightGBMLSS"
"dcai-course/dcai-course" -> "dcai-course/dcai-lab"
"scverse/muon" -> "scverse/mudata"
"markvdw/convgp" -> "kekeblom/DeepCGP"
"markvdw/convgp" -> "hughsalimbeni/DGPs_with_IWVI"
"dask/dask-kubernetes" -> "dask/dask-docker"
"dask/dask-kubernetes" -> "dask/dask-cloudprovider"
"dask/dask-kubernetes" -> "dask/distributed"
"dask/dask-kubernetes" -> "dask/dask-ml"
"dask/dask-kubernetes" -> "dask/dask-jobqueue"
"dask/dask-kubernetes" -> "dask/helm-chart"
"dask/dask-kubernetes" -> "dask/gcsfs"
"dask/dask-kubernetes" -> "dask/dask-labextension"
"uber/bayesmark" -> "rdturnermtl/bbo_challenge_starter_kit"
"uber/bayesmark" -> "uber-research/TuRBO"
"jacopotagliabue/post-modern-stack" -> "jacopotagliabue/recs-at-resonable-scale"
"jacopotagliabue/post-modern-stack" -> "jacopotagliabue/you-dont-need-a-bigger-boat"
"jacopotagliabue/post-modern-stack" -> "jacopotagliabue/reclist"
"bentoml/bentoctl" -> "bentoml/Yatai"
"jacopotagliabue/recs-at-resonable-scale" -> "jacopotagliabue/reclist"
"jacopotagliabue/recs-at-resonable-scale" -> "jacopotagliabue/post-modern-stack"
"jacopotagliabue/recs-at-resonable-scale" -> "jacopotagliabue/you-dont-need-a-bigger-boat"
"jacopotagliabue/recs-at-resonable-scale" -> "jacopotagliabue/paas-data-ingestion"
"KaveIO/PhiK" -> "histogrammar/histogrammar-python"
"MI2DataLab/WildNLP" -> "ModelOriented/DALEXtra"
"MI2DataLab/WildNLP" -> "MI2DataLab/auditor"
"MI2DataLab/WildNLP" -> "hbaniecki/awesome-adversarial-interpretable-machine-learning"
"kearnz/autoimpute" -> "Ekeany/Boruta-Shap"
"kearnz/autoimpute" -> "eltonlaw/impyute"
"alteryx/woodwork" -> "FeatureLabs/nlp_primitives"
"alteryx/woodwork" -> "alteryx/evalml"
"frsyuki/mpio" -> "msgpack-rpc/msgpack-rpc-cpp"
"datagraph/jquery-jsonrpc" -> "Textalk/jquery.jsonrpcclient.js"
"datagraph/jquery-jsonrpc" -> "gimmi/jsonrpcjs"
"datagraph/jquery-jsonrpc" -> "hagino3000/jquery-jsonrpc2.0"
"automl/ConfigSpace" -> "automl/CAVE"
"automl/ConfigSpace" -> "automl/HpBandSter"
"automl/ConfigSpace" -> "automl/BOAH"
"automl/ConfigSpace" -> "automl/HPOBench"
"automl/ConfigSpace" -> "automl/SMAC3"
"automl/ConfigSpace" -> "automl/LCBench"
"Quantmetry/awesome_quantmetry" -> "Quantmetry/pipeasy-spark"
"ogozuacik/d3-discriminative-drift-detector-concept-drift" -> "ogozuacik/one-class-drift-detection"
"DAGsHub/client" -> "jenkinsci/dagshub-branch-source-plugin"
"ShilinHe/interpretableNLP" -> "interpretml/interpret-text"
"xhochy/fletcher" -> "JDASoftwareGroup/kartothek"
"xhochy/fletcher" -> "chmp/framequery"
"csxeba/evolute" -> "MagNet-DL/magnet"
"biolab/orange3-text" -> "biolab/orange3-educational"
"biolab/orange3-text" -> "biolab/orange3-network"
"W4ngatang/sent-bias" -> "pliang279/sent_debias"
"W4ngatang/sent-bias" -> "keitakurita/contextual_embedding_bias_measure"
"rapidsai/cloud-ml-examples" -> "rapidsai/tpcx-bb"
"tugberkugurlu/AspNet.Identity.RavenDB" -> "ILMServices/RavenDB.AspNet.Identity"
"SAP/machine-learning-lab" -> "cotect/covid-local-api"
"SAP/machine-learning-lab" -> "cotect/cotect"
"Featuretools/predict_next_purchase" -> "Featuretools/Olympic-Games-Demo"
"Featuretools/predict_next_purchase" -> "FeatureLabs/compose-ml"
"epfl-ada/ADA2017-Homeworks" -> "epfl-ada/ADA2017-Tutorials"
"tiagobotari/melime" -> "victorhb/ImbCoL"
"jameshensman/VFF" -> "thangbui/geepee"
"probml/pmtksupport" -> "probml/pmtkdata"
"tudo-r/BatchJobs" -> "tudo-r/BatchExperiments"
"tudo-r/BatchJobs" -> "berndbischl/parallelMap"
"tudo-r/BatchJobs" -> "berndbischl/BBmisc"
"tudo-r/BatchJobs" -> "berndbischl/mlrMBO"
"tudo-r/BatchJobs" -> "berndbischl/ParamHelpers"
"tudo-r/BatchJobs" -> "rdatsci/rt"
"jacob-long/interactions" -> "jacob-long/panelr"
"jacob-long/interactions" -> "jacob-long/jtools"
"lyft/flytestdlib" -> "lyft/flyteadmin"
"lyft/flytestdlib" -> "lyft/flyteplugins"
"jonfink/GP" -> "mblum/libgp"
"g0t4/aspnet-identity-mongo-sample" -> "g0t4/aspnet-identity-mongo"
"kirthevasank/nasbot" -> "titu1994/progressive-neural-architecture-search" ["e"=1]
"oracle/graphpipe-py" -> "oracle/graphpipe-tf-py"
"ml-tooling/lazycluster" -> "cotect/covid-local-api"
"replicate/dreambooth" -> "replicate/dreambooth-template"
"explodinglabs/jsonrpcclient" -> "explodinglabs/jsonrpcserver"
"ADAEPFL/Homework" -> "ADAEPFL/Labs"
"ADAEPFL/Homework" -> "ADAEPFL/Notes"
"ADAEPFL/Labs" -> "ADAEPFL/Notes"
"ADAEPFL/Labs" -> "ADAEPFL/Homework"
"slinderman/pypolyagamma" -> "jwindle/BayesLogit"
"slinderman/pypolyagamma" -> "HIPS/pgmult"
"lyft/flytekit" -> "lyft/flyteadmin"
"lyft/flytekit" -> "lyft/flytestdlib"
"igaloly/vue-preloaders" -> "aporia-ai/dmatrix2np"
"rivolli/mfe" -> "victorhb/ImbCoL"
"tamsanh/kedro-great" -> "tamsanh/kedro-introduction-tutorial"
"FeatureLabs/autonormalize" -> "FeatureLabs/nlp_primitives"
"FeatureLabs/autonormalize" -> "FeatureLabs/categorical_encoding"
"FeatureLabs/autonormalize" -> "FeatureLabs/compose-ml"
"berndbischl/parallelMap" -> "berndbischl/ParamHelpers"
"berndbischl/parallelMap" -> "berndbischl/BBmisc"
"berndbischl/parallelMap" -> "berndbischl/mlrMBO"
"lucfra/RFHO" -> "lucfra/FAR-HO"
"rdatsci/rt" -> "berndbischl/BBmisc"
"rdatsci/rt" -> "tudo-r/dt"
"pliang279/sent_debias" -> "W4ngatang/sent-bias"
"HDI-Project/SDV" -> "HDI-Project/RDT"
"cotect/cotect" -> "cotect/covid-local-api"
"iterative/gto" -> "iterative/dvclive"
"iterative/gto" -> "dacbd/create-issue-action"
"iterative/gto" -> "iterative/terraform-provider-iterative"
"ustunb/actionable-recourse" -> "amirhk/mace"
"TutteInstitute/vectorizers" -> "TutteInstitute/thisnotthat"
"dask/dask-gateway" -> "dask/helm-chart"
"BCG-Gamma/pytools" -> "BCG-Gamma/sklearndf"
"berndbischl/ParamHelpers" -> "berndbischl/BBmisc"
"berndbischl/ParamHelpers" -> "berndbischl/parallelMap"
"berndbischl/BBmisc" -> "berndbischl/ParamHelpers"
"biolab/orange3" ["l"="25.334,33.861"]
"biolab/orange" ["l"="25.21,33.833"]
"altair-viz/altair" ["l"="23.228,4.592"]
"statsmodels/statsmodels" ["l"="23.046,4.615"]
"biolab/orange3-text" ["l"="25.25,33.779"]
"automl/auto-sklearn" ["l"="25.52,33.845"]
"dask/dask" ["l"="23.129,4.517"]
"mlflow/mlflow" ["l"="25.373,34.026"]
"mwaskom/seaborn" ["l"="23.082,4.604"]
"plotly/dash" ["l"="23.181,4.489"]
"bokeh/bokeh" ["l"="23.15,4.588"]
"PAIR-code/facets" ["l"="25.452,33.857"]
"DistrictDataLabs/yellowbrick" ["l"="25.542,33.865"]
"man-group/dtale" ["l"="25.488,34.024"]
"h2oai/h2o-3" ["l"="25.425,33.838"]
"modin-project/modin" ["l"="25.404,33.956"]
"shankarpandala/lazypredict" ["l"="25.556,34.069"]
"sfu-db/dataprep" ["l"="25.529,34.071"]
"oegedijk/explainerdashboard" ["l"="25.614,34.072"]
"lux-org/lux" ["l"="25.508,34.062"]
"AutoViML/AutoViz" ["l"="25.576,34.03"]
"pycaret/pycaret" ["l"="25.479,33.993"]
"MAIF/shapash" ["l"="25.584,34.068"]
"fbdesignpro/sweetviz" ["l"="25.542,34.027"]
"NannyML/nannyml" ["l"="25.559,34.156"]
"Nixtla/statsforecast" ["l"="22.493,36.026"]
"unit8co/darts" ["l"="22.463,35.992"]
"optuna/optuna" ["l"="25.432,33.933"]
"online-ml/river" ["l"="25.488,34.107"]
"deepchecks/deepchecks" ["l"="25.509,34.143"]
"evidentlyai/evidently" ["l"="25.475,34.139"]
"mljar/mljar-supervised" ["l"="25.566,34.015"]
"dmlc/xgboost" ["l"="25.345,33.814"]
"Microsoft/LightGBM" ["l"="25.421,33.759"]
"scikit-learn/scikit-learn" ["l"="33.568,35.426"]
"fchollet/keras" ["l"="23.498,31.087"]
"facebookresearch/fastText" ["l"="30.048,32.705"]
"microsoft/LightGBM" ["l"="25.382,33.845"]
"dmlc/mxnet" ["l"="27.064,33.96"]
"slundberg/shap" ["l"="25.452,33.889"]
"google-research/bert" ["l"="30.054,32.634"]
"catboost/catboost" ["l"="25.477,33.803"]
"facebookresearch/faiss" ["l"="30.106,32.606"]
"tensorflow/models" ["l"="33.821,35.342"]
"pytorch/pytorch" ["l"="33.791,35.479"]
"aymericdamien/TensorFlow-Examples" ["l"="23.614,31.017"]
"BVLC/caffe" ["l"="33.749,35.334"]
"fastai/fastai" ["l"="23.664,30.845"]
"iterative/cml" ["l"="25.398,34.122"]
"iterative/dvc" ["l"="25.307,34.041"]
"visenger/awesome-mlops" ["l"="23.713,30.51"]
"bentoml/BentoML" ["l"="25.372,34.138"]
"quantumblacklabs/kedro" ["l"="25.333,34.01"]
"EthicalML/awesome-production-machine-learning" ["l"="23.71,30.559"]
"iterative/mlem" ["l"="25.516,34.24"]
"feast-dev/feast" ["l"="25.38,34.167"]
"cortexlabs/cortex" ["l"="25.374,34.067"]
"great-expectations/great_expectations" ["l"="13.678,23.787"]
"Netflix/metaflow" ["l"="25.318,34.079"]
"SeldonIO/seldon-core" ["l"="25.392,34.143"]
"kelvins/awesome-mlops" ["l"="25.448,34.215"]
"epfml/ML_course" ["l"="25.44,33.126"]
"epfml/OptML_course" ["l"="25.447,33.205"]
"zifeo/EPFL" ["l"="25.414,33.153"]
"sweng-epfl/public" ["l"="25.412,33.083"]
"epfl-ada/2020" ["l"="25.469,33.096"]
"epfl-ada/2021" ["l"="25.409,33.104"]
"LSIR/DIS" ["l"="25.432,33.156"]
"epfl-ada/ADA2017-Tutorials" ["l"="25.444,33.1"]
"HexHive/thesis_template" ["l"="25.404,33.132"]
"epfl-ada/ADA2017-Homeworks" ["l"="25.456,33.106"]
"epfl-ada/2019" ["l"="25.428,33.105"]
"epfl-ada/2022" ["l"="25.469,33.116"]
"ADAEPFL/Homework" ["l"="25.453,33.078"]
"mdeff/ntds_2017" ["l"="25.436,33.085"]
"epfml/opt-shortcourse" ["l"="25.443,33.167"]
"epfml/autoTrain" ["l"="25.453,33.162"]
"ermongroup/cs228-notes" ["l"="25.499,33.524"]
"janosh/awesome-normalizing-flows" ["l"="23.281,33.901"]
"vahidk/EffectivePyTorch" ["l"="34.17,35.752"]
"cvxgrp/cvx_short_course" ["l"="27.881,41.957"]
"percyliang/cs229t" ["l"="24.133,34.554"]
"tensorflow/tflite-support" ["l"="25.628,34.32"]
"tensorflow/runtime" ["l"="27.708,35.531"]
"tensorflow/profiler" ["l"="25.596,34.244"]
"marcotcr/lime" ["l"="25.523,33.887"]
"TeamHG-Memex/eli5" ["l"="25.599,33.883"]
"scikit-learn-contrib/imbalanced-learn" ["l"="25.523,33.818"]
"hyperopt/hyperopt" ["l"="25.513,33.793"]
"interpretml/interpret" ["l"="25.662,34.027"]
"blue-yonder/tsfresh" ["l"="25.483,33.837"]
"rasbt/mlxtend" ["l"="25.552,33.832"]
"pandas-profiling/pandas-profiling" ["l"="25.461,33.929"]
"lmcinnes/umap" ["l"="25.445,33.807"]
"christophM/interpretable-ml-book" ["l"="25.663,33.938"]
"MingchaoZhu/InterpretableMLBook" ["l"="24.193,31.045"]
"jphall663/awesome-machine-learning-interpretability" ["l"="25.713,33.983"]
"uber/causalml" ["l"="23.799,33.172"]
"lopusz/awesome-interpretable-machine-learning" ["l"="25.772,33.99"]
"christophM/iml" ["l"="25.892,34.004"]
"SeldonIO/alibi" ["l"="25.651,34.054"]
"ctgk/PRML" ["l"="23.911,31.059"]
"pytorch/captum" ["l"="34.22,35.754"]
"microsoft/interpret" ["l"="25.623,33.969"]
"tensorflow/docs" ["l"="25.642,34.269"]
"tensorflow/community" ["l"="25.572,34.247"]
"tensorflow/datasets" ["l"="25.647,34.194"]
"tensorflow/examples" ["l"="25.686,34.285"]
"tensorflow/tensorboard" ["l"="25.566,34.123"]
"zalandoresearch/fashion-mnist" ["l"="25.669,34.229"]
"tensorflow/hub" ["l"="25.63,34.143"]
"keras-team/keras" ["l"="33.65,35.369"]
"tensorflow/tensor2tensor" ["l"="30.047,32.545"]
"lmoroney/dlaicourse" ["l"="25.726,34.323"]
"czy36mengfei/tensorflow2_tutorials_chinese" ["l"="23.994,31.052"]
"tensorflow/serving" ["l"="25.476,34.212"]
"pytorch/tutorials" ["l"="33.892,35.575"]
"fchollet/deep-learning-with-python-notebooks" ["l"="23.621,30.85"]
"tensorflow/tfjs-models" ["l"="27.931,27.663"]
"google/mediapipe" ["l"="33.995,35.51"]
"android/camera-samples" ["l"="48.054,-2.947"]
"googlesamples/mlkit" ["l"="48.019,-2.987"]
"lutzroeder/netron" ["l"="34.178,35.522"]
"Tencent/ncnn" ["l"="34.142,35.514"]
"alibaba/MNN" ["l"="34.206,35.543"]
"EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi" ["l"="34.145,35.182"]
"tzutalin/labelImg" ["l"="34.224,35.359"]
"awslabs/autogluon" ["l"="25.499,33.956"]
"microsoft/nni" ["l"="25.357,33.918"]
"keras-team/autokeras" ["l"="25.515,33.928"]
"EpistasisLab/tpot" ["l"="25.499,33.873"]
"hibayesian/awesome-automl-papers" ["l"="28.368,34.313"]
"awslabs/gluon-ts" ["l"="22.439,35.973"]
"automl/Auto-PyTorch" ["l"="28.391,34.298"]
"dmlc/gluon-cv" ["l"="34.367,35.411"]
"microsoft/FLAML" ["l"="25.54,34.054"]
"google/automl" ["l"="34.468,35.536"]
"dreamquark-ai/tabnet" ["l"="23.226,34.554"]
"FeatureLabs/featuretools" ["l"="25.615,33.907"]
"FeatureLabs/compose" ["l"="25.69,33.969"]
"alteryx/evalml" ["l"="25.665,34.004"]
"solegalli/feature_engine" ["l"="25.698,33.954"]
"AxeldeRomblay/MLBox" ["l"="25.582,33.836"]
"ClimbsRocks/auto_ml" ["l"="25.58,33.806"]
"scikit-learn-contrib/category_encoders" ["l"="25.674,33.984"]
"Featuretools/predict-next-purchase" ["l"="25.603,32.653"]
"hyperopt/hyperopt-sklearn" ["l"="25.592,33.788"]
"scikit-learn-contrib/boruta_py" ["l"="25.702,33.904"]
"airbnb/knowledge-repo" ["l"="25.352,33.765"]
"apache/incubator-airflow" ["l"="13.525,23.942"]
"nteract/papermill" ["l"="21.304,28.801"]
"airbnb/superset" ["l"="25.265,33.68"]
"rhiever/tpot" ["l"="25.564,33.773"]
"airbnb/aerosolve" ["l"="11.605,24.298"]
"facebookincubator/prophet" ["l"="25.4,33.718"]
"drivendata/cookiecutter-data-science" ["l"="25.393,33.927"]
"nteract/nteract" ["l"="21.361,28.794"]
"Featuretools/featuretools" ["l"="25.564,33.851"]
"fishtown-analytics/dbt" ["l"="13.694,23.756"]
"airbnb/caravel" ["l"="11.595,24.247"]
"ray-project/ray" ["l"="25.254,33.964"]
"google/jax" ["l"="30.277,32.484"]
"openai/baselines" ["l"="25.044,35.992"]
"openai/gym" ["l"="24.91,36.054"]
"horovod/horovod" ["l"="34.127,35.595"]
"PyTorchLightning/pytorch-lightning" ["l"="34.221,35.789"]
"dennybritz/reinforcement-learning" ["l"="24.974,36.051"]
"streamlit/streamlit" ["l"="23.305,4.234"]
"openai/spinningup" ["l"="25.097,36.01"]
"h2oai/h2o-tutorials" ["l"="11.117,24.314"]
"h2oai/sparkling-water" ["l"="11.165,24.15"]
"szilard/benchm-ml" ["l"="20.318,43.65"]
"qinwf/awesome-R" ["l"="20.273,43.638"]
"reiinakano/xcessiv" ["l"="25.602,33.772"]
"ClimbsRocks/machineJS" ["l"="25.651,33.706"]
"reiinakano/scikit-plot" ["l"="25.591,33.821"]
"HDI-Project/ATM" ["l"="25.71,33.735"]
"scikit-learn-contrib/categorical-encoding" ["l"="25.62,33.864"]
"salesforce/TransmogrifAI" ["l"="25.583,33.923"]
"scikit-optimize/scikit-optimize" ["l"="25.559,33.754"]
"StatMixedML/XGBoostLSS" ["l"="25.79,34.045"]
"StatMixedML/LightGBMLSS" ["l"="25.833,34.038"]
"StatMixedML/CatBoostLSS" ["l"="25.843,34.05"]
"stanfordmlgroup/ngboost" ["l"="25.714,34.004"]
"fabsig/GPBoost" ["l"="25.782,34.017"]
"CDonnerer/xgboost-distribution" ["l"="25.829,34.057"]
"scikit-learn-contrib/MAPIE" ["l"="25.734,34.058"]
"cerlymarco/linear-tree" ["l"="25.773,34.009"]
"Ekeany/Boruta-Shap" ["l"="25.744,33.966"]
"henrikbostrom/crepes" ["l"="25.843,34.137"]
"elephaint/pgbm" ["l"="25.856,34.04"]
"cerlymarco/shap-hypetune" ["l"="25.723,34.034"]
"StatMixedML/Py-BoostLSS" ["l"="25.828,34.069"]
"carlomazzaferro/scikit-hts" ["l"="22.564,36.028"]
"cod3licious/autofeat" ["l"="25.727,33.973"]
"kubeflow/kubeflow" ["l"="25.333,34.122"]
"ludwig-ai/ludwig" ["l"="25.461,34.165"]
"fugue-project/fugue" ["l"="25.465,34.184"]
"uber/orbit" ["l"="22.507,36.013"]
"flyteorg/flyte" ["l"="25.405,34.214"]
"whylabs/whylogs" ["l"="25.372,34.315"]
"PyTorchLightning/lightning-flash" ["l"="34.241,35.954"]
"snorkel-team/snorkel" ["l"="29.651,32.46"]
"SeldonIO/alibi-detect" ["l"="25.516,34.105"]
"replicate/cog-stable-diffusion" ["l"="25.523,34.436"]
"replicate/dreambooth" ["l"="25.554,34.504"]
"replicate/cog" ["l"="25.449,34.264"]
"tensorflow/io" ["l"="25.568,34.231"]
"tensorflow/custom-op" ["l"="25.582,34.282"]
"tensorflow/tfx" ["l"="25.495,34.191"]
"tensorflow/estimator" ["l"="25.588,34.227"]
"tensorflow/mesh" ["l"="27.71,31.078"]
"tensorflow/addons" ["l"="25.59,34.156"]
"tensorflow/transform" ["l"="25.555,34.175"]
"tensorflow/ecosystem" ["l"="22.754,37.219"]
"tensorflow/networking" ["l"="25.566,34.299"]
"tensorflow/text" ["l"="25.598,34.199"]
"NVIDIA/HugeCTR" ["l"="22.609,37.027"]
"tensorflow/data-validation" ["l"="25.543,34.206"]
"tensorflow/build" ["l"="25.6,34.271"]
"PrefectHQ/prefect" ["l"="13.593,23.745"]
"vaexio/vaex" ["l"="25.377,33.975"]
"dagster-io/dagster" ["l"="13.637,23.772"]
"jphall663/interpretable_machine_learning_with_python" ["l"="25.804,33.989"]
"pbiecek/xai_resources" ["l"="25.802,34.015"]
"h2oai/mli-resources" ["l"="25.806,33.973"]
"wangyongjie-ntu/Awesome-explainable-AI" ["l"="25.79,34.03"]
"EthicalML/xai" ["l"="25.758,34.027"]
"tensorflow/lucid" ["l"="34.11,35.539"]
"jhfjhfj1/autokeras" ["l"="25.619,33.813"]
"WillKoehrsen/feature-selector" ["l"="25.682,33.812"]
"tensorflow/adanet" ["l"="25.583,33.899"]
"probml/pml-book" ["l"="25.58,33.481"]
"probml/pyprobml" ["l"="25.546,33.509"]
"probml/pml2-book" ["l"="25.598,33.577"]
"mml-book/mml-book.github.io" ["l"="23.684,30.741"]
"pyro-ppl/pyro" ["l"="25.499,33.587"]
"d2l-ai/d2l-en" ["l"="23.805,30.788"]
"arogozhnikov/einops" ["l"="34.25,35.847"]
"pyro-ppl/numpyro" ["l"="23.554,33.804"]
"avehtari/BDA_course_Aalto" ["l"="23.819,33.807"]
"rmcelreath/stat_rethinking_2022" ["l"="23.796,33.775"]
"Atcold/pytorch-Deep-Learning" ["l"="23.803,30.683"]
"rougier/scientific-visualization-book" ["l"="23.371,30.474"]
"cornellius-gp/gpytorch" ["l"="25.517,33.619"]
"zenml-io/zenml" ["l"="25.426,34.224"]
"TurnerSoftware/MongoFramework" ["l"="25.071,34.781"]
"dj-nitehawk/MongoDB.Entities" ["l"="25.056,34.834"]
"alexandre-spieser/mongodb-generic-repository" ["l"="25.02,34.853"]
"FluentDateTime/FluentDateTime" ["l"="25.51,17.679"]
"TanvirArjel/EFCore.GenericRepository" ["l"="25.601,17.479"]
"TurnerSoftware/CacheTower" ["l"="25.333,17.708"]
"matteofabbri/AspNetCore.Identity.Mongo" ["l"="25.035,34.833"]
"enisn/AutoFilterer" ["l"="25.253,34.474"]
"pgmpy/pgmpy" ["l"="25.432,33.539"]
"pgmpy/pgmpy_notebook" ["l"="25.369,33.478"]
"jmschrei/pomegranate" ["l"="25.481,33.608"]
"eBay/bayesian-belief-networks" ["l"="25.408,33.505"]
"quantumblacklabs/causalnex" ["l"="23.777,33.146"]
"blei-lab/edward" ["l"="25.451,33.61"]
"pymc-devs/pymc3" ["l"="25.457,33.585"]
"microsoft/dowhy" ["l"="23.774,33.183"]
"bayespy/bayespy" ["l"="25.432,33.508"]
"rguo12/awesome-causality-algorithms" ["l"="23.726,33.158"]
"pymc-devs/pymc" ["l"="25.455,33.519"]
"erdogant/bnlearn" ["l"="23.754,33.093"]
"FenTechSolutions/CausalDiscoveryToolbox" ["l"="23.734,33.143"]
"tensorflow/probability" ["l"="25.501,33.707"]
"rapidsai/cudf" ["l"="25.298,33.93"]
"databricks/koalas" ["l"="25.405,33.998"]
"jmcarpenter2/swifter" ["l"="25.471,33.949"]
"pola-rs/polars" ["l"="23.386,4.09"]
"alan-turing-institute/sktime" ["l"="22.455,36.025"]
"BayesWitnesses/m2cgen" ["l"="25.576,33.876"]
"nok/sklearn-porter" ["l"="25.687,33.746"]
"Wookai/paper-tips-and-tricks" ["l"="27.738,30.147"]
"microsoft/hummingbird" ["l"="25.455,34.031"]
"Luolc/AdaBound" ["l"="34.304,35.575"]
"dmlc/treelite" ["l"="22.863,37.358"]
"minimaxir/automl-gs" ["l"="25.552,33.888"]
"Azure/mmlspark" ["l"="11.097,23.932"]
"scikit-learn-contrib/hdbscan" ["l"="25.599,33.852"]
"DmitryUlyanov/Multicore-TSNE" ["l"="22.89,37.554"]
"rapidsai/cuml" ["l"="25.357,33.884"]
"spotify/annoy" ["l"="30.151,32.66"]
"HIPS/autograd" ["l"="25.428,33.663"]
"aFelipeSP/pdfme" ["l"="25.93,34.265"]
"koaning/bulk" ["l"="25.817,34.189"]
"koaning/drawdata" ["l"="25.768,34.142"]
"koaning/human-learn" ["l"="25.737,34.118"]
"koaning/doubtlab" ["l"="25.75,34.132"]
"koaning/scikit-lego" ["l"="25.695,34.02"]
"jtpio/jupyterlite" ["l"="21.159,28.927"]
"sfu-db/connector-x" ["l"="-10.729,5.429"]
"jbesomi/texthero" ["l"="29.67,32.523"]
"h2oai/datatable" ["l"="25.44,34.002"]
"alteryx/featuretools" ["l"="25.607,34.014"]
"druid-io/druid" ["l"="11.522,24.022"]
"getredash/redash" ["l"="32.619,-26.137"]
"spotify/luigi" ["l"="22.964,4.425"]
"channelcat/sanic" ["l"="22.744,3.966"]
"metabase/metabase" ["l"="32.566,-26.184"]
"rushter/MLAlgorithms" ["l"="23.393,30.9"]
"kennethreitz/pipenv" ["l"="22.781,4.045"]
"onurakpolat/awesome-bigdata" ["l"="23.209,30.906"]
"atlassian/localstack" ["l"="28.403,-19.164"]
"caesar0301/awesome-public-datasets" ["l"="23.272,30.931"]
"probml/pmtk3" ["l"="25.495,33.482"]
"bayesnet/bnt" ["l"="25.432,33.437"]
"rasmusbergpalm/DeepLearnToolbox" ["l"="27.041,34"]
"PRML/PRMLT" ["l"="23.927,31.179"]
"probml/pmtkdata" ["l"="25.521,33.43"]
"ArthurZC23/Machine-Learning-A-Probabilistic-Perspective-Solutions" ["l"="23.975,31.546"]
"SheffieldML/GPy" ["l"="25.528,33.59"]
"PRML/PRML" ["l"="26.967,34.014"]
"GPflow/GPflow" ["l"="25.521,33.565"]
"vlfeat/vlfeat" ["l"="30.139,37.001"]
"probml/pmtksupport" ["l"="25.504,33.427"]
"lisa-lab/pylearn2" ["l"="27.132,34.034"]
"lisa-lab/DeepLearningTutorials" ["l"="27.084,34.054"]
"minimaxir/person-blocker" ["l"="25.792,33.752"]
"Prodicode/ann-visualizer" ["l"="25.713,33.811"]
"mm-mansour/Fast-Pandas" ["l"="25.671,33.788"]
"dfouhey/caffe64" ["l"="25.761,33.752"]
"luanfujun/deep-painterly-harmonization" ["l"="33.651,32.744"]
"claudiodangelis/qr-filetransfer" ["l"="28.609,-18.843"]
"NVlabs/MUNIT" ["l"="33.511,32.781"]
"yunjey/StarGAN" ["l"="33.625,32.692"]
"yogaboll/react-kanban" ["l"="24.118,-26.169"]
"kaishengtai/neuralart" ["l"="33.511,32.335"]
"NervanaSystems/nlp-architect" ["l"="29.899,32.597"]
"kennethreitz/twitter-scraper" ["l"="-4.749,-45.313"]
"NVIDIA/FastPhotoStyle" ["l"="33.654,32.683"]
"mdbloice/Augmentor" ["l"="34.261,35.428"]
"SummitKwan/transparent_latent_gan" ["l"="33.515,32.85"]
"meetmangukiya/instagram-scraper" ["l"="-4.65,-45.289"]
"tensorflow/model-optimization" ["l"="25.618,34.173"]
"Tencent/PocketFlow" ["l"="27.564,35.401"]
"NervanaSystems/distiller" ["l"="27.573,35.45"]
"tensorflow/tensorrt" ["l"="29.943,38.191"]
"pytorch/QNNPACK" ["l"="27.619,35.429"]
"google/qkeras" ["l"="-8.126,47.161"]
"tensorflow/model-analysis" ["l"="25.58,34.107"]
"google/gemmlowp" ["l"="27.663,35.41"]
"he-y/Awesome-Pruning" ["l"="30.872,35.601"]
"onnx/tensorflow-onnx" ["l"="34.442,35.545"]
"Eric-mingjie/rethinking-network-pruning" ["l"="30.883,35.616"]
"keras-team/keras-tuner" ["l"="25.588,33.958"]
"daquexian/onnx-simplifier" ["l"="34.45,35.564"]
"spotify/chartify" ["l"="25.554,33.932"]
"santinic/pampy" ["l"="22.952,3.953"]
"mwouts/jupytext" ["l"="21.279,28.842"]
"ResidentMario/missingno" ["l"="25.548,33.908"]
"quantopian/qgrid" ["l"="21.345,28.86"]
"GauravBh1010tt/DeepLearn" ["l"="30.03,32.614"]
"lutzroeder/Netron" ["l"="27.595,35.353"]
"dmlc/gluon-nlp" ["l"="29.895,32.533"]
"stared/livelossplot" ["l"="25.645,33.779"]
"farizrahman4u/recurrentshop" ["l"="31.281,31.576"]
"raghakot/keras-vis" ["l"="25.702,33.779"]
"databricks/mlflow" ["l"="11.069,23.937"]
"twitter/AnomalyDetection" ["l"="22.95,35.094"]
"google/CausalImpact" ["l"="23.826,33.206"]
"RJT1990/pyflux" ["l"="22.429,36.087"]
"wesm/feather" ["l"="21.527,28.842"]
"JohnLangford/vowpal_wabbit" ["l"="27.176,33.948"]
"uber/pyro" ["l"="25.461,33.65"]
"yhat/rodeo" ["l"="21.563,28.835"]
"WillKoehrsen/hyperparameter-optimization" ["l"="25.666,33.767"]
"WillKoehrsen/automated-feature-engineering" ["l"="25.729,33.778"]
"abhayspawar/featexp" ["l"="25.665,33.832"]
"HunterMcGushion/hyperparameter_hunter" ["l"="25.685,33.866"]
"thuijskens/bayesian-optimization" ["l"="25.663,33.666"]
"WillKoehrsen/machine-learning-project-walkthrough" ["l"="22.054,30.169"]
"fmfn/BayesianOptimization" ["l"="25.519,33.726"]
"FontTian/hyperopt-doc-zh" ["l"="23.908,31.444"]
"automl/HpBandSter" ["l"="25.667,33.641"]
"WillKoehrsen/recurrent-neural-networks" ["l"="22.042,30.229"]
"Vooban/Hyperopt-Keras-CNN-CIFAR-100" ["l"="25.745,33.713"]
"WillKoehrsen/wikipedia-data-science" ["l"="22.042,30.261"]
"paulgb/sklearn-pandas" ["l"="21.659,28.823"]
"scikit-learn-contrib/sklearn-pandas" ["l"="25.628,33.893"]
"maxpumperla/hyperas" ["l"="25.623,33.787"]
"HIPS/Spearmint" ["l"="25.574,33.673"]
"Microsoft/nni" ["l"="25.653,33.743"]
"Microsoft/pai" ["l"="25.841,33.569"]
"melodyguan/enas" ["l"="28.46,34.314"]
"Microsoft/MMdnn" ["l"="34.266,35.282"]
"markdtw/awesome-architecture-search" ["l"="28.447,34.332"]
"carpedm20/ENAS-pytorch" ["l"="28.427,34.307"]
"quark0/darts" ["l"="28.415,34.333"]
"tobegit3hub/advisor" ["l"="25.546,33.802"]
"uber/horovod" ["l"="34.123,35.271"]
"dmlc/tvm" ["l"="27.643,35.424"]
"facebookresearch/nevergrad" ["l"="25.543,33.689"]
"man-group/arctic" ["l"="21.81,32.734"]
"adamerose/PandasGUI" ["l"="25.59,34.044"]
"adamerose/pandasgui" ["l"="25.483,34.045"]
"hudson-and-thames/mlfinlab" ["l"="21.79,32.649"]
"man-group/notebooker" ["l"="24.397,15.769"]
"ranaroussi/quantstats" ["l"="21.785,32.684"]
"robertmartin8/PyPortfolioOpt" ["l"="21.797,32.668"]
"polakowo/vectorbt" ["l"="21.812,32.69"]
"DAGsHub/fds" ["l"="25.223,34.116"]
"jenkinsci/dagshub-branch-source-plugin" ["l"="25.183,34.13"]
"DAGsHub/client" ["l"="25.164,34.137"]
"permitio/OPToggles" ["l"="-10.254,0.649"]
"zincware/ZnTrack" ["l"="25.176,34.119"]
"DagsHub/client" ["l"="25.162,34.123"]
"rapidsai/cugraph" ["l"="25.211,33.902"]
"cupy/cupy" ["l"="34.072,35.653"]
"apache/arrow" ["l"="-10.729,5.305"]
"BlazingDB/blazingsql" ["l"="25.216,33.942"]
"numba/numba" ["l"="23.047,4.391"]
"rapidsai/notebooks" ["l"="25.163,33.908"]
"rapidsai/cuspatial" ["l"="25.184,33.885"]
"gunrock/gunrock" ["l"="28.009,35.49"]
"rapidsai/rmm" ["l"="27.99,35.498"]
"rapidsai/cuxfilter" ["l"="25.123,33.886"]
"rapidsai/cusignal" ["l"="-10.699,-37.719"]
"gunrock/graphblast" ["l"="-12.687,5.125"]
"rapidsai/raft" ["l"="28.019,35.518"]
"snap-stanford/ogb" ["l"="21.9,38.604"]
"deepmind/jraph" ["l"="23.507,33.787"]
"GraphIt-DSL/graphit" ["l"="10.296,26.735"]
"NVIDIA/cub" ["l"="27.908,35.481"]
"stellargraph/stellargraph" ["l"="21.807,38.692"]
"yzhao062/pyod" ["l"="22.856,35.057"]
"kubeflow/pipelines" ["l"="25.352,34.195"]
"argoproj/argo" ["l"="-10.686,0.052"]
"kubeflow/katib" ["l"="25.353,34.147"]
"kubernetes-sigs/kustomize" ["l"="-10.675,0.095"]
"volcano-sh/volcano" ["l"="-9.433,2.686"]
"pachyderm/pachyderm" ["l"="25.274,34.085"]
"kubernetes-sigs/kubebuilder" ["l"="-10.786,0.105"]
"ml-tooling/opyrator" ["l"="25.453,34.106"]
"maiot-io/zenml" ["l"="25.452,34.149"]
"ebhy/budgetml" ["l"="25.429,34.126"]
"salesforce/Merlion" ["l"="22.519,35.991"]
"deepset-ai/haystack" ["l"="29.634,32.485"]
"facebookresearch/Kats" ["l"="22.493,35.982"]
"facebookresearch/AugLy" ["l"="34.32,35.896"]
"ml-tooling/ml-workspace" ["l"="25.344,34.098"]
"orchest/orchest" ["l"="25.487,34.162"]
"ourownstory/neural_prophet" ["l"="22.485,36.001"]
"Kaggle/kaggle-api" ["l"="25.386,33.792"]
"Kaggle/docker-python" ["l"="25.35,33.722"]
"dunovank/jupyter-themes" ["l"="21.379,28.918"]
"jupyterlab/jupyterlab" ["l"="23.13,4.648"]
"ipython-contrib/jupyter_contrib_nbextensions" ["l"="21.329,28.824"]
"autonomio/talos" ["l"="25.638,33.852"]
"dvgodoy/deepreplay" ["l"="25.764,33.778"]
"philipperemy/keract" ["l"="25.742,33.796"]
"pfnet/optuna" ["l"="25.645,31.904"]
"adafruit/Adafruit-Fingerprint-Sensor-Library" ["l"="25.959,34.49"]
"brianrho/FPM" ["l"="25.896,34.422"]
"bastianraschke/pyfingerprint" ["l"="25.95,34.469"]
"sparkfun/Fingerprint_Scanner-TTL" ["l"="25.995,34.52"]
"hanifizzudinrahman/Module-Fingerprint-DY50-FPM10A" ["l"="25.968,34.515"]
"adafruit/Adafruit_CircuitPython_Fingerprint" ["l"="25.98,34.484"]
"adafruit/Adafruit-PN532" ["l"="-11.372,-38.321"]
"pytorch/botorch" ["l"="25.547,33.63"]
"SheffieldML/GPyOpt" ["l"="25.595,33.619"]
"keplr-io/quiver" ["l"="25.77,33.733"]
"yosinski/deep-visualization-toolbox" ["l"="34.17,35.228"]
"fchollet/keras-resources" ["l"="23.44,31.02"]
"jacobgil/keras-grad-cam" ["l"="28.691,34.933"]
"XifengGuo/CapsNet-Keras" ["l"="30.999,32.939"]
"fchollet/deep-learning-models" ["l"="34.197,35.172"]
"tdeboissiere/DeepLearningImplementations" ["l"="33.813,32.637"]
"InFoCusp/tf_cnnvis" ["l"="34.194,35.102"]
"eriklindernoren/Keras-GAN" ["l"="33.795,32.766"]
"yhenon/keras-frcnn" ["l"="34.348,35.069"]
"sicara/tf-explain" ["l"="28.786,34.95"]
"leriomaggio/deep-learning-keras-tensorflow" ["l"="23.456,31.037"]
"rushter/heamy" ["l"="22.768,37.479"]
"scikit-learn-contrib/scikit-learn-contrib" ["l"="25.74,33.872"]
"aksnzhy/xlearn" ["l"="22.788,37.244"]
"kaz-Anova/StackNet" ["l"="22.765,37.443"]
"geffy/tffm" ["l"="22.845,37.276"]
"flennerhag/mlens" ["l"="25.67,33.852"]
"Deci-AI/super-gradients" ["l"="25.299,34.491"]
"I-H8-YOU/ABAP-Basic" ["l"="25.286,34.473"]
"beeyev/thumbor-s3-docker" ["l"="25.266,34.5"]
"drewlong/gophish-ruby" ["l"="25.295,34.478"]
"dvemon/data-ptr-comm" ["l"="25.277,34.49"]
"DecentraWorldDEWO/Documentation" ["l"="25.259,34.512"]
"Etelis/Fortuna-FUD-Crypter" ["l"="25.306,34.505"]
"devforth/hothost" ["l"="25.282,34.484"]
"bloodbath-io/bloodbath-ruby" ["l"="25.287,34.453"]
"xMythic/Rust-recoil-macro-AK-" ["l"="25.302,34.455"]
"DecentraWorldDEWO/DeMix_Subgraph" ["l"="25.253,34.495"]
"Infinity-Tech-inc/nifi-json-processor-bundle" ["l"="25.277,34.449"]
"ForetagInc/alchemy" ["l"="25.293,34.458"]
"coderitual/xna.js" ["l"="25.297,34.447"]
"helloh2o/lucky" ["l"="25.287,34.443"]
"newlc/SwiftKeychainWrapper" ["l"="25.281,34.534"]
"ploomber/ploomber" ["l"="25.441,34.185"]
"cleanlab/cleanlab" ["l"="25.524,34.193"]
"jrieke/traingenerator" ["l"="25.529,34.123"]
"jrieke/best-of-streamlit" ["l"="22.954,32.091"]
"MarcSkovMadsen/awesome-streamlit" ["l"="22.966,32.069"]
"mrdbourke/cs329s-ml-deployment-tutorial" ["l"="23.864,30.355"]
"abhishekkrthakur/colabcode" ["l"="23.796,30.311"]
"jrieke/awesome-machine-learning-startups-berlin" ["l"="25.651,34.171"]
"activeloopai/Hub" ["l"="25.27,34.195"]
"facebookresearch/svoice" ["l"="2.477,39.139"]
"ddangelov/Top2Vec" ["l"="29.58,32.566"]
"deepmind/trfl" ["l"="25.08,35.901"]
"google/dopamine" ["l"="25.013,35.966"]
"facebookresearch/Horizon" ["l"="25.101,35.879"]
"deepmind/graph_nets" ["l"="21.74,38.632"]
"annoviko/pyclustering" ["l"="25.654,33.813"]
"mynameisfiber/pyxmeans" ["l"="25.738,33.758"]
"jundongl/scikit-feature" ["l"="25.694,33.833"]
"nicodv/kmodes" ["l"="25.639,33.872"]
"elki-project/elki" ["l"="22.926,35.269"]
"MaxHalford/prince" ["l"="25.729,33.916"]
"rtavenar/tslearn" ["l"="22.382,36.11"]
"wannesm/dtaidistance" ["l"="22.38,36.131"]
"GiulioRossetti/cdlib" ["l"="21.971,38.848"]
"pierre-rouanet/dtw" ["l"="22.36,36.12"]
"scikit-learn-contrib/metric-learn" ["l"="25.719,33.936"]
"deepcharles/ruptures" ["l"="22.471,36.113"]
"google/trax" ["l"="30.039,32.448"]
"chiphuyen/machine-learning-systems-design" ["l"="23.769,30.552"]
"uber/ludwig" ["l"="25.449,33.966"]
"alirezadir/Production-Level-Deep-Learning" ["l"="23.788,30.575"]
"deepgenerativemodels/notes" ["l"="23.277,33.981"]
"krasserm/bayesian-machine-learning" ["l"="25.555,33.593"]
"williamFalcon/DeepRLHacks" ["l"="25.01,35.879"]
"mila-udem/welcome_tutorials" ["l"="30.137,32.518"]
"dustinvtran/ml-videos" ["l"="25.55,33.559"]
"altosaar/variational-autoencoder" ["l"="25.008,32.68"]
"thu-ml/zhusuan" ["l"="25.424,33.57"]
"shenweichen/DeepCTR" ["l"="22.73,37.113"]
"facebook/prophet" ["l"="25.279,33.861"]
"microsoft/recommenders" ["l"="22.837,37.109"]
"lanpa/tensorboardX" ["l"="34.185,35.59"]
"onnx/onnx" ["l"="34.214,35.502"]
"facebookresearch/visdom" ["l"="34.137,35.481"]
"parrt/dtreeviz" ["l"="25.623,33.948"]
"csinva/imodels" ["l"="25.707,34.045"]
"tkrabel/bamboolib" ["l"="25.539,34.006"]
"ydataai/pandas-profiling" ["l"="25.551,34.095"]
"bluenote10/tabloo" ["l"="24.521,5.847"]
"mito-ds/monorepo" ["l"="34.651,-28.473"]
"holoviz/panel" ["l"="20.099,27.623"]
"akanz1/klib" ["l"="25.693,33.994"]
"voila-dashboards/voila" ["l"="21.239,28.84"]
"nicolaskruchten/jupyter_pivottablejs" ["l"="21.449,28.883"]
"holoviz/holoviews" ["l"="20.13,27.573"]
"gojek/feast" ["l"="25.414,34.099"]
"spotify/featran" ["l"="9.641,25.144"]
"logicalclocks/hopsworks" ["l"="25.294,34.253"]
"mitdbg/modeldb" ["l"="25.455,34.061"]
"kubeflow/kfserving" ["l"="25.319,34.179"]
"lyft/flyte" ["l"="25.37,34.103"]
"uber/manifold" ["l"="25.521,34.034"]
"kubeflow/fairing" ["l"="25.319,34.199"]
"polyaxon/polyaxon" ["l"="25.346,34.076"]
"ucbrise/clipper" ["l"="25.401,34.049"]
"combust/mleap" ["l"="11.031,24.021"]
"AnthonyBradford/optionmatrix" ["l"="24.839,34.417"]
"yzoz/python-option-calculator" ["l"="24.816,34.434"]
"ChiragJhawar/ProjectReward" ["l"="24.814,34.417"]
"Options-Visualizer/Options-Visualizer.github.io" ["l"="24.78,34.411"]
"ApurvShah007/portfolio-optimizer" ["l"="24.782,34.43"]
"ApurvShah007/Tilt-Bot-RC-Car" ["l"="24.792,34.422"]
"ApurvShah007/Algorithmic_trading" ["l"="24.795,34.434"]
"bentoml/Yatai" ["l"="25.195,34.204"]
"pytorch/serve" ["l"="25.291,34.17"]
"catboost/tutorials" ["l"="25.695,33.853"]
"microsoft/SynapseML" ["l"="25.578,34.087"]
"linkedin/feathr" ["l"="21.999,27.657"]
"JohnSnowLabs/spark-nlp" ["l"="29.627,32.567"]
"Azure/azureml-examples" ["l"="-12.847,-44.05"]
"Azure/mlops-v2" ["l"="-12.824,-44.034"]
"Azure-Samples/Synapse" ["l"="-12.895,-44.127"]
"zenml-io/zenbytes" ["l"="25.41,34.504"]
"allegroai/clearml" ["l"="25.353,34.171"]
"dstackai/dstack" ["l"="25.495,34.243"]
"aimhubio/aim" ["l"="25.402,34.165"]
"mlrun/mlrun" ["l"="25.386,34.257"]
"facebookresearch/hiplot" ["l"="25.512,33.989"]
"PAIR-code/what-if-tool" ["l"="25.685,34.067"]
"mosaicml/composer" ["l"="34.285,35.974"]
"MaartenGr/BERTopic" ["l"="29.595,32.542"]
"NielsRogge/Transformers-Tutorials" ["l"="23.726,30.283"]
"google-research/tuning_playbook" ["l"="27.335,30.792"]
"gradio-app/gradio" ["l"="27.271,30.741"]
"heartexlabs/label-studio" ["l"="34.418,35.533"]
"nebuly-ai/nebullvm" ["l"="27.342,31.047"]
"samus/mongodb-csharp" ["l"="24.895,35.049"]
"atheken/NoRM" ["l"="24.87,35.056"]
"mongodb/mongo-csharp-driver" ["l"="25.78,18.073"]
"freshlogic/MongoDB.Web" ["l"="24.903,35.001"]
"enyim/EnyimMemcached" ["l"="25.872,18.108"]
"appharbor/AppHarbor.Web.Security" ["l"="24.905,16.598"]
"craiggwilson/fluent-mongo" ["l"="24.877,35.031"]
"geffzhang/opendotnet" ["l"="22.901,19.394"]
"jphall663/GWU_data_mining" ["l"="25.88,33.977"]
"oracle/Skater" ["l"="25.785,33.985"]
"interpretml/interpret-community" ["l"="25.808,34.061"]
"SauceCat/PDPbox" ["l"="25.752,33.948"]
"h2oai/h2o-meetups" ["l"="11.139,24.294"]
"interpretml/DiCE" ["l"="25.765,34.055"]
"h2oai/awesome-h2o" ["l"="11.122,24.348"]
"andosa/treeinterpreter" ["l"="25.768,33.927"]
"oracle/graphpipe" ["l"="25.567,34.046"]
"yahoo/TensorFlowOnSpark" ["l"="11.133,23.94"]
"iterative/terraform-provider-iterative" ["l"="25.508,34.318"]
"unionai-oss/pandera" ["l"="25.527,34.224"]
"LineaLabs/lineapy" ["l"="25.507,34.216"]
"DataTalksClub/project-of-the-week" ["l"="13.12,24.042"]
"fuzzylabs/awesome-open-mlops" ["l"="25.468,34.359"]
"skops-dev/skops" ["l"="25.706,34.23"]
"operatorai/modelstore" ["l"="25.471,34.321"]
"rwightman/pytorch-image-models" ["l"="34.304,35.711"]
"open-mmlab/mmdetection" ["l"="34.286,35.537"]
"NVIDIA/apex" ["l"="34.265,35.634"]
"facebookresearch/detectron2" ["l"="34.249,35.548"]
"NVIDIA/TensorRT" ["l"="34.329,35.568"]
"facebookresearch/Detectron" ["l"="34.121,35.392"]
"deepmind/sonnet" ["l"="24.865,35.774"]
"pytorch/examples" ["l"="34.032,35.559"]
"lengstrom/fast-style-transfer" ["l"="33.565,32.515"]
"junyanz/pytorch-CycleGAN-and-pix2pix" ["l"="33.69,32.789"]
"tensorflow/magenta" ["l"="33.66,32.394"]
"matterport/Mask_RCNN" ["l"="34.179,35.346"]
"google/model_search" ["l"="25.43,34.054"]
"PAIR-code/lit" ["l"="29.643,32.514"]
"Microsoft/DMTK" ["l"="26.987,33.948"]
"guestwalk/libffm" ["l"="22.791,37.311"]
"ChenglongChen/Kaggle_CrowdFlower" ["l"="22.718,37.377"]
"songrotek/Deep-Learning-Papers-Reading-Roadmap" ["l"="23.49,31.046"]
"srendle/libfm" ["l"="22.829,37.265"]
"duxuhao/Feature-Selection" ["l"="25.774,33.835"]
"Yimeng-Zhang/feature-engineering-and-feature-selection" ["l"="25.744,33.856"]
"ShichenXie/scorecardpy" ["l"="10.802,21.195"]
"unionai-oss/unionml" ["l"="25.421,34.293"]
"DAGWorks-Inc/hamilton" ["l"="34.711,-28.387"]
"ipyflow/ipyflow" ["l"="34.806,-28.219"]
"pydantic/pydantic-core" ["l"="23.122,3.494"]
"pydantic/pydantic" ["l"="23.069,3.679"]
"vizzuhq/ipyvizzu" ["l"="25.58,34.174"]
"humblepenguinn/envio" ["l"="34.746,-28.291"]
"dosisod/refurb" ["l"="23.269,3.757"]
"comet-ml/kangas" ["l"="34.78,-28.242"]
"feature-engine/feature_engine" ["l"="25.678,34.037"]
"irmen/Pyro4" ["l"="24.806,33.556"]
"irmen/Pyro5" ["l"="24.764,33.53"]
"tomerfiliba/rpyc" ["l"="24.626,33.508"]
"studio-ousia/mprpc" ["l"="24.676,33.425"]
"cloudpipe/cloudpickle" ["l"="25.101,33.697"]
"irmen/Pyrolite" ["l"="24.76,33.561"]
"irmen/Serpent" ["l"="24.796,33.531"]
"quantumblacklabs/kedro-viz" ["l"="25.089,34.031"]
"dnouri/skorch" ["l"="25.512,33.671"]
"lanpa/tensorboard-pytorch" ["l"="34.262,35.363"]
"pytorch/ignite" ["l"="34.197,35.641"]
"pytorch/tnt" ["l"="34.234,35.473"]
"ncullen93/torchsample" ["l"="34.206,35.464"]
"spro/practical-pytorch" ["l"="30.067,32.568"]
"probtorch/probtorch" ["l"="25.405,33.587"]
"PetrochukM/PyTorch-NLP" ["l"="29.967,32.598"]
"timomernick/pytorch-capsule" ["l"="31.051,32.939"]
"salesforce/matchbox" ["l"="30.09,32.43"]
"salesforce/pytorch-qrnn" ["l"="30.115,32.482"]
"zeyiwen/thundersvm" ["l"="25.608,33.712"]
"google/tangent" ["l"="25.389,33.627"]
"facebookresearch/ParlAI" ["l"="30.032,32.573"]
"uqfoundation/pathos" ["l"="25.235,33.595"]
"uqfoundation/multiprocess" ["l"="25.156,33.587"]
"uqfoundation/dill" ["l"="25.198,33.62"]
"uqfoundation/mystic" ["l"="25.224,33.571"]
"swansonk14/p_tqdm" ["l"="25.186,33.553"]
"soravux/scoop" ["l"="25.299,33.606"]
"joblib/joblib" ["l"="23.089,4.423"]
"uqfoundation/pyina" ["l"="25.212,33.549"]
"ipython-contrib/IPython-notebook-extensions" ["l"="21.571,28.804"]
"pydata/sparse" ["l"="21.869,28.564"]
"uqfoundation/ppft" ["l"="25.192,33.577"]
"pydata/numexpr" ["l"="21.698,28.738"]
"stan-dev/pystan" ["l"="23.815,33.831"]
"dfm/george" ["l"="16.962,36.672"]
"Blosc/bcolz" ["l"="21.663,28.876"]
"facebookresearch/hydra" ["l"="34.182,35.879"]
"explosion/spaCy" ["l"="29.888,32.736"]
"zillow/luminaire" ["l"="22.516,36.067"]
"rtqichen/torchdiffeq" ["l"="23.281,33.842"]
"facebook/Ax" ["l"="25.473,33.689"]
"google/neural-tangents" ["l"="23.427,33.808"]
"JavierAntoran/Bayesian-Neural-Networks" ["l"="23.972,34.599"]
"Trusted-AI/AIX360" ["l"="25.756,34.045"]
"marcotcr/anchor" ["l"="25.76,33.975"]
"ModelOriented/DALEX" ["l"="25.776,34.038"]
"kubeflow/tf-operator" ["l"="-9.398,2.745"]
"kubeflow-kale/kale" ["l"="25.348,34.23"]
"kubeflow/mpi-operator" ["l"="-9.407,2.789"]
"kubeflow/examples" ["l"="-6.044,-0.576"]
"kubeflow/manifests" ["l"="25.31,34.231"]
"sql-machine-learning/elasticdl" ["l"="-9.393,2.872"]
"kubernetes-sigs/kube-batch" ["l"="-9.455,2.694"]
"kubeflow/pytorch-operator" ["l"="-9.342,2.76"]
"nalepae/pandarallel" ["l"="25.424,33.909"]
"pandera-dev/pandera" ["l"="25.487,34.077"]
"IDSIA/sacred" ["l"="25.315,33.896"]
"kedro-org/kedro-viz" ["l"="25.227,34.216"]
"kedro-org/kedro" ["l"="25.404,34.193"]
"tokern/data-lineage" ["l"="13.868,23.754"]
"kedro-org/kedro-community" ["l"="25.152,34.25"]
"kedro-org/kedro-plugins" ["l"="25.1,34.148"]
"kserve/kserve" ["l"="25.33,34.219"]
"google/ml-metadata" ["l"="25.43,34.203"]
"ncullen93/pyBN" ["l"="25.352,33.453"]
"hannes-brt/hebel" ["l"="27.187,34.043"]
"yhat/ggplot" ["l"="21.672,28.804"]
"danielkorzekwa/bayes-scala" ["l"="9.542,24.71"]
"piskvorky/gensim" ["l"="27.115,34.08"]
"mit-probabilistic-computing-project/BayesDB" ["l"="21.876,28.794"]
"ogrisel/parallel_ml_tutorial" ["l"="23.213,30.729"]
"jakevdp/mpld3" ["l"="21.644,28.797"]
"larsmans/seqlearn" ["l"="25.445,33.473"]
"cookiecutter/cookiecutter" ["l"="23.216,3.938"]
"tensorflow/tfx-addons" ["l"="25.468,34.245"]
"VowpalWabbit/vowpal_wabbit" ["l"="25.481,33.908"]
"david-cortes/contextualbandits" ["l"="24.014,36.392"]
"lyst/lightfm" ["l"="22.91,37.179"]
"modAL-python/modAL" ["l"="35.608,36.693"]
"jbrownlee/Datasets" ["l"="25.741,34.283"]
"keras-team/keras-preprocessing" ["l"="25.717,34.21"]
"justmarkham/scikit-learn-tips" ["l"="23.432,30.534"]
"tirthajyoti/Deep-learning-with-Python" ["l"="23.333,30.53"]
"tirthajyoti/Machine-Learning-with-Python" ["l"="23.443,30.577"]
"INRIA/scikit-learn-mooc" ["l"="23.757,30.349"]
"PacktPublishing/Practical-Time-Series-Analysis" ["l"="22.538,35.91"]
"amanjeetsahu/Natural-Language-Processing-Specialization" ["l"="24.178,32.462"]
"PracticalTimeSeriesAnalysis/BookRepo" ["l"="22.559,35.923"]
"enggen/Deep-Learning-Coursera" ["l"="24.028,32.541"]
"https-deeplearning-ai/tensorflow-1-public" ["l"="24.24,32.514"]
"ijelliti/Deeplearning.ai-Natural-Language-Processing-Specialization" ["l"="24.182,32.485"]
"PacktPublishing/Hands-on-Exploratory-Data-Analysis-with-Python" ["l"="22.007,30.102"]
"https-deeplearning-ai/tensorflow-2-public" ["l"="24.282,32.508"]
"datamllab/awesome-fairness-in-ai" ["l"="25.935,34.138"]
"yongkaiwu/FairAI" ["l"="26.003,34.16"]
"uclanlp/awesome-fairness-papers" ["l"="26.023,34.174"]
"mbilalzafar/fair-classification" ["l"="25.881,34.092"]
"Trusted-AI/AIF360" ["l"="25.8,34.095"]
"princetonvisualai/DomainBiasMitigation" ["l"="34.971,33.165"]
"AutoViML/featurewiz" ["l"="25.726,33.994"]
"AutoViML/Auto_ViML" ["l"="25.685,34.007"]
"christophM/rulefit" ["l"="25.776,33.962"]
"predict-idlab/tsflex" ["l"="22.483,36.1"]
"kearnz/autoimpute" ["l"="25.777,33.948"]
"aerdem4/lofo-importance" ["l"="25.744,33.988"]
"tr8dr/tseries-patterns" ["l"="22.627,36.12"]
"MaxHalford/xam" ["l"="25.752,33.885"]
"MaxHalford/kaggle-recruit-restaurant" ["l"="22.433,35.8"]
"Laurae2/Laurae" ["l"="26.006,33.7"]
"xiaozhouwang/kaggle-porto-seguro" ["l"="22.705,37.41"]
"jfpuget/LibFM_in_Keras" ["l"="22.684,37.43"]
"sjvasquez/web-traffic-forecasting" ["l"="22.397,35.833"]
"scikit-learn-contrib/stability-selection" ["l"="25.768,33.882"]
"trevismd/statannotations" ["l"="26.002,33.95"]
"webermarcolivier/statannot" ["l"="25.955,33.95"]
"jnothman/UpSetPlot" ["l"="21.331,43.814"]
"DingWB/PyComplexHeatmap" ["l"="26.073,33.948"]
"pog87/PtitPrince" ["l"="20.009,43.357"]
"raphaelvallat/pingouin" ["l"="25.839,33.958"]
"tensorflow/agents" ["l"="25.083,35.926"]
"surfcodes/surf" ["l"="24.973,34.351"]
"facebookresearch/vissl" ["l"="34.44,35.967"]
"kornia/kornia" ["l"="34.296,35.808"]
"robi56/awesome-bayesian-deep-learning" ["l"="24.043,34.631"]
"thu-ml/tianshou" ["l"="25.179,36.036"]
"andrewgordonwilson/bayesgan" ["l"="25.373,33.55"]
"martinarjovsky/WassersteinGAN" ["l"="33.712,32.647"]
"kumar-shridhar/PyTorch-BayesianCNN" ["l"="23.987,34.58"]
"igul222/improved_wgan_training" ["l"="33.69,32.656"]
"kyle-dorman/bayesian-neural-network-blogpost" ["l"="24.011,34.618"]
"dennisbakhuis/pigeonXT" ["l"="25.847,34.212"]
"agermanidis/pigeon" ["l"="25.789,34.16"]
"ideonate/jupyter-innotater" ["l"="25.868,34.23"]
"IBM/lale" ["l"="25.908,33.924"]
"IBM/AIX360" ["l"="25.786,34.002"]
"IBM/yaps" ["l"="25.976,33.906"]
"ealcobaca/pymfe" ["l"="25.912,33.809"]
"Kulbear/deep-learning-coursera" ["l"="24.01,32.513"]
"mbadry1/DeepLearning.ai-Summary" ["l"="24.041,32.581"]
"ageron/handson-ml2" ["l"="23.626,30.736"]
"udacity/deep-learning-v2-pytorch" ["l"="23.769,30.84"]
"fastai/course-v3" ["l"="23.724,30.79"]
"GoogleCloudPlatform/training-data-analyst" ["l"="-7.444,-0.722"]
"aamini/introtodeeplearning" ["l"="23.67,30.619"]
"fastai/fastbook" ["l"="23.712,30.694"]
"openml/OpenML" ["l"="25.848,33.614"]
"openml/openml-python" ["l"="25.863,33.64"]
"openml/automlbenchmark" ["l"="25.818,33.693"]
"openml/r" ["l"="26.006,33.563"]
"openml/openml-r" ["l"="25.901,33.581"]
"automl/RoBO" ["l"="25.663,33.616"]
"openml/openml.org" ["l"="25.879,33.591"]
"automl/ConfigSpace" ["l"="25.726,33.621"]
"awslabs/mxnet-model-server" ["l"="33.079,35.697"]
"HazyResearch/snorkel" ["l"="29.899,32.65"]
"datascienceinc/Skater" ["l"="25.675,33.886"]
"amplab/keystone" ["l"="11.227,24.137"]
"uber/petastorm" ["l"="25.306,34.101"]
"allegroai/clearml-server" ["l"="25.25,34.325"]
"guildai/guildai" ["l"="25.31,34.134"]
"ibis-project/ibis" ["l"="-10.728,5.396"]
"nbQA-dev/nbQA" ["l"="21.247,28.906"]
"ericmjl/pyjanitor" ["l"="21.135,28.848"]
"HypothesisWorks/hypothesis" ["l"="23.077,3.79"]
"rahuljoshi44/GraphVega" ["l"="24.887,34.388"]
"nodejs/undici" ["l"="-10.511,-3.821"]
"Bugswriter/tuxi" ["l"="-9.282,-20.187"]
"mitmath/18S191" ["l"="17.119,39.078"]
"globalaihub/introduction-to-python" ["l"="25.734,36.899"]
"pavlobu/deskreen" ["l"="32.645,-26.304"]
"conwnet/github1s" ["l"="26.85,-25.944"]
"Snowtrack/SnowFS" ["l"="-12.275,27.426"]
"stypr/clubhouse-py" ["l"="-27.392,-19.04"]
"deepfence/SecretScanner" ["l"="24.692,34.504"]
"elixir-nx/nx" ["l"="34.708,-26.817"]
"JonnyBurger/remotion" ["l"="26.233,-25.852"]
"BlackOtton/RedStar-Media" ["l"="24.913,34.404"]
"sickcodes/osx-serial-generator" ["l"="-31.97,-24.876"]
"scikit-multiflow/scikit-multiflow" ["l"="25.342,34.04"]
"Waikato/moa" ["l"="25.121,34.095"]
"alipsgh/tornado" ["l"="25.06,34.095"]
"hmgomes/AdaptiveRandomForest" ["l"="25.206,34.064"]
"online-ml/awesome-online-machine-learning" ["l"="25.179,34.064"]
"creme-ml/creme" ["l"="25.568,33.985"]
"vitords/HoeffdingTree" ["l"="25.259,34.034"]
"doubleplusplus/incremental_decision_tree-CART-Random_Forest_python" ["l"="25.249,34.044"]
"python-streamz/streamz" ["l"="25.302,33.97"]
"sebp/scikit-survival" ["l"="24.094,33.162"]
"selimfirat/pysad" ["l"="22.902,35.104"]
"sknetwork-team/scikit-network" ["l"="21.934,38.818"]
"mljar/mercury" ["l"="25.517,34.169"]
"aporia-ai/kubesurvival" ["l"="25.457,34.5"]
"aporia-ai/dmatrix2np" ["l"="25.447,34.479"]
"igaloly/vue-preloaders" ["l"="25.447,34.512"]
"aporia-ai/aporia-importer" ["l"="25.471,34.509"]
"aporia-ai/mlops.toys" ["l"="25.46,34.487"]
"facebookresearch/higher" ["l"="23.721,35.458"]
"skorch-dev/skorch" ["l"="34.197,35.741"]
"facebookresearch/pythia" ["l"="29.848,32.531"]
"williamFalcon/pytorch-lightning" ["l"="34.242,35.678"]
"MrNothing/AI-Blocks" ["l"="0.755,40.138"]
"oarriaga/face_classification" ["l"="0.798,40.133"]
"hmmlearn/hmmlearn" ["l"="25.479,33.561"]
"markdregan/Bayesian-Modelling-in-Python" ["l"="23.811,33.894"]
"IBM/claimed" ["l"="25.984,34.709"]
"wchill/HMP_Dataset" ["l"="25.955,34.696"]
"tensorflow/tpu" ["l"="34.423,35.49"]
"zihangdai/xlnet" ["l"="29.925,32.544"]
"zalandoresearch/flair" ["l"="29.856,32.595"]
"facebookresearch/pytext" ["l"="29.887,32.573"]
"pavlov99/json-rpc" ["l"="24.343,33.446"]
"joshmarshall/jsonrpclib" ["l"="24.403,33.444"]
"cenobites/flask-jsonrpc" ["l"="24.356,33.423"]
"bcb/jsonrpcserver" ["l"="24.287,33.443"]
"bcb/jsonrpcclient" ["l"="24.307,33.442"]
"mbr/tinyrpc" ["l"="24.312,33.47"]
"niligulmohar/python-symmetric-jsonrpc" ["l"="24.37,33.453"]
"mattjj/autodidact" ["l"="23.482,33.785"]
"google/flax" ["l"="23.509,33.746"]
"cvxgrp/cvxpy" ["l"="27.91,42.021"]
"anguyen8/XAI-papers" ["l"="25.833,34.014"]
"srebuffi/revisiting_saliency" ["l"="28.2,32.681"]
"facebookresearch/TorchRay" ["l"="28.745,34.926"]
"anguyen8/sam" ["l"="28.183,32.681"]
"samzabdiel/XAI" ["l"="25.876,34.03"]
"cfchen-duke/ProtoPNet" ["l"="28.718,35.064"]
"marcoancona/DeepExplain" ["l"="28.83,34.974"]
"zqs1022/interpretableCNN" ["l"="28.692,35.043"]
"davidbau/dissect" ["l"="28.734,34.989"]
"MadryLab/cox" ["l"="28.185,32.661"]
"btgraham/Batchwise-Dropout" ["l"="28.173,32.667"]
"tensorflow/tcav" ["l"="28.775,34.992"]
"arvkevi/kneed" ["l"="25.788,33.932"]
"lmcinnes/pynndescent" ["l"="28.616,31.398"]
"theislab/anndata" ["l"="21.244,43.984"]
"Marcnuth/AnomalyDetection" ["l"="22.923,35.162"]
"theislab/scanpy" ["l"="21.281,44.019"]
"scverse/muon" ["l"="25.93,33.906"]
"jupyter-naas/awesome-notebooks" ["l"="23.571,30.292"]
"mljar/bloxs" ["l"="21.033,29.008"]
"fastai/nbdev" ["l"="21.234,28.781"]
"vivekratnavel/omniboard" ["l"="25.219,34.008"]
"chovanecm/sacredboard" ["l"="25.182,33.977"]
"allegroai/trains" ["l"="25.623,36.954"]
"google/gin-config" ["l"="23.566,33.716"]
"pymc-devs/pymc4" ["l"="23.689,33.858"]
"arviz-devs/arviz" ["l"="23.708,33.835"]
"stan-dev/stan" ["l"="23.871,33.831"]
"andreysharapov/xaience" ["l"="25.899,33.977"]
"hbaniecki/adversarial-explainable-ai" ["l"="25.867,34.003"]
"albermax/innvestigate" ["l"="28.838,34.952"]
"chrispaulca/waterfall" ["l"="25.968,33.875"]
"jmcarpenter2/parfit" ["l"="26.026,33.862"]
"santosjorge/cufflinks" ["l"="25.406,33.884"]
"plotly/plotly.py" ["l"="23.176,4.62"]
"quantopian/pyfolio" ["l"="21.749,32.741"]
"plotly/plotly_express" ["l"="20.583,28.768"]
"bukosabino/ta" ["l"="21.776,32.705"]
"quantopian/alphalens" ["l"="21.769,32.75"]
"alegonz/baikal" ["l"="25.637,33.926"]
"dabl/dabl" ["l"="25.643,33.796"]
"sepandhaghighi/pycm" ["l"="21.904,1.832"]
"dovpanda-dev/dovpanda" ["l"="21.124,29.126"]
"TDAmeritrade/stumpy" ["l"="22.465,36.059"]
"jmschrei/apricot" ["l"="25.665,34.078"]
"deepfence/ThreatMapper" ["l"="24.614,34.527"]
"deepfence/YaraHunter" ["l"="24.648,34.513"]
"deepfence/PacketStreamer" ["l"="24.668,34.539"]
"deepfence/FlowMeter" ["l"="24.641,34.545"]
"aquasecurity/cloudsploit" ["l"="-8.713,-1.376"]
"anchore/grype" ["l"="-9.295,0.409"]
"bridgecrewio/checkov" ["l"="-8.65,-1.204"]
"aquasecurity/trivy" ["l"="-10.464,0.111"]
"bambinos/bambi" ["l"="23.709,33.851"]
"maximtrp/scikit-posthocs" ["l"="25.974,33.938"]
"raphaelvallat/yasa" ["l"="28.534,37.39"]
"bashtage/linearmodels" ["l"="21.772,32.828"]
"lukelbd/proplot" ["l"="18.843,28.176"]
"ejolly/pymer4" ["l"="25.998,33.924"]
"sbebo/joypy" ["l"="19.873,28.422"]
"alkaline-ml/pmdarima" ["l"="22.52,36.045"]
"pgiri/dispy" ["l"="25.195,33.501"]
"pgiri/asyncoro" ["l"="25.166,33.464"]
"pgiri/pycos" ["l"="25.156,33.479"]
"dustinvtran/latex-templates" ["l"="7.184,9.12"]
"sshkhr/awesome-mlss" ["l"="23.912,30.525"]
"yandexdataschool/Practical_RL" ["l"="25.014,36.035"]
"dennybritz/deeplearning-papernotes" ["l"="23.38,31.006"]
"sbrugman/deep-learning-papers" ["l"="23.342,31.024"]
"joanbruna/stat212b" ["l"="27.139,34.224"]
"aleju/papers" ["l"="23.29,31.003"]
"zackchase/mxnet-the-straight-dope" ["l"="34.123,35.207"]
"NVIDIA/vid2vid" ["l"="33.639,32.847"]
"msgpack-rpc/msgpack-rpc-python" ["l"="24.622,33.387"]
"studio-ousia/gsocketpool" ["l"="24.649,33.367"]
"huggingface/diffusers" ["l"="27.252,30.798"]
"neuml/txtai" ["l"="29.584,32.482"]
"bloomberg/memray" ["l"="23.247,3.899"]
"lucidrains/imagen-pytorch" ["l"="34.341,28.925"]
"awslabs/adatune" ["l"="25.853,33.316"]
"lucfra/FAR-HO" ["l"="25.826,33.355"]
"gbaydin/hypergradient-descent" ["l"="25.88,33.281"]
"lucfra/RFHO" ["l"="25.843,33.335"]
"prolearner/hyper-representation" ["l"="25.821,33.329"]
"fabianp/hoag" ["l"="25.849,33.281"]
"automl/BOAH" ["l"="25.733,33.546"]
"EthicalML/awesome-machine-learning-operations" ["l"="25.631,34.033"]
"pbiecek/DALEX" ["l"="25.939,34.026"]
"d6t/d6tflow" ["l"="25.369,33.944"]
"Hydrospheredata/hydro-serving" ["l"="13.997,23.649"]
"EthicalML/explainability-and-bias" ["l"="25.639,33.995"]
"khaxis/plynx" ["l"="33.618,34.351"]
"datmo/datmo" ["l"="25.528,34.089"]
"visenger/mlops-references" ["l"="25.579,34.21"]
"BinChengZhao/delicate" ["l"="25.259,34.433"]
"BinChengZhao/delay-timer" ["l"="25.303,34.417"]
"NasirMalik/Eris" ["l"="25.281,34.427"]
"vahid-sohrabloo/chconn" ["l"="25.299,34.438"]
"oslabs-beta/Kompass" ["l"="25.285,34.419"]
"dmamontov/hass-miwifi" ["l"="25.289,34.435"]
"Princeton-SysML/GradAttack" ["l"="25.295,34.426"]
"anonrig/url-js" ["l"="25.311,34.443"]
"Groestlcoin/electrum-grs" ["l"="25.278,34.458"]
"GoMinerProxy/GoMinerProxy" ["l"="25.311,34.43"]
"trevorstephens/gplearn" ["l"="25.595,33.737"]
"DEAP/deap" ["l"="25.473,33.727"]
"rsteca/sklearn-deap" ["l"="25.635,33.758"]
"MilesCranmer/PySR" ["l"="22.645,34.253"]
"ShuhuaGao/geppy" ["l"="25.701,33.664"]
"msu-coinlab/pymoo" ["l"="24.89,38.318"]
"kstaats/karoo_gp" ["l"="25.685,33.674"]
"aigamedev/scikit-neuralnetwork" ["l"="27.127,34.12"]
"SJ001/AI-Feynman" ["l"="22.616,34.246"]
"uqfoundation/klepto" ["l"="25.159,33.568"]
"jsonpickle/jsonpickle" ["l"="22.683,3.783"]
"pythonprofilers/memory_profiler" ["l"="23.055,3.83"]
"mrocklin/multipledispatch" ["l"="23.102,3.866"]
"pytoolz/toolz" ["l"="22.901,3.941"]
"tkem/cachetools" ["l"="22.905,3.683"]
"onelivesleft/PrettyErrors" ["l"="23.202,3.965"]
"emeryberger/scalene" ["l"="23.189,3.866"]
"omry/omegaconf" ["l"="34.244,35.905"]
"microsoft/tensorwatch" ["l"="34.19,35.667"]
"keras-team/keras-applications" ["l"="34.298,35.258"]
"qubvel/efficientnet" ["l"="34.418,35.442"]
"csxeba/evolute" ["l"="25.611,34.05"]
"oracle/graphpipe-go" ["l"="25.624,34.102"]
"MagNet-DL/magnet" ["l"="25.586,34"]
"oracle/graphpipe-py" ["l"="25.622,34.09"]
"oracle/graphpipe-tf-py" ["l"="25.606,34.09"]
"mlperf/reference" ["l"="27.771,35.267"]
"tobegit3hub/simple_tensorflow_serving" ["l"="22.63,37.219"]
"NVIDIA/tensorrt-inference-server" ["l"="29.963,38.244"]
"pymc-devs/resources" ["l"="23.76,33.842"]
"CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers" ["l"="23.309,30.863"]
"alibaba/x-deeplearning" ["l"="22.682,37.143"]
"triton-inference-server/server" ["l"="34.432,35.603"]
"bytedance/byteps" ["l"="22.578,37.111"]
"hanxiao/bert-as-service" ["l"="29.94,32.577"]
"ShangtongZhang/reinforcement-learning-an-introduction" ["l"="25.026,36.063"]
"NethermindEth/warp" ["l"="25.251,34.453"]
"cniperbot/sniperbot" ["l"="25.274,34.44"]
"artdothaus/wordpress-nft-plugin" ["l"="-10.649,-3.79"]
"FaceOnLive/Mask-Aware-Face-Recognition-SDK-iOS" ["l"="-10.644,-3.784"]
"mattmattox/Kubernetes-Master-Class" ["l"="-10.564,-3.782"]
"dask/fastparquet" ["l"="25.16,33.823"]
"jcrobak/parquet-python" ["l"="25.089,33.815"]
"d6t/d6tpipe" ["l"="25.233,33.888"]
"apache/parquet-cpp" ["l"="11.295,23.847"]
"blue-yonder/turbodbc" ["l"="25.056,33.785"]
"dask/s3fs" ["l"="25.107,33.777"]
"dask/distributed" ["l"="25.186,33.785"]
"d6t/d6t-python" ["l"="25.22,33.872"]
"toyama0919/ej" ["l"="25.068,33.766"]
"dask/dask-ml" ["l"="25.315,33.768"]
"gpuopenanalytics/pygdf" ["l"="11.79,24.121"]
"martindurant/fastparquet" ["l"="25.119,33.808"]
"jakevdp/altair-transform" ["l"="25.115,33.823"]
"elyra-ai/elyra" ["l"="25.302,34.212"]
"jupyter/enterprise_gateway" ["l"="21.133,28.75"]
"elyra-ai/examples" ["l"="25.23,34.243"]
"jupyterlab/jupyterlab-git" ["l"="21.259,28.92"]
"mauhai/awesome-jupyterlab" ["l"="21.284,28.93"]
"krassowski/jupyterlab-lsp" ["l"="21.23,28.95"]
"jupyterlab/extension-examples" ["l"="21.149,29.005"]
"bnjmn/weka" ["l"="24.834,34.19"]
"Waikato/weka-trunk" ["l"="24.907,34.171"]
"iskandr/fancyimpute" ["l"="25.74,33.899"]
"JosPolfliet/pandas-profiling" ["l"="21.564,28.899"]
"takeshixx/redstar-tools" ["l"="24.893,34.432"]
"geatpy-dev/geatpy" ["l"="24.861,38.311"]
"ahmedfgad/GeneticAlgorithmPython" ["l"="24.832,38.337"]
"PipelineAI/pipeline" ["l"="25.318,34.154"]
"databricks/spark-deep-learning" ["l"="11.126,23.979"]
"data-science-on-aws/workshop" ["l"="-10.454,-1.638"]
"SimonBlanke/Gradient-Free-Optimizers" ["l"="25.792,33.785"]
"SimonBlanke/Hyperactive" ["l"="25.768,33.904"]
"gugarosa/opytimizer" ["l"="24.84,38.15"]
"brendanartley/Regressio" ["l"="25.901,33.723"]
"AnotherSamWilson/miceforest" ["l"="25.816,33.95"]
"andy-landy/traceback_with_variables" ["l"="23.327,3.759"]
"deepmind/tree" ["l"="23.489,33.717"]
"google/evojax" ["l"="25.445,35.763"]
"thoughtspile/grafar" ["l"="25.943,33.717"]
"mattjj/pyhsmm" ["l"="25.465,33.443"]
"tostq/Easy_HMM" ["l"="25.504,33.45"]
"guyz/HMM" ["l"="25.472,33.469"]
"scikit-learn-contrib/scikit-learn-extra" ["l"="25.782,33.915"]
"scikit-learn-contrib/project-template" ["l"="25.905,33.828"]
"scikit-learn-contrib/DESlib" ["l"="25.753,33.916"]
"scikit-learn-contrib/polylearn" ["l"="25.746,33.838"]
"scikit-learn-contrib/py-earth" ["l"="25.806,33.895"]
"scikit-learn-contrib/forest-confidence-interval" ["l"="25.79,33.883"]
"EpistasisLab/scikit-rebate" ["l"="25.758,33.863"]
"shakedzy/dython" ["l"="25.733,33.954"]
"pyjanitor-devs/pyjanitor" ["l"="21.088,28.817"]
"pdpipe/pdpipe" ["l"="21.044,28.813"]
"manuel-calzolari/sklearn-genetic" ["l"="25.768,33.853"]
"romeokienzler/TensorFlow" ["l"="25.955,34.659"]
"IBM/skillsnetwork" ["l"="25.9,34.606"]
"jupyter/jupyter" ["l"="23.367,30.753"]
"romeokienzler/coursera" ["l"="25.992,34.672"]
"IBM/MAX-Object-Detector" ["l"="25.907,34.654"]
"Tanu-N-Prabhu/Python" ["l"="25.447,-20.848"]
"pydata/pandas" ["l"="22.82,4.516"]
"dfm/emcee" ["l"="-2.215,-29.162"]
"msgpack-rpc/msgpack-rpc" ["l"="24.544,33.328"]
"jubatus/jubatus-msgpack-rpc" ["l"="24.521,33.309"]
"msgpack-rpc/msgpack-rpc-cpp" ["l"="24.502,33.292"]
"zygmuntz/hyperband" ["l"="25.657,33.688"]
"tmadl/sklearn-expertsys" ["l"="25.8,33.915"]
"claesenm/optunity" ["l"="25.598,33.64"]
"google/skflow" ["l"="27.14,34.153"]
"automl/SMAC3" ["l"="25.628,33.677"]
"gpstuff-dev/gpstuff" ["l"="25.504,33.327"]
"kyunghyuncho/deepmat" ["l"="26.914,34.066"]
"wengjn/MatlabDBN" ["l"="25.424,33.4"]
"michaelchughes/NPBayesHMM" ["l"="25.422,33.384"]
"cmu-phil/tetrad" ["l"="23.724,33.132"]
"sisl/BayesNets.jl" ["l"="25.404,33.366"]
"jluttine/tikz-bayesnet" ["l"="25.417,33.484"]
"crishoj/OpenPNL" ["l"="25.414,33.409"]
"amidst/toolbox" ["l"="25.372,33.326"]
"IBM/MAX-Object-Detector-Web-App" ["l"="25.912,34.678"]
"thomasp85/lime" ["l"="20.359,43.466"]
"ModelOriented/DrWhy" ["l"="25.895,34.038"]
"MI2DataLab/modelDown" ["l"="26.023,34.046"]
"WinVector/vtreat" ["l"="26.045,34.026"]
"ModelOriented/shapper" ["l"="25.992,34.055"]
"pbiecek/breakDown" ["l"="25.976,33.999"]
"mkearney/textfeatures" ["l"="26.053,34.043"]
"alastairrushworth/inspectdf" ["l"="20.156,43.372"]
"ropensci/drake" ["l"="20.263,43.469"]
"boxuancui/DataExplorer" ["l"="20.24,43.403"]
"koalaverse/vip" ["l"="25.968,34.021"]
"mlr-org/mlr" ["l"="20.308,43.561"]
"clauswilke/ggridges" ["l"="20.148,43.517"]
"webdataset/webdataset" ["l"="31.786,34.83"]
"uber/fiber" ["l"="25.405,34.081"]
"facebookresearch/fairscale" ["l"="27.651,31.057"]
"alfiopuglisi/guietta" ["l"="20.044,2.302"]
"microsoft/pai" ["l"="25.23,34.088"]
"microsoft/hivedscheduler" ["l"="-9.39,2.915"]
"AliyunContainerService/gpushare-scheduler-extender" ["l"="-9.441,2.774"]
"determined-ai/determined" ["l"="25.273,34.134"]
"microsoft/MMdnn" ["l"="34.401,35.466"]
"tkestack/gpu-manager" ["l"="-9.435,2.795"]
"NVIDIA/k8s-device-plugin" ["l"="-9.467,2.779"]
"microsoft/frameworkcontroller" ["l"="25.155,34.098"]
"pytorch/elastic" ["l"="25.238,34.173"]
"pytorch/torchx" ["l"="27.923,35.596"]
"pytorch/tensorpipe" ["l"="27.868,35.498"]
"facebookincubator/gloo" ["l"="27.84,35.376"]
"kubeflow/arena" ["l"="-9.417,2.756"]
"facebookresearch/ClassyVision" ["l"="34.535,35.768"]
"NVIDIA/aistore" ["l"="31.604,34.871"]
"petuum/adaptdl" ["l"="-9.374,2.98"]
"NVIDIA/TRTorch" ["l"="34.522,35.613"]
"graviraja/MLOps-Basics" ["l"="23.751,30.381"]
"microsoft/MLOps" ["l"="-12.864,-44.043"]
"DataTalksClub/mlops-zoomcamp" ["l"="23.652,30.396"]
"fabiocaccamo/python-benedict" ["l"="26.015,1.493"]
"facebookresearch/balance" ["l"="25.721,34.142"]
"sematic-ai/sematic" ["l"="34.686,-28.354"]
"featureform/featureform" ["l"="25.416,34.265"]
"datarevenue-berlin/OpenMLOps" ["l"="25.451,34.302"]
"jacopotagliabue/you-dont-need-a-bigger-boat" ["l"="25.461,34.34"]
"aporia-ai/mlplatform-workshop" ["l"="25.444,34.424"]
"cdfoundation/sig-mlops" ["l"="25.471,34.286"]
"thoughtworks/mlops-platforms" ["l"="25.41,34.329"]
"bodywork-ml/bodywork-core" ["l"="25.487,34.415"]
"jmeisele/ml-ops" ["l"="25.361,34.335"]
"parrt/random-forest-importances" ["l"="25.737,33.935"]
"deel-ai/xplique" ["l"="25.824,34.224"]
"deel-ai/deel-lip" ["l"="25.871,34.294"]
"deel-ai/influenciae" ["l"="25.86,34.278"]
"fel-thomas/Sobol-Attribution-Method" ["l"="25.841,34.266"]
"deel-ai/deel-torchlip" ["l"="25.847,34.254"]
"salesforce/OmniXAI" ["l"="25.78,34.102"]
"SelfExplainML/PiML-Toolbox" ["l"="25.702,34.118"]
"deel-ai/oodeel" ["l"="25.856,34.247"]
"deel-ai/FairSense" ["l"="25.837,34.248"]
"understandable-machine-intelligence-lab/Quantus" ["l"="28.932,34.912"]
"serre-lab/Harmonization" ["l"="25.856,34.263"]
"deel-ai/LARD" ["l"="25.871,34.256"]
"deel-ai/puncc" ["l"="25.844,34.282"]
"paulnovello/HSIC-Attribution-Method" ["l"="25.831,34.255"]
"microsoft/responsible-ai-toolbox" ["l"="25.757,34.098"]
"fairlearn/fairlearn" ["l"="25.768,34.084"]
"thesharp/daemonize" ["l"="24.53,33.471"]
"serverdensity/python-daemon" ["l"="24.565,33.491"]
"ContextLab/hypertools" ["l"="25.567,33.734"]
"ContextLab/hypertools-paper-notebooks" ["l"="25.575,33.696"]
"tyarkoni/pliers" ["l"="28.425,36.99"]
"kkyon/botflow" ["l"="22.815,3.903"]
"gallantlab/pycortex" ["l"="28.389,36.855"]
"tensorflow/mlir" ["l"="27.651,35.492"]
"tensorflow/recommenders-addons" ["l"="16.229,-7.082"]
"tensorflow/benchmarks" ["l"="27.817,35.299"]
"CyberPoint/libpgm" ["l"="25.388,33.462"]
"mblondel/lightning" ["l"="27.141,34.175"]
"clinicalml/structuredinference" ["l"="25.217,32.716"]
"avehtari/BDA_py_demos" ["l"="23.8,33.857"]
"pystruct/pystruct" ["l"="26.913,34.135"]
"RasaHQ/whatlies" ["l"="25.794,34.187"]
"RasaHQ/rasalit" ["l"="30.136,28.09"]
"kevinlu1248/pyate" ["l"="29.821,29.24"]
"koaning/tokenwiser" ["l"="25.843,34.236"]
"uber-research/parallax" ["l"="25.887,34.276"]
"neomatrix369/nlp_profiler" ["l"="24.041,30.591"]
"maxpumperla/elephas" ["l"="11.076,24.001"]
"farizrahman4u/seq2seq" ["l"="31.273,31.598"]
"matthiasplappert/keras-rl" ["l"="24.894,35.902"]
"philipperemy/keras-attention-mechanism" ["l"="31.325,31.567"]
"bstriner/keras-adversarial" ["l"="33.895,32.642"]
"linkedin/FastTreeSHAP" ["l"="25.689,34.139"]
"cerlymarco/tspiral" ["l"="22.563,36.045"]
"loft-br/xgboost-survival-embeddings" ["l"="24.114,33.128"]
"tblume1992/ThymeBoost" ["l"="25.813,34.004"]
"ogrisel/pygbm" ["l"="25.813,33.773"]
"swager/randomForestCI" ["l"="25.883,33.849"]
"Microsoft/samples-for-ai" ["l"="25.966,33.464"]
"Microsoft/vs-tools-for-ai" ["l"="25.938,33.489"]
"Somedaywilldo/Keras-progressive_growing_of_gans" ["l"="25.991,33.443"]
"Microsoft/vscode-tools-for-ai" ["l"="25.92,33.5"]
"Microsoft/Windows-Machine-Learning" ["l"="27.468,35.427"]
"orioledb/orioledb" ["l"="25.282,34.508"]
"ml-tooling/ml-hub" ["l"="25.196,34.095"]
"markusschanta/awesome-jupyter" ["l"="21.29,28.893"]
"MaxBenChrist/awesome_time_series_in_python" ["l"="22.433,36.037"]
"tslearn-team/tslearn" ["l"="22.445,36.052"]
"catboost/benchmarks" ["l"="25.821,33.802"]
"catboost/catboost-viewer" ["l"="25.802,33.806"]
"sberbank-ai-lab/LightAutoML" ["l"="-9.378,20.19"]
"yandexdataschool/Practical_DL" ["l"="-9.271,20.171"]
"maks-sh/scikit-uplift" ["l"="23.762,33.203"]
"KwokHing/YandexCatBoost-Python-Demo" ["l"="25.744,33.822"]
"RGF-team/rgf" ["l"="25.781,33.896"]
"joblib/joblib-spark" ["l"="26.042,33.712"]
"databricks/spark-pandas" ["l"="26.101,33.685"]
"Eilene/HMM-python" ["l"="25.505,33.406"]
"ldanduo/HMM" ["l"="25.52,33.394"]
"aehuynh/hidden-markov-model" ["l"="25.528,33.411"]
"sferes2/sferes2" ["l"="25.899,33.347"]
"sferes2/nn2" ["l"="25.923,33.342"]
"sferes2/map_elites" ["l"="25.907,33.325"]
"sferes2/modular_QD" ["l"="25.923,33.329"]
"dssg/hitchhikers-guide" ["l"="25.948,34.01"]
"dssg/triage" ["l"="25.97,34.038"]
"dssg/MLforPublicPolicy" ["l"="26.002,34.04"]
"dssg/aequitas" ["l"="25.847,34.069"]
"dssg/mlforpublicpolicylab" ["l"="26.003,34.028"]
"dssg/data-science-101" ["l"="26.037,33.997"]
"dssg/police-eis" ["l"="26.011,34.015"]
"dssg/dirtyduck" ["l"="25.984,34.017"]
"dssg/dsapp-reading-group" ["l"="25.987,34.027"]
"hadley/stats337" ["l"="20.152,43.535"]
"drivendataorg/competition-winners" ["l"="26.144,34.013"]
"rayidghani/magicloops" ["l"="25.995,34.014"]
"DeltaAnalytics/machine_learning_for_good" ["l"="26.078,33.998"]
"gboeing/urban-data-science" ["l"="20.181,27.56"]
"eto-ai/lance" ["l"="-10.753,5.405"]
"tobymao/sqlglot" ["l"="13.798,23.68"]
"marsupialtail/quokka" ["l"="-10.733,5.376"]
"fal-ai/fal" ["l"="13.773,23.615"]
"dj-nitehawk/MongoWebApiStarter" ["l"="25.076,34.852"]
"alexandre-spieser/AspNetCore.Identity.MongoDbCore" ["l"="25.029,34.879"]
"koenbeuk/EntityFrameworkCore.Triggered" ["l"="25.552,17.587"]
"automl/TabPFN" ["l"="25.726,34.087"]
"automl/TransformersCanDoBayesianInference" ["l"="25.809,34.156"]
"manujosephv/pytorch_tabular" ["l"="23.269,34.528"]
"nnaisense/evotorch" ["l"="25.45,35.739"]
"Nixtla/mlforecast" ["l"="22.512,36.029"]
"valeman/awesome-conformal-prediction" ["l"="25.769,34.118"]
"huggingface/setfit" ["l"="29.513,32.509"]
"cda-group/arcon" ["l"="25.087,34.372"]
"kompics/kompact" ["l"="25.052,34.404"]
"cda-group/arc" ["l"="25.056,34.385"]
"100/Solid" ["l"="25.544,33.659"]
"ljvmiranda921/pyswarms" ["l"="24.843,38.261"]
"csurfer/pyheatmagic" ["l"="21.56,29.005"]
"paulknysh/blackbox" ["l"="-9.577,47.401"]
"mehrdadn/SOTA-Py" ["l"="25.62,33.528"]
"joeddav/devol" ["l"="25.627,33.732"]
"wwrechard/pydlm" ["l"="22.511,36.132"]
"narimiran/tably" ["l"="25.627,33.57"]
"thuijskens/scikit-hyperband" ["l"="25.715,33.648"]
"kevinzakka/hyperband" ["l"="25.744,33.611"]
"kevinzakka/hypersearch" ["l"="25.707,33.631"]
"JasperSnoek/spearmint" ["l"="25.594,33.659"]
"automl/HPOlib" ["l"="25.687,33.6"]
"Far0n/xgbfi" ["l"="22.783,37.439"]
"kestra-io/kestra" ["l"="-13.497,-44.672"]
"CODAIT/max-central-repo" ["l"="25.885,34.674"]
"IBM/MAX-Weather-Forecaster" ["l"="25.899,34.692"]
"motefly/DeepGBM" ["l"="22.8,37.219"]
"dayeren/Kaggle_Competition_Treasure" ["l"="21.507,37.23"]
"chenkkkk/User-loan-risk-prediction" ["l"="10.81,21.116"]
"amueller/dabl" ["l"="25.504,33.752"]
"guoday/ctrNet-tool" ["l"="21.528,37.209"]
"ashleve/lightning-hydra-template" ["l"="34.22,35.904"]
"pymc-labs/CausalPy" ["l"="23.857,33.168"]
"awslabs/fortuna" ["l"="25.821,34.138"]
"koaning/embetter" ["l"="25.761,34.167"]
"WillianFuks/tfcausalimpact" ["l"="23.849,33.219"]
"microsoft/causica" ["l"="23.864,33.135"]
"kennethleungty/Failed-ML" ["l"="25.746,34.157"]
"salesforce/causalai" ["l"="25.769,34.219"]
"explainX/explainx" ["l"="25.813,34.031"]
"oneTaken/awesome_deep_learning_interpretability" ["l"="25.833,33.995"]
"mrocklin/streamz" ["l"="25.196,33.739"]
"martinrusev/python-daemon" ["l"="24.545,33.513"]
"arnaudsj/python-daemon" ["l"="24.564,33.464"]
"leporo/tornado-redis" ["l"="21.056,3.494"]
"serverdensity/sd-agent" ["l"="24.521,33.501"]
"bdarnell/torndb" ["l"="21.102,3.539"]
"drkjam/netaddr" ["l"="-8.682,-45.692"]
"aio-libs/aioredis" ["l"="22.725,3.619"]
"gak/pycallgraph" ["l"="22.825,3.689"]
"jsmarkus/the-little-mongodb-book" ["l"="6.656,-23.835"]
"gorakhargosh/watchdog" ["l"="22.683,4.046"]
"MLWave/Kaggle-Ensemble-Guide" ["l"="22.742,37.425"]
"Kaggle/docker-rstats" ["l"="25.303,33.659"]
"trent-b/iterative-stratification" ["l"="34.41,35.593"]
"nyanp/nyaggle" ["l"="25.691,31.94"]
"jupyter/docker-stacks" ["l"="21.25,28.679"]
"nejumi/kaggle_memo" ["l"="25.677,31.955"]
"albu/albumentations" ["l"="34.315,35.522"]
"jeongyoonlee/Kaggler" ["l"="22.76,37.41"]
"pfnet-research/xfeat" ["l"="25.684,31.922"]
"facebookresearch/TensorComprehensions" ["l"="27.712,35.445"]
"tensorflow/fold" ["l"="24.795,35.73"]
"facebookresearch/fairseq-py" ["l"="30.093,32.49"]
"openai/gradient-checkpointing" ["l"="27.562,35.345"]
"bioinf-jku/SNNs" ["l"="33.874,32.628"]
"agermanidis/livepython" ["l"="22.852,4.184"]
"gaojiuli/gain" ["l"="22.86,4.16"]
"tomerfiliba/plumbum" ["l"="22.647,3.988"]
"dotcloud/zerorpc-python" ["l"="22.438,1.115"]
"quantmind/pulsar" ["l"="22.519,3.829"]
"mozilla-services/circus" ["l"="22.438,1.087"]
"bentoml/bentoctl" ["l"="25.148,34.22"]
"bentoml/gallery" ["l"="25.113,34.23"]
"mlr-org/mlr3" ["l"="20.276,43.468"]
"bgreenwell/pdp" ["l"="25.998,33.988"]
"ModelOriented/modelStudio" ["l"="25.913,34.036"]
"AppliedDataSciencePartners/xgboostExplainer" ["l"="25.976,33.983"]
"tidymodels/recipes" ["l"="20.322,43.37"]
"tidymodels/tune" ["l"="20.315,43.353"]
"strengejacke/ggeffects" ["l"="20.168,43.374"]
"holub008/xrf" ["l"="25.867,33.984"]
"tidymodels/TMwR" ["l"="20.28,43.382"]
"bayesgroup/deepbayes-2019" ["l"="24.007,34.564"]
"piEsposito/blitz-bayesian-deep-learning" ["l"="23.963,34.581"]
"joshmarshall/tornadorpc" ["l"="24.427,33.423"]
"tcalmant/jsonrpclib" ["l"="24.387,33.426"]
"datagraph/jquery-jsonrpc" ["l"="24.325,33.398"]
"gerold-penz/python-jsonrpc" ["l"="24.4,33.409"]
"oubiwann/txjsonrpc" ["l"="24.39,33.469"]
"NCMI/jsonrpc" ["l"="24.415,33.464"]
"Yelp/MOE" ["l"="25.619,33.656"]
"jaberg/hyperopt" ["l"="25.602,33.683"]
"rmcantin/bayesopt" ["l"="25.683,33.558"]
"wujian16/Cornell-MOE" ["l"="25.661,33.567"]
"BIDData/BIDMach" ["l"="26.979,34.05"]
"ypeleg/HungaBunga" ["l"="25.509,34.01"]
"8080labs/pyforest" ["l"="25.539,33.973"]
"clauswilke/ggtext" ["l"="20.05,43.332"]
"deepmind/bsuite" ["l"="25.188,35.838"]
"DenisVorotyntsev/CategoricalEncodingBenchmark" ["l"="33.728,34.423"]
"megvii-model/ShuffleNet-Series" ["l"="34.559,35.432"]
"diffgram/diffgram" ["l"="25.499,34.267"]
"recognai/rubrix" ["l"="29.535,32.529"]
"heartexlabs/awesome-data-labeling" ["l"="34.591,35.444"]
"airctic/icevision" ["l"="22.738,28.989"]
"openvinotoolkit/cvat" ["l"="34.5,35.481"]
"voxel51/fiftyone" ["l"="34.514,35.659"]
"NorskRegnesentral/skweak" ["l"="29.491,32.529"]
"huggingface/accelerate" ["l"="27.589,31.035"]
"code-kern-ai/refinery" ["l"="29.448,32.484"]
"henripal/labnotebook" ["l"="25.713,33.756"]
"bbli/ml_board" ["l"="25.793,33.7"]
"dataversioncontrol/dvc" ["l"="25.61,33.834"]
"williamFalcon/test-tube" ["l"="34.165,35.856"]
"jgreenemi/Parris" ["l"="25.856,33.674"]
"pbiecek/ema" ["l"="25.903,34.059"]
"ModelOriented/DALEXtra" ["l"="25.958,34.069"]
"daft-dev/daft" ["l"="25.353,33.422"]
"jeremiecoullon/SGMCMCJax" ["l"="23.55,33.865"]
"rhiever/datacleaner" ["l"="21.588,28.903"]
"ellisonbg/altair" ["l"="21.564,28.863"]
"vizzuhq/ipyvizzu-story" ["l"="25.62,34.231"]
"vizzuhq/vizzu-lib" ["l"="-28.735,-15.604"]
"dirty-cat/dirty_cat" ["l"="25.711,34.061"]
"jina-ai/docarray" ["l"="34.111,28.856"]
"tensorflow/recommenders" ["l"="22.78,37.063"]
"tensorflow/ranking" ["l"="22.795,37.149"]
"VertaAI/modeldb" ["l"="25.362,34.214"]
"vpj/lab" ["l"="25.176,34.165"]
"replicate/replicate" ["l"="25.433,34.168"]
"tensorflow/metadata" ["l"="25.558,34.213"]
"GoogleCloudPlatform/cloudml-samples" ["l"="-7.398,-0.677"]
"GoogleCloudPlatform/tf-estimator-tutorials" ["l"="22.635,37.199"]
"microprediction/timemachines" ["l"="22.563,36.064"]
"antoinecarme/pyaf" ["l"="22.532,36.078"]
"nlarusstone/corels" ["l"="26.228,34.183"]
"Hongyuy/sbrlmod" ["l"="26.261,34.184"]
"fingoldin/pycorels" ["l"="26.259,34.2"]
"ustunb/risk-slim" ["l"="26.178,34.168"]
"danielhomola/mifs" ["l"="25.796,33.872"]
"scikit-learn-contrib/skope-rules" ["l"="25.713,33.923"]
"AutoViML/Auto_TS" ["l"="22.511,36.08"]
"aangelopoulos/conformal-prediction" ["l"="25.849,34.154"]
"aangelopoulos/conformal_classification" ["l"="25.887,34.185"]
"dobriban/Topics-In-Modern-Statistical-Learning" ["l"="25.939,34.203"]
"yromano/cqr" ["l"="25.86,34.164"]
"aangelopoulos/ltt" ["l"="25.873,34.183"]
"donlnz/nonconformist" ["l"="25.848,34.172"]
"aangelopoulos/conformal-risk" ["l"="25.915,34.184"]
"TorchUQ/torchuq" ["l"="25.881,34.17"]
"FilippoMB/Ensemble-Conformalized-Quantile-Regression" ["l"="25.899,34.179"]
"aangelopoulos/im2im-uq" ["l"="25.905,34.193"]
"kamilest/conformal-rnn" ["l"="25.868,34.195"]
"ryantibs/conformal" ["l"="25.849,34.185"]
"awslabs/Renate" ["l"="25.887,34.154"]
"awslabs/syne-tune" ["l"="25.903,34.164"]
"uncertainty-toolbox/uncertainty-toolbox" ["l"="23.926,34.602"]
"google/uncertainty-baselines" ["l"="23.938,34.575"]
"Nixtla/hierarchicalforecast" ["l"="22.471,36.013"]
"Nixtla/neuralforecast" ["l"="22.445,36.006"]
"google/vizier" ["l"="23.529,33.682"]
"Rdatatable/data.table" ["l"="20.34,43.599"]
"fstpackage/fst" ["l"="20.347,43.461"]
"has2k1/plotnine" ["l"="20.189,43.585"]
"rstudio/reticulate" ["l"="20.332,43.542"]
"h2oai/db-benchmark" ["l"="25.266,34.008"]
"machow/siuba" ["l"="20.28,43.509"]
"BCG-Gamma/facet" ["l"="25.742,34.072"]
"BCG-Gamma/sklearndf" ["l"="25.814,34.108"]
"BCG-Gamma/pytools" ["l"="25.798,34.112"]
"interpretml/gam-changer" ["l"="25.812,34.121"]
"automl/HPOlib2" ["l"="25.683,33.621"]
"automl/HPOBench" ["l"="25.744,33.636"]
"DEAP/notebooks" ["l"="24.594,38.237"]
"SmokinCaterpillar/pypet" ["l"="25.261,33.561"]
"msmbuilder/osprey" ["l"="25.27,33.579"]
"aarongarrett/inspyred" ["l"="24.93,38.266"]
"globalaihub/python-education-v2" ["l"="13.167,-43.825"]
"therealsreehari/Learn-Datascience-For-Free" ["l"="23.767,30.605"]
"jalammar/ecco" ["l"="29.59,32.507"]
"codeedu/imersao-fullstack-fullcycle" ["l"="13.136,-43.788"]
"NVlabs/stylegan2-ada-pytorch" ["l"="33.392,32.952"]
"allanf181/FuiVazado" ["l"="13.164,-43.81"]
"Serial-Studio/Serial-Studio" ["l"="-31.565,41.519"]
"Microsoft/vscode-arduino" ["l"="25.893,33.531"]
"GenericMappingTools/gmt" ["l"="19.697,28.191"]
"kserve/website" ["l"="25.27,34.276"]
"kserve/modelmesh-serving" ["l"="25.251,34.272"]
"IBM/FfDL" ["l"="25.432,34.15"]
"IBM/AIF360" ["l"="25.778,34.068"]
"machine-learning-exchange/mlx" ["l"="25.352,34.266"]
"IBM/microservices-traffic-management-using-istio" ["l"="-14.02,-2.715"]
"kubeflow/kfp-tekton" ["l"="25.34,34.25"]
"IBM/adversarial-robustness-toolbox" ["l"="21.519,14.056"]
"kubeflow/example-seldon" ["l"="25.285,34.229"]
"IBM/Fashion-MNIST-using-FfDL" ["l"="25.418,34.179"]
"IBM/KubeflowDojo" ["l"="25.358,34.251"]
"aporia-ai/mlnotify" ["l"="25.436,34.494"]
"logicalclocks/maggy" ["l"="25.249,34.308"]
"logicalclocks/hopsworks-iot" ["l"="25.234,34.332"]
"TutteInstitute/thisnotthat" ["l"="25.9,34.26"]
"Pandora-Intelligence/concise-concepts" ["l"="29.4,32.533"]
"koaning/whatlies" ["l"="25.793,34.206"]
"HLasse/TextDescriptives" ["l"="29.398,32.517"]
"Lucaterre/spacyfishing" ["l"="25.546,29.363"]
"MaartenGr/PolyFuzz" ["l"="29.497,32.56"]
"ljvmiranda921/prodigy-pdf-custom-recipe" ["l"="25.907,34.242"]
"koaning/cluestar" ["l"="25.814,34.204"]
"MarvinBertin/HiddenMarkovModel_TensorFlow" ["l"="25.406,33.304"]
"dwiel/tensorflow_hmm" ["l"="25.414,33.339"]
"emlearn/emlearn" ["l"="25.818,33.657"]
"jpmml/sklearn2pmml" ["l"="10.788,24.133"]
"jpmml/jpmml-sklearn" ["l"="10.816,24.105"]
"konstantint/SKompiler" ["l"="25.762,33.674"]
"ajtulloch/sklearn-compiledtrees" ["l"="25.784,33.65"]
"onnx/sklearn-onnx" ["l"="34.696,35.608"]
"jpmml/jpmml-evaluator" ["l"="10.829,24.135"]
"eloquentarduino/micromlgen" ["l"="25.794,33.67"]
"pplonski/keras2cpp" ["l"="30.804,31.76"]
"databricks/spark-sklearn" ["l"="11.105,24.017"]
"jermwatt/machine_learning_refined" ["l"="25.58,33.512"]
"the-deep-learners/deep-learning-illustrated" ["l"="23.396,30.277"]
"hundredblocks/ml-powered-applications" ["l"="23.777,30.291"]
"JWarmenhoven/ISLR-python" ["l"="23.373,30.804"]
"aditya1702/Machine-Learning-and-Data-Science" ["l"="25.606,33.43"]
"gerdm/prml" ["l"="24.042,31.308"]
"kundajelab/deeplift" ["l"="28.854,34.998"]
"Trusted-AI/adversarial-robustness-toolbox" ["l"="21.452,14.1"]
"keplr-io/hera" ["l"="25.841,33.702"]
"jakebian/quiver" ["l"="30.96,31.56"]
"stratospark/keras-multiprocess-image-data-generator" ["l"="31.024,31.689"]
"titu1994/Keras-Classification-Models" ["l"="34.294,34.883"]
"bckenstler/CLR" ["l"="31.13,31.665"]
"merantix/picasso" ["l"="34.169,35.106"]
"fchollet/hualos" ["l"="31.014,31.552"]
"McGill-NLP/bias-bench" ["l"="26.063,34.194"]
"zhijing-jin/NLP4SocialGood_Papers" ["l"="23.651,33.022"]
"pliang279/sent_debias" ["l"="26.078,34.177"]
"moinnadeem/StereoSet" ["l"="-0.798,39.598"]
"yanaiela/demog-text-removal" ["l"="26.059,34.18"]
"tolga-b/debiaswe" ["l"="26.074,34.216"]
"causaltext/causal-text-papers" ["l"="23.67,33.087"]
"zhijing-jin/nlp-phd-global-equality" ["l"="23.655,33.003"]
"ewsheng/nlg-bias" ["l"="26.093,34.196"]
"W4ngatang/sent-bias" ["l"="26.095,34.18"]
"timoschick/self-debiasing" ["l"="26.049,34.208"]
"acl-org/aclpubcheck" ["l"="27.66,31.398"]
"AlexIoannides/kubernetes-mlops" ["l"="25.534,34.571"]
"AlexIoannides/ml-workflow-automation" ["l"="25.511,34.529"]
"amazon-research/bold" ["l"="26.127,34.204"]
"NVIDIA-AI-IOT/torch2trt" ["l"="34.478,35.566"]
"ShannonAI/service-streamer" ["l"="32.166,30.316"]
"microsoft/onnxruntime" ["l"="34.397,35.571"]
"onnx/onnx-tensorrt" ["l"="34.519,35.561"]
"eltonlaw/impyute" ["l"="25.824,33.906"]
"jsyoon0823/GAIN" ["l"="21.605,35.975"]
"caow13/BRITS" ["l"="21.64,35.971"]
"epsilon-machine/missingpy" ["l"="25.851,33.912"]
"tonyduan/matrix-completion" ["l"="25.843,33.857"]
"xinychen/transdim" ["l"="21.543,35.945"]
"awslabs/datawig" ["l"="25.849,33.895"]
"Kaggle/docker-rcran" ["l"="25.287,33.637"]
"AustinRochford/PyCEbox" ["l"="25.808,33.937"]
"cosmicBboy/themis-ml" ["l"="25.856,34.016"]
"blent-ai/ALEPython" ["l"="25.863,33.945"]
"kubeflow/metadata" ["l"="25.366,34.287"]
"tensorflow/model-card-toolkit" ["l"="25.562,34.196"]
"googleapis/python-aiplatform" ["l"="-7.42,-0.601"]
"nitishsrivastava/deepnet" ["l"="26.999,34.071"]
"dnouri/nolearn" ["l"="27.14,34.092"]
"joschu/cgt" ["l"="27.002,34.183"]
"salimt/Courses-" ["l"="23.891,32.405"]
"danielhanchen/hyperlearn" ["l"="25.523,33.769"]
"pavlin-policar/fastTSNE" ["l"="22.651,3.606"]
"kmkolasinski/deep-learning-notes" ["l"="23.233,33.839"]
"lancifollia/tinygbt" ["l"="25.713,33.715"]
"scikit-multilearn/scikit-multilearn" ["l"="25.511,33.906"]
"Waikato/meka" ["l"="25.211,34.033"]
"RandolphVI/Multi-Label-Text-Classification" ["l"="32.06,29.988"]
"lancopku/SGM" ["l"="8.957,17.203"]
"dhruvramani/C2AE-Multilabel-Classification" ["l"="30.154,30.636"]
"inspirehep/magpie" ["l"="31.999,29.979"]
"tsoumakas/mulan" ["l"="25.532,33.948"]
"Refefer/fastxml" ["l"="30.221,30.601"]
"kpe/bert-for-tf2" ["l"="32.185,30.136"]
"keras-team/keras-contrib" ["l"="31.317,31.6"]
"anujdutt9/Feature-Selection-for-Machine-Learning" ["l"="25.813,33.831"]
"alicezheng/feature-engineering-book" ["l"="25.769,33.814"]
"kaushalshetty/FeatureSelectionGA" ["l"="25.805,33.854"]
"aikho/awesome-feature-engineering" ["l"="25.796,33.837"]
"ashishpatel26/Amazing-Feature-Engineering" ["l"="23.644,30.181"]
"topepo/FES" ["l"="20.256,43.389"]
"solegalli/feature-selection-for-machine-learning" ["l"="23.741,30.12"]
"plantsgo/ijcai-2018" ["l"="21.524,37.185"]
"YouChouNoBB/ijcai-18-top2-single-mole-solution" ["l"="21.519,37.196"]
"luoda888/2018-IJCAI-top3" ["l"="21.564,37.189"]
"nzc/dnn_ctr" ["l"="22.754,37.183"]
"duxuhao/JData-2018" ["l"="25.857,33.787"]
"luoda888/tianchi-diabetes-top12" ["l"="21.579,37.177"]
"duxuhao/rong360-season2" ["l"="25.847,33.799"]
"lytforgood/MachineLearningTrick" ["l"="22.702,37.341"]
"nzc/tencent-contest" ["l"="21.539,37.184"]
"MI2DataLab/pyBreakDown" ["l"="25.915,33.988"]
"HDI-Project/ATMSeer" ["l"="25.764,33.7"]
"adebayoj/fairml" ["l"="25.867,34.057"]
"algofairness/fairness-comparison" ["l"="25.863,34.089"]
"propublica/compas-analysis" ["l"="25.88,34.107"]
"IBM/UQ360" ["l"="25.848,34.029"]
"pymetrics/audit-ai" ["l"="25.88,34.071"]
"ModelOriented/iBreakDown" ["l"="25.95,34.048"]
"easystats/performance" ["l"="20.185,43.37"]
"ModelOriented/randomForestExplainer" ["l"="25.983,34.071"]
"pbiecek/PM_VEE" ["l"="25.964,34.056"]
"TomAugspurger/engarde" ["l"="21.537,28.908"]
"plasticityai/magnitude" ["l"="29.801,32.611"]
"tdda/tdda" ["l"="25.736,33.735"]
"instacart/lore" ["l"="25.633,33.832"]
"ragulpr/wtte-rnn" ["l"="24.068,33.195"]
"rstojnic/lazydata" ["l"="22.798,3.778"]
"microsoft/responsible-ai-widgets" ["l"="25.839,34.098"]
"interpretml/interpret-text" ["l"="25.885,34.127"]
"microsoft/solution-accelerator-many-models" ["l"="-12.847,-44.076"]
"microsoft/ml-wrappers" ["l"="25.857,34.101"]
"interpretml/interpret-text-contrib" ["l"="25.847,34.085"]
"Azure/azureml-previews" ["l"="-12.814,-44.011"]
"microsoft/DiCE" ["l"="25.891,34.02"]
"puolival/multipy" ["l"="26.047,33.938"]
"mlr-org/mlrMBO" ["l"="26.141,33.587"]
"mlr-org/mlrCPO" ["l"="26.166,33.57"]
"berndbischl/ParamHelpers" ["l"="26.173,33.536"]
"berndbischl/parallelMap" ["l"="26.189,33.533"]
"jakob-r/mlrHyperopt" ["l"="26.173,33.586"]
"mstaniak/autoEDA-resources" ["l"="26.041,34.069"]
"XanderHorn/autoEDA" ["l"="26.103,34.08"]
"ekstroem/dataMaid" ["l"="26.149,34.088"]
"ropensci/visdat" ["l"="20.219,43.437"]
"optuna/optuna-dashboard" ["l"="25.744,33.656"]
"optuna/optuna-examples" ["l"="25.673,33.716"]
"optuna/kurobako" ["l"="25.774,33.622"]
"Far0n/kaggletils" ["l"="22.783,37.478"]
"SeldonIO/MLServer" ["l"="25.314,34.268"]
"SeldonIO/tempo" ["l"="25.279,34.335"]
"adriangonz/mlflow-talk" ["l"="25.279,34.3"]
"jeremyjordan/ml-monitoring" ["l"="22.99,3.117"]
"SeldonIO/goven" ["l"="25.278,34.314"]
"benedekrozemberczki/awesome-decision-tree-papers" ["l"="22.069,38.81"]
"timsainb/tensorflow2-generative-models" ["l"="33.734,32.763"]
"kleveross/ormb" ["l"="-9.249,2.791"]
"delta-io/delta" ["l"="11.33,23.789"]
"awslabs/deequ" ["l"="13.79,23.766"]
"jupyter-incubator/sparkmagic" ["l"="11.211,23.998"]
"machinalis/featureforge" ["l"="27.197,34.06"]
"keisen/tf-keras-vis" ["l"="28.742,34.898"]
"philipperemy/keras-tcn" ["l"="30.384,32.473"]
"OverLordGoldDragon/see-rnn" ["l"="25.861,33.747"]
"titu1994/keras-squeeze-excite-network" ["l"="31.752,37.383"]
"CyberZHG/keras-self-attention" ["l"="31.331,31.528"]
"CyberZHG/keras-radam" ["l"="31.257,31.746"]
"BenWhetton/keras-surgeon" ["l"="30.792,35.581"]
"thushv89/attention_keras" ["l"="31.304,31.513"]
"tensorflow/fairness-indicators" ["l"="25.709,34.17"]
"PAIR-code/saliency" ["l"="28.759,34.961"]
"mutantturkey/PyFeast" ["l"="25.939,33.838"]
"nlhepler/mrmr" ["l"="25.984,33.832"]
"huawei-noah/streamDM" ["l"="25.047,34.137"]
"apache/incubator-samoa" ["l"="25.067,34.121"]
"Waikato/weka-3.8" ["l"="24.976,34.148"]
"Waikato/wekaDeeplearning4j" ["l"="25.01,34.137"]
"online-ml/river-torch" ["l"="25.091,34.118"]
"richard-moulton/D-Stream" ["l"="25.096,34.103"]
"sohutv/hotcaffeine" ["l"="-24.827,23.114"]
"mhahsler/stream" ["l"="25.08,34.099"]
"baimingxuan/vue3-admin-design" ["l"="-24.832,23.116"]
"vecxoz/vecstack" ["l"="22.745,37.503"]
"yzhao062/combo" ["l"="22.898,35.053"]
"Ibotta/sk-dist" ["l"="25.916,33.759"]
"apachecn/feature-engineering-for-ml-zh" ["l"="24.006,31.289"]
"PacktPublishing/Feature-Engineering-Made-Easy" ["l"="25.831,33.764"]
"Pysamlam/Tips-of-Feature-engineering" ["l"="24.219,31.313"]
"apachecn/fe4ml-zh" ["l"="24.207,31.256"]
"dipanjanS/practical-machine-learning-with-python" ["l"="29.749,32.844"]
"Smilexuhc/Data-Competition-TopSolution" ["l"="24.066,31.293"]
"PacktPublishing/Python-Feature-Engineering-Cookbook" ["l"="21.99,30.111"]
"aapatel09/handson-unsupervised-learning" ["l"="33.418,28.848"]
"tomMoral/loky" ["l"="25.266,33.635"]
"SheffieldML/PyDeepGP" ["l"="25.598,33.366"]
"ICL-SML/Doubly-Stochastic-DGP" ["l"="25.616,33.378"]
"SheffieldML/deepGP" ["l"="25.563,33.318"]
"thangbui/deepGP_approxEP" ["l"="25.602,33.34"]
"brain-research/nngp" ["l"="25.62,33.322"]
"jameshensman/VFF" ["l"="25.587,33.304"]
"maka89/Deep-Kernel-GP" ["l"="25.623,33.289"]
"alshedivat/keras-gp" ["l"="25.608,33.302"]
"FelixOpolka/Deep-Gaussian-Process" ["l"="25.615,33.356"]
"cambridge-mlg/sghmc_dgp" ["l"="25.627,33.36"]
"hughsalimbeni/DGPs_with_IWVI" ["l"="25.631,33.338"]
"markvdw/convgp" ["l"="25.653,33.321"]
"duvenaud/deep-limits" ["l"="25.586,33.332"]
"SheffieldML/GPmat" ["l"="25.554,33.272"]
"dask/dask-kubernetes" ["l"="25.184,33.763"]
"dask/dask-jobqueue" ["l"="25.164,33.75"]
"dask/dask-tutorial" ["l"="25.287,33.819"]
"dask/dask-examples" ["l"="25.216,33.775"]
"dask/dask-labextension" ["l"="25.214,33.758"]
"pydata/xarray" ["l"="18.95,28.186"]
"dask/dask-docker" ["l"="25.159,33.779"]
"dask/dask-cloudprovider" ["l"="25.187,33.809"]
"pangeo-data/pangeo" ["l"="18.922,28.14"]
"dask/dask-gateway" ["l"="25.127,33.755"]
"tensorflow/autograph" ["l"="25.615,34.294"]
"jeff-dale/Gene-Expression-Programming" ["l"="25.729,33.641"]
"parrt/stratx" ["l"="25.831,33.921"]
"parrt/lolviz" ["l"="21.482,28.986"]
"microsoft/EconML" ["l"="23.793,33.195"]
"intel/scikit-learn-intelex" ["l"="25.682,34.101"]
"neubig/nlp-from-scratch-assignment-2022" ["l"="25.804,34.246"]
"eugeneyan/ml-surveys" ["l"="23.795,30.527"]
"poloclub/timbertrek" ["l"="25.784,34.232"]
"youssefHosni/Practical-Machine-Learning" ["l"="25.828,-21.722"]
"Featuretools/Automated-Manual-Comparison" ["l"="25.805,33.724"]
"mila-udem/blocks" ["l"="27.074,34.135"]
"smazzanti/mrmr" ["l"="25.831,33.934"]
"fbrundu/pymrmr" ["l"="25.86,33.878"]
"upgini/upgini" ["l"="25.954,33.912"]
"explodinglabs/jsonrpcserver" ["l"="24.354,33.392"]
"BayesWatch/deep-kernel-transfer" ["l"="25.634,33.254"]
"cnguyen10/few_shot_meta_learning" ["l"="23.673,35.369"]
"jamesrobertlloyd/gp-structure-search" ["l"="25.37,33.4"]
"marionmari/pyGPs" ["l"="16.923,36.7"]
"openai/improved-gan" ["l"="33.713,32.627"]
"monsta-hd/boltzmann-machines" ["l"="29.339,35.67"]
"facebookresearch/clevr-iep" ["l"="31.613,34.404"]
"khanrc/tf.gans-comparison" ["l"="33.746,32.655"]
"vasiloglou/mltrain-nips-2017" ["l"="25.306,33.478"]
"renmengye/revnet-public" ["l"="28.219,32.684"]
"znxlwm/pytorch-generative-model-collections" ["l"="33.674,32.712"]
"jonas-koehler/s2cnn" ["l"="17.023,37.975"]
"stared/thinking-in-tensors-writing-in-pytorch" ["l"="28.199,32.661"]
"jwkvam/celluloid" ["l"="23.4,33.837"]
"tomgoldstein/loss-landscape" ["l"="34.319,35.741"]
"unit8co/vegans" ["l"="28.181,32.636"]
"wandb/wandb" ["l"="25.388,34.234"]
"Lightning-AI/lightning" ["l"="34.208,35.927"]
"adap/flower" ["l"="21.054,27.094"]
"wandb/examples" ["l"="34.17,36.021"]
"Miksus/rocketry" ["l"="23.292,3.741"]
"nearform/lyra" ["l"="29.292,-27.122"]
"Farama-Foundation/Gymnasium" ["l"="25.293,35.893"]
"srush/GPU-Puzzles" ["l"="27.584,30.917"]
"ray-project/tune-sklearn" ["l"="25.737,34.004"]
"ray-project/xgboost_ray" ["l"="25.824,34.047"]
"Neuraxio/Neuraxle" ["l"="25.671,33.97"]
"ray-project/lightgbm_ray" ["l"="25.808,34.044"]
"data-describe/data-describe" ["l"="25.645,34.094"]
"ing-bank/probatus" ["l"="10.789,21.267"]
"Menelau/DESlib" ["l"="22.705,37.505"]
"automl/pybnn" ["l"="25.706,33.592"]
"automl/fanova" ["l"="25.75,33.557"]
"automl/pylearningcurvepredictor" ["l"="25.71,33.572"]
"automl/autoweka" ["l"="25.686,33.646"]
"uber-research/TuRBO" ["l"="25.665,33.583"]
"ivylee/model-cards-and-datasheets" ["l"="25.555,34.272"]
"equialgo/fairness-in-ml" ["l"="25.921,34.103"]
"renatoosousa/GeneticAlgorithmForFeatureSelection" ["l"="25.86,33.835"]
"ahcantao/PSOFeatureSelection" ["l"="25.877,33.831"]
"rogeroyer/feature_selection_GAAlgorithm" ["l"="25.984,33.809"]
"scoliann/GeneticAlgorithmFeatureSelection" ["l"="25.885,33.815"]
"JingweiToo/Wrapper-Feature-Selection-Toolbox-Python" ["l"="24.802,38.178"]
"ctlab/ITMO_FS" ["l"="25.829,33.892"]
"noxdafox/pebble" ["l"="25.075,33.543"]
"GPflow/GPflowOpt" ["l"="25.62,33.551"]
"secondmind-labs/GPflux" ["l"="25.614,33.486"]
"craiggwilson/Simple.Data.MongoDB" ["l"="24.846,35.04"]
"trainindata/deploying-machine-learning-models" ["l"="23.795,30.17"]
"Minyus/causallift" ["l"="23.762,33.217"]
"marcotcr/lime-experiments" ["l"="25.867,33.962"]
"creme-ml/chantilly" ["l"="25.594,33.984"]
"alteryx/compose" ["l"="25.671,34.049"]
"hyperopt/hyperopt-convnet" ["l"="25.785,33.489"]
"hyperopt/hyperopt-nnet" ["l"="25.753,33.528"]
"jmtomczak/intro_dgm" ["l"="34.59,28.802"]
"michaelgutmann/ml-pen-and-paper-exercises" ["l"="23.701,30.312"]
"probml/dynamax" ["l"="23.522,33.815"]
"clementchadebec/benchmark_VAE" ["l"="23.638,30.231"]
"bayesoptbook/bayesoptbook.github.io" ["l"="25.59,33.539"]
"patrick-kidger/diffrax" ["l"="23.415,33.789"]
"patrick-kidger/equinox" ["l"="23.462,33.775"]
"facebookincubator/flowtorch" ["l"="23.319,33.941"]
"deepmind/optax" ["l"="23.497,33.767"]
"n2cholas/awesome-jax" ["l"="23.466,33.755"]
"joblib/threadpoolctl" ["l"="25.159,33.618"]
"MAIF/melusine" ["l"="25.736,34.1"]
"drivendataorg/power-laws-forecasting" ["l"="26.209,34.007"]
"drivendataorg/open-cities-ai-challenge" ["l"="26.197,34.024"]
"haofanwang/Score-CAM" ["l"="28.69,34.865"]
"MisaOgura/flashtorch" ["l"="28.717,34.865"]
"Harry24k/adversarial-attacks-pytorch" ["l"="21.46,14.072"]
"ankurtaly/Integrated-Gradients" ["l"="28.806,34.967"]
"danijar/handout" ["l"="29.765,32.492"]
"8080labs/ppscore" ["l"="25.642,34.015"]
"studioml/studio" ["l"="25.113,34.069"]
"mldbai/mldb" ["l"="25.377,34.189"]
"SolanaNFTCollector/Solana-Minting-Bot" ["l"="-5.852,-45.244"]
"FaceOnLive/Pet-Recognition-Android-iOS" ["l"="-5.816,-45.215"]
"WenjieZ/TSCV" ["l"="22.079,32.469"]
"EthicalML/awesome-artificial-intelligence-guidelines" ["l"="25.6,34.14"]
"JarnoRFB/incense" ["l"="25.158,33.998"]
"yuvalatzmon/SACRED_HyperOpt_v2" ["l"="25.172,34.015"]
"ironmussa/Optimus" ["l"="25.657,33.899"]
"MrPowers/quinn" ["l"="11.1,24.102"]
"lensacom/sparkit-learn" ["l"="11.015,24.058"]
"julioasotodv/spark-df-profiling" ["l"="25.719,33.865"]
"ironmussa/Bumblebee" ["l"="25.711,33.881"]
"FavioVazquez/kaggle-learning" ["l"="25.727,33.838"]
"awesome-spark/awesome-spark" ["l"="11.179,24.02"]
"uber/neuropod" ["l"="25.286,34.115"]
"deepmind/reverb" ["l"="25.262,35.826"]
"uber-research/poet" ["l"="24.6,38.426"]
"uber/bayesmark" ["l"="25.615,33.69"]
"awslabs/multi-model-server" ["l"="-10.513,-1.717"]
"HDI-Project/BTB" ["l"="25.702,33.694"]
"HDI-Project/FeatureHub" ["l"="25.78,33.684"]
"HDI-Project/MLBlocks" ["l"="25.733,33.684"]
"HDI-Project/MLPrimitives" ["l"="25.726,33.694"]
"HDI-Project/SDV" ["l"="25.746,33.695"]
"HDI-Project/RDT" ["l"="25.727,33.703"]
"carla-recourse/CARLA" ["l"="25.971,34.15"]
"salesforce/botsim" ["l"="25.863,34.137"]
"ydataai/awesome-data-centric-ai" ["l"="25.578,34.317"]
"ydataai/academy" ["l"="25.604,34.363"]
"bmabey/pyLDAvis" ["l"="29.714,32.757"]
"uoguelph-mlrg/theano_alexnet" ["l"="26.979,34.167"]
"benanne/morb" ["l"="26.959,34.132"]
"mwhoffman/pybo" ["l"="25.639,33.614"]
"rapidsai-community/notebooks-contrib" ["l"="25.108,33.905"]
"rapidsai/notebooks-extended" ["l"="25.097,33.924"]
"rapidsai/notebooks-contrib" ["l"="25.075,33.909"]
"rapidsai/dask-cudf" ["l"="25.055,33.894"]
"rapidsai/gQuant" ["l"="25.068,33.932"]
"rapidsai/dask-cuda" ["l"="25.044,33.909"]
"rapidsai/cloud-ml-examples" ["l"="25.087,33.892"]
"google/ml-fairness-gym" ["l"="25.84,34.119"]
"microsoft/MLOpsPython" ["l"="-12.875,-44.056"]
"zykls/folktables" ["l"="25.905,34.116"]
"ogozuacik/d3-discriminative-drift-detector-concept-drift" ["l"="24.992,34.11"]
"denismr/incremental-ks" ["l"="25.025,34.091"]
"alipsgh/data_streams" ["l"="25.005,34.096"]
"blablahaha/concept-drift" ["l"="24.961,34.122"]
"vlosing/driftDatasets" ["l"="25.017,34.109"]
"alipsgh/data-streams" ["l"="25.032,34.102"]
"esafak/mca" ["l"="25.837,33.877"]
"EducationalTestingService/factor_analyzer" ["l"="25.865,33.862"]
"storopoli/Bayesian-Statistics" ["l"="25.654,33.434"]
"bayesiains/nflows" ["l"="23.293,33.912"]
"pnkraemer/tueplots" ["l"="21.634,34.777"]
"SheffieldML/multigp" ["l"="25.524,33.287"]
"Magica-Chen/gptp_multi_output" ["l"="25.497,33.292"]
"nils-braun/dask-sql" ["l"="25.152,33.864"]
"omnisci/omniscidb" ["l"="11.638,23.95"]
"NVIDIA/spark-rapids" ["l"="11.458,24.026"]
"apache/arrow-datafusion" ["l"="-10.821,5.388"]
"NVIDIA/NVTabular" ["l"="22.633,36.938"]
"apache/arrow-rs" ["l"="-10.84,5.363"]
"heterodb/pg-strom" ["l"="-9.324,-4.806"]
"rapidsai/ucx-py" ["l"="28.054,35.371"]
"rapidsai/cuDataShader" ["l"="25.083,33.872"]
"rapidsai/tpcx-bb" ["l"="25.067,33.877"]
"trxcllnt/ubuntu-setup" ["l"="28.019,35.535"]
"Microsoft/frameworkcontroller" ["l"="25.863,33.53"]
"medic/medic-webapp" ["l"="-24.066,-18.454"]
"microsoft/nnfusion" ["l"="27.733,35.51"]
"performous/performous" ["l"="-24.104,-18.549"]
"facelessuser/soupsieve" ["l"="-24.091,-18.491"]
"Qihoo360/XLearning" ["l"="11.145,23.822"]
"NVIDIA/gdrcopy" ["l"="27.981,35.362"]
"amirhk/mace" ["l"="25.956,34.09"]
"timeseriesAI/tsai" ["l"="22.412,36.002"]
"dmbee/seglearn" ["l"="22.415,36.107"]
"uber-common/deep-neuroevolution" ["l"="24.659,38.396"]
"harvitronix/neural-network-genetic-algorithm" ["l"="24.808,38.369"]
"jliphard/DeepEvolve" ["l"="24.792,38.394"]
"ianwhale/nsga-net" ["l"="24.907,38.348"]
"aqibsaeed/Genetic-CNN" ["l"="24.867,38.382"]
"guybedo/minos" ["l"="25.682,33.693"]
"alexmojaki/birdseye" ["l"="23.027,3.965"]
"orsinium/textdistance" ["l"="28.634,-18.744"]
"Squarespace/datasheets" ["l"="22.033,2.125"]
"automl/nas_benchmarks" ["l"="28.467,34.346"]
"google-research/nasbench" ["l"="28.439,34.361"]
"automl/CAVE" ["l"="25.73,33.591"]
"dragonfly/dragonfly" ["l"="25.624,33.593"]
"automl/NASLib" ["l"="28.454,34.367"]
"glederrey/EPFL_thesis_template" ["l"="25.382,33.117"]
"dask/helm-chart" ["l"="25.142,33.771"]
"zi-w/Max-value-Entropy-Search" ["l"="25.756,33.395"]
"zi-w/Structural-Kernel-Learning-for-HDBBO" ["l"="25.736,33.442"]
"ProbabilisticNumerics/entropy-search" ["l"="25.765,33.369"]
"ziyuw/rembo" ["l"="25.707,33.501"]
"facebookresearch/alebo" ["l"="25.689,33.534"]
"aminnayebi/HesBO" ["l"="25.693,33.541"]
"boredbird/woe" ["l"="10.782,21.185"]
"wepe/PPD_RiskControlCompetition" ["l"="10.817,21.145"]
"resibots/limbo" ["l"="25.793,33.443"]
"jbrea/BayesianOptimization.jl" ["l"="17.067,39.186"]
"algofairness/BlackBoxAuditing" ["l"="25.911,34.09"]
"geomblog/fairness" ["l"="25.983,34.111"]
"tensorflow/cloud" ["l"="25.572,34.367"]
"google/tensorflow-recorder" ["l"="25.606,34.432"]
"NVIDIA/triton-inference-server" ["l"="25.208,34.172"]
"neo-ai/neo-ai-dlr" ["l"="-31.009,41.908"]
"pytorch/tvm" ["l"="27.654,35.538"]
"zi-w/Ensemble-Bayesian-Optimization" ["l"="25.707,33.541"]
"daxiongshu/rapids-ai-BBO-2nd-place-solution" ["l"="25.723,33.518"]
"rdturnermtl/bbo_challenge_starter_kit" ["l"="25.642,33.634"]
"ChangYong-Oh/HyperSphere" ["l"="25.674,33.546"]
"lyft/amundsen" ["l"="13.801,23.833"]
"Netflix/iceberg" ["l"="11.433,23.954"]
"lyft/flytekit" ["l"="25.25,34.123"]
"astronomer/astronomer" ["l"="13.607,23.92"]
"lyft/flinkk8soperator" ["l"="11.727,23.824"]
"lyft/flytesnacks" ["l"="25.301,34.122"]
"lyft/flytestdlib" ["l"="25.238,34.136"]
"grailbio/reflow" ["l"="-15.073,-0.539"]
"nicklashansen/rnn_lstm_from_scratch" ["l"="25.46,34.784"]
"DeepLearningDTU/02456-deep-learning-with-PyTorch" ["l"="25.46,34.758"]
"nicklashansen/neural-net-optimization" ["l"="25.483,34.781"]
"ekstroem/dataReporter" ["l"="26.198,34.095"]
"GoogleCloudPlatform/ml-design-patterns" ["l"="23.825,30.351"]
"https-deeplearning-ai/machine-learning-engineering-for-production-public" ["l"="24.27,32.479"]
"GokuMohandas/MLOps" ["l"="23.835,30.315"]
"IvanBongiorni/GAN-RNN_Timeseries-imputation" ["l"="21.589,35.958"]
"OpenIDEA-YunanUniversity/ycimpute" ["l"="25.889,33.906"]
"spindro/GINN" ["l"="21.632,36.008"]
"SkafteNicki/dtu_mlops" ["l"="25.448,34.697"]
"DeepLearningDTU/02456-deep-learning" ["l"="25.469,34.807"]
"suneman/socialdataanalysis2020" ["l"="25.44,34.77"]
"SocialComplexityLab/socialgraphs2020" ["l"="25.481,34.762"]
"ing-bank/popmon" ["l"="25.662,34.139"]
"ydataai/ydata-synthetic" ["l"="-5.881,-45.213"]
"kubeflow/kfctl" ["l"="25.208,34.264"]
"shikanon/kubeflow-manifests" ["l"="-9.342,2.815"]
"kubeflow/training-operator" ["l"="-9.442,2.753"]
"kubeflow/website" ["l"="-9.277,2.847"]
"argoflow/argoflow" ["l"="25.215,34.331"]
"NVIDIA/gpu-operator" ["l"="-9.492,2.816"]
"secondmind-labs/trieste" ["l"="25.638,33.493"]
"markvdw/gpflow-monitor" ["l"="25.637,33.514"]
"amzn/emukit" ["l"="25.647,33.527"]
"firmai/industry-machine-learning" ["l"="23.769,30.639"]
"microprediction/microprediction" ["l"="22.633,36.083"]
"ogozuacik/concept-drift-datasets-scikit-multiflow" ["l"="24.93,34.128"]
"gditzler/ConceptDriftResources" ["l"="24.909,34.133"]
"msesia/chr" ["l"="25.873,34.152"]
"shawnbrown/datatest" ["l"="21.54,28.963"]
"jupyter/repo2docker" ["l"="21.264,28.773"]
"d6t/d6tflow-template" ["l"="25.269,33.911"]
"intake/intake" ["l"="18.967,28.142"]
"ReviewNB/treon" ["l"="25.171,33.945"]
"dswah/pyGAM" ["l"="25.8,33.954"]
"civisanalytics/python-glmnet" ["l"="21.365,29.308"]
"malmgrek/gammy" ["l"="25.889,33.938"]
"pydata/patsy" ["l"="21.71,28.766"]
"luke14free/pm-prophet" ["l"="23.717,33.884"]
"laurencium/Causalinference" ["l"="23.735,33.208"]
"layerism/TensorRT-Inference-Server-Tutorial" ["l"="34.649,35.588"]
"rmccorm4/tensorrt-utils" ["l"="29.939,38.293"]
"aws/aws-vsts-tools" ["l"="25.677,33.481"]
"amzn/emukit-playground" ["l"="25.667,33.495"]
"ericmjl/bayesian-stats-modelling-tutorial" ["l"="23.791,33.911"]
"hugobowne/deep-learning-from-scratch-pytorch" ["l"="21.208,29.066"]
"Renumics/awesome-open-data-centric-ai" ["l"="25.356,34.771"]
"Renumics/spotlight" ["l"="25.366,34.802"]
"Renumics/awesome-anything2vec" ["l"="25.37,34.787"]
"zenml-io/awesome-open-data-annotation" ["l"="25.392,34.653"]
"cleanlab/cleanvision" ["l"="25.326,34.809"]
"dcai-course/dcai-lab" ["l"="25.342,34.819"]
"Renumics/mesh2vec" ["l"="25.356,34.79"]
"eugeneyan/ml-design-docs" ["l"="24.037,30.09"]
"ivan-bilan/The-NLP-Pandect" ["l"="29.656,32.567"]
"zenml-io/mlops-stacks" ["l"="25.425,34.556"]
"suneman/socialdata2022" ["l"="25.448,34.718"]
"jupiters1117/mico" ["l"="25.839,33.847"]
"dit/dit" ["l"="28.488,37.184"]
"columbia/fairtest" ["l"="25.903,34.078"]
"stanford-crfm/mistral" ["l"="25.568,34.442"]
"eric-mitchell/mend" ["l"="25.879,35.388"]
"HazyResearch/bootleg" ["l"="25.645,29.262"]
"huawei-noah/streamDM-Cpp" ["l"="25.002,34.168"]
"databricks/tensorframes" ["l"="11.16,24.022"]
"cloudml/zen" ["l"="22.892,37.336"]
"amplab/SparkNet" ["l"="11.191,24.056"]
"irvingc/dbscan-on-spark" ["l"="18.566,25.227"]
"apache/bahir" ["l"="11.417,24.066"]
"proflin/CoolplaySpark" ["l"="11.334,23.999"]
"LIBBLE/LIBBLE-Spark" ["l"="22.927,37.373"]
"caroljmcdonald/SparkStreamingHBaseExample" ["l"="11.572,23.875"]
"sryza/spark-timeseries" ["l"="11.151,24.043"]
"intel-machine-learning/DistML" ["l"="22.904,37.358"]
"jaceklaskowski/spark-structured-streaming-book" ["l"="11.284,24.011"]
"linkedin/photon-ml" ["l"="22.936,37.343"]
"joblib/loky" ["l"="25.036,33.658"]
"pywren/pywren" ["l"="-11.131,-1.369"]
"python-trio/trio" ["l"="22.911,3.767"]
"xhochy/fletcher" ["l"="25.018,33.74"]
"ml-tooling/lazycluster" ["l"="25.077,34.074"]
"aangelopoulos/rcps" ["l"="25.915,34.204"]
"msesia/arc" ["l"="25.893,34.203"]
"cainsmile/GA_for_Feature_Selection" ["l"="26.019,33.805"]
"weepon/feature_selection" ["l"="26.041,33.802"]
"luckyerdog/feature_select" ["l"="26.026,33.789"]
"intake/filesystem_spec" ["l"="25.053,33.732"]
"dask/gcsfs" ["l"="25.087,33.742"]
"danielfrg/s3contents" ["l"="24.96,33.717"]
"PyFilesystem/s3fs" ["l"="22.686,3.759"]
"datapane/datapane" ["l"="25.539,34.142"]
"datapane/gallery" ["l"="25.576,34.192"]
"evidence-dev/evidence" ["l"="13.739,23.613"]
"Kanaries/graphic-walker" ["l"="34.809,-28.255"]
"simonw/sqlite-utils" ["l"="-11.776,-17.555"]
"tkrabel/edaviz" ["l"="25.608,33.995"]
"chris1610/sidetable" ["l"="21.116,28.796"]
"iterative/dvc.org" ["l"="25.52,34.372"]
"iterative/dvclive" ["l"="25.52,34.331"]
"iterative/blog" ["l"="25.528,34.4"]
"iterative/gto" ["l"="25.504,34.337"]
"hughsalimbeni/bayesian_benchmarks" ["l"="25.645,33.302"]
"thjashin/gp-infer-net" ["l"="24.109,34.583"]
"thjashin/spectral-stein-grad" ["l"="24.128,34.577"]
"quantumblacklabs/kedro-docker" ["l"="25.029,34.037"]
"quantumblacklabs/kedro-examples" ["l"="25.048,34.038"]
"quantumblacklabs/kedro-airflow" ["l"="25.02,34.021"]
"quantumblacklabs/kedro-ui" ["l"="25.043,34.024"]
"Galileo-Galilei/kedro-mlflow" ["l"="25.008,34.062"]
"quantumblacklabs/qb-styles" ["l"="25.051,34.013"]
"kserve/modelmesh" ["l"="25.254,34.257"]
"ydataai/ydata-profiling" ["l"="25.596,34.305"]
"ydataai/ydata-quality" ["l"="25.619,34.384"]
"dask/dask-searchcv" ["l"="25.429,33.705"]
"dask/dask-xgboost" ["l"="25.249,33.726"]
"megantosh/fairness_measures_code" ["l"="25.955,34.131"]
"invinst/chicago-police-data" ["l"="15.153,-30.52"]
"themarshallproject/COVID_prison_data" ["l"="25.946,34.121"]
"Thenerdstation/mltest" ["l"="24.937,34.09"]
"suriyadeepan/torchtest" ["l"="24.886,34.095"]
"ChristianSch/numerflow" ["l"="22.926,37.863"]
"RobThree/MongoRepository" ["l"="24.957,34.927"]
"g0t4/aspnet-identity-mongo" ["l"="24.97,34.95"]
"primaryobjects/MongoDragons" ["l"="24.927,34.942"]
"esendir/MongoRepository" ["l"="24.917,34.927"]
"g0t4/aspnet-identity-mongo-sample" ["l"="24.95,34.953"]
"loresoft/MongoDB.Messaging" ["l"="24.933,34.912"]
"InspectorIT/MongoDB.AspNet.Identity" ["l"="24.945,34.972"]
"Yoast/YoastSEO.js" ["l"="25.851,34.367"]
"keras-team/governance" ["l"="25.788,34.277"]
"netrack/keras-metrics" ["l"="25.789,34.302"]
"keras-team/keras-nlp" ["l"="22.632,29.601"]
"keras-team/keras-docs-zh" ["l"="23.931,31.224"]
"tmadl/highdimensional-decision-boundary-plot" ["l"="25.925,33.872"]
"wdm0006/categorical_encoding" ["l"="25.887,33.874"]
"automl/ParameterImportance" ["l"="25.792,33.518"]
"HazyResearch/data-centric-ai" ["l"="25.532,34.347"]
"data-centric-ai/dcbench" ["l"="25.554,34.399"]
"robustness-gym/robustness-gym" ["l"="29.607,32.409"]
"daochenzha/data-centric-AI" ["l"="27.498,31.313"]
"GEM-benchmark/NL-Augmenter" ["l"="29.619,32.452"]
"cgnorthcutt/cleanlab" ["l"="33.981,36.726"]
"subeeshvasu/Awesome-Learning-with-Label-Noise" ["l"="33.927,36.74"]
"jacopotagliabue/reclist" ["l"="25.472,34.398"]
"zzsza/Boostcamp-AI-Tech-Product-Serving" ["l"="44.527,-15.104"]
"tunib-ai/large-scale-lm-tutorials" ["l"="44.459,-15.148"]
"zenml-io/zenfiles" ["l"="25.405,34.584"]
"gregtam/interpreting-decision-trees-and-random-forests" ["l"="25.872,33.914"]
"limexp/xgbfir" ["l"="22.788,37.461"]
"hamrel-cxu/EnbPI" ["l"="25.881,34.199"]
"zeyiwen/thundergbm" ["l"="25.635,33.693"]
"thomaskeck/FastBDT" ["l"="22.852,37.459"]
"mirceamironenco/BayesianRecurrentNN" ["l"="23.931,34.724"]
"kubeflow/community" ["l"="-9.322,2.812"]
"Evolving-AI-Lab/fooling" ["l"="25.952,33.291"]
"tabacof/adversarial" ["l"="25.971,33.26"]
"Evolving-AI-Lab/innovation-engine" ["l"="25.979,33.279"]
"dfm/daft" ["l"="25.4,33.433"]
"DartML/Stein-Variational-Gradient-Descent" ["l"="25.194,32.738"]
"dpkingma/nips14-ssl" ["l"="25.064,32.748"]
"PetarV-/TikZ" ["l"="7.276,9.25"]
"rlouf/mcx" ["l"="23.565,33.854"]
"enalisnick/stick-breaking_dgms" ["l"="25.374,33.437"]
"jvkersch/hsmmlearn" ["l"="25.479,33.361"]
"albietz/online_hmm" ["l"="25.476,33.316"]
"hopshadoop/hops" ["l"="25.202,34.311"]
"logicalclocks/rondb" ["l"="25.179,34.31"]
"logicalclocks/feature-store-api" ["l"="25.2,34.298"]
"featurestoreorg/serverless-ml-course" ["l"="25.224,34.292"]
"logicalclocks/hops-examples" ["l"="25.188,34.288"]
"hopshadoop/hopsworks" ["l"="25.222,34.313"]
"StatMixedML/DGBM" ["l"="25.885,34.054"]
"tblume1992/LazyProphet" ["l"="25.826,34.024"]
"amogorkon/fuzzylogic" ["l"="25.321,33.546"]
"aresio/simpful" ["l"="25.309,33.558"]
"GBDT-PL/GBDT-PL" ["l"="25.935,34.061"]
"erdogant/hgboost" ["l"="25.852,33.996"]
"winedarksea/AutoTS" ["l"="22.493,36.043"]
"sktime/sktime" ["l"="22.413,36.028"]
"scikit-fuzzy/scikit-fuzzy" ["l"="25.365,33.579"]
"twmeggs/anfis" ["l"="25.271,33.52"]
"tiagoCuervo/TensorANFIS" ["l"="25.291,33.524"]
"fuzzylite/fuzzylite" ["l"="25.257,33.47"]
"jfpower/anfis-pytorch" ["l"="25.291,33.538"]
"omadson/fuzzy-c-means" ["l"="25.325,33.525"]
"fuzzylite/pyfuzzylite" ["l"="25.299,33.508"]
"scipy-conference/scipy2013_talks" ["l"="25.331,33.563"]
"ja-thomas/autoxgboost" ["l"="26.251,33.519"]
"mlr-org/shinyMlr" ["l"="26.287,33.509"]
"cdpierse/transformers-interpret" ["l"="29.536,32.488"]
"KennethEnevoldsen/augmenty" ["l"="29.396,32.568"]
"CalculatedContent/WeightWatcher" ["l"="29.471,32.463"]
"neuspell/neuspell" ["l"="31.564,28.504"]
"oborchers/Fast_Sentence_Embeddings" ["l"="29.697,32.606"]
"ReviewNB/support" ["l"="25.113,33.945"]
"bgreenwell/fastshap" ["l"="26.073,34.068"]
"davidstutz/tensorflow-cpp-op-example" ["l"="25.603,34.341"]
"tengkz/tensorflow_notes" ["l"="22.554,37.056"]
"Qihoo360/tensornet" ["l"="22.617,37.069"]
"jiazhihao/TASO" ["l"="27.694,35.526"]
"tensorflow/profiler-ui" ["l"="27.832,35.249"]
"tensorflow/docs-l10n" ["l"="25.701,34.395"]
"keras-team/keras-io" ["l"="22.613,29.564"]
"tensorflow/mlir-hlo" ["l"="27.705,35.561"]
"FarrellDay/miceRanger" ["l"="25.904,33.948"]
"manuel-calzolari/shapicant" ["l"="25.832,33.834"]
"rodrigo-arenas/Sklearn-genetic-opt" ["l"="25.841,33.821"]
"chasedehan/BoostARoota" ["l"="25.887,33.787"]
"koaning/clumper" ["l"="25.769,34.18"]
"MAIF/eurybia" ["l"="25.685,34.169"]
"DFKI-NLP/thermostat" ["l"="29.418,32.522"]
"webis-de/small-text" ["l"="29.462,32.508"]
"explosion/floret" ["l"="29.326,32.619"]
"HoloClean/holoclean" ["l"="25.232,29.831"]
"Alex-Lekov/AutoML_Alex" ["l"="25.703,34.087"]
"amitness/toolbox" ["l"="-17.939,-32.996"]
"pengutronix/aiohttp-json-rpc" ["l"="24.255,33.442"]
"SheffieldML/vargplvm" ["l"="25.559,33.232"]
"sods/netlab" ["l"="25.55,33.248"]
"shaypal5/pdpipe" ["l"="25.931,33.788"]
"jwkvam/bowtie" ["l"="21.541,28.872"]
"ogozuacik/one-class-drift-detection" ["l"="24.952,34.118"]
"tkamishima/kamfadm" ["l"="25.9,34.1"]
"wangyongjie-ntu/CFAI" ["l"="25.999,34.178"]
"ustunb/actionable-recourse" ["l"="26.034,34.13"]
"logicalclocks/hops-util-py" ["l"="25.151,34.306"]
"mattjj/pybasicbayes" ["l"="25.471,33.393"]
"mattjj/pyhsmm-autoregressive" ["l"="25.475,33.409"]
"slinderman/pypolyagamma" ["l"="25.457,33.361"]
"mattjj/pylds" ["l"="28.292,37.617"]
"jacopotagliabue/recs-at-resonable-scale" ["l"="25.465,34.381"]
"RecList/evalRS-CIKM-2022" ["l"="25.465,34.445"]
"jacopotagliabue/post-modern-stack" ["l"="25.449,34.378"]
"jacopotagliabue/FREE_7773" ["l"="25.493,34.391"]
"NVIDIA-Merlin/Merlin" ["l"="22.67,36.947"]
"coveooss/SIGIR-ecom-data-challenge" ["l"="22.646,36.844"]
"rn5l/session-rec" ["l"="22.892,36.984"]
"NVIDIA-Merlin/Transformers4Rec" ["l"="22.748,36.966"]
"NVIDIA-Merlin/models" ["l"="22.68,36.928"]
"vinid/cade" ["l"="25.484,34.458"]
"jacopotagliabue/paas-data-ingestion" ["l"="25.447,34.393"]
"MilaNLProc/twitter-demographer" ["l"="25.487,34.444"]
"fpetru/WebApiMongoDB" ["l"="25.025,34.953"]
"tugberkugurlu/AspNetCore.Identity.MongoDB" ["l"="25.009,34.932"]
"blue-yonder/pyscaffold" ["l"="24.977,33.782"]
"blue-yonder/pydse" ["l"="24.934,33.778"]
"gonenhila/gender_bias_lipstick" ["l"="26.093,34.24"]
"TManzini/DebiasMulticlassWordEmbedding" ["l"="26.103,34.23"]
"uclanlp/reducingbias" ["l"="26.137,34.234"]
"uclanlp/gn_glove" ["l"="26.115,34.222"]
"uclanlp/corefBias" ["l"="26.101,34.253"]
"ResponsiblyAI/responsibly" ["l"="26.121,34.247"]
"zerokol/eFLL" ["l"="25.216,33.441"]
"pcingola/jFuzzyLogic" ["l"="25.235,33.43"]
"ranaroussi/pystore" ["l"="21.851,32.826"]
"rec/safer" ["l"="-9.156,-18.641"]
"bytewax/bytewax" ["l"="13.762,23.403"]
"faust-streaming/faust" ["l"="22.825,3.534"]
"hi-primus/optimus" ["l"="25.131,33.97"]
"maxiomtech/MongoDB.AspNet.Identity" ["l"="24.994,34.953"]
"EpistasisLab/penn-ml-benchmarks" ["l"="25.832,33.733"]
"rhiever/sklearn-benchmarks" ["l"="25.92,33.677"]
"EpistasisLab/ReBATE" ["l"="25.826,33.785"]
"dylan-profiler/visions" ["l"="25.744,34.247"]
"ing-bank/sparse_dot_topn" ["l"="29.355,32.644"]
"histogrammar/histogrammar-python" ["l"="25.689,34.183"]
"KaveIO/PhiK" ["l"="25.706,34.191"]
"zinggAI/zingg" ["l"="13.786,23.622"]
"allegroai/clearml-serving" ["l"="25.219,34.356"]
"allegroai/clearml-agent" ["l"="25.237,34.356"]
"benoitc/gaffer" ["l"="24.612,33.275"]
"benoitc/socketpool" ["l"="24.624,33.317"]
"mcleonard/sampyl" ["l"="23.641,34.005"]
"aloctavodia/Doing_bayesian_data_analysis" ["l"="23.768,33.885"]
"dfm/savefig" ["l"="25.393,33.4"]
"mcmcplotlib/mcmcplotlib" ["l"="25.381,33.385"]
"DeltaAnalytics/machine_learning_resources" ["l"="26.118,33.993"]
"DanaJomar/PyALE" ["l"="25.927,33.94"]
"machine-learning-exchange/katalog" ["l"="25.326,34.294"]
"IBM/coursera" ["l"="25.991,34.76"]
"romeokienzler/developerWorks" ["l"="26.015,34.787"]
"SkymindIO/dsx" ["l"="25.99,34.783"]
"SC4RECOIN/FlowAlgo-Options-Trader" ["l"="24.85,34.394"]
"michaelchu/optopsy" ["l"="21.932,32.736"]
"hfwebbed/Stock-Option-Analytics" ["l"="24.861,34.379"]
"Yoast/javascript" ["l"="25.908,34.398"]
"arslanmughal5566/packlizer" ["l"="25.871,34.406"]
"arslanmughal5566/python_pricealert_webapp-" ["l"="25.871,34.395"]
"arslanmughal5566/Interceptor" ["l"="25.885,34.393"]
"arslanmughal5566/phisher" ["l"="25.864,34.402"]
"arslanmughal5566/DNS-SPOOFER" ["l"="25.877,34.392"]
"arslanmughal5566/facebook_phishing" ["l"="25.875,34.4"]
"robber5/wifi-killer" ["l"="25.883,34.402"]
"slds-lmu/yahpo_gym" ["l"="25.777,33.606"]
"aws/sagemaker-pytorch-inference-toolkit" ["l"="-10.456,-1.739"]
"awslabs/sagemaker-debugger" ["l"="-10.528,-1.747"]
"amzn/xfer" ["l"="25.22,33.357"]
"amzn/MXFusion" ["l"="25.265,33.407"]
"akelleh/causality" ["l"="23.731,33.175"]
"kushagra06/CS228_PGM" ["l"="25.319,33.432"]
"undeadpixel/reinvent-scaffold-decorator" ["l"="17.215,37.735"]
"mcapuccini/scala-cp" ["l"="25.877,34.21"]
"MolecularAI/Reinvent" ["l"="17.265,37.74"]
"ptocca/VennABERS" ["l"="25.893,34.215"]
"Minyus/pipelinex" ["l"="24.922,34.05"]
"tamsanh/kedro-great" ["l"="24.938,34.062"]
"rivolli/mfe" ["l"="25.966,33.798"]
"lpfgarcia/ECoL" ["l"="25.975,33.785"]
"tiagobotari/melime" ["l"="25.96,33.781"]
"victorhb/ImbCoL" ["l"="25.954,33.793"]
"brianrho/fpmatch" ["l"="25.911,34.442"]
"divyat09/cf-feasibility" ["l"="26.006,34.108"]
"souzartn/IdentityServer4.Samples.Mongo" ["l"="25.048,34.91"]
"henningst/IdentityServer4-MongoDB-Sample" ["l"="25.068,34.927"]
"diogodamiani/IdentityServer4.Contrib.MongoDB" ["l"="25.039,34.928"]
"google/caliban" ["l"="19.98,43.46"]
"loglabs/mltrace" ["l"="25.394,34.292"]
"google/objax" ["l"="23.487,33.745"]
"srush/streambook" ["l"="-37.591,-17.564"]
"chiphuyen/just-pandas-things" ["l"="23.829,30.437"]
"cvxgrp/pymde" ["l"="28.709,31.425"]
"alibaba/feathub" ["l"="11.707,23.83"]
"d6t/d6tjoin" ["l"="25.099,33.861"]
"Confusezius/Deep-Metric-Learning-Baselines" ["l"="33.566,34.24"]
"jlsuarezdiaz/pyDML" ["l"="25.863,33.927"]
"bnu-wangxun/Deep_Metric" ["l"="33.533,34.249"]
"kdhht2334/Survey_of_Deep_Metric_Learning" ["l"="33.562,34.26"]
"KevinMusgrave/pytorch-metric-learning" ["l"="34.341,35.861"]
"MalongTech/research-ms-loss" ["l"="33.58,34.247"]
"logicalclocks/hopsworks-api" ["l"="25.2,34.287"]
"cmunch1/nba-prediction" ["l"="25.192,34.325"]
"iterative/vscode-dvc" ["l"="25.529,34.32"]
"koaning/simsity" ["l"="25.802,34.227"]
"koaning/scikit-partial" ["l"="25.776,34.202"]
"bwilbertz/RLightGBM" ["l"="26.037,33.671"]
"caprice-j/ggbash" ["l"="26.058,33.676"]
"tomerfiliba-org/rpyc" ["l"="24.723,33.504"]
"edublancas/sklearn-evaluation" ["l"="25.903,33.894"]
"crhairr/EntityFrameworkCore.MongoDb" ["l"="25.013,34.973"]
"jphall663/xai_misconceptions" ["l"="25.884,33.959"]
"schelterlabs/jenga" ["l"="25.907,33.875"]
"hi-primus/bumblebee" ["l"="25.08,33.97"]
"ModelChimp/modelchimp" ["l"="25.044,34.07"]
"rapidsai/clx" ["l"="24.954,33.868"]
"NVIDIA/Morpheus" ["l"="24.911,33.871"]
"nv-morpheus/SRF" ["l"="24.923,33.859"]
"atif-hassan/FRUFS" ["l"="25.738,34.191"]
"EpistasisLab/scikit-mdr" ["l"="25.864,33.812"]
"simai-ml/MAPIE" ["l"="25.788,34.14"]
"Quantmetry/grand-debat" ["l"="25.777,34.131"]
"Quantmetry/pipeasy-spark" ["l"="25.801,34.141"]
"Quantmetry/awesome_quantmetry" ["l"="25.79,34.129"]
"salimamoukou/acv00" ["l"="25.733,34.17"]
"dme65/pySOT" ["l"="-11.473,29.218"]
"kirthevasank/nasbot" ["l"="25.678,33.518"]
"kirthevasank/mf-gp-ucb" ["l"="25.651,33.55"]
"hopshadoop/hopsworks-chef" ["l"="25.198,34.338"]
"ianozsvald/data_science_delivered" ["l"="25.818,33.869"]
"ericmjl/bayesian-analysis-recipes" ["l"="23.764,33.904"]
"ianozsvald/featherweight_web_api" ["l"="25.909,33.847"]
"aloctavodia/Statistical-Rethinking-with-Python-and-PyMC3" ["l"="23.776,33.869"]
"linkedin/LiFT" ["l"="25.773,34.254"]
"tensorflow/model-remediation" ["l"="25.748,34.21"]
"tensorflow/tfx-bsl" ["l"="25.748,34.227"]
"predict-idlab/powershap" ["l"="22.566,36.156"]
"AutoViML/deep_autoviml" ["l"="25.736,34.02"]
"shaypal5/cachier" ["l"="26.136,33.724"]
"shaypal5/s3bp" ["l"="26.045,33.752"]
"AgnostiqHQ/covalent" ["l"="25.266,34.479"]
"automl/labwatch" ["l"="25.113,33.985"]
"WinVector/pyvtreat" ["l"="26.114,34.034"]
"mo-esmp/DynamicRoleBasedAuthorizationNETCore" ["l"="25.653,17.47"]
"AdaTheDev/MongoDB-ASP.NET-Session-State-Store" ["l"="24.883,34.993"]
"marcosb/MongoDB.Web" ["l"="24.909,35.017"]
"alanning/MongoProviders" ["l"="24.867,35.006"]
"mlrun/demos" ["l"="25.337,34.319"]
"mlrun/functions" ["l"="25.344,34.303"]
"nuclio/nuclio" ["l"="-11.034,-0.091"]
"pangeo-data/rechunker" ["l"="19.013,28.102"]
"dask/dask-drmaa" ["l"="21.957,33.753"]
"dylan-profiler/compressio" ["l"="25.77,34.286"]
"Oracen/MIDAS" ["l"="25.939,33.887"]
"oneapi-src/oneDAL" ["l"="26.463,35.561"]
"IntelPython/scikit-learn_bench" ["l"="26.41,35.566"]
"duvenaud/phd-thesis" ["l"="25.334,33.367"]
"jamesrobertlloyd/gpss-research" ["l"="25.353,33.361"]
"gditzler/ConceptDriftData" ["l"="24.878,34.136"]
"mcguires5/AttackingLearnPP.NSE" ["l"="24.889,34.142"]
"FeatureLabs/categorical_encoding" ["l"="25.982,34.204"]
"FeatureLabs/compose-ml" ["l"="26.02,34.239"]
"FeatureLabs/nlp_primitives" ["l"="25.915,34.154"]
"FeatureLabs/autonormalize" ["l"="25.99,34.214"]
"jmschrei/yahmm" ["l"="25.448,33.411"]
"TeamHG-Memex/sklearn-crfsuite" ["l"="26.697,34.129"]
"scrapinghub/python-crfsuite" ["l"="26.748,34.129"]
"sklearn-theano/sklearn-theano" ["l"="27.04,34.149"]
"Mendeley/mrec" ["l"="22.974,37.212"]
"honnibal/spaCy" ["l"="21.733,28.836"]
"jupyterhub/jupyter-server-proxy" ["l"="21.164,28.794"]
"fcollonval/jupyter_conda" ["l"="21.169,28.898"]
"TomAugspurger/skmca" ["l"="25.901,33.859"]
"mllg/batchtools" ["l"="26.237,33.472"]
"HenrikBengtsson/future.batchtools" ["l"="26.257,33.455"]
"rdatsci/rt" ["l"="26.217,33.493"]
"tudo-r/BatchJobs" ["l"="26.194,33.507"]
"dssg/fairness_tutorial" ["l"="25.931,34.084"]
"brunohbrito/MongoDB-RepositoryUoWPatterns" ["l"="24.992,34.86"]
"ldv1/LinXGBoost" ["l"="26.01,34.088"]
"remiadon/streamz-ml" ["l"="25.825,34.164"]
"DataExMachina/micro-immo" ["l"="25.826,34.157"]
"TuringLang/TuringGLM.jl" ["l"="17.116,39.149"]
"andrewheiss/heiss-causal-inference" ["l"="25.674,33.402"]
"Alex-Lekov/AutoML-Benchmark" ["l"="25.718,34.128"]
"DeepLearningDTU/Summerschool_2015" ["l"="25.473,34.83"]
"hortonworks-spark/spark-schema-registry" ["l"="26.133,33.669"]
"jonnor/embeddedml" ["l"="25.892,33.618"]
"flyteorg/flytekit" ["l"="25.382,34.38"]
"JDASoftwareGroup/kartothek" ["l"="24.985,33.749"]
"blue-yonder/sqlalchemy_exasol" ["l"="25.017,33.787"]
"chmp/framequery" ["l"="25.014,33.764"]
"maartenbreddels/vaex" ["l"="21.405,28.815"]
"dcai-course/dcai-course" ["l"="25.327,34.835"]
"outcastofmusic/quick-nlp" ["l"="30.118,32.639"]
"szilard/teach-data-science-UCLA-master-appl-stats" ["l"="25.938,33.972"]
"alteryx/woodwork" ["l"="25.734,34.043"]
"thuijskens/production-tools" ["l"="26.081,33.789"]
"FilippoBovo/production-data-science" ["l"="26.15,33.775"]
"tonybaloney/wily" ["l"="23.101,3.675"]
"mattjj/pyslds" ["l"="28.307,37.6"]
"bnpy/bnpy" ["l"="29.101,35.666"]
"dillonalaird/pysvihmm" ["l"="25.451,33.387"]
"mattjj/svae" ["l"="25.189,32.709"]
"slinderman/ssm" ["l"="28.295,37.59"]
"kzhai/PyNPB" ["l"="30.613,33.909"]
"huggingface/speechbox" ["l"="27.679,31.154"]
"huggingface/hub.js" ["l"="25.726,34.258"]
"yahoo/samoa" ["l"="10.558,26.399"]
"dacbd/create-issue-action" ["l"="25.512,34.355"]
"ELS-RD/triton_transformers" ["l"="25.649,34.44"]
"microsoft/BackwardCompatibilityML" ["l"="25.921,34.123"]
"Azure/medical-imaging" ["l"="25.912,34.139"]
"jrbourbeau/hacking-dask" ["l"="25.155,33.73"]
"dask/dask-stories" ["l"="25.176,33.732"]
"Quansight/universal_pathlib" ["l"="25.029,33.712"]
"gregorLen/AnfisTensorflow2.0" ["l"="25.265,33.502"]
"akosiorek/forge" ["l"="25.61,34.117"]
"marcotcr/anchor-experiments" ["l"="25.853,33.975"]
"riccotti/LORE" ["l"="25.835,33.976"]
"vinid/quica" ["l"="25.489,34.479"]
"jmikko/fair_ERM" ["l"="25.943,34.106"]
"VectorInstitute/laftr" ["l"="25.959,34.11"]
"ACCLAB/dabestr" ["l"="26.149,33.908"]
"ACCLAB/DABEST-python" ["l"="26.053,33.918"]
"jacob-long/interactions" ["l"="26.261,33.897"]
"muneebsmh/hopsworks-integrations" ["l"="25.166,34.299"]
"logicalclocks/hopsworks-tutorials" ["l"="25.158,34.319"]
"HIPS/hypergrad" ["l"="25.869,33.232"]
"rasky/geventconnpool" ["l"="24.6,33.304"]
"lantanacamara/lightgbmExplainer" ["l"="26.026,33.976"]
"RainCloudPlots/RainCloudPlots" ["l"="20.083,43.392"]
"ACCLAB/DABEST-Matlab" ["l"="26.098,33.911"]
"probprog/pyprob" ["l"="25.331,33.495"]
"wohlert/semi-supervised-pytorch" ["l"="25.078,32.701"]
"ctallec/pyvarinf" ["l"="24.097,34.62"]
"ikostrikov/pytorch-flows" ["l"="23.233,33.93"]
"google-research/disentanglement_lib" ["l"="25.047,32.577"]
"jmtomczak/vae_vampprior" ["l"="25.071,32.631"]
"sootlasten/disentangled-representation-papers" ["l"="25.059,32.592"]
"rtqichen/beta-tcvae" ["l"="25.062,32.609"]
"riannevdberg/sylvester-flows" ["l"="23.242,33.942"]
"mmckerns/tutmom" ["l"="25.164,33.522"]
"mmckerns/tuthpc" ["l"="25.115,33.49"]
"mechmotum/cyipopt" ["l"="25.155,33.541"]
"Pyomo/pyomo" ["l"="27.825,41.972"]
"jonathf/chaospy" ["l"="-11.415,29.275"]
"esa/pygmo2" ["l"="24.89,38.285"]
"xuy/pyipopt" ["l"="27.851,41.998"]
"hopshadoop/hops-metadata-dal-impl-ndb" ["l"="25.17,34.331"]
"hopshadoop/hops-metadata-dal" ["l"="25.18,34.337"]
"flyteorg/flytesnacks" ["l"="25.377,34.419"]
"flyteorg/flytepropeller" ["l"="25.369,34.404"]
"ILMServices/RavenDB.AspNet.Identity" ["l"="24.952,35.005"]
"probprog/ppx" ["l"="25.299,33.456"]
"zenml-io/zenml-gitflow" ["l"="25.402,34.541"]
"zenml-io/zenml-projects" ["l"="25.39,34.531"]
"zenml-io/zenml-dashboard" ["l"="25.418,34.537"]
"automl/Squirrel-Optimizer-BBO-NeurIPS20-automlorg" ["l"="25.744,33.492"]
"rafiqhasan/auto-tensorflow" ["l"="25.813,34.078"]
"rapidsai/dask-cuml" ["l"="25.014,33.891"]
"enriquegrodrigo/spark-crowd" ["l"="25.348,33.297"]
"PGM-Lab/InferPy" ["l"="25.352,33.275"]
"intro-to-ml-with-kubeflow/intro-to-ml-with-kubeflow-examples" ["l"="23.862,30.192"]
"spotify/terraform-gke-kubeflow-cluster" ["l"="25.301,34.318"]
"kubeflow-kale/examples" ["l"="25.327,34.281"]
"provectus/sak-kubeflow" ["l"="13.981,23.641"]
"Quantmetry/qolmat" ["l"="25.816,34.171"]
"rmgarnett/gpml_extensions" ["l"="25.342,33.384"]
"automated-data-science/curumim-automl-sandbox" ["l"="26.003,33.772"]
"tidymodels/usemodels" ["l"="20.281,43.283"]
"tidymodels/themis" ["l"="20.311,43.322"]
"tidymodels/tidypredict" ["l"="20.324,43.335"]
"tidymodels/stacks" ["l"="20.289,43.352"]
"tidymodels/embed" ["l"="20.31,43.333"]
"secondmind-labs/markovflow" ["l"="25.638,33.466"]
"dataqa/dataqa" ["l"="25.515,34.485"]
"shreyashankar/toy-ml-pipeline" ["l"="22.176,-27.748"]
"data-engineering-collective/minimalkv" ["l"="24.95,33.75"]
"blue-yonder/storefact" ["l"="24.953,33.739"]
"Waikato/waikato-repositories" ["l"="24.878,34.181"]
"AlexIoannides/kubernetes-ml-ops" ["l"="25.509,34.584"]
"berndbischl/mlr" ["l"="26.15,33.523"]
"berndbischl/mlrMBO" ["l"="26.176,33.518"]
"tudo-r/BatchExperiments" ["l"="26.172,33.503"]
"berndbischl/BBmisc" ["l"="26.188,33.519"]
"HDI-Project/mit-d3m" ["l"="25.721,33.678"]
"terrytangyuan/awesome-kubeflow" ["l"="25.125,34.406"]
"deployKF/deployKF" ["l"="25.164,34.373"]
"jacob-long/panelr" ["l"="26.289,33.903"]
"ameybarapatre/ANFIS" ["l"="25.239,33.492"]
"balcilar/Anfis-from-scratch" ["l"="25.241,33.505"]
"airbus/decomon" ["l"="25.896,34.321"]
"ustunb/slim-python" ["l"="26.212,34.17"]
"tmadl/sklearn-random-rotation-ensembles" ["l"="25.876,33.895"]
"fmfn/UnbalancedDataset" ["l"="27.246,34.136"]
"makepath/xarray-spatial" ["l"="20.14,27.459"]
"holoviz/spatialpandas" ["l"="20.151,27.505"]
"gjoseph92/stackstac" ["l"="20.127,27.412"]
"corteva/geocube" ["l"="20.13,27.47"]
"anitagraser/movingpandas" ["l"="20.181,27.526"]
"dymaxionlabs/dask-rasterio" ["l"="25.119,33.862"]
"locationtech/rasterframes" ["l"="18.656,24.997"]
"geopandas/dask-geopandas" ["l"="20.144,27.482"]
"stac-utils/pystac" ["l"="20.154,27.412"]
"HTenkanen/pyrosm" ["l"="20.181,27.544"]
"HDI-Project/AutoBazaar" ["l"="25.727,33.668"]
"HDI-Project/ballet" ["l"="25.737,33.671"]
"drivendataorg/power-laws-cold-start" ["l"="26.241,34.007"]
"franckverrot/holycorn" ["l"="25,33.723"]
"d6t/d6tstack" ["l"="25.018,33.849"]
"kekeblom/DeepCGP" ["l"="25.674,33.299"]
"argoflow/argoflow-aws" ["l"="14.005,23.621"]
"alanning/MongoWSAT" ["l"="24.843,35.007"]
"getindata/kedro-kubeflow" ["l"="24.993,34.041"]
"Galileo-Galilei/kedro-mlflow-tutorial" ["l"="24.973,34.059"]
"datajoely/kedro-rich" ["l"="24.973,34.072"]
"tugberkugurlu/AspNet.Identity.RavenDB" ["l"="24.956,35.023"]
"IBM/jupyterlab-s3-browser" ["l"="24.911,33.712"]
"quantopian/pgcontents" ["l"="24.906,33.689"]
"jupyterlab/jupyterlab-commenting" ["l"="21.181,28.913"]
"ShilinHe/interpretableNLP" ["l"="25.944,34.161"]
"Cornerstone-OnDemand/modelkit" ["l"="25.4,34.392"]
"alipsgh/codes_for_moa" ["l"="24.976,34.099"]
"mblum/libgp" ["l"="25.817,33.413"]
"jonfink/GP" ["l"="25.808,33.402"]
"resibots/blackdrops" ["l"="25.833,33.426"]
"aporia-ai/inferencedb" ["l"="25.424,34.466"]
"aniruddhachoudhury/mlopsworld" ["l"="25.443,34.452"]
"dmatrix/tmls-workshop" ["l"="25.426,34.449"]
"HIPS/pgmult" ["l"="25.457,33.337"]
"shaypal5/skift" ["l"="14.648,-31.723"]
"Beta-10/embedded-fuzzy-logic" ["l"="25.196,33.422"]
"SheffieldML/GPc" ["l"="25.831,33.393"]
"karamelchef/karamel" ["l"="25.156,34.344"]
"linkedin/dynamometer" ["l"="23.051,37.374"]
"kedro-org/kedro-starters" ["l"="25.116,34.267"]
"jacob-long/jtools" ["l"="26.295,33.887"]
"explodinglabs/jsonrpcclient" ["l"="24.351,33.375"]
"msgpack/msgpack-rpc" ["l"="24.431,33.226"]
"msgpack/msgpack-idl" ["l"="24.427,33.205"]
"frsyuki/mpio" ["l"="24.463,33.256"]
"msgpack/msgpack-rpc-python" ["l"="24.403,33.213"]
"scverse/mudata" ["l"="25.992,33.891"]
"MI2DataLab/WildNLP" ["l"="26.063,34.102"]
"MI2DataLab/auditor" ["l"="26.095,34.119"]
"hbaniecki/awesome-adversarial-interpretable-machine-learning" ["l"="26.095,34.108"]
"Textalk/jquery.jsonrpcclient.js" ["l"="24.289,33.393"]
"gimmi/jsonrpcjs" ["l"="24.299,33.374"]
"hagino3000/jquery-jsonrpc2.0" ["l"="24.319,33.377"]
"automl/LCBench" ["l"="25.764,33.588"]
"biolab/orange3-educational" ["l"="25.237,33.755"]
"biolab/orange3-network" ["l"="25.227,33.743"]
"keitakurita/contextual_embedding_bias_measure" ["l"="26.134,34.185"]
"SAP/machine-learning-lab" ["l"="24.948,34.038"]
"cotect/covid-local-api" ["l"="24.993,34.055"]
"cotect/cotect" ["l"="24.961,34.047"]
"Featuretools/predict_next_purchase" ["l"="26.07,34.282"]
"Featuretools/Olympic-Games-Demo" ["l"="26.09,34.298"]
"thangbui/geepee" ["l"="25.59,33.274"]
"lyft/flyteadmin" ["l"="25.212,34.138"]
"lyft/flyteplugins" ["l"="25.195,34.146"]
"titu1994/progressive-neural-architecture-search" ["l"="28.47,34.331"]
"replicate/dreambooth-template" ["l"="25.567,34.534"]
"ADAEPFL/Labs" ["l"="25.451,33.06"]
"ADAEPFL/Notes" ["l"="25.465,33.06"]
"jwindle/BayesLogit" ["l"="25.448,33.323"]
"tamsanh/kedro-introduction-tutorial" ["l"="24.899,34.062"]
"tudo-r/dt" ["l"="26.239,33.49"]
"TutteInstitute/vectorizers" ["l"="25.944,34.299"]
}