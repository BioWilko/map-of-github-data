digraph G {
"likejazz/Siamese-LSTM" -> "aditya1503/Siamese-LSTM"
"likejazz/Siamese-LSTM" -> "amansrivastava17/lstm-siamese-text-similarity"
"likejazz/Siamese-LSTM" -> "tlatkowski/multihead-siamese-nets"
"likejazz/Siamese-LSTM" -> "fionn-mac/Manhattan-LSTM"
"likejazz/Siamese-LSTM" -> "MahmoudWahdan/Siamese-Sentence-Similarity"
"likejazz/Siamese-LSTM" -> "dhwajraj/deep-siamese-text-similarity"
"likejazz/Siamese-LSTM" -> "jx00109/siamese-lstm-for-sentence-similarity"
"likejazz/Siamese-LSTM" -> "LuJunru/Sentences_Pair_Similarity_Calculation_Siamese_LSTM"
"likejazz/Siamese-LSTM" -> "THTBSE/siamese-lstm-network"
"YichenGong/Densely-Interactive-Inference-Network" -> "YerevaNN/DIIN-in-Keras"
"YichenGong/Densely-Interactive-Inference-Network" -> "lukecq1231/nli"
"YichenGong/Densely-Interactive-Inference-Network" -> "taoshen58/DiSAN" ["e"=1]
"YichenGong/Densely-Interactive-Inference-Network" -> "zhiguowang/BiMPM"
"YichenGong/Densely-Interactive-Inference-Network" -> "erickrf/multiffn-nli"
"YichenGong/Densely-Interactive-Inference-Network" -> "nyu-mll/multiNLI"
"YichenGong/Densely-Interactive-Inference-Network" -> "lanwuwei/SPM_toolkit"
"YichenGong/Densely-Interactive-Inference-Network" -> "shuohangwang/SeqMatchSeq"
"hengruo/QANet-pytorch" -> "NLPLearn/QANet"
"hengruo/QANet-pytorch" -> "andy840314/QANet-pytorch-"
"hengruo/QANet-pytorch" -> "matthew-z/R-net"
"hengruo/QANet-pytorch" -> "jojonki/BiDAF"
"hengruo/QANet-pytorch" -> "kevinduh/san_mrc"
"hengruo/QANet-pytorch" -> "HKUST-KnowComp/R-Net"
"hengruo/QANet-pytorch" -> "lixinsu/RCZoo"
"hengruo/QANet-pytorch" -> "SeanLee97/QANet_dureader"
"hengruo/QANet-pytorch" -> "intfloat/commonsense-rc"
"hengruo/QANet-pytorch" -> "bdhingra/ga-reader"
"hengruo/QANet-pytorch" -> "allenai/document-qa"
"hengruo/QANet-pytorch" -> "momohuang/FusionNet-NLI"
"hengruo/QANet-pytorch" -> "HKUST-KnowComp/MnemonicReader"
"hengruo/QANet-pytorch" -> "thunlp/OpenQA"
"hengruo/QANet-pytorch" -> "BangLiu/QANet-PyTorch"
"patil-suraj/question_generation" -> "teacherpeterpan/Question-Generation-Paper-List"
"patil-suraj/question_generation" -> "ramsrigouthamg/Questgen.ai"
"patil-suraj/question_generation" -> "KristiyanVachev/Question-Generation"
"patil-suraj/question_generation" -> "AMontgomerie/question_generator"
"patil-suraj/question_generation" -> "seanie12/Info-HCVAE"
"patil-suraj/question_generation" -> "xinyadu/nqg"
"patil-suraj/question_generation" -> "seanie12/neural-question-generation"
"patil-suraj/question_generation" -> "bloomsburyai/question-generation"
"patil-suraj/question_generation" -> "facebookresearch/DPR" ["e"=1]
"patil-suraj/question_generation" -> "bisheng/Awesome-QG"
"patil-suraj/question_generation" -> "danqi/acl2020-openqa-tutorial" ["e"=1]
"patil-suraj/question_generation" -> "magic282/NQG"
"patil-suraj/question_generation" -> "tunib-ai/parallelformers" ["e"=1]
"patil-suraj/question_generation" -> "artitw/text2text"
"patil-suraj/question_generation" -> "Maluuba/nlg-eval" ["e"=1]
"icoxfog417/graph-convolution-nlp" -> "ankit-ai/BertQA-Attention-on-Steroids"
"KristiyanVachev/Question-Generation" -> "patil-suraj/question_generation"
"KristiyanVachev/Question-Generation" -> "teacherpeterpan/Question-Generation-Paper-List"
"KristiyanVachev/Question-Generation" -> "ramsrigouthamg/Questgen.ai"
"KristiyanVachev/Question-Generation" -> "AMontgomerie/question_generator"
"KristiyanVachev/Question-Generation" -> "KristiyanVachev/Leaf-Question-Generation"
"KristiyanVachev/Question-Generation" -> "bloomsburyai/question-generation"
"KristiyanVachev/Question-Generation" -> "adityasarvaiya/Automatic_Question_Generation"
"KristiyanVachev/Question-Generation" -> "indrajithi/genquest"
"KristiyanVachev/Question-Generation" -> "ujjax/question-generation"
"KristiyanVachev/Question-Generation" -> "xinyadu/nqg"
"KristiyanVachev/Question-Generation" -> "artitw/text2text"
"KristiyanVachev/Question-Generation" -> "Yifan-Gao/Distractor-Generation-RACE"
"KristiyanVachev/Question-Generation" -> "GauthierDmn/question_generation"
"KristiyanVachev/Question-Generation" -> "YuxiXie/SG-Deep-Question-Generation"
"KristiyanVachev/Question-Generation" -> "sumehta/question-generation"
"cdqa-suite/cdQA" -> "cdqa-suite/cdQA-annotator"
"cdqa-suite/cdQA" -> "cdqa-suite/cdQA-ui"
"cdqa-suite/cdQA" -> "kamalkraj/BERT-SQuAD"
"cdqa-suite/cdQA" -> "Nagakiran1/Extending-Google-BERT-as-Question-and-Answering-model-and-Chatbot"
"cdqa-suite/cdQA" -> "deepset-ai/COVID-QA"
"cdqa-suite/cdQA" -> "deepset-ai/FARM" ["e"=1]
"cdqa-suite/cdQA" -> "ymcui/Chinese-RC-Datasets"
"cdqa-suite/cdQA" -> "l11x0m7/Question_Answering_Models"
"cdqa-suite/cdQA" -> "renatoviolin/Question-Answering-Albert-Electra" ["e"=1]
"cdqa-suite/cdQA" -> "deepset-ai/haystack" ["e"=1]
"cdqa-suite/cdQA" -> "chiayewken/bert-qa"
"cdqa-suite/cdQA" -> "facebookresearch/UnsupervisedQA"
"cdqa-suite/cdQA" -> "WenRichard/QAmodel-for-Retrievalchatbot" ["e"=1]
"cdqa-suite/cdQA" -> "kaushaltrivedi/fast-bert" ["e"=1]
"cdqa-suite/cdQA" -> "seriousran/awesome-qa"
"priya-dwivedi/cs224n-Squad-Project" -> "aswalin/SQuAD"
"priya-dwivedi/cs224n-Squad-Project" -> "chrischute/squad"
"priya-dwivedi/cs224n-Squad-Project" -> "Steven-Hewitt/QA-with-Tensorflow"
"priya-dwivedi/cs224n-Squad-Project" -> "allenai/bi-att-flow"
"priya-dwivedi/cs224n-Squad-Project" -> "NLPLearn/QANet"
"priya-dwivedi/cs224n-Squad-Project" -> "HKUST-KnowComp/R-Net"
"priya-dwivedi/cs224n-Squad-Project" -> "sachinbiradar9/Question-Answer-Selection"
"priya-dwivedi/cs224n-Squad-Project" -> "deepmipt/question_generation"
"priya-dwivedi/cs224n-Squad-Project" -> "abisee/cs224n-win18-squad"
"priya-dwivedi/cs224n-Squad-Project" -> "gzhami/nlp_qa_project"
"priya-dwivedi/cs224n-Squad-Project" -> "andrejonasson/dynamic-coattention-network-plus"
"priya-dwivedi/cs224n-Squad-Project" -> "ElizaLo/Question-Answering-based-on-SQuAD"
"priya-dwivedi/cs224n-Squad-Project" -> "allenai/document-qa"
"priya-dwivedi/cs224n-Squad-Project" -> "MurtyShikhar/Question-Answering"
"ZhangShiyue/QGforQA" -> "seanie12/neural-question-generation"
"ZhangShiyue/QGforQA" -> "PrekshaNema25/RefNet-QG"
"hitvoice/DrQA" -> "kevinduh/san_mrc"
"hitvoice/DrQA" -> "matthew-z/R-net"
"hitvoice/DrQA" -> "hengruo/QANet-pytorch"
"hitvoice/DrQA" -> "deepmind/narrativeqa"
"hitvoice/DrQA" -> "mandarjoshi90/triviaqa"
"hitvoice/DrQA" -> "HKUST-KnowComp/R-Net"
"hitvoice/DrQA" -> "facebookresearch/DrQA" ["e"=1]
"hitvoice/DrQA" -> "NLPLearn/QANet"
"hitvoice/DrQA" -> "allenai/document-qa"
"hitvoice/DrQA" -> "allenai/deep_qa"
"hitvoice/DrQA" -> "allenai/bi-att-flow"
"hitvoice/DrQA" -> "thunlp/OpenQA"
"hitvoice/DrQA" -> "salesforce/cove"
"hitvoice/DrQA" -> "YerevaNN/R-NET-in-Keras"
"hitvoice/DrQA" -> "Maluuba/newsqa"
"stanfordnlp/coqa-baselines" -> "momohuang/FlowQA"
"stanfordnlp/coqa-baselines" -> "Microsoft/SDNet"
"galsang/BiDAF-pytorch" -> "jojonki/BiDAF"
"galsang/BiDAF-pytorch" -> "matthew-z/R-net"
"galsang/BiDAF-pytorch" -> "woshiyyya/DFGN-pytorch"
"galsang/BiDAF-pytorch" -> "andy840314/QANet-pytorch-"
"galsang/BiDAF-pytorch" -> "allenai/bi-att-flow"
"galsang/BiDAF-pytorch" -> "kevinduh/san_mrc"
"galsang/BiDAF-pytorch" -> "BangLiu/QANet-PyTorch"
"galsang/BiDAF-pytorch" -> "ymcui/cmrc2019"
"galsang/BiDAF-pytorch" -> "hengruo/QANet-pytorch"
"galsang/BiDAF-pytorch" -> "kushalj001/pytorch-question-answering"
"galsang/BiDAF-pytorch" -> "hotpotqa/hotpot"
"galsang/BiDAF-pytorch" -> "huminghao16/MTMSN"
"galsang/BiDAF-pytorch" -> "kamalkraj/BERT-SQuAD"
"galsang/BiDAF-pytorch" -> "shmsw25/DecompRC"
"galsang/BiDAF-pytorch" -> "shuohangwang/comatch"
"shiningliang/MRC2018" -> "SeanLee97/QANet_dureader"
"shiningliang/MRC2018" -> "jingyihiter/myDuReader"
"shiningliang/MRC2018" -> "yanx27/DuReader_QANet_BiDAF"
"shiningliang/MRC2018" -> "HandsomeCao/BERT-Dureader"
"shiningliang/MRC2018" -> "312shan/rc_tf"
"shiningliang/MRC2018" -> "lxwuguang/G-Reader"
"danqi/rc-cnn-dailymail" -> "bdhingra/ga-reader"
"danqi/rc-cnn-dailymail" -> "rkadlec/asreader"
"danqi/rc-cnn-dailymail" -> "qizhex/RACE_AR_baselines"
"danqi/rc-cnn-dailymail" -> "thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" ["e"=1]
"danqi/rc-cnn-dailymail" -> "shuohangwang/SeqMatchSeq"
"danqi/rc-cnn-dailymail" -> "deepmind/rc-data" ["e"=1]
"danqi/rc-cnn-dailymail" -> "deepmind/narrativeqa"
"danqi/rc-cnn-dailymail" -> "carpedm20/attentive-reader-tensorflow" ["e"=1]
"danqi/rc-cnn-dailymail" -> "allenai/bi-att-flow"
"danqi/rc-cnn-dailymail" -> "ymcui/Chinese-RC-Dataset"
"mrqa/MRQA-Shared-Task-2019" -> "shmsw25/qa-hard-em"
"mrqa/MRQA-Shared-Task-2019" -> "alontalmor/MultiQA"
"mrqa/MRQA-Shared-Task-2019" -> "allenai/document-qa"
"mrqa/MRQA-Shared-Task-2019" -> "shuohangwang/mprc"
"mrqa/MRQA-Shared-Task-2019" -> "nelson-liu/contextual-repr-analysis" ["e"=1]
"mrqa/MRQA-Shared-Task-2019" -> "qipeng/golden-retriever"
"mrqa/MRQA-Shared-Task-2019" -> "shmsw25/DecompRC"
"mrqa/MRQA-Shared-Task-2019" -> "robinjia/adversarial-squad"
"mrqa/MRQA-Shared-Task-2019" -> "facebookresearch/SpanBERT" ["e"=1]
"allenai/bi-att-flow" -> "HKUST-KnowComp/R-Net"
"allenai/bi-att-flow" -> "NLPLearn/QANet"
"allenai/bi-att-flow" -> "baidu/DuReader"
"allenai/bi-att-flow" -> "facebookresearch/DrQA" ["e"=1]
"allenai/bi-att-flow" -> "shuohangwang/SeqMatchSeq"
"allenai/bi-att-flow" -> "allenai/bilm-tf" ["e"=1]
"allenai/bi-att-flow" -> "thunlp/RCPapers"
"allenai/bi-att-flow" -> "allenai/document-qa"
"allenai/bi-att-flow" -> "abisee/pointer-generator" ["e"=1]
"allenai/bi-att-flow" -> "minsangkim142/R-net"
"allenai/bi-att-flow" -> "zhiguowang/BiMPM"
"allenai/bi-att-flow" -> "facebookresearch/InferSent" ["e"=1]
"allenai/bi-att-flow" -> "galsang/BiDAF-pytorch"
"allenai/bi-att-flow" -> "openai/finetune-transformer-lm" ["e"=1]
"allenai/bi-att-flow" -> "facebook/MemNN" ["e"=1]
"AMontgomerie/question_generator" -> "patil-suraj/question_generation"
"AMontgomerie/question_generator" -> "artitw/text2text"
"AMontgomerie/question_generator" -> "KristiyanVachev/Question-Generation"
"AMontgomerie/question_generator" -> "GauthierDmn/question_generation"
"AMontgomerie/question_generator" -> "ramsrigouthamg/Questgen.ai"
"AMontgomerie/question_generator" -> "KristiyanVachev/Leaf-Question-Generation"
"AMontgomerie/question_generator" -> "teacherpeterpan/Question-Generation-Paper-List"
"thunlp/RCPapers" -> "thunlp/NREPapers" ["e"=1]
"thunlp/RCPapers" -> "thunlp/KRLPapers" ["e"=1]
"thunlp/RCPapers" -> "baidu/DuReader"
"thunlp/RCPapers" -> "allenai/bi-att-flow"
"thunlp/RCPapers" -> "NLPLearn/QANet"
"thunlp/RCPapers" -> "lixinsu/RCZoo"
"thunlp/RCPapers" -> "HKUST-KnowComp/R-Net"
"thunlp/RCPapers" -> "thunlp/PLMpapers" ["e"=1]
"thunlp/RCPapers" -> "thunlp/SCPapers" ["e"=1]
"thunlp/RCPapers" -> "ymcui/Chinese-RC-Datasets"
"thunlp/RCPapers" -> "Jiakui/awesome-bert" ["e"=1]
"thunlp/RCPapers" -> "basketballandlearn/Dureader-Bert"
"thunlp/RCPapers" -> "xanhho/Reading-Comprehension-Question-Answering-Papers"
"thunlp/RCPapers" -> "dapurv5/awesome-question-answering" ["e"=1]
"thunlp/RCPapers" -> "thunlp/NRLPapers" ["e"=1]
"zcgzcgzcg1/MRC_book" -> "microsoft/SDNet"
"zcgzcgzcg1/MRC_book" -> "xycforgithub/MultiTask-MRC"
"deepset-ai/COVID-QA" -> "gsarti/covid-papers-browser"
"deepset-ai/COVID-QA" -> "deepset-ai/FARM" ["e"=1]
"deepset-ai/COVID-QA" -> "castorini/covidex"
"deepset-ai/COVID-QA" -> "cdqa-suite/cdQA"
"deepset-ai/COVID-QA" -> "renatoviolin/Question-Answering-Albert-Electra" ["e"=1]
"deepset-ai/COVID-QA" -> "dmis-lab/bioasq-biobert" ["e"=1]
"deepset-ai/COVID-QA" -> "castorini/anserini-notebooks" ["e"=1]
"deepset-ai/COVID-QA" -> "elcronos/COVID-19"
"andrejonasson/dynamic-coattention-network-plus" -> "marshmelloX/dynamic-coattention-network"
"andrejonasson/dynamic-coattention-network-plus" -> "mjacar/tensorflow-dcn-plus"
"THUDM/CogQA" -> "woshiyyya/DFGN-pytorch"
"THUDM/CogQA" -> "hotpotqa/hotpot"
"THUDM/CogQA" -> "shmsw25/DecompRC"
"THUDM/CogQA" -> "rajarshd/Multi-Step-Reasoning"
"THUDM/CogQA" -> "INK-USC/KagNet" ["e"=1]
"THUDM/CogQA" -> "THUDM/CogKR"
"THUDM/CogQA" -> "OceanskySun/GraftNet" ["e"=1]
"THUDM/CogQA" -> "yicheng-w/CommonSenseMultiHopQA"
"THUDM/CogQA" -> "basketballandlearn/Dureader-Bert"
"THUDM/CogQA" -> "INK-USC/MHGRN" ["e"=1]
"THUDM/CogQA" -> "autoliuweijie/K-BERT" ["e"=1]
"THUDM/CogQA" -> "qipeng/golden-retriever"
"THUDM/CogQA" -> "malllabiisc/EmbedKGQA" ["e"=1]
"THUDM/CogQA" -> "xwhan/Knowledge-Aware-Reader" ["e"=1]
"THUDM/CogQA" -> "huminghao16/RE3QA"
"dhwajraj/deep-siamese-text-similarity" -> "amansrivastava17/lstm-siamese-text-similarity"
"dhwajraj/deep-siamese-text-similarity" -> "aditya1503/Siamese-LSTM"
"dhwajraj/deep-siamese-text-similarity" -> "THTBSE/siamese-lstm-network"
"dhwajraj/deep-siamese-text-similarity" -> "likejazz/Siamese-LSTM"
"dhwajraj/deep-siamese-text-similarity" -> "ATEC2018/deep-siamese-text-similarity" ["e"=1]
"dhwajraj/deep-siamese-text-similarity" -> "brmson/dataset-sts" ["e"=1]
"dhwajraj/deep-siamese-text-similarity" -> "NTMC-Community/MatchZoo" ["e"=1]
"dhwajraj/deep-siamese-text-similarity" -> "zhiguowang/BiMPM"
"dhwajraj/deep-siamese-text-similarity" -> "allenai/bilm-tf" ["e"=1]
"dhwajraj/deep-siamese-text-similarity" -> "pengshuang/Text-Similarity" ["e"=1]
"dhwajraj/deep-siamese-text-similarity" -> "jx00109/siamese-lstm-for-sentence-similarity"
"dhwajraj/deep-siamese-text-similarity" -> "tlatkowski/multihead-siamese-nets"
"dhwajraj/deep-siamese-text-similarity" -> "HouJP/kaggle-quora-question-pairs"
"dhwajraj/deep-siamese-text-similarity" -> "PrincetonML/SIF" ["e"=1]
"dhwajraj/deep-siamese-text-similarity" -> "faneshion/MatchZoo" ["e"=1]
"zhiguowang/BiMPM" -> "YichenGong/Densely-Interactive-Inference-Network"
"zhiguowang/BiMPM" -> "nelson-liu/paraphrase-id-tensorflow"
"zhiguowang/BiMPM" -> "shuohangwang/SeqMatchSeq"
"zhiguowang/BiMPM" -> "galsang/BIMPM-pytorch"
"zhiguowang/BiMPM" -> "erickrf/multiffn-nli"
"zhiguowang/BiMPM" -> "ijinmao/BiMPM_keras"
"zhiguowang/BiMPM" -> "lanwuwei/SPM_toolkit"
"zhiguowang/BiMPM" -> "bradleypallen/keras-quora-question-pairs"
"zhiguowang/BiMPM" -> "taoshen58/DiSAN" ["e"=1]
"zhiguowang/BiMPM" -> "HouJP/kaggle-quora-question-pairs"
"zhiguowang/BiMPM" -> "galsang/ABCNN" ["e"=1]
"zhiguowang/BiMPM" -> "lukecq1231/nli"
"zhiguowang/BiMPM" -> "mcrisc/lexdecomp"
"zhiguowang/BiMPM" -> "faneshion/MatchZoo" ["e"=1]
"zhiguowang/BiMPM" -> "HKUST-KnowComp/R-Net"
"HKUST-KnowComp/R-Net" -> "NLPLearn/QANet"
"HKUST-KnowComp/R-Net" -> "allenai/bi-att-flow"
"HKUST-KnowComp/R-Net" -> "HKUST-KnowComp/MnemonicReader"
"HKUST-KnowComp/R-Net" -> "YerevaNN/R-NET-in-Keras"
"HKUST-KnowComp/R-Net" -> "minsangkim142/R-net"
"HKUST-KnowComp/R-Net" -> "unilight/R-NET-in-Tensorflow"
"HKUST-KnowComp/R-Net" -> "allenai/document-qa"
"HKUST-KnowComp/R-Net" -> "matthew-z/R-net"
"HKUST-KnowComp/R-Net" -> "baidu/DuReader"
"HKUST-KnowComp/R-Net" -> "NLPLearn/R-net"
"HKUST-KnowComp/R-Net" -> "shuohangwang/SeqMatchSeq"
"HKUST-KnowComp/R-Net" -> "kevinduh/san_mrc"
"HKUST-KnowComp/R-Net" -> "momohuang/FusionNet-NLI"
"HKUST-KnowComp/R-Net" -> "hengruo/QANet-pytorch"
"HKUST-KnowComp/R-Net" -> "lixinsu/RCZoo"
"deepmipt/question_generation" -> "indrajithi/genquest"
"deepmipt/question_generation" -> "bloomsburyai/question-generation"
"deepmipt/question_generation" -> "xinyadu/nqg"
"deepmipt/question_generation" -> "sumehta/question-generation"
"deepmipt/question_generation" -> "dipta1010/Automatic-Question-Generator"
"deepmipt/question_generation" -> "Maluuba/qgen-workshop"
"deepmipt/question_generation" -> "ujjax/question-generation"
"deepmipt/question_generation" -> "magic282/NQG"
"deepmipt/question_generation" -> "davidgolub/QuestionGeneration"
"deepmipt/question_generation" -> "adityasarvaiya/Automatic_Question_Generation"
"xinyadu/nqg" -> "magic282/NQG"
"xinyadu/nqg" -> "seanie12/neural-question-generation"
"xinyadu/nqg" -> "deepmipt/question_generation"
"xinyadu/nqg" -> "teacherpeterpan/Question-Generation-Paper-List"
"xinyadu/nqg" -> "davidgolub/QuestionGeneration"
"xinyadu/nqg" -> "bloomsburyai/question-generation"
"xinyadu/nqg" -> "yanghoonkim/NQG_ASs2s"
"xinyadu/nqg" -> "freesunshine0316/MPQG"
"xinyadu/nqg" -> "ZhangShiyue/QGforQA"
"xinyadu/nqg" -> "Maluuba/newsqa"
"xinyadu/nqg" -> "indrajithi/genquest"
"xinyadu/nqg" -> "victorywys/Learning2Ask_TypedDecoder" ["e"=1]
"xinyadu/nqg" -> "patil-suraj/question_generation"
"xinyadu/nqg" -> "GauthierDmn/question_generation"
"xinyadu/nqg" -> "deepmind/narrativeqa"
"baidu/DuReader" -> "allenai/bi-att-flow"
"baidu/DuReader" -> "NLPLearn/QANet"
"baidu/DuReader" -> "HKUST-KnowComp/R-Net"
"baidu/DuReader" -> "SeanLee97/QANet_dureader"
"baidu/DuReader" -> "basketballandlearn/Dureader-Bert"
"baidu/DuReader" -> "thunlp/RCPapers"
"baidu/DuReader" -> "ymcui/cmrc2018"
"baidu/DuReader" -> "PaddlePaddle/LARK" ["e"=1]
"baidu/DuReader" -> "baidu/AnyQ" ["e"=1]
"baidu/DuReader" -> "brightmart/roberta_zh" ["e"=1]
"baidu/DuReader" -> "ymcui/Chinese-PreTrained-XLNet" ["e"=1]
"baidu/DuReader" -> "baidu/knowledge-driven-dialogue" ["e"=1]
"baidu/DuReader" -> "allenai/bilm-tf" ["e"=1]
"baidu/DuReader" -> "allenai/document-qa"
"baidu/DuReader" -> "shuohangwang/SeqMatchSeq"
"HouJP/kaggle-quora-question-pairs" -> "qqgeogor/kaggle-quora-solution-8th"
"HouJP/kaggle-quora-question-pairs" -> "bradleypallen/keras-quora-question-pairs"
"HouJP/kaggle-quora-question-pairs" -> "faneshion/MatchZoo" ["e"=1]
"HouJP/kaggle-quora-question-pairs" -> "chenyuntc/PyTorchText" ["e"=1]
"HouJP/kaggle-quora-question-pairs" -> "zhiguowang/BiMPM"
"HouJP/kaggle-quora-question-pairs" -> "YuriyGuts/kaggle-quora-question-pairs"
"HouJP/kaggle-quora-question-pairs" -> "abhishekkrthakur/is_that_a_duplicate_quora_question"
"HouJP/kaggle-quora-question-pairs" -> "lanwuwei/SPM_toolkit"
"HouJP/kaggle-quora-question-pairs" -> "Wrosinski/Kaggle-Quora"
"HouJP/kaggle-quora-question-pairs" -> "plantsgo/ijcai-2018" ["e"=1]
"HouJP/kaggle-quora-question-pairs" -> "SpongebBob/Quora-Kaggle"
"HouJP/kaggle-quora-question-pairs" -> "LittletreeZou/Question-Pairs-Matching" ["e"=1]
"HouJP/kaggle-quora-question-pairs" -> "pengshuang/Text-Similarity" ["e"=1]
"HouJP/kaggle-quora-question-pairs" -> "HKUST-KnowComp/R-Net"
"HouJP/kaggle-quora-question-pairs" -> "Magic-Bubble/Zhihu" ["e"=1]
"xycforgithub/MultiTask-MRC" -> "nlpdata/strategy"
"xycforgithub/MultiTask-MRC" -> "huminghao16/RE3QA"
"xycforgithub/MultiTask-MRC" -> "kevinduh/san_mrc"
"kamalkraj/BERT-SQuAD" -> "surbhardwaj/BERT-QnA-Squad_2.0_Finetuned_Model"
"kamalkraj/BERT-SQuAD" -> "galsang/BiDAF-pytorch"
"kamalkraj/BERT-SQuAD" -> "chrischute/squad"
"kamalkraj/BERT-SQuAD" -> "cdqa-suite/cdQA"
"kamalkraj/BERT-SQuAD" -> "cooelf/AwesomeMRC"
"kamalkraj/BERT-SQuAD" -> "seriousran/awesome-qa"
"kamalkraj/BERT-SQuAD" -> "hitvoice/DrQA"
"kamalkraj/BERT-SQuAD" -> "hotpotqa/hotpot"
"kamalkraj/BERT-SQuAD" -> "cooelf/SG-Net"
"kamalkraj/BERT-SQuAD" -> "chiayewken/bert-qa"
"kamalkraj/BERT-SQuAD" -> "rajpurkar/SQuAD-explorer"
"kamalkraj/BERT-SQuAD" -> "kamalkraj/ALBERT-TF2.0" ["e"=1]
"matthew-z/R-net" -> "laddie132/Match-LSTM"
"matthew-z/R-net" -> "HKUST-KnowComp/MnemonicReader"
"matthew-z/R-net" -> "HKUST-KnowComp/R-Net"
"matthew-z/R-net" -> "kevinduh/san_mrc"
"matthew-z/R-net" -> "unilight/R-NET-in-Tensorflow"
"matthew-z/R-net" -> "hengruo/QANet-pytorch"
"matthew-z/R-net" -> "kevinkwl/AoAReader"
"matthew-z/R-net" -> "galsang/BiDAF-pytorch"
"matthew-z/R-net" -> "andy840314/QANet-pytorch-"
"matthew-z/R-net" -> "SeanLee97/QANet_dureader"
"matthew-z/R-net" -> "obryanlouis/qa"
"matthew-z/R-net" -> "FudanNLP/UNet"
"matthew-z/R-net" -> "intfloat/commonsense-rc"
"matthew-z/R-net" -> "SparkJiao/SLQA"
"ymcui/cmrc2018" -> "ymcui/cmrc2019"
"ymcui/cmrc2018" -> "DRCKnowledgeTeam/DRCD" ["e"=1]
"ymcui/cmrc2018" -> "ymcui/Chinese-RC-Datasets"
"ymcui/cmrc2018" -> "ymcui/cmrc2017"
"ymcui/cmrc2018" -> "baidu/DuReader"
"ymcui/cmrc2018" -> "ymcui/Cross-Lingual-MRC"
"ymcui/cmrc2018" -> "ymcui/Chinese-PreTrained-XLNet" ["e"=1]
"ymcui/cmrc2018" -> "ewrfcas/bert_cn_finetune"
"ymcui/cmrc2018" -> "basketballandlearn/Dureader-Bert"
"ymcui/cmrc2018" -> "nlpdata/c3"
"ymcui/cmrc2018" -> "ymcui/MacBERT" ["e"=1]
"ymcui/cmrc2018" -> "SeanLee97/QANet_dureader"
"ymcui/cmrc2018" -> "lonePatient/NeZha_Chinese_PyTorch" ["e"=1]
"ymcui/cmrc2018" -> "ymcui/expmrc"
"ymcui/cmrc2018" -> "thunlp/RCPapers"
"SeanLee97/QANet_dureader" -> "shiningliang/MRC2018"
"SeanLee97/QANet_dureader" -> "yanx27/DuReader_QANet_BiDAF"
"SeanLee97/QANet_dureader" -> "HandsomeCao/BERT-Dureader"
"SeanLee97/QANet_dureader" -> "basketballandlearn/Dureader-Bert"
"SeanLee97/QANet_dureader" -> "baidu/DuReader"
"SeanLee97/QANet_dureader" -> "312shan/rc_tf"
"SeanLee97/QANet_dureader" -> "NLPLearn/QANet"
"SeanLee97/QANet_dureader" -> "jingyihiter/myDuReader"
"SeanLee97/QANet_dureader" -> "SunnyMarkLiu/lic2019-dureader2.0-rank2"
"SeanLee97/QANet_dureader" -> "xycforgithub/MultiTask-MRC"
"SeanLee97/QANet_dureader" -> "lixinsu/RCZoo"
"SeanLee97/QANet_dureader" -> "matthew-z/R-net"
"SeanLee97/QANet_dureader" -> "NLPLearn/R-net"
"SeanLee97/QANet_dureader" -> "ymcui/cmrc2019"
"SeanLee97/QANet_dureader" -> "NoneWait/cail2019" ["e"=1]
"basketballandlearn/Dureader-Bert" -> "SunnyMarkLiu/lic2019-dureader2.0-rank2"
"basketballandlearn/Dureader-Bert" -> "HandsomeCao/BERT-Dureader"
"basketballandlearn/Dureader-Bert" -> "NoneWait/cail2019" ["e"=1]
"basketballandlearn/Dureader-Bert" -> "YingZiqiang/LES-MMRC-Summary"
"basketballandlearn/Dureader-Bert" -> "SeanLee97/QANet_dureader"
"basketballandlearn/Dureader-Bert" -> "baidu/DuReader"
"basketballandlearn/Dureader-Bert" -> "trib-plan/TriB-QA"
"eliorc/Medium" -> "likejazz/Siamese-LSTM"
"eliorc/Medium" -> "aerdem4/kaggle-quora-dup"
"eliorc/Medium" -> "eliorc/node2vec" ["e"=1]
"eliorc/Medium" -> "HouJP/kaggle-quora-question-pairs"
"eliorc/Medium" -> "nelson-liu/paraphrase-id-tensorflow"
"HandsomeCao/BERT-Dureader" -> "basketballandlearn/Dureader-Bert"
"HandsomeCao/BERT-Dureader" -> "SunnyMarkLiu/lic2019-dureader2.0-rank2"
"HandsomeCao/BERT-Dureader" -> "SeanLee97/QANet_dureader"
"HandsomeCao/BERT-Dureader" -> "yanx27/DuReader_QANet_BiDAF"
"HandsomeCao/BERT-Dureader" -> "trib-plan/TriB-QA"
"HandsomeCao/BERT-Dureader" -> "NoneWait/cail2019" ["e"=1]
"NLPLearn/QANet" -> "HKUST-KnowComp/R-Net"
"NLPLearn/QANet" -> "NLPLearn/R-net"
"NLPLearn/QANet" -> "allenai/bi-att-flow"
"NLPLearn/QANet" -> "hengruo/QANet-pytorch"
"NLPLearn/QANet" -> "baidu/DuReader"
"NLPLearn/QANet" -> "SeanLee97/QANet_dureader"
"NLPLearn/QANet" -> "allenai/document-qa"
"NLPLearn/QANet" -> "thunlp/RCPapers"
"NLPLearn/QANet" -> "allenai/bilm-tf" ["e"=1]
"NLPLearn/QANet" -> "shuohangwang/SeqMatchSeq"
"NLPLearn/QANet" -> "zhiguowang/BiMPM"
"NLPLearn/QANet" -> "momohuang/FusionNet-NLI"
"NLPLearn/QANet" -> "openai/finetune-transformer-lm" ["e"=1]
"NLPLearn/QANet" -> "taoshen58/DiSAN" ["e"=1]
"NLPLearn/QANet" -> "kevinduh/san_mrc"
"SunnyMarkLiu/lic2019-dureader2.0-rank2" -> "basketballandlearn/Dureader-Bert"
"SunnyMarkLiu/lic2019-dureader2.0-rank2" -> "xwen99/DuReader-Robust-With-Paddlehub"
"SunnyMarkLiu/lic2019-dureader2.0-rank2" -> "trib-plan/TriB-QA"
"SunnyMarkLiu/lic2019-dureader2.0-rank2" -> "YingZiqiang/LES-MMRC-Summary"
"SunnyMarkLiu/lic2019-dureader2.0-rank2" -> "HandsomeCao/BERT-Dureader"
"SunnyMarkLiu/lic2019-dureader2.0-rank2" -> "NoneWait/cail2019" ["e"=1]
"ag1988/injecting_numeracy" -> "llamazing/numnet_plus"
"alontalmor/MultiQA" -> "shuohangwang/mprc"
"alontalmor/MultiQA" -> "yairf11/MUPPET"
"cooelf/AwesomeMRC" -> "cooelf/SG-Net"
"cooelf/AwesomeMRC" -> "cooelf/SemBERT"
"cooelf/AwesomeMRC" -> "huminghao16/MTMSN"
"cooelf/AwesomeMRC" -> "facebookresearch/SpanBERT" ["e"=1]
"cooelf/AwesomeMRC" -> "xwen99/DuReader-Robust-With-Paddlehub"
"cooelf/AwesomeMRC" -> "sogou/SogouMRCToolkit"
"cooelf/AwesomeMRC" -> "basketballandlearn/MRC_Competition_Dureader" ["e"=1]
"cooelf/AwesomeMRC" -> "facebookresearch/DPR" ["e"=1]
"cooelf/AwesomeMRC" -> "kevinduh/san_mrc"
"cooelf/AwesomeMRC" -> "songyingxin/MRC-Pytorch"
"cooelf/AwesomeMRC" -> "ShannonAI/mrc-for-flat-nested-ner" ["e"=1]
"cooelf/SemBERT" -> "cooelf/SG-Net"
"cooelf/SemBERT" -> "cooelf/AwesomeMRC"
"cooelf/SemBERT" -> "coetaur0/ESIM" ["e"=1]
"cooelf/SemBERT" -> "facebookresearch/SpanBERT" ["e"=1]
"easonnie/semanticRetrievalMRS" -> "yairf11/MUPPET"
"huminghao16/MTMSN" -> "eladsegal/tag-based-multi-span-extraction"
"huminghao16/MTMSN" -> "huminghao16/RE3QA"
"laddie132/Match-LSTM" -> "xingdi-eric-yuan/MatchLSTM-PyTorch"
"laddie132/Match-LSTM" -> "matthew-z/R-net"
"laddie132/Match-LSTM" -> "andy840314/QANet-pytorch-"
"rajarshd/Multi-Step-Reasoning" -> "huminghao16/RE3QA"
"rajarshd/Multi-Step-Reasoning" -> "shmsw25/DecompRC"
"rajarshd/Multi-Step-Reasoning" -> "shuohangwang/mprc"
"rajarshd/Multi-Step-Reasoning" -> "uwnlp/denspi"
"shmsw25/qa-hard-em" -> "facebookresearch/QA-Overlap" ["e"=1]
"shuohangwang/SeqMatchSeq" -> "zhiguowang/BiMPM"
"shuohangwang/SeqMatchSeq" -> "bdhingra/ga-reader"
"shuohangwang/SeqMatchSeq" -> "minsangkim142/R-net"
"shuohangwang/SeqMatchSeq" -> "HKUST-KnowComp/R-Net"
"shuohangwang/SeqMatchSeq" -> "erickrf/multiffn-nli"
"shuohangwang/SeqMatchSeq" -> "allenai/bi-att-flow"
"shuohangwang/SeqMatchSeq" -> "OlavHN/attention-over-attention"
"shuohangwang/SeqMatchSeq" -> "MurtyShikhar/Question-Answering"
"shuohangwang/SeqMatchSeq" -> "cheng6076/SNLI-attention" ["e"=1]
"shuohangwang/SeqMatchSeq" -> "laddie132/Match-LSTM"
"shuohangwang/SeqMatchSeq" -> "marshmelloX/dynamic-coattention-network"
"shuohangwang/SeqMatchSeq" -> "harvardnlp/decomp-attn"
"shuohangwang/SeqMatchSeq" -> "danqi/rc-cnn-dailymail"
"shuohangwang/SeqMatchSeq" -> "baidu/DuReader"
"shuohangwang/SeqMatchSeq" -> "YichenGong/Densely-Interactive-Inference-Network"
"shuohangwang/mprc" -> "yairf11/MUPPET"
"nlpdata/c3" -> "benywon/ReCO"
"HKUST-KnowComp/MnemonicReader" -> "kevinduh/san_mrc"
"HKUST-KnowComp/MnemonicReader" -> "HKUST-KnowComp/R-Net"
"HKUST-KnowComp/MnemonicReader" -> "matthew-z/R-net"
"HKUST-KnowComp/MnemonicReader" -> "lixinsu/RCZoo"
"HKUST-KnowComp/MnemonicReader" -> "laddie132/Match-LSTM"
"HKUST-KnowComp/MnemonicReader" -> "SparkJiao/SLQA"
"HKUST-KnowComp/MnemonicReader" -> "andy840314/QANet-pytorch-"
"HKUST-KnowComp/MnemonicReader" -> "allenai/document-qa"
"HKUST-KnowComp/MnemonicReader" -> "hackiey/QAnet-pytorch"
"SeanLee97/nlp_learning" -> "SeanLee97/QANet_dureader"
"ymcui/PERT" -> "ymcui/LERT"
"ymcui/PERT" -> "ymcui/MacBERT" ["e"=1]
"ymcui/PERT" -> "ymcui/expmrc"
"ymcui/PERT" -> "airaria/TextPruner" ["e"=1]
"ymcui/PERT" -> "iflytek/VLE"
"ymcui/PERT" -> "ymcui/cmrc2019"
"ymcui/PERT" -> "iflytek/MiniRBT"
"ymcui/PERT" -> "ymcui/alpaca.cpp"
"lanwuwei/SPM_toolkit" -> "YichenGong/Densely-Interactive-Inference-Network"
"lanwuwei/SPM_toolkit" -> "zhiguowang/BiMPM"
"lanwuwei/SPM_toolkit" -> "YerevaNN/DIIN-in-Keras"
"lanwuwei/SPM_toolkit" -> "lukecq1231/nli"
"lanwuwei/SPM_toolkit" -> "easonnie/multiNLI_encoder"
"lanwuwei/SPM_toolkit" -> "coetaur0/ESIM" ["e"=1]
"lanwuwei/SPM_toolkit" -> "thunlp/OpenQA"
"lanwuwei/SPM_toolkit" -> "HouJP/kaggle-quora-question-pairs"
"lanwuwei/SPM_toolkit" -> "xwzhong/papernote"
"lanwuwei/SPM_toolkit" -> "matthew-z/R-net"
"qqgeogor/kaggle-quora-solution-8th" -> "aerdem4/kaggle-quora-dup"
"qqgeogor/kaggle-quora-solution-8th" -> "Wrosinski/Kaggle-Quora"
"qqgeogor/kaggle-quora-solution-8th" -> "plantsgo/Rental-Listing-Inquiries"
"qqgeogor/kaggle-quora-solution-8th" -> "qqgeogor/kaggle_quora_benchmark"
"qqgeogor/kaggle-quora-solution-8th" -> "HouJP/kaggle-quora-question-pairs"
"qqgeogor/kaggle-quora-solution-8th" -> "sjvasquez/quora-duplicate-questions"
"qqgeogor/kaggle-quora-solution-8th" -> "bradleypallen/keras-quora-question-pairs"
"qqgeogor/kaggle-quora-solution-8th" -> "tnmichael309/kaggle-avito-demand-challenge"
"qqgeogor/kaggle-quora-solution-8th" -> "thinline72/toxic" ["e"=1]
"woshiyyya/DFGN-pytorch" -> "hotpotqa/hotpot"
"woshiyyya/DFGN-pytorch" -> "shmsw25/DecompRC"
"woshiyyya/DFGN-pytorch" -> "JD-AI-Research-Silicon-Valley/SAE"
"woshiyyya/DFGN-pytorch" -> "THUDM/CogQA"
"woshiyyya/DFGN-pytorch" -> "yuwfan/HGN"
"woshiyyya/DFGN-pytorch" -> "shmsw25/single-hop-rc"
"woshiyyya/DFGN-pytorch" -> "OceanskySun/GraftNet" ["e"=1]
"woshiyyya/DFGN-pytorch" -> "qipeng/golden-retriever"
"woshiyyya/DFGN-pytorch" -> "rajarshd/Multi-Step-Reasoning"
"woshiyyya/DFGN-pytorch" -> "easonnie/semanticRetrievalMRS"
"jx00109/siamese-lstm-for-sentence-similarity" -> "THTBSE/siamese-lstm-network"
"jx00109/siamese-lstm-for-sentence-similarity" -> "aditya1503/Siamese-LSTM"
"lukecq1231/nli" -> "coetaur0/ESIM" ["e"=1]
"lukecq1231/nli" -> "nyu-mll/multiNLI"
"lukecq1231/nli" -> "YichenGong/Densely-Interactive-Inference-Network"
"lukecq1231/nli" -> "erickrf/multiffn-nli"
"lukecq1231/nli" -> "lanwuwei/SPM_toolkit"
"lukecq1231/nli" -> "easonnie/multiNLI_encoder"
"lukecq1231/nli" -> "HsiaoYetGun/ESIM" ["e"=1]
"lukecq1231/nli" -> "pengshuang/Text-Similarity" ["e"=1]
"lukecq1231/nli" -> "zhiguowang/BiMPM"
"lukecq1231/nli" -> "lukecq1231/kim"
"lukecq1231/nli" -> "dallascard/TreeLSTM"
"lukecq1231/nli" -> "harvardnlp/decomp-attn"
"lukecq1231/nli" -> "taoshen58/DiSAN" ["e"=1]
"prdwb/bert_hae" -> "prdwb/attentive_history_selection"
"prdwb/bert_hae" -> "momohuang/FlowQA"
"prdwb/bert_hae" -> "deepnlp-cs599-usc/quac"
"ramsrigouthamg/Questgen.ai" -> "patil-suraj/question_generation"
"ramsrigouthamg/Questgen.ai" -> "KristiyanVachev/Question-Generation"
"ramsrigouthamg/Questgen.ai" -> "teacherpeterpan/Question-Generation-Paper-List"
"ramsrigouthamg/Questgen.ai" -> "artitw/text2text"
"ramsrigouthamg/Questgen.ai" -> "AMontgomerie/question_generator"
"ramsrigouthamg/Questgen.ai" -> "recognai/rubrix" ["e"=1]
"ramsrigouthamg/Questgen.ai" -> "Vamsi995/Paraphrase-Generator" ["e"=1]
"ramsrigouthamg/Questgen.ai" -> "PrithivirajDamodaran/Parrot_Paraphraser" ["e"=1]
"ramsrigouthamg/Questgen.ai" -> "PrithivirajDamodaran/Styleformer" ["e"=1]
"ramsrigouthamg/Questgen.ai" -> "neuspell/neuspell" ["e"=1]
"ramsrigouthamg/Questgen.ai" -> "GauthierDmn/question_generation"
"ramsrigouthamg/Questgen.ai" -> "PrithivirajDamodaran/Gramformer" ["e"=1]
"ramsrigouthamg/Questgen.ai" -> "ramsrigouthamg/Paraphrase-any-question-with-T5-Text-To-Text-Transfer-Transformer-" ["e"=1]
"ramsrigouthamg/Questgen.ai" -> "UKPLab/beir" ["e"=1]
"ramsrigouthamg/Questgen.ai" -> "erre-quadro/spikex" ["e"=1]
"amansrivastava17/lstm-siamese-text-similarity" -> "dhwajraj/deep-siamese-text-similarity"
"amansrivastava17/lstm-siamese-text-similarity" -> "likejazz/Siamese-LSTM"
"amansrivastava17/lstm-siamese-text-similarity" -> "tlatkowski/multihead-siamese-nets"
"amansrivastava17/lstm-siamese-text-similarity" -> "MahmoudWahdan/Siamese-Sentence-Similarity"
"amansrivastava17/lstm-siamese-text-similarity" -> "liuhuanyong/SiameseSentenceSimilarity" ["e"=1]
"amansrivastava17/lstm-siamese-text-similarity" -> "aditya1503/Siamese-LSTM"
"qizhex/RACE_AR_baselines" -> "nlpdata/strategy"
"qizhex/RACE_AR_baselines" -> "shuohangwang/comatch"
"qizhex/RACE_AR_baselines" -> "intfloat/commonsense-rc"
"galsang/BIMPM-pytorch" -> "zhiguowang/BiMPM"
"salesforce/cove" -> "rgsachin/CoVe"
"salesforce/cove" -> "momohuang/FusionNet-NLI"
"salesforce/cove" -> "allenai/document-qa"
"salesforce/cove" -> "matthew-z/R-net"
"salesforce/cove" -> "salesforce/pytorch-qrnn" ["e"=1]
"salesforce/cove" -> "HKUST-KnowComp/R-Net"
"salesforce/cove" -> "lium-lst/nmtpytorch" ["e"=1]
"salesforce/cove" -> "jsalt18-sentence-repl/jiant" ["e"=1]
"salesforce/cove" -> "allenai/bi-att-flow"
"salesforce/cove" -> "hengruo/QANet-pytorch"
"salesforce/cove" -> "mandarjoshi90/triviaqa"
"salesforce/cove" -> "zihangdai/mos" ["e"=1]
"salesforce/cove" -> "hitvoice/DrQA"
"salesforce/cove" -> "nyu-dl/dl4mt-tutorial" ["e"=1]
"salesforce/cove" -> "taolei87/sru" ["e"=1]
"adityasarvaiya/Automatic_Question_Generation" -> "bloomsburyai/question-generation"
"adityasarvaiya/Automatic_Question_Generation" -> "deepmipt/question_generation"
"adityasarvaiya/Automatic_Question_Generation" -> "indrajithi/genquest"
"facebookresearch/UnsupervisedQA" -> "awslabs/unsupervised-qa"
"facebookresearch/UnsupervisedQA" -> "alontalmor/MultiQA"
"ymcui/LERT" -> "iflytek/MiniRBT"
"ymcui/LERT" -> "ymcui/PERT"
"xwzhong/papernote" -> "lanwuwei/SPM_toolkit"
"hy-struggle/ccks_ner" -> "caishiqing/joint-mrc"
"hy-struggle/ccks_ner" -> "DotaArtist/ccks2020-task3.1"
"SparkJiao/SLQA" -> "allenai/allennlp-reading-comprehension-research"
"momohuang/FusionNet-NLI" -> "kevinduh/san_mrc"
"momohuang/FusionNet-NLI" -> "allenai/document-qa"
"momohuang/FusionNet-NLI" -> "salesforce/cove"
"intfloat/commonsense-rc" -> "qizhex/RACE_AR_baselines"
"sogou/SogouMRCToolkit" -> "caishiqing/joint-mrc"
"hugochan/RL-based-Graph2Seq-for-NQG" -> "seanie12/neural-question-generation"
"hugochan/RL-based-Graph2Seq-for-NQG" -> "WING-NUS/SG-Deep-Question-Generation"
"magic282/NQG" -> "yanghoonkim/NQG_ASs2s"
"magic282/NQG" -> "seanie12/neural-question-generation"
"magic282/NQG" -> "xinyadu/nqg"
"magic282/NQG" -> "freesunshine0316/MPQG"
"magic282/NQG" -> "ZhangShiyue/QGforQA"
"magic282/NQG" -> "yanghoonkim/neural_question_generation"
"magic282/NQG" -> "davidgolub/QuestionGeneration"
"magic282/NQG" -> "bloomsburyai/question-generation"
"magic282/NQG" -> "qjzhzw/Open_QG"
"magic282/NQG" -> "bisheng/QuestionGeneration"
"teacherpeterpan/Question-Generation-Paper-List" -> "patil-suraj/question_generation"
"teacherpeterpan/Question-Generation-Paper-List" -> "seanie12/neural-question-generation"
"teacherpeterpan/Question-Generation-Paper-List" -> "xinyadu/nqg"
"teacherpeterpan/Question-Generation-Paper-List" -> "bloomsburyai/question-generation"
"teacherpeterpan/Question-Generation-Paper-List" -> "bisheng/Awesome-QG"
"teacherpeterpan/Question-Generation-Paper-List" -> "KristiyanVachev/Question-Generation"
"teacherpeterpan/Question-Generation-Paper-List" -> "magic282/NQG"
"teacherpeterpan/Question-Generation-Paper-List" -> "WING-NUS/SG-Deep-Question-Generation"
"teacherpeterpan/Question-Generation-Paper-List" -> "seanie12/Info-HCVAE"
"teacherpeterpan/Question-Generation-Paper-List" -> "YuxiXie/SG-Deep-Question-Generation"
"teacherpeterpan/Question-Generation-Paper-List" -> "Maluuba/nlg-eval" ["e"=1]
"teacherpeterpan/Question-Generation-Paper-List" -> "bisheng/QuestionGeneration"
"teacherpeterpan/Question-Generation-Paper-List" -> "ZhangShiyue/QGforQA"
"teacherpeterpan/Question-Generation-Paper-List" -> "danqi/acl2020-openqa-tutorial" ["e"=1]
"teacherpeterpan/Question-Generation-Paper-List" -> "awslabs/unsupervised-qa"
"thunlp/OpenQA" -> "shuohangwang/mprc"
"thunlp/OpenQA" -> "rajarshd/Multi-Step-Reasoning"
"thunlp/OpenQA" -> "allenai/allennlp-reading-comprehension-research"
"thunlp/OpenQA" -> "shmsw25/qa-transfer"
"thunlp/OpenQA" -> "jojonki/BiDAF"
"thunlp/OpenQA" -> "allenai/document-qa"
"iflytek/VLE" -> "ymcui/alpaca.cpp"
"SunnyMarkLiu/les-military-mrc-rank7" -> "caishiqing/joint-mrc"
"SunnyMarkLiu/les-military-mrc-rank7" -> "YingZiqiang/LES-MMRC-Summary"
"YingZiqiang/LES-MMRC-Summary" -> "caishiqing/joint-mrc"
"YingZiqiang/LES-MMRC-Summary" -> "SunnyMarkLiu/les-military-mrc-rank7"
"YingZiqiang/LES-MMRC-Summary" -> "SunnyMarkLiu/lic2019-dureader2.0-rank2"
"YingZiqiang/LES-MMRC-Summary" -> "NoneWait/cail2019" ["e"=1]
"YingZiqiang/LES-MMRC-Summary" -> "basketballandlearn/Dureader-Bert"
"aswalin/SQuAD" -> "priya-dwivedi/cs224n-Squad-Project"
"aswalin/SQuAD" -> "GauthierDmn/question_answering"
"aswalin/SQuAD" -> "chrischute/squad"
"aswalin/SQuAD" -> "allenai/document-qa"
"aswalin/SQuAD" -> "aswalin/Kaggle"
"aswalin/SQuAD" -> "5hirish/adam_qas"
"sumehta/question-generation" -> "indrajithi/genquest"
"sumehta/question-generation" -> "dipta1010/Automatic-Question-Generator"
"THTBSE/siamese-lstm-network" -> "jx00109/siamese-lstm-for-sentence-similarity"
"nelson-liu/paraphrase-id-tensorflow" -> "bradleypallen/keras-quora-question-pairs"
"nelson-liu/paraphrase-id-tensorflow" -> "zhiguowang/BiMPM"
"nelson-liu/paraphrase-id-tensorflow" -> "allenai/deep_qa"
"nelson-liu/paraphrase-id-tensorflow" -> "YichenGong/Densely-Interactive-Inference-Network"
"nelson-liu/paraphrase-id-tensorflow" -> "iamaaditya/neural-paraphrase-generation" ["e"=1]
"nelson-liu/paraphrase-id-tensorflow" -> "qqgeogor/kaggle_quora_benchmark"
"nelson-liu/paraphrase-id-tensorflow" -> "qqgeogor/kaggle-quora-solution-8th"
"nelson-liu/paraphrase-id-tensorflow" -> "abhishekkrthakur/is_that_a_duplicate_quora_question"
"nelson-liu/paraphrase-id-tensorflow" -> "lanwuwei/SPM_toolkit"
"nelson-liu/paraphrase-id-tensorflow" -> "erickrf/multiffn-nli"
"nelson-liu/paraphrase-id-tensorflow" -> "aditya1503/Siamese-LSTM"
"nelson-liu/paraphrase-id-tensorflow" -> "HouJP/kaggle-quora-question-pairs"
"nelson-liu/paraphrase-id-tensorflow" -> "ijinmao/BiMPM_keras"
"nelson-liu/paraphrase-id-tensorflow" -> "erogol/QuoraDQBaseline"
"nelson-liu/paraphrase-id-tensorflow" -> "shuohangwang/SeqMatchSeq"
"seriousran/awesome-qa" -> "chiayewken/bert-qa"
"seriousran/awesome-qa" -> "dapurv5/awesome-question-answering" ["e"=1]
"seriousran/awesome-qa" -> "danqi/acl2020-openqa-tutorial" ["e"=1]
"seriousran/awesome-qa" -> "hugochan/BAMnet" ["e"=1]
"seriousran/awesome-qa" -> "thunlp/RCPapers"
"seriousran/awesome-qa" -> "AkariAsai/learning_to_retrieve_reasoning_paths" ["e"=1]
"seriousran/awesome-qa" -> "BshoterJ/awesome-kgqa" ["e"=1]
"seriousran/awesome-qa" -> "BDBC-KG-NLP/QA-Survey" ["e"=1]
"seriousran/awesome-qa" -> "teacherpeterpan/Question-Generation-Paper-List"
"seriousran/awesome-qa" -> "WenRichard/KBQA-BERT" ["e"=1]
"seriousran/awesome-qa" -> "wavewangyue/kbqa" ["e"=1]
"seriousran/awesome-qa" -> "xanhho/Reading-Comprehension-Question-Answering-Papers"
"seriousran/awesome-qa" -> "allenai/unifiedqa" ["e"=1]
"seriousran/awesome-qa" -> "quincyliang/nlp-data-augmentation" ["e"=1]
"seriousran/awesome-qa" -> "allenai/document-qa"
"hotpotqa/hotpot" -> "woshiyyya/DFGN-pytorch"
"hotpotqa/hotpot" -> "shmsw25/DecompRC"
"hotpotqa/hotpot" -> "THUDM/CogQA"
"hotpotqa/hotpot" -> "qipeng/golden-retriever"
"hotpotqa/hotpot" -> "easonnie/semanticRetrievalMRS"
"hotpotqa/hotpot" -> "allenai/document-qa"
"hotpotqa/hotpot" -> "shmsw25/single-hop-rc"
"hotpotqa/hotpot" -> "yuwfan/HGN"
"hotpotqa/hotpot" -> "huminghao16/MTMSN"
"hotpotqa/hotpot" -> "xycforgithub/MultiTask-MRC"
"hotpotqa/hotpot" -> "thunlp/OpenQA"
"hotpotqa/hotpot" -> "rajarshd/Multi-Step-Reasoning"
"hotpotqa/hotpot" -> "momohuang/FlowQA"
"hotpotqa/hotpot" -> "kevinduh/san_mrc"
"hotpotqa/hotpot" -> "yicheng-w/CommonSenseMultiHopQA"
"seanie12/Info-HCVAE" -> "seanie12/neural-question-generation"
"seanie12/Info-HCVAE" -> "awslabs/unsupervised-qa"
"seanie12/Info-HCVAE" -> "ZhangShiyue/QGforQA"
"nyu-mll/multiNLI" -> "lukecq1231/nli"
"nyu-mll/multiNLI" -> "YichenGong/Densely-Interactive-Inference-Network"
"nyu-mll/multiNLI" -> "lukecq1231/kim"
"nyu-mll/multiNLI" -> "erickrf/multiffn-nli"
"nyu-mll/multiNLI" -> "easonnie/multiNLI_encoder"
"nyu-mll/multiNLI" -> "coetaur0/ESIM" ["e"=1]
"nyu-mll/multiNLI" -> "tommccoy1/hans" ["e"=1]
"312shan/rc_tf" -> "SeanLee97/QANet_dureader"
"312shan/rc_tf" -> "jingyihiter/myDuReader"
"312shan/rc_tf" -> "shiningliang/MRC2018"
"312shan/rc_tf" -> "freefuiiismyname/G-Reader"
"nitishgupta/nmn-drop" -> "allenai/allennlp-semparse" ["e"=1]
"plantsgo/Rental-Listing-Inquiries" -> "qqgeogor/kaggle-quora-solution-8th"
"plantsgo/Rental-Listing-Inquiries" -> "plantsgo/kesci_ctrip"
"plantsgo/Rental-Listing-Inquiries" -> "qqgeogor/kaggle_quora_benchmark"
"plantsgo/Rental-Listing-Inquiries" -> "plantsgo/Instacart-Market-Basket-Analysis" ["e"=1]
"zhoujx4/DuReader-Checklist-BASELINE" -> "lyj555/LICS2021_MRC"
"kushalj001/pytorch-question-answering" -> "galsang/BiDAF-pytorch"
"kushalj001/pytorch-question-answering" -> "AdityaJ42/Sem6-Labs"
"kushalj001/pytorch-question-answering" -> "quabanc/awesome-computer-science"
"kushalj001/pytorch-question-answering" -> "djunicode/resources"
"kushalj001/pytorch-question-answering" -> "pujanm/Chat-IO"
"microsoft/SDNet" -> "zcgzcgzcg1/MRC_book"
"shmsw25/DecompRC" -> "shmsw25/single-hop-rc"
"shmsw25/DecompRC" -> "woshiyyya/DFGN-pytorch"
"shmsw25/DecompRC" -> "facebookresearch/UnsupervisedDecomposition"
"shmsw25/DecompRC" -> "hotpotqa/hotpot"
"shmsw25/DecompRC" -> "huminghao16/RE3QA"
"shmsw25/DecompRC" -> "rajarshd/Multi-Step-Reasoning"
"shmsw25/DecompRC" -> "easonnie/semanticRetrievalMRS"
"shmsw25/DecompRC" -> "qipeng/golden-retriever"
"shmsw25/DecompRC" -> "JD-AI-Research-Silicon-Valley/SAE"
"andy840314/QANet-pytorch-" -> "hackiey/QAnet-pytorch"
"andy840314/QANet-pytorch-" -> "BangLiu/QANet-PyTorch"
"andy840314/QANet-pytorch-" -> "chen0423/TF-1.9-cp36-cuda9.2-wheel"
"andy840314/QANet-pytorch-" -> "kevinduh/san_mrc"
"andy840314/QANet-pytorch-" -> "laddie132/Match-LSTM"
"deepmind/narrativeqa" -> "allenai/document-qa"
"deepmind/narrativeqa" -> "shuohangwang/mprc"
"deepmind/narrativeqa" -> "mandarjoshi90/triviaqa"
"deepmind/narrativeqa" -> "Maluuba/newsqa"
"deepmind/narrativeqa" -> "nyu-dl/SearchQA" ["e"=1]
"deepmind/narrativeqa" -> "danqi/rc-cnn-dailymail"
"deepmind/narrativeqa" -> "shuohangwang/SeqMatchSeq"
"deepmind/narrativeqa" -> "mrqa/MRQA-Shared-Task-2019"
"deepmind/narrativeqa" -> "xinyadu/nqg"
"deepmind/narrativeqa" -> "hitvoice/DrQA"
"deepmind/narrativeqa" -> "allenai/bi-att-flow"
"deepmind/narrativeqa" -> "momohuang/FlowQA"
"deepmind/narrativeqa" -> "karthikncode/nlp-datasets" ["e"=1]
"deepmind/narrativeqa" -> "deepmind/rc-data" ["e"=1]
"deepmind/narrativeqa" -> "ymcui/Eval-on-NN-of-RC"
"jojonki/BiDAF" -> "galsang/BiDAF-pytorch"
"jojonki/BiDAF" -> "atulkum/co-attention"
"jojonki/BiDAF" -> "hengruo/QANet-pytorch"
"jojonki/BiDAF" -> "thunlp/OpenQA"
"jojonki/BiDAF" -> "kelayamatoz/BiDAF-PyTorch"
"bojone/CCL_CMRC2017" -> "ymcui/cmrc2017"
"davidgolub/QuestionGeneration" -> "magic282/NQG"
"rkadlec/asreader" -> "ymcui/Eval-on-NN-of-RC"
"rkadlec/asreader" -> "nschuc/alternating-reader-tf"
"rkadlec/asreader" -> "bdhingra/ga-reader"
"seanie12/neural-question-generation" -> "yanghoonkim/NQG_ASs2s"
"seanie12/neural-question-generation" -> "magic282/NQG"
"seanie12/neural-question-generation" -> "xinyadu/nqg"
"seanie12/neural-question-generation" -> "ZhangShiyue/QGforQA"
"seanie12/neural-question-generation" -> "WING-NUS/SG-Deep-Question-Generation"
"seanie12/neural-question-generation" -> "awslabs/unsupervised-qa"
"seanie12/neural-question-generation" -> "teacherpeterpan/Question-Generation-Paper-List"
"seanie12/neural-question-generation" -> "PrekshaNema25/RefNet-QG"
"seanie12/neural-question-generation" -> "hugochan/RL-based-Graph2Seq-for-NQG"
"seanie12/neural-question-generation" -> "seanie12/Info-HCVAE"
"seanie12/neural-question-generation" -> "bloomsburyai/question-generation"
"seanie12/neural-question-generation" -> "yanghoonkim/neural_question_generation"
"seanie12/neural-question-generation" -> "BangLiu/QG"
"seanie12/neural-question-generation" -> "PrekshaNema25/Answerability-Metric"
"ymcui/cmrc2017" -> "bojone/CCL_CMRC2017"
"ymcui/cmrc2017" -> "ymcui/cmrc2019"
"ymcui/cmrc2019" -> "ymcui/cmrc2017"
"ymcui/cmrc2019" -> "ymcui/cmrc2018"
"ymcui/cmrc2019" -> "xycforgithub/MultiTask-MRC"
"ymcui/cmrc2019" -> "ymcui/Chinese-RC-Datasets"
"ymcui/cmrc2019" -> "freefuiiismyname/capsule-mrc"
"ymcui/cmrc2019" -> "ymcui/Cross-Lingual-MRC"
"codalab/codalab-worksheets" -> "codalab/codalab-cli"
"codalab/codalab-worksheets" -> "codalab/worksheets-examples"
"qqgeogor/kaggle_quora_benchmark" -> "MLWave/RGF-sklearn" ["e"=1]
"indrajithi/genquest" -> "deepmipt/question_generation"
"indrajithi/genquest" -> "sumehta/question-generation"
"indrajithi/genquest" -> "bloomsburyai/question-generation"
"indrajithi/genquest" -> "dipta1010/Automatic-Question-Generator"
"indrajithi/genquest" -> "indrajithi/question_generation"
"indrajithi/genquest" -> "magic282/NQG"
"indrajithi/genquest" -> "xinyadu/nqg"
"indrajithi/genquest" -> "atbaker/wikipedia-question-generator"
"indrajithi/genquest" -> "adityasarvaiya/Automatic_Question_Generation"
"indrajithi/genquest" -> "holylovenia/question-answer-generation"
"BangLiu/QANet-PyTorch" -> "andy840314/QANet-pytorch-"
"BangLiu/QANet-PyTorch" -> "heliumsea/QANet-pytorch"
"BangLiu/QANet-PyTorch" -> "hackiey/QAnet-pytorch"
"ankit-ai/BertQA-Attention-on-Steroids" -> "ankit-ai/SQUAD2.Q-Augmented-Dataset"
"ankit-ai/BertQA-Attention-on-Steroids" -> "huminghao16/MTMSN"
"ankit-ai/BertQA-Attention-on-Steroids" -> "kevinduh/san_mrc"
"bloomsburyai/question-generation" -> "deepmipt/question_generation"
"bloomsburyai/question-generation" -> "indrajithi/genquest"
"bloomsburyai/question-generation" -> "seanie12/neural-question-generation"
"bloomsburyai/question-generation" -> "magic282/NQG"
"bloomsburyai/question-generation" -> "yanghoonkim/NQG_ASs2s"
"bloomsburyai/question-generation" -> "ZhangShiyue/QGforQA"
"bloomsburyai/question-generation" -> "xinyadu/nqg"
"bloomsburyai/question-generation" -> "davidgolub/QuestionGeneration"
"bloomsburyai/question-generation" -> "teacherpeterpan/Question-Generation-Paper-List"
"bloomsburyai/question-generation" -> "PrekshaNema25/RefNet-QG"
"bloomsburyai/question-generation" -> "adityasarvaiya/Automatic_Question_Generation"
"bloomsburyai/question-generation" -> "ujjax/question-generation"
"bloomsburyai/question-generation" -> "GauthierDmn/question_generation"
"bloomsburyai/question-generation" -> "sumehta/question-generation"
"rajpurkar/SQuAD-explorer" -> "HKUST-KnowComp/R-Net"
"rajpurkar/SQuAD-explorer" -> "hotpotqa/hotpot"
"rajpurkar/SQuAD-explorer" -> "allenai/bi-att-flow"
"rajpurkar/SQuAD-explorer" -> "codalab/codalab-worksheets"
"rajpurkar/SQuAD-explorer" -> "deepmind/narrativeqa"
"rajpurkar/SQuAD-explorer" -> "allenai/document-qa"
"rajpurkar/SQuAD-explorer" -> "aswalin/SQuAD"
"rajpurkar/SQuAD-explorer" -> "facebook/bAbI-tasks" ["e"=1]
"rajpurkar/SQuAD-explorer" -> "snakeztc/NeuralDialogPapers" ["e"=1]
"rajpurkar/SQuAD-explorer" -> "YerevaNN/Dynamic-memory-networks-in-Theano" ["e"=1]
"rajpurkar/SQuAD-explorer" -> "mandarjoshi90/triviaqa"
"rajpurkar/SQuAD-explorer" -> "Maluuba/newsqa"
"rajpurkar/SQuAD-explorer" -> "xinyadu/nqg"
"rajpurkar/SQuAD-explorer" -> "facebook/MemNN" ["e"=1]
"rajpurkar/SQuAD-explorer" -> "galsang/BiDAF-pytorch"
"acetylSv/GST-tacotron" -> "chen0423/TF-1.9-cp36-cuda9.2-wheel"
"abhishekkrthakur/is_that_a_duplicate_quora_question" -> "bradleypallen/keras-quora-question-pairs"
"abhishekkrthakur/is_that_a_duplicate_quora_question" -> "erogol/QuoraDQBaseline"
"abhishekkrthakur/is_that_a_duplicate_quora_question" -> "qqgeogor/kaggle-quora-solution-8th"
"abhishekkrthakur/is_that_a_duplicate_quora_question" -> "HouJP/kaggle-quora-question-pairs"
"abhishekkrthakur/is_that_a_duplicate_quora_question" -> "Wrosinski/Kaggle-Quora"
"abhishekkrthakur/is_that_a_duplicate_quora_question" -> "qqgeogor/kaggle_quora_benchmark"
"abhishekkrthakur/is_that_a_duplicate_quora_question" -> "aerdem4/kaggle-quora-dup"
"abhishekkrthakur/is_that_a_duplicate_quora_question" -> "nelson-liu/paraphrase-id-tensorflow"
"abhishekkrthakur/is_that_a_duplicate_quora_question" -> "sjvasquez/quora-duplicate-questions"
"abhishekkrthakur/is_that_a_duplicate_quora_question" -> "ChenglongChen/Kaggle_HomeDepot" ["e"=1]
"abhishekkrthakur/is_that_a_duplicate_quora_question" -> "zhiguowang/BiMPM"
"abhishekkrthakur/is_that_a_duplicate_quora_question" -> "kaz-Anova/StackNet" ["e"=1]
"abhishekkrthakur/is_that_a_duplicate_quora_question" -> "emanuele/kaggle_pbr" ["e"=1]
"abhishekkrthakur/is_that_a_duplicate_quora_question" -> "ChenglongChen/Kaggle_CrowdFlower" ["e"=1]
"abhishekkrthakur/is_that_a_duplicate_quora_question" -> "abhishekkrthakur/greedyFeatureSelection"
"5hirish/adam_qas" -> "aswalin/SQuAD"
"5hirish/adam_qas" -> "raoariel/NLP-Question-Answer-System"
"5hirish/adam_qas" -> "l11x0m7/Question_Answering_Models"
"5hirish/adam_qas" -> "explosion/spacy-dev-resources" ["e"=1]
"5hirish/adam_qas" -> "bwbaugh/causeofwhy"
"5hirish/adam_qas" -> "priya-dwivedi/cs224n-Squad-Project"
"5hirish/adam_qas" -> "brmson/yodaqa" ["e"=1]
"5hirish/adam_qas" -> "allenai/deep_qa"
"allenai/deep_qa" -> "nelson-liu/paraphrase-id-tensorflow"
"allenai/deep_qa" -> "sujitpal/dl-models-for-qa" ["e"=1]
"allenai/deep_qa" -> "white127/insuranceQA-cnn-lstm" ["e"=1]
"allenai/deep_qa" -> "allenai/bi-att-flow"
"allenai/deep_qa" -> "bradleypallen/keras-quora-question-pairs"
"allenai/deep_qa" -> "vinhkhuc/MemN2N-babi-python" ["e"=1]
"allenai/deep_qa" -> "YerevaNN/R-NET-in-Keras"
"allenai/deep_qa" -> "rajarshd/TextKBQA" ["e"=1]
"allenai/deep_qa" -> "aseveryn/deep-qa" ["e"=1]
"allenai/deep_qa" -> "mandarjoshi90/triviaqa"
"allenai/deep_qa" -> "rkadlec/asreader"
"allenai/deep_qa" -> "marshmelloX/dynamic-coattention-network"
"allenai/deep_qa" -> "carpedm20/attentive-reader-tensorflow" ["e"=1]
"allenai/deep_qa" -> "hitvoice/DrQA"
"allenai/deep_qa" -> "bsnsk/QA"
"uwnlp/denspi" -> "uwnlp/piqa"
"uwnlp/denspi" -> "rajarshd/Multi-Step-Reasoning"
"uwnlp/denspi" -> "shmsw25/qa-hard-em"
"elcronos/COVID-19" -> "deepset-ai/COVID-QA"
"elcronos/COVID-19" -> "FightCOVID19/core"
"elcronos/COVID-19" -> "FightCOVID19/webapp"
"eladsegal/tag-based-multi-span-extraction" -> "huminghao16/MTMSN"
"eladsegal/tag-based-multi-span-extraction" -> "llamazing/numnet_plus"
"eladsegal/tag-based-multi-span-extraction" -> "ag1988/injecting_numeracy"
"eladsegal/tag-based-multi-span-extraction" -> "haonan-li/MultiSpanQA"
"shmsw25/single-hop-rc" -> "shmsw25/DecompRC"
"bradleypallen/keras-quora-question-pairs" -> "abhishekkrthakur/is_that_a_duplicate_quora_question"
"bradleypallen/keras-quora-question-pairs" -> "nelson-liu/paraphrase-id-tensorflow"
"bradleypallen/keras-quora-question-pairs" -> "HouJP/kaggle-quora-question-pairs"
"bradleypallen/keras-quora-question-pairs" -> "qqgeogor/kaggle-quora-solution-8th"
"bradleypallen/keras-quora-question-pairs" -> "erogol/QuoraDQBaseline"
"bradleypallen/keras-quora-question-pairs" -> "Wrosinski/Kaggle-Quora"
"bradleypallen/keras-quora-question-pairs" -> "zhiguowang/BiMPM"
"bradleypallen/keras-quora-question-pairs" -> "YuriyGuts/kaggle-quora-question-pairs"
"bradleypallen/keras-quora-question-pairs" -> "aerdem4/kaggle-quora-dup"
"bradleypallen/keras-quora-question-pairs" -> "qqgeogor/kaggle_quora_benchmark"
"bradleypallen/keras-quora-question-pairs" -> "allenai/deep_qa"
"bradleypallen/keras-quora-question-pairs" -> "sjvasquez/quora-duplicate-questions"
"bradleypallen/keras-quora-question-pairs" -> "YichenGong/Densely-Interactive-Inference-Network"
"bradleypallen/keras-quora-question-pairs" -> "ijinmao/BiMPM_keras"
"bradleypallen/keras-quora-question-pairs" -> "aseveryn/deep-qa" ["e"=1]
"freefuiiismyname/capsule-mrc" -> "antdlx/aic18_rc"
"freefuiiismyname/capsule-mrc" -> "lixinsu/RCZoo"
"harvardnlp/decomp-attn" -> "erickrf/multiffn-nli"
"harvardnlp/decomp-attn" -> "libowen2121/SNLI-decomposable-attention"
"NoviScl/BERT-RACE" -> "shuohangwang/comatch"
"NoviScl/BERT-RACE" -> "tosmaster/bert-race"
"allenai/document-qa" -> "HKUST-KnowComp/R-Net"
"allenai/document-qa" -> "kevinduh/san_mrc"
"allenai/document-qa" -> "mandarjoshi90/triviaqa"
"allenai/document-qa" -> "hotpotqa/hotpot"
"allenai/document-qa" -> "momohuang/FusionNet-NLI"
"allenai/document-qa" -> "NLPLearn/QANet"
"allenai/document-qa" -> "HKUST-KnowComp/MnemonicReader"
"allenai/document-qa" -> "nyu-dl/dl4marco-bert" ["e"=1]
"allenai/document-qa" -> "thunlp/OpenQA"
"allenai/document-qa" -> "mrqa/MRQA-Shared-Task-2019"
"allenai/document-qa" -> "huminghao16/RE3QA"
"allenai/document-qa" -> "allenai/bi-att-flow"
"allenai/document-qa" -> "minsangkim142/R-net"
"allenai/document-qa" -> "deepmind/narrativeqa"
"allenai/document-qa" -> "shuohangwang/mprc"
"Maluuba/newsqa" -> "mandarjoshi90/triviaqa"
"Maluuba/newsqa" -> "xinyadu/nqg"
"Maluuba/newsqa" -> "Maluuba/qgen-workshop"
"Maluuba/newsqa" -> "hotpotqa/hotpot"
"Maluuba/newsqa" -> "deepmind/narrativeqa"
"Maluuba/newsqa" -> "mrqa/MRQA-Shared-Task-2019"
"Maluuba/newsqa" -> "davidgolub/QuestionGeneration"
"Maluuba/newsqa" -> "GauthierDmn/question_generation"
"Maluuba/newsqa" -> "shmsw25/qa-hard-em"
"Maluuba/newsqa" -> "robinjia/adversarial-squad"
"Maluuba/newsqa" -> "allenai/unifiedqa" ["e"=1]
"chrischute/squad" -> "surbhardwaj/BERT-QnA-Squad_2.0_Finetuned_Model"
"chrischute/squad" -> "ankit-ai/SQUAD2.Q-Augmented-Dataset"
"chrischute/squad" -> "chrischute/squad-transformer"
"chrischute/squad" -> "priya-dwivedi/cs224n-Squad-Project"
"chrischute/squad" -> "kamalkraj/BERT-SQuAD"
"chrischute/squad" -> "aswalin/SQuAD"
"MurtyShikhar/Question-Answering" -> "shuohangwang/SeqMatchSeq"
"MurtyShikhar/Question-Answering" -> "jind11/SQuAD-QA-System"
"MurtyShikhar/Question-Answering" -> "obryanlouis/qa"
"Wrosinski/Kaggle-Quora" -> "YuriyGuts/kaggle-quora-question-pairs"
"Wrosinski/Kaggle-Quora" -> "sjvasquez/quora-duplicate-questions"
"Wrosinski/Kaggle-Quora" -> "syeddanish41/kaggle-question-pairs-quora"
"Wrosinski/Kaggle-Quora" -> "qqgeogor/kaggle-quora-solution-8th"
"sjvasquez/quora-duplicate-questions" -> "Wrosinski/Kaggle-Quora"
"libowen2121/SNLI-decomposable-attention" -> "harvardnlp/decomp-attn"
"holylovenia/question-answer-generation" -> "agusgun/qag-web"
"erickrf/multiffn-nli" -> "harvardnlp/decomp-attn"
"llamazing/numnet_plus" -> "eladsegal/tag-based-multi-span-extraction"
"llamazing/numnet_plus" -> "ag1988/injecting_numeracy"
"llamazing/numnet_plus" -> "huminghao16/MTMSN"
"llamazing/numnet_plus" -> "ranqiu92/NumNet"
"llamazing/numnet_plus" -> "nitishgupta/nmn-drop"
"djunicode/resources" -> "quabanc/awesome-computer-science"
"djunicode/resources" -> "djunicode/DJ-Comps-Book-Exchange"
"djunicode/resources" -> "AdityaJ42/Sem6-Labs"
"yuwfan/HGN" -> "JD-AI-Research-Silicon-Valley/SAE"
"yuwfan/HGN" -> "wjdghks950/Hierarchical-Graph-Network-for-Multi-hop-Question-Answering-HGN-"
"caishiqing/joint-mrc" -> "YingZiqiang/LES-MMRC-Summary"
"caishiqing/joint-mrc" -> "SunnyMarkLiu/les-military-mrc-rank7"
"caishiqing/joint-mrc" -> "hy-struggle/ccks_ner"
"artitw/text2text" -> "AMontgomerie/question_generator"
"chiayewken/bert-qa" -> "seriousran/awesome-qa"
"marshmelloX/dynamic-coattention-network" -> "andrejonasson/dynamic-coattention-network-plus"
"marshmelloX/dynamic-coattention-network" -> "minsangkim142/R-net"
"minsangkim142/R-net" -> "unilight/R-NET-in-Tensorflow"
"minsangkim142/R-net" -> "YerevaNN/R-NET-in-Keras"
"minsangkim142/R-net" -> "marshmelloX/dynamic-coattention-network"
"minsangkim142/R-net" -> "HKUST-KnowComp/R-Net"
"minsangkim142/R-net" -> "OlavHN/attention-over-attention"
"minsangkim142/R-net" -> "shuohangwang/SeqMatchSeq"
"minsangkim142/R-net" -> "minsangkim142/Reading-Comprehension-without-RNNs"
"minsangkim142/R-net" -> "allenai/document-qa"
"minsangkim142/R-net" -> "shuohangwang/mprc"
"minsangkim142/R-net" -> "minsangkim142/QANet"
"minsangkim142/R-net" -> "matthew-z/R-net"
"bdhingra/ga-reader" -> "mingdachen/gated-attention-reader"
"bdhingra/ga-reader" -> "rkadlec/asreader"
"bdhingra/ga-reader" -> "nschuc/alternating-reader-tf"
"bdhingra/ga-reader" -> "danqi/rc-cnn-dailymail"
"bdhingra/ga-reader" -> "shuohangwang/SeqMatchSeq"
"bdhingra/ga-reader" -> "ymcui/Eval-on-NN-of-RC"
"bdhingra/ga-reader" -> "intfloat/commonsense-rc"
"ymcui/Chinese-RC-Datasets" -> "ymcui/cmrc2019"
"ymcui/Chinese-RC-Datasets" -> "ymcui/cmrc2018"
"ymcui/Chinese-RC-Datasets" -> "ewrfcas/bert_cn_finetune"
"ymcui/Chinese-RC-Datasets" -> "DRCKnowledgeTeam/DRCD" ["e"=1]
"ymcui/Chinese-RC-Datasets" -> "IndexFziQ/KMRC-Papers"
"ymcui/Chinese-RC-Datasets" -> "NoneWait/cail2019" ["e"=1]
"kevinduh/san_mrc" -> "HKUST-KnowComp/MnemonicReader"
"kevinduh/san_mrc" -> "momohuang/FusionNet-NLI"
"kevinduh/san_mrc" -> "andy840314/QANet-pytorch-"
"kevinduh/san_mrc" -> "xycforgithub/MultiTask-MRC"
"kevinduh/san_mrc" -> "matthew-z/R-net"
"kevinduh/san_mrc" -> "allenai/document-qa"
"kevinduh/san_mrc" -> "ankit-ai/BertQA-Attention-on-Steroids"
"kevinduh/san_mrc" -> "kevinkwl/AoAReader"
"kevinduh/san_mrc" -> "hitvoice/DrQA"
"ewrfcas/bert_cn_finetune" -> "NoneWait/cail2019" ["e"=1]
"ewrfcas/bert_cn_finetune" -> "ymcui/Chinese-RC-Datasets"
"ewrfcas/bert_cn_finetune" -> "eladsegal/tag-based-multi-span-extraction"
"huminghao16/RE3QA" -> "huminghao16/MTMSN"
"huminghao16/RE3QA" -> "xycforgithub/MultiTask-MRC"
"huminghao16/RE3QA" -> "rajarshd/Multi-Step-Reasoning"
"quabanc/awesome-computer-science" -> "pujanm/Chat-IO"
"quabanc/awesome-computer-science" -> "DhruvBhagadia/InterviewBit"
"momohuang/FlowQA" -> "stanfordnlp/coqa-baselines"
"momohuang/FlowQA" -> "Microsoft/SDNet"
"momohuang/FlowQA" -> "prdwb/bert_hae"
"momohuang/FlowQA" -> "deepnlp-cs599-usc/quac"
"YerevaNN/DIIN-in-Keras" -> "YichenGong/Densely-Interactive-Inference-Network"
"lixinsu/RCZoo" -> "freefuiiismyname/capsule-mrc"
"lixinsu/RCZoo" -> "HKUST-KnowComp/MnemonicReader"
"lixinsu/RCZoo" -> "xueyouluo/fsauor2018" ["e"=1]
"lixinsu/RCZoo" -> "freefuiiismyname/G-Reader"
"lixinsu/RCZoo" -> "SeanLee97/QANet_dureader"
"lixinsu/RCZoo" -> "yuhaitao1994/AIchallenger2018_MachineReadingComprehension"
"lixinsu/RCZoo" -> "antdlx/aic18_rc"
"sachinbiradar9/Question-Answer-Selection" -> "Alan-Lee123/answer-selection"
"NLPLearn/R-net" -> "NLPLearn/QANet"
"NLPLearn/R-net" -> "HKUST-KnowComp/R-Net"
"NLPLearn/R-net" -> "SeanLee97/QANet_dureader"
"NLPLearn/R-net" -> "YerevaNN/R-NET-in-Keras"
"aditya1503/Siamese-LSTM" -> "jx00109/siamese-lstm-for-sentence-similarity"
"aditya1503/Siamese-LSTM" -> "likejazz/Siamese-LSTM"
"aditya1503/Siamese-LSTM" -> "dhwajraj/deep-siamese-text-similarity"
"aditya1503/Siamese-LSTM" -> "THTBSE/siamese-lstm-network"
"aditya1503/Siamese-LSTM" -> "hohoCode/textSimilarityConvNet"
"aditya1503/Siamese-LSTM" -> "nelson-liu/paraphrase-id-tensorflow"
"YerevaNN/R-NET-in-Keras" -> "minsangkim142/R-net"
"YerevaNN/R-NET-in-Keras" -> "HKUST-KnowComp/R-Net"
"YerevaNN/R-NET-in-Keras" -> "unilight/R-NET-in-Tensorflow"
"YerevaNN/R-NET-in-Keras" -> "marshmelloX/dynamic-coattention-network"
"YerevaNN/R-NET-in-Keras" -> "NLPLearn/R-net"
"YerevaNN/R-NET-in-Keras" -> "jojonki/BiDAF"
"unilight/R-NET-in-Tensorflow" -> "minsangkim142/R-net"
"unilight/R-NET-in-Tensorflow" -> "HKUST-KnowComp/R-Net"
"renatoviolin/xlnet" -> "FudanNLP/UNet"
"YuxiXie/SG-Deep-Question-Generation" -> "WING-NUS/SG-Deep-Question-Generation"
"plantsgo/kesci_ctrip" -> "qiaoguan/Kesci-ctrip-room-prediction"
"plantsgo/kesci_ctrip" -> "plantsgo/Rental-Listing-Inquiries"
"plantsgo/kesci_ctrip" -> "OsloAI/personalized-matching" ["e"=1]
"mandarjoshi90/triviaqa" -> "Maluuba/newsqa"
"mandarjoshi90/triviaqa" -> "allenai/document-qa"
"mandarjoshi90/triviaqa" -> "bdhingra/quasar"
"mandarjoshi90/triviaqa" -> "minsangkim142/Reading-Comprehension-without-RNNs"
"mandarjoshi90/triviaqa" -> "shuohangwang/mprc"
"mandarjoshi90/triviaqa" -> "stanfordnlp/coqa-baselines"
"yanghoonkim/NQG_ASs2s" -> "yanghoonkim/neural_question_generation"
"bisheng/Awesome-QG" -> "WING-NUS/SG-Deep-Question-Generation"
"bisheng/Awesome-QG" -> "ShuyangCao/open-ended_question_ontology"
"tlatkowski/multihead-siamese-nets" -> "likejazz/Siamese-LSTM"
"tlatkowski/multihead-siamese-nets" -> "amansrivastava17/lstm-siamese-text-similarity"
"facebookresearch/UnsupervisedDecomposition" -> "shmsw25/DecompRC"
"BangLiu/ACS-QG" -> "WING-NUS/SG-Deep-Question-Generation"
"qipeng/golden-retriever" -> "easonnie/semanticRetrievalMRS"
"qipeng/golden-retriever" -> "shmsw25/DecompRC"
"qipeng/golden-retriever" -> "yairf11/MUPPET"
"qipeng/golden-retriever" -> "hotpotqa/hotpot"
"qipeng/golden-retriever" -> "facebookresearch/QA-Overlap" ["e"=1]
"qipeng/golden-retriever" -> "rajarshd/Multi-Step-Reasoning"
"qipeng/golden-retriever" -> "zycdev/AISO"
"qipeng/golden-retriever" -> "woshiyyya/DFGN-pytorch"
"qipeng/golden-retriever" -> "uwnlp/denspi"
"qipeng/golden-retriever" -> "facebookresearch/multihop_dense_retrieval" ["e"=1]
"xwen99/DuReader-Robust-With-Paddlehub" -> "SunnyMarkLiu/lic2019-dureader2.0-rank2"
"xwen99/DuReader-Robust-With-Paddlehub" -> "lyj555/LICS2021_MRC"
"xwen99/DuReader-Robust-With-Paddlehub" -> "zhoujx4/DuReader-Checklist-BASELINE"
"Microsoft/SDNet" -> "momohuang/FlowQA"
"hackiey/QAnet-pytorch" -> "marquezo/qanet-impl"
"hackiey/QAnet-pytorch" -> "hackiey/torcheras"
"aerdem4/kaggle-quora-dup" -> "qqgeogor/kaggle-quora-solution-8th"
"aerdem4/kaggle-quora-dup" -> "YuriyGuts/kaggle-quora-question-pairs"
"aerdem4/kaggle-quora-dup" -> "Wrosinski/Kaggle-Quora"
"aerdem4/kaggle-quora-dup" -> "howardyclo/Kaggle-Quora-Question-Pairs"
"aerdem4/kaggle-quora-dup" -> "zhaoyu87/quora_question_pairs"
"aerdem4/kaggle-quora-dup" -> "bradleypallen/keras-quora-question-pairs"
"aerdem4/kaggle-quora-dup" -> "yuhsinliu1993/Quora_QuestionPairs_DL"
"obryanlouis/qa" -> "exe1023/FusionNet"
"OlavHN/attention-over-attention" -> "marshmelloX/attention-over-attention"
"OlavHN/attention-over-attention" -> "lc222/attention-over-attention-tf-QA"
"OlavHN/attention-over-attention" -> "minsangkim142/R-net"
"OlavHN/attention-over-attention" -> "rkadlec/asreader"
"OlavHN/attention-over-attention" -> "ymcui/Eval-on-NN-of-RC"
"OlavHN/attention-over-attention" -> "shuohangwang/SeqMatchSeq"
"OlavHN/attention-over-attention" -> "marshmelloX/dynamic-coattention-network"
"OlavHN/attention-over-attention" -> "bdhingra/ga-reader"
"robinjia/adversarial-squad" -> "nusnlp/paraphrasing-squad"
"robinjia/adversarial-squad" -> "pramodkaushik/acl18_results"
"robinjia/adversarial-squad" -> "marcotcr/sears" ["e"=1]
"iflytek/MiniRBT" -> "iflytek/VLE"
"iflytek/MiniRBT" -> "ymcui/alpaca.cpp"
"iflytek/MiniRBT" -> "ymcui/LERT"
"JD-AI-Research-Silicon-Valley/SAE" -> "yuwfan/HGN"
"easonnie/multiNLI_encoder" -> "jihunchoi/shortcut-stacked-encoder-pytorch"
"ymcui/Eval-on-NN-of-RC" -> "rkadlec/asreader"
"WING-NUS/SG-Deep-Question-Generation" -> "YuxiXie/SG-Deep-Question-Generation"
"yanghoonkim/neural_question_generation" -> "yanghoonkim/NQG_ASs2s"
"YuriyGuts/kaggle-quora-question-pairs" -> "Wrosinski/Kaggle-Quora"
"YuriyGuts/kaggle-quora-question-pairs" -> "aerdem4/kaggle-quora-dup"
"YuriyGuts/kaggle-quora-question-pairs" -> "zhaoyu87/quora_question_pairs"
"AdityaJ42/Sem6-Labs" -> "pujanm/Chat-IO"
"likejazz/Siamese-LSTM" ["l"="25.619,30.221"]
"aditya1503/Siamese-LSTM" ["l"="25.659,30.207"]
"amansrivastava17/lstm-siamese-text-similarity" ["l"="25.62,30.24"]
"tlatkowski/multihead-siamese-nets" ["l"="25.6,30.243"]
"fionn-mac/Manhattan-LSTM" ["l"="25.589,30.206"]
"MahmoudWahdan/Siamese-Sentence-Similarity" ["l"="25.587,30.231"]
"dhwajraj/deep-siamese-text-similarity" ["l"="25.652,30.228"]
"jx00109/siamese-lstm-for-sentence-similarity" ["l"="25.636,30.202"]
"LuJunru/Sentences_Pair_Similarity_Calculation_Siamese_LSTM" ["l"="25.572,30.217"]
"THTBSE/siamese-lstm-network" ["l"="25.619,30.203"]
"YichenGong/Densely-Interactive-Inference-Network" ["l"="25.782,30.188"]
"YerevaNN/DIIN-in-Keras" ["l"="25.785,30.167"]
"lukecq1231/nli" ["l"="25.763,30.174"]
"taoshen58/DiSAN" ["l"="31.525,31.42"]
"zhiguowang/BiMPM" ["l"="25.787,30.213"]
"erickrf/multiffn-nli" ["l"="25.766,30.192"]
"nyu-mll/multiNLI" ["l"="25.746,30.162"]
"lanwuwei/SPM_toolkit" ["l"="25.793,30.199"]
"shuohangwang/SeqMatchSeq" ["l"="25.855,30.194"]
"hengruo/QANet-pytorch" ["l"="25.94,30.216"]
"NLPLearn/QANet" ["l"="25.928,30.173"]
"andy840314/QANet-pytorch-" ["l"="25.948,30.247"]
"matthew-z/R-net" ["l"="25.924,30.225"]
"jojonki/BiDAF" ["l"="25.958,30.239"]
"kevinduh/san_mrc" ["l"="25.961,30.207"]
"HKUST-KnowComp/R-Net" ["l"="25.909,30.196"]
"lixinsu/RCZoo" ["l"="26.004,30.205"]
"SeanLee97/QANet_dureader" ["l"="26.009,30.185"]
"intfloat/commonsense-rc" ["l"="25.9,30.256"]
"bdhingra/ga-reader" ["l"="25.858,30.233"]
"allenai/document-qa" ["l"="25.941,30.184"]
"momohuang/FusionNet-NLI" ["l"="25.932,30.204"]
"HKUST-KnowComp/MnemonicReader" ["l"="25.952,30.225"]
"thunlp/OpenQA" ["l"="25.934,30.232"]
"BangLiu/QANet-PyTorch" ["l"="25.961,30.259"]
"patil-suraj/question_generation" ["l"="26.007,29.955"]
"teacherpeterpan/Question-Generation-Paper-List" ["l"="26.008,29.976"]
"ramsrigouthamg/Questgen.ai" ["l"="26.009,29.927"]
"KristiyanVachev/Question-Generation" ["l"="25.981,29.953"]
"AMontgomerie/question_generator" ["l"="25.992,29.934"]
"seanie12/Info-HCVAE" ["l"="26.031,29.983"]
"xinyadu/nqg" ["l"="25.977,30.023"]
"seanie12/neural-question-generation" ["l"="25.997,29.983"]
"bloomsburyai/question-generation" ["l"="25.975,29.988"]
"facebookresearch/DPR" ["l"="25.787,29.223"]
"bisheng/Awesome-QG" ["l"="26.043,29.928"]
"danqi/acl2020-openqa-tutorial" ["l"="25.772,29.244"]
"magic282/NQG" ["l"="25.979,30.001"]
"tunib-ai/parallelformers" ["l"="44.437,-15.132"]
"artitw/text2text" ["l"="25.993,29.91"]
"Maluuba/nlg-eval" ["l"="28.316,33.591"]
"icoxfog417/graph-convolution-nlp" ["l"="26.111,30.238"]
"ankit-ai/BertQA-Attention-on-Steroids" ["l"="26.021,30.197"]
"KristiyanVachev/Leaf-Question-Generation" ["l"="25.969,29.913"]
"adityasarvaiya/Automatic_Question_Generation" ["l"="25.948,29.979"]
"indrajithi/genquest" ["l"="25.969,29.976"]
"ujjax/question-generation" ["l"="25.957,29.968"]
"Yifan-Gao/Distractor-Generation-RACE" ["l"="25.952,29.921"]
"GauthierDmn/question_generation" ["l"="25.991,29.995"]
"YuxiXie/SG-Deep-Question-Generation" ["l"="26.031,29.952"]
"sumehta/question-generation" ["l"="25.944,29.964"]
"cdqa-suite/cdQA" ["l"="25.925,30.052"]
"cdqa-suite/cdQA-annotator" ["l"="25.882,30.03"]
"cdqa-suite/cdQA-ui" ["l"="25.908,30.032"]
"kamalkraj/BERT-SQuAD" ["l"="25.952,30.121"]
"Nagakiran1/Extending-Google-BERT-as-Question-and-Answering-model-and-Chatbot" ["l"="25.893,30.013"]
"deepset-ai/COVID-QA" ["l"="25.857,29.981"]
"deepset-ai/FARM" ["l"="29.674,32.546"]
"ymcui/Chinese-RC-Datasets" ["l"="26.056,30.143"]
"l11x0m7/Question_Answering_Models" ["l"="25.859,30.057"]
"renatoviolin/Question-Answering-Albert-Electra" ["l"="29.441,32.33"]
"deepset-ai/haystack" ["l"="29.634,32.485"]
"chiayewken/bert-qa" ["l"="25.949,30.072"]
"facebookresearch/UnsupervisedQA" ["l"="25.999,30.057"]
"WenRichard/QAmodel-for-Retrievalchatbot" ["l"="30.409,28.177"]
"kaushaltrivedi/fast-bert" ["l"="29.766,32.529"]
"seriousran/awesome-qa" ["l"="25.97,30.081"]
"priya-dwivedi/cs224n-Squad-Project" ["l"="25.869,30.116"]
"aswalin/SQuAD" ["l"="25.886,30.12"]
"chrischute/squad" ["l"="25.909,30.109"]
"Steven-Hewitt/QA-with-Tensorflow" ["l"="25.81,30.08"]
"allenai/bi-att-flow" ["l"="25.898,30.169"]
"sachinbiradar9/Question-Answer-Selection" ["l"="25.825,30.062"]
"deepmipt/question_generation" ["l"="25.946,30.006"]
"abisee/cs224n-win18-squad" ["l"="25.853,30.081"]
"gzhami/nlp_qa_project" ["l"="25.834,30.085"]
"andrejonasson/dynamic-coattention-network-plus" ["l"="25.834,30.142"]
"ElizaLo/Question-Answering-based-on-SQuAD" ["l"="25.849,30.098"]
"MurtyShikhar/Question-Answering" ["l"="25.841,30.166"]
"ZhangShiyue/QGforQA" ["l"="26.008,29.996"]
"PrekshaNema25/RefNet-QG" ["l"="25.987,29.971"]
"hitvoice/DrQA" ["l"="25.914,30.182"]
"deepmind/narrativeqa" ["l"="25.938,30.153"]
"mandarjoshi90/triviaqa" ["l"="25.948,30.165"]
"facebookresearch/DrQA" ["l"="30.048,32.596"]
"allenai/deep_qa" ["l"="25.83,30.195"]
"salesforce/cove" ["l"="25.909,30.213"]
"YerevaNN/R-NET-in-Keras" ["l"="25.889,30.191"]
"Maluuba/newsqa" ["l"="25.965,30.109"]
"stanfordnlp/coqa-baselines" ["l"="26.053,30.229"]
"momohuang/FlowQA" ["l"="26.063,30.247"]
"Microsoft/SDNet" ["l"="26.086,30.256"]
"galsang/BiDAF-pytorch" ["l"="25.975,30.201"]
"woshiyyya/DFGN-pytorch" ["l"="26.008,30.251"]
"ymcui/cmrc2019" ["l"="26.078,30.191"]
"kushalj001/pytorch-question-answering" ["l"="26.036,30.132"]
"hotpotqa/hotpot" ["l"="25.996,30.218"]
"huminghao16/MTMSN" ["l"="26.065,30.188"]
"shmsw25/DecompRC" ["l"="26.015,30.241"]
"shuohangwang/comatch" ["l"="25.946,30.288"]
"shiningliang/MRC2018" ["l"="26.048,30.177"]
"jingyihiter/myDuReader" ["l"="26.031,30.177"]
"yanx27/DuReader_QANet_BiDAF" ["l"="26.052,30.188"]
"HandsomeCao/BERT-Dureader" ["l"="26.052,30.161"]
"312shan/rc_tf" ["l"="26.039,30.194"]
"lxwuguang/G-Reader" ["l"="26.092,30.176"]
"danqi/rc-cnn-dailymail" ["l"="25.876,30.217"]
"rkadlec/asreader" ["l"="25.839,30.229"]
"qizhex/RACE_AR_baselines" ["l"="25.913,30.272"]
"thomasmesnard/DeepMind-Teaching-Machines-to-Read-and-Comprehend" ["l"="27.125,34.346"]
"deepmind/rc-data" ["l"="27.103,34.315"]
"carpedm20/attentive-reader-tensorflow" ["l"="27.153,34.393"]
"ymcui/Chinese-RC-Dataset" ["l"="25.843,30.281"]
"mrqa/MRQA-Shared-Task-2019" ["l"="25.984,30.168"]
"shmsw25/qa-hard-em" ["l"="26.004,30.168"]
"alontalmor/MultiQA" ["l"="26.001,30.138"]
"shuohangwang/mprc" ["l"="25.961,30.189"]
"nelson-liu/contextual-repr-analysis" ["l"="29.789,32.309"]
"qipeng/golden-retriever" ["l"="25.995,30.244"]
"robinjia/adversarial-squad" ["l"="25.944,30.101"]
"facebookresearch/SpanBERT" ["l"="29.738,32.534"]
"baidu/DuReader" ["l"="25.966,30.173"]
"allenai/bilm-tf" ["l"="29.994,32.599"]
"thunlp/RCPapers" ["l"="25.98,30.147"]
"abisee/pointer-generator" ["l"="28.347,33.62"]
"minsangkim142/R-net" ["l"="25.885,30.203"]
"facebookresearch/InferSent" ["l"="29.982,32.617"]
"openai/finetune-transformer-lm" ["l"="29.916,32.492"]
"facebook/MemNN" ["l"="27.113,34.332"]
"thunlp/NREPapers" ["l"="30.7,30.942"]
"thunlp/KRLPapers" ["l"="22.967,38.419"]
"thunlp/PLMpapers" ["l"="29.809,32.562"]
"thunlp/SCPapers" ["l"="32.353,30.449"]
"Jiakui/awesome-bert" ["l"="32.129,30.114"]
"basketballandlearn/Dureader-Bert" ["l"="26.036,30.158"]
"xanhho/Reading-Comprehension-Question-Answering-Papers" ["l"="25.996,30.099"]
"dapurv5/awesome-question-answering" ["l"="30.214,31.551"]
"thunlp/NRLPapers" ["l"="21.76,38.706"]
"zcgzcgzcg1/MRC_book" ["l"="26.072,30.311"]
"microsoft/SDNet" ["l"="26.09,30.338"]
"xycforgithub/MultiTask-MRC" ["l"="26.019,30.228"]
"gsarti/covid-papers-browser" ["l"="25.851,29.937"]
"castorini/covidex" ["l"="25.814,29.971"]
"dmis-lab/bioasq-biobert" ["l"="28.953,30.568"]
"castorini/anserini-notebooks" ["l"="25.804,29.116"]
"elcronos/COVID-19" ["l"="25.821,29.945"]
"marshmelloX/dynamic-coattention-network" ["l"="25.853,30.177"]
"mjacar/tensorflow-dcn-plus" ["l"="25.803,30.126"]
"THUDM/CogQA" ["l"="26.035,30.242"]
"rajarshd/Multi-Step-Reasoning" ["l"="26,30.233"]
"INK-USC/KagNet" ["l"="30.011,31.498"]
"THUDM/CogKR" ["l"="26.069,30.283"]
"OceanskySun/GraftNet" ["l"="30.119,31.525"]
"yicheng-w/CommonSenseMultiHopQA" ["l"="26.049,30.265"]
"INK-USC/MHGRN" ["l"="30.035,31.498"]
"autoliuweijie/K-BERT" ["l"="32.206,30.27"]
"malllabiisc/EmbedKGQA" ["l"="30.098,31.502"]
"xwhan/Knowledge-Aware-Reader" ["l"="30.13,31.536"]
"huminghao16/RE3QA" ["l"="26.024,30.213"]
"ATEC2018/deep-siamese-text-similarity" ["l"="32.288,30.05"]
"brmson/dataset-sts" ["l"="29.983,32.715"]
"NTMC-Community/MatchZoo" ["l"="32.113,30.149"]
"pengshuang/Text-Similarity" ["l"="32.221,30.105"]
"HouJP/kaggle-quora-question-pairs" ["l"="25.744,30.238"]
"PrincetonML/SIF" ["l"="29.929,32.708"]
"faneshion/MatchZoo" ["l"="31.986,30.034"]
"nelson-liu/paraphrase-id-tensorflow" ["l"="25.752,30.222"]
"galsang/BIMPM-pytorch" ["l"="25.755,30.207"]
"ijinmao/BiMPM_keras" ["l"="25.778,30.239"]
"bradleypallen/keras-quora-question-pairs" ["l"="25.759,30.248"]
"galsang/ABCNN" ["l"="26.415,29.741"]
"mcrisc/lexdecomp" ["l"="25.798,30.176"]
"unilight/R-NET-in-Tensorflow" ["l"="25.893,30.22"]
"NLPLearn/R-net" ["l"="25.944,30.196"]
"dipta1010/Automatic-Question-Generator" ["l"="25.926,29.974"]
"Maluuba/qgen-workshop" ["l"="25.958,30.05"]
"davidgolub/QuestionGeneration" ["l"="25.96,30.027"]
"yanghoonkim/NQG_ASs2s" ["l"="25.996,30.008"]
"freesunshine0316/MPQG" ["l"="26.004,30.025"]
"victorywys/Learning2Ask_TypedDecoder" ["l"="28.227,29.185"]
"ymcui/cmrc2018" ["l"="26.069,30.169"]
"PaddlePaddle/LARK" ["l"="32.089,30.118"]
"baidu/AnyQ" ["l"="32.03,30.155"]
"brightmart/roberta_zh" ["l"="32.153,30.243"]
"ymcui/Chinese-PreTrained-XLNet" ["l"="32.158,30.183"]
"baidu/knowledge-driven-dialogue" ["l"="28.136,29.059"]
"qqgeogor/kaggle-quora-solution-8th" ["l"="25.714,30.262"]
"chenyuntc/PyTorchText" ["l"="32.024,30.001"]
"YuriyGuts/kaggle-quora-question-pairs" ["l"="25.742,30.288"]
"abhishekkrthakur/is_that_a_duplicate_quora_question" ["l"="25.734,30.257"]
"Wrosinski/Kaggle-Quora" ["l"="25.732,30.274"]
"plantsgo/ijcai-2018" ["l"="21.524,37.185"]
"SpongebBob/Quora-Kaggle" ["l"="25.764,30.284"]
"LittletreeZou/Question-Pairs-Matching" ["l"="32.192,29.88"]
"Magic-Bubble/Zhihu" ["l"="31.984,29.915"]
"nlpdata/strategy" ["l"="25.975,30.269"]
"surbhardwaj/BERT-QnA-Squad_2.0_Finetuned_Model" ["l"="25.924,30.096"]
"cooelf/AwesomeMRC" ["l"="26.047,30.11"]
"cooelf/SG-Net" ["l"="26.02,30.093"]
"rajpurkar/SQuAD-explorer" ["l"="25.924,30.146"]
"kamalkraj/ALBERT-TF2.0" ["l"="32.209,30.042"]
"laddie132/Match-LSTM" ["l"="25.912,30.246"]
"kevinkwl/AoAReader" ["l"="25.932,30.25"]
"obryanlouis/qa" ["l"="25.873,30.236"]
"FudanNLP/UNet" ["l"="25.908,30.314"]
"SparkJiao/SLQA" ["l"="25.934,30.263"]
"DRCKnowledgeTeam/DRCD" ["l"="11.82,-5.127"]
"ymcui/cmrc2017" ["l"="26.116,30.198"]
"ymcui/Cross-Lingual-MRC" ["l"="26.108,30.179"]
"ewrfcas/bert_cn_finetune" ["l"="26.104,30.153"]
"nlpdata/c3" ["l"="26.148,30.145"]
"ymcui/MacBERT" ["l"="32.226,30.312"]
"lonePatient/NeZha_Chinese_PyTorch" ["l"="32.359,30.286"]
"ymcui/expmrc" ["l"="26.144,30.201"]
"SunnyMarkLiu/lic2019-dureader2.0-rank2" ["l"="26.075,30.14"]
"NoneWait/cail2019" ["l"="29.578,29.3"]
"YingZiqiang/LES-MMRC-Summary" ["l"="26.096,30.12"]
"trib-plan/TriB-QA" ["l"="26.078,30.153"]
"eliorc/Medium" ["l"="25.687,30.241"]
"aerdem4/kaggle-quora-dup" ["l"="25.72,30.287"]
"eliorc/node2vec" ["l"="21.832,38.77"]
"xwen99/DuReader-Robust-With-Paddlehub" ["l"="26.112,30.12"]
"ag1988/injecting_numeracy" ["l"="26.183,30.181"]
"llamazing/numnet_plus" ["l"="26.166,30.173"]
"yairf11/MUPPET" ["l"="25.992,30.197"]
"cooelf/SemBERT" ["l"="26.051,30.077"]
"sogou/SogouMRCToolkit" ["l"="26.114,30.074"]
"basketballandlearn/MRC_Competition_Dureader" ["l"="32.474,30.39"]
"songyingxin/MRC-Pytorch" ["l"="26.075,30.072"]
"ShannonAI/mrc-for-flat-nested-ner" ["l"="32.362,30.188"]
"coetaur0/ESIM" ["l"="32.21,30.074"]
"easonnie/semanticRetrievalMRS" ["l"="25.985,30.233"]
"eladsegal/tag-based-multi-span-extraction" ["l"="26.135,30.177"]
"xingdi-eric-yuan/MatchLSTM-PyTorch" ["l"="25.898,30.293"]
"uwnlp/denspi" ["l"="26.004,30.265"]
"facebookresearch/QA-Overlap" ["l"="25.773,29.318"]
"OlavHN/attention-over-attention" ["l"="25.839,30.216"]
"cheng6076/SNLI-attention" ["l"="26.99,34.333"]
"harvardnlp/decomp-attn" ["l"="25.748,30.181"]
"benywon/ReCO" ["l"="26.183,30.136"]
"hackiey/QAnet-pytorch" ["l"="25.952,30.277"]
"SeanLee97/nlp_learning" ["l"="26.096,30.212"]
"ymcui/PERT" ["l"="26.193,30.226"]
"ymcui/LERT" ["l"="26.222,30.222"]
"airaria/TextPruner" ["l"="32.192,30.369"]
"iflytek/VLE" ["l"="26.231,30.251"]
"iflytek/MiniRBT" ["l"="26.235,30.235"]
"ymcui/alpaca.cpp" ["l"="26.215,30.246"]
"easonnie/multiNLI_encoder" ["l"="25.763,30.152"]
"xwzhong/papernote" ["l"="25.73,30.196"]
"plantsgo/Rental-Listing-Inquiries" ["l"="25.672,30.283"]
"qqgeogor/kaggle_quora_benchmark" ["l"="25.712,30.247"]
"sjvasquez/quora-duplicate-questions" ["l"="25.715,30.274"]
"tnmichael309/kaggle-avito-demand-challenge" ["l"="25.688,30.271"]
"thinline72/toxic" ["l"="22.489,35.686"]
"JD-AI-Research-Silicon-Valley/SAE" ["l"="26.027,30.273"]
"yuwfan/HGN" ["l"="26.013,30.28"]
"shmsw25/single-hop-rc" ["l"="26.024,30.258"]
"HsiaoYetGun/ESIM" ["l"="26.416,29.7"]
"lukecq1231/kim" ["l"="25.724,30.153"]
"dallascard/TreeLSTM" ["l"="25.728,30.137"]
"prdwb/bert_hae" ["l"="26.107,30.278"]
"prdwb/attentive_history_selection" ["l"="26.135,30.3"]
"deepnlp-cs599-usc/quac" ["l"="26.091,30.272"]
"recognai/rubrix" ["l"="29.535,32.529"]
"Vamsi995/Paraphrase-Generator" ["l"="29.626,32.258"]
"PrithivirajDamodaran/Parrot_Paraphraser" ["l"="29.57,32.371"]
"PrithivirajDamodaran/Styleformer" ["l"="29.607,32.334"]
"neuspell/neuspell" ["l"="31.564,28.504"]
"PrithivirajDamodaran/Gramformer" ["l"="29.525,32.463"]
"ramsrigouthamg/Paraphrase-any-question-with-T5-Text-To-Text-Transfer-Transformer-" ["l"="29.635,32.236"]
"UKPLab/beir" ["l"="25.827,29.17"]
"erre-quadro/spikex" ["l"="29.456,32.568"]
"liuhuanyong/SiameseSentenceSimilarity" ["l"="32.277,30.098"]
"rgsachin/CoVe" ["l"="25.881,30.256"]
"salesforce/pytorch-qrnn" ["l"="30.115,32.482"]
"lium-lst/nmtpytorch" ["l"="30.073,32.351"]
"jsalt18-sentence-repl/jiant" ["l"="29.802,32.327"]
"zihangdai/mos" ["l"="30.109,32.441"]
"nyu-dl/dl4mt-tutorial" ["l"="30.027,32.338"]
"taolei87/sru" ["l"="30.094,32.518"]
"awslabs/unsupervised-qa" ["l"="26.024,30.007"]
"hy-struggle/ccks_ner" ["l"="26.168,30.073"]
"caishiqing/joint-mrc" ["l"="26.136,30.089"]
"DotaArtist/ccks2020-task3.1" ["l"="26.19,30.063"]
"allenai/allennlp-reading-comprehension-research" ["l"="25.93,30.277"]
"hugochan/RL-based-Graph2Seq-for-NQG" ["l"="25.977,29.939"]
"WING-NUS/SG-Deep-Question-Generation" ["l"="26.024,29.939"]
"yanghoonkim/neural_question_generation" ["l"="26.011,30.007"]
"qjzhzw/Open_QG" ["l"="25.929,29.995"]
"bisheng/QuestionGeneration" ["l"="25.958,29.993"]
"shmsw25/qa-transfer" ["l"="25.922,30.292"]
"SunnyMarkLiu/les-military-mrc-rank7" ["l"="26.123,30.103"]
"GauthierDmn/question_answering" ["l"="25.867,30.093"]
"aswalin/Kaggle" ["l"="25.881,30.094"]
"5hirish/adam_qas" ["l"="25.829,30.108"]
"iamaaditya/neural-paraphrase-generation" ["l"="29.665,32.159"]
"erogol/QuoraDQBaseline" ["l"="25.758,30.266"]
"hugochan/BAMnet" ["l"="30.147,31.518"]
"AkariAsai/learning_to_retrieve_reasoning_paths" ["l"="25.768,29.268"]
"BshoterJ/awesome-kgqa" ["l"="30.133,31.496"]
"BDBC-KG-NLP/QA-Survey" ["l"="32.311,30.293"]
"WenRichard/KBQA-BERT" ["l"="32.355,30.246"]
"wavewangyue/kbqa" ["l"="30.19,31.499"]
"allenai/unifiedqa" ["l"="25.777,29.3"]
"quincyliang/nlp-data-augmentation" ["l"="32.018,30.33"]
"tommccoy1/hans" ["l"="25.7,29.35"]
"freefuiiismyname/G-Reader" ["l"="26.065,30.212"]
"nitishgupta/nmn-drop" ["l"="26.222,30.17"]
"allenai/allennlp-semparse" ["l"="28.629,30.787"]
"plantsgo/kesci_ctrip" ["l"="25.64,30.306"]
"plantsgo/Instacart-Market-Basket-Analysis" ["l"="22.686,37.472"]
"zhoujx4/DuReader-Checklist-BASELINE" ["l"="26.159,30.107"]
"lyj555/LICS2021_MRC" ["l"="26.146,30.115"]
"AdityaJ42/Sem6-Labs" ["l"="26.063,30.107"]
"quabanc/awesome-computer-science" ["l"="26.078,30.108"]
"djunicode/resources" ["l"="26.079,30.092"]
"pujanm/Chat-IO" ["l"="26.064,30.118"]
"facebookresearch/UnsupervisedDecomposition" ["l"="26.039,30.284"]
"chen0423/TF-1.9-cp36-cuda9.2-wheel" ["l"="25.966,30.308"]
"nyu-dl/SearchQA" ["l"="27.362,34.514"]
"karthikncode/nlp-datasets" ["l"="28.166,29.027"]
"ymcui/Eval-on-NN-of-RC" ["l"="25.859,30.21"]
"atulkum/co-attention" ["l"="25.98,30.294"]
"kelayamatoz/BiDAF-PyTorch" ["l"="25.968,30.283"]
"bojone/CCL_CMRC2017" ["l"="26.143,30.217"]
"nschuc/alternating-reader-tf" ["l"="25.833,30.25"]
"BangLiu/QG" ["l"="25.957,29.945"]
"PrekshaNema25/Answerability-Metric" ["l"="26.051,29.982"]
"freefuiiismyname/capsule-mrc" ["l"="26.047,30.207"]
"codalab/codalab-worksheets" ["l"="25.876,30.28"]
"codalab/codalab-cli" ["l"="25.871,30.318"]
"codalab/worksheets-examples" ["l"="25.854,30.315"]
"MLWave/RGF-sklearn" ["l"="22.835,37.473"]
"indrajithi/question_generation" ["l"="25.94,29.948"]
"atbaker/wikipedia-question-generator" ["l"="26.051,29.945"]
"holylovenia/question-answer-generation" ["l"="26.048,29.963"]
"heliumsea/QANet-pytorch" ["l"="25.962,30.296"]
"ankit-ai/SQUAD2.Q-Augmented-Dataset" ["l"="25.962,30.138"]
"facebook/bAbI-tasks" ["l"="27.153,34.348"]
"snakeztc/NeuralDialogPapers" ["l"="28.207,29.01"]
"YerevaNN/Dynamic-memory-networks-in-Theano" ["l"="27.189,34.367"]
"acetylSv/GST-tacotron" ["l"="25.979,30.347"]
"ChenglongChen/Kaggle_HomeDepot" ["l"="22.744,37.392"]
"kaz-Anova/StackNet" ["l"="22.765,37.443"]
"emanuele/kaggle_pbr" ["l"="22.765,37.392"]
"ChenglongChen/Kaggle_CrowdFlower" ["l"="22.718,37.377"]
"abhishekkrthakur/greedyFeatureSelection" ["l"="25.692,30.3"]
"raoariel/NLP-Question-Answer-System" ["l"="25.787,30.096"]
"explosion/spacy-dev-resources" ["l"="29.648,33.026"]
"bwbaugh/causeofwhy" ["l"="25.779,30.074"]
"brmson/yodaqa" ["l"="30.216,31.584"]
"sujitpal/dl-models-for-qa" ["l"="30.626,28.079"]
"white127/insuranceQA-cnn-lstm" ["l"="30.574,28.087"]
"vinhkhuc/MemN2N-babi-python" ["l"="27.175,34.358"]
"rajarshd/TextKBQA" ["l"="30.198,31.535"]
"aseveryn/deep-qa" ["l"="26.325,29.676"]
"bsnsk/QA" ["l"="25.81,30.222"]
"uwnlp/piqa" ["l"="26.017,30.318"]
"FightCOVID19/core" ["l"="25.811,29.921"]
"FightCOVID19/webapp" ["l"="25.797,29.931"]
"haonan-li/MultiSpanQA" ["l"="26.164,30.191"]
"antdlx/aic18_rc" ["l"="26.039,30.219"]
"libowen2121/SNLI-decomposable-attention" ["l"="25.712,30.17"]
"NoviScl/BERT-RACE" ["l"="25.946,30.344"]
"tosmaster/bert-race" ["l"="25.948,30.37"]
"nyu-dl/dl4marco-bert" ["l"="25.857,29.12"]
"chrischute/squad-transformer" ["l"="25.888,30.077"]
"jind11/SQuAD-QA-System" ["l"="25.81,30.146"]
"syeddanish41/kaggle-question-pairs-quora" ["l"="25.72,30.303"]
"agusgun/qag-web" ["l"="26.08,29.953"]
"ranqiu92/NumNet" ["l"="26.199,30.161"]
"djunicode/DJ-Comps-Book-Exchange" ["l"="26.095,30.071"]
"wjdghks950/Hierarchical-Graph-Network-for-Multi-hop-Question-Answering-HGN-" ["l"="26.024,30.302"]
"minsangkim142/Reading-Comprehension-without-RNNs" ["l"="25.924,30.192"]
"minsangkim142/QANet" ["l"="25.853,30.255"]
"mingdachen/gated-attention-reader" ["l"="25.827,30.27"]
"IndexFziQ/KMRC-Papers" ["l"="26.1,30.135"]
"DhruvBhagadia/InterviewBit" ["l"="26.1,30.095"]
"xueyouluo/fsauor2018" ["l"="32.019,29.947"]
"yuhaitao1994/AIchallenger2018_MachineReadingComprehension" ["l"="26.076,30.231"]
"Alan-Lee123/answer-selection" ["l"="25.803,30.041"]
"hohoCode/textSimilarityConvNet" ["l"="25.624,30.174"]
"renatoviolin/xlnet" ["l"="25.898,30.362"]
"qiaoguan/Kesci-ctrip-room-prediction" ["l"="25.616,30.324"]
"OsloAI/personalized-matching" ["l"="21.516,37.253"]
"bdhingra/quasar" ["l"="25.984,30.123"]
"ShuyangCao/open-ended_question_ontology" ["l"="26.067,29.912"]
"BangLiu/ACS-QG" ["l"="26.048,29.897"]
"zycdev/AISO" ["l"="25.999,30.29"]
"facebookresearch/multihop_dense_retrieval" ["l"="25.796,29.289"]
"marquezo/qanet-impl" ["l"="25.942,30.308"]
"hackiey/torcheras" ["l"="25.954,30.31"]
"howardyclo/Kaggle-Quora-Question-Pairs" ["l"="25.694,30.323"]
"zhaoyu87/quora_question_pairs" ["l"="25.732,30.313"]
"yuhsinliu1993/Quora_QuestionPairs_DL" ["l"="25.714,30.329"]
"exe1023/FusionNet" ["l"="25.857,30.271"]
"marshmelloX/attention-over-attention" ["l"="25.814,30.241"]
"lc222/attention-over-attention-tf-QA" ["l"="25.81,30.257"]
"nusnlp/paraphrasing-squad" ["l"="25.929,30.08"]
"pramodkaushik/acl18_results" ["l"="25.913,30.077"]
"marcotcr/sears" ["l"="29.58,32.226"]
"jihunchoi/shortcut-stacked-encoder-pytorch" ["l"="25.748,30.129"]
}